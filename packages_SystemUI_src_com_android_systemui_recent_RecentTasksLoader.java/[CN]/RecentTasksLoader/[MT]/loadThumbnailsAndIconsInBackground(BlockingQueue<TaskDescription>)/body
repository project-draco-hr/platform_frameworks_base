{
  mThumbnailLoader=new AsyncTask<Void,TaskDescription,Void>(){
    @Override protected void onProgressUpdate(    TaskDescription... values){
      if (!isCancelled()) {
        TaskDescription td=values[0];
        if (td.isNull()) {
          mState=State.LOADED;
        }
 else {
          if (mRecentsPanel != null) {
            mRecentsPanel.onTaskThumbnailLoaded(td);
          }
        }
      }
    }
    @Override protected Void doInBackground(    Void... params){
      final int origPri=Process.getThreadPriority(Process.myTid());
      Process.setThreadPriority(Process.THREAD_PRIORITY_BACKGROUND);
      while (true) {
        if (isCancelled()) {
          break;
        }
        TaskDescription td=null;
        while (td == null) {
          try {
            td=tasksWaitingForThumbnails.take();
          }
 catch (          InterruptedException e) {
          }
        }
        if (td.isNull()) {
          publishProgress(td);
          break;
        }
        loadThumbnailAndIcon(td);
        publishProgress(td);
      }
      Process.setThreadPriority(origPri);
      return null;
    }
  }
;
  mThumbnailLoader.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
}
