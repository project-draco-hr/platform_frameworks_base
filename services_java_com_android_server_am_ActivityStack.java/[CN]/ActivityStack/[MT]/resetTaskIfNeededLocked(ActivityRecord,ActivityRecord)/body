{
  boolean forceReset=(newActivity.info.flags & ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH) != 0;
  if (ACTIVITY_INACTIVE_RESET_TIME > 0 && taskTop.task.getInactiveDuration() > ACTIVITY_INACTIVE_RESET_TIME) {
    if ((newActivity.info.flags & ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE) == 0) {
      forceReset=true;
    }
  }
  final TaskRecord task=taskTop.task;
  boolean taskFound=false;
  ActivityOptions topOptions=null;
  int reparentInsertionPoint=-1;
  for (int i=mTaskHistory.size() - 1; i >= 0; --i) {
    final TaskRecord targetTask=mTaskHistory.get(i);
    if (targetTask == task) {
      topOptions=resetTargetTaskIfNeededLocked(task,forceReset);
      taskFound=true;
    }
 else {
      reparentInsertionPoint=resetAffinityTaskIfNeededLocked(targetTask,task,taskFound,forceReset,reparentInsertionPoint);
    }
  }
  int taskNdx=mTaskHistory.indexOf(task);
  do {
    taskTop=mTaskHistory.get(taskNdx--).getTopActivity();
  }
 while (taskTop == null && taskNdx >= 0);
  if (topOptions != null) {
    if (taskTop != null) {
      if (VALIDATE_TASK_REPLACE)       Slog.w(TAG,"newResetTaskIfNeededLocked: would call updateOptionsLocked " + topOptions);
      taskTop.updateOptionsLocked(topOptions);
    }
 else {
      if (VALIDATE_TASK_REPLACE)       Slog.w(TAG,"newResetTaskIfNeededLocked: would call " + topOptions + " abort");
      topOptions.abort();
    }
  }
  return taskTop;
}
