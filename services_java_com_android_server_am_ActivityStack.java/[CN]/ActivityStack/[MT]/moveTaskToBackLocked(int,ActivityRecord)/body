{
  Slog.i(TAG,"moveTaskToBack: " + task);
  if (mStackSupervisor.isFrontStack(this) && mService.mController != null) {
    ActivityRecord next=topRunningActivityLocked(null,task);
    if (next == null) {
      next=topRunningActivityLocked(null,0);
    }
    if (next != null) {
      boolean moveOK=true;
      try {
        moveOK=mService.mController.activityResuming(next.packageName);
      }
 catch (      RemoteException e) {
        mService.mController=null;
        Watchdog.getInstance().setActivityController(null);
      }
      if (!moveOK) {
        return false;
      }
    }
  }
  if (DEBUG_TRANSITION)   Slog.v(TAG,"Prepare to back transition: task=" + task);
  final TaskRecord tr=taskForIdLocked(task);
  if (tr == null) {
    return false;
  }
  mTaskHistory.remove(tr);
  mTaskHistory.add(0,tr);
  ActivityRecord lastActivity=null;
  int numTasks=mTaskHistory.size();
  int taskNdx;
  for (taskNdx=numTasks - 1; taskNdx >= 1; --taskNdx) {
    final ArrayList<ActivityRecord> activities=mTaskHistory.get(taskNdx).mActivities;
    int activityNdx;
    for (activityNdx=activities.size() - 1; activityNdx >= 0; --activityNdx) {
      final ActivityRecord r=activities.get(activityNdx);
      if (r.mLaunchHomeTaskNext) {
        break;
      }
      if (taskNdx == 1 && activityNdx == 0) {
        lastActivity=r;
      }
    }
    if (activityNdx >= 0) {
      break;
    }
  }
  if (lastActivity != null) {
    lastActivity.mLaunchHomeTaskNext=true;
  }
  if (reason != null && (reason.intent.getFlags() & Intent.FLAG_ACTIVITY_NO_ANIMATION) != 0) {
    mWindowManager.prepareAppTransition(AppTransition.TRANSIT_NONE,false);
    ActivityRecord r=topRunningActivityLocked(null);
    if (r != null) {
      mNoAnimActivities.add(r);
    }
  }
 else {
    mWindowManager.prepareAppTransition(AppTransition.TRANSIT_TASK_TO_BACK,false);
  }
  mWindowManager.moveTaskToBottom(task);
  if (VALIDATE_TOKENS) {
    validateAppTokensLocked();
  }
  if (numTasks <= 1 || (mResumedActivity != null && mResumedActivity.task == tr && mResumedActivity.mLaunchHomeTaskNext)) {
    mResumedActivity.mLaunchHomeTaskNext=false;
    return mStackSupervisor.resumeHomeActivity(null);
  }
  mStackSupervisor.resumeTopActivitiesLocked();
  return true;
}
