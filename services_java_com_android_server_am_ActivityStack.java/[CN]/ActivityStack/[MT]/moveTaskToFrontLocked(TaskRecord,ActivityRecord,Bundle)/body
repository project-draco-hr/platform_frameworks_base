{
  if (DEBUG_SWITCH)   Slog.v(TAG,"moveTaskToFront: " + tr);
  final int task=tr.taskId;
  int top=mHistory.size() - 1;
  if (top < 0 || (mHistory.get(top)).task.taskId == task) {
    if (reason != null && (reason.intent.getFlags() & Intent.FLAG_ACTIVITY_NO_ANIMATION) != 0) {
      ActivityOptions.abort(options);
    }
 else {
      updateTransitLocked(AppTransition.TRANSIT_TASK_TO_FRONT,options);
    }
    return;
  }
  ArrayList<IBinder> moved=new ArrayList<IBinder>();
  top=mHistory.size() - 1;
  int pos=top;
  while (pos >= 0) {
    ActivityRecord r=mHistory.get(pos);
    if (localLOGV)     Slog.v(TAG,"At " + pos + " ckp "+ r.task+ ": "+ r);
    if (r.task.taskId == task) {
      if (localLOGV)       Slog.v(TAG,"Removing and adding at " + top);
      if (DEBUG_ADD_REMOVE) {
        RuntimeException here=new RuntimeException("here");
        here.fillInStackTrace();
        Slog.i(TAG,"Removing and adding activity " + r + " to stack at "+ top,here);
      }
      mHistory.remove(pos);
      mHistory.add(top,r);
      moved.add(0,r.appToken);
      top--;
    }
    pos--;
  }
  if (DEBUG_TRANSITION)   Slog.v(TAG,"Prepare to front transition: task=" + tr);
  if (reason != null && (reason.intent.getFlags() & Intent.FLAG_ACTIVITY_NO_ANIMATION) != 0) {
    mService.mWindowManager.prepareAppTransition(AppTransition.TRANSIT_NONE,false);
    ActivityRecord r=topRunningActivityLocked(null);
    if (r != null) {
      mNoAnimActivities.add(r);
    }
    ActivityOptions.abort(options);
  }
 else {
    updateTransitLocked(AppTransition.TRANSIT_TASK_TO_FRONT,options);
  }
  mService.mWindowManager.moveAppTokensToTop(moved);
  if (VALIDATE_TOKENS) {
    validateAppTokensLocked();
  }
  mService.mWindowManager.moveTaskToTop(task);
  finishTaskMoveLocked(task);
  EventLog.writeEvent(EventLogTags.AM_TASK_TO_FRONT,tr.userId,task);
}
