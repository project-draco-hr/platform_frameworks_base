{
  final TaskAccessInfo thumbs=new TaskAccessInfo();
  final ArrayList<ActivityRecord> activities=task.mActivities;
  final int NA=activities.size();
  int j=0;
  ThumbnailHolder holder=null;
  while (j < NA) {
    ActivityRecord ar=activities.get(j);
    if (!ar.finishing) {
      thumbs.root=ar;
      thumbs.rootIndex=j;
      holder=ar.thumbHolder;
      if (holder != null) {
        thumbs.mainThumbnail=holder.lastThumbnail;
      }
      j++;
      break;
    }
    j++;
  }
  if (j >= NA) {
    return thumbs;
  }
  ArrayList<TaskAccessInfo.SubTask> subtasks=new ArrayList<TaskAccessInfo.SubTask>();
  thumbs.subtasks=subtasks;
  while (j < NA) {
    ActivityRecord ar=activities.get(j);
    j++;
    if (ar.finishing) {
      continue;
    }
    if (ar.thumbHolder != holder && holder != null) {
      thumbs.numSubThumbbails++;
      holder=ar.thumbHolder;
      TaskAccessInfo.SubTask sub=new TaskAccessInfo.SubTask();
      sub.holder=holder;
      sub.activity=ar;
      sub.index=j - 1;
      subtasks.add(sub);
    }
  }
  if (thumbs.numSubThumbbails > 0) {
    thumbs.retriever=new IThumbnailRetriever.Stub(){
      @Override public Bitmap getThumbnail(      int index){
        if (index < 0 || index >= thumbs.subtasks.size()) {
          return null;
        }
        TaskAccessInfo.SubTask sub=thumbs.subtasks.get(index);
        ActivityRecord resumed=mResumedActivity;
        if (resumed != null && resumed.thumbHolder == sub.holder) {
          return resumed.stack.screenshotActivities(resumed);
        }
        return sub.holder.lastThumbnail;
      }
    }
;
  }
  return thumbs;
}
