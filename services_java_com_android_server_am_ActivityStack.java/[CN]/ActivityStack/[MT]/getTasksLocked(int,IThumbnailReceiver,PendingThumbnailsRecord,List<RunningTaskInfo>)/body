{
  ActivityRecord topRecord=null;
  for (int taskNdx=mTaskHistory.size() - 1; maxNum > 0 && taskNdx >= 0; --maxNum, --taskNdx) {
    final TaskRecord task=mTaskHistory.get(taskNdx);
    ActivityRecord r=null;
    ActivityRecord top=null;
    int numActivities=0;
    int numRunning=0;
    final ArrayList<ActivityRecord> activities=task.mActivities;
    for (int activityNdx=activities.size() - 1; activityNdx >= 0; --activityNdx) {
      r=activities.get(activityNdx);
      if (top == null || (top.state == ActivityState.INITIALIZING)) {
        top=r;
        numActivities=numRunning=0;
      }
      numActivities++;
      if (r.app != null && r.app.thread != null) {
        numRunning++;
      }
      if (localLOGV)       Slog.v(TAG,r.intent.getComponent().flattenToShortString() + ": task=" + r.task);
    }
    RunningTaskInfo ci=new RunningTaskInfo();
    ci.id=task.taskId;
    ci.baseActivity=r.intent.getComponent();
    ci.topActivity=top.intent.getComponent();
    if (top.thumbHolder != null) {
      ci.description=top.thumbHolder.lastDescription;
    }
    ci.numActivities=numActivities;
    ci.numRunning=numRunning;
    if (receiver != null) {
      if (localLOGV)       Slog.v(TAG,"State=" + top.state + "Idle="+ top.idle+ " app="+ top.app+ " thr="+ (top.app != null ? top.app.thread : null));
      if (top.state == ActivityState.RESUMED || top.state == ActivityState.PAUSING) {
        if (top.idle && top.app != null && top.app.thread != null) {
          topRecord=top;
        }
 else {
          top.thumbnailNeeded=true;
        }
      }
      pending.pendingRecords.add(top);
    }
    list.add(ci);
  }
  return topRecord;
}
