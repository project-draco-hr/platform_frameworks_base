{
  if (DEBUG_SWITCH)   Slog.d(TAG,"Stopping: " + r);
  if ((r.intent.getFlags() & Intent.FLAG_ACTIVITY_NO_HISTORY) != 0 || (r.info.flags & ActivityInfo.FLAG_NO_HISTORY) != 0) {
    if (!r.finishing) {
      requestFinishActivityLocked(r.appToken,Activity.RESULT_CANCELED,null,"no-history");
    }
  }
  if (r.app != null && r.app.thread != null) {
    if (mMainStack) {
      if (mService.mFocusedActivity == r) {
        mService.setFocusedActivityLocked(topRunningActivityLocked(null));
      }
    }
    r.resumeKeyDispatchingLocked();
    try {
      r.stopped=false;
      if (DEBUG_STATES)       Slog.v(TAG,"Moving to STOPPING: " + r + " (stop requested)");
      r.state=ActivityState.STOPPING;
      if (DEBUG_VISBILITY)       Slog.v(TAG,"Stopping visible=" + r.visible + " for "+ r);
      if (!r.visible) {
        mService.mWindowManager.setAppVisibility(r.appToken,false);
      }
      r.app.thread.scheduleStopActivity(r.appToken,r.visible,r.configChangeFlags);
      if (mService.isSleeping()) {
        r.setSleeping(true);
      }
      Message msg=mHandler.obtainMessage(STOP_TIMEOUT_MSG);
      msg.obj=r;
      mHandler.sendMessageDelayed(msg,STOP_TIMEOUT);
    }
 catch (    Exception e) {
      Slog.w(TAG,"Exception thrown during pause",e);
      r.stopped=true;
      if (DEBUG_STATES)       Slog.v(TAG,"Stop failed; moving to STOPPED: " + r);
      r.state=ActivityState.STOPPED;
      if (r.configDestroy) {
        destroyActivityLocked(r,true,false,"stop-except");
      }
    }
  }
}
