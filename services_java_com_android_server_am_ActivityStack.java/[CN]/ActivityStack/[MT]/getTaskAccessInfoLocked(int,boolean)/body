{
  ActivityRecord resumed=mResumedActivity;
  final TaskAccessInfo thumbs=new TaskAccessInfo();
  final int NA=mHistory.size();
  int j=0;
  ThumbnailHolder holder=null;
  while (j < NA) {
    ActivityRecord ar=mHistory.get(j);
    if (!ar.finishing && ar.task.taskId == taskId) {
      holder=ar.thumbHolder;
      break;
    }
    j++;
  }
  if (j >= NA) {
    return thumbs;
  }
  thumbs.root=mHistory.get(j);
  thumbs.rootIndex=j;
  ArrayList<TaskAccessInfo.SubTask> subtasks=new ArrayList<TaskAccessInfo.SubTask>();
  thumbs.subtasks=subtasks;
  ActivityRecord lastActivity=null;
  while (j < NA) {
    ActivityRecord ar=mHistory.get(j);
    j++;
    if (ar.finishing) {
      continue;
    }
    if (ar.task.taskId != taskId) {
      break;
    }
    lastActivity=ar;
    if (ar.thumbHolder != holder && holder != null) {
      thumbs.numSubThumbbails++;
      holder=ar.thumbHolder;
      TaskAccessInfo.SubTask sub=new TaskAccessInfo.SubTask();
      sub.thumbnail=holder.lastThumbnail;
      sub.activity=ar;
      sub.index=j - 1;
      subtasks.add(sub);
    }
  }
  if (lastActivity != null && subtasks.size() > 0) {
    if (resumed == lastActivity) {
      TaskAccessInfo.SubTask sub=subtasks.get(subtasks.size() - 1);
      sub.thumbnail=lastActivity.stack.screenshotActivities(lastActivity);
    }
  }
  if (thumbs.numSubThumbbails > 0) {
    thumbs.retriever=new IThumbnailRetriever.Stub(){
      public Bitmap getThumbnail(      int index){
        if (index < 0 || index >= thumbs.subtasks.size()) {
          return null;
        }
        return thumbs.subtasks.get(index).thumbnail;
      }
    }
;
  }
  return thumbs;
}
