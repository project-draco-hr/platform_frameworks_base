{
  if (!mService.isSleeping()) {
    return;
  }
  if (!mSleepTimeout) {
    if (mResumedActivity != null) {
      if (DEBUG_PAUSE)       Slog.v(TAG,"Sleep needs to pause " + mResumedActivity);
      if (DEBUG_USER_LEAVING)       Slog.v(TAG,"Sleep => pause with userLeaving=false");
      startPausingLocked(false,true);
      return;
    }
    if (mPausingActivity != null) {
      if (DEBUG_PAUSE)       Slog.v(TAG,"Sleep still waiting to pause " + mPausingActivity);
      return;
    }
    if (mStoppingActivities.size() > 0) {
      if (DEBUG_PAUSE)       Slog.v(TAG,"Sleep still need to stop " + mStoppingActivities.size() + " activities");
      scheduleIdleLocked();
      return;
    }
    ensureActivitiesVisibleLocked(null,0);
    if (VALIDATE_TASK_REPLACE) {
      verifyActivityRecords(true);
    }
    for (int taskNdx=mTaskHistory.size() - 1; taskNdx >= 0; --taskNdx) {
      final ArrayList<ActivityRecord> activities=mTaskHistory.get(taskNdx).mActivities;
      for (int activityNdx=activities.size() - 1; activityNdx >= 0; --activityNdx) {
        final ActivityRecord r=activities.get(activityNdx);
        if (r.state == ActivityState.STOPPING || r.state == ActivityState.STOPPED) {
          r.setSleeping(true);
        }
      }
    }
    if (mGoingToSleepActivities.size() > 0) {
      if (DEBUG_PAUSE)       Slog.v(TAG,"Sleep still need to sleep " + mGoingToSleepActivities.size() + " activities");
      return;
    }
  }
  mHandler.removeMessages(SLEEP_TIMEOUT_MSG);
  if (mGoingToSleep.isHeld()) {
    mGoingToSleep.release();
  }
  if (mService.mShuttingDown) {
    mService.notifyAll();
  }
}
