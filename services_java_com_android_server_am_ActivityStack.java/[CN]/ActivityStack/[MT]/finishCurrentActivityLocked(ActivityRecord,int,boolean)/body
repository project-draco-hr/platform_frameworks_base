{
  if (mode == FINISH_AFTER_VISIBLE && r.nowVisible) {
    if (!mStoppingActivities.contains(r)) {
      mStoppingActivities.add(r);
      if (mStoppingActivities.size() > 3) {
        scheduleIdleLocked();
      }
 else {
        checkReadyForSleepLocked();
      }
    }
    if (DEBUG_STATES)     Slog.v(TAG,"Moving to STOPPING: " + r + " (finish requested)");
    r.state=ActivityState.STOPPING;
    if (oomAdj) {
      mService.updateOomAdjLocked();
    }
    return r;
  }
  mStoppingActivities.remove(r);
  mGoingToSleepActivities.remove(r);
  mWaitingVisibleActivities.remove(r);
  if (mResumedActivity == r) {
    mResumedActivity=null;
  }
  final ActivityState prevState=r.state;
  if (DEBUG_STATES)   Slog.v(TAG,"Moving to FINISHING: " + r);
  r.state=ActivityState.FINISHING;
  if (mode == FINISH_IMMEDIATELY || prevState == ActivityState.STOPPED || prevState == ActivityState.INITIALIZING) {
    boolean activityRemoved=destroyActivityLocked(r,true,oomAdj,"finish-imm");
    if (activityRemoved) {
      resumeTopActivityLocked(null);
    }
    return activityRemoved ? null : r;
  }
  if (localLOGV)   Slog.v(TAG,"Enqueueing pending finish: " + r);
  mFinishingActivities.add(r);
  resumeTopActivityLocked(null);
  return r;
}
