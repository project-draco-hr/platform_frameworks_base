{
synchronized (this) {
    if (mStrings != null) {
      CharSequence res=mStrings[idx];
      if (res != null) {
        return res;
      }
    }
 else     if (mSparseStrings != null) {
      CharSequence res=mSparseStrings.get(idx);
      if (res != null) {
        return res;
      }
    }
 else {
      final int num=nativeGetSize(mNative);
      if (mUseSparse && num > 250) {
        mSparseStrings=new SparseArray<CharSequence>();
      }
 else {
        mStrings=new CharSequence[num];
      }
    }
    String str=nativeGetString(mNative,idx);
    CharSequence res=str;
    int[] style=nativeGetStyle(mNative,idx);
    if (localLOGV)     Log.v(TAG,"Got string: " + str);
    if (localLOGV)     Log.v(TAG,"Got styles: " + style);
    if (style != null) {
      if (mStyleIDs == null) {
        mStyleIDs=new StyleIDs();
        mStyleIDs.boldId=nativeIndexOfString(mNative,"b");
        mStyleIDs.italicId=nativeIndexOfString(mNative,"i");
        mStyleIDs.underlineId=nativeIndexOfString(mNative,"u");
        mStyleIDs.ttId=nativeIndexOfString(mNative,"tt");
        mStyleIDs.bigId=nativeIndexOfString(mNative,"big");
        mStyleIDs.smallId=nativeIndexOfString(mNative,"small");
        mStyleIDs.supId=nativeIndexOfString(mNative,"sup");
        mStyleIDs.subId=nativeIndexOfString(mNative,"sub");
        mStyleIDs.strikeId=nativeIndexOfString(mNative,"strike");
        mStyleIDs.listItemId=nativeIndexOfString(mNative,"li");
        if (localLOGV)         Log.v(TAG,"BoldId=" + mStyleIDs.boldId + ", ItalicId="+ mStyleIDs.italicId+ ", UnderlineId="+ mStyleIDs.underlineId);
      }
      res=applyStyles(str,style,mStyleIDs);
    }
    if (mStrings != null)     mStrings[idx]=res;
 else     mSparseStrings.put(idx,res);
    return res;
  }
}
