{
  final int menuIndex=findIndexOfAddedMenu(menu);
  if (menuIndex < 0) {
    return;
  }
  final int nextMenuIndex=menuIndex + 1;
  if (nextMenuIndex < mAddedMenus.size()) {
    final CascadingMenuInfo info=mAddedMenus.get(nextMenuIndex);
    info.window.setExitTransition(null);
    info.window.setAnimationStyle(0);
    info.menu.close(false);
  }
  final CascadingMenuInfo info=mAddedMenus.remove(menuIndex);
  info.menu.removeMenuPresenter(this);
  info.window.dismiss();
  final int count=mAddedMenus.size();
  if (count > 0) {
    mLastPosition=mAddedMenus.get(count - 1).position;
  }
 else {
    mLastPosition=getInitialMenuPosition();
  }
  if (count == 0 || allMenusAreClosing) {
    dismiss();
    if (mPresenterCallback != null) {
      mPresenterCallback.onCloseMenu(menu,true);
    }
    if (mTreeObserver != null) {
      if (mTreeObserver.isAlive()) {
        mTreeObserver.removeGlobalOnLayoutListener(mGlobalLayoutListener);
      }
      mTreeObserver=null;
    }
    mShownAnchorView.removeOnAttachStateChangeListener(mAttachStateChangeListener);
    mOnDismissListener.onDismiss();
  }
}
