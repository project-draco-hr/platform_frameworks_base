{
  int y=(((mRowHeight + mMiniDayNumberTextSize) / 2) - DAY_SEPARATOR_WIDTH) + mMonthHeaderSize;
  int dayWidthHalf=(mWidth - mPadding * 2) / (mNumDays * 2);
  int j=findDayOffset();
  for (int day=1; day <= mNumCells; day++) {
    int x=(2 * j + 1) * dayWidthHalf + mPadding;
    if (mSelectedDay == day) {
      canvas.drawCircle(x,y - (mMiniDayNumberTextSize / 3),mDaySelectedCircleSize,mDayNumberSelectedPaint);
    }
    if (mHasToday && mToday == day) {
      mDayNumberPaint.setColor(mSelectedDayColor);
    }
 else {
      mDayNumberPaint.setColor(mNormalTextColor);
    }
    final Paint paint=(day < mEnabledDayStart || day > mEnabledDayEnd) ? mDayNumberDisabledPaint : mDayNumberPaint;
    canvas.drawText(String.format("%d",day),x,y,paint);
    j++;
    if (j == mNumDays) {
      j=0;
      y+=mRowHeight;
    }
  }
}
