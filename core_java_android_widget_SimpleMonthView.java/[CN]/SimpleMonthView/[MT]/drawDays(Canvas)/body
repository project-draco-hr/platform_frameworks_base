{
  final int dayWidthHalf=(mWidth - mPadding * 2) / (mNumDays * 2);
  int y=(((mRowHeight + mDayTextSize) / 2) - DAY_SEPARATOR_WIDTH) + mMonthHeaderHeight;
  int j=findDayOffset();
  for (int day=1; day <= mNumCells; day++) {
    final int x=(2 * j + 1) * dayWidthHalf + mPadding;
    int stateMask=0;
    if (day >= mEnabledDayStart && day <= mEnabledDayEnd) {
      stateMask|=StateSet.VIEW_STATE_ENABLED;
    }
    if (mActivatedDay == day) {
      stateMask|=StateSet.VIEW_STATE_ACTIVATED;
      canvas.drawCircle(x,y - (mDayTextSize / 3),mRowHeight / 2,mDayBackgroundPaint);
    }
    final int[] stateSet=StateSet.get(stateMask);
    final int dayTextColor=mDayTextColor.getColorForState(stateSet,0);
    mDayPaint.setColor(dayTextColor);
    final boolean isDayToday=mHasToday && mToday == day;
    mDayPaint.setFakeBoldText(isDayToday);
    canvas.drawText(String.format("%d",day),x,y,mDayPaint);
    j++;
    if (j == mNumDays) {
      j=0;
      y+=mRowHeight;
    }
  }
}
