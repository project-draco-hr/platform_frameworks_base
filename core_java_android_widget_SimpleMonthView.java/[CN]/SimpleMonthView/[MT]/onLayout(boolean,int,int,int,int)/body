{
  if (!changed) {
    return;
  }
  final int w=right - left;
  final int h=bottom - top;
  final int paddingLeft=getPaddingLeft();
  final int paddingTop=getPaddingTop();
  final int paddingRight=getPaddingRight();
  final int paddingBottom=getPaddingBottom();
  final int paddedRight=w - paddingRight;
  final int paddedBottom=h - paddingBottom;
  final int paddedWidth=paddedRight - paddingLeft;
  final int paddedHeight=paddedBottom - paddingTop;
  if (paddedWidth == mPaddedWidth || paddedHeight == mPaddedHeight) {
    return;
  }
  mPaddedWidth=paddedWidth;
  mPaddedHeight=paddedHeight;
  final int measuredPaddedHeight=getMeasuredHeight() - paddingTop - paddingBottom;
  final float scaleH=paddedHeight / (float)measuredPaddedHeight;
  final int monthHeight=(int)(mDesiredMonthHeight * scaleH);
  final int cellWidth=mPaddedWidth / DAYS_IN_WEEK;
  mMonthHeight=monthHeight;
  mDayOfWeekHeight=(int)(mDesiredDayOfWeekHeight * scaleH);
  mDayHeight=(int)(mDesiredDayHeight * scaleH);
  mCellWidth=cellWidth;
  final int maxSelectorWidth=cellWidth / 2 + Math.min(paddingLeft,paddingRight);
  final int maxSelectorHeight=mDayHeight / 2 + paddingBottom;
  mDaySelectorRadius=Math.min(mDesiredDaySelectorRadius,Math.min(maxSelectorWidth,maxSelectorHeight));
  final Drawable prevDrawable=mPrevDrawable;
  if (prevDrawable != null) {
    final int dW=prevDrawable.getIntrinsicWidth();
    final int dH=prevDrawable.getIntrinsicHeight();
    final int iconTop=(monthHeight - dH) / 2;
    final int iconLeft=(cellWidth - dW) / 2;
    prevDrawable.setBounds(iconLeft,iconTop,iconLeft + dW,iconTop + dH);
    mPrevHitArea.set(0,0,paddingLeft + cellWidth,paddingTop + monthHeight);
  }
  final Drawable nextDrawable=mNextDrawable;
  if (nextDrawable != null) {
    final int dW=nextDrawable.getIntrinsicWidth();
    final int dH=nextDrawable.getIntrinsicHeight();
    final int iconTop=(monthHeight - dH) / 2;
    final int iconRight=paddedWidth - (cellWidth - dW) / 2;
    nextDrawable.setBounds(iconRight - dW,iconTop,iconRight,iconTop + dH);
    mNextHitArea.set(paddedRight - cellWidth,0,w,paddingTop + monthHeight);
  }
  mTouchHelper.invalidateRoot();
}
