{
  int count=0, s=0, a;
  while (count < utfSize) {
    if ((out[s]=(char)in[offset + count++]) < '\u0080') {
      s++;
    }
 else     if (((a=out[s]) & 0xe0) == 0xc0) {
      if (count >= utfSize) {
        throw new UTFDataFormatException("bad second byte at " + count);
      }
      int b=in[offset + count++];
      if ((b & 0xC0) != 0x80) {
        throw new UTFDataFormatException("bad second byte at " + (count - 1));
      }
      out[s++]=(char)(((a & 0x1F) << 6) | (b & 0x3F));
    }
 else     if ((a & 0xf0) == 0xe0) {
      if (count + 1 >= utfSize) {
        throw new UTFDataFormatException("bad third byte at " + (count + 1));
      }
      int b=in[offset + count++];
      int c=in[offset + count++];
      if (((b & 0xC0) != 0x80) || ((c & 0xC0) != 0x80)) {
        throw new UTFDataFormatException("bad second or third byte at " + (count - 2));
      }
      out[s++]=(char)(((a & 0x0F) << 12) | ((b & 0x3F) << 6) | (c & 0x3F));
    }
 else {
      throw new UTFDataFormatException("bad byte at " + (count - 1));
    }
  }
  return new String(out,0,s);
}
