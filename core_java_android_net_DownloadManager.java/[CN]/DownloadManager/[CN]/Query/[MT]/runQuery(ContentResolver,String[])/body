{
  Uri uri=Downloads.CONTENT_URI;
  String selection=null;
  if (mId != null) {
    uri=Uri.withAppendedPath(uri,mId.toString());
  }
  if (mStatusFlags != null) {
    List<String> parts=new ArrayList<String>();
    if ((mStatusFlags & STATUS_PENDING) != 0) {
      parts.add(statusClause("=",Downloads.STATUS_PENDING));
    }
    if ((mStatusFlags & STATUS_RUNNING) != 0) {
      parts.add(statusClause("=",Downloads.STATUS_RUNNING));
    }
    if ((mStatusFlags & STATUS_PAUSED) != 0) {
      parts.add(statusClause("=",Downloads.STATUS_PENDING_PAUSED));
      parts.add(statusClause("=",Downloads.STATUS_RUNNING_PAUSED));
    }
    if ((mStatusFlags & STATUS_SUCCESSFUL) != 0) {
      parts.add(statusClause("=",Downloads.STATUS_SUCCESS));
    }
    if ((mStatusFlags & STATUS_FAILED) != 0) {
      parts.add("(" + statusClause(">=",400) + " AND "+ statusClause("<",600)+ ")");
    }
    selection=joinStrings(" OR ",parts);
    Log.w("DownloadManagerPublic",selection);
  }
  return resolver.query(uri,projection,selection,null,null);
}
