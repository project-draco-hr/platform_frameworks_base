{
  int childCount=getChildCount();
  int fullRowWidth=r - l;
  int xPos=isRTL() ? fullRowWidth - getPaddingRight() : getPaddingLeft();
  int yPos=getPaddingTop();
  int lastHorizontalSpacing=0;
  int rowStartIdx=0;
  for (int i=0; i < childCount; i++) {
    View currentChild=getChildAt(i);
    if (currentChild.getVisibility() != GONE) {
      int currentChildWidth=currentChild.getMeasuredWidth();
      LayoutParams lp=(LayoutParams)currentChild.getLayoutParams();
      boolean childDoesNotFitOnRow=isRTL() ? xPos - getPaddingLeft() - currentChildWidth < 0 : xPos + currentChildWidth > fullRowWidth;
      if (childDoesNotFitOnRow) {
        layoutChildrenOnRow(rowStartIdx,i,fullRowWidth,xPos,yPos,lastHorizontalSpacing);
        xPos=isRTL() ? fullRowWidth - getPaddingRight() : getPaddingLeft();
        yPos+=mLineHeight;
        rowStartIdx=i;
      }
      xPos=isRTL() ? xPos - currentChildWidth - lp.mHorizontalSpacing : xPos + currentChildWidth + lp.mHorizontalSpacing;
      lastHorizontalSpacing=lp.mHorizontalSpacing;
    }
  }
  if (rowStartIdx < childCount) {
    layoutChildrenOnRow(rowStartIdx,childCount,fullRowWidth,xPos,yPos,lastHorizontalSpacing);
  }
}
