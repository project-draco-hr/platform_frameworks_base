{
  if (!params.containsKey(VIEW_PARAMS_WEEK)) {
    throw new InvalidParameterException("You must specify the week number for this view");
  }
  setTag(params);
  if (params.containsKey(VIEW_PARAMS_HEIGHT)) {
    mHeight=((int[])params.get(VIEW_PARAMS_HEIGHT))[0];
  }
  if (params.containsKey(VIEW_PARAMS_SELECTED_DAY)) {
    mSelectedDay=((int[])params.get(VIEW_PARAMS_SELECTED_DAY))[0];
  }
  mHasSelectedDay=mSelectedDay != -1;
  if (params.containsKey(VIEW_PARAMS_NUM_DAYS)) {
    mWeekDayCount=((int[])params.get(VIEW_PARAMS_NUM_DAYS))[0];
  }
  if (params.containsKey(VIEW_PARAMS_SHOW_WK_NUM)) {
    if (((int[])params.get(VIEW_PARAMS_SHOW_WK_NUM))[0] != 0) {
      mNumCells=mWeekDayCount + 1;
      mShowWeekNumber=true;
    }
 else {
      mShowWeekNumber=false;
    }
  }
 else {
    mNumCells=mShowWeekNumber ? mWeekDayCount + 1 : mWeekDayCount;
  }
  mWeek=((int[])params.get(VIEW_PARAMS_WEEK))[0];
  mTempCalendar.setTimeInMillis(mRangeStartDate.getTimeInMillis());
  mTempCalendar.setTimeZone(mRangeStartDate.getTimeZone());
  mTempCalendar.add(Calendar.WEEK_OF_YEAR,mWeek);
  if (params.containsKey(VIEW_PARAMS_WEEK_START)) {
    mTempCalendar.setFirstDayOfWeek(((int[])params.get(VIEW_PARAMS_WEEK_START))[0]);
  }
 else {
    mTempCalendar.setFirstDayOfWeek(Calendar.SUNDAY);
  }
  mDayNumbers=new String[mNumCells];
  mFocusDay=new boolean[mNumCells];
  int i=0;
  if (mShowWeekNumber) {
    mDayNumbers[0]=Integer.toString(mTempCalendar.get(Calendar.WEEK_OF_YEAR));
    i++;
  }
  int diff=mTempCalendar.getFirstDayOfWeek() - mTempCalendar.get(Calendar.DAY_OF_WEEK);
  mTempCalendar.add(Calendar.DAY_OF_MONTH,diff);
  mFirstDay=(Calendar)mTempCalendar.clone();
  mMonthOfFirstWeekDay=mTempCalendar.get(Calendar.MONTH);
  int focusMonth=params.containsKey(VIEW_PARAMS_FOCUS_MONTH) ? ((int[])params.get(VIEW_PARAMS_FOCUS_MONTH))[0] : -1;
  for (; i < mNumCells; i++) {
    mFocusDay[i]=(mTempCalendar.get(Calendar.MONTH) == focusMonth);
    if (mTempCalendar.before(mRangeStartDate) || mTempCalendar.after(mRangeEndDate)) {
      mDayNumbers[i]="";
    }
 else {
      mDayNumbers[i]=Integer.toString(mTempCalendar.get(Calendar.DAY_OF_MONTH));
    }
    mTempCalendar.add(Calendar.DAY_OF_MONTH,1);
  }
  if (mTempCalendar.get(Calendar.DAY_OF_MONTH) == 1) {
    mTempCalendar.add(Calendar.DAY_OF_MONTH,-1);
  }
  mLastWeekDayMonth=mTempCalendar.get(Calendar.MONTH);
  updateSelectionPositions();
}
