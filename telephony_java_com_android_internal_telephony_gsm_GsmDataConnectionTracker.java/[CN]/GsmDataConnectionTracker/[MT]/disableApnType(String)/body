{
  if (DBG)   log("calling disableApnType with type:" + type);
  ApnContext apnContext=mApnContexts.get(type);
  if (apnContext != null) {
    if (apnContext.getState() != State.IDLE && apnContext.getState() != State.FAILED) {
      apnContext.setPendingAction(ApnContext.PENDING_ACTION_APN_DISABLE);
      Message msg=obtainMessage(EVENT_CLEAN_UP_CONNECTION);
      msg.arg1=1;
      apnContext.setReason(Phone.REASON_DATA_DISABLED);
      msg.obj=apnContext;
      sendMessage(msg);
      if (DBG)       log("return APN_REQUEST_STARTED");
      return Phone.APN_REQUEST_STARTED;
    }
 else {
      if (DBG)       log("return APN_ALREADY_INACTIVE");
      apnContext.setEnabled(false);
      apnContext.setDataConnection(null);
      return Phone.APN_ALREADY_INACTIVE;
    }
  }
 else {
    if (DBG)     log("no apn context was found, return APN_REQUEST_FAILED");
    return Phone.APN_REQUEST_FAILED;
  }
}
