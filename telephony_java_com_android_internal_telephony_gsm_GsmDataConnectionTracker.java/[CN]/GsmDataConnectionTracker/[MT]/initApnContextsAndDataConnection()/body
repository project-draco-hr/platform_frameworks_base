{
  SharedPreferences sp=PreferenceManager.getDefaultSharedPreferences(mPhone.getContext());
  boolean defaultEnabled=!sp.getBoolean(PhoneBase.DATA_DISABLED_ON_BOOT_KEY,false);
  String[] networkConfigStrings=mPhone.getContext().getResources().getStringArray(com.android.internal.R.array.networkAttributes);
  for (  String networkConfigString : networkConfigStrings) {
    NetworkConfig networkConfig=new NetworkConfig(networkConfigString);
    ApnContext apnContext=null;
switch (networkConfig.type) {
case ConnectivityManager.TYPE_MOBILE:
      apnContext=addApnContext(Phone.APN_TYPE_DEFAULT);
    apnContext.setEnabled(defaultEnabled);
  break;
case ConnectivityManager.TYPE_MOBILE_MMS:
apnContext=addApnContext(Phone.APN_TYPE_MMS);
break;
case ConnectivityManager.TYPE_MOBILE_SUPL:
apnContext=addApnContext(Phone.APN_TYPE_SUPL);
break;
case ConnectivityManager.TYPE_MOBILE_DUN:
apnContext=addApnContext(Phone.APN_TYPE_DUN);
break;
case ConnectivityManager.TYPE_MOBILE_HIPRI:
apnContext=addApnContext(Phone.APN_TYPE_HIPRI);
break;
case ConnectivityManager.TYPE_MOBILE_FOTA:
apnContext=addApnContext(Phone.APN_TYPE_FOTA);
break;
case ConnectivityManager.TYPE_MOBILE_IMS:
apnContext=addApnContext(Phone.APN_TYPE_IMS);
break;
case ConnectivityManager.TYPE_MOBILE_CBS:
apnContext=addApnContext(Phone.APN_TYPE_CBS);
break;
default :
continue;
}
if (apnContext != null) {
onSetDependencyMet(apnContext.getApnType(),networkConfig.dependencyMet);
}
}
}
