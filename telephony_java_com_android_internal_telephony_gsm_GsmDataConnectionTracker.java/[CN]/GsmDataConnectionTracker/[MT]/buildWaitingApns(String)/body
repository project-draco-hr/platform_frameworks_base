{
  ArrayList<ApnSetting> apnList=new ArrayList<ApnSetting>();
  if (requestedApnType.equals(Phone.APN_TYPE_DUN)) {
    ApnSetting dun=fetchDunApn();
    if (dun != null) {
      apnList.add(dun);
      if (DBG)       log("buildWaitingApns: X added APN_TYPE_DUN apnList=" + apnList);
      return apnList;
    }
  }
  String operator=mPhone.mIccRecords.getOperatorNumeric();
  int networkType=mPhone.getServiceState().getNetworkType();
  if (canSetPreferApn && mPreferredApn != null && mPreferredApn.canHandleType(requestedApnType)) {
    if (DBG) {
      log("buildWaitingApns: Preferred APN:" + operator + ":"+ mPreferredApn.numeric+ ":"+ mPreferredApn);
    }
    if (mPreferredApn.numeric.equals(operator)) {
      if (mPreferredApn.bearer == 0 || mPreferredApn.bearer == networkType) {
        apnList.add(mPreferredApn);
        if (DBG)         log("buildWaitingApns: X added preferred apnList=" + apnList);
        return apnList;
      }
 else {
        if (DBG)         log("buildWaitingApns: no preferred APN");
        setPreferredApn(-1);
        mPreferredApn=null;
      }
    }
 else {
      if (DBG)       log("buildWaitingApns: no preferred APN");
      setPreferredApn(-1);
      mPreferredApn=null;
    }
  }
  if (mAllApns != null) {
    for (    ApnSetting apn : mAllApns) {
      if (apn.canHandleType(requestedApnType)) {
        if (apn.bearer == 0 || apn.bearer == networkType) {
          if (DBG)           log("apn info : " + apn.toString());
          apnList.add(apn);
        }
      }
    }
  }
 else {
    loge("mAllApns is empty!");
  }
  if (DBG)   log("buildWaitingApns: X apnList=" + apnList);
  return apnList;
}
