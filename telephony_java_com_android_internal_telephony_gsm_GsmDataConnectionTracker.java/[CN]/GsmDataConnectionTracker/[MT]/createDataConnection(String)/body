{
  if (DBG)   log("createDataConnection(" + apnType + ") E");
  RetryManager rm=new RetryManager();
  if (apnType.equals(Phone.APN_TYPE_DEFAULT)) {
    if (!rm.configure(SystemProperties.get("ro.gsm.data_retry_config"))) {
      if (!rm.configure(DEFAULT_DATA_RETRY_CONFIG)) {
        loge("createDataConnection: Could not configure using " + "DEFAULT_DATA_RETRY_CONFIG=" + DEFAULT_DATA_RETRY_CONFIG);
        rm.configure(20,2000,1000);
      }
    }
  }
 else {
    if (!rm.configure(SystemProperties.get("ro.gsm.2nd_data_retry_config"))) {
      if (!rm.configure(SECONDARY_DATA_RETRY_CONFIG)) {
        loge("createDataConnection: Could note configure using " + "SECONDARY_DATA_RETRY_CONFIG=" + SECONDARY_DATA_RETRY_CONFIG);
        rm.configure("max_retries=3, 333, 333, 333");
      }
    }
  }
  int id=mUniqueIdGenerator.getAndIncrement();
  GsmDataConnection conn=GsmDataConnection.makeDataConnection(mPhone,id,rm);
  conn.resetRetryCount();
  mDataConnections.put(id,conn);
  DataConnectionAc dcac=new DataConnectionAc(conn,LOG_TAG);
  int status=dcac.fullyConnectSync(mPhone.getContext(),this,conn.getHandler());
  if (status == AsyncChannel.STATUS_SUCCESSFUL) {
    mDataConnectionAsyncChannels.put(dcac.dataConnection.getDataConnectionId(),dcac);
  }
 else {
    loge("createDataConnection: Could not connect to dcac.mDc=" + dcac.dataConnection + " status="+ status);
  }
  if (DBG)   log("createDataConnection(" + apnType + ") X id="+ id);
  return conn;
}
