{
  DataConnection.FailCause cause=DataConnection.FailCause.UNKNOWN;
  boolean handleError=false;
  ApnContext apnContext=null;
  if (ar.userObj instanceof ApnContext) {
    apnContext=(ApnContext)ar.userObj;
  }
 else {
    throw new RuntimeException("onDataSetupComplete: No apnContext");
  }
  if (isDataSetupCompleteOk(ar)) {
    DataConnectionAc dcac=apnContext.getDataConnectionAc();
    if (RADIO_TESTS) {
      ContentResolver cr=mPhone.getContext().getContentResolver();
      String radioTestProperty="radio.test.onDSC.null.dcac";
      if (Settings.System.getInt(cr,radioTestProperty,0) == 1) {
        log("onDataSetupComplete: " + radioTestProperty + " is true, set dcac to null and reset property to false");
        dcac=null;
        Settings.System.putInt(cr,radioTestProperty,0);
        log("onDataSetupComplete: " + radioTestProperty + "="+ Settings.System.getInt(mPhone.getContext().getContentResolver(),radioTestProperty,-1));
      }
    }
    if (dcac == null) {
      log("onDataSetupComplete: no connection to DC, handle as error");
      cause=DataConnection.FailCause.CONNECTION_TO_DATACONNECTIONAC_BROKEN;
      handleError=true;
    }
 else {
      DataConnection dc=apnContext.getDataConnection();
      ApnSetting apn=apnContext.getApnSetting();
      if (DBG) {
        log("onDataSetupComplete: success apn=" + (apn == null ? "unknown" : apn.apn));
      }
      if (apn != null && apn.proxy != null && apn.proxy.length() != 0) {
        try {
          String port=apn.port;
          if (TextUtils.isEmpty(port))           port="8080";
          ProxyProperties proxy=new ProxyProperties(apn.proxy,Integer.parseInt(port),null);
          dcac.setLinkPropertiesHttpProxySync(proxy);
        }
 catch (        NumberFormatException e) {
          loge("onDataSetupComplete: NumberFormatException making ProxyProperties (" + apn.port + "): "+ e);
        }
      }
      if (TextUtils.equals(apnContext.getApnType(),Phone.APN_TYPE_DEFAULT)) {
        SystemProperties.set("gsm.defaultpdpcontext.active","true");
        if (canSetPreferApn && mPreferredApn == null) {
          if (DBG)           log("onDataSetupComplete: PREFERED APN is null");
          mPreferredApn=apn;
          if (mPreferredApn != null) {
            setPreferredApn(mPreferredApn.id);
          }
        }
      }
 else {
        SystemProperties.set("gsm.defaultpdpcontext.active","false");
      }
      notifyDefaultData(apnContext);
    }
  }
 else {
    cause=(DataConnection.FailCause)(ar.result);
    if (DBG) {
      ApnSetting apn=apnContext.getApnSetting();
      log(String.format("onDataSetupComplete: error apn=%s cause=%s",(apn == null ? "unknown" : apn.apn),cause));
    }
    if (cause.isEventLoggable()) {
      int cid=getCellLocationId();
      EventLog.writeEvent(EventLogTags.PDP_SETUP_FAIL,cause.ordinal(),cid,TelephonyManager.getDefault().getNetworkType());
    }
    if (cause.isPermanentFail())     apnContext.decWaitingApnsPermFailCount();
    apnContext.removeWaitingApn(apnContext.getApnSetting());
    if (DBG) {
      log(String.format("onDataSetupComplete: WaitingApns.size=%d" + " WaitingApnsPermFailureCountDown=%d",apnContext.getWaitingApns().size(),apnContext.getWaitingApnsPermFailCount()));
    }
    handleError=true;
  }
  if (handleError) {
    if (apnContext.getWaitingApns().isEmpty()) {
      if (apnContext.getWaitingApnsPermFailCount() == 0) {
        if (DBG) {
          log("onDataSetupComplete: All APN's had permanent failures, stop retrying");
        }
        apnContext.setState(State.FAILED);
        mPhone.notifyDataConnection(Phone.REASON_APN_FAILED,apnContext.getApnType());
        apnContext.setDataConnection(null);
        apnContext.setDataConnectionAc(null);
      }
 else {
        if (DBG)         log("onDataSetupComplete: Not all permanent failures, retry");
        int retryOverride=-1;
        if (ar.exception instanceof DataConnection.CallSetupException) {
          retryOverride=((DataConnection.CallSetupException)ar.exception).getRetryOverride();
        }
        if (retryOverride == RILConstants.MAX_INT) {
          if (DBG)           log("No retry is suggested.");
        }
 else {
          startDelayedRetry(cause,apnContext,retryOverride);
        }
      }
    }
 else {
      if (DBG)       log("onDataSetupComplete: Try next APN");
      apnContext.setState(State.SCANNING);
      startAlarmForReconnect(APN_DELAY_MILLIS,apnContext);
    }
  }
}
