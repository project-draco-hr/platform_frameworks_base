{
  String reason=null;
  if (ar.userObj instanceof String) {
    reason=(String)ar.userObj;
  }
  if (ar.exception == null) {
    mLinkProperties=getLinkProperties(mPendingDataConnection);
    mLinkCapabilities=getLinkCapabilities(mPendingDataConnection);
    ApnSetting apn=mPendingDataConnection.getApn();
    if (apn.proxy != null && apn.proxy.length() != 0) {
      try {
        ProxyProperties proxy=new ProxyProperties();
        proxy.setSocketAddress(new InetSocketAddress(InetAddress.getByName(apn.proxy),Integer.parseInt(apn.port)));
        mLinkProperties.setHttpProxy(proxy);
      }
 catch (      UnknownHostException e) {
        loge("UnknownHostException making ProxyProperties: " + e);
      }
catch (      SecurityException e) {
        loge("SecurityException making ProxyProperties: " + e);
      }
catch (      NumberFormatException e) {
        loge("NumberFormatException making ProxyProperties (" + apn.port + "): "+ e);
      }
    }
    if (isApnTypeActive(Phone.APN_TYPE_DEFAULT)) {
      SystemProperties.set("gsm.defaultpdpcontext.active","true");
      if (canSetPreferApn && mPreferredApn == null) {
        log("PREFERRED APN is null");
        mPreferredApn=mActiveApn;
        setPreferredApn(mPreferredApn.id);
      }
    }
 else {
      SystemProperties.set("gsm.defaultpdpcontext.active","false");
    }
    notifyDefaultData(reason);
  }
 else {
    GsmDataConnection.FailCause cause;
    cause=(GsmDataConnection.FailCause)(ar.result);
    if (DBG) {
      String apnString;
      try {
        apnString=mWaitingApns.get(0).apn;
      }
 catch (      Exception e) {
        apnString="<unknown>";
      }
      log(String.format("onDataSetupComplete: error apn=%s cause=%s",apnString,cause));
    }
    if (cause.isEventLoggable()) {
      GsmCellLocation loc=((GsmCellLocation)mPhone.getCellLocation());
      EventLog.writeEvent(EventLogTags.PDP_SETUP_FAIL,cause.ordinal(),loc != null ? loc.getCid() : -1,TelephonyManager.getDefault().getNetworkType());
    }
    if (cause.isPermanentFail()) {
      notifyNoData(cause);
      notifyDataConnection(Phone.REASON_APN_FAILED);
      onEnableApn(apnTypeToId(mRequestedApnType),DISABLED);
      return;
    }
    mWaitingApns.remove(0);
    if (mWaitingApns.isEmpty()) {
      startDelayedRetry(cause,reason);
    }
 else {
      setState(State.SCANNING);
      sendMessageDelayed(obtainMessage(EVENT_TRY_SETUP_DATA,reason),APN_DELAY_MILLIS);
    }
  }
}
