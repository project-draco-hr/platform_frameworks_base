{
  ApnContext apnContext=null;
  if (ar.userObj instanceof ApnContext) {
    apnContext=(ApnContext)ar.userObj;
  }
  if (ar.exception == null) {
    if (DBG) {
      log(String.format("onDataSetupComplete: success apn=%s",apnContext.getWaitingApns().get(0).apn));
    }
    mLinkProperties=getLinkProperties(apnContext.getDataConnection());
    mLinkCapabilities=getLinkCapabilities(apnContext.getDataConnection());
    ApnSetting apn=apnContext.getDataConnection().getApn();
    if (apn.proxy != null && apn.proxy.length() != 0) {
      try {
        ProxyProperties proxy=new ProxyProperties(apn.proxy,Integer.parseInt(apn.port),null);
        mLinkProperties.setHttpProxy(proxy);
      }
 catch (      NumberFormatException e) {
        loge("NumberFormatException making ProxyProperties (" + apn.port + "): "+ e);
      }
    }
    if (TextUtils.equals(apnContext.getApnType(),Phone.APN_TYPE_DEFAULT)) {
      SystemProperties.set("gsm.defaultpdpcontext.active","true");
      if (canSetPreferApn && mPreferredApn == null) {
        log("PREFERED APN is null");
        mPreferredApn=apnContext.getApnSetting();
        if (mPreferredApn != null) {
          setPreferredApn(mPreferredApn.id);
        }
      }
    }
 else {
      SystemProperties.set("gsm.defaultpdpcontext.active","false");
    }
    notifyDefaultData(apnContext);
  }
 else {
    GsmDataConnection.FailCause cause;
    cause=(GsmDataConnection.FailCause)(ar.result);
    if (DBG) {
      String apnString;
      try {
        apnString=apnContext.getWaitingApns().get(0).apn;
      }
 catch (      Exception e) {
        apnString="<unknown>";
      }
      log(String.format("onDataSetupComplete: error apn=%s cause=%s",apnString,cause));
    }
    if (cause.isEventLoggable()) {
      GsmCellLocation loc=((GsmCellLocation)mPhone.getCellLocation());
      EventLog.writeEvent(EventLogTags.PDP_SETUP_FAIL,cause.ordinal(),loc != null ? loc.getCid() : -1,TelephonyManager.getDefault().getNetworkType());
    }
    if (cause.isPermanentFail())     apnContext.decWaitingApnsPermFailCount();
    apnContext.removeNextWaitingApn();
    if (DBG) {
      log(String.format("onDataSetupComplete: WaitingApns.size=%d" + " WaitingApnsPermFailureCountDown=%d",apnContext.getWaitingApns().size(),apnContext.getWaitingApnsPermFailCount()));
    }
    if (apnContext.getWaitingApns().isEmpty()) {
      if (apnContext.getWaitingApnsPermFailCount() == 0) {
        if (DBG) {
          log("onDataSetupComplete: All APN's had permanent failures, stop retrying");
        }
        apnContext.setState(State.FAILED);
        notifyDataConnection(Phone.REASON_APN_FAILED);
      }
 else {
        if (DBG)         log("onDataSetupComplete: Not all permanent failures, retry");
        startDelayedRetry(cause,apnContext);
      }
    }
 else {
      if (DBG)       log("onDataSetupComplete: Try next APN");
      apnContext.setState(State.SCANNING);
      sendMessageDelayed(obtainMessage(EVENT_TRY_SETUP_DATA,apnContext),APN_DELAY_MILLIS);
    }
  }
}
