{
  if (DBG) {
    log("trySetupData for type:" + apnContext.getApnType() + " due to "+ apnContext.getReason());
    log("trySetupData with mIsPsRestricted=" + mIsPsRestricted);
  }
  if (mPhone.getSimulatedRadioControl() != null) {
    apnContext.setState(State.CONNECTED);
    mPhone.notifyDataConnection(apnContext.getReason(),apnContext.getApnType());
    log("trySetupData: (fix?) We're on the simulator; assuming data is connected");
    return true;
  }
  boolean desiredPowerState=mPhone.getServiceStateTracker().getDesiredPowerState();
  if ((apnContext.getState() == State.IDLE || apnContext.getState() == State.SCANNING) && isDataAllowed(apnContext) && getAnyDataEnabled()&& !isEmergency()) {
    if (apnContext.getState() == State.IDLE) {
      ArrayList<ApnSetting> waitingApns=buildWaitingApns(apnContext.getApnType());
      if (waitingApns.isEmpty()) {
        if (DBG)         log("trySetupData: No APN found");
        notifyNoData(GsmDataConnection.FailCause.MISSING_UNKNOWN_APN,apnContext);
        notifyOffApnsOfAvailability(apnContext.getReason(),false);
        return false;
      }
 else {
        apnContext.setWaitingApns(waitingApns);
        if (DBG) {
          log("trySetupData: Create from mAllApns : " + apnListToString(mAllApns));
        }
      }
    }
    if (DBG) {
      log("Setup watingApns : " + apnListToString(apnContext.getWaitingApns()));
    }
    boolean retValue=setupData(apnContext);
    notifyOffApnsOfAvailability(apnContext.getReason(),retValue);
    return retValue;
  }
 else {
    if (!apnContext.getApnType().equals(Phone.APN_TYPE_DEFAULT) && (apnContext.getState() == State.IDLE || apnContext.getState() == State.SCANNING))     mPhone.notifyDataConnectionFailed(apnContext.getReason(),apnContext.getApnType());
    notifyOffApnsOfAvailability(apnContext.getReason(),false);
    return false;
  }
}
