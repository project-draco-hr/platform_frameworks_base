{
  boolean cleanup=false;
  boolean trySetup=false;
  if (DBG) {
    log("applyNewState(" + apnContext.getApnType() + ", "+ enabled+ "("+ apnContext.isEnabled()+ "), "+ met+ "("+ apnContext.getDependencyMet()+ "))");
  }
  if (apnContext.isReady()) {
    if (enabled && met)     return;
    if (!enabled) {
      apnContext.setReason(Phone.REASON_DATA_DISABLED);
    }
 else {
      apnContext.setReason(Phone.REASON_DATA_DEPENDENCY_UNMET);
    }
    cleanup=true;
  }
 else {
    if (enabled && met) {
      if (apnContext.isEnabled()) {
        apnContext.setReason(Phone.REASON_DATA_DEPENDENCY_MET);
      }
 else {
        apnContext.setReason(Phone.REASON_DATA_ENABLED);
      }
      DataConnection conn=checkForConnectionForApnContext(apnContext);
      if (conn == null) {
        if (apnContext.getState() == State.FAILED) {
          apnContext.setState(State.IDLE);
        }
        trySetup=true;
      }
 else {
        if (DBG) {
          log("Found existing connection for " + apnContext.getApnType() + ": "+ conn);
        }
        apnContext.setDataConnection(conn);
      }
    }
  }
  apnContext.setEnabled(enabled);
  apnContext.setDependencyMet(met);
  if (cleanup)   cleanUpConnection(true,apnContext);
  if (trySetup)   trySetupData(apnContext);
}
