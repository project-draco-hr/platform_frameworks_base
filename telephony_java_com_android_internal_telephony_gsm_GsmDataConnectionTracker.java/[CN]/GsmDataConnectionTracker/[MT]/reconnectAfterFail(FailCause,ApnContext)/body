{
  if (apnContext == null) {
    loge("reconnectAfterFail: apnContext == null, impossible");
    return;
  }
  if (apnContext.getState() == State.FAILED) {
    if (!apnContext.getDataConnection().isRetryNeeded()) {
      if (!apnContext.getApnType().equals(Phone.APN_TYPE_DEFAULT)) {
        mPhone.notifyDataConnection(Phone.REASON_APN_FAILED,apnContext.getApnType());
        return;
      }
      if (mReregisterOnReconnectFailure) {
        apnContext.getDataConnection().retryForeverUsingLastTimeout();
      }
 else {
        if (DBG)         log("reconnectAfterFail: activate failed, Reregistering to network");
        mReregisterOnReconnectFailure=true;
        mPhone.getServiceStateTracker().reRegisterNetwork(null);
        apnContext.getDataConnection().resetRetryCount();
        return;
      }
    }
    int nextReconnectDelay=apnContext.getDataConnection().getRetryTimer();
    if (DBG) {
      log("reconnectAfterFail: activate failed. Scheduling next attempt for " + (nextReconnectDelay / 1000) + "s");
    }
    AlarmManager am=(AlarmManager)mPhone.getContext().getSystemService(Context.ALARM_SERVICE);
    Intent intent=new Intent(INTENT_RECONNECT_ALARM);
    intent.putExtra(INTENT_RECONNECT_ALARM_EXTRA_REASON,apnContext.getReason());
    intent.putExtra(INTENT_RECONNECT_ALARM_EXTRA_TYPE,apnContext.getApnType());
    apnContext.setReconnectIntent(PendingIntent.getBroadcast(mPhone.getContext(),0,intent,0));
    am.set(AlarmManager.ELAPSED_REALTIME_WAKEUP,SystemClock.elapsedRealtime() + nextReconnectDelay,apnContext.getReconnectIntent());
    apnContext.getDataConnection().increaseRetryCount();
    if (!shouldPostNotification(lastFailCauseCode)) {
      if (DBG) {
        log("reconnectAfterFail: NOT Posting GPRS Unavailable notification " + "-- likely transient error");
      }
    }
 else {
      notifyNoData(lastFailCauseCode,apnContext);
    }
  }
}
