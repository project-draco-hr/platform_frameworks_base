{
  checkHit(hitInfo);
  float x1, x2, y1, y2;
  int charIdx=hitInfo.getCharIndex();
  if (charIdx >= 0 && charIdx < breaker.getCharCount()) {
    TextRunSegment segment=breaker.runSegments.get(breaker.logical2segment[charIdx]);
    y1=segment.metrics.descent;
    y2=-segment.metrics.ascent - segment.metrics.leading;
    x1=x2=segment.getCharPosition(charIdx) + (hitInfo.isLeadingEdge() ? 0 : segment.getCharAdvance(charIdx));
  }
 else {
    y1=layout.getDescent();
    y2=-layout.getAscent() - layout.getLeading();
    x1=x2=((breaker.getBaseLevel() & 0x1) == 0 ^ charIdx < 0) ? layout.getAdvance() : 0;
  }
  if (useBounds) {
    y1=(float)bounds.getMaxY();
    y2=(float)bounds.getMinY();
    if (x2 > bounds.getMaxX()) {
      x1=x2=(float)bounds.getMaxX();
    }
    if (x1 < bounds.getMinX()) {
      x1=x2=(float)bounds.getMinX();
    }
  }
  return new Line2D.Float(x1,y1,x2,y2);
}
