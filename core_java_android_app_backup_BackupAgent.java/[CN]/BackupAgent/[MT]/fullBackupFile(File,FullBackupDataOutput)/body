{
  final String rootDir;
  final String filesDir;
  final String nbFilesDir;
  final String dbDir;
  final String spDir;
  final String cacheDir;
  final String codeCacheDir;
  final String deviceRootDir;
  final String deviceFilesDir;
  final String deviceNbFilesDir;
  final String deviceDbDir;
  final String deviceSpDir;
  final String deviceCacheDir;
  final String deviceCodeCacheDir;
  final String libDir;
  String efDir=null;
  String filePath;
  ApplicationInfo appInfo=getApplicationInfo();
  try {
    final Context ceContext=createCredentialEncryptedStorageContext();
    rootDir=ceContext.getDataDir().getCanonicalPath();
    filesDir=ceContext.getFilesDir().getCanonicalPath();
    nbFilesDir=ceContext.getNoBackupFilesDir().getCanonicalPath();
    dbDir=ceContext.getDatabasePath("foo").getParentFile().getCanonicalPath();
    spDir=ceContext.getSharedPreferencesPath("foo").getParentFile().getCanonicalPath();
    cacheDir=ceContext.getCacheDir().getCanonicalPath();
    codeCacheDir=ceContext.getCodeCacheDir().getCanonicalPath();
    final Context deContext=createDeviceEncryptedStorageContext();
    deviceRootDir=deContext.getDataDir().getCanonicalPath();
    deviceFilesDir=deContext.getFilesDir().getCanonicalPath();
    deviceNbFilesDir=deContext.getNoBackupFilesDir().getCanonicalPath();
    deviceDbDir=deContext.getDatabasePath("foo").getParentFile().getCanonicalPath();
    deviceSpDir=deContext.getSharedPreferencesPath("foo").getParentFile().getCanonicalPath();
    deviceCacheDir=deContext.getCacheDir().getCanonicalPath();
    deviceCodeCacheDir=deContext.getCodeCacheDir().getCanonicalPath();
    libDir=(appInfo.nativeLibraryDir == null) ? null : new File(appInfo.nativeLibraryDir).getCanonicalPath();
    if (Process.myUid() != Process.SYSTEM_UID) {
      File efLocation=getExternalFilesDir(null);
      if (efLocation != null) {
        efDir=efLocation.getCanonicalPath();
      }
    }
    filePath=file.getCanonicalPath();
  }
 catch (  IOException e) {
    Log.w(TAG,"Unable to obtain canonical paths");
    return;
  }
  if (filePath.startsWith(cacheDir) || filePath.startsWith(codeCacheDir) || filePath.startsWith(nbFilesDir)|| filePath.startsWith(deviceCacheDir)|| filePath.startsWith(deviceCodeCacheDir)|| filePath.startsWith(deviceNbFilesDir)|| filePath.startsWith(libDir)) {
    Log.w(TAG,"lib, cache, code_cache, and no_backup files are not backed up");
    return;
  }
  final String domain;
  String rootpath=null;
  if (filePath.startsWith(dbDir)) {
    domain=FullBackup.DATABASE_TREE_TOKEN;
    rootpath=dbDir;
  }
 else   if (filePath.startsWith(spDir)) {
    domain=FullBackup.SHAREDPREFS_TREE_TOKEN;
    rootpath=spDir;
  }
 else   if (filePath.startsWith(filesDir)) {
    domain=FullBackup.FILES_TREE_TOKEN;
    rootpath=filesDir;
  }
 else   if (filePath.startsWith(rootDir)) {
    domain=FullBackup.ROOT_TREE_TOKEN;
    rootpath=rootDir;
  }
 else   if (filePath.startsWith(deviceDbDir)) {
    domain=FullBackup.DEVICE_DATABASE_TREE_TOKEN;
    rootpath=deviceDbDir;
  }
 else   if (filePath.startsWith(deviceSpDir)) {
    domain=FullBackup.DEVICE_SHAREDPREFS_TREE_TOKEN;
    rootpath=deviceSpDir;
  }
 else   if (filePath.startsWith(deviceFilesDir)) {
    domain=FullBackup.DEVICE_FILES_TREE_TOKEN;
    rootpath=deviceFilesDir;
  }
 else   if (filePath.startsWith(deviceRootDir)) {
    domain=FullBackup.DEVICE_ROOT_TREE_TOKEN;
    rootpath=deviceRootDir;
  }
 else   if ((efDir != null) && filePath.startsWith(efDir)) {
    domain=FullBackup.MANAGED_EXTERNAL_TREE_TOKEN;
    rootpath=efDir;
  }
 else {
    Log.w(TAG,"File " + filePath + " is in an unsupported location; skipping");
    return;
  }
  if (DEBUG)   Log.i(TAG,"backupFile() of " + filePath + " => domain="+ domain+ " rootpath="+ rootpath);
  FullBackup.backupToTar(getPackageName(),domain,null,rootpath,filePath,output);
}
