{
  int origDefaultLoc=getInstallLoc();
  setInstallLoc(PackageInfo.INSTALL_LOCATION_AUTO);
  InstallParams ip=sampleInstallFromRawResource(installFlags,false);
  ApplicationInfo oldAppInfo=null;
  try {
    oldAppInfo=getPm().getApplicationInfo(ip.pkg.packageName,0);
  }
 catch (  NameNotFoundException e) {
    failStr("Pkg hasnt been installed correctly");
  }
  MoveReceiver receiver=new MoveReceiver(ip.pkg.packageName);
  try {
    boolean retCode=invokeMovePackage(ip.pkg.packageName,moveFlags,receiver);
    if (expRetCode == PackageManager.MOVE_SUCCEEDED) {
      assertTrue(retCode);
      ApplicationInfo info=getPm().getApplicationInfo(ip.pkg.packageName,0);
      assertNotNull(info);
      if ((moveFlags & PackageManager.MOVE_INTERNAL) != 0) {
        assertTrue((info.flags & ApplicationInfo.FLAG_ON_SDCARD) == 0);
      }
 else       if ((moveFlags & PackageManager.MOVE_EXTERNAL_MEDIA) != 0) {
        assertTrue((info.flags & ApplicationInfo.FLAG_ON_SDCARD) != 0);
      }
    }
 else {
      assertFalse(retCode);
      ApplicationInfo info=getPm().getApplicationInfo(ip.pkg.packageName,0);
      assertNotNull(info);
      assertEquals(oldAppInfo.flags,info.flags);
    }
  }
 catch (  Exception e) {
    failStr("Failed with exception : " + e);
  }
 finally {
    cleanUpInstall(ip);
    setInstallLoc(origDefaultLoc);
  }
}
