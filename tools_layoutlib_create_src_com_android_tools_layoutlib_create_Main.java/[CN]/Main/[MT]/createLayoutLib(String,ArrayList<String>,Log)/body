{
  log.info("Output: %1$s",osDestJar);
  for (  String path : osJarPath) {
    log.info("Input :      %1$s",path);
  }
  try {
    CreateInfo info=new CreateInfo();
    Set<String> excludeClasses=info.getExcludedClasses();
    AsmGenerator agen=new AsmGenerator(log,osDestJar,info);
    AsmAnalyzer aa=new AsmAnalyzer(log,osJarPath,agen,new String[]{"android.view.View","android.app.Fragment"},new String[]{"android.*","android.util.*","com.android.internal.util.*","android.view.*","android.widget.*","com.android.internal.widget.*","android.text.**","android.graphics.*","android.graphics.drawable.*","android.content.*","android.content.res.*","org.apache.harmony.xml.*","com.android.internal.R**","android.pim.*","android.os.*","android.database.ContentObserver","com.android.i18n.phonenumbers.*","android.app.DatePickerDialog","android.app.TimePickerDialog","com.android.internal.view.menu.ActionMenu"},excludeClasses,new String[]{"com/android/i18n/phonenumbers/data/*"});
    aa.analyze();
    agen.generate();
    Set<String> notRenamed=agen.getClassesNotRenamed();
    if (notRenamed.size() > 0) {
      log.error("ERROR when running layoutlib_create: the following classes are referenced\n" + "by tools/layoutlib/create but were not actually found in the input JAR files.\n" + "This may be due to some platform classes having been renamed.");
      for (      String fqcn : notRenamed) {
        log.error("- Class not found: %s",fqcn.replace('/','.'));
      }
      for (      String path : osJarPath) {
        log.info("- Input JAR : %1$s",path);
      }
      return 1;
    }
    return 0;
  }
 catch (  IOException e) {
    log.exception(e,"Failed to load jar");
  }
catch (  LogAbortException e) {
    e.error(log);
  }
  return 1;
}
