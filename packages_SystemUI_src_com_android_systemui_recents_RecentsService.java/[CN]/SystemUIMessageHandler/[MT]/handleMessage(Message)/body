{
  Console.log(Constants.DebugFlags.App.SystemUIHandshake,"[RecentsService|handleMessage]",msg);
  Context context=mContext.get();
  if (context == null)   return;
  if (msg.what == RecentsService.MSG_UPDATE_RECENTS_FOR_CONFIGURATION) {
    RecentsTaskLoader.initialize(context);
    RecentsConfiguration.reinitialize(context);
    try {
      Bundle data=msg.getData();
      Rect windowRect=(Rect)data.getParcelable("windowRect");
      Rect systemInsets=(Rect)data.getParcelable("systemInsets");
      TaskStack stack=new TaskStack(context);
      TaskStackView tsv=new TaskStackView(context,stack);
      Bundle replyData=new Bundle();
      TaskViewTransform transform;
      stack.addTask(new Task());
      tsv.computeRects(windowRect.width(),windowRect.height() - systemInsets.top,0);
      tsv.boundScroll();
      transform=tsv.getStackTransform(0,tsv.getStackScroll());
      replyData.putParcelable("singleCountTaskRect",new Rect(transform.rect));
      stack.addTask(new Task());
      tsv.computeRects(windowRect.width(),windowRect.height() - systemInsets.top,0);
      tsv.setStackScrollRaw(Integer.MAX_VALUE);
      tsv.boundScroll();
      transform=tsv.getStackTransform(1,tsv.getStackScroll());
      replyData.putParcelable("multipleCountTaskRect",new Rect(transform.rect));
      data.putParcelable("replyData",replyData);
      Message reply=Message.obtain(null,RecentsService.MSG_UPDATE_RECENTS_FOR_CONFIGURATION,0,0);
      reply.setData(data);
      msg.replyTo.send(reply);
    }
 catch (    RemoteException re) {
      re.printStackTrace();
    }
  }
 else   if (msg.what == RecentsService.MSG_CLOSE_RECENTS) {
  }
 else   if (msg.what == RecentsService.MSG_TOGGLE_RECENTS) {
    Intent intent=new Intent(RecentsService.ACTION_TOGGLE_RECENTS_ACTIVITY);
    intent.setPackage(context.getPackageName());
    context.sendBroadcast(intent);
    Console.logTraceTime(Constants.DebugFlags.App.TimeRecentsStartup,Constants.DebugFlags.App.TimeRecentsStartupKey,"receivedToggleRecents");
    Console.logTraceTime(Constants.DebugFlags.App.TimeRecentsLaunchTask,Constants.DebugFlags.App.TimeRecentsLaunchKey,"receivedToggleRecents");
  }
}
