{
  ExportTestResolver resolver=new ExportTestResolver();
  ContentValues contentValues=resolver.buildData(Phone.CONTENT_ITEM_TYPE);
  contentValues.put(Phone.NUMBER,"1");
  contentValues.put(Phone.TYPE,Phone.TYPE_HOME);
  contentValues=resolver.buildData(Phone.CONTENT_ITEM_TYPE);
  contentValues.put(Phone.NUMBER,"2");
  contentValues.put(Phone.TYPE,Phone.TYPE_WORK);
  contentValues.put(Phone.IS_PRIMARY,1);
  contentValues=resolver.buildData(Phone.CONTENT_ITEM_TYPE);
  contentValues.put(Phone.NUMBER,"3");
  contentValues.put(Phone.TYPE,Phone.TYPE_FAX_HOME);
  contentValues.put(Phone.IS_PRIMARY,1);
  contentValues=resolver.buildData(Phone.CONTENT_ITEM_TYPE);
  contentValues.put(Phone.NUMBER,"4");
  contentValues.put(Phone.TYPE,Phone.TYPE_FAX_WORK);
  VCardVerificationHandler handler=new VCardVerificationHandler(this,version);
  handler.addNewVerifierWithEmptyName().addNodeWithoutOrder("TEL","4",new TypeSet("WORK","FAX")).addNodeWithoutOrder("TEL","3",new TypeSet("HOME","FAX","PREF")).addNodeWithoutOrder("TEL","2",new TypeSet("WORK","VOICE","PREF")).addNodeWithoutOrder("TEL","1",new TypeSet("HOME","VOICE"));
  verifyOneComposition(resolver,handler,version);
}
