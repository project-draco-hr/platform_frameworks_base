{
  final boolean isV30=(version == V30);
  ExportTestResolver resolver=new ExportTestResolver();
  resolver.buildInput(StructuredName.CONTENT_ITEM_TYPE).put(StructuredName.FAMILY_NAME,"AppropriateFamilyName").put(StructuredName.GIVEN_NAME,"AppropriateGivenName").put(StructuredName.MIDDLE_NAME,"AppropriateMiddleName").put(StructuredName.PREFIX,"AppropriatePrefix").put(StructuredName.SUFFIX,"AppropriateSuffix").put(StructuredName.PHONETIC_FAMILY_NAME,"AppropriatePhoneticFamily").put(StructuredName.PHONETIC_GIVEN_NAME,"AppropriatePhoneticGiven").put(StructuredName.PHONETIC_MIDDLE_NAME,"AppropriatePhoneticMiddle");
  VCardVerificationHandler handler=new VCardVerificationHandler(this,version);
  PropertyNodesVerifier verifier=handler.addPropertyNodesVerifier().addNodeWithOrder("N","AppropriateFamilyName;AppropriateGivenName;AppropriateMiddleName;" + "AppropriatePrefix;AppropriateSuffix",Arrays.asList("AppropriateFamilyName","AppropriateGivenName","AppropriateMiddleName","AppropriatePrefix","AppropriateSuffix")).addNodeWithOrder("FN","AppropriatePrefix AppropriateGivenName " + "AppropriateMiddleName AppropriateFamilyName AppropriateSuffix").addNodeWithoutOrder("X-PHONETIC-FIRST-NAME","AppropriatePhoneticGiven").addNodeWithoutOrder("X-PHONETIC-MIDDLE-NAME","AppropriatePhoneticMiddle").addNodeWithoutOrder("X-PHONETIC-LAST-NAME","AppropriatePhoneticFamily");
  if (isV30) {
    verifier.addNodeWithoutOrder("SORT-STRING","AppropriatePhoneticGiven AppropriatePhoneticMiddle " + "AppropriatePhoneticFamily");
  }
  verifyOneComposition(resolver,handler,version);
}
