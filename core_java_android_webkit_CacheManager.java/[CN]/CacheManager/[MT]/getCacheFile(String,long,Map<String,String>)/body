{
  if (mDisabled) {
    return null;
  }
  String databaseKey=getDatabaseKey(url,postIdentifier);
  CacheResult result=mDataBase.getCache(databaseKey);
  if (result == null) {
    return null;
  }
  if (result.contentLength == 0) {
    if (!isCachableRedirect(result.httpStatusCode)) {
      mDataBase.removeCache(databaseKey);
      return null;
    }
  }
 else {
    File src=new File(mBaseDir,result.localPath);
    try {
      result.inStream=new FileInputStream(src);
    }
 catch (    FileNotFoundException e) {
      mDataBase.removeCache(databaseKey);
      return null;
    }
  }
  if (headers != null && result.expires >= 0 && result.expires <= System.currentTimeMillis()) {
    if (result.lastModified == null && result.etag == null) {
      return null;
    }
    if (result.etag != null) {
      headers.put(HEADER_KEY_IFNONEMATCH,result.etag);
    }
    if (result.lastModified != null) {
      headers.put(HEADER_KEY_IFMODIFIEDSINCE,result.lastModified);
    }
  }
  if (DebugFlags.CACHE_MANAGER) {
    Log.v(LOGTAG,"getCacheFile for url " + url);
  }
  return result;
}
