{
  mService=service;
  ServiceInfo si=service.serviceInfo;
  mId=new ComponentName(si.packageName,si.name).flattenToShortString();
  PackageManager pm=context.getPackageManager();
  String settingsActivityComponent=null;
  int isDefaultResId=0;
  XmlResourceParser parser=null;
  try {
    parser=si.loadXmlMetaData(pm,InputMethod.SERVICE_META_DATA);
    if (parser == null) {
      throw new XmlPullParserException("No " + InputMethod.SERVICE_META_DATA + " meta-data");
    }
    AttributeSet attrs=Xml.asAttributeSet(parser);
    int type;
    while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && type != XmlPullParser.START_TAG) {
    }
    String nodeName=parser.getName();
    if (!"input-method".equals(nodeName)) {
      throw new XmlPullParserException("Meta-data does not start with input-method tag");
    }
    TypedArray sa=context.getResources().obtainAttributes(attrs,com.android.internal.R.styleable.InputMethod);
    settingsActivityComponent=sa.getString(com.android.internal.R.styleable.InputMethod_settingsActivity);
    isDefaultResId=sa.getResourceId(com.android.internal.R.styleable.InputMethod_isDefault,0);
    sa.recycle();
  }
  finally {
    if (parser != null)     parser.close();
  }
  mSettingsActivityName=settingsActivityComponent;
  mIsDefaultResId=isDefaultResId;
}
