{
  super(address);
  mContext=context;
  mDevice=new BluetoothDevice(address);
  mService=service;
  mA2dpService=a2dpService;
  addState(mBondedDevice);
  addState(mOutgoingHandsfree);
  addState(mIncomingHandsfree);
  addState(mIncomingA2dp);
  addState(mOutgoingA2dp);
  setInitialState(mBondedDevice);
  IntentFilter filter=new IntentFilter();
  filter.addAction(BluetoothA2dp.ACTION_SINK_STATE_CHANGED);
  filter.addAction(BluetoothHeadset.ACTION_STATE_CHANGED);
  filter.addAction(BluetoothDevice.ACTION_ACL_CONNECTED);
  filter.addAction(BluetoothDevice.ACTION_ACL_DISCONNECTED);
  filter.addAction(BluetoothDevice.ACTION_CONNECTION_ACCESS_REPLY);
  mContext.registerReceiver(mBroadcastReceiver,filter);
  HeadsetServiceListener l=new HeadsetServiceListener();
  PbapServiceListener p=new PbapServiceListener();
  mIncomingConnections=mService.getIncomingState(address);
  mIncomingRejectTimer=readTimerValue();
  mPowerManager=(PowerManager)mContext.getSystemService(Context.POWER_SERVICE);
  mWakeLock=mPowerManager.newWakeLock(PowerManager.SCREEN_DIM_WAKE_LOCK | PowerManager.ACQUIRE_CAUSES_WAKEUP | PowerManager.ON_AFTER_RELEASE,TAG);
  mWakeLock.setReferenceCounted(false);
}
