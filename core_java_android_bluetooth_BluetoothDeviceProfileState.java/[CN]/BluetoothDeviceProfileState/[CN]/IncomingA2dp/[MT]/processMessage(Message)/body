{
  log("IncomingA2dp State->Processing Message: " + message.what);
switch (message.what) {
case CONNECT_HFP_OUTGOING:
    deferMessage(message);
  break;
case CONNECT_HFP_INCOMING:
deferMessage(message);
break;
case CONNECT_A2DP_INCOMING:
break;
case CONNECT_A2DP_OUTGOING:
deferMessage(message);
break;
case DISCONNECT_HFP_OUTGOING:
deferMessage(message);
break;
case DISCONNECT_HFP_INCOMING:
break;
case DISCONNECT_A2DP_OUTGOING:
deferMessage(message);
break;
case DISCONNECT_A2DP_INCOMING:
break;
case CONNECT_HID_OUTGOING:
case DISCONNECT_HID_OUTGOING:
deferMessage(message);
break;
case CONNECT_HID_INCOMING:
case DISCONNECT_HID_INCOMING:
break;
case DISCONNECT_PBAP_OUTGOING:
case UNPAIR:
case AUTO_CONNECT_PROFILES:
case CONNECT_OTHER_PROFILES:
deferMessage(message);
break;
case TRANSITION_TO_STABLE:
transitionTo(mBondedDevice);
break;
default :
return NOT_HANDLED;
}
return HANDLED;
}
