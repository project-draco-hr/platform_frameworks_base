{
  Matcher matcher=CLOCK_TIME.matcher(time);
  if (matcher.matches()) {
    String hours=matcher.group(1);
    double durationSeconds=Long.parseLong(hours) * 3600;
    String minutes=matcher.group(2);
    durationSeconds+=Long.parseLong(minutes) * 60;
    String seconds=matcher.group(3);
    durationSeconds+=Long.parseLong(seconds);
    String fraction=matcher.group(4);
    durationSeconds+=(fraction != null) ? Double.parseDouble(fraction) : 0;
    String frames=matcher.group(5);
    durationSeconds+=(frames != null) ? ((double)Long.parseLong(frames)) / frameRate : 0;
    String subframes=matcher.group(6);
    durationSeconds+=(subframes != null) ? ((double)Long.parseLong(subframes)) / subframeRate / frameRate : 0;
    return (long)(durationSeconds * 1000);
  }
  matcher=OFFSET_TIME.matcher(time);
  if (matcher.matches()) {
    String timeValue=matcher.group(1);
    double value=Double.parseDouble(timeValue);
    String unit=matcher.group(2);
    if (unit.equals("h")) {
      value*=3600L * 1000000L;
    }
 else     if (unit.equals("m")) {
      value*=60 * 1000000;
    }
 else     if (unit.equals("s")) {
      value*=1000000;
    }
 else     if (unit.equals("ms")) {
      value*=1000;
    }
 else     if (unit.equals("f")) {
      value=value / frameRate * 1000000;
    }
 else     if (unit.equals("t")) {
      value=value / tickRate * 1000000;
    }
    return (long)value;
  }
  throw new NumberFormatException("Malformed time expression : " + time);
}
