{
  MockPerformanceResultsWriter writer=new MockPerformanceResultsWriter();
  mPerfCollector.setPerformanceResultsWriter(writer);
  mPerfCollector.beginSnapshot("testSimpleSequence");
  mPerfCollector.startTiming("testSimpleSequenceTiming");
  workForRandomTinyPeriod();
  mPerfCollector.addIteration("iteration1");
  workForRandomTinyPeriod();
  mPerfCollector.addIteration("iteration2");
  workForRandomTinyPeriod();
  mPerfCollector.addIteration("iteration3");
  workForRandomTinyPeriod();
  mPerfCollector.addIteration("iteration4");
  workForRandomShortPeriod();
  Bundle timing=mPerfCollector.stopTiming("iteration5");
  workForRandomLongPeriod();
  Bundle snapshot1=mPerfCollector.endSnapshot();
  Bundle snapshot2=writer.snapshotResults;
  assertEqualsBundle(snapshot1,snapshot2);
  verifySnapshotBundle(snapshot1);
  ArrayList<String> labels=new ArrayList<String>();
  labels.add("iteration1");
  labels.add("iteration2");
  labels.add("iteration3");
  labels.add("iteration4");
  labels.add("iteration5");
  verifyTimingBundle(timing,labels);
}
