{
  if (mContext.checkCallingOrSelfPermission(android.Manifest.permission.DUMP) != PackageManager.PERMISSION_GRANTED) {
    pw.println("Permission Denial: can't dump StatusBar from from pid=" + Binder.getCallingPid() + ", uid="+ Binder.getCallingUid());
    return;
  }
  Slog.d(TAG,"dump!!!");
  pw.println("status!");
synchronized (mIcons) {
    mIcons.dump(pw);
  }
synchronized (mQueueLock) {
    pw.println("Current Status Bar state:");
    final int N=mQueue.size();
    pw.println("  mQueue.size=" + N);
    for (int i=0; i < N; i++) {
      PendingOp op=mQueue.get(i);
      pw.println("    [" + i + "] key="+ op.key+ " code="+ op.code+ " visible="+ op.visible);
      pw.println("           iconData=" + op.iconData);
      pw.println("           notificationData=" + op.notificationData);
    }
  }
synchronized (mNotificationData) {
    int N=mNotificationData.ongoingCount();
    pw.println("  ongoingCount.size=" + N);
    for (int i=0; i < N; i++) {
      StatusBarNotification n=mNotificationData.getOngoing(i);
      pw.println("    [" + i + "] key="+ n.key+ " view="+ n.view);
      pw.println("           data=" + n.data);
    }
    N=mNotificationData.latestCount();
    pw.println("  ongoingCount.size=" + N);
    for (int i=0; i < N; i++) {
      StatusBarNotification n=mNotificationData.getLatest(i);
      pw.println("    [" + i + "] key="+ n.key+ " view="+ n.view);
      pw.println("           data=" + n.data);
    }
  }
synchronized (mDisableRecords) {
    final int N=mDisableRecords.size();
    pw.println("  mDisableRecords.size=" + N + " mDisabled=0x"+ Integer.toHexString(mDisabled));
    for (int i=0; i < N; i++) {
      DisableRecord tok=mDisableRecords.get(i);
      pw.println("    [" + i + "] what=0x"+ Integer.toHexString(tok.what)+ " pkg="+ tok.pkg+ " token="+ tok.token);
    }
  }
}
