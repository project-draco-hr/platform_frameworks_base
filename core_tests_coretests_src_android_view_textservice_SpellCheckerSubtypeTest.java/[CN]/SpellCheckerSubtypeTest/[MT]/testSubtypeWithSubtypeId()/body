{
  final SpellCheckerSubtype subtype=new SpellCheckerSubtype(SUBTYPE_NAME_RES_ID_A,SUBTYPE_SUBTYPE_LOCALE_STRING_A,SUBTYPE_SUBTYPE_LANGUAGE_TAG_A,SUBTYPE_EXTRA_VALUE_A,SUBTYPE_SUBTYPE_ID_A);
  assertEquals(SUBTYPE_NAME_RES_ID_A,subtype.getNameResId());
  assertEquals(SUBTYPE_SUBTYPE_LOCALE_STRING_A,subtype.getLocale());
  assertEquals(SUBTYPE_SUBTYPE_LANGUAGE_TAG_A,subtype.getLanguageTag());
  assertEquals("Value1",subtype.getExtraValueOf("Key1"));
  assertEquals("Value2",subtype.getExtraValueOf("Key2"));
  assertEquals(SUBTYPE_SUBTYPE_ID_A,subtype.hashCode());
  final SpellCheckerSubtype clonedSubtype=cloneViaParcel(subtype);
  assertEquals(SUBTYPE_NAME_RES_ID_A,clonedSubtype.getNameResId());
  assertEquals(SUBTYPE_SUBTYPE_LOCALE_STRING_A,clonedSubtype.getLocale());
  assertEquals(SUBTYPE_SUBTYPE_LANGUAGE_TAG_A,clonedSubtype.getLanguageTag());
  assertEquals("Value1",clonedSubtype.getExtraValueOf("Key1"));
  assertEquals("Value2",clonedSubtype.getExtraValueOf("Key2"));
  assertEquals(SUBTYPE_SUBTYPE_ID_A,clonedSubtype.hashCode());
}
