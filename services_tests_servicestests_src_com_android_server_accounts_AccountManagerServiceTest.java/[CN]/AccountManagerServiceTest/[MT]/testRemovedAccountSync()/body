{
  unlockSystemUser();
  Account a1=new Account("account1","type1");
  Account a2=new Account("account2","type2");
  mAms.addAccountExplicitly(a1,"p1",null);
  mAms.addAccountExplicitly(a2,"p2",null);
  Context originalContext=((MyMockContext)getContext()).mTestContext;
  AccountManagerService ams2=createAccountManagerService(getContext(),originalContext);
  ams2.removeAccountInternal(a1);
  Account[] accounts=ams2.getAccounts(UserHandle.USER_SYSTEM,mContext.getOpPackageName());
  assertEquals(1,accounts.length);
  assertEquals("Only a2 should be returned",a2,accounts[0]);
  String ceDatabaseName=mAms.getCeDatabaseName(UserHandle.USER_SYSTEM);
  int accountsNumber=readNumberOfAccountsFromDbFile(originalContext,ceDatabaseName);
  assertEquals("CE database should still have 2 accounts",2,accountsNumber);
  ams2.onUserUnlocked(newIntentForUser(UserHandle.USER_SYSTEM));
  accountsNumber=readNumberOfAccountsFromDbFile(originalContext,ceDatabaseName);
  assertEquals("CE database should now have 1 account",2,accountsNumber);
  accounts=ams2.getAccounts(UserHandle.USER_SYSTEM,mContext.getOpPackageName());
  assertEquals(1,accounts.length);
  assertEquals("Only a2 should be returned",a2,accounts[0]);
}
