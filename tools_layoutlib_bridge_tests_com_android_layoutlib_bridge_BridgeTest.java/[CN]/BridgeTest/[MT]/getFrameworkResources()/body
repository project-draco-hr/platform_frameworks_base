{
  Map<String,Map<String,IResourceValue>> frameworkResources=new HashMap<String,Map<String,IResourceValue>>();
  Map<String,IResourceValue> styleMap=new HashMap<String,IResourceValue>();
  frameworkResources.put("style",styleMap);
  IStyleResourceValue style=createStyle("Widget.Button","background","@android:drawable/something","focusable","true","clickable","true","textAppearance","?android:attr/textAppearanceSmallInverse","textColor","?android:attr/textColorBrightInverseNoDisable","gravity","center_vertical|center_horizontal");
  styleMap.put(style.getName(),style);
  style=createStyle("Widget","textAppearance","?textAppearance");
  styleMap.put(style.getName(),style);
  style=createStyle("Theme",BridgeConstants.RES_STYLE,"buttonStyle","@android:style/Widget.Button",BridgeConstants.RES_STYLE,"textAppearance","@android:style/TextAppearance",BridgeConstants.RES_STYLE,"textAppearanceSmallInverse","@android:style/TextAppearance.Small.Inverse",BridgeConstants.RES_COLOR,"textColorBrightInverseNoDisable","@android:color/bright_text_light_nodisable");
  styleMap.put(style.getName(),style);
  Map<String,IResourceValue> drawableMap=new HashMap<String,IResourceValue>();
  frameworkResources.put("drawable",drawableMap);
  URL url=this.getClass().getClassLoader().getResource("data/button.9.png");
  IResourceValue drawable=new ResourceValue(BridgeConstants.RES_DRAWABLE,"something",url.getPath());
  drawableMap.put(drawable.getName(),drawable);
  return frameworkResources;
}
