{
  final Editable editable=(Editable)mTextView.getText();
  for (int i=0; i < results.length; i++) {
    SuggestionsInfo suggestionsInfo=results[i];
    if (suggestionsInfo.getCookie() != mCookie)     continue;
    final int sequenceNumber=suggestionsInfo.getSequence();
    for (int j=0; j < mLength; j++) {
      final SpellCheckSpan spellCheckSpan=mSpellCheckSpans[j];
      if (sequenceNumber == mIds[j]) {
        final int attributes=suggestionsInfo.getSuggestionsAttributes();
        boolean isInDictionary=((attributes & SuggestionsInfo.RESULT_ATTR_IN_THE_DICTIONARY) > 0);
        boolean looksLikeTypo=((attributes & SuggestionsInfo.RESULT_ATTR_LOOKS_LIKE_TYPO) > 0);
        if (!isInDictionary && looksLikeTypo) {
          String[] suggestions=getSuggestions(suggestionsInfo);
          SuggestionSpan suggestionSpan=new SuggestionSpan(mTextView.getContext(),suggestions,SuggestionSpan.FLAG_EASY_CORRECT | SuggestionSpan.FLAG_MISSPELLED);
          final int start=editable.getSpanStart(spellCheckSpan);
          final int end=editable.getSpanEnd(spellCheckSpan);
          editable.setSpan(suggestionSpan,start,end,Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
          mTextView.invalidate();
        }
        editable.removeSpan(spellCheckSpan);
      }
    }
  }
}
