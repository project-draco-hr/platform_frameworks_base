{
  int length=mIds.length;
  if (mLength >= length) {
    final int newSize=length * 2;
    int[] newIds=new int[newSize];
    SpellCheckSpan[] newSpellCheckSpans=new SpellCheckSpan[newSize];
    System.arraycopy(mIds,0,newIds,0,length);
    System.arraycopy(mSpellCheckSpans,0,newSpellCheckSpans,0,length);
    mIds=newIds;
    mSpellCheckSpans=newSpellCheckSpans;
  }
  mIds[mLength]=mSpanSequenceCounter++;
  mSpellCheckSpans[mLength]=spellCheckSpan;
  mLength++;
  if (DEBUG_SPELL_CHECK) {
    final Editable mText=(Editable)mTextView.getText();
    int start=mText.getSpanStart(spellCheckSpan);
    int end=mText.getSpanEnd(spellCheckSpan);
    if (start >= 0 && end >= 0) {
      Log.d(LOG_TAG,"Schedule check " + mText.subSequence(start,end));
    }
 else {
      Log.d(LOG_TAG,"Schedule check   EMPTY!");
    }
  }
  scheduleSpellCheck();
}
