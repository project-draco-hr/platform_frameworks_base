{
  if (DBG) {
    Log.d(TAG,"Start spell-checking: " + start + ", "+ end);
  }
  final Locale locale=mTextView.getSpellCheckerLocale();
  final boolean isSessionActive=isSessionActive();
  if (locale == null || mCurrentLocale == null || (!(mCurrentLocale.equals(locale)))) {
    setLocale(locale);
    start=0;
    end=mTextView.getText().length();
  }
 else {
    final boolean spellCheckerActivated=mTextServicesManager.isSpellCheckerEnabled();
    if (isSessionActive != spellCheckerActivated) {
      resetSession();
    }
  }
  if (!isSessionActive)   return;
  final int length=mSpellParsers.length;
  for (int i=0; i < length; i++) {
    final SpellParser spellParser=mSpellParsers[i];
    if (spellParser.isFinished()) {
      spellParser.parse(start,end);
      return;
    }
  }
  if (DBG) {
    Log.d(TAG,"new spell parser.");
  }
  SpellParser[] newSpellParsers=new SpellParser[length + 1];
  System.arraycopy(mSpellParsers,0,newSpellParsers,0,length);
  mSpellParsers=newSpellParsers;
  SpellParser spellParser=new SpellParser();
  mSpellParsers[length]=spellParser;
  spellParser.parse(start,end);
}
