{
  if (mTime == null) {
    return;
  }
  if (mShowRelativeTime) {
    updateRelativeTime();
    return;
  }
  int display;
  Date time=mTime;
  Time t=new Time();
  t.set(mTimeMillis);
  t.second=0;
  t.hour-=12;
  long twelveHoursBefore=t.toMillis(false);
  t.hour+=12;
  long twelveHoursAfter=t.toMillis(false);
  t.hour=0;
  t.minute=0;
  long midnightBefore=t.toMillis(false);
  t.monthDay++;
  long midnightAfter=t.toMillis(false);
  long nowMillis=System.currentTimeMillis();
  t.set(nowMillis);
  t.second=0;
  nowMillis=t.normalize(false);
  choose_display: {
    if ((nowMillis >= midnightBefore && nowMillis < midnightAfter) || (nowMillis >= twelveHoursBefore && nowMillis < twelveHoursAfter)) {
      display=SHOW_TIME;
      break choose_display;
    }
    display=SHOW_MONTH_DAY_YEAR;
    break choose_display;
  }
  DateFormat format;
  if (display == mLastDisplay && mLastFormat != null) {
    format=mLastFormat;
  }
 else {
switch (display) {
case SHOW_TIME:
      format=getTimeFormat();
    break;
case SHOW_MONTH_DAY_YEAR:
  format=DateFormat.getDateInstance(DateFormat.SHORT);
break;
default :
throw new RuntimeException("unknown display value: " + display);
}
mLastFormat=format;
}
String text=format.format(mTime);
setText(text);
if (display == SHOW_TIME) {
mUpdateTimeMillis=twelveHoursAfter > midnightAfter ? twelveHoursAfter : midnightAfter;
}
 else {
if (mTimeMillis < nowMillis) {
mUpdateTimeMillis=0;
}
 else {
mUpdateTimeMillis=twelveHoursBefore < midnightBefore ? twelveHoursBefore : midnightBefore;
}
}
}
