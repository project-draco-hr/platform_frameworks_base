{
  super.onInitializeAccessibilityNodeInfoInternal(info);
  if (mShowRelativeTime) {
    long now=System.currentTimeMillis();
    long duration=Math.abs(now - mTimeMillis);
    int count;
    boolean past=(now >= mTimeMillis);
    String result;
    if (duration < MINUTE_IN_MILLIS) {
      result=mNowText;
    }
 else     if (duration < HOUR_IN_MILLIS) {
      count=(int)(duration / MINUTE_IN_MILLIS);
      result=String.format(getContext().getResources().getQuantityString(past ? com.android.internal.R.plurals.duration_minutes_relative : com.android.internal.R.plurals.duration_minutes_relative_future,count),count);
    }
 else     if (duration < DAY_IN_MILLIS) {
      count=(int)(duration / HOUR_IN_MILLIS);
      result=String.format(getContext().getResources().getQuantityString(past ? com.android.internal.R.plurals.duration_hours_relative : com.android.internal.R.plurals.duration_hours_relative_future,count),count);
    }
 else     if (duration < YEAR_IN_MILLIS) {
      TimeZone timeZone=TimeZone.getDefault();
      count=Math.max(Math.abs(dayDistance(timeZone,mTimeMillis,now)),1);
      result=String.format(getContext().getResources().getQuantityString(past ? com.android.internal.R.plurals.duration_days_relative : com.android.internal.R.plurals.duration_days_relative_future,count),count);
    }
 else {
      count=(int)(duration / YEAR_IN_MILLIS);
      result=String.format(getContext().getResources().getQuantityString(past ? com.android.internal.R.plurals.duration_years_relative : com.android.internal.R.plurals.duration_years_relative_future,count),count);
    }
    info.setText(result);
  }
}
