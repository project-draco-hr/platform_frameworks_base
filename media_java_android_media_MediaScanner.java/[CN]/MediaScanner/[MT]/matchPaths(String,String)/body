{
  int result=0;
  int end1=path1.length();
  int end2=path2.length();
  while (end1 > 0 && end2 > 0) {
    int slash1=path1.lastIndexOf('/',end1 - 1);
    int slash2=path2.lastIndexOf('/',end2 - 1);
    int backSlash1=path1.lastIndexOf('\\',end1 - 1);
    int backSlash2=path2.lastIndexOf('\\',end2 - 1);
    int start1=(slash1 > backSlash1 ? slash1 : backSlash1);
    int start2=(slash2 > backSlash2 ? slash2 : backSlash2);
    if (start1 < 0)     start1=0;
 else     start1++;
    if (start2 < 0)     start2=0;
 else     start2++;
    int length=end1 - start1;
    if (end2 - start2 != length)     break;
    if (path1.regionMatches(true,start1,path2,start2,length)) {
      result++;
      end1=start1 - 1;
      end2=start2 - 1;
    }
 else     break;
  }
  return result;
}
