{
  String path=entry.mPath;
  ContentValues values=new ContentValues();
  int lastSlash=path.lastIndexOf('/');
  if (lastSlash < 0)   throw new IllegalArgumentException("bad path " + path);
  Uri uri, membersUri;
  long rowId=entry.mRowId;
  if (rowId == 0) {
    int lastDot=path.lastIndexOf('.');
    String name=(lastDot < 0 ? path.substring(lastSlash + 1) : path.substring(lastSlash + 1,lastDot));
    values.put(MediaStore.Audio.Playlists.NAME,name);
    values.put(MediaStore.Audio.Playlists.DATA,path);
    values.put(MediaStore.Audio.Playlists.DATE_MODIFIED,entry.mLastModified);
    uri=mMediaProvider.insert(mPlaylistsUri,values);
    rowId=ContentUris.parseId(uri);
    membersUri=Uri.withAppendedPath(uri,Playlists.Members.CONTENT_DIRECTORY);
  }
 else {
    uri=ContentUris.withAppendedId(mPlaylistsUri,rowId);
    values.put(MediaStore.Audio.Playlists.DATE_MODIFIED,entry.mLastModified);
    mMediaProvider.update(uri,values,null,null);
    membersUri=Uri.withAppendedPath(uri,Playlists.Members.CONTENT_DIRECTORY);
    mMediaProvider.delete(membersUri,null,null);
  }
  String playListDirectory=path.substring(0,lastSlash + 1);
  MediaFile.MediaFileType mediaFileType=MediaFile.getFileType(path);
  int fileType=(mediaFileType == null ? 0 : mediaFileType.fileType);
  if (fileType == MediaFile.FILE_TYPE_M3U) {
    processM3uPlayList(path,playListDirectory,membersUri,values);
  }
 else   if (fileType == MediaFile.FILE_TYPE_PLS) {
    processPlsPlayList(path,playListDirectory,membersUri,values);
  }
 else   if (fileType == MediaFile.FILE_TYPE_WPL) {
    processWplPlayList(path,playListDirectory,membersUri);
  }
}
