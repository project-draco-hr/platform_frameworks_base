{
  Cursor c=null;
  String where=null;
  String[] selectionArgs=null;
  if (mFileCache == null) {
    mFileCache=new HashMap<String,FileCacheEntry>();
  }
 else {
    mFileCache.clear();
  }
  if (mPlayLists == null) {
    mPlayLists=new ArrayList<FileCacheEntry>();
  }
 else {
    mPlayLists.clear();
  }
  if (filePath != null) {
    where=Files.FileColumns.DATA + "=?";
    selectionArgs=new String[]{filePath};
  }
  try {
    if (prescanFiles) {
      c=mMediaProvider.query(mFilesUri,PRESCAN_PROJECTION,where,selectionArgs,null);
      if (c != null) {
        while (c.moveToNext()) {
          long rowId=c.getLong(PRESCAN_ID_COLUMN_INDEX);
          String path=c.getString(PRESCAN_PATH_COLUMN_INDEX);
          long lastModified=c.getLong(PRESCAN_DATE_MODIFIED_COLUMN_INDEX);
          if (path.startsWith("/")) {
            String key=path;
            if (mCaseInsensitivePaths) {
              key=path.toLowerCase();
            }
            FileCacheEntry entry=new FileCacheEntry(mFilesUri,rowId,path,lastModified);
            mFileCache.put(key,entry);
          }
        }
        c.close();
        c=null;
      }
    }
    c=mMediaProvider.query(mAudioUri,PRESCAN_PROJECTION,where,selectionArgs,null);
    if (c != null) {
      while (c.moveToNext()) {
        long rowId=c.getLong(PRESCAN_ID_COLUMN_INDEX);
        String path=c.getString(PRESCAN_PATH_COLUMN_INDEX);
        long lastModified=c.getLong(PRESCAN_DATE_MODIFIED_COLUMN_INDEX);
        if (path.startsWith("/")) {
          String key=path;
          if (mCaseInsensitivePaths) {
            key=path.toLowerCase();
          }
          FileCacheEntry entry=mFileCache.get(path);
          if (entry == null) {
            mFileCache.put(key,new FileCacheEntry(mAudioUri,rowId,path,lastModified));
          }
 else {
            entry.mTableUri=mAudioUri;
            entry.mRowId=rowId;
          }
        }
      }
      c.close();
      c=null;
    }
    c=mMediaProvider.query(mVideoUri,PRESCAN_PROJECTION,where,selectionArgs,null);
    if (c != null) {
      while (c.moveToNext()) {
        long rowId=c.getLong(PRESCAN_ID_COLUMN_INDEX);
        String path=c.getString(PRESCAN_PATH_COLUMN_INDEX);
        long lastModified=c.getLong(PRESCAN_DATE_MODIFIED_COLUMN_INDEX);
        if (path.startsWith("/")) {
          String key=path;
          if (mCaseInsensitivePaths) {
            key=path.toLowerCase();
          }
          FileCacheEntry entry=mFileCache.get(path);
          if (entry == null) {
            mFileCache.put(key,new FileCacheEntry(mVideoUri,rowId,path,lastModified));
          }
 else {
            entry.mTableUri=mVideoUri;
            entry.mRowId=rowId;
          }
        }
      }
      c.close();
      c=null;
    }
    c=mMediaProvider.query(mImagesUri,PRESCAN_PROJECTION,where,selectionArgs,null);
    if (c != null) {
      while (c.moveToNext()) {
        long rowId=c.getLong(PRESCAN_ID_COLUMN_INDEX);
        String path=c.getString(PRESCAN_PATH_COLUMN_INDEX);
        long lastModified=c.getLong(PRESCAN_DATE_MODIFIED_COLUMN_INDEX);
        if (path.startsWith("/")) {
          String key=path;
          if (mCaseInsensitivePaths) {
            key=path.toLowerCase();
          }
          FileCacheEntry entry=mFileCache.get(path);
          if (entry == null) {
            mFileCache.put(key,new FileCacheEntry(mImagesUri,rowId,path,lastModified));
          }
 else {
            entry.mTableUri=mImagesUri;
            entry.mRowId=rowId;
          }
        }
      }
      c.close();
      c=null;
    }
    if (mProcessPlaylists) {
      c=mMediaProvider.query(mPlaylistsUri,PRESCAN_PROJECTION,where,selectionArgs,null);
      if (c != null) {
        while (c.moveToNext()) {
          long rowId=c.getLong(PRESCAN_ID_COLUMN_INDEX);
          String path=c.getString(PRESCAN_PATH_COLUMN_INDEX);
          long lastModified=c.getLong(PRESCAN_DATE_MODIFIED_COLUMN_INDEX);
          if (path.startsWith("/")) {
            String key=path;
            if (mCaseInsensitivePaths) {
              key=path.toLowerCase();
            }
            FileCacheEntry entry=mFileCache.get(path);
            if (entry == null) {
              mFileCache.put(key,new FileCacheEntry(mPlaylistsUri,rowId,path,lastModified));
            }
 else {
              entry.mTableUri=mPlaylistsUri;
              entry.mRowId=rowId;
            }
          }
        }
        c.close();
        c=null;
      }
    }
  }
  finally {
    if (c != null) {
      c.close();
    }
  }
}
