{
  Cursor c=null;
  String where=null;
  String[] selectionArgs=null;
  if (mPlayLists == null) {
    mPlayLists=new ArrayList<FileEntry>();
  }
 else {
    mPlayLists.clear();
  }
  if (filePath != null) {
    where=MediaStore.Files.FileColumns._ID + ">?" + " AND "+ Files.FileColumns.DATA+ "=?";
    selectionArgs=new String[]{"",filePath};
  }
 else {
    where=MediaStore.Files.FileColumns._ID + ">?";
    selectionArgs=new String[]{""};
  }
  mDefaultRingtoneSet=wasSettingAlreadySet(Settings.System.RINGTONE);
  mDefaultNotificationSet=wasSettingAlreadySet(Settings.System.NOTIFICATION_SOUND);
  mDefaultAlarmSet=wasSettingAlreadySet(Settings.System.ALARM_ALERT);
  Uri.Builder builder=mFilesUri.buildUpon();
  builder.appendQueryParameter(MediaStore.PARAM_DELETE_DATA,"false");
  MediaBulkDeleter deleter=new MediaBulkDeleter(mMediaProvider,mPackageName,builder.build());
  try {
    if (prescanFiles) {
      long lastId=Long.MIN_VALUE;
      Uri limitUri=mFilesUri.buildUpon().appendQueryParameter("limit","1000").build();
      while (true) {
        selectionArgs[0]="" + lastId;
        if (c != null) {
          c.close();
          c=null;
        }
        c=mMediaProvider.query(mPackageName,limitUri,FILES_PRESCAN_PROJECTION,where,selectionArgs,MediaStore.Files.FileColumns._ID,null);
        if (c == null) {
          break;
        }
        int num=c.getCount();
        if (num == 0) {
          break;
        }
        while (c.moveToNext()) {
          long rowId=c.getLong(FILES_PRESCAN_ID_COLUMN_INDEX);
          String path=c.getString(FILES_PRESCAN_PATH_COLUMN_INDEX);
          int format=c.getInt(FILES_PRESCAN_FORMAT_COLUMN_INDEX);
          long lastModified=c.getLong(FILES_PRESCAN_DATE_MODIFIED_COLUMN_INDEX);
          lastId=rowId;
          if (path != null && path.startsWith("/")) {
            boolean exists=false;
            try {
              exists=Os.access(path,android.system.OsConstants.F_OK);
            }
 catch (            ErrnoException e1) {
            }
            if (!exists && !MtpConstants.isAbstractObject(format)) {
              MediaFile.MediaFileType mediaFileType=MediaFile.getFileType(path);
              int fileType=(mediaFileType == null ? 0 : mediaFileType.fileType);
              if (!MediaFile.isPlayListFileType(fileType)) {
                deleter.delete(rowId);
                if (path.toLowerCase(Locale.US).endsWith("/.nomedia")) {
                  deleter.flush();
                  String parent=new File(path).getParent();
                  mMediaProvider.call(mPackageName,MediaStore.UNHIDE_CALL,parent,null);
                }
              }
            }
          }
        }
      }
    }
  }
  finally {
    if (c != null) {
      c.close();
    }
    deleter.flush();
  }
  mOriginalCount=0;
  c=mMediaProvider.query(mPackageName,mImagesUri,ID_PROJECTION,null,null,null,null);
  if (c != null) {
    mOriginalCount=c.getCount();
    c.close();
  }
}
