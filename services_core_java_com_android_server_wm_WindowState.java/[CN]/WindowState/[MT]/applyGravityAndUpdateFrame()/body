{
  final int pw=mContainingFrame.width();
  final int ph=mContainingFrame.height();
  final Task task=getTask();
  final boolean nonFullscreenTask=isInMultiWindowMode();
  final boolean fitToDisplay=task != null && !task.isFloating() && !layoutInParentFrame();
  float x, y;
  int w, h;
  if ((mAttrs.flags & FLAG_SCALED) != 0) {
    if (mAttrs.width < 0) {
      w=pw;
    }
 else     if (mEnforceSizeCompat) {
      w=(int)(mAttrs.width * mGlobalScale + .5f);
    }
 else {
      w=mAttrs.width;
    }
    if (mAttrs.height < 0) {
      h=ph;
    }
 else     if (mEnforceSizeCompat) {
      h=(int)(mAttrs.height * mGlobalScale + .5f);
    }
 else {
      h=mAttrs.height;
    }
  }
 else {
    if (mAttrs.width == MATCH_PARENT) {
      w=pw;
    }
 else     if (mEnforceSizeCompat) {
      w=(int)(mRequestedWidth * mGlobalScale + .5f);
    }
 else {
      w=mRequestedWidth;
    }
    if (mAttrs.height == MATCH_PARENT) {
      h=ph;
    }
 else     if (mEnforceSizeCompat) {
      h=(int)(mRequestedHeight * mGlobalScale + .5f);
    }
 else {
      h=mRequestedHeight;
    }
  }
  if (mEnforceSizeCompat) {
    x=mAttrs.x * mGlobalScale;
    y=mAttrs.y * mGlobalScale;
  }
 else {
    x=mAttrs.x;
    y=mAttrs.y;
  }
  if (nonFullscreenTask && !layoutInParentFrame()) {
    w=Math.min(w,pw);
    h=Math.min(h,ph);
  }
  Gravity.apply(mAttrs.gravity,w,h,mContainingFrame,(int)(x + mAttrs.horizontalMargin * pw),(int)(y + mAttrs.verticalMargin * ph),mFrame);
  if (fitToDisplay) {
    Gravity.applyDisplay(mAttrs.gravity,mDisplayFrame,mFrame);
  }
  mCompatFrame.set(mFrame);
  if (mEnforceSizeCompat) {
    mCompatFrame.scale(mInvGlobalScale);
  }
}
