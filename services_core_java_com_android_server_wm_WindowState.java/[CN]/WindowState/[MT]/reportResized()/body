{
  try {
    if (DEBUG_RESIZE || DEBUG_ORIENTATION)     Slog.v(TAG,"Reporting new frame to " + this + ": "+ mCompatFrame);
    boolean configChanged=isConfigChanged();
    if ((DEBUG_RESIZE || DEBUG_ORIENTATION || DEBUG_CONFIGURATION) && configChanged) {
      Slog.i(TAG,"Sending new config to window " + this + ": "+ mWinAnimator.mSurfaceW+ "x"+ mWinAnimator.mSurfaceH+ " / "+ mService.mCurConfiguration);
    }
    setConfiguration(mService.mCurConfiguration);
    if (DEBUG_ORIENTATION && mWinAnimator.mDrawState == WindowStateAnimator.DRAW_PENDING)     Slog.i(TAG,"Resizing " + this + " WITH DRAW PENDING");
    final Rect frame=mFrame;
    final Rect overscanInsets=mLastOverscanInsets;
    final Rect contentInsets=mLastContentInsets;
    final Rect visibleInsets=mLastVisibleInsets;
    final Rect stableInsets=mLastStableInsets;
    final Rect outsets=mLastOutsets;
    final boolean reportDraw=mWinAnimator.mDrawState == WindowStateAnimator.DRAW_PENDING;
    final Configuration newConfig=configChanged ? mConfiguration : null;
    if (mAttrs.type != WindowManager.LayoutParams.TYPE_APPLICATION_STARTING && mClient instanceof IWindow.Stub) {
      mService.mH.post(new Runnable(){
        @Override public void run(){
          try {
            mClient.resized(frame,overscanInsets,contentInsets,visibleInsets,stableInsets,outsets,reportDraw,newConfig);
          }
 catch (          RemoteException e) {
          }
        }
      }
);
    }
 else {
      mClient.resized(frame,overscanInsets,contentInsets,visibleInsets,stableInsets,outsets,reportDraw,newConfig);
    }
    if (mService.mAccessibilityController != null && getDisplayId() == Display.DEFAULT_DISPLAY) {
      mService.mAccessibilityController.onSomeWindowResizedOrMovedLocked();
    }
    mOverscanInsetsChanged=false;
    mContentInsetsChanged=false;
    mVisibleInsetsChanged=false;
    mStableInsetsChanged=false;
    mOutsetsChanged=false;
    mWinAnimator.mSurfaceResized=false;
  }
 catch (  RemoteException e) {
    mOrientationChanging=false;
    mLastFreezeDuration=(int)(SystemClock.elapsedRealtime() - mService.mDisplayFreezeTime);
  }
}
