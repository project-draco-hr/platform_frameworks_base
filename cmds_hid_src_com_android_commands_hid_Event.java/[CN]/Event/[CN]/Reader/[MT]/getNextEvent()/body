{
  Event e=null;
  while (e == null && mReader.peek() != JsonToken.END_DOCUMENT) {
    Event.Builder eb=new Event.Builder();
    try {
      mReader.beginObject();
      while (mReader.hasNext()) {
        String name=mReader.nextName();
switch (name) {
case "id":
          eb.setId(readInt());
        break;
case "command":
      eb.setCommand(mReader.nextString());
    break;
case "descriptor":
  eb.setDescriptor(readData());
break;
case "name":
eb.setName(mReader.nextString());
break;
case "vid":
eb.setVid(readInt());
break;
case "pid":
eb.setPid(readInt());
break;
case "report":
eb.setReport(readData());
break;
case "duration":
eb.setDuration(readInt());
break;
default :
mReader.skipValue();
}
}
mReader.endObject();
}
 catch (IllegalStateException ex) {
error("Error reading in object, ignoring.",ex);
consumeRemainingElements();
mReader.endObject();
continue;
}
e=eb.build();
}
return e;
}
