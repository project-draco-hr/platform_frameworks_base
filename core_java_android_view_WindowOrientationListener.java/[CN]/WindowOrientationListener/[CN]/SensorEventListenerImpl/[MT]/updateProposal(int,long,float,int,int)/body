{
  if (mProposalRotation != rotation) {
    mProposalRotation=rotation;
    mHistoryIndex=0;
    mHistoryLength=0;
  }
  final int index=mHistoryIndex;
  mHistoryTimestampMS[index]=timestampMS;
  mHistoryMagnitudes[index]=magnitude;
  mHistoryTiltAngles[index]=tiltAngle;
  mHistoryOrientationAngles[index]=orientationAngle;
  mHistoryIndex=(index + 1) % HISTORY_SIZE;
  if (mHistoryLength < HISTORY_SIZE) {
    mHistoryLength+=1;
  }
  long age=0;
  for (int i=1; i < mHistoryLength; i++) {
    final int olderIndex=(index + HISTORY_SIZE - i) % HISTORY_SIZE;
    if (Math.abs(mHistoryMagnitudes[olderIndex] - magnitude) > SETTLE_MAGNITUDE_MAX_DELTA) {
      break;
    }
    if (angleAbsoluteDelta(mHistoryTiltAngles[olderIndex],tiltAngle) > SETTLE_TILT_ANGLE_MAX_DELTA) {
      break;
    }
    if (angleAbsoluteDelta(mHistoryOrientationAngles[olderIndex],orientationAngle) > SETTLE_ORIENTATION_ANGLE_MAX_DELTA) {
      break;
    }
    age=timestampMS - mHistoryTimestampMS[olderIndex];
    if (age >= SETTLE_TIME_MS) {
      break;
    }
  }
  mProposalAgeMS=age;
}
