{
  mContext=context;
  mPm=pm;
  mAppOps=(AppOpsManager)mContext.getSystemService(Context.APP_OPS_SERVICE);
  mStagingDir=stagingDir;
  mInstallThread=new HandlerThread(TAG);
  mInstallThread.start();
  mInstallHandler=new Handler(mInstallThread.getLooper());
  mCallbacks=new Callbacks(mInstallThread.getLooper());
  mSessionsFile=new AtomicFile(new File(Environment.getSystemSecureDirectory(),"install_sessions.xml"));
  mSessionsDir=new File(Environment.getSystemSecureDirectory(),"install_sessions");
  mSessionsDir.mkdirs();
synchronized (mSessions) {
    readSessionsLocked();
    final ArraySet<File> unclaimedStages=Sets.newArraySet(mStagingDir.listFiles(sStageFilter));
    final ArraySet<File> unclaimedIcons=Sets.newArraySet(mSessionsDir.listFiles());
    for (int i=0; i < mSessions.size(); i++) {
      final PackageInstallerSession session=mSessions.valueAt(i);
      unclaimedStages.remove(session.stageDir);
      unclaimedIcons.remove(buildAppIconFile(session.sessionId));
    }
    for (    File stage : unclaimedStages) {
      Slog.w(TAG,"Deleting orphan stage " + stage);
      if (stage.isDirectory()) {
        mPm.mInstaller.rmPackageDir(stage.getAbsolutePath());
      }
 else {
        stage.delete();
      }
    }
    for (    File icon : unclaimedIcons) {
      Slog.w(TAG,"Deleting orphan icon " + icon);
      icon.delete();
    }
  }
}
