{
  if (LOGD)   Slog.v(TAG,"readSessionsLocked()");
  mSessions.clear();
  FileInputStream fis=null;
  try {
    fis=mSessionsFile.openRead();
    final XmlPullParser in=Xml.newPullParser();
    in.setInput(fis,StandardCharsets.UTF_8.name());
    int type;
    while ((type=in.next()) != END_DOCUMENT) {
      if (type == START_TAG) {
        final String tag=in.getName();
        if (TAG_SESSION.equals(tag)) {
          final PackageInstallerSession session=readSessionLocked(in);
          final long age=System.currentTimeMillis() - session.createdMillis;
          final boolean valid;
          if (age >= MAX_AGE_MILLIS) {
            Slog.w(TAG,"Abandoning old session first created at " + session.createdMillis);
            valid=false;
          }
 else {
            valid=true;
          }
          if (valid) {
            mSessions.put(session.sessionId,session);
          }
 else {
            mHistoricalSessions.put(session.sessionId,session);
          }
        }
      }
    }
  }
 catch (  FileNotFoundException e) {
  }
catch (  IOException e) {
    Slog.wtf(TAG,"Failed reading install sessions",e);
  }
catch (  XmlPullParserException e) {
    Slog.wtf(TAG,"Failed reading install sessions",e);
  }
 finally {
    IoUtils.closeQuietly(fis);
  }
}
