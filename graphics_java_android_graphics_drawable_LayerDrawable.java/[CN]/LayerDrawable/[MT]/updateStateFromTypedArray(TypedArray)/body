{
  final LayerState state=mLayerState;
  state.mChangingConfigurations|=a.getChangingConfigurations();
  state.mThemeAttrs=a.extractThemeAttrs();
  final int N=a.getIndexCount();
  for (int i=0; i < N; i++) {
    int attr=a.getIndex(i);
switch (attr) {
case R.styleable.LayerDrawable_opacity:
      state.mOpacityOverride=a.getInt(attr,state.mOpacityOverride);
    break;
case R.styleable.LayerDrawable_paddingTop:
  state.mPaddingTop=a.getDimensionPixelOffset(attr,state.mPaddingTop);
break;
case R.styleable.LayerDrawable_paddingBottom:
state.mPaddingBottom=a.getDimensionPixelOffset(attr,state.mPaddingBottom);
break;
case R.styleable.LayerDrawable_paddingLeft:
state.mPaddingLeft=a.getDimensionPixelOffset(attr,state.mPaddingLeft);
break;
case R.styleable.LayerDrawable_paddingRight:
state.mPaddingRight=a.getDimensionPixelOffset(attr,state.mPaddingRight);
break;
case R.styleable.LayerDrawable_paddingStart:
state.mPaddingStart=a.getDimensionPixelOffset(attr,state.mPaddingStart);
break;
case R.styleable.LayerDrawable_paddingEnd:
state.mPaddingEnd=a.getDimensionPixelOffset(attr,state.mPaddingEnd);
break;
case R.styleable.LayerDrawable_autoMirrored:
state.mAutoMirrored=a.getBoolean(attr,state.mAutoMirrored);
break;
case R.styleable.LayerDrawable_paddingMode:
state.mPaddingMode=a.getInteger(attr,state.mPaddingMode);
break;
}
}
}
