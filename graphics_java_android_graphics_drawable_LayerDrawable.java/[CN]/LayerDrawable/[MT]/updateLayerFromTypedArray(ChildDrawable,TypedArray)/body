{
  final LayerState state=mLayerState;
  state.mChildrenChangingConfigurations|=a.getChangingConfigurations();
  layer.mThemeAttrs=a.extractThemeAttrs();
  final int N=a.getIndexCount();
  for (int i=0; i < N; i++) {
    final int attr=a.getIndex(i);
switch (attr) {
case R.styleable.LayerDrawableItem_left:
      layer.mInsetL=a.getDimensionPixelOffset(attr,layer.mInsetL);
    break;
case R.styleable.LayerDrawableItem_top:
  layer.mInsetT=a.getDimensionPixelOffset(attr,layer.mInsetT);
break;
case R.styleable.LayerDrawableItem_right:
layer.mInsetR=a.getDimensionPixelOffset(attr,layer.mInsetR);
break;
case R.styleable.LayerDrawableItem_bottom:
layer.mInsetB=a.getDimensionPixelOffset(attr,layer.mInsetB);
break;
case R.styleable.LayerDrawableItem_start:
layer.mInsetS=a.getDimensionPixelOffset(attr,layer.mInsetS);
break;
case R.styleable.LayerDrawableItem_end:
layer.mInsetE=a.getDimensionPixelOffset(attr,layer.mInsetE);
break;
case R.styleable.LayerDrawableItem_width:
layer.mWidth=a.getDimensionPixelSize(attr,layer.mWidth);
break;
case R.styleable.LayerDrawableItem_height:
layer.mHeight=a.getDimensionPixelSize(attr,layer.mHeight);
break;
case R.styleable.LayerDrawableItem_gravity:
layer.mGravity=a.getInteger(attr,layer.mGravity);
break;
case R.styleable.LayerDrawableItem_id:
layer.mId=a.getResourceId(attr,layer.mId);
break;
}
}
final Drawable dr=a.getDrawable(R.styleable.LayerDrawableItem_drawable);
if (dr != null) {
layer.mDrawable=dr;
}
}
