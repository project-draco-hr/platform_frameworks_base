{
  TypedArray a;
  final int innerDepth=parser.getDepth() + 1;
  int type;
  int depth;
  while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && ((depth=parser.getDepth()) >= innerDepth || type != XmlPullParser.END_TAG)) {
    if (type != XmlPullParser.START_TAG) {
      continue;
    }
    if (depth > innerDepth || !parser.getName().equals("item")) {
      continue;
    }
    a=obtainAttributes(r,theme,attrs,R.styleable.LayerDrawableItem);
    final int[] themeAttrs=a.extractThemeAttrs();
    final int left=a.getDimensionPixelOffset(R.styleable.LayerDrawableItem_left,0);
    final int top=a.getDimensionPixelOffset(R.styleable.LayerDrawableItem_top,0);
    final int right=a.getDimensionPixelOffset(R.styleable.LayerDrawableItem_right,0);
    final int bottom=a.getDimensionPixelOffset(R.styleable.LayerDrawableItem_bottom,0);
    final int drawableRes=a.getResourceId(R.styleable.LayerDrawableItem_drawable,0);
    final int id=a.getResourceId(R.styleable.LayerDrawableItem_id,View.NO_ID);
    a.recycle();
    final Drawable dr;
    if (drawableRes != 0) {
      dr=r.getDrawable(drawableRes,theme);
    }
 else {
      while ((type=parser.next()) == XmlPullParser.TEXT) {
      }
      if (type != XmlPullParser.START_TAG) {
        throw new XmlPullParserException(parser.getPositionDescription() + ": <item> tag requires a 'drawable' attribute or " + "child tag defining a drawable");
      }
      dr=Drawable.createFromXmlInner(r,parser,attrs,theme);
    }
    addLayer(dr,themeAttrs,id,left,top,right,bottom);
  }
}
