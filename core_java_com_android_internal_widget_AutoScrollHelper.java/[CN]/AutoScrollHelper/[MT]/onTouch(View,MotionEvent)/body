{
  if (!mEnabled) {
    return false;
  }
  final int action=event.getActionMasked();
switch (action) {
case MotionEvent.ACTION_DOWN:
    mDownTime=event.getDownTime();
case MotionEvent.ACTION_MOVE:
  final float xValue=getEdgeValue(mRelativeEdges[HORIZONTAL],v.getWidth(),mMaximumEdges[HORIZONTAL],event.getX());
final float yValue=getEdgeValue(mRelativeEdges[VERTICAL],v.getHeight(),mMaximumEdges[VERTICAL],event.getY());
final float maxVelX=constrain(mRelativeVelocity[HORIZONTAL] * mTarget.getWidth(),mMinimumVelocity[HORIZONTAL],mMaximumVelocity[HORIZONTAL]);
final float maxVelY=constrain(mRelativeVelocity[VERTICAL] * mTarget.getHeight(),mMinimumVelocity[VERTICAL],mMaximumVelocity[VERTICAL]);
mScroller.setTargetVelocity(xValue * maxVelX,yValue * maxVelY);
if ((xValue != 0 || yValue != 0) && !mActive) {
mActive=true;
mResetScroller=true;
if (mRunnable == null) {
mRunnable=new AutoScrollRunnable();
}
if (mSkipDelay) {
mTarget.postOnAnimation(mRunnable);
}
 else {
mSkipDelay=true;
mTarget.postOnAnimationDelayed(mRunnable,mActivationDelay);
}
}
break;
case MotionEvent.ACTION_UP:
case MotionEvent.ACTION_CANCEL:
stop(true);
break;
}
return mExclusiveEnabled && mScrolling;
}
