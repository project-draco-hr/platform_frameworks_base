{
  final float relativeEdge=mRelativeEdges[direction];
  final float maximumEdge=mMaximumEdges[direction];
  final float value=getEdgeValue(relativeEdge,srcSize,maximumEdge,coordinate);
  if (value == 0) {
    return 0;
  }
  final float relativeVelocity=mRelativeVelocity[direction];
  final float minimumVelocity=mMinimumVelocity[direction];
  final float maximumVelocity=mMaximumVelocity[direction];
  final float targetVelocity=relativeVelocity * dstSize;
  if (value > 0) {
    return constrain(value * targetVelocity,minimumVelocity,maximumVelocity);
  }
 else {
    return -constrain(-value * targetVelocity,minimumVelocity,maximumVelocity);
  }
}
