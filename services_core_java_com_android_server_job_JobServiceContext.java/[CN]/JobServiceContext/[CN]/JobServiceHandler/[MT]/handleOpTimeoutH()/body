{
  if (JobSchedulerService.DEBUG) {
    Slog.d(TAG,"MSG_TIMEOUT of " + mRunningJob.getServiceComponent().getShortClassName() + " : "+ mParams.getJobId());
  }
  final int jobId=mParams.getJobId();
switch (mVerb) {
case VERB_STARTING:
    Slog.e(TAG,"No response from client for onStartJob '" + mRunningJob.getServiceComponent().getShortClassName() + "' jId: "+ jobId);
  closeAndCleanupJobH(false);
break;
case VERB_STOPPING:
Slog.e(TAG,"No response from client for onStopJob, '" + mRunningJob.getServiceComponent().getShortClassName() + "' jId: "+ jobId);
closeAndCleanupJobH(true);
break;
case VERB_EXECUTING:
Slog.i(TAG,"Client timed out while executing (no jobFinished received)." + " sending onStop. " + mRunningJob.getServiceComponent().getShortClassName() + "' jId: "+ jobId);
sendStopMessageH();
break;
default :
Slog.e(TAG,"Handling timeout for an unknown active job state: " + mRunningJob);
return;
}
}
