{
  mDatabase.lock(mSql);
  long timeStart=SystemClock.uptimeMillis();
  try {
    acquireReference();
    try {
      window.acquireReference();
      long result=nativeFillWindow(nHandle,nStatement,window.mWindowPtr,mOffsetIndex,startPos,requiredPos,countAllRows);
      int actualPos=(int)(result >> 32);
      int countedRows=(int)result;
      window.setStartPosition(actualPos);
      if (DEBUG_FILL_WINDOW_PERFORMANCE) {
        Log.d(TAG,"fillWindow: window=\"" + window + "\", startPos="+ startPos+ ", requiredPos="+ requiredPos+ ", countAllRows="+ countAllRows+ ", offset="+ mOffsetIndex+ ", actualPos="+ actualPos+ ", filledRows="+ window.getNumRows()+ ", countedRows="+ countedRows+ ", took "+ (SystemClock.uptimeMillis() - timeStart)+ " ms, query=\""+ mSql+ "\"");
      }
      mDatabase.logTimeStat(mSql,timeStart);
      return countedRows;
    }
 catch (    IllegalStateException e) {
      return 0;
    }
catch (    SQLiteDatabaseCorruptException e) {
      mDatabase.onCorruption();
      throw e;
    }
catch (    SQLiteException e) {
      Log.e(TAG,"exception: " + e.getMessage() + "; query: "+ mSql);
      throw e;
    }
 finally {
      window.releaseReference();
    }
  }
  finally {
    releaseReference();
    mDatabase.unlock();
  }
}
