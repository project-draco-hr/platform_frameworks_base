{
synchronized (packageStats) {
    packageStats.clear();
    try {
      BufferedReader in=new BufferedReader(r);
      String versionLine=in.readLine();
      if (versionLine == null) {
        throw new IllegalArgumentException("No version line found.");
      }
 else {
        if (!versionLine.startsWith(COMPILER_STATS_VERSION_HEADER)) {
          throw new IllegalArgumentException("Invalid version line: " + versionLine);
        }
        int version=Integer.parseInt(versionLine.substring(COMPILER_STATS_VERSION_HEADER.length()));
        if (version != COMPILER_STATS_VERSION) {
          throw new IllegalArgumentException("Unexpected version: " + version);
        }
      }
      PackageStats currentPackage=new PackageStats("fake package");
      String s=null;
      while ((s=in.readLine()) != null) {
        if (s.startsWith("-")) {
          int colonIndex=s.indexOf(':');
          if (colonIndex == -1 || colonIndex == 1) {
            throw new IllegalArgumentException("Could not parse data " + s);
          }
          String codePath=s.substring(1,colonIndex);
          long time=Long.parseLong(s.substring(colonIndex + 1));
          currentPackage.setCompileTime(codePath,time);
        }
 else {
          currentPackage=getOrCreatePackageStats(s);
        }
      }
    }
 catch (    Exception e) {
      Log.e(PackageManagerService.TAG,"Error parsing compiler stats",e);
      return false;
    }
    return true;
  }
}
