{
  if (mStackScroller == null)   return;
  int N=mNotificationData.size();
  ArrayList<View> toShow=new ArrayList<View>();
  final boolean provisioned=isDeviceProvisioned();
  for (int i=0; i < N; i++) {
    Entry ent=mNotificationData.get(N - i - 1);
    if (!(provisioned || showNotificationEvenIfUnprovisioned(ent.notification)))     continue;
    if (!notificationIsForCurrentProfiles(ent.notification))     continue;
    final int vis=ent.notification.getNotification().visibility;
    if (vis != Notification.VISIBILITY_SECRET) {
      ent.row.setShowingPublic(isLockscreenPublicMode() && vis == Notification.VISIBILITY_PRIVATE && !userAllowsPrivateNotificationsInPublic(ent.notification.getUserId()));
      toShow.add(ent.row);
    }
  }
  ArrayList<View> toRemove=new ArrayList<View>();
  for (int i=0; i < mStackScroller.getChildCount(); i++) {
    View child=mStackScroller.getChildAt(i);
    if (!toShow.contains(child) && child != mKeyguardIconOverflowContainer) {
      toRemove.add(child);
    }
  }
  for (  View remove : toRemove) {
    mStackScroller.removeView(remove);
  }
  for (int i=0; i < toShow.size(); i++) {
    View v=toShow.get(i);
    if (v.getParent() == null) {
      mStackScroller.addView(v,i);
    }
  }
  mHeaderFlipper.provisionCheck(provisioned);
  mKeyguardFlipper.provisionCheck(provisioned);
}
