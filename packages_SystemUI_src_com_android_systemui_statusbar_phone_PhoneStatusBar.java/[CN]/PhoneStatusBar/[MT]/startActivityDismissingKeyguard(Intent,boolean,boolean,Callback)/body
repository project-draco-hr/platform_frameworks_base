{
  if (onlyProvisioned && !isDeviceProvisioned())   return;
  final boolean afterKeyguardGone=PreviewInflater.wouldLaunchResolverActivity(mContext,intent,mCurrentUserId);
  final boolean keyguardShowing=mStatusBarKeyguardViewManager.isShowing();
  Runnable runnable=new Runnable(){
    public void run(){
      mAssistManager.hideAssist();
      intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);
      int result=ActivityManager.START_CANCELED;
      try {
        result=ActivityManagerNative.getDefault().startActivityAsUser(null,mContext.getBasePackageName(),intent,intent.resolveTypeIfNeeded(mContext.getContentResolver()),null,null,0,Intent.FLAG_ACTIVITY_NEW_TASK,null,getActivityOptions(),UserHandle.CURRENT.getIdentifier());
      }
 catch (      RemoteException e) {
        Log.w(TAG,"Unable to start activity",e);
      }
      overrideActivityPendingAppTransition(keyguardShowing && !afterKeyguardGone);
      if (callback != null) {
        callback.onActivityStarted(result);
      }
    }
  }
;
  Runnable cancelRunnable=new Runnable(){
    @Override public void run(){
      if (callback != null) {
        callback.onActivityStarted(ActivityManager.START_CANCELED);
      }
    }
  }
;
  executeRunnableDismissingKeyguard(runnable,cancelRunnable,dismissShade,afterKeyguardGone);
}
