{
  boolean metaDataChanged=false;
synchronized (mNotificationData) {
    final int N=mNotificationData.size();
    Entry mediaNotification=null;
    MediaController controller=null;
    for (int i=0; i < N; i++) {
      final Entry entry=mNotificationData.get(i);
      if (isMediaNotification(entry)) {
        final MediaSession.Token token=entry.notification.getNotification().extras.getParcelable(Notification.EXTRA_MEDIA_SESSION);
        if (token != null) {
          controller=new MediaController(mContext,token);
          if (controller != null) {
            mediaNotification=entry;
          }
        }
      }
    }
    if (mediaNotification == null) {
      if (mMediaSessionManager != null) {
        final List<MediaController> sessions=mMediaSessionManager.getActiveSessionsForUser(null,UserHandle.USER_ALL);
        for (        MediaController aController : sessions) {
          if (aController == null)           continue;
          final PlaybackState state=aController.getPlaybackState();
          if (state == null)           continue;
switch (state.getState()) {
case PlaybackState.STATE_STOPPED:
case PlaybackState.STATE_ERROR:
            continue;
default :
          final String pkg=aController.getPackageName();
        for (int i=0; i < N; i++) {
          final Entry entry=mNotificationData.get(i);
          if (entry.notification.getPackageName().equals(pkg)) {
            if (DEBUG_MEDIA) {
              Log.v(TAG,"DEBUG_MEDIA: found controller matching " + entry.notification.getKey());
            }
            controller=aController;
            mediaNotification=entry;
            break;
          }
        }
    }
  }
}
}
if (controller != mMediaController) {
if (mMediaController != null) {
  Log.v(TAG,"DEBUG_MEDIA: Disconnecting from old controller: " + mMediaController);
  mMediaController.removeCallback(mMediaListener);
}
mMediaController=controller;
if (mMediaController != null) {
  mMediaController.addCallback(mMediaListener);
  mMediaMetadata=mMediaController.getMetadata();
  if (DEBUG_MEDIA) {
    Log.v(TAG,"DEBUG_MEDIA: insert listener, receive metadata: " + mMediaMetadata);
  }
  final String notificationKey=mediaNotification == null ? null : mediaNotification.notification.getKey();
  if (notificationKey == null || !notificationKey.equals(mMediaNotificationKey)) {
    if (DEBUG_MEDIA) {
      Log.v(TAG,"DEBUG_MEDIA: Found new media notification: key=" + notificationKey + " controller="+ controller);
    }
    mMediaNotificationKey=notificationKey;
  }
}
 else {
  mMediaMetadata=null;
  mMediaNotificationKey=null;
}
metaDataChanged=true;
}
 else {
if (DEBUG_MEDIA) {
  Log.v(TAG,"DEBUG_MEDIA: Continuing media notification: key=" + mMediaNotificationKey);
}
}
}
updateMediaMetaData(metaDataChanged);
}
