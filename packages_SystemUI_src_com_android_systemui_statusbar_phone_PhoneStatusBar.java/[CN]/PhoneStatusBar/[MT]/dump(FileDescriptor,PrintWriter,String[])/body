{
synchronized (mQueueLock) {
    pw.println("Current Status Bar state:");
    pw.println("  mExpandedVisible=" + mExpandedVisible + ", mTrackingPosition="+ mTrackingPosition);
    pw.println("  mTracking=" + mTracking);
    pw.println("  mDisplayMetrics=" + mDisplayMetrics);
    pw.println("  mStackScroller: " + viewInfo(mStackScroller));
    pw.println("  mStackScroller: " + viewInfo(mStackScroller) + " scroll "+ mStackScroller.getScrollX()+ ","+ mStackScroller.getScrollY());
  }
  pw.print("  mInteractingWindows=");
  pw.println(mInteractingWindows);
  pw.print("  mStatusBarWindowState=");
  pw.println(windowStateToString(mStatusBarWindowState));
  pw.print("  mStatusBarMode=");
  pw.println(BarTransitions.modeToString(mStatusBarMode));
  pw.print("  mDozing=");
  pw.println(mDozing);
  pw.print("  mZenMode=");
  pw.println(Settings.Global.zenModeToString(mZenMode));
  pw.print("  mUseHeadsUp=");
  pw.println(mUseHeadsUp);
  dumpBarTransitions(pw,"mStatusBarView",mStatusBarView.getBarTransitions());
  if (mNavigationBarView != null) {
    pw.print("  mNavigationBarWindowState=");
    pw.println(windowStateToString(mNavigationBarWindowState));
    pw.print("  mNavigationBarMode=");
    pw.println(BarTransitions.modeToString(mNavigationBarMode));
    dumpBarTransitions(pw,"mNavigationBarView",mNavigationBarView.getBarTransitions());
  }
  pw.print("  mNavigationBarView=");
  if (mNavigationBarView == null) {
    pw.println("null");
  }
 else {
    mNavigationBarView.dump(fd,pw,args);
  }
  pw.print("  mMediaSessionManager=");
  pw.println(mMediaSessionManager);
  pw.print("  mMediaNotificationKey=");
  pw.println(mMediaNotificationKey);
  pw.print("  mMediaController=");
  pw.print(mMediaController);
  if (mMediaController != null) {
    pw.print(" state=" + mMediaController.getPlaybackState());
  }
  pw.println();
  pw.print("  mMediaMetadata=");
  pw.print(mMediaMetadata);
  if (mMediaMetadata != null) {
    pw.print(" title=" + mMediaMetadata.getText(MediaMetadata.METADATA_KEY_TITLE));
  }
  pw.println();
  pw.println("  Panels: ");
  if (mNotificationPanel != null) {
    pw.println("    mNotificationPanel=" + mNotificationPanel + " params="+ mNotificationPanel.getLayoutParams().debug(""));
    pw.print("      ");
    mNotificationPanel.dump(fd,pw,args);
  }
  DozeLog.dump(pw);
  if (DUMPTRUCK) {
synchronized (mNotificationData) {
      mNotificationData.dump(pw,"  ");
    }
    mIconController.dump(pw);
    if (false) {
      pw.println("see the logcat for a dump of the views we have created.");
      mHandler.post(new Runnable(){
        public void run(){
          mStatusBarView.getLocationOnScreen(mAbsPos);
          Log.d(TAG,"mStatusBarView: ----- (" + mAbsPos[0] + ","+ mAbsPos[1]+ ") "+ mStatusBarView.getWidth()+ "x"+ getStatusBarHeight());
          mStatusBarView.debug();
        }
      }
);
    }
  }
  if (DEBUG_GESTURES) {
    pw.print("  status bar gestures: ");
    mGestureRec.dump(fd,pw,args);
  }
  if (mNetworkController != null) {
    mNetworkController.dump(fd,pw,args);
  }
  if (mBluetoothController != null) {
    mBluetoothController.dump(fd,pw,args);
  }
  if (mCastController != null) {
    mCastController.dump(fd,pw,args);
  }
  if (mUserSwitcherController != null) {
    mUserSwitcherController.dump(fd,pw,args);
  }
  if (mBatteryController != null) {
    mBatteryController.dump(fd,pw,args);
  }
  if (mNextAlarmController != null) {
    mNextAlarmController.dump(fd,pw,args);
  }
  if (mSecurityController != null) {
    mSecurityController.dump(fd,pw,args);
  }
  if (mHeadsUpManager != null) {
    mHeadsUpManager.dump(fd,pw,args);
  }
 else {
    pw.println("  mHeadsUpManager: null");
  }
  pw.println("SharedPreferences:");
  for (  Map.Entry<String,?> entry : Prefs.getAll(mContext).entrySet()) {
    pw.print("  ");
    pw.print(entry.getKey());
    pw.print("=");
    pw.println(entry.getValue());
  }
}
