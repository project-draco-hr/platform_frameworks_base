{
synchronized (mQueueLock) {
    pw.println("Current Status Bar state:");
    pw.println("  mExpandedVisible=" + mExpandedVisible + ", mTrackingPosition="+ mTrackingPosition);
    pw.println("  mTicking=" + mTicking);
    pw.println("  mTracking=" + mTracking);
    pw.println("  mDisplayMetrics=" + mDisplayMetrics);
    pw.println("  mPile: " + viewInfo(mPile));
    pw.println("  mTickerView: " + viewInfo(mTickerView));
    pw.println("  mScrollView: " + viewInfo(mScrollView) + " scroll "+ mScrollView.getScrollX()+ ","+ mScrollView.getScrollY());
  }
  pw.print("  mInteractingWindows=");
  pw.println(mInteractingWindows);
  pw.print("  mStatusBarWindowState=");
  pw.println(windowStateToString(mStatusBarWindowState));
  pw.print("  mStatusBarMode=");
  pw.println(BarTransitions.modeToString(mStatusBarMode));
  dumpBarTransitions(pw,"mStatusBarView",mStatusBarView.getBarTransitions());
  if (mNavigationBarView != null) {
    pw.print("  mNavigationBarWindowState=");
    pw.println(windowStateToString(mNavigationBarWindowState));
    pw.print("  mNavigationBarMode=");
    pw.println(BarTransitions.modeToString(mNavigationBarMode));
    dumpBarTransitions(pw,"mNavigationBarView",mNavigationBarView.getBarTransitions());
  }
  pw.print("  mNavigationBarView=");
  if (mNavigationBarView == null) {
    pw.println("null");
  }
 else {
    mNavigationBarView.dump(fd,pw,args);
  }
  pw.println("  Panels: ");
  if (mNotificationPanel != null) {
    pw.println("    mNotificationPanel=" + mNotificationPanel + " params="+ mNotificationPanel.getLayoutParams().debug(""));
    pw.print("      ");
    mNotificationPanel.dump(fd,pw,args);
  }
  if (mSettingsPanel != null) {
    pw.println("    mSettingsPanel=" + mSettingsPanel + " params="+ mSettingsPanel.getLayoutParams().debug(""));
    pw.print("      ");
    mSettingsPanel.dump(fd,pw,args);
  }
  if (DUMPTRUCK) {
synchronized (mNotificationData) {
      int N=mNotificationData.size();
      pw.println("  notification icons: " + N);
      for (int i=0; i < N; i++) {
        NotificationData.Entry e=mNotificationData.get(i);
        pw.println("    [" + i + "] key="+ e.key+ " icon="+ e.icon);
        StatusBarNotification n=e.notification;
        pw.println("         pkg=" + n.getPackageName() + " id="+ n.getId()+ " score="+ n.getScore());
        pw.println("         notification=" + n.getNotification());
        pw.println("         tickerText=\"" + n.getNotification().tickerText + "\"");
      }
    }
    int N=mStatusIcons.getChildCount();
    pw.println("  system icons: " + N);
    for (int i=0; i < N; i++) {
      StatusBarIconView ic=(StatusBarIconView)mStatusIcons.getChildAt(i);
      pw.println("    [" + i + "] icon="+ ic);
    }
    if (false) {
      pw.println("see the logcat for a dump of the views we have created.");
      mHandler.post(new Runnable(){
        public void run(){
          mStatusBarView.getLocationOnScreen(mAbsPos);
          Log.d(TAG,"mStatusBarView: ----- (" + mAbsPos[0] + ","+ mAbsPos[1]+ ") "+ mStatusBarView.getWidth()+ "x"+ getStatusBarHeight());
          mStatusBarView.debug();
        }
      }
);
    }
  }
  if (DEBUG_GESTURES) {
    pw.print("  status bar gestures: ");
    mGestureRec.dump(fd,pw,args);
  }
  mNetworkController.dump(fd,pw,args);
}
