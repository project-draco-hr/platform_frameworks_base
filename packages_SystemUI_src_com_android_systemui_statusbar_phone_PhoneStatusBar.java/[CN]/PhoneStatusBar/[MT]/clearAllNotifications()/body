{
  int numChildren=mStackScroller.getChildCount();
  final ArrayList<View> viewsToHide=new ArrayList<View>(numChildren);
  for (int i=0; i < numChildren; i++) {
    final View child=mStackScroller.getChildAt(i);
    if (child instanceof ExpandableNotificationRow) {
      if (mStackScroller.canChildBeDismissed(child)) {
        if (child.getVisibility() == View.VISIBLE) {
          viewsToHide.add(child);
        }
      }
      ExpandableNotificationRow row=(ExpandableNotificationRow)child;
      List<ExpandableNotificationRow> children=row.getNotificationChildren();
      if (row.areChildrenExpanded() && children != null) {
        for (        ExpandableNotificationRow childRow : children) {
          if (childRow.getVisibility() == View.VISIBLE) {
            viewsToHide.add(childRow);
          }
        }
      }
    }
  }
  if (viewsToHide.isEmpty()) {
    animateCollapsePanels(CommandQueue.FLAG_EXCLUDE_NONE);
    return;
  }
  addPostCollapseAction(new Runnable(){
    @Override public void run(){
      mStackScroller.setDismissAllInProgress(false);
      try {
        mBarService.onClearAllNotifications(mCurrentUserId);
      }
 catch (      Exception ex) {
      }
    }
  }
);
  performDismissAllAnimations(viewsToHide);
}
