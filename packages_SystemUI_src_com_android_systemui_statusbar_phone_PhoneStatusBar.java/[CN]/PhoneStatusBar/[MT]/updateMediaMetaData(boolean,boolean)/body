{
  if (!SHOW_LOCKSCREEN_MEDIA_ARTWORK)   return;
  if (mBackdrop == null)   return;
  if (mLaunchTransitionFadingAway) {
    mBackdrop.setVisibility(View.INVISIBLE);
    return;
  }
  if (DEBUG_MEDIA) {
    Log.v(TAG,"DEBUG_MEDIA: updating album art for notification " + mMediaNotificationKey + " metadata="+ mMediaMetadata+ " metaDataChanged="+ metaDataChanged+ " state="+ mState);
  }
  Bitmap artworkBitmap=null;
  if (mMediaMetadata != null) {
    artworkBitmap=mMediaMetadata.getBitmap(MediaMetadata.METADATA_KEY_ART);
    if (artworkBitmap == null) {
      artworkBitmap=mMediaMetadata.getBitmap(MediaMetadata.METADATA_KEY_ALBUM_ART);
    }
  }
  if (ENABLE_LOCKSCREEN_WALLPAPER && artworkBitmap == null) {
    artworkBitmap=mLockscreenWallpaper.getBitmap();
  }
  final boolean hasArtwork=artworkBitmap != null;
  if ((hasArtwork || DEBUG_MEDIA_FAKE_ARTWORK) && mState != StatusBarState.SHADE && mFingerprintUnlockController.getMode() != FingerprintUnlockController.MODE_WAKE_AND_UNLOCK_PULSING) {
    if (mBackdrop.getVisibility() != View.VISIBLE) {
      mBackdrop.setVisibility(View.VISIBLE);
      if (allowEnterAnimation) {
        mBackdrop.animate().alpha(1f);
      }
 else {
        mBackdrop.animate().cancel();
        mBackdrop.setAlpha(1f);
      }
      metaDataChanged=true;
      if (DEBUG_MEDIA) {
        Log.v(TAG,"DEBUG_MEDIA: Fading in album artwork");
      }
    }
    if (metaDataChanged) {
      if (mBackdropBack.getDrawable() != null) {
        Drawable drawable=mBackdropBack.getDrawable().getConstantState().newDrawable().mutate();
        mBackdropFront.setImageDrawable(drawable);
        if (mScrimSrcModeEnabled) {
          mBackdropFront.getDrawable().mutate().setXfermode(mSrcOverXferMode);
        }
        mBackdropFront.setAlpha(1f);
        mBackdropFront.setVisibility(View.VISIBLE);
      }
 else {
        mBackdropFront.setVisibility(View.INVISIBLE);
      }
      if (DEBUG_MEDIA_FAKE_ARTWORK) {
        final int c=0xFF000000 | (int)(Math.random() * 0xFFFFFF);
        Log.v(TAG,String.format("DEBUG_MEDIA: setting new color: 0x%08x",c));
        mBackdropBack.setBackgroundColor(0xFFFFFFFF);
        mBackdropBack.setImageDrawable(new ColorDrawable(c));
      }
 else {
        mBackdropBack.setImageBitmap(artworkBitmap);
      }
      if (mScrimSrcModeEnabled) {
        mBackdropBack.getDrawable().mutate().setXfermode(mSrcXferMode);
      }
      if (mBackdropFront.getVisibility() == View.VISIBLE) {
        if (DEBUG_MEDIA) {
          Log.v(TAG,"DEBUG_MEDIA: Crossfading album artwork from " + mBackdropFront.getDrawable() + " to "+ mBackdropBack.getDrawable());
        }
        mBackdropFront.animate().setDuration(250).alpha(0f).withEndAction(mHideBackdropFront);
      }
    }
  }
 else {
    if (mBackdrop.getVisibility() != View.GONE) {
      if (DEBUG_MEDIA) {
        Log.v(TAG,"DEBUG_MEDIA: Fading out album artwork");
      }
      if (mFingerprintUnlockController.getMode() == FingerprintUnlockController.MODE_WAKE_AND_UNLOCK_PULSING) {
        mBackdrop.setVisibility(View.GONE);
      }
 else {
        mBackdrop.animate().alpha(0.002f).setInterpolator(Interpolators.ACCELERATE_DECELERATE).setDuration(300).setStartDelay(0).withEndAction(new Runnable(){
          @Override public void run(){
            mBackdrop.setVisibility(View.GONE);
            mBackdropFront.animate().cancel();
            mBackdropBack.animate().cancel();
            mHandler.post(mHideBackdropFront);
          }
        }
);
        if (mKeyguardFadingAway) {
          mBackdrop.animate().setDuration(mKeyguardFadingAwayDuration / 2).setStartDelay(mKeyguardFadingAwayDelay).setInterpolator(Interpolators.LINEAR).start();
        }
      }
    }
  }
}
