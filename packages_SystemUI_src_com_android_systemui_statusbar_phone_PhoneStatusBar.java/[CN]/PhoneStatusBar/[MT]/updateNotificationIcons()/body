{
  final LinearLayout.LayoutParams params=new LinearLayout.LayoutParams(mIconSize + 2 * mIconHPadding,mNaturalBarHeight);
  ArrayList<Entry> activeNotifications=mNotificationData.getActiveNotifications();
  final int N=activeNotifications.size();
  ArrayList<StatusBarIconView> toShow=new ArrayList<>(N);
  for (int i=0; i < N; i++) {
    Entry ent=activeNotifications.get(i);
    if (ent.notification.getScore() < HIDE_ICONS_BELOW_SCORE && !NotificationData.showNotificationEvenIfUnprovisioned(ent.notification)) {
      continue;
    }
    toShow.add(ent.icon);
  }
  if (DEBUG) {
    Log.d(TAG,"refreshing icons: " + toShow.size() + " notifications, mNotificationIcons="+ mNotificationIcons);
  }
  ArrayList<View> toRemove=new ArrayList<View>();
  for (int i=0; i < mNotificationIcons.getChildCount(); i++) {
    View child=mNotificationIcons.getChildAt(i);
    if (!toShow.contains(child)) {
      toRemove.add(child);
    }
  }
  for (  View remove : toRemove) {
    mNotificationIcons.removeView(remove);
  }
  for (int i=0; i < toShow.size(); i++) {
    View v=toShow.get(i);
    if (v.getParent() == null) {
      mNotificationIcons.addView(v,i,params);
    }
  }
}
