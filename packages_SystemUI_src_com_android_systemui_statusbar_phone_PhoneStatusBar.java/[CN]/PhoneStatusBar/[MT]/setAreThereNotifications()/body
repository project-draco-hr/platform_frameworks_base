{
  final boolean any=mNotificationData.size() > 0;
  final boolean clearable=any && mNotificationData.hasClearableItems();
  if (DEBUG) {
    Slog.d(TAG,"setAreThereNotifications: N=" + mNotificationData.size() + " any="+ any+ " clearable="+ clearable);
  }
  if (mClearButton.isShown()) {
    if (clearable != (mClearButton.getAlpha() == 1.0f)) {
      ObjectAnimator clearAnimation=ObjectAnimator.ofFloat(mClearButton,"alpha",clearable ? 1.0f : 0.0f).setDuration(250);
      clearAnimation.addListener(new AnimatorListenerAdapter(){
        @Override public void onAnimationEnd(        Animator animation){
          if (mClearButton.getAlpha() <= 0.0f) {
            mClearButton.setVisibility(View.INVISIBLE);
          }
        }
        @Override public void onAnimationStart(        Animator animation){
          if (mClearButton.getAlpha() <= 0.0f) {
            mClearButton.setVisibility(View.VISIBLE);
          }
        }
      }
);
      clearAnimation.start();
    }
  }
 else {
    mClearButton.setAlpha(clearable ? 1.0f : 0.0f);
    mClearButton.setVisibility(clearable ? View.VISIBLE : View.INVISIBLE);
  }
  mClearButton.setEnabled(clearable);
  final View nlo=mStatusBarView.findViewById(R.id.notification_lights_out);
  final boolean showDot=(any && !areLightsOn());
  if (showDot != (nlo.getAlpha() == 1.0f)) {
    if (showDot) {
      nlo.setAlpha(0f);
      nlo.setVisibility(View.VISIBLE);
    }
    nlo.animate().alpha(showDot ? 1 : 0).setDuration(showDot ? 750 : 250).setInterpolator(new AccelerateInterpolator(2.0f)).setListener(showDot ? null : new AnimatorListenerAdapter(){
      @Override public void onAnimationEnd(      Animator _a){
        nlo.setVisibility(View.GONE);
      }
    }
).start();
  }
}
