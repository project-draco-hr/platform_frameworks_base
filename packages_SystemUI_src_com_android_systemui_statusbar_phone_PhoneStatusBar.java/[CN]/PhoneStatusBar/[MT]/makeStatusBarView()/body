{
  final Context context=mContext;
  Resources res=context.getResources();
  updateDisplaySize();
  loadDimens();
  mIconSize=res.getDimensionPixelSize(com.android.internal.R.dimen.status_bar_icon_size);
  mStatusBarWindow=(StatusBarWindowView)View.inflate(context,R.layout.super_status_bar,null);
  if (DEBUG) {
    mStatusBarWindow.setBackgroundColor(0x6000FF80);
  }
  mStatusBarWindow.mService=this;
  mStatusBarWindow.setOnTouchListener(new View.OnTouchListener(){
    @Override public boolean onTouch(    View v,    MotionEvent event){
      if (event.getAction() == MotionEvent.ACTION_DOWN) {
        if (mExpanded && !mAnimating) {
          animateCollapse();
        }
      }
      return true;
    }
  }
);
  mStatusBarView=(PhoneStatusBarView)mStatusBarWindow.findViewById(R.id.status_bar);
  mNotificationPanel=mStatusBarWindow.findViewById(R.id.notification_panel);
  if (ENABLE_INTRUDERS) {
    mIntruderAlertView=(IntruderAlertView)View.inflate(context,R.layout.intruder_alert,null);
    mIntruderAlertView.setVisibility(View.GONE);
    mIntruderAlertView.setBar(this);
  }
  mStatusBarView.mService=this;
  mChoreographer=Choreographer.getInstance();
  try {
    boolean showNav=mWindowManager.hasNavigationBar();
    if (DEBUG)     Slog.v(TAG,"hasNavigationBar=" + showNav);
    if (showNav) {
      mNavigationBarView=(NavigationBarView)View.inflate(context,R.layout.navigation_bar,null);
      mNavigationBarView.setDisabledFlags(mDisabled);
      mNavigationBarView.setBar(this);
    }
  }
 catch (  RemoteException ex) {
  }
  mPixelFormat=PixelFormat.OPAQUE;
  mStatusIcons=(LinearLayout)mStatusBarView.findViewById(R.id.statusIcons);
  mNotificationIcons=(IconMerger)mStatusBarView.findViewById(R.id.notificationIcons);
  mMoreIcon=mStatusBarView.findViewById(R.id.moreIcon);
  mNotificationIcons.setOverflowIndicator(mMoreIcon);
  mIcons=(LinearLayout)mStatusBarView.findViewById(R.id.icons);
  mTickerView=mStatusBarView.findViewById(R.id.ticker);
  mPile=(NotificationRowLayout)mStatusBarWindow.findViewById(R.id.latestItems);
  mPile.setLongPressListener(getNotificationLongClicker());
  mExpandedContents=mPile;
  mClearButton=mStatusBarWindow.findViewById(R.id.clear_all_button);
  mClearButton.setOnClickListener(mClearButtonListener);
  mClearButton.setAlpha(0f);
  mClearButton.setEnabled(false);
  mDateView=(DateView)mStatusBarWindow.findViewById(R.id.date);
  mSettingsButton=mStatusBarWindow.findViewById(R.id.settings_button);
  mSettingsButton.setOnClickListener(mSettingsButtonListener);
  mScrollView=(ScrollView)mStatusBarWindow.findViewById(R.id.scroll);
  mScrollView.setVerticalScrollBarEnabled(false);
  mTicker=new MyTicker(context,mStatusBarView);
  TickerView tickerView=(TickerView)mStatusBarView.findViewById(R.id.tickerText);
  tickerView.mTicker=mTicker;
  mCloseView=(CloseDragHandle)mStatusBarWindow.findViewById(R.id.close);
  mCloseView.mService=this;
  mCloseViewHeight=res.getDimensionPixelSize(R.dimen.close_handle_height);
  mEdgeBorder=res.getDimensionPixelSize(R.dimen.status_bar_edge_ignore);
  setAreThereNotifications();
  mLocationController=new LocationController(mContext);
  mBatteryController=new BatteryController(mContext);
  mBatteryController.addIconView((ImageView)mStatusBarView.findViewById(R.id.battery));
  mNetworkController=new NetworkController(mContext);
  final SignalClusterView signalCluster=(SignalClusterView)mStatusBarView.findViewById(R.id.signal_cluster);
  mNetworkController.addSignalCluster(signalCluster);
  signalCluster.setNetworkController(mNetworkController);
  mRecentTasksLoader=new RecentTasksLoader(context);
  updateRecentsPanel();
  IntentFilter filter=new IntentFilter();
  filter.addAction(Intent.ACTION_CONFIGURATION_CHANGED);
  filter.addAction(Intent.ACTION_CLOSE_SYSTEM_DIALOGS);
  filter.addAction(Intent.ACTION_SCREEN_OFF);
  context.registerReceiver(mBroadcastReceiver,filter);
  return mStatusBarView;
}
