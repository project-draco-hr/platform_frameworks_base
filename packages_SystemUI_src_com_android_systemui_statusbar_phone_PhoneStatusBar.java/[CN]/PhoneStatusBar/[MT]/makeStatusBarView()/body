{
  final Context context=mContext;
  Resources res=context.getResources();
  updateDisplaySize();
  loadDimens();
  mIconSize=res.getDimensionPixelSize(com.android.internal.R.dimen.status_bar_icon_size);
  mStatusBarWindow=(StatusBarWindowView)View.inflate(context,R.layout.super_status_bar,null);
  mStatusBarWindow.mService=this;
  mStatusBarWindow.setOnTouchListener(new View.OnTouchListener(){
    @Override public boolean onTouch(    View v,    MotionEvent event){
      if (event.getAction() == MotionEvent.ACTION_DOWN) {
        if (mExpandedVisible && !mAnimating) {
          animateCollapsePanels();
        }
      }
      return mStatusBarWindow.onTouchEvent(event);
    }
  }
);
  mStatusBarView=(PhoneStatusBarView)mStatusBarWindow.findViewById(R.id.status_bar);
  mStatusBarView.setBar(this);
  PanelHolder holder=(PanelHolder)mStatusBarWindow.findViewById(R.id.panel_holder);
  mStatusBarView.setPanelHolder(holder);
  mNotificationPanel=(PanelView)mStatusBarWindow.findViewById(R.id.notification_panel);
  mNotificationPanelIsFullScreenWidth=(mNotificationPanel.getLayoutParams().width == ViewGroup.LayoutParams.MATCH_PARENT);
  mNotificationPanel.setSystemUiVisibility(View.STATUS_BAR_DISABLE_NOTIFICATION_TICKER | View.STATUS_BAR_DISABLE_NOTIFICATION_ICONS | View.STATUS_BAR_DISABLE_CLOCK);
  if (!ActivityManager.isHighEndGfx()) {
    mStatusBarWindow.setBackground(null);
    mNotificationPanel.setBackground(new FastColorDrawable(context.getResources().getColor(R.color.notification_panel_solid_background)));
  }
  if (ENABLE_INTRUDERS) {
    mIntruderAlertView=(IntruderAlertView)View.inflate(context,R.layout.intruder_alert,null);
    mIntruderAlertView.setVisibility(View.GONE);
    mIntruderAlertView.setBar(this);
  }
  if (MULTIUSER_DEBUG) {
    mNotificationPanelDebugText=(TextView)mNotificationPanel.findViewById(R.id.header_debug_info);
    mNotificationPanelDebugText.setVisibility(View.VISIBLE);
  }
  updateShowSearchHoldoff();
  try {
    boolean showNav=mWindowManagerService.hasNavigationBar();
    if (DEBUG)     Slog.v(TAG,"hasNavigationBar=" + showNav);
    if (showNav) {
      mNavigationBarView=(NavigationBarView)View.inflate(context,R.layout.navigation_bar,null);
      mNavigationBarView.setDisabledFlags(mDisabled);
      mNavigationBarView.setBar(this);
    }
  }
 catch (  RemoteException ex) {
  }
  mPixelFormat=PixelFormat.OPAQUE;
  mSystemIconArea=(LinearLayout)mStatusBarView.findViewById(R.id.system_icon_area);
  mStatusIcons=(LinearLayout)mStatusBarView.findViewById(R.id.statusIcons);
  mNotificationIcons=(IconMerger)mStatusBarView.findViewById(R.id.notificationIcons);
  mNotificationIcons.setOverflowIndicator(mMoreIcon);
  mStatusBarContents=(LinearLayout)mStatusBarView.findViewById(R.id.status_bar_contents);
  mTickerView=mStatusBarView.findViewById(R.id.ticker);
  mPile=(NotificationRowLayout)mStatusBarWindow.findViewById(R.id.latestItems);
  mPile.setLayoutTransitionsEnabled(false);
  mPile.setLongPressListener(getNotificationLongClicker());
  mExpandedContents=mPile;
  mClearButton=mStatusBarWindow.findViewById(R.id.clear_all_button);
  mClearButton.setOnClickListener(mClearButtonListener);
  mClearButton.setAlpha(0f);
  mClearButton.setVisibility(View.INVISIBLE);
  mClearButton.setEnabled(false);
  mDateView=(DateView)mStatusBarWindow.findViewById(R.id.date);
  mSettingsButton=mStatusBarWindow.findViewById(R.id.settings_button);
  if (mSettingsButton != null) {
    mSettingsButton.setOnClickListener(mSettingsButtonListener);
  }
  mScrollView=(ScrollView)mStatusBarWindow.findViewById(R.id.scroll);
  mScrollView.setVerticalScrollBarEnabled(false);
  mTicker=new MyTicker(context,mStatusBarView);
  TickerView tickerView=(TickerView)mStatusBarView.findViewById(R.id.tickerText);
  tickerView.mTicker=mTicker;
  mEdgeBorder=res.getDimensionPixelSize(R.dimen.status_bar_edge_ignore);
  setAreThereNotifications();
  mLocationController=new LocationController(mContext);
  mBatteryController=new BatteryController(mContext);
  mBatteryController.addIconView((ImageView)mStatusBarView.findViewById(R.id.battery));
  mNetworkController=new NetworkController(mContext);
  mBluetoothController=new BluetoothController(mContext);
  final SignalClusterView signalCluster=(SignalClusterView)mStatusBarView.findViewById(R.id.signal_cluster);
  mNetworkController.addSignalCluster(signalCluster);
  signalCluster.setNetworkController(mNetworkController);
  mEmergencyCallLabel=(TextView)mStatusBarWindow.findViewById(R.id.emergency_calls_only);
  if (mEmergencyCallLabel != null) {
    mNetworkController.addEmergencyLabelView(mEmergencyCallLabel);
    mEmergencyCallLabel.addOnLayoutChangeListener(new View.OnLayoutChangeListener(){
      @Override public void onLayoutChange(      View v,      int left,      int top,      int right,      int bottom,      int oldLeft,      int oldTop,      int oldRight,      int oldBottom){
        updateCarrierLabelVisibility(false);
      }
    }
);
  }
  mCarrierLabel=(TextView)mStatusBarWindow.findViewById(R.id.carrier_label);
  mShowCarrierInPanel=(mCarrierLabel != null);
  Slog.v(TAG,"carrierlabel=" + mCarrierLabel + " show="+ mShowCarrierInPanel);
  if (mShowCarrierInPanel) {
    mCarrierLabel.setVisibility(mCarrierLabelVisible ? View.VISIBLE : View.INVISIBLE);
    if (mNetworkController.hasMobileDataFeature()) {
      mNetworkController.addMobileLabelView(mCarrierLabel);
    }
 else {
      mNetworkController.addCombinedLabelView(mCarrierLabel);
    }
    mPile.setOnSizeChangedListener(new OnSizeChangedListener(){
      @Override public void onSizeChanged(      View view,      int w,      int h,      int oldw,      int oldh){
        updateCarrierLabelVisibility(false);
      }
    }
);
  }
  mSettingsPanel=(SettingsPanelView)mStatusBarWindow.findViewById(R.id.settings_panel);
  mSettingsPanel.setBar(mStatusBarView);
  mSettingsPanel.setService(this);
  mSettingsPanel.setup(mNetworkController,mBluetoothController,mBatteryController,mLocationController);
  mSettingsPanel.setSystemUiVisibility(View.STATUS_BAR_DISABLE_NOTIFICATION_TICKER | View.STATUS_BAR_DISABLE_SYSTEM_INFO);
  if (!ActivityManager.isHighEndGfx()) {
    mSettingsPanel.setBackground(new FastColorDrawable(context.getResources().getColor(R.color.notification_panel_solid_background)));
  }
  IntentFilter filter=new IntentFilter();
  filter.addAction(Intent.ACTION_CONFIGURATION_CHANGED);
  filter.addAction(Intent.ACTION_CLOSE_SYSTEM_DIALOGS);
  filter.addAction(Intent.ACTION_SCREEN_OFF);
  filter.addAction(Intent.ACTION_SCREEN_ON);
  context.registerReceiver(mBroadcastReceiver,filter);
  return mStatusBarView;
}
