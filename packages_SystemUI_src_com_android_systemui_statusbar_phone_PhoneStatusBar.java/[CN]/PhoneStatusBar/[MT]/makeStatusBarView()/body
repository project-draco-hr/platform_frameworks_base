{
  final Context context=mContext;
  Resources res=context.getResources();
  updateDisplaySize();
  loadDimens();
  mIconSize=res.getDimensionPixelSize(com.android.internal.R.dimen.status_bar_icon_size);
  mStatusBarWindow=(StatusBarWindowView)View.inflate(context,R.layout.super_status_bar,null);
  mStatusBarWindow.mService=this;
  mStatusBarWindow.setOnTouchListener(new View.OnTouchListener(){
    @Override public boolean onTouch(    View v,    MotionEvent event){
      checkUserAutohide(v,event);
      if (event.getAction() == MotionEvent.ACTION_DOWN) {
        if (mExpandedVisible) {
          animateCollapsePanels();
        }
      }
      return mStatusBarWindow.onTouchEvent(event);
    }
  }
);
  mStatusBarView=(PhoneStatusBarView)mStatusBarWindow.findViewById(R.id.status_bar);
  mStatusBarView.setBar(this);
  PanelHolder holder=(PanelHolder)mStatusBarWindow.findViewById(R.id.panel_holder);
  mStatusBarView.setPanelHolder(holder);
  mNotificationPanel=(NotificationPanelView)mStatusBarWindow.findViewById(R.id.notification_panel);
  mNotificationPanel.setStatusBar(this);
  mNotificationPanelIsFullScreenWidth=(mNotificationPanel.getLayoutParams().width == ViewGroup.LayoutParams.MATCH_PARENT);
  mNotificationPanel.findViewById(R.id.header).setOnTouchListener(new View.OnTouchListener(){
    @Override public boolean onTouch(    View v,    MotionEvent event){
      return true;
    }
  }
);
  if (!ActivityManager.isHighEndGfx()) {
    mStatusBarWindow.setBackground(null);
    mNotificationPanel.setBackground(new FastColorDrawable(context.getResources().getColor(R.color.notification_panel_solid_background)));
  }
  if (ENABLE_HEADS_UP) {
    mHeadsUpNotificationView=(HeadsUpNotificationView)View.inflate(context,R.layout.heads_up,null);
    mHeadsUpNotificationView.setVisibility(View.GONE);
    mHeadsUpNotificationView.setBar(this);
  }
  if (MULTIUSER_DEBUG) {
    mNotificationPanelDebugText=(TextView)mNotificationPanel.findViewById(R.id.header_debug_info);
    mNotificationPanelDebugText.setVisibility(View.VISIBLE);
  }
  updateShowSearchHoldoff();
  try {
    boolean showNav=mWindowManagerService.hasNavigationBar();
    if (DEBUG)     Log.v(TAG,"hasNavigationBar=" + showNav);
    if (showNav) {
      mNavigationBarView=(NavigationBarView)View.inflate(context,R.layout.navigation_bar,null);
      mNavigationBarView.setDisabledFlags(mDisabled);
      mNavigationBarView.setBar(this);
      mNavigationBarView.setOnTouchListener(new View.OnTouchListener(){
        @Override public boolean onTouch(        View v,        MotionEvent event){
          checkUserAutohide(v,event);
          return false;
        }
      }
);
    }
  }
 catch (  RemoteException ex) {
  }
  mPixelFormat=PixelFormat.OPAQUE;
  mSystemIconArea=(LinearLayout)mStatusBarView.findViewById(R.id.system_icon_area);
  mSystemIcons=(LinearLayout)mStatusBarView.findViewById(R.id.system_icons);
  mStatusIcons=(LinearLayout)mStatusBarView.findViewById(R.id.statusIcons);
  mNotificationIcons=(IconMerger)mStatusBarView.findViewById(R.id.notificationIcons);
  mMoreIcon=mStatusBarView.findViewById(R.id.moreIcon);
  mNotificationIcons.setOverflowIndicator(mMoreIcon);
  mModeIcon=(ImageView)mStatusBarView.findViewById(R.id.modeIcon);
  mModeIcon.setImageResource(R.drawable.stat_sys_zen_limited);
  mStatusBarContents=(LinearLayout)mStatusBarView.findViewById(R.id.status_bar_contents);
  mTickerView=mStatusBarView.findViewById(R.id.ticker);
  mStackScroller=(NotificationStackScrollLayout)mStatusBarWindow.findViewById(R.id.notification_stack_scroller);
  mStackScroller.setLongPressListener(getNotificationLongClicker());
  mStackScroller.setChildLocationsChangedListener(mOnChildLocationsChangedListener);
  mKeyguardIconOverflowContainer=(NotificationOverflowContainer)LayoutInflater.from(mContext).inflate(R.layout.status_bar_notification_keyguard_overflow,mStackScroller,false);
  mKeyguardIconOverflowContainer.setOnActivatedListener(this);
  mKeyguardIconOverflowContainer.setOnClickListener(mOverflowClickListener);
  mStackScroller.addView(mKeyguardIconOverflowContainer);
  mExpandedContents=mStackScroller;
  mHeader=(StatusBarHeaderView)mStatusBarWindow.findViewById(R.id.header);
  mKeyguardStatusView=mStatusBarWindow.findViewById(R.id.keyguard_status_view);
  mKeyguardBottomArea=(KeyguardBottomAreaView)mStatusBarWindow.findViewById(R.id.keyguard_bottom_area);
  mKeyguardBottomArea.setActivityStarter(this);
  mKeyguardIndicationTextView=(KeyguardIndicationTextView)mStatusBarWindow.findViewById(R.id.keyguard_indication_text);
  mDateView=(DateView)mStatusBarWindow.findViewById(R.id.date);
  mDateTimeView=mHeader.findViewById(R.id.datetime);
  if (mDateTimeView != null) {
    mDateTimeView.setOnClickListener(mClockClickListener);
    mDateTimeView.setEnabled(true);
  }
  if (!mNotificationPanelIsFullScreenWidth) {
    mNotificationPanel.setSystemUiVisibility(View.STATUS_BAR_DISABLE_NOTIFICATION_ICONS | View.STATUS_BAR_DISABLE_CLOCK);
  }
  mTicker=new MyTicker(context,mStatusBarView);
  TickerView tickerView=(TickerView)mStatusBarView.findViewById(R.id.tickerText);
  tickerView.mTicker=mTicker;
  mEdgeBorder=res.getDimensionPixelSize(R.dimen.status_bar_edge_ignore);
  setAreThereNotifications();
  mLocationController=new LocationController(mContext);
  mBatteryController=new BatteryController(mContext);
  mNetworkController=new NetworkController(mContext);
  mBluetoothController=new BluetoothController(mContext);
  if (mContext.getResources().getBoolean(R.bool.config_showRotationLock) || QuickSettings.DEBUG_GONE_TILES) {
    mRotationLockController=new RotationLockController(mContext);
  }
  final SignalClusterView signalCluster=(SignalClusterView)mStatusBarView.findViewById(R.id.signal_cluster);
  mNetworkController.addSignalCluster(signalCluster);
  signalCluster.setNetworkController(mNetworkController);
  final boolean isAPhone=mNetworkController.hasVoiceCallingFeature();
  if (isAPhone) {
    mEmergencyCallLabel=(TextView)mStatusBarWindow.findViewById(R.id.emergency_calls_only);
  }
  mCarrierLabel=(TextView)mStatusBarWindow.findViewById(R.id.carrier_label);
  mShowCarrierInPanel=(mCarrierLabel != null);
  if (DEBUG)   Log.v(TAG,"carrierlabel=" + mCarrierLabel + " show="+ mShowCarrierInPanel);
  if (mShowCarrierInPanel) {
    mCarrierLabel.setVisibility(mCarrierLabelVisible ? View.VISIBLE : View.INVISIBLE);
    if (mNetworkController.hasMobileDataFeature()) {
      mNetworkController.addMobileLabelView(mCarrierLabel);
    }
 else {
      mNetworkController.addCombinedLabelView(mCarrierLabel);
    }
  }
  mSettingsContainer=(QuickSettingsContainerView)mStatusBarWindow.findViewById(R.id.quick_settings_container);
  mFlipSettingsView=mSettingsContainer;
  if (mSettingsContainer != null) {
    mQS=new QuickSettings(mContext,mSettingsContainer);
    if (!mNotificationPanelIsFullScreenWidth) {
      mSettingsContainer.setSystemUiVisibility(View.STATUS_BAR_DISABLE_NOTIFICATION_ICONS | View.STATUS_BAR_DISABLE_SYSTEM_INFO);
    }
    mQS.setService(this);
    mQS.setBar(mStatusBarView);
    mQS.setup(mNetworkController,mBluetoothController,mBatteryController,mLocationController,mRotationLockController);
  }
 else {
    mQS=null;
  }
  PowerManager pm=(PowerManager)mContext.getSystemService(Context.POWER_SERVICE);
  mBroadcastReceiver.onReceive(mContext,new Intent(pm.isScreenOn() ? Intent.ACTION_SCREEN_ON : Intent.ACTION_SCREEN_OFF));
  IntentFilter filter=new IntentFilter();
  filter.addAction(Intent.ACTION_CLOSE_SYSTEM_DIALOGS);
  filter.addAction(Intent.ACTION_SCREEN_OFF);
  filter.addAction(Intent.ACTION_SCREEN_ON);
  filter.addAction(ACTION_DEMO);
  context.registerReceiver(mBroadcastReceiver,filter);
  resetUserSetupObserver();
  return mStatusBarView;
}
