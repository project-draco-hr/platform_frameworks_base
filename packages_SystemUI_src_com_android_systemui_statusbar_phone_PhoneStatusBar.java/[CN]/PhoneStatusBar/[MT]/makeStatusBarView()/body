{
  final Context context=mContext;
  Resources res=context.getResources();
  updateDisplaySize();
  loadDimens();
  mIconSize=res.getDimensionPixelSize(com.android.internal.R.dimen.status_bar_icon_size);
  ExpandedView expanded=(ExpandedView)View.inflate(context,R.layout.status_bar_expanded,null);
  if (DEBUG) {
    expanded.setBackgroundColor(0x6000FF80);
  }
  expanded.mService=this;
  mIntruderAlertView=View.inflate(context,R.layout.intruder_alert,null);
  mIntruderAlertView.setVisibility(View.GONE);
  mIntruderAlertView.setClickable(true);
  PhoneStatusBarView sb=(PhoneStatusBarView)View.inflate(context,R.layout.status_bar,null);
  sb.mService=this;
  mStatusBarView=sb;
  try {
    boolean showNav=mWindowManager.hasNavigationBar();
    if (showNav) {
      mNavigationBarView=(NavigationBarView)View.inflate(context,R.layout.navigation_bar,null);
      mNavigationBarView.setDisabledFlags(mDisabled);
    }
  }
 catch (  RemoteException ex) {
  }
  mPixelFormat=PixelFormat.OPAQUE;
  mStatusIcons=(LinearLayout)sb.findViewById(R.id.statusIcons);
  mNotificationIcons=(IconMerger)sb.findViewById(R.id.notificationIcons);
  mIcons=(LinearLayout)sb.findViewById(R.id.icons);
  mTickerView=sb.findViewById(R.id.ticker);
  mExpandedDialog=new ExpandedDialog(context);
  mExpandedView=expanded;
  mPile=(NotificationRowLayout)expanded.findViewById(R.id.latestItems);
  mExpandedContents=mPile;
  mNoNotificationsTitle=(TextView)expanded.findViewById(R.id.noNotificationsTitle);
  mNoNotificationsTitle.setVisibility(View.GONE);
  mClearButton=expanded.findViewById(R.id.clear_all_button);
  mClearButton.setOnClickListener(mClearButtonListener);
  mClearButton.setAlpha(0f);
  mClearButton.setEnabled(false);
  mDateView=(DateView)expanded.findViewById(R.id.date);
  mSettingsButton=expanded.findViewById(R.id.settings_button);
  mSettingsButton.setOnClickListener(mSettingsButtonListener);
  mScrollView=(ScrollView)expanded.findViewById(R.id.scroll);
  mTicker=new MyTicker(context,sb);
  TickerView tickerView=(TickerView)sb.findViewById(R.id.tickerText);
  tickerView.mTicker=mTicker;
  mTrackingView=(TrackingView)View.inflate(context,R.layout.status_bar_tracking,null);
  mTrackingView.mService=this;
  mCloseView=(CloseDragHandle)mTrackingView.findViewById(R.id.close);
  mCloseView.mService=this;
  mEdgeBorder=res.getDimensionPixelSize(R.dimen.status_bar_edge_ignore);
  setAreThereNotifications();
  mLocationController=new LocationController(mContext);
  mBatteryController=new BatteryController(mContext);
  mBatteryController.addIconView((ImageView)sb.findViewById(R.id.battery));
  mNetworkController=new NetworkController(mContext);
  final SignalClusterView signalCluster=(SignalClusterView)sb.findViewById(R.id.signal_cluster);
  mNetworkController.addSignalCluster(signalCluster);
  signalCluster.setNetworkController(mNetworkController);
  final ImageView wimaxRSSI=(ImageView)sb.findViewById(R.id.wimax_signal);
  if (wimaxRSSI != null) {
    mNetworkController.addWimaxIconView(wimaxRSSI);
  }
  mRecentTasksLoader=new RecentTasksLoader(context);
  updateRecentsPanel();
  IntentFilter filter=new IntentFilter();
  filter.addAction(Intent.ACTION_CONFIGURATION_CHANGED);
  filter.addAction(Intent.ACTION_CLOSE_SYSTEM_DIALOGS);
  filter.addAction(Intent.ACTION_SCREEN_OFF);
  context.registerReceiver(mBroadcastReceiver,filter);
  return sb;
}
