{
  if (SPEW) {
    Slog.d(TAG,"Touch: rawY=" + event.getRawY() + " event="+ event+ " mDisabled="+ mDisabled);
  }
 else   if (CHATTY) {
    if (event.getAction() != MotionEvent.ACTION_MOVE) {
      Slog.d(TAG,String.format("panel: %s at (%f, %f) mDisabled=0x%08x",MotionEvent.actionToString(event.getAction()),event.getRawX(),event.getRawY(),mDisabled));
    }
  }
  if ((mDisabled & StatusBarManager.DISABLE_EXPAND) != 0) {
    return false;
  }
  final int action=event.getAction();
  final int statusBarSize=getStatusBarHeight();
  final int hitSize=statusBarSize * 2;
  final int y=(int)event.getRawY();
  if (action == MotionEvent.ACTION_DOWN) {
    if (!areLightsOn()) {
      setLightsOn(true);
    }
    if (!mExpanded) {
      mViewDelta=statusBarSize - y;
    }
 else {
    }
    if ((!mExpanded && y < hitSize) || (mExpanded && y > (getExpandedViewMaxHeight() - hitSize))) {
      int x=(int)event.getRawX();
      final int edgeBorder=mEdgeBorder;
      if (x >= edgeBorder && x < mDisplayMetrics.widthPixels - edgeBorder) {
        prepareTracking(y,!mExpanded);
        trackMovement(event);
      }
    }
  }
 else   if (mTracking) {
    trackMovement(event);
    final int minY=statusBarSize + getCloseViewHeight();
    if (action == MotionEvent.ACTION_MOVE) {
      if (mAnimatingReveal && (y + mViewDelta) < minY) {
      }
 else {
        mAnimatingReveal=false;
        updateExpandedViewPos(y + mViewDelta);
      }
    }
 else     if (action == MotionEvent.ACTION_UP || action == MotionEvent.ACTION_CANCEL) {
      mVelocityTracker.computeCurrentVelocity(1000);
      float yVel=mVelocityTracker.getYVelocity();
      boolean negative=yVel < 0;
      float xVel=mVelocityTracker.getXVelocity();
      if (xVel < 0) {
        xVel=-xVel;
      }
      if (xVel > mFlingGestureMaxXVelocityPx) {
        xVel=mFlingGestureMaxXVelocityPx;
      }
      float vel=(float)Math.hypot(yVel,xVel);
      if (negative) {
        vel=-vel;
      }
      if (CHATTY) {
        Slog.d(TAG,String.format("gesture: vraw=(%f,%f) vnorm=(%f,%f) vlinear=%f",mVelocityTracker.getXVelocity(),mVelocityTracker.getYVelocity(),xVel,yVel,vel));
      }
      performFling(y + mViewDelta,vel,false);
    }
  }
  return false;
}
