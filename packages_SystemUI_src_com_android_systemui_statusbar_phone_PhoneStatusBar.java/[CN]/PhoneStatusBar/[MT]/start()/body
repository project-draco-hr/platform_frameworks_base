{
  mDisplay=((WindowManager)mContext.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
  updateDisplaySize();
  mScrimSrcModeEnabled=mContext.getResources().getBoolean(R.bool.config_status_bar_scrim_behind_use_src);
  super.start();
  mMediaSessionManager=(MediaSessionManager)mContext.getSystemService(Context.MEDIA_SESSION_SERVICE);
  addNavigationBar();
  mIconPolicy=new PhoneStatusBarPolicy(mContext,mCastController,mHotspotController,mUserInfoController,mBluetoothController);
  mIconPolicy.setCurrentUserSetup(mUserSetup);
  mSettingsObserver.onChange(false);
  mHeadsUpObserver.onChange(true);
  if (ENABLE_HEADS_UP) {
    mContext.getContentResolver().registerContentObserver(Settings.Global.getUriFor(Settings.Global.HEADS_UP_NOTIFICATIONS_ENABLED),true,mHeadsUpObserver);
    mContext.getContentResolver().registerContentObserver(Settings.Global.getUriFor(SETTING_HEADS_UP_TICKER),true,mHeadsUpObserver);
  }
  mUnlockMethodCache=UnlockMethodCache.getInstance(mContext);
  mUnlockMethodCache.addListener(this);
  startKeyguard();
  mDozeServiceHost=new DozeServiceHost();
  KeyguardUpdateMonitor.getInstance(mContext).registerCallback(mDozeServiceHost);
  putComponent(DozeHost.class,mDozeServiceHost);
  putComponent(PhoneStatusBar.class,this);
  setControllerUsers();
  notifyUserAboutHiddenNotifications();
  mScreenPinningRequest=new ScreenPinningRequest(mContext);
  mFalsingManager=FalsingManager.getInstance(mContext);
}
