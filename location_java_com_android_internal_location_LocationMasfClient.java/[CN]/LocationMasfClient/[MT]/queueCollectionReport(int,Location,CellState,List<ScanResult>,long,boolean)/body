{
  ProtoBuf requestElement=new ProtoBuf(LocserverMessageTypes.GLOC_REQUEST_ELEMENT);
  if (trigger != -1) {
    ProtoBuf debugProfile=new ProtoBuf(GdebugprofileMessageTypes.GDEBUG_PROFILE);
    debugProfile.setInt(GDebugProfile.TRIGGER,trigger);
    requestElement.setProtoBuf(GLocRequestElement.DEBUG_PROFILE,debugProfile);
    EventLog.writeEvent(COLLECTION_EVENT_LOG_TAG,trigger);
  }
  if (cellState != null && cellState.isValid()) {
    ProtoBuf cellularProfile=new ProtoBuf(GcellularMessageTypes.GCELLULAR_PROFILE);
    cellularProfile.setLong(GCellularProfile.TIMESTAMP,cellState.getTime());
    ProtoBuf primaryCell=new ProtoBuf(GcellularMessageTypes.GCELL);
    primaryCell.setInt(GCell.LAC,cellState.getLac());
    primaryCell.setInt(GCell.CELLID,cellState.getCid());
    if ((cellState.getMcc() != -1) && (cellState.getMnc() != -1)) {
      primaryCell.setInt(GCell.MCC,cellState.getMcc());
      primaryCell.setInt(GCell.MNC,cellState.getMnc());
    }
    cellularProfile.setProtoBuf(GCellularProfile.PRIMARY_CELL,primaryCell);
    requestElement.setProtoBuf(GLocRequestElement.CELLULAR_PROFILE,cellularProfile);
  }
  if (scanResults != null && scanResults.size() > 0) {
    ProtoBuf wifiProfile=new ProtoBuf(GwifiMessageTypes.GWIFI_PROFILE);
    wifiProfile.setLong(GWifiProfile.TIMESTAMP,scanTime);
    int count=0;
    for (    ScanResult s : scanResults) {
      ProtoBuf wifiDevice=new ProtoBuf(GwifiMessageTypes.GWIFI_DEVICE);
      wifiDevice.setString(GWifiDevice.MAC,s.BSSID);
      wifiDevice.setString(GWifiDevice.SSID,s.SSID);
      wifiDevice.setInt(GWifiDevice.RSSI,s.level);
      wifiProfile.addProtoBuf(GWifiProfile.WIFI_DEVICES,wifiDevice);
      count++;
      if (count >= MAX_WIFI_TO_INCLUDE) {
        break;
      }
    }
    requestElement.setProtoBuf(GLocRequestElement.WIFI_PROFILE,wifiProfile);
  }
  if (location != null) {
    ProtoBuf latlngElement=new ProtoBuf(GlatlngMessageTypes.GLAT_LNG);
    latlngElement.setInt(GLatLng.LAT_E7,(int)(location.getLatitude() * E7));
    latlngElement.setInt(GLatLng.LNG_E7,(int)(location.getLongitude() * E7));
    ProtoBuf locationElement=new ProtoBuf(GlocationMessageTypes.GLOCATION);
    locationElement.setProtoBuf(GLocation.LAT_LNG,latlngElement);
    locationElement.setInt(GLocation.LOC_TYPE,GLocation.LOCTYPE_GPS);
    locationElement.setLong(GLocation.TIMESTAMP,location.getTime());
    if (location.hasAccuracy()) {
      locationElement.setInt(GLocation.ACCURACY,(int)location.getAccuracy());
    }
    if (location.hasSpeed()) {
      locationElement.setInt(GLocation.VELOCITY,(int)location.getSpeed());
    }
    if (location.hasBearing()) {
      locationElement.setInt(GLocation.HEADING,(int)location.getBearing());
    }
    requestElement.setProtoBuf(GLocRequestElement.LOCATION,locationElement);
  }
  if (mCurrentCollectionRequest == null) {
    mCurrentCollectionRequest=new ProtoBuf(LocserverMessageTypes.GLOC_REQUEST);
    ProtoBuf platformProfile=createPlatformProfile();
    if (cellState != null && cellState.isValid()) {
      ProtoBuf cellularPlatform=createCellularPlatformProfile(cellState);
      platformProfile.setProtoBuf(GPlatformProfile.CELLULAR_PLATFORM_PROFILE,cellularPlatform);
    }
    mCurrentCollectionRequest.setProtoBuf(GLocRequest.PLATFORM_PROFILE,platformProfile);
  }
  mCurrentCollectionRequest.addProtoBuf(GLocRequest.REQUEST_ELEMENTS,requestElement);
  if (mCurrentCollectionRequest.getCount(GLocRequest.REQUEST_ELEMENTS) >= MAX_COLLECTION_BUFFER_SIZE) {
    immediate=true;
  }
  if (immediate) {
    uploadCollectionReport(immediate);
  }
}
