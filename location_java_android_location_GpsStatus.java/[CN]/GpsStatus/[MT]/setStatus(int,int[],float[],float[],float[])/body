{
  clearSatellites();
  for (int i=0; i < svCount; i++) {
    final int constellationType=(svidWithFlags[i] >> GnssStatus.CONSTELLATION_TYPE_SHIFT_WIDTH) & GnssStatus.CONSTELLATION_TYPE_MASK;
    int prn=svidWithFlags[i] >> GnssStatus.SVID_SHIFT_WIDTH;
    if (constellationType == GnssStatus.CONSTELLATION_GLONASS) {
      prn+=GLONASS_SVID_OFFSET;
    }
 else     if (constellationType == GnssStatus.CONSTELLATION_BEIDOU) {
      prn+=BEIDOU_SVID_OFFSET;
    }
 else     if (constellationType == GnssStatus.CONSTELLATION_SBAS) {
      prn+=SBAS_SVID_OFFSET;
    }
 else     if ((constellationType != GnssStatus.CONSTELLATION_GPS) && (constellationType != GnssStatus.CONSTELLATION_QZSS)) {
      continue;
    }
    if (prn > 0 && prn <= NUM_SATELLITES) {
      GpsSatellite satellite=mSatellites.get(prn);
      if (satellite == null) {
        satellite=new GpsSatellite(prn);
        mSatellites.put(prn,satellite);
      }
      satellite.mValid=true;
      satellite.mSnr=cn0s[i];
      satellite.mElevation=elevations[i];
      satellite.mAzimuth=azimuths[i];
      satellite.mHasEphemeris=(svidWithFlags[i] & GnssStatus.GNSS_SV_FLAGS_HAS_EPHEMERIS_DATA) != 0;
      satellite.mHasAlmanac=(svidWithFlags[i] & GnssStatus.GNSS_SV_FLAGS_HAS_ALMANAC_DATA) != 0;
      satellite.mUsedInFix=(svidWithFlags[i] & GnssStatus.GNSS_SV_FLAGS_USED_IN_FIX) != 0;
    }
  }
}
