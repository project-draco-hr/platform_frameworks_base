{
  if (DBG)   log("query complete for token: " + token);
  CookieWrapper cw=(CookieWrapper)cookie;
  if (cw == null) {
    if (DBG)     log("Cookie is null, ignoring onQueryComplete() request.");
    return;
  }
  if (cw.event == EVENT_END_OF_QUEUE) {
    release();
    return;
  }
  if (mCallerInfo == null) {
    if ((mQueryContext == null) || (mQueryUri == null)) {
      throw new QueryPoolException("Bad context or query uri, or CallerInfoAsyncQuery already released.");
    }
    if (cw.event == EVENT_EMERGENCY_NUMBER) {
      mCallerInfo=new CallerInfo().markAsEmergency(mQueryContext);
    }
 else     if (cw.event == EVENT_VOICEMAIL_NUMBER) {
      mCallerInfo=new CallerInfo();
      try {
        mCallerInfo.phoneNumber=TelephonyManager.getDefault().getVoiceMailAlphaTag();
      }
 catch (      SecurityException ex) {
      }
    }
 else {
      mCallerInfo=CallerInfo.getCallerInfo(mQueryContext,mQueryUri,cursor);
      if (!TextUtils.isEmpty(cw.number)) {
        mCallerInfo.phoneNumber=PhoneNumberUtils.formatNumber(cw.number);
      }
    }
    if (DBG)     log("constructing CallerInfo object for token: " + token);
    CookieWrapper endMarker=new CookieWrapper();
    endMarker.event=EVENT_END_OF_QUEUE;
    startQuery(token,endMarker,null,null,null,null,null);
  }
  if (cw.listener != null) {
    if (DBG)     log("notifying listener: " + cw.listener.getClass().toString() + " for token: "+ token);
    cw.listener.onQueryComplete(token,cw.cookie,mCallerInfo);
  }
}
