{
  final Random r=new Random();
  final HashMap<Long,Long> map=new HashMap<Long,Long>();
  final LongSparseLongArray array=new LongSparseLongArray(r.nextInt(128));
  for (int i=0; i < 10240; i++) {
    if (r.nextBoolean()) {
      final long key=r.nextLong();
      final long value=r.nextLong();
      map.put(key,value);
      array.put(key,value);
    }
    if (r.nextBoolean() && map.size() > 0) {
      final int index=r.nextInt(map.size());
      final long key=getKeyAtIndex(map,index);
      map.remove(key);
      array.delete(key);
    }
  }
  Log.d(TAG,"verifying a map with " + map.size() + " entries");
  for (  Map.Entry<Long,Long> e : map.entrySet()) {
    final long key=e.getKey();
    final long value=e.getValue();
    assertEquals(value,array.get(key));
  }
}
