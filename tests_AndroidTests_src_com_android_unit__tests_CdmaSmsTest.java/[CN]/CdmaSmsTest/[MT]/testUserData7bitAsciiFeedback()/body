{
  BearerData bearerData=new BearerData();
  bearerData.messageType=BearerData.MESSAGE_TYPE_DELIVER;
  bearerData.messageId=0;
  bearerData.hasUserDataHeader=false;
  UserData userData=new UserData();
  userData.payloadStr="Test standard SMS";
  userData.msgEncoding=UserData.ENCODING_7BIT_ASCII;
  userData.msgEncodingSet=true;
  bearerData.userData=userData;
  byte[] encodedSms=BearerData.encode(bearerData);
  BearerData revBearerData=BearerData.decode(encodedSms);
  assertEquals(BearerData.MESSAGE_TYPE_DELIVER,revBearerData.messageType);
  assertEquals(0,revBearerData.messageId);
  assertEquals(false,revBearerData.hasUserDataHeader);
  assertEquals(userData.msgEncoding,revBearerData.userData.msgEncoding);
  assertEquals(userData.payloadStr.length(),revBearerData.userData.numFields);
  assertEquals(userData.payloadStr,revBearerData.userData.payloadStr);
  userData.payloadStr="Test \u007f standard \u0000 SMS";
  revBearerData=BearerData.decode(BearerData.encode(bearerData));
  assertEquals("Test   standard   SMS",revBearerData.userData.payloadStr);
  userData.payloadStr="Test \n standard \r SMS";
  revBearerData=BearerData.decode(BearerData.encode(bearerData));
  assertEquals(userData.payloadStr,revBearerData.userData.payloadStr);
}
