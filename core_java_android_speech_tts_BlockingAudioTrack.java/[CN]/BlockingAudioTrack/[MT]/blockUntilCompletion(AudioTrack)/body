{
  final int lengthInFrames=mBytesWritten / mBytesPerFrame;
  int previousPosition=-1;
  int currentPosition=0;
  long blockedTimeMs=0;
  while ((currentPosition=audioTrack.getPlaybackHeadPosition()) < lengthInFrames && audioTrack.getPlayState() == AudioTrack.PLAYSTATE_PLAYING && !mStopped) {
    final long estimatedTimeMs=((lengthInFrames - currentPosition) * 1000) / audioTrack.getSampleRate();
    final long sleepTimeMs=clip(estimatedTimeMs,MIN_SLEEP_TIME_MS,MAX_SLEEP_TIME_MS);
    if (currentPosition == previousPosition) {
      blockedTimeMs+=sleepTimeMs;
      if (blockedTimeMs > MAX_PROGRESS_WAIT_MS) {
        Log.w(TAG,"Waited unsuccessfully for " + MAX_PROGRESS_WAIT_MS + "ms "+ "for AudioTrack to make progress, Aborting");
        break;
      }
    }
 else {
      blockedTimeMs=0;
    }
    previousPosition=currentPosition;
    if (DBG) {
      Log.d(TAG,"About to sleep for : " + sleepTimeMs + " ms,"+ " Playback position : "+ currentPosition+ ", Length in frames : "+ lengthInFrames);
    }
    try {
      Thread.sleep(sleepTimeMs);
    }
 catch (    InterruptedException ie) {
      break;
    }
  }
}
