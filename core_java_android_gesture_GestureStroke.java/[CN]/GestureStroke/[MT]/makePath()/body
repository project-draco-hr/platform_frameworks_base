{
  final float[] localPoints=points;
  final int count=localPoints.length;
  Path path=null;
  float mX=0;
  float mY=0;
  for (int i=0; i < count; i+=2) {
    float x=localPoints[i];
    float y=localPoints[i + 1];
    if (path == null) {
      path=new Path();
      path.moveTo(x,y);
      mX=x;
      mY=y;
    }
 else {
      float dx=Math.abs(x - mX);
      float dy=Math.abs(y - mY);
      if (dx >= TOUCH_TOLERANCE || dy >= TOUCH_TOLERANCE) {
        path.quadTo(mX,mY,(x + mX) / 2,(y + mY) / 2);
        mX=x;
        mY=y;
      }
    }
  }
  mCachedPath=path;
}
