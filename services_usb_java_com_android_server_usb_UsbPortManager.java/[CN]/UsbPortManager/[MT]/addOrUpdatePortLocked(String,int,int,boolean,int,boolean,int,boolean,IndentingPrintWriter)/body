{
  if (supportedModes != UsbPort.MODE_DUAL) {
    canChangeMode=false;
    if (currentMode != 0 && currentMode != supportedModes) {
      logAndPrint(Log.WARN,pw,"Ignoring inconsistent current mode from USB " + "port driver: supportedModes=" + UsbPort.modeToString(supportedModes) + ", currentMode="+ UsbPort.modeToString(currentMode));
      currentMode=0;
    }
  }
  int supportedRoleCombinations=UsbPort.combineRolesAsBit(currentPowerRole,currentDataRole);
  if (currentMode != 0 && currentPowerRole != 0 && currentDataRole != 0) {
    if (canChangePowerRole && canChangeDataRole) {
      supportedRoleCombinations|=COMBO_SOURCE_HOST | COMBO_SOURCE_DEVICE | COMBO_SINK_HOST| COMBO_SINK_DEVICE;
    }
 else     if (canChangePowerRole) {
      supportedRoleCombinations|=UsbPort.combineRolesAsBit(UsbPort.POWER_ROLE_SOURCE,currentDataRole);
      supportedRoleCombinations|=UsbPort.combineRolesAsBit(UsbPort.POWER_ROLE_SINK,currentDataRole);
    }
 else     if (canChangeDataRole) {
      supportedRoleCombinations|=UsbPort.combineRolesAsBit(currentPowerRole,UsbPort.DATA_ROLE_HOST);
      supportedRoleCombinations|=UsbPort.combineRolesAsBit(currentPowerRole,UsbPort.DATA_ROLE_DEVICE);
    }
 else     if (canChangeMode) {
      supportedRoleCombinations|=COMBO_SOURCE_HOST | COMBO_SINK_DEVICE;
    }
  }
  PortInfo portInfo=mPorts.get(portId);
  if (portInfo == null) {
    portInfo=new PortInfo(portId,supportedModes);
    portInfo.setStatus(currentMode,canChangeMode,currentPowerRole,canChangePowerRole,currentDataRole,canChangeDataRole,supportedRoleCombinations);
    mPorts.put(portId,portInfo);
  }
 else {
    if (supportedModes != portInfo.mUsbPort.getSupportedModes()) {
      logAndPrint(Log.WARN,pw,"Ignoring inconsistent list of supported modes from " + "USB port driver (should be immutable): " + "previous=" + UsbPort.modeToString(portInfo.mUsbPort.getSupportedModes()) + ", current="+ UsbPort.modeToString(supportedModes));
    }
    if (portInfo.setStatus(currentMode,canChangeMode,currentPowerRole,canChangePowerRole,currentDataRole,canChangeDataRole,supportedRoleCombinations)) {
      portInfo.mDisposition=PortInfo.DISPOSITION_CHANGED;
    }
 else {
      portInfo.mDisposition=PortInfo.DISPOSITION_READY;
    }
  }
}
