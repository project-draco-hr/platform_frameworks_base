{
  Notification that=new Notification();
  that.when=this.when;
  that.icon=this.icon;
  that.number=this.number;
  that.contentIntent=this.contentIntent;
  that.deleteIntent=this.deleteIntent;
  that.fullScreenIntent=this.fullScreenIntent;
  if (this.tickerText != null) {
    that.tickerText=this.tickerText.toString();
  }
  if (this.tickerView != null) {
    that.tickerView=this.tickerView.clone();
  }
  if (this.contentView != null) {
    that.contentView=this.contentView.clone();
  }
  if (this.largeIcon != null) {
    that.largeIcon=Bitmap.createBitmap(this.largeIcon);
  }
  that.iconLevel=this.iconLevel;
  that.sound=this.sound;
  that.audioStreamType=this.audioStreamType;
  final long[] vibrate=this.vibrate;
  if (vibrate != null) {
    final int N=vibrate.length;
    final long[] vib=that.vibrate=new long[N];
    System.arraycopy(vibrate,0,vib,0,N);
  }
  that.ledARGB=this.ledARGB;
  that.ledOnMS=this.ledOnMS;
  that.ledOffMS=this.ledOffMS;
  that.defaults=this.defaults;
  that.flags=this.flags;
  that.priority=this.priority;
  final String[] thiskind=this.kind;
  if (thiskind != null) {
    final int N=thiskind.length;
    final String[] thatkind=that.kind=new String[N];
    System.arraycopy(thiskind,0,thatkind,0,N);
  }
  if (this.extras != null) {
    that.extras=new Bundle(this.extras);
  }
  that.actions=new Action[this.actions.length];
  for (int i=0; i < this.actions.length; i++) {
    that.actions[i]=this.actions[i].clone();
  }
  if (this.intruderView != null) {
    that.intruderView=this.intruderView.clone();
  }
  if (this.bigContentView != null) {
    that.bigContentView=this.bigContentView.clone();
  }
  return that;
}
