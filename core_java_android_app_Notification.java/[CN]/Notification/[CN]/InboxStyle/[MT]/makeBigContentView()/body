{
  CharSequence oldBuilderContentText=mBuilder.mN.extras.getCharSequence(EXTRA_TEXT);
  mBuilder.getAllExtras().putCharSequence(EXTRA_TEXT,null);
  RemoteViews contentView=getStandardView(mBuilder.getInboxLayoutResource());
  mBuilder.getAllExtras().putCharSequence(EXTRA_TEXT,oldBuilderContentText);
  contentView.setViewVisibility(R.id.text2,View.GONE);
  int[] rowIds={R.id.inbox_text0,R.id.inbox_text1,R.id.inbox_text2,R.id.inbox_text3,R.id.inbox_text4,R.id.inbox_text5,R.id.inbox_text6};
  for (  int rowId : rowIds) {
    contentView.setViewVisibility(rowId,View.GONE);
  }
  final boolean largeText=mBuilder.mContext.getResources().getConfiguration().fontScale > 1f;
  final float subTextSize=mBuilder.mContext.getResources().getDimensionPixelSize(R.dimen.notification_subtext_size);
  int i=0;
  while (i < mTexts.size() && i < rowIds.length) {
    CharSequence str=mTexts.get(i);
    if (str != null && !str.equals("")) {
      contentView.setViewVisibility(rowIds[i],View.VISIBLE);
      contentView.setTextViewText(rowIds[i],mBuilder.processLegacyText(str));
      if (largeText) {
        contentView.setTextViewTextSize(rowIds[i],TypedValue.COMPLEX_UNIT_PX,subTextSize);
      }
    }
    i++;
  }
  contentView.setViewVisibility(R.id.inbox_end_pad,mTexts.size() > 0 ? View.VISIBLE : View.GONE);
  contentView.setViewVisibility(R.id.inbox_more,mTexts.size() > rowIds.length ? View.VISIBLE : View.GONE);
  applyTopPadding(contentView);
  mBuilder.shrinkLine3Text(contentView);
  mBuilder.addProfileBadge(contentView,R.id.profile_badge_large_template);
  return contentView;
}
