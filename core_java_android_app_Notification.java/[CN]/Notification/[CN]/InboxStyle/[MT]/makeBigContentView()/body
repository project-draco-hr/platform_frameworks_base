{
  CharSequence oldBuilderContentText=mBuilder.mN.extras.getCharSequence(EXTRA_TEXT);
  mBuilder.getAllExtras().putCharSequence(EXTRA_TEXT,null);
  RemoteViews contentView=getStandardView(mBuilder.getInboxLayoutResource());
  mBuilder.getAllExtras().putCharSequence(EXTRA_TEXT,oldBuilderContentText);
  int[] rowIds={R.id.inbox_text0,R.id.inbox_text1,R.id.inbox_text2,R.id.inbox_text3,R.id.inbox_text4,R.id.inbox_text5,R.id.inbox_text6};
  for (  int rowId : rowIds) {
    contentView.setViewVisibility(rowId,View.GONE);
  }
  int i=0;
  int topPadding=mBuilder.mContext.getResources().getDimensionPixelSize(R.dimen.notification_inbox_item_top_padding);
  boolean first=true;
  int onlyViewId=0;
  int maxRows=rowIds.length;
  if (mBuilder.mActions.size() > 0) {
    maxRows--;
  }
  while (i < mTexts.size() && i < maxRows) {
    CharSequence str=mTexts.get(i);
    if (!TextUtils.isEmpty(str)) {
      contentView.setViewVisibility(rowIds[i],View.VISIBLE);
      contentView.setTextViewText(rowIds[i],mBuilder.processLegacyText(str));
      contentView.setViewPadding(rowIds[i],0,topPadding,0,0);
      handleInboxImageMargin(contentView,rowIds[i],first);
      if (first) {
        onlyViewId=rowIds[i];
      }
 else {
        onlyViewId=0;
      }
      first=false;
    }
    i++;
  }
  if (onlyViewId != 0) {
    topPadding=mBuilder.mContext.getResources().getDimensionPixelSize(R.dimen.notification_text_margin_top);
    contentView.setViewPadding(onlyViewId,0,topPadding,0,0);
  }
  return contentView;
}
