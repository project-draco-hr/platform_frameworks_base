{
  mContext=context;
  if (toAdopt == null) {
    mN=new Notification();
    if (context.getApplicationInfo().targetSdkVersion < Build.VERSION_CODES.N) {
      mN.extras.putBoolean(EXTRA_SHOW_WHEN,true);
    }
    mN.priority=PRIORITY_DEFAULT;
    mN.visibility=VISIBILITY_PRIVATE;
  }
 else {
    mN=toAdopt;
    if (mN.actions != null) {
      Collections.addAll(mActions,mN.actions);
    }
    if (mN.extras.containsKey(EXTRA_PEOPLE)) {
      Collections.addAll(mPersonList,mN.extras.getStringArray(EXTRA_PEOPLE));
    }
    if (mN.getSmallIcon() == null && mN.icon != 0) {
      setSmallIcon(mN.icon);
    }
    if (mN.getLargeIcon() == null && mN.largeIcon != null) {
      setLargeIcon(mN.largeIcon);
    }
    String templateClass=mN.extras.getString(EXTRA_TEMPLATE);
    if (!TextUtils.isEmpty(templateClass)) {
      final Class<? extends Style> styleClass=getNotificationStyleClass(templateClass);
      if (styleClass == null) {
        Log.d(TAG,"Unknown style class: " + templateClass);
      }
 else {
        try {
          final Constructor<? extends Style> ctor=styleClass.getDeclaredConstructor();
          ctor.setAccessible(true);
          final Style style=ctor.newInstance();
          style.restoreFromExtras(mN.extras);
          if (style != null) {
            setStyle(style);
          }
        }
 catch (        Throwable t) {
          Log.e(TAG,"Could not create Style",t);
        }
      }
    }
  }
}
