{
  RemoteViews contentView=new RemoteViews(mContext.getPackageName(),resId);
  boolean hasLine3=false;
  if (mSmallIcon != 0) {
    contentView.setImageViewResource(R.id.icon,mSmallIcon);
    contentView.setViewVisibility(R.id.icon,View.VISIBLE);
  }
 else {
    contentView.setViewVisibility(R.id.icon,View.GONE);
  }
  if (mContentTitle != null) {
    contentView.setTextViewText(R.id.title,mContentTitle);
  }
  if (mContentText != null) {
    contentView.setTextViewText(R.id.text,mContentText);
    hasLine3=true;
  }
  if (mContentInfo != null) {
    contentView.setTextViewText(R.id.info,mContentInfo);
    contentView.setViewVisibility(R.id.info,View.VISIBLE);
    hasLine3=true;
  }
 else   if (mNumber > 0) {
    final int tooBig=mContext.getResources().getInteger(R.integer.status_bar_notification_info_maxnum);
    if (mNumber > tooBig) {
      contentView.setTextViewText(R.id.info,mContext.getResources().getString(R.string.status_bar_notification_info_overflow));
    }
 else {
      NumberFormat f=NumberFormat.getIntegerInstance();
      contentView.setTextViewText(R.id.info,f.format(mNumber));
    }
    contentView.setViewVisibility(R.id.info,View.VISIBLE);
    hasLine3=true;
  }
 else {
    contentView.setViewVisibility(R.id.info,View.GONE);
  }
  if (mProgressMax != 0 || mProgressIndeterminate) {
    contentView.setProgressBar(R.id.progress,mProgressMax,mProgress,mProgressIndeterminate);
    contentView.setViewVisibility(R.id.progress,View.VISIBLE);
  }
 else {
    contentView.setViewVisibility(R.id.progress,View.GONE);
  }
  if (mWhen != 0) {
    contentView.setLong(R.id.time,"setTime",mWhen);
  }
  contentView.setViewVisibility(R.id.line3,hasLine3 ? View.VISIBLE : View.GONE);
  return contentView;
}
