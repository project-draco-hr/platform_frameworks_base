{
  Element.Builder b=new Element.Builder(mRS);
  int floatCount=mVtxSize;
  b.add(Element.createVector(mRS,Element.DataType.FLOAT_32,mVtxSize),"position");
  if ((mFlags & COLOR) != 0) {
    floatCount+=4;
    b.add(Element.F32_4(mRS),"color");
  }
  if ((mFlags & TEXTURE_0) != 0) {
    floatCount+=2;
    b.add(Element.F32_2(mRS),"texture0");
  }
  if ((mFlags & NORMAL) != 0) {
    floatCount+=3;
    b.add(Element.F32_3(mRS),"normal");
  }
  mElement=b.create();
  Builder smb=new Builder(mRS);
  smb.addVertexType(mElement,mVtxCount / floatCount);
  smb.addIndexType(Element.U16(mRS),mIndexCount,Primitive.TRIANGLE);
  Mesh sm=smb.create();
  sm.getVertexAllocation(0).data(mVtxData);
  if (uploadToBufferObject) {
    sm.getVertexAllocation(0).uploadToBufferObject();
  }
  sm.getIndexAllocation(0).data(mIndexData);
  sm.getIndexAllocation(0).uploadToBufferObject();
  return sm;
}
