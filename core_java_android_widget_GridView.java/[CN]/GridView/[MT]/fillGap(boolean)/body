{
  final int numColumns=mNumColumns;
  final int verticalSpacing=mVerticalSpacing;
  final int count=getChildCount();
  if (down) {
    final int startOffset=count > 0 ? getChildAt(count - 1).getBottom() + verticalSpacing : getListPaddingTop();
    int position=mFirstPosition + count;
    if (mStackFromBottom) {
      position+=numColumns - 1;
    }
    fillDown(position,startOffset);
    correctTooHigh(numColumns,verticalSpacing,getChildCount());
  }
 else {
    final int startOffset=count > 0 ? getChildAt(0).getTop() - verticalSpacing : getHeight() - getListPaddingBottom();
    int position=mFirstPosition;
    if (!mStackFromBottom) {
      position-=numColumns;
    }
 else {
      position--;
    }
    fillUp(position,startOffset);
    correctTooLow(numColumns,verticalSpacing,getChildCount());
  }
}
