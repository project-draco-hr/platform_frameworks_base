{
  StringTokenizer st=new StringTokenizer(settings,"=;");
  int tokens=st.countTokens();
  if (st.countTokens() < 5) {
    throw new IllegalArgumentException("settings: " + settings);
  }
  String key=st.nextToken();
  if (!key.equals("Equalizer")) {
    throw new IllegalArgumentException("invalid settings for Equalizer: " + key);
  }
  try {
    key=st.nextToken();
    if (!key.equals("curPreset")) {
      throw new IllegalArgumentException("invalid key name: " + key);
    }
    curPreset=Short.parseShort(st.nextToken());
    key=st.nextToken();
    if (!key.equals("numBands")) {
      throw new IllegalArgumentException("invalid key name: " + key);
    }
    numBands=Short.parseShort(st.nextToken());
    if (st.countTokens() != numBands * 2) {
      throw new IllegalArgumentException("settings: " + settings);
    }
    bandLevels=new short[numBands];
    for (int i=0; i < numBands; i++) {
      key=st.nextToken();
      if (!key.equals("band" + (i + 1) + "Level")) {
        throw new IllegalArgumentException("invalid key name: " + key);
      }
      bandLevels[i]=Short.parseShort(st.nextToken());
    }
  }
 catch (  NumberFormatException nfe) {
    throw new IllegalArgumentException("invalid value for key: " + key);
  }
}
