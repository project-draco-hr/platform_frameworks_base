{
  if (mRestoreType != RestoreDescription.TYPE_FULL_STREAM) {
    throw new IllegalStateException("Asked for full restore data for non-stream package");
  }
  if (mCurFullRestoreStream == null) {
    final String name=mRestorePackages[mRestorePackage].packageName;
    if (DEBUG)     Log.i(TAG,"Starting full restore of " + name);
    File dataset=new File(mRestoreSetFullDir,name);
    try {
      mCurFullRestoreStream=new FileInputStream(dataset);
    }
 catch (    IOException e) {
      Log.e(TAG,"Unable to read archive for " + name);
      return TRANSPORT_PACKAGE_REJECTED;
    }
    mFullRestoreSocketStream=new FileOutputStream(socket.getFileDescriptor());
    mFullRestoreBuffer=new byte[2 * 1024];
  }
  int nRead;
  try {
    nRead=mCurFullRestoreStream.read(mFullRestoreBuffer);
    if (nRead < 0) {
      nRead=NO_MORE_DATA;
    }
 else     if (nRead == 0) {
      Log.w(TAG,"read() of archive file returned 0; treating as EOF");
      nRead=NO_MORE_DATA;
    }
 else {
      if (DEBUG) {
        Log.i(TAG,"   delivering restore chunk: " + nRead);
      }
      mFullRestoreSocketStream.write(mFullRestoreBuffer,0,nRead);
    }
  }
 catch (  IOException e) {
    return TRANSPORT_ERROR;
  }
 finally {
  }
  return nRead;
}
