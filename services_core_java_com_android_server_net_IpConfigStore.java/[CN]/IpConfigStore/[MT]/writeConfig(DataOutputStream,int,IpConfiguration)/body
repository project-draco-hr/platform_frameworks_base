{
  boolean written=false;
  try {
    LinkProperties linkProperties=config.linkProperties;
switch (config.ipAssignment) {
case STATIC:
      out.writeUTF(IP_ASSIGNMENT_KEY);
    out.writeUTF(config.ipAssignment.toString());
  for (  LinkAddress linkAddr : linkProperties.getLinkAddresses()) {
    out.writeUTF(LINK_ADDRESS_KEY);
    out.writeUTF(linkAddr.getAddress().getHostAddress());
    out.writeInt(linkAddr.getNetworkPrefixLength());
  }
for (RouteInfo route : linkProperties.getRoutes()) {
  out.writeUTF(GATEWAY_KEY);
  LinkAddress dest=route.getDestination();
  if (dest != null) {
    out.writeInt(1);
    out.writeUTF(dest.getAddress().getHostAddress());
    out.writeInt(dest.getNetworkPrefixLength());
  }
 else {
    out.writeInt(0);
  }
  if (route.getGateway() != null) {
    out.writeInt(1);
    out.writeUTF(route.getGateway().getHostAddress());
  }
 else {
    out.writeInt(0);
  }
}
for (InetAddress inetAddr : linkProperties.getDnsServers()) {
out.writeUTF(DNS_KEY);
out.writeUTF(inetAddr.getHostAddress());
}
written=true;
break;
case DHCP:
out.writeUTF(IP_ASSIGNMENT_KEY);
out.writeUTF(config.ipAssignment.toString());
written=true;
break;
case UNASSIGNED:
break;
default :
loge("Ignore invalid ip assignment while writing");
break;
}
switch (config.proxySettings) {
case STATIC:
ProxyInfo proxyProperties=linkProperties.getHttpProxy();
String exclusionList=proxyProperties.getExclusionListAsString();
out.writeUTF(PROXY_SETTINGS_KEY);
out.writeUTF(config.proxySettings.toString());
out.writeUTF(PROXY_HOST_KEY);
out.writeUTF(proxyProperties.getHost());
out.writeUTF(PROXY_PORT_KEY);
out.writeInt(proxyProperties.getPort());
out.writeUTF(EXCLUSION_LIST_KEY);
out.writeUTF(exclusionList);
written=true;
break;
case PAC:
ProxyInfo proxyPacProperties=linkProperties.getHttpProxy();
out.writeUTF(PROXY_SETTINGS_KEY);
out.writeUTF(config.proxySettings.toString());
out.writeUTF(PROXY_PAC_FILE);
out.writeUTF(proxyPacProperties.getPacFileUrl().toString());
written=true;
break;
case NONE:
out.writeUTF(PROXY_SETTINGS_KEY);
out.writeUTF(config.proxySettings.toString());
written=true;
break;
case UNASSIGNED:
break;
default :
loge("Ignore invalid proxy settings while writing");
break;
}
if (written) {
out.writeUTF(ID_KEY);
out.writeInt(configKey);
}
}
 catch (NullPointerException e) {
loge("Failure in writing " + config.linkProperties + e);
}
out.writeUTF(EOS);
return written;
}
