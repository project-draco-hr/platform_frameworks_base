{
  boolean written=false;
  try {
switch (config.ipAssignment) {
case STATIC:
      out.writeUTF(IP_ASSIGNMENT_KEY);
    out.writeUTF(config.ipAssignment.toString());
  StaticIpConfiguration staticIpConfiguration=config.staticIpConfiguration;
if (staticIpConfiguration != null) {
  if (staticIpConfiguration.ipAddress != null) {
    LinkAddress ipAddress=staticIpConfiguration.ipAddress;
    out.writeUTF(LINK_ADDRESS_KEY);
    out.writeUTF(ipAddress.getAddress().getHostAddress());
    out.writeInt(ipAddress.getPrefixLength());
  }
  if (staticIpConfiguration.gateway != null) {
    out.writeUTF(GATEWAY_KEY);
    out.writeInt(0);
    out.writeInt(1);
    out.writeUTF(staticIpConfiguration.gateway.getHostAddress());
  }
  for (  InetAddress inetAddr : staticIpConfiguration.dnsServers) {
    out.writeUTF(DNS_KEY);
    out.writeUTF(inetAddr.getHostAddress());
  }
}
written=true;
break;
case DHCP:
out.writeUTF(IP_ASSIGNMENT_KEY);
out.writeUTF(config.ipAssignment.toString());
written=true;
break;
case UNASSIGNED:
break;
default :
loge("Ignore invalid ip assignment while writing");
break;
}
switch (config.proxySettings) {
case STATIC:
ProxyInfo proxyProperties=config.httpProxy;
String exclusionList=proxyProperties.getExclusionListAsString();
out.writeUTF(PROXY_SETTINGS_KEY);
out.writeUTF(config.proxySettings.toString());
out.writeUTF(PROXY_HOST_KEY);
out.writeUTF(proxyProperties.getHost());
out.writeUTF(PROXY_PORT_KEY);
out.writeInt(proxyProperties.getPort());
out.writeUTF(EXCLUSION_LIST_KEY);
out.writeUTF(exclusionList);
written=true;
break;
case PAC:
ProxyInfo proxyPacProperties=config.httpProxy;
out.writeUTF(PROXY_SETTINGS_KEY);
out.writeUTF(config.proxySettings.toString());
out.writeUTF(PROXY_PAC_FILE);
out.writeUTF(proxyPacProperties.getPacFileUrl().toString());
written=true;
break;
case NONE:
out.writeUTF(PROXY_SETTINGS_KEY);
out.writeUTF(config.proxySettings.toString());
written=true;
break;
case UNASSIGNED:
break;
default :
loge("Ignore invalid proxy settings while writing");
break;
}
if (written) {
out.writeUTF(ID_KEY);
out.writeInt(configKey);
}
}
 catch (NullPointerException e) {
loge("Failure in writing " + config + e);
}
out.writeUTF(EOS);
return written;
}
