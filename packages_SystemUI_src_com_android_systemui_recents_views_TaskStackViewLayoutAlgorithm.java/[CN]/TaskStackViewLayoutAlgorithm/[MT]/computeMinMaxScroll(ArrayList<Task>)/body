{
  if (DEBUG) {
    Log.d(TAG,"computeMinMaxScroll");
  }
  mTaskProgressMap.clear();
  mNumTasks=tasks.size();
  if (tasks.isEmpty()) {
    mMinScrollP=mMaxScrollP=0;
    return;
  }
  if (mNumTasks == 1) {
    mMinScrollP=mMaxScrollP=mInitialScrollP=0f;
    mTaskProgressMap.put(tasks.get(0).key,0f);
  }
 else {
    float pAtBackMostTaskTop=0;
    float pAtFrontMostTaskTop=pAtBackMostTaskTop;
    int taskCount=tasks.size();
    for (int i=0; i < taskCount; i++) {
      Task task=tasks.get(i);
      mTaskProgressMap.put(task.key,pAtFrontMostTaskTop);
      if (i < (taskCount - 1)) {
        float pPeek=task.group.isFrontMostTask(task) ? mBetweenAffiliationPOffset : mWithinAffiliationPOffset;
        pAtFrontMostTaskTop+=pPeek;
      }
    }
    mMaxScrollP=pAtFrontMostTaskTop - 1f + mTaskBottomPOffset + mTaskHeightPOffset;
    mMinScrollP=pAtBackMostTaskTop - 1f + mTaskBottomPOffset + mTaskHeightPOffset;
    mInitialScrollP=Math.max(mMinScrollP,mMaxScrollP - mTaskHalfHeightPOffset);
  }
}
