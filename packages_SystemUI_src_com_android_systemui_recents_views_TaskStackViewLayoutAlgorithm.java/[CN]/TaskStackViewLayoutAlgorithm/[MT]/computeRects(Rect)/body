{
  RecentsConfiguration config=Recents.getConfiguration();
  int widthPadding=(int)(config.taskStackWidthPaddingPct * taskStackBounds.width());
  int heightPadding=mContext.getResources().getDimensionPixelSize(R.dimen.recents_stack_top_padding);
  mStackRect.set(taskStackBounds.left + widthPadding,taskStackBounds.top + heightPadding,taskStackBounds.right - widthPadding,taskStackBounds.bottom);
  mTaskBottomOffset=mSystemInsets.bottom + heightPadding;
  int size=Math.min(mStackRect.width(),mStackRect.height() - mTaskBottomOffset);
  int xOffset=(mStackRect.width() - size) / 2;
  mTaskRect.set(mStackRect.left + xOffset,mStackRect.top,mStackRect.right - xOffset,mStackRect.top + size);
  mFreeformRect.set(mTaskRect);
  int withinAffiliationOffset=mContext.getResources().getDimensionPixelSize(R.dimen.recents_task_bar_height);
  int betweenAffiliationOffset=(int)(VISIBLE_TASK_HEIGHT_BETWEEN_TASKS * mTaskRect.height());
  mWithinAffiliationPOffset=sCurve.computePOffsetForScaledHeight(withinAffiliationOffset,mStackRect);
  mBetweenAffiliationPOffset=sCurve.computePOffsetForScaledHeight(betweenAffiliationOffset,mStackRect);
  mTaskHeightPOffset=sCurve.computePOffsetForScaledHeight(mTaskRect.height(),mStackRect);
  mTaskHalfHeightPOffset=sCurve.computePOffsetForScaledHeight(mTaskRect.height() / 2,mStackRect);
  mTaskBottomPOffset=sCurve.computePOffsetForHeight(mTaskBottomOffset,mStackRect);
  mFreeformWorkspacePOffset=sCurve.computePOffsetForHeight(mFreeformRect.height(),mStackRect);
  if (DEBUG) {
    Log.d(TAG,"computeRects");
    Log.d(TAG,"\tarclength: " + sCurve.getArcLength());
    Log.d(TAG,"\tmStackRect: " + mStackRect);
    Log.d(TAG,"\tmTaskRect: " + mTaskRect);
    Log.d(TAG,"\tmSystemInsets: " + mSystemInsets);
    Log.d(TAG,"\tpWithinAffiliateOffset: " + mWithinAffiliationPOffset);
    Log.d(TAG,"\tpBetweenAffiliateOffset: " + mBetweenAffiliationPOffset);
    Log.d(TAG,"\tmTaskHeightPOffset: " + mTaskHeightPOffset);
    Log.d(TAG,"\tmTaskHalfHeightPOffset: " + mTaskHalfHeightPOffset);
    Log.d(TAG,"\tmTaskBottomPOffset: " + mTaskBottomPOffset);
    Log.d(TAG,"\ty at p=0: " + sCurve.pToX(0f,mStackRect));
    Log.d(TAG,"\ty at p=1: " + sCurve.pToX(1f,mStackRect));
    for (int height=0; height <= 1000; height+=50) {
      float p=sCurve.computePOffsetForScaledHeight(height,mStackRect);
      float p2=sCurve.computePOffsetForHeight(height,mStackRect);
      Log.d(TAG,"offset: " + height + ", "+ p+ " => "+ (mStackRect.bottom - sCurve.pToX(1f - p,mStackRect)) / sCurve.pToScale(1f - p) + ", " + p2 + " => " + (mStackRect.bottom - sCurve.pToX(1f - p2,mStackRect)));
    }
  }
}
