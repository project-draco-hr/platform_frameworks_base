{
switch (message.what) {
case MSG_SET_CONTROLLER:
{
      mController=(IPrinterDiscoverySessionController)message.obj;
      try {
        mController.open(mPriorityList);
      }
 catch (      RemoteException e) {
        Log.e(LOG_TAG,"Error starting printer discovery");
      }
    }
  break;
case MSG_ON_PRINTERS_ADDED:
{
  List<PrinterInfo> printers=(List<PrinterInfo>)message.obj;
  addPrinters(printers);
}
break;
case MSG_ON_PRINTERS_REMOVED:
{
List<PrinterId> printers=(List<PrinterId>)message.obj;
removePrinters(printers);
}
break;
case MSG_ON_PRINTERS_UPDATED:
{
List<PrinterInfo> printers=(List<PrinterInfo>)message.obj;
updatePrinters(printers);
}
break;
}
;
}
