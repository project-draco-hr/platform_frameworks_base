{
  final Class c=d.getClass();
  if (!c.isArray()) {
    throw new RSIllegalArgumentException("Object passed is not an array of primitives.");
  }
  final Class cmp=c.getComponentType();
  if (!cmp.isPrimitive()) {
    throw new RSIllegalArgumentException("Object passed is not an Array of primitives.");
  }
  if (cmp == Long.TYPE) {
    if (checkType) {
      validateIsInt64();
      return mType.mElement.mType;
    }
    return Element.DataType.SIGNED_64;
  }
  if (cmp == Integer.TYPE) {
    if (checkType) {
      validateIsInt32();
      return mType.mElement.mType;
    }
    return Element.DataType.SIGNED_32;
  }
  if (cmp == Short.TYPE) {
    if (checkType) {
      validateIsInt16OrFloat16();
      return mType.mElement.mType;
    }
    return Element.DataType.SIGNED_16;
  }
  if (cmp == Byte.TYPE) {
    if (checkType) {
      validateIsInt8();
      return mType.mElement.mType;
    }
    return Element.DataType.SIGNED_8;
  }
  if (cmp == Float.TYPE) {
    if (checkType) {
      validateIsFloat32();
    }
    return Element.DataType.FLOAT_32;
  }
  if (cmp == Double.TYPE) {
    if (checkType) {
      validateIsFloat64();
    }
    return Element.DataType.FLOAT_64;
  }
  throw new RSIllegalArgumentException("Parameter of type " + cmp.getSimpleName() + "[] is not compatible with data type "+ mType.mElement.mType.name()+ " of allocation");
}
