{
  Trace.traceBegin(RenderScript.TRACE_TAG,"copyElementTo");
  mRS.validate();
  if (component_number >= mType.mElement.mElements.length) {
    throw new RSIllegalArgumentException("Component_number " + component_number + " out of range.");
  }
  if (xoff < 0) {
    throw new RSIllegalArgumentException("Offset x must be >= 0.");
  }
  if (yoff < 0) {
    throw new RSIllegalArgumentException("Offset y must be >= 0.");
  }
  if (zoff < 0) {
    throw new RSIllegalArgumentException("Offset z must be >= 0.");
  }
  Element.DataType dt=validateObjectIsPrimitiveArray(array,false);
  int array_size=java.lang.reflect.Array.getLength(array) * dt.mSize;
  int eSize=mType.mElement.mElements[component_number].getBytesSize();
  eSize*=mType.mElement.mArraySizes[component_number];
  if (array_size < eSize) {
    throw new RSIllegalArgumentException("Array Size (bytes)" + array_size + " is smaller than component size "+ eSize+ ".");
  }
  mRS.nAllocationElementRead(getIDSafe(),xoff,yoff,zoff,mSelectedLOD,component_number,array,eSize,dt);
  Trace.traceEnd(RenderScript.TRACE_TAG);
}
