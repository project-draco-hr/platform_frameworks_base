{
  int height=xpos.getHeight();
  if (xpos.getWidth() != height || xneg.getWidth() != height || xneg.getHeight() != height || ypos.getWidth() != height || ypos.getHeight() != height || yneg.getWidth() != height || yneg.getHeight() != height || zpos.getWidth() != height || zpos.getHeight() != height || zneg.getWidth() != height || zneg.getHeight() != height) {
    throw new RSIllegalArgumentException("Only square cube map faces supported");
  }
  boolean isPow2=(height & (height - 1)) == 0;
  if (!isPow2) {
    throw new RSIllegalArgumentException("Only power of 2 cube faces supported");
  }
  Element e=elementFromBitmap(rs,xpos);
  Type.Builder tb=new Type.Builder(rs,e);
  tb.setX(height);
  tb.setY(height);
  tb.setFaces(true);
  tb.setMipmaps(mips == MipmapControl.MIPMAP_FULL);
  Type t=tb.create();
  Allocation cubemap=Allocation.createTyped(rs,t,mips,usage);
  AllocationAdapter adapter=AllocationAdapter.create2D(rs,cubemap);
  adapter.setFace(Type.CubemapFace.POSITIVE_X);
  adapter.copyFrom(xpos);
  adapter.setFace(Type.CubemapFace.NEGATIVE_X);
  adapter.copyFrom(xneg);
  adapter.setFace(Type.CubemapFace.POSITIVE_Y);
  adapter.copyFrom(ypos);
  adapter.setFace(Type.CubemapFace.NEGATIVE_Y);
  adapter.copyFrom(yneg);
  adapter.setFace(Type.CubemapFace.POSITIVE_Z);
  adapter.copyFrom(zpos);
  adapter.setFace(Type.CubemapFace.NEGATIVE_Z);
  adapter.copyFrom(zneg);
  return cubemap;
}
