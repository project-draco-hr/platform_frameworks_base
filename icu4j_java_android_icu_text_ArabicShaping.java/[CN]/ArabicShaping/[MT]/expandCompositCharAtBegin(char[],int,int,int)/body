{
  boolean spaceNotFound=false;
  if (lacount > countSpacesRight(dest,start,length)) {
    spaceNotFound=true;
    return spaceNotFound;
  }
  for (int r=start + length - lacount, w=start + length; --r >= start; ) {
    char ch=dest[r];
    if (isNormalizedLamAlefChar(ch)) {
      dest[--w]=LAM_CHAR;
      dest[--w]=convertNormalizedLamAlef[ch - '\u065C'];
    }
 else {
      dest[--w]=ch;
    }
  }
  return spaceNotFound;
}
