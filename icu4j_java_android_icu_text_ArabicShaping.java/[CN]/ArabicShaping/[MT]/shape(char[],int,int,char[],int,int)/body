{
  if (source == null) {
    throw new IllegalArgumentException("source can not be null");
  }
  if (sourceStart < 0 || sourceLength < 0 || sourceStart + sourceLength > source.length) {
    throw new IllegalArgumentException("bad source start (" + sourceStart + ") or length ("+ sourceLength+ ") for buffer of length "+ source.length);
  }
  if (dest == null && destSize != 0) {
    throw new IllegalArgumentException("null dest requires destSize == 0");
  }
  if ((destSize != 0) && (destStart < 0 || destSize < 0 || destStart + destSize > dest.length)) {
    throw new IllegalArgumentException("bad dest start (" + destStart + ") or size ("+ destSize+ ") for buffer of length "+ dest.length);
  }
  if (((options & TASHKEEL_MASK) > 0) && !(((options & TASHKEEL_MASK) == TASHKEEL_BEGIN) || ((options & TASHKEEL_MASK) == TASHKEEL_END) || ((options & TASHKEEL_MASK) == TASHKEEL_RESIZE)|| ((options & TASHKEEL_MASK) == TASHKEEL_REPLACE_BY_TATWEEL))) {
    throw new IllegalArgumentException("Wrong Tashkeel argument");
  }
  if (((options & LAMALEF_MASK) > 0) && !(((options & LAMALEF_MASK) == LAMALEF_BEGIN) || ((options & LAMALEF_MASK) == LAMALEF_END) || ((options & LAMALEF_MASK) == LAMALEF_RESIZE)|| ((options & LAMALEF_MASK) == LAMALEF_AUTO)|| ((options & LAMALEF_MASK) == LAMALEF_NEAR))) {
    throw new IllegalArgumentException("Wrong Lam Alef argument");
  }
  if (((options & TASHKEEL_MASK) > 0) && (options & LETTERS_MASK) == LETTERS_UNSHAPE) {
    throw new IllegalArgumentException("Tashkeel replacement should not be enabled in deshaping mode ");
  }
  return internalShape(source,sourceStart,sourceLength,dest,destStart,destSize);
}
