{
  int lamalef_count=normalize(dest,start,length);
  boolean lamalef_found=false, seenfam_found=false;
  boolean yehhamza_found=false, tashkeel_found=false;
  int i=start + length - 1;
  int currLink=getLink(dest[i]);
  int nextLink=0;
  int prevLink=0;
  int lastLink=0;
  int lastPos=i;
  int nx=-2;
  int nw=0;
  while (i >= 0) {
    if ((currLink & '\uFF00') > 0 || isTashkeelChar(dest[i])) {
      nw=i - 1;
      nx=-2;
      while (nx < 0) {
        if (nw == -1) {
          nextLink=0;
          nx=Integer.MAX_VALUE;
        }
 else {
          nextLink=getLink(dest[nw]);
          if ((nextLink & IRRELEVANT) == 0) {
            nx=nw;
          }
 else {
            --nw;
          }
        }
      }
      if (((currLink & ALEFTYPE) > 0) && ((lastLink & LAMTYPE) > 0)) {
        lamalef_found=true;
        char wLamalef=changeLamAlef(dest[i]);
        if (wLamalef != '\u0000') {
          dest[i]='\uffff';
          dest[lastPos]=wLamalef;
          i=lastPos;
        }
        lastLink=prevLink;
        currLink=getLink(wLamalef);
      }
      if ((i > 0) && (dest[i - 1] == SPACE_CHAR)) {
        if (isSeenFamilyChar(dest[i]) == 1) {
          seenfam_found=true;
        }
 else         if (dest[i] == YEH_HAMZA_CHAR) {
          yehhamza_found=true;
        }
      }
 else       if (i == 0) {
        if (isSeenFamilyChar(dest[i]) == 1) {
          seenfam_found=true;
        }
 else         if (dest[i] == YEH_HAMZA_CHAR) {
          yehhamza_found=true;
        }
      }
      int flag=specialChar(dest[i]);
      int shape=shapeTable[nextLink & LINK_MASK][lastLink & LINK_MASK][currLink & LINK_MASK];
      if (flag == 1) {
        shape&=0x1;
      }
 else       if (flag == 2) {
        if (tashkeelFlag == 0 && ((lastLink & LINKL) != 0) && ((nextLink & LINKR) != 0) && dest[i] != '\u064C' && dest[i] != '\u064D' && !((nextLink & ALEFTYPE) == ALEFTYPE && (lastLink & LAMTYPE) == LAMTYPE)) {
          shape=1;
        }
 else {
          shape=0;
        }
      }
      if (flag == 2) {
        if (tashkeelFlag == 2) {
          dest[i]=TASHKEEL_SPACE_SUB;
          tashkeel_found=true;
        }
 else {
          dest[i]=(char)('\uFE70' + irrelevantPos[dest[i] - '\u064B'] + shape);
        }
      }
 else {
        dest[i]=(char)('\uFE70' + (currLink >> 8) + shape);
      }
    }
    if ((currLink & IRRELEVANT) == 0) {
      prevLink=lastLink;
      lastLink=currLink;
      lastPos=i;
    }
    --i;
    if (i == nx) {
      currLink=nextLink;
      nx=-2;
    }
 else     if (i != -1) {
      currLink=getLink(dest[i]);
    }
  }
  destSize=length;
  if (lamalef_found || tashkeel_found) {
    destSize=handleGeneratedSpaces(dest,start,length);
  }
  if (seenfam_found || yehhamza_found) {
    destSize=expandCompositChar(dest,start,destSize,lamalef_count,SHAPE_MODE);
  }
  return destSize;
}
