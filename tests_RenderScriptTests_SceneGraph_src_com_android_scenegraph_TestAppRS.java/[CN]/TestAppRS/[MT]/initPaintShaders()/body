{
  ProgramVertex.Builder vb=new ProgramVertex.Builder(mRS);
  mVsConst=new ScriptField_VShaderParams_s(mRS,1);
  vb.addConstant(mVsConst.getAllocation().getType());
  vb.addInput(ScriptField_VertexShaderInputs_s.createElement(mRS));
  vb.setShader(mRes,R.raw.shader2v);
  mPV_Paint=vb.create();
  mPV_Paint.bindConstants(mVsConst.getAllocation(),0);
  vb=new ProgramVertex.Builder(mRS);
  vb.addConstant(mVsConst.getAllocation().getType());
  vb.addInput(ScriptField_VertexShaderInputs_s.createElement(mRS));
  vb.setShader(mRes,R.raw.blur_vertex);
  mPV_Blur=vb.create();
  mPV_Blur.bindConstants(mVsConst.getAllocation(),0);
  ProgramFragment.Builder fb=new ProgramFragment.Builder(mRS);
  mFsConst=new ScriptField_FShaderParams_s(mRS,1);
  fb.addConstant(mFsConst.getAllocation().getType());
  fb.setShader(mRes,R.raw.paintf);
  fb.addTexture(TextureType.TEXTURE_2D);
  fb.addTexture(TextureType.TEXTURE_CUBE);
  mPF_Paint=fb.create();
  mPF_Paint.bindConstants(mFsConst.getAllocation(),0);
  mPF_Paint.bindSampler(Sampler.WRAP_LINEAR_MIP_LINEAR(mRS),0);
  mPF_Paint.bindSampler(Sampler.CLAMP_LINEAR_MIP_LINEAR(mRS),1);
  fb=new ProgramFragment.Builder(mRS);
  fb.addConstant(mFsConst.getAllocation().getType());
  fb.setShader(mRes,R.raw.metal);
  fb.addTexture(TextureType.TEXTURE_2D);
  fb.addTexture(TextureType.TEXTURE_CUBE);
  mPF_Aluminum=fb.create();
  mPF_Aluminum.bindConstants(mFsConst.getAllocation(),0);
  mPF_Aluminum.bindSampler(Sampler.WRAP_LINEAR_MIP_LINEAR(mRS),0);
  mPF_Aluminum.bindSampler(Sampler.CLAMP_LINEAR_MIP_LINEAR(mRS),1);
  fb=new ProgramFragment.Builder(mRS);
  fb.addConstant(mFsConst.getAllocation().getType());
  fb.setShader(mRes,R.raw.plastic);
  fb.addTexture(TextureType.TEXTURE_2D);
  mPF_Plastic=fb.create();
  mPF_Plastic.bindConstants(mFsConst.getAllocation(),0);
  mPF_Plastic.bindSampler(Sampler.WRAP_LINEAR_MIP_LINEAR(mRS),0);
  fb=new ProgramFragment.Builder(mRS);
  fb.addConstant(mFsConst.getAllocation().getType());
  fb.setShader(mRes,R.raw.diffuse);
  fb.addTexture(TextureType.TEXTURE_2D);
  mPF_Diffuse=fb.create();
  mPF_Diffuse.bindConstants(mFsConst.getAllocation(),0);
  mPF_Diffuse.bindSampler(Sampler.WRAP_LINEAR_MIP_LINEAR(mRS),0);
  fb=new ProgramFragment.Builder(mRS);
  fb.addConstant(mFsConst.getAllocation().getType());
  fb.setShader(mRes,R.raw.texture);
  fb.addTexture(TextureType.TEXTURE_2D);
  mPF_Texture=fb.create();
  mPF_Texture.bindConstants(mFsConst.getAllocation(),0);
  mPF_Texture.bindSampler(Sampler.WRAP_LINEAR_MIP_LINEAR(mRS),0);
  mFsBlurHConst=new ScriptField_FBlurOffsets_s(mRS,1);
  float xAdvance=1.0f / (float)mRenderTargetBlur0Color.getType().getX();
  ScriptField_FBlurOffsets_s.Item item=new ScriptField_FBlurOffsets_s.Item();
  item.blurOffset0=-xAdvance * 2.5f;
  item.blurOffset1=-xAdvance * 0.5f;
  item.blurOffset2=xAdvance * 1.5f;
  item.blurOffset3=xAdvance * 3.5f;
  mFsBlurHConst.set(item,0,true);
  fb=new ProgramFragment.Builder(mRS);
  fb.addConstant(mFsBlurHConst.getAllocation().getType());
  fb.setShader(mRes,R.raw.blur_h);
  fb.addTexture(TextureType.TEXTURE_2D);
  mPF_BlurH=fb.create();
  mPF_BlurH.bindConstants(mFsBlurHConst.getAllocation(),0);
  mPF_BlurH.bindTexture(mRenderTargetBlur0Color,0);
  mPF_BlurH.bindSampler(Sampler.CLAMP_LINEAR(mRS),0);
  mFsBlurVConst=new ScriptField_FBlurOffsets_s(mRS,1);
  float yAdvance=1.0f / (float)mRenderTargetBlur0Color.getType().getY();
  item.blurOffset0=-yAdvance * 2.5f;
  item.blurOffset1=-yAdvance * 0.5f;
  item.blurOffset2=yAdvance * 1.5f;
  item.blurOffset3=yAdvance * 3.5f;
  mFsBlurVConst.set(item,0,true);
  fb=new ProgramFragment.Builder(mRS);
  fb.addConstant(mFsBlurVConst.getAllocation().getType());
  fb.setShader(mRes,R.raw.blur_v);
  fb.addTexture(TextureType.TEXTURE_2D);
  mPF_BlurV=fb.create();
  mPF_BlurV.bindConstants(mFsBlurVConst.getAllocation(),0);
  mPF_BlurV.bindTexture(mRenderTargetBlur1Color,0);
  mPF_BlurV.bindSampler(Sampler.CLAMP_LINEAR(mRS),0);
  fb=new ProgramFragment.Builder(mRS);
  fb.setShader(mRes,R.raw.select_color);
  fb.addTexture(TextureType.TEXTURE_2D);
  mPF_SelectColor=fb.create();
  mPF_SelectColor.bindSampler(Sampler.CLAMP_LINEAR(mRS),0);
}
