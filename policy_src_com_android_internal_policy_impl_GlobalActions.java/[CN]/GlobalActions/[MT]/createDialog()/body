{
  if (!mHasVibrator) {
    mSilentModeAction=new SilentModeToggleAction();
  }
 else {
    mSilentModeAction=new SilentModeTriStateAction(mContext,mAudioManager,mHandler);
  }
  mAirplaneModeOn=new ToggleAction(R.drawable.ic_lock_airplane_mode,R.drawable.ic_lock_airplane_mode_off,R.string.global_actions_toggle_airplane_mode,R.string.global_actions_airplane_mode_on_status,R.string.global_actions_airplane_mode_off_status){
    void onToggle(    boolean on){
      if (mHasTelephony && Boolean.parseBoolean(SystemProperties.get(TelephonyProperties.PROPERTY_INECM_MODE))) {
        mIsWaitingForEcmExit=true;
        Intent ecmDialogIntent=new Intent(TelephonyIntents.ACTION_SHOW_NOTICE_ECM_BLOCK_OTHERS,null);
        ecmDialogIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        mContext.startActivity(ecmDialogIntent);
      }
 else {
        changeAirplaneModeSystemSetting(on);
      }
    }
    @Override protected void changeStateFromPress(    boolean buttonOn){
      if (!mHasTelephony)       return;
      if (!(Boolean.parseBoolean(SystemProperties.get(TelephonyProperties.PROPERTY_INECM_MODE)))) {
        mState=buttonOn ? State.TurningOn : State.TurningOff;
        mAirplaneState=mState;
      }
    }
    public boolean showDuringKeyguard(){
      return true;
    }
    public boolean showBeforeProvisioning(){
      return false;
    }
  }
;
  onAirplaneModeChanged();
  mItems=new ArrayList<Action>();
  mItems.add(new SinglePressAction(com.android.internal.R.drawable.ic_lock_power_off,R.string.global_action_power_off){
    public void onPress(){
      mWindowManagerFuncs.shutdown(true);
    }
    public boolean onLongPress(){
      mWindowManagerFuncs.rebootSafeMode(true);
      return true;
    }
    public boolean showDuringKeyguard(){
      return true;
    }
    public boolean showBeforeProvisioning(){
      return true;
    }
  }
);
  mItems.add(mAirplaneModeOn);
  if (Settings.Global.getInt(mContext.getContentResolver(),Settings.Global.BUGREPORT_IN_POWER_MENU,0) != 0) {
    mItems.add(new SinglePressAction(com.android.internal.R.drawable.stat_sys_adb,R.string.global_action_bug_report){
      public void onPress(){
        AlertDialog.Builder builder=new AlertDialog.Builder(mContext);
        builder.setTitle(com.android.internal.R.string.bugreport_title);
        builder.setMessage(com.android.internal.R.string.bugreport_message);
        builder.setNegativeButton(com.android.internal.R.string.cancel,null);
        builder.setPositiveButton(com.android.internal.R.string.report,new DialogInterface.OnClickListener(){
          @Override public void onClick(          DialogInterface dialog,          int which){
            mHandler.postDelayed(new Runnable(){
              @Override public void run(){
                try {
                  ActivityManagerNative.getDefault().requestBugReport();
                }
 catch (                RemoteException e) {
                }
              }
            }
,500);
          }
        }
);
        AlertDialog dialog=builder.create();
        dialog.getWindow().setType(WindowManager.LayoutParams.TYPE_KEYGUARD_DIALOG);
        dialog.show();
      }
      public boolean onLongPress(){
        return false;
      }
      public boolean showDuringKeyguard(){
        return true;
      }
      public boolean showBeforeProvisioning(){
        return false;
      }
    }
);
  }
  if (SHOW_SILENT_TOGGLE) {
    mItems.add(mSilentModeAction);
  }
  if (SystemProperties.getBoolean("fw.power_user_switcher",false)) {
    addUsersToMenu(mItems);
  }
  mAdapter=new MyAdapter();
  AlertParams params=new AlertParams(mContext);
  params.mAdapter=mAdapter;
  params.mOnClickListener=this;
  params.mForceInverseBackground=true;
  GlobalActionsDialog dialog=new GlobalActionsDialog(mContext,params);
  dialog.setCanceledOnTouchOutside(false);
  dialog.getListView().setItemsCanFocus(true);
  dialog.getListView().setLongClickable(true);
  dialog.getListView().setOnItemLongClickListener(new AdapterView.OnItemLongClickListener(){
    @Override public boolean onItemLongClick(    AdapterView<?> parent,    View view,    int position,    long id){
      return mAdapter.getItem(position).onLongPress();
    }
  }
);
  dialog.getWindow().setType(WindowManager.LayoutParams.TYPE_KEYGUARD_DIALOG);
  dialog.setOnDismissListener(this);
  return dialog;
}
