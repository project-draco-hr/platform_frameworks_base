{
  pw.println("Content.");
  Iterator<JobStatus> it=mTrackedTasks.iterator();
  if (it.hasNext()) {
    pw.print(String.valueOf(it.next().hashCode()));
  }
  while (it.hasNext()) {
    pw.print("," + String.valueOf(it.next().hashCode()));
  }
  pw.println();
  int N=mObservers.size();
  if (N > 0) {
    pw.println("URIs:");
    for (int i=0; i < N; i++) {
      ObserverInstance obs=mObservers.valueAt(i);
      pw.print("  ");
      pw.print(mObservers.keyAt(i));
      pw.println(":");
      pw.print("    ");
      pw.println(obs);
      pw.println("    Jobs:");
      int M=obs.mJobs.size();
      for (int j=0; j < M; j++) {
        JobInstance inst=obs.mJobs.get(j);
        pw.print("      ");
        pw.print(inst.hashCode());
        if (inst.mChangedAuthorities != null) {
          pw.println(":");
          pw.println("        Changed Authorities:");
          for (int k=0; k < inst.mChangedAuthorities.size(); k++) {
            pw.print("          ");
            pw.println(inst.mChangedAuthorities.valueAt(k));
          }
          if (inst.mChangedUris != null) {
            pw.println("        Changed URIs:");
            for (int k=0; k < inst.mChangedUris.size(); k++) {
              pw.print("          ");
              pw.println(inst.mChangedUris.valueAt(k));
            }
          }
        }
 else {
          pw.println();
        }
      }
    }
  }
}
