{
  mJobStatus=jobStatus;
  mExecuteRunner=new TriggerRunnable(this);
  mTimeoutRunner=new TriggerRunnable(this);
  final JobInfo.TriggerContentUri[] uris=jobStatus.getJob().getTriggerContentUris();
  if (uris != null) {
    for (    JobInfo.TriggerContentUri uri : uris) {
      ObserverInstance obs=mObservers.get(uri);
      if (obs == null) {
        obs=new ObserverInstance(mHandler,uri);
        mObservers.put(uri,obs);
        final boolean andDescendants=(uri.getFlags() & JobInfo.TriggerContentUri.FLAG_NOTIFY_FOR_DESCENDANTS) != 0;
        if (DEBUG) {
          Slog.v(TAG,"New observer " + obs + " for "+ uri.getUri()+ " andDescendants="+ andDescendants);
        }
        mContext.getContentResolver().registerContentObserver(uri.getUri(),andDescendants,obs);
      }
 else {
        if (DEBUG) {
          final boolean andDescendants=(uri.getFlags() & JobInfo.TriggerContentUri.FLAG_NOTIFY_FOR_DESCENDANTS) != 0;
          Slog.v(TAG,"Reusing existing observer " + obs + " for "+ uri.getUri()+ " andDescendants="+ andDescendants);
        }
      }
      obs.mJobs.add(this);
      mMyObservers.add(obs);
    }
  }
}
