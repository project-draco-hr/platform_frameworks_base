{
  if (mLastTime == 0)   mLastTime=timestamp;
  float deltaT=(timestamp - mLastTime) / 1000000000.f;
  float springStrength=20.f;
  float frictionCoeff=10.f;
  float mass=10.f;
  float gMultiplier=4.f;
  if (deltaT > 0.030f) {
    mLastTime=timestamp;
    float[] totalForce=new float[3];
    totalForce[0]=-mPos[0] * springStrength - mVel[0] * frictionCoeff + gMultiplier * mGForce[0] * mass;
    totalForce[1]=-mPos[1] * springStrength - mVel[1] * frictionCoeff + gMultiplier * mGForce[1] * mass;
    totalForce[2]=-mPos[2] * springStrength - mVel[2] * frictionCoeff + gMultiplier * mGForce[2] * mass;
    float[] accel=new float[3];
    accel[0]=totalForce[0] / mass;
    accel[1]=totalForce[1] / mass;
    accel[2]=totalForce[2] / mass;
    mVel[0]=mVel[0] + accel[0] * deltaT;
    mVel[1]=mVel[1] + accel[1] * deltaT;
    mVel[2]=mVel[2] + accel[2] * deltaT;
    mPos[0]=mPos[0] + mVel[0] * deltaT;
    mPos[1]=mPos[1] + mVel[1] * deltaT;
    mPos[2]=mPos[2] + mVel[2] * deltaT;
    Matrix.setIdentityM(mMMatrix,0);
    Matrix.translateM(mMMatrix,0,mPos[0],mPos[1],mPos[2]);
  }
}
