{
  EAPMethod credMethod=credential.getEAPMethod();
  if (mEAPMethodID != credMethod.getEAPMethodID()) {
    return AuthMatch.None;
  }
switch (mEAPMethodID) {
case EAP_TTLS:
    if (mAuthParams.isEmpty()) {
      return AuthMatch.Method;
    }
  int paramCount=0;
for (Map.Entry<EAP.AuthInfoID,Set<AuthParam>> entry : credMethod.getAuthParams().entrySet()) {
  Set<AuthParam> params=mAuthParams.get(entry.getKey());
  if (params == null) {
    continue;
  }
  if (!Collections.disjoint(params,entry.getValue())) {
    return AuthMatch.MethodParam;
  }
  paramCount+=params.size();
}
return paramCount > 0 ? AuthMatch.None : AuthMatch.Method;
case EAP_TLS:
return AuthMatch.MethodParam;
case EAP_SIM:
case EAP_AKA:
case EAP_AKAPrim:
return AuthMatch.Method;
default :
return AuthMatch.Method;
}
}
