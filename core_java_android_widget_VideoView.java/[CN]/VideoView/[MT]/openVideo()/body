{
  if (mUri == null || mSurfaceHolder == null) {
    return;
  }
  Intent i=new Intent("com.android.music.musicservicecommand");
  i.putExtra("command","pause");
  mContext.sendBroadcast(i);
  release(false);
  try {
    mMediaPlayer=new MediaPlayer();
    if (mAudioSession != 0) {
      mMediaPlayer.setAudioSessionId(mAudioSession);
    }
 else {
      mAudioSession=mMediaPlayer.getAudioSessionId();
    }
    mMediaPlayer.setOnPreparedListener(mPreparedListener);
    mMediaPlayer.setOnVideoSizeChangedListener(mSizeChangedListener);
    mMediaPlayer.setOnCompletionListener(mCompletionListener);
    mMediaPlayer.setOnErrorListener(mErrorListener);
    mMediaPlayer.setOnInfoListener(mInfoListener);
    mMediaPlayer.setOnBufferingUpdateListener(mBufferingUpdateListener);
    mCurrentBufferPercentage=0;
    mMediaPlayer.setDataSource(mContext,mUri,mHeaders);
    mMediaPlayer.setDisplay(mSurfaceHolder);
    mMediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);
    mMediaPlayer.setScreenOnWhilePlaying(true);
    mMediaPlayer.prepareAsync();
    for (int ix=0; ix < mPendingSubtitleTracks; ix++) {
      mInfoListener.onInfo(mMediaPlayer,MediaPlayer.MEDIA_INFO_UNSUPPORTED_SUBTITLE,0);
    }
    mCurrentState=STATE_PREPARING;
    attachMediaController();
  }
 catch (  IOException ex) {
    Log.w(TAG,"Unable to open content: " + mUri,ex);
    mCurrentState=STATE_ERROR;
    mTargetState=STATE_ERROR;
    mErrorListener.onError(mMediaPlayer,MediaPlayer.MEDIA_ERROR_UNKNOWN,0);
    return;
  }
catch (  IllegalArgumentException ex) {
    Log.w(TAG,"Unable to open content: " + mUri,ex);
    mCurrentState=STATE_ERROR;
    mTargetState=STATE_ERROR;
    mErrorListener.onError(mMediaPlayer,MediaPlayer.MEDIA_ERROR_UNKNOWN,0);
    return;
  }
 finally {
    mPendingSubtitleTracks=0;
  }
}
