{
  if (mUri == null || mSurfaceHolder == null) {
    return;
  }
  release(false);
  AudioManager am=(AudioManager)mContext.getSystemService(Context.AUDIO_SERVICE);
  am.requestAudioFocus(null,AudioManager.STREAM_MUSIC,AudioManager.AUDIOFOCUS_GAIN);
  try {
    mMediaPlayer=new MediaPlayer();
    final Context context=getContext();
    final SubtitleController controller=new SubtitleController(context,mMediaPlayer.getMediaTimeProvider(),mMediaPlayer);
    controller.registerRenderer(new WebVttRenderer(context));
    controller.registerRenderer(new TtmlRenderer(context));
    controller.registerRenderer(new Cea708CaptionRenderer(context));
    controller.registerRenderer(new ClosedCaptionRenderer(context));
    mMediaPlayer.setSubtitleAnchor(controller,this);
    if (mAudioSession != 0) {
      mMediaPlayer.setAudioSessionId(mAudioSession);
    }
 else {
      mAudioSession=mMediaPlayer.getAudioSessionId();
    }
    mMediaPlayer.setOnPreparedListener(mPreparedListener);
    mMediaPlayer.setOnVideoSizeChangedListener(mSizeChangedListener);
    mMediaPlayer.setOnCompletionListener(mCompletionListener);
    mMediaPlayer.setOnErrorListener(mErrorListener);
    mMediaPlayer.setOnInfoListener(mInfoListener);
    mMediaPlayer.setOnBufferingUpdateListener(mBufferingUpdateListener);
    mCurrentBufferPercentage=0;
    mMediaPlayer.setDataSource(mContext,mUri,mHeaders);
    mMediaPlayer.setDisplay(mSurfaceHolder);
    mMediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);
    mMediaPlayer.setScreenOnWhilePlaying(true);
    mMediaPlayer.prepareAsync();
    for (    Pair<InputStream,MediaFormat> pending : mPendingSubtitleTracks) {
      try {
        mMediaPlayer.addSubtitleSource(pending.first,pending.second);
      }
 catch (      IllegalStateException e) {
        mInfoListener.onInfo(mMediaPlayer,MediaPlayer.MEDIA_INFO_UNSUPPORTED_SUBTITLE,0);
      }
    }
    mCurrentState=STATE_PREPARING;
    attachMediaController();
  }
 catch (  IOException ex) {
    Log.w(TAG,"Unable to open content: " + mUri,ex);
    mCurrentState=STATE_ERROR;
    mTargetState=STATE_ERROR;
    mErrorListener.onError(mMediaPlayer,MediaPlayer.MEDIA_ERROR_UNKNOWN,0);
    return;
  }
catch (  IllegalArgumentException ex) {
    Log.w(TAG,"Unable to open content: " + mUri,ex);
    mCurrentState=STATE_ERROR;
    mTargetState=STATE_ERROR;
    mErrorListener.onError(mMediaPlayer,MediaPlayer.MEDIA_ERROR_UNKNOWN,0);
    return;
  }
 finally {
    mPendingSubtitleTracks.clear();
  }
}
