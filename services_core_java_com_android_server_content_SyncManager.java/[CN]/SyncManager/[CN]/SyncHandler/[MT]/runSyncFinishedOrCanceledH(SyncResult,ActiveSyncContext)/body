{
  boolean isLoggable=Log.isLoggable(TAG,Log.VERBOSE);
  final SyncOperation syncOperation=activeSyncContext.mSyncOperation;
  final SyncStorageEngine.EndPoint info=syncOperation.target;
  if (activeSyncContext.mIsLinkedToDeath) {
    if (info.target_provider) {
      activeSyncContext.mSyncAdapter.asBinder().unlinkToDeath(activeSyncContext,0);
    }
 else {
      activeSyncContext.mSyncServiceAdapter.asBinder().unlinkToDeath(activeSyncContext,0);
    }
    activeSyncContext.mIsLinkedToDeath=false;
  }
  closeActiveSyncContext(activeSyncContext);
  final long elapsedTime=SystemClock.elapsedRealtime() - activeSyncContext.mStartTime;
  String historyMessage;
  int downstreamActivity;
  int upstreamActivity;
  if (syncResult != null) {
    if (isLoggable) {
      Log.v(TAG,"runSyncFinishedOrCanceled [finished]: " + syncOperation + ", result "+ syncResult);
    }
    if (!syncResult.hasError()) {
      historyMessage=SyncStorageEngine.MESG_SUCCESS;
      downstreamActivity=0;
      upstreamActivity=0;
      clearBackoffSetting(syncOperation);
    }
 else {
      Log.d(TAG,"failed sync operation " + syncOperation + ", "+ syncResult);
      increaseBackoffSetting(syncOperation);
      maybeRescheduleSync(syncResult,syncOperation);
      historyMessage=ContentResolver.syncErrorToString(syncResultToErrorNumber(syncResult));
      downstreamActivity=0;
      upstreamActivity=0;
    }
    setDelayUntilTime(syncOperation,syncResult.delayUntil);
  }
 else {
    if (isLoggable) {
      Log.v(TAG,"runSyncFinishedOrCanceled [canceled]: " + syncOperation);
    }
    if (activeSyncContext.mSyncAdapter != null) {
      try {
        activeSyncContext.mSyncAdapter.cancelSync(activeSyncContext);
      }
 catch (      RemoteException e) {
      }
    }
 else     if (activeSyncContext.mSyncServiceAdapter != null) {
      try {
        activeSyncContext.mSyncServiceAdapter.cancelSync(activeSyncContext);
      }
 catch (      RemoteException e) {
      }
    }
    historyMessage=SyncStorageEngine.MESG_CANCELED;
    downstreamActivity=0;
    upstreamActivity=0;
  }
  stopSyncEvent(activeSyncContext.mHistoryRowId,syncOperation,historyMessage,upstreamActivity,downstreamActivity,elapsedTime);
  if (info.target_provider) {
    if (syncResult != null && syncResult.tooManyDeletions) {
      installHandleTooManyDeletesNotification(info.account,info.provider,syncResult.stats.numDeletes,info.userId);
    }
 else {
      mNotificationMgr.cancelAsUser(null,info.account.hashCode() ^ info.provider.hashCode(),new UserHandle(info.userId));
    }
    if (syncResult != null && syncResult.fullSyncRequested) {
      scheduleSyncOperation(new SyncOperation(info.account,info.userId,syncOperation.owningUid,syncOperation.owningPackage,syncOperation.reason,syncOperation.syncSource,info.provider,new Bundle(),0,0,syncOperation.backoff,syncOperation.delayUntil,syncOperation.allowParallelSyncs));
    }
  }
 else {
    if (syncResult != null && syncResult.fullSyncRequested) {
      scheduleSyncOperation(new SyncOperation(info.service,info.userId,syncOperation.owningUid,syncOperation.owningPackage,syncOperation.reason,syncOperation.syncSource,new Bundle(),0,0,syncOperation.backoff,syncOperation.delayUntil));
    }
  }
}
