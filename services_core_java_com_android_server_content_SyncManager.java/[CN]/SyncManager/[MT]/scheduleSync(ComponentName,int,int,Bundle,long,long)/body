{
  boolean isLoggable=Log.isLoggable(TAG,Log.VERBOSE);
  if (isLoggable) {
    Log.d(TAG,"one off sync for: " + cname + " "+ extras.toString());
  }
  final android.content.pm.ServiceInfo sinfo;
  try {
    sinfo=mContext.getPackageManager().getServiceInfo(cname,userId);
  }
 catch (  PackageManager.NameNotFoundException e) {
    Slog.w(TAG,"Not scheduling sync " + cname + " -- can't find service for user "+ userId);
    return;
  }
  final int sUid=sinfo.applicationInfo.uid;
  try {
    if (ActivityManagerNative.getDefault().getAppStartMode(sUid,cname.getPackageName()) == ActivityManager.APP_START_MODE_DISABLED) {
      Slog.w(TAG,"Not scheduling sync " + sUid + ":"+ cname+ " -- package not allowed to start");
      return;
    }
  }
 catch (  RemoteException e) {
  }
  Boolean expedited=extras.getBoolean(ContentResolver.SYNC_EXTRAS_EXPEDITED,false);
  if (expedited) {
    runtimeMillis=-1;
  }
  final boolean ignoreSettings=extras.getBoolean(ContentResolver.SYNC_EXTRAS_IGNORE_SETTINGS,false);
  int source=SyncStorageEngine.SOURCE_SERVICE;
  boolean isEnabled=mSyncStorageEngine.getIsTargetServiceActive(cname,userId);
  boolean syncAllowed=ignoreSettings || mSyncStorageEngine.getMasterSyncAutomatically(userId);
  if (!syncAllowed) {
    if (isLoggable) {
      Log.d(TAG,"scheduleSync: sync of " + cname + " not allowed, dropping request.");
    }
    return;
  }
  if (!isEnabled) {
    if (isLoggable) {
      Log.d(TAG,"scheduleSync: " + cname + " is not enabled, dropping request");
    }
    return;
  }
  SyncStorageEngine.EndPoint info=new SyncStorageEngine.EndPoint(cname,userId,sUid);
  Pair<Long,Long> backoff=mSyncStorageEngine.getBackoff(info);
  long delayUntil=mSyncStorageEngine.getDelayUntilTime(info);
  final long backoffTime=backoff != null ? backoff.first : 0;
  if (isLoggable) {
    Log.v(TAG,"schedule Sync:" + ", delay until " + delayUntil + ", run by "+ runtimeMillis+ ", flex "+ beforeRunTimeMillis+ ", source "+ source+ ", sync service "+ cname+ ", extras "+ extras);
  }
  scheduleSyncOperation(new SyncOperation(cname,userId,sUid,cname.getPackageName(),uid,source,extras,runtimeMillis,beforeRunTimeMillis,backoffTime,delayUntil));
}
