{
synchronized (sAsyncMethods) {
    int valueIndex=sAsyncMethods.indexOfKey(method);
    if (valueIndex >= 0) {
      return sAsyncMethods.valueAt(valueIndex);
    }
    RemotableViewMethod annotation=method.getAnnotation(RemotableViewMethod.class);
    Method asyncMethod=null;
    if (!annotation.asyncImpl().isEmpty()) {
      try {
        asyncMethod=method.getDeclaringClass().getMethod(annotation.asyncImpl(),method.getParameterTypes());
        if (!asyncMethod.getReturnType().equals(Runnable.class)) {
          throw new ActionException("Async implementation for " + method.getName() + " does not return a Runnable");
        }
      }
 catch (      NoSuchMethodException ex) {
        throw new ActionException("Async implementation declared but not defined for " + method.getName());
      }
    }
    sAsyncMethods.put(method,asyncMethod);
    return asyncMethod;
  }
}
