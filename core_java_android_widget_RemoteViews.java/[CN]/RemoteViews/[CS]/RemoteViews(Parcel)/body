{
  mPackage=parcel.readString();
  mLayoutId=parcel.readInt();
  mIsWidgetCollectionChild=parcel.readInt() == 1 ? true : false;
  int count=parcel.readInt();
  if (count > 0) {
    mActions=new ArrayList<Action>(count);
    for (int i=0; i < count; i++) {
      int tag=parcel.readInt();
switch (tag) {
case SetOnClickPendingIntent.TAG:
        mActions.add(new SetOnClickPendingIntent(parcel));
      break;
case SetDrawableParameters.TAG:
    mActions.add(new SetDrawableParameters(parcel));
  break;
case ReflectionAction.TAG:
mActions.add(new ReflectionAction(parcel));
break;
case ViewGroupAction.TAG:
mActions.add(new ViewGroupAction(parcel));
break;
case ReflectionActionWithoutParams.TAG:
mActions.add(new ReflectionActionWithoutParams(parcel));
break;
case SetEmptyView.TAG:
mActions.add(new SetEmptyView(parcel));
break;
case SetPendingIntentTemplate.TAG:
mActions.add(new SetPendingIntentTemplate(parcel));
break;
case SetOnClickFillInIntent.TAG:
mActions.add(new SetOnClickFillInIntent(parcel));
break;
case SetRemoteViewsAdapterIntent.TAG:
mActions.add(new SetRemoteViewsAdapterIntent(parcel));
break;
case TextViewDrawableAction.TAG:
mActions.add(new TextViewDrawableAction(parcel));
break;
default :
throw new ActionException("Tag " + tag + " not found");
}
}
}
mMemoryUsageCounter=new MemoryUsageCounter();
recalculateMemoryUsage();
}
