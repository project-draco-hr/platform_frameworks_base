{
  final View target=root.findViewById(viewId);
  if (target == null)   return;
  if (target instanceof AdapterView<?>) {
    AdapterView<?> av=(AdapterView<?>)target;
    OnItemClickListener listener=new OnItemClickListener(){
      public void onItemClick(      AdapterView<?> parent,      View view,      int position,      long id){
        if (view instanceof ViewGroup) {
          ViewGroup vg=(ViewGroup)view;
          if (parent instanceof AdapterViewAnimator) {
            vg=(ViewGroup)vg.getChildAt(0);
          }
          if (vg == null)           return;
          Intent fillInIntent=null;
          int childCount=vg.getChildCount();
          for (int i=0; i < childCount; i++) {
            Object tag=vg.getChildAt(i).getTag(com.android.internal.R.id.fillInIntent);
            if (tag instanceof Intent) {
              fillInIntent=(Intent)tag;
              break;
            }
          }
          if (fillInIntent == null)           return;
          final Rect rect=getSourceBounds(view);
          final Intent intent=new Intent();
          intent.setSourceBounds(rect);
          handler.onClickHandler(view,pendingIntentTemplate,fillInIntent);
        }
      }
    }
;
    av.setOnItemClickListener(listener);
    av.setTag(pendingIntentTemplate);
  }
 else {
    Log.e(LOG_TAG,"Cannot setPendingIntentTemplate on a view which is not" + "an AdapterView (id: " + viewId + ")");
    return;
  }
}
