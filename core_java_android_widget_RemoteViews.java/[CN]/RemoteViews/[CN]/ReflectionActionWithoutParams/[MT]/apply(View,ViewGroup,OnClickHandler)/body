{
  final View view=root.findViewById(viewId);
  if (view == null)   return;
  Class klass=view.getClass();
  Method method;
  try {
    method=klass.getMethod(this.methodName);
  }
 catch (  NoSuchMethodException ex) {
    throw new ActionException("view: " + klass.getName() + " doesn't have method: "+ this.methodName+ "()");
  }
  if (!method.isAnnotationPresent(RemotableViewMethod.class)) {
    throw new ActionException("view: " + klass.getName() + " can't use method with RemoteViews: "+ this.methodName+ "()");
  }
  try {
    if (false) {
      Log.d("RemoteViews","view: " + klass.getName() + " calling method: "+ this.methodName+ "()");
    }
    method.invoke(view);
  }
 catch (  Exception ex) {
    throw new ActionException(ex);
  }
}
