{
  final View view=root.findViewById(viewId);
  if (view == null) {
    throw new ActionException("can't find view: 0x" + Integer.toHexString(viewId));
  }
  Class param=getParameterType();
  if (param == null) {
    throw new ActionException("bad type: " + this.type);
  }
  Class klass=view.getClass();
  Method method=null;
  try {
    method=klass.getMethod(this.methodName,getParameterType());
  }
 catch (  NoSuchMethodException ex) {
    throw new ActionException("view: " + klass.getName() + " doesn't have method: "+ this.methodName+ "("+ param.getName()+ ")");
  }
  if (!method.isAnnotationPresent(RemotableViewMethod.class)) {
    throw new ActionException("view: " + klass.getName() + " can't use method with RemoteViews: "+ this.methodName+ "("+ param.getName()+ ")");
  }
  try {
    if (false) {
      Log.d("RemoteViews","view: " + klass.getName() + " calling method: "+ this.methodName+ "("+ param.getName()+ ") with "+ (this.value == null ? "null" : this.value.getClass().getName()));
    }
    method.invoke(view,this.value);
  }
 catch (  Exception ex) {
    throw new ActionException(ex);
  }
}
