{
  this.viewId=in.readInt();
  this.methodName=in.readString();
  this.type=in.readInt();
  if (false) {
    Log.d("RemoteViews","read viewId=0x" + Integer.toHexString(this.viewId) + " methodName="+ this.methodName+ " type="+ this.type);
  }
switch (this.type) {
case BOOLEAN:
    this.value=in.readInt() != 0;
  break;
case BYTE:
this.value=in.readByte();
break;
case SHORT:
this.value=(short)in.readInt();
break;
case INT:
this.value=in.readInt();
break;
case LONG:
this.value=in.readLong();
break;
case FLOAT:
this.value=in.readFloat();
break;
case DOUBLE:
this.value=in.readDouble();
break;
case CHAR:
this.value=(char)in.readInt();
break;
case STRING:
this.value=in.readString();
break;
case CHAR_SEQUENCE:
this.value=TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(in);
break;
case URI:
if (in.readInt() != 0) {
this.value=Uri.CREATOR.createFromParcel(in);
}
break;
case BITMAP:
if (in.readInt() != 0) {
this.value=Bitmap.CREATOR.createFromParcel(in);
}
break;
case BUNDLE:
this.value=in.readBundle();
break;
case INTENT:
if (in.readInt() != 0) {
this.value=Intent.CREATOR.createFromParcel(in);
}
break;
default :
break;
}
}
