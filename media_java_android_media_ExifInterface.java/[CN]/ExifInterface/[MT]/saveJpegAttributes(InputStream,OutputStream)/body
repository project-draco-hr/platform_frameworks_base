{
  if (DEBUG) {
    Log.d(TAG,"saveJpegAttributes starting with (inputStream: " + inputStream + ", outputStream: "+ outputStream+ ")");
  }
  DataInputStream dataInputStream=new DataInputStream(inputStream);
  ExifDataOutputStream dataOutputStream=new ExifDataOutputStream(outputStream);
  int bytesRead=0;
  ++bytesRead;
  if (dataInputStream.readByte() != MARKER) {
    throw new IOException("Invalid marker");
  }
  dataOutputStream.writeByte(MARKER);
  ++bytesRead;
  if (dataInputStream.readByte() != MARKER_SOI) {
    throw new IOException("Invalid marker");
  }
  dataOutputStream.writeByte(MARKER_SOI);
  byte[] bytes=new byte[4096];
  while (true) {
    ++bytesRead;
    if (dataInputStream.readByte() != MARKER) {
      throw new IOException("Invalid marker");
    }
    dataOutputStream.writeByte(MARKER);
    ++bytesRead;
    byte marker=dataInputStream.readByte();
    dataOutputStream.writeByte(marker);
switch (marker) {
case MARKER_APP1:
{
        int length=dataInputStream.readUnsignedShort() - 2;
        if (length < 0) {
          throw new IOException("Invalid length");
        }
        bytesRead+=2;
        int read;
        while ((read=dataInputStream.read(bytes,0,Math.min(length,bytes.length))) > 0) {
          length-=read;
        }
        bytesRead+=length;
        writeExifSegment(dataOutputStream,bytesRead);
        break;
      }
case MARKER_EOI:
case MARKER_SOS:
{
      Streams.copy(dataInputStream,dataOutputStream);
      return;
    }
default :
{
    int length=dataInputStream.readUnsignedShort();
    dataOutputStream.writeUnsignedShort(length);
    if (length < 0) {
      throw new IOException("Invalid length");
    }
    length-=2;
    bytesRead+=2;
    int read;
    while ((read=dataInputStream.read(bytes,0,Math.min(length,bytes.length))) > 0) {
      dataOutputStream.write(bytes,0,read);
      length-=read;
    }
    bytesRead+=length;
    break;
  }
}
}
}
