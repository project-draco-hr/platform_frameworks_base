{
  short numberOfDirectoryEntry=dataInputStream.readShort();
  if (DEBUG) {
    Log.d(TAG,"numberOfDirectoryEntry: " + numberOfDirectoryEntry);
  }
  for (short i=0; i < numberOfDirectoryEntry; ++i) {
    int tagNumber=dataInputStream.readUnsignedShort();
    int dataFormat=dataInputStream.readUnsignedShort();
    int numberOfComponents=dataInputStream.readInt();
    long nextEntryOffset=dataInputStream.peek() + 4;
    if (DEBUG) {
      Log.d(TAG,String.format("tagNumber: %d, dataFormat: %d, numberOfComponents: %d",tagNumber,dataFormat,numberOfComponents));
    }
    int byteCount=numberOfComponents * IFD_FORMAT_BYTES_PER_FORMAT[dataFormat];
    if (byteCount > 4) {
      long offset=dataInputStream.readUnsignedInt();
      if (DEBUG) {
        Log.d(TAG,"seek to data offset: " + offset);
      }
      dataInputStream.seek(offset);
    }
    String tagName=(String)sExifTagMapsForReading[hint].get(tagNumber);
    if (tagName == null) {
      dataInputStream.seek(nextEntryOffset);
      continue;
    }
    int innerIfdHint=getIfdHintFromTagNumber(tagNumber);
    if (innerIfdHint >= 0) {
      long offset=-1L;
switch (dataFormat) {
case IFD_FORMAT_USHORT:
{
          offset=dataInputStream.readUnsignedShort();
          break;
        }
case IFD_FORMAT_SSHORT:
{
        offset=dataInputStream.readShort();
        break;
      }
case IFD_FORMAT_ULONG:
{
      offset=dataInputStream.readUnsignedInt();
      break;
    }
case IFD_FORMAT_SLONG:
{
    offset=dataInputStream.readInt();
    break;
  }
default :
{
  break;
}
}
if (DEBUG) {
Log.d(TAG,String.format("Offset: %d, tagName: %s",offset,tagName));
}
if (offset > 0L) {
dataInputStream.seek(offset);
readImageFileDirectory(dataInputStream,innerIfdHint);
}
dataInputStream.seek(nextEntryOffset);
continue;
}
if (numberOfComponents == 1 || dataFormat == IFD_FORMAT_STRING || dataFormat == IFD_FORMAT_UNDEFINED) {
String entryValue=readExifEntryValue(dataInputStream,dataFormat,numberOfComponents);
if (entryValue != null) {
mAttributes.put(tagName,entryValue);
}
}
 else {
StringBuilder entryValueBuilder=new StringBuilder();
for (int c=0; c < numberOfComponents; ++c) {
if (entryValueBuilder.length() > 0) {
entryValueBuilder.append(",");
}
entryValueBuilder.append(readExifEntryValue(dataInputStream,dataFormat,numberOfComponents));
}
mAttributes.put(tagName,entryValueBuilder.toString());
}
if (dataInputStream.peek() != nextEntryOffset) {
dataInputStream.seek(nextEntryOffset);
}
}
long nextIfdOffset=dataInputStream.readUnsignedInt();
if (DEBUG) {
Log.d(TAG,String.format("nextIfdOffset: %d",nextIfdOffset));
}
if (nextIfdOffset > 8) {
dataInputStream.seek(nextIfdOffset);
readImageFileDirectory(dataInputStream,IFD_THUMBNAIL_HINT);
}
}
