{
  FileInputStream in=null;
  try {
    if (mFilename != null) {
      in=new FileInputStream(mFilename);
    }
    if (mFileDescriptor != null) {
      in=new FileInputStream(mFileDescriptor);
    }
    if (in != null) {
      HashMap map=getRawAttributesNative(Os.dup(in.getFD()));
      mIsRaw=map != null;
      if (mIsRaw) {
        for (        Object obj : map.entrySet()) {
          Map.Entry entry=(Map.Entry)obj;
          String attrName=(String)entry.getKey();
          String attrValue=(String)entry.getValue();
switch (attrName) {
case TAG_HAS_THUMBNAIL:
            mHasThumbnail=attrValue.equalsIgnoreCase("true");
          break;
case TAG_THUMBNAIL_OFFSET:
        mThumbnailOffset=Integer.parseInt(attrValue);
      break;
case TAG_THUMBNAIL_LENGTH:
    mThumbnailLength=Integer.parseInt(attrValue);
  break;
default :
mAttributes.put(attrName,attrValue);
break;
}
}
if (DEBUG) {
printAttributes();
}
return;
}
}
}
 catch (ErrnoException e) {
e.rethrowAsIOException();
}
 finally {
IoUtils.closeQuietly(in);
}
try {
if (mFileDescriptor != null) {
Os.lseek(mFileDescriptor,0,OsConstants.SEEK_SET);
}
getJpegAttributes(mInputStream);
}
 catch (ErrnoException e) {
e.rethrowAsIOException();
}
 finally {
IoUtils.closeQuietly(mInputStream);
}
if (DEBUG) {
printAttributes();
}
}
