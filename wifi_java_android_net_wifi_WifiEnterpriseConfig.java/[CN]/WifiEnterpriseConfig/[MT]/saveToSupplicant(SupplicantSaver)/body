{
  if (!isEapMethodValid()) {
    return false;
  }
  boolean shouldNotWriteAnonIdentity=mEapMethod == WifiEnterpriseConfig.Eap.SIM || mEapMethod == WifiEnterpriseConfig.Eap.AKA || mEapMethod == WifiEnterpriseConfig.Eap.AKA_PRIME;
  for (  String key : mFields.keySet()) {
    if (shouldNotWriteAnonIdentity && ANON_IDENTITY_KEY.equals(key)) {
      continue;
    }
    if (!saver.saveValue(key,mFields.get(key))) {
      return false;
    }
  }
  if (!saver.saveValue(EAP_KEY,Eap.strings[mEapMethod])) {
    return false;
  }
  if (mEapMethod != Eap.TLS && mPhase2Method != Phase2.NONE) {
    boolean is_autheap=mEapMethod == Eap.TTLS && mPhase2Method == Phase2.GTC;
    String prefix=is_autheap ? Phase2.AUTHEAP_PREFIX : Phase2.AUTH_PREFIX;
    String value=convertToQuotedString(prefix + Phase2.strings[mPhase2Method]);
    return saver.saveValue(PHASE2_KEY,value);
  }
 else   if (mPhase2Method == Phase2.NONE) {
    return saver.saveValue(PHASE2_KEY,null);
  }
 else {
    Log.e(TAG,"WiFi enterprise configuration is invalid as it supplies a " + "phase 2 method but the phase1 method does not support it.");
    return false;
  }
}
