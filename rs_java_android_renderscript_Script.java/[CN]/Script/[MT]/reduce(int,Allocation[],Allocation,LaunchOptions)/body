{
  mRS.validate();
  if (ains == null || ains.length < 1) {
    throw new RSIllegalArgumentException("At least one input is required.");
  }
  if (aout == null) {
    throw new RSIllegalArgumentException("aout is required to be non-null.");
  }
  for (  Allocation ain : ains) {
    mRS.validateObject(ain);
  }
  long[] in_ids=new long[ains.length];
  for (int index=0; index < ains.length; ++index) {
    in_ids[index]=ains[index].getID(mRS);
  }
  long out_id=aout.getID(mRS);
  int[] limits=null;
  if (sc != null) {
    limits=new int[6];
    limits[0]=sc.xstart;
    limits[1]=sc.xend;
    limits[2]=sc.ystart;
    limits[3]=sc.yend;
    limits[4]=sc.zstart;
    limits[5]=sc.zend;
  }
  mRS.nScriptReduce(getID(mRS),slot,in_ids,out_id,limits);
}
