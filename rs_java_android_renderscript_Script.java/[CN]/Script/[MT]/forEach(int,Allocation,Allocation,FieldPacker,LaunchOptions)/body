{
  mRS.validate();
  mRS.validateObject(ain);
  mRS.validateObject(aout);
  if (ain == null && aout == null && sc == null) {
    throw new RSIllegalArgumentException("At least one of input allocation, output allocation, or LaunchOptions is required to be non-null.");
  }
  long[] in_ids=null;
  if (ain != null) {
    in_ids=mInIdsBuffer;
    in_ids[0]=ain.getID(mRS);
  }
  long out_id=0;
  if (aout != null) {
    out_id=aout.getID(mRS);
  }
  byte[] params=null;
  if (v != null) {
    params=v.getData();
  }
  int[] limits=null;
  if (sc != null) {
    limits=new int[6];
    limits[0]=sc.xstart;
    limits[1]=sc.xend;
    limits[2]=sc.ystart;
    limits[3]=sc.yend;
    limits[4]=sc.zstart;
    limits[5]=sc.zend;
  }
  mRS.nScriptForEach(getID(mRS),slot,in_ids,out_id,params,limits);
}
