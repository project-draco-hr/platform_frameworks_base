{
  if (!mTracking) {
    return;
  }
  if (mNetworkState != AVAILABLE) {
    return;
  }
  final long now=SystemClock.elapsedRealtime();
  if ((mLastNetworkQueryTime != 0) && (mLastNetworkQueryTime > mLastSuccessfulNetworkQueryTime) && ((now - mLastNetworkQueryTime) <= MIN_NETWORK_RETRY_MILLIS)) {
    return;
  }
  List<ScanResult> scanResults=null;
  if (mWifiEnabled && (mWifiLastScanResults != null && ((now - mLastWifiScanElapsedTime) < (mWifiScanFrequency + MAX_TIME_TO_WAIT_FOR_RADIO)))) {
    scanResults=mWifiLastScanResults;
  }
  boolean noCell=mCellState == null || !mCellState.isValid();
  boolean noWifi=scanResults == null || (scanResults.size() == 0);
  if (noCell && noWifi) {
    clearLocation();
    return;
  }
  int trigger;
  if (!mWifiEnabled) {
    if (!noCell) {
      trigger=GDebugProfile.TRIGGER_CELL_AND_WIFI_CHANGE;
    }
 else {
      trigger=GDebugProfile.TRIGGER_WIFI_CHANGE;
    }
  }
 else {
    trigger=GDebugProfile.TRIGGER_CELL_CHANGE;
  }
  try {
    mLastNetworkQueryTime=now;
    mMasfClient.getNetworkLocation(mApplications,trigger,mCellState,mCellHistory,scanResults,mLastWifiScanRealTime,new Callback(){
      public void locationReceived(      Location location,      boolean networkSuccessful){
        if ((location != null) && (location.getAccuracy() > 0) && (location.getTime() != mLocation.getTime())) {
          mLocation.set(location);
          updateStatus(AVAILABLE);
        }
 else {
          clearLocation();
        }
        if (networkSuccessful) {
          mLastSuccessfulNetworkQueryTime=SystemClock.elapsedRealtime();
        }
      }
    }
);
  }
 catch (  Exception e) {
    Log.e(TAG,"updateLocation got exception:",e);
  }
}
