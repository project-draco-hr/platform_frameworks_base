{
  CharSequence s1="The quick brown fox jumps over \u00FEhe lazy dog.";
  CharSequence s2=new Wrapper(s1);
  Spannable s3=new SpannableString(s1);
  s3.setSpan(new StyleSpan(0),5,10,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
  TextPaint p=new TextPaint();
  for (int i=0; i < 100; i++) {
    for (int j=0; j < 3; j++) {
      TextUtils.TruncateAt kind=null;
switch (j) {
case 0:
        kind=TextUtils.TruncateAt.START;
      break;
case 1:
    kind=TextUtils.TruncateAt.END;
  break;
case 2:
kind=TextUtils.TruncateAt.MIDDLE;
break;
}
String out1=TextUtils.ellipsize(s1,p,i,kind).toString();
String out2=TextUtils.ellipsize(s2,p,i,kind).toString();
String out3=TextUtils.ellipsize(s3,p,i,kind).toString();
String keep1=TextUtils.ellipsize(s1,p,i,kind,true,null).toString();
String keep2=TextUtils.ellipsize(s2,p,i,kind,true,null).toString();
String keep3=TextUtils.ellipsize(s3,p,i,kind,true,null).toString();
String trim1=keep1.replace("\uFEFF","");
assertEquals("wid " + i + " pass "+ j,out1,out2);
assertEquals("wid " + i + " pass "+ j,out2,out3);
assertEquals("wid " + i + " pass "+ j,keep1,keep2);
assertEquals("wid " + i + " pass "+ j,keep2,keep3);
assertEquals("wid " + i + " pass "+ j,out1,trim1);
assertEquals("wid " + i + " pass "+ j,keep1.length(),s1.length());
assertTrue("wid " + i + " pass "+ j,p.measureText(out1) <= i);
assertTrue("wid " + i + " pass "+ j,p.measureText(keep1) == p.measureText(out1));
}
}
}
