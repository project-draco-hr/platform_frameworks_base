{
  outAttributes.clear();
  outAttributes.setMargins(mDefaultMargins);
  final int mediaSizeIndex=mDefaults[PROPERTY_MEDIA_SIZE];
  if (mediaSizeIndex >= 0) {
    outAttributes.setMediaSize(mMediaSizes.get(mediaSizeIndex));
  }
  final int resolutionIndex=mDefaults[PROPERTY_RESOLUTION];
  if (resolutionIndex >= 0) {
    outAttributes.setResolution(mResolutions.get(resolutionIndex));
  }
  final int inputTrayIndex=mDefaults[PROPERTY_INPUT_TRAY];
  if (inputTrayIndex >= 0) {
    outAttributes.setInputTray(mInputTrays.get(inputTrayIndex));
  }
  final int outputTrayIndex=mDefaults[PROPERTY_OUTPUT_TRAY];
  if (outputTrayIndex >= 0) {
    outAttributes.setOutputTray(mOutputTrays.get(outputTrayIndex));
  }
  final int duplexMode=mDefaults[PROPERTY_DUPLEX_MODE];
  if (duplexMode > 0) {
    outAttributes.setDuplexMode(duplexMode);
  }
  final int colorMode=mDefaults[PROPERTY_COLOR_MODE];
  if (colorMode > 0) {
    outAttributes.setColorMode(colorMode);
  }
  final int fittingMode=mDefaults[PROPERTY_FITTING_MODE];
  if (fittingMode > 0) {
    outAttributes.setFittingMode(fittingMode);
  }
  final int orientation=mDefaults[PROPERTY_ORIENTATION];
  if (orientation > 0) {
    outAttributes.setOrientation(orientation);
  }
}
