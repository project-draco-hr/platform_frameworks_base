{
  try {
    Cursor c=cr.query(BOOKMARKS_URI,HISTORY_PROJECTION,whereClause,null,null);
    if (!c.moveToFirst()) {
      c.deactivate();
      return;
    }
    final WebIconDatabase iconDb=WebIconDatabase.getInstance();
    StringBuffer sb=new StringBuffer();
    boolean firstTime=true;
    do {
      String url=c.getString(HISTORY_PROJECTION_URL_INDEX);
      boolean isBookmark=c.getInt(HISTORY_PROJECTION_BOOKMARK_INDEX) == 1;
      if (isBookmark) {
        if (firstTime) {
          firstTime=false;
        }
 else {
          sb.append(" OR ");
        }
        sb.append("( _id = ");
        sb.append(c.getInt(0));
        sb.append(" )");
      }
 else {
        iconDb.releaseIconForPageUrl(url);
      }
    }
 while (c.moveToNext());
    c.deactivate();
    if (!firstTime) {
      ContentValues map=new ContentValues();
      map.put(BookmarkColumns.VISITS,0);
      map.put(BookmarkColumns.DATE,0);
      cr.update(BOOKMARKS_URI,map,sb.toString(),null);
    }
    String deleteWhereClause=BookmarkColumns.BOOKMARK + " = 0";
    if (whereClause != null) {
      deleteWhereClause+=" AND " + whereClause;
    }
    cr.delete(BOOKMARKS_URI,deleteWhereClause,null);
  }
 catch (  IllegalStateException e) {
    return;
  }
}
