{
  if (mServiceSpecificInfoLength != 0 && (mServiceSpecificInfo == null || mServiceSpecificInfo.length < mServiceSpecificInfoLength)) {
    throw new IllegalArgumentException("Non-matching combination of " + "serviceSpecificInfo and serviceSpecificInfoLength");
  }
  if (mTxFilterLength != 0 && (mTxFilter == null || mTxFilter.length < mTxFilterLength)) {
    throw new IllegalArgumentException("Non-matching combination of txFilter and txFilterLength");
  }
  if (mRxFilterLength != 0 && (mRxFilter == null || mRxFilter.length < mRxFilterLength)) {
    throw new IllegalArgumentException("Non-matching combination of rxFilter and rxFilterLength");
  }
  if (mPublishType < PUBLISH_TYPE_UNSOLICITED || mPublishType > PUBLISH_TYPE_SOLICITED) {
    throw new IllegalArgumentException("Invalid publishType - " + mPublishType);
  }
  if (mPublishCount < 0) {
    throw new IllegalArgumentException("Invalid publishCount - must be non-negative");
  }
  if (mTtlSec < 0) {
    throw new IllegalArgumentException("Invalid ttlSec - must be non-negative");
  }
  if (mPublishType == PublishConfig.PUBLISH_TYPE_UNSOLICITED && mRxFilterLength != 0) {
    throw new IllegalArgumentException("Invalid publish config: UNSOLICITED " + "publishes (active) can't have an Rx filter");
  }
  if (mPublishType == PublishConfig.PUBLISH_TYPE_SOLICITED && mTxFilterLength != 0) {
    throw new IllegalArgumentException("Invalid publish config: SOLICITED " + "publishes (passive) can't have a Tx filter");
  }
}
