{
  Inet4Address ipAddress=mYourIp;
  if (ipAddress.equals(Inet4Address.ANY)) {
    ipAddress=mClientIp;
    if (ipAddress.equals(Inet4Address.ANY)) {
      return null;
    }
  }
  int prefixLength;
  if (mSubnetMask != null) {
    try {
      prefixLength=NetworkUtils.netmaskToPrefixLength(mSubnetMask);
    }
 catch (    IllegalArgumentException e) {
      return null;
    }
  }
 else {
    prefixLength=NetworkUtils.getImplicitNetmask(ipAddress);
  }
  DhcpResults results=new DhcpResults();
  try {
    results.ipAddress=new LinkAddress(ipAddress,prefixLength);
  }
 catch (  IllegalArgumentException e) {
    return null;
  }
  if (mGateways.size() > 0) {
    results.gateway=mGateways.get(0);
  }
  results.dnsServers.addAll(mDnsServers);
  results.domains=mDomainName;
  results.serverAddress=mServerIdentifier;
  results.vendorInfo=mVendorInfo;
  results.leaseDuration=(mLeaseTime != null) ? mLeaseTime : INFINITE_LEASE;
  results.mtu=(mMtu != null && MIN_MTU <= mMtu && mMtu <= MAX_MTU) ? mMtu : 0;
  return results;
}
