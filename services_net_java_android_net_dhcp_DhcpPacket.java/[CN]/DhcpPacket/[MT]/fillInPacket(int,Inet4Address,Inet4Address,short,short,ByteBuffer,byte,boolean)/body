{
  byte[] destIpArray=destIp.getAddress();
  byte[] srcIpArray=srcIp.getAddress();
  int ipHeaderOffset=0;
  int ipLengthOffset=0;
  int ipChecksumOffset=0;
  int endIpHeader=0;
  int udpHeaderOffset=0;
  int udpLengthOffset=0;
  int udpChecksumOffset=0;
  buf.clear();
  buf.order(ByteOrder.BIG_ENDIAN);
  if (encap == ENCAP_L2) {
    buf.put(ETHER_BROADCAST);
    buf.put(mClientMac);
    buf.putShort((short)OsConstants.ETH_P_IP);
  }
  if (encap <= ENCAP_L3) {
    ipHeaderOffset=buf.position();
    buf.put(IP_VERSION_HEADER_LEN);
    buf.put(IP_TOS_LOWDELAY);
    ipLengthOffset=buf.position();
    buf.putShort((short)0);
    buf.putShort((short)0);
    buf.putShort(IP_FLAGS_OFFSET);
    buf.put(IP_TTL);
    buf.put(IP_TYPE_UDP);
    ipChecksumOffset=buf.position();
    buf.putShort((short)0);
    buf.put(srcIpArray);
    buf.put(destIpArray);
    endIpHeader=buf.position();
    udpHeaderOffset=buf.position();
    buf.putShort(srcUdp);
    buf.putShort(destUdp);
    udpLengthOffset=buf.position();
    buf.putShort((short)0);
    udpChecksumOffset=buf.position();
    buf.putShort((short)0);
  }
  buf.put(requestCode);
  buf.put((byte)1);
  buf.put((byte)mClientMac.length);
  buf.put((byte)0);
  buf.putInt(mTransId);
  buf.putShort(mSecs);
  if (broadcast) {
    buf.putShort((short)0x8000);
  }
 else {
    buf.putShort((short)0x0000);
  }
  buf.put(mClientIp.getAddress());
  buf.put(mYourIp.getAddress());
  buf.put(mNextIp.getAddress());
  buf.put(mRelayIp.getAddress());
  buf.put(mClientMac);
  buf.position(buf.position() + (HWADDR_LEN - mClientMac.length) + 64+ 128);
  buf.putInt(0x63825363);
  finishPacket(buf);
  if ((buf.position() & 1) == 1) {
    buf.put((byte)0);
  }
  if (encap <= ENCAP_L3) {
    short udpLen=(short)(buf.position() - udpHeaderOffset);
    buf.putShort(udpLengthOffset,udpLen);
    buf.putShort(udpChecksumOffset,IpUtils.udpChecksum(buf,ipHeaderOffset,udpHeaderOffset));
    buf.putShort(ipLengthOffset,(short)(buf.position() - ipHeaderOffset));
    buf.putShort(ipChecksumOffset,IpUtils.ipChecksum(buf,ipHeaderOffset));
  }
}
