{
  IntentFilter userFilter=new IntentFilter();
  userFilter.addAction(Intent.ACTION_USER_REMOVED);
  userFilter.addAction(Intent.ACTION_USER_STOPPED);
  getContext().registerReceiver(new BroadcastReceiver(){
    @Override public void onReceive(    Context context,    Intent intent){
      final int userId=intent.getIntExtra(Intent.EXTRA_USER_HANDLE,UserHandle.USER_OWNER);
switch (intent.getAction()) {
case Intent.ACTION_USER_REMOVED:
{
          mSettingsRegistry.removeUserStateLocked(userId,true);
        }
      break;
case Intent.ACTION_USER_STOPPED:
{
      mSettingsRegistry.removeUserStateLocked(userId,false);
    }
  break;
}
}
}
,userFilter);
PackageMonitor monitor=new PackageMonitor(){
@Override public void onPackageRemoved(String packageName,int uid){
synchronized (mLock) {
mSettingsRegistry.onPackageRemovedLocked(packageName,UserHandle.getUserId(uid));
}
}
}
;
monitor.register(getContext(),BackgroundThread.getHandler().getLooper(),UserHandle.ALL,true);
}
