{
synchronized (mLock) {
    final int requestingUserId=getRequestingUserId(args);
switch (method) {
case Settings.CALL_METHOD_GET_GLOBAL:
{
        Setting setting=getGlobalSettingLocked(name);
        return packageValueForCallResult(setting);
      }
case Settings.CALL_METHOD_GET_SECURE:
{
      Setting setting=getSecureSettingLocked(name,requestingUserId);
      return packageValueForCallResult(setting);
    }
case Settings.CALL_METHOD_GET_SYSTEM:
{
    Setting setting=getSystemSettingLocked(name,requestingUserId);
    return packageValueForCallResult(setting);
  }
case Settings.CALL_METHOD_PUT_GLOBAL:
{
  String value=getSettingValue(args);
  insertGlobalSettingLocked(name,value,requestingUserId);
}
break;
case Settings.CALL_METHOD_PUT_SECURE:
{
String value=getSettingValue(args);
insertSecureSettingLocked(name,value,requestingUserId);
}
break;
case Settings.CALL_METHOD_PUT_SYSTEM:
{
String value=getSettingValue(args);
insertSystemSettingLocked(name,value,requestingUserId);
}
break;
default :
{
Slog.w(LOG_TAG,"call() with invalid method: " + method);
}
break;
}
}
return null;
}
