{
  if (url.getPathSegments().size() == 1) {
    this.table=url.getPathSegments().get(0);
    if (!DatabaseHelper.isValidTable(this.table)) {
      throw new IllegalArgumentException("Bad root path: " + this.table);
    }
    this.where=where;
    this.args=args;
  }
 else   if (url.getPathSegments().size() != 2) {
    throw new IllegalArgumentException("Invalid URI: " + url);
  }
 else   if (!TextUtils.isEmpty(where)) {
    throw new UnsupportedOperationException("WHERE clause not supported: " + url);
  }
 else {
    this.table=url.getPathSegments().get(0);
    if (!DatabaseHelper.isValidTable(this.table)) {
      throw new IllegalArgumentException("Bad root path: " + this.table);
    }
    if (TABLE_SYSTEM.equals(this.table) || TABLE_SECURE.equals(this.table) || TABLE_GLOBAL.equals(this.table)) {
      this.where=Settings.NameValueTable.NAME + "=?";
      final String name=url.getPathSegments().get(1);
      this.args=new String[]{name};
      if (TABLE_SYSTEM.equals(this.table) || TABLE_SECURE.equals(this.table)) {
        if (sSecureGlobalKeys.contains(name) || sSystemGlobalKeys.contains(name)) {
          this.table=TABLE_GLOBAL;
        }
      }
    }
 else {
      this.where="_id=" + ContentUris.parseId(url);
      this.args=null;
    }
  }
}
