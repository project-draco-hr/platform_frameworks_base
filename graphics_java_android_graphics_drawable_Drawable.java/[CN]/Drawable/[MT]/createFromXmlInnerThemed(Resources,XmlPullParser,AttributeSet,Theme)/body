{
  final Drawable drawable;
  final String name=parser.getName();
  if (name.equals("selector")) {
    drawable=new StateListDrawable();
  }
 else   if (name.equals("animated-selector")) {
    drawable=new AnimatedStateListDrawable();
  }
 else   if (name.equals("level-list")) {
    drawable=new LevelListDrawable();
  }
 else   if (name.equals("layer-list")) {
    drawable=new LayerDrawable();
  }
 else   if (name.equals("transition")) {
    drawable=new TransitionDrawable();
  }
 else   if (name.equals("touch-feedback")) {
    drawable=new TouchFeedbackDrawable();
  }
 else   if (name.equals("color")) {
    drawable=new ColorDrawable();
  }
 else   if (name.equals("shape")) {
    drawable=new GradientDrawable();
  }
 else   if (name.equals("vector")) {
    drawable=new VectorDrawable();
  }
 else   if (name.equals("scale")) {
    drawable=new ScaleDrawable();
  }
 else   if (name.equals("clip")) {
    drawable=new ClipDrawable();
  }
 else   if (name.equals("rotate")) {
    drawable=new RotateDrawable();
  }
 else   if (name.equals("animated-rotate")) {
    drawable=new AnimatedRotateDrawable();
  }
 else   if (name.equals("animation-list")) {
    drawable=new AnimationDrawable();
  }
 else   if (name.equals("inset")) {
    drawable=new InsetDrawable();
  }
 else   if (name.equals("bitmap")) {
    drawable=new BitmapDrawable(r);
    if (r != null) {
      ((BitmapDrawable)drawable).setTargetDensity(r.getDisplayMetrics());
    }
  }
 else   if (name.equals("nine-patch")) {
    drawable=new NinePatchDrawable();
    if (r != null) {
      ((NinePatchDrawable)drawable).setTargetDensity(r.getDisplayMetrics());
    }
  }
 else {
    throw new XmlPullParserException(parser.getPositionDescription() + ": invalid drawable tag " + name);
  }
  drawable.inflate(r,parser,attrs,theme);
  return drawable;
}
