{
  super.onPrepareOptionsMenu(menu);
  final FragmentManager fm=getFragmentManager();
  final DocumentInfo cwd=getCurrentDirectory();
  final MenuItem createDir=menu.findItem(R.id.menu_create_dir);
  final MenuItem search=menu.findItem(R.id.menu_search);
  final MenuItem sort=menu.findItem(R.id.menu_sort);
  final MenuItem sortSize=menu.findItem(R.id.menu_sort_size);
  final MenuItem grid=menu.findItem(R.id.menu_grid);
  final MenuItem list=menu.findItem(R.id.menu_list);
  final MenuItem settings=menu.findItem(R.id.menu_settings);
  if (mDrawerLayout.isDrawerOpen(mRootsContainer)) {
    createDir.setVisible(false);
    search.setVisible(false);
    sort.setVisible(false);
    grid.setVisible(false);
    list.setVisible(false);
    mIgnoreNextCollapse=true;
    search.collapseActionView();
    return true;
  }
  if (cwd != null) {
    sort.setVisible(true);
    grid.setVisible(mState.derivedMode != MODE_GRID);
    list.setVisible(mState.derivedMode != MODE_LIST);
  }
 else {
    sort.setVisible(false);
    grid.setVisible(false);
    list.setVisible(false);
  }
  if (mState.currentSearch != null) {
    sort.setVisible(false);
    search.expandActionView();
    mSearchView.setQuery(mState.currentSearch,false);
  }
 else {
    mIgnoreNextCollapse=true;
    search.collapseActionView();
  }
  sortSize.setVisible(mState.showSize);
  final boolean searchVisible;
  if (mState.action == ACTION_CREATE) {
    createDir.setVisible(cwd != null && cwd.isCreateSupported());
    searchVisible=false;
    if (cwd == null) {
      grid.setVisible(false);
      list.setVisible(false);
    }
    SaveFragment.get(fm).setSaveEnabled(cwd != null && cwd.isCreateSupported());
  }
 else {
    createDir.setVisible(false);
    searchVisible=cwd != null && cwd.isSearchSupported();
  }
  search.setVisible(searchVisible);
  settings.setVisible(mState.action != ACTION_MANAGE);
  return true;
}
