{
  super.onPrepareOptionsMenu(menu);
  final FragmentManager fm=getFragmentManager();
  final RootInfo root=getCurrentRoot();
  final DocumentInfo cwd=getCurrentDirectory();
  final MenuItem createDir=menu.findItem(R.id.menu_create_dir);
  final MenuItem sort=menu.findItem(R.id.menu_sort);
  final MenuItem sortSize=menu.findItem(R.id.menu_sort_size);
  final MenuItem grid=menu.findItem(R.id.menu_grid);
  final MenuItem list=menu.findItem(R.id.menu_list);
  final MenuItem advanced=menu.findItem(R.id.menu_advanced);
  final MenuItem fileSize=menu.findItem(R.id.menu_file_size);
  final MenuItem settings=menu.findItem(R.id.menu_settings);
  sort.setVisible(cwd != null);
  grid.setVisible(mState.derivedMode != State.MODE_GRID);
  list.setVisible(mState.derivedMode != State.MODE_LIST);
  mSearchManager.update(root);
  sort.setVisible(mSearchManager.isSearching());
  sortSize.setVisible(mState.showSize);
  boolean fileSizeVisible=!(mState.action == ACTION_MANAGE || mState.action == ACTION_BROWSE);
  if (mState.action == ACTION_CREATE || mState.action == ACTION_OPEN_TREE) {
    createDir.setVisible(cwd != null && cwd.isCreateSupported());
    mSearchManager.showMenu(false);
    if (cwd == null) {
      grid.setVisible(false);
      list.setVisible(false);
      fileSizeVisible=false;
    }
    if (mState.action == ACTION_CREATE) {
      SaveFragment.get(fm).setSaveEnabled(cwd != null && cwd.isCreateSupported());
    }
  }
 else {
    createDir.setVisible(false);
  }
  advanced.setTitle(LocalPreferences.getDisplayAdvancedDevices(this) ? R.string.menu_advanced_hide : R.string.menu_advanced_show);
  fileSize.setTitle(LocalPreferences.getDisplayFileSize(this) ? R.string.menu_file_size_hide : R.string.menu_file_size_show);
  advanced.setVisible(!(mState.action == ACTION_MANAGE || mState.action == ACTION_BROWSE));
  fileSize.setVisible(fileSizeVisible);
  settings.setVisible((mState.action == ACTION_MANAGE || mState.action == ACTION_BROWSE) && (root.flags & Root.FLAG_HAS_SETTINGS) != 0);
  return true;
}
