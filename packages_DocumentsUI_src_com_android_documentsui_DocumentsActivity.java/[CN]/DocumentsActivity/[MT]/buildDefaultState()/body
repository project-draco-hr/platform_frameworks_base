{
  mState=new State();
  final Intent intent=getIntent();
  final String action=intent.getAction();
  if (Intent.ACTION_OPEN_DOCUMENT.equals(action)) {
    mState.action=ACTION_OPEN;
  }
 else   if (Intent.ACTION_CREATE_DOCUMENT.equals(action)) {
    mState.action=ACTION_CREATE;
  }
 else   if (Intent.ACTION_GET_CONTENT.equals(action)) {
    mState.action=ACTION_GET_CONTENT;
  }
 else   if (DocumentsContract.ACTION_MANAGE_ROOT.equals(action)) {
    mState.action=ACTION_MANAGE;
  }
  if (mState.action == ACTION_OPEN || mState.action == ACTION_GET_CONTENT) {
    mState.allowMultiple=intent.getBooleanExtra(Intent.EXTRA_ALLOW_MULTIPLE,false);
  }
  if (mState.action == ACTION_MANAGE) {
    mState.acceptMimes=new String[]{"*/*"};
    mState.allowMultiple=true;
  }
 else   if (intent.hasExtra(Intent.EXTRA_MIME_TYPES)) {
    mState.acceptMimes=intent.getStringArrayExtra(Intent.EXTRA_MIME_TYPES);
  }
 else {
    mState.acceptMimes=new String[]{intent.getType()};
  }
  mState.localOnly=intent.getBooleanExtra(Intent.EXTRA_LOCAL_ONLY,false);
  mState.showAdvanced=SettingsActivity.getDisplayAdvancedDevices(this);
  if (mState.action == ACTION_MANAGE) {
    final Uri uri=intent.getData();
    final String rootId=DocumentsContract.getRootId(uri);
    final RootInfo root=mRoots.getRoot(uri.getAuthority(),rootId);
    if (root != null) {
      onRootPicked(root,true);
    }
 else {
      Log.w(TAG,"Failed to find root: " + uri);
      finish();
    }
  }
 else {
    final String packageName=getCallingPackage();
    final Cursor cursor=getContentResolver().query(RecentsProvider.buildResume(packageName),null,null,null,null);
    try {
      if (cursor.moveToFirst()) {
        final byte[] rawStack=cursor.getBlob(cursor.getColumnIndex(ResumeColumns.STACK));
        DurableUtils.readFromArray(rawStack,mState.stack);
      }
    }
 catch (    IOException e) {
      Log.w(TAG,"Failed to resume",e);
    }
 finally {
      IoUtils.closeQuietly(cursor);
    }
    final RootInfo root=getCurrentRoot();
    final List<RootInfo> matchingRoots=mRoots.getMatchingRoots(mState);
    if (!matchingRoots.contains(root)) {
      mState.stack.reset();
    }
    if (mState.stack.isRecents()) {
      mDrawerLayout.openDrawer(mRootsContainer);
    }
  }
}
