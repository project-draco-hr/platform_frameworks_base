{
  final ActionBar actionBar=getActionBar();
  actionBar.setDisplayShowHomeEnabled(true);
  if (mDrawerLayout.isDrawerOpen(mRootsContainer)) {
    actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_STANDARD);
    actionBar.setIcon(new ColorDrawable());
    if (mAction == ACTION_OPEN || mAction == ACTION_GET_CONTENT) {
      actionBar.setTitle(R.string.title_open);
    }
 else     if (mAction == ACTION_CREATE) {
      actionBar.setTitle(R.string.title_save);
    }
    actionBar.setDisplayHomeAsUpEnabled(true);
    mDrawerToggle.setDrawerIndicatorEnabled(true);
  }
 else {
    final DocumentRoot root=getCurrentRoot();
    actionBar.setIcon(root != null ? root.loadIcon(this) : null);
    if (mRoots.isRecentsRoot(root)) {
      actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_STANDARD);
      actionBar.setTitle(root.title);
    }
 else {
      actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_LIST);
      actionBar.setTitle(null);
      actionBar.setListNavigationCallbacks(mSortAdapter,mSortListener);
      actionBar.setSelectedNavigationItem(mDisplayState.sortOrder);
    }
    if (mStack.size() > 1) {
      actionBar.setDisplayHomeAsUpEnabled(true);
      mDrawerToggle.setDrawerIndicatorEnabled(false);
    }
 else     if (mAction == ACTION_MANAGE) {
      actionBar.setDisplayHomeAsUpEnabled(false);
      mDrawerToggle.setDrawerIndicatorEnabled(false);
    }
 else {
      actionBar.setDisplayHomeAsUpEnabled(true);
      mDrawerToggle.setDrawerIndicatorEnabled(true);
    }
  }
}
