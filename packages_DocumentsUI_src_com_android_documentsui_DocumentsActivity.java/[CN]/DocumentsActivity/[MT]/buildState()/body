{
  State state=buildDefaultState();
  final Intent intent=getIntent();
  final String action=intent.getAction();
  if (Intent.ACTION_OPEN_DOCUMENT.equals(action)) {
    state.action=ACTION_OPEN;
  }
 else   if (Intent.ACTION_CREATE_DOCUMENT.equals(action)) {
    state.action=ACTION_CREATE;
  }
 else   if (Intent.ACTION_GET_CONTENT.equals(action)) {
    state.action=ACTION_GET_CONTENT;
  }
 else   if (Intent.ACTION_OPEN_DOCUMENT_TREE.equals(action)) {
    state.action=ACTION_OPEN_TREE;
  }
 else   if (DocumentsContract.ACTION_BROWSE_DOCUMENT_ROOT.equals(action)) {
    state.action=ACTION_BROWSE;
  }
 else   if (DocumentsIntent.ACTION_OPEN_COPY_DESTINATION.equals(action)) {
    state.action=ACTION_OPEN_COPY_DESTINATION;
  }
  if (state.action == ACTION_OPEN || state.action == ACTION_GET_CONTENT) {
    state.allowMultiple=intent.getBooleanExtra(Intent.EXTRA_ALLOW_MULTIPLE,false);
  }
  if (state.action == ACTION_BROWSE) {
    state.acceptMimes=new String[]{"*/*"};
    state.allowMultiple=true;
  }
 else   if (intent.hasExtra(Intent.EXTRA_MIME_TYPES)) {
    state.acceptMimes=intent.getStringArrayExtra(Intent.EXTRA_MIME_TYPES);
  }
 else {
    state.acceptMimes=new String[]{intent.getType()};
  }
  if (state.action == ACTION_BROWSE) {
    state.showSize=true;
  }
 else {
    state.showSize=LocalPreferences.getDisplayFileSize(this);
  }
  if (state.action == ACTION_OPEN_COPY_DESTINATION) {
    state.directoryCopy=intent.getBooleanExtra(BaseActivity.DocumentsIntent.EXTRA_DIRECTORY_COPY,false);
    state.transferMode=intent.getIntExtra(CopyService.EXTRA_TRANSFER_MODE,CopyService.TRANSFER_MODE_NONE);
  }
  return state;
}
