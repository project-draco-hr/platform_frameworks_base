{
  super.onCreate(icicle);
  if (mState.action == ACTION_CREATE) {
    final String mimeType=getIntent().getType();
    final String title=getIntent().getStringExtra(Intent.EXTRA_TITLE);
    SaveFragment.show(getFragmentManager(),mimeType,title);
  }
 else   if (mState.action == ACTION_OPEN_TREE || mState.action == ACTION_PICK_COPY_DESTINATION) {
    PickFragment.show(getFragmentManager());
  }
  if (mState.action == ACTION_GET_CONTENT) {
    final Intent moreApps=new Intent(getIntent());
    moreApps.setComponent(null);
    moreApps.setPackage(null);
    RootsFragment.show(getFragmentManager(),moreApps);
  }
 else   if (mState.action == ACTION_OPEN || mState.action == ACTION_CREATE || mState.action == ACTION_OPEN_TREE || mState.action == ACTION_PICK_COPY_DESTINATION) {
    RootsFragment.show(getFragmentManager(),null);
  }
  if (mState.restored) {
    refreshCurrentRootAndDirectory(AnimationView.ANIM_NONE);
  }
 else {
    setTitle("");
    if (mState.action == ACTION_PICK_COPY_DESTINATION) {
      if (DEBUG)       Log.d(TAG,"Launching directly into Home directory.");
      Uri homeUri=DocumentsContract.buildHomeUri();
      new LoadRootTask(this,homeUri).executeOnExecutor(ProviderExecutor.forAuthority(homeUri.getAuthority()));
    }
 else {
      if (DEBUG)       Log.d(TAG,"Attempting to load last used stack for calling package.");
      new LoadLastUsedStackTask(this).execute();
    }
  }
}
