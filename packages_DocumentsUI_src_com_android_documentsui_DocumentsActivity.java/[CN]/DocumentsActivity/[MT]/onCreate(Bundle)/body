{
  super.onCreate(icicle);
  mRoots=DocumentsApplication.getRootsCache(this);
  final Intent intent=getIntent();
  final String action=intent.getAction();
  if (Intent.ACTION_OPEN_DOCUMENT.equals(action)) {
    mAction=ACTION_OPEN;
  }
 else   if (Intent.ACTION_CREATE_DOCUMENT.equals(action)) {
    mAction=ACTION_CREATE;
  }
 else   if (Intent.ACTION_GET_CONTENT.equals(action)) {
    mAction=ACTION_GET_CONTENT;
  }
 else   if (DocumentsContract.ACTION_MANAGE_DOCUMENTS.equals(action)) {
    mAction=ACTION_MANAGE;
  }
  mDisplayState.action=mAction;
  if (mAction == ACTION_OPEN || mAction == ACTION_GET_CONTENT) {
    mDisplayState.allowMultiple=intent.getBooleanExtra(Intent.EXTRA_ALLOW_MULTIPLE,false);
  }
  if (mAction == ACTION_MANAGE) {
    mDisplayState.acceptMimes=new String[]{"*/*"};
    mDisplayState.allowMultiple=true;
  }
 else   if (intent.hasExtra(Intent.EXTRA_MIME_TYPES)) {
    mDisplayState.acceptMimes=intent.getStringArrayExtra(Intent.EXTRA_MIME_TYPES);
  }
 else {
    mDisplayState.acceptMimes=new String[]{intent.getType()};
  }
  mDisplayState.localOnly=intent.getBooleanExtra(Intent.EXTRA_LOCAL_ONLY,false);
  setResult(Activity.RESULT_CANCELED);
  setContentView(R.layout.activity);
  if (mAction == ACTION_CREATE) {
    final String mimeType=getIntent().getType();
    final String title=getIntent().getStringExtra(Intent.EXTRA_TITLE);
    SaveFragment.show(getFragmentManager(),mimeType,title);
  }
  if (mAction == ACTION_GET_CONTENT) {
    final Intent moreApps=new Intent(getIntent());
    moreApps.setComponent(null);
    moreApps.setPackage(null);
    RootsFragment.show(getFragmentManager(),moreApps);
  }
 else   if (mAction == ACTION_OPEN || mAction == ACTION_CREATE) {
    RootsFragment.show(getFragmentManager(),null);
  }
  if (mAction == ACTION_MANAGE) {
    mDisplayState.sortOrder=SORT_ORDER_LAST_MODIFIED;
  }
  mRootsContainer=findViewById(R.id.container_roots);
  mDrawerLayout=(DrawerLayout)findViewById(R.id.drawer_layout);
  mDrawerToggle=new ActionBarDrawerToggle(this,mDrawerLayout,R.drawable.ic_drawer,R.string.drawer_open,R.string.drawer_close);
  mDrawerLayout.setDrawerListener(mDrawerListener);
  mDrawerLayout.setDrawerShadow(R.drawable.drawer_shadow,GravityCompat.START);
  if (mAction == ACTION_MANAGE) {
    mDrawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);
    final Uri rootUri=intent.getData();
    final DocumentRoot root=mRoots.findRoot(rootUri);
    if (root != null) {
      onRootPicked(root,true);
    }
 else {
      Log.w(TAG,"Failed to find root: " + rootUri);
      finish();
    }
  }
 else {
    mDrawerLayout.openDrawer(mRootsContainer);
    final String packageName=getCallingPackage();
    final Cursor cursor=getContentResolver().query(RecentsProvider.buildResume(packageName),null,null,null,null);
    try {
      if (cursor.moveToFirst()) {
        final String raw=cursor.getString(cursor.getColumnIndex(RecentsProvider.COL_PATH));
        mStack=DocumentStack.deserialize(getContentResolver(),raw);
      }
    }
 catch (    FileNotFoundException e) {
      Log.w(TAG,"Failed to resume",e);
    }
 finally {
      cursor.close();
    }
    onCurrentDirectoryChanged();
  }
}
