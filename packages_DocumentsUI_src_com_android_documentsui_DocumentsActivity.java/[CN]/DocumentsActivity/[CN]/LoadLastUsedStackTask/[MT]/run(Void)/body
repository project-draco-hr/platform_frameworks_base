{
  if (DEBUG && !mState.stack.isEmpty()) {
    Log.w(TAG,"Overwriting existing stack.");
  }
  RootsCache roots=DocumentsApplication.getRootsCache(mOwner);
  String packageName=mOwner.getCallingPackageMaybeExtra();
  Uri resumeUri=RecentsProvider.buildResume(packageName);
  Cursor cursor=mOwner.getContentResolver().query(resumeUri,null,null,null,null);
  try {
    if (cursor.moveToFirst()) {
      mExternal=cursor.getInt(cursor.getColumnIndex(ResumeColumns.EXTERNAL)) != 0;
      final byte[] rawStack=cursor.getBlob(cursor.getColumnIndex(ResumeColumns.STACK));
      DurableUtils.readFromArray(rawStack,mState.stack);
      mRestoredStack=true;
    }
  }
 catch (  IOException e) {
    Log.w(TAG,"Failed to resume: " + e);
  }
 finally {
    IoUtils.closeQuietly(cursor);
  }
  if (mRestoredStack) {
    final Collection<RootInfo> matchingRoots=roots.getMatchingRootsBlocking(mState);
    try {
      mState.stack.updateRoot(matchingRoots);
      mState.stack.updateDocuments(mOwner.getContentResolver());
    }
 catch (    FileNotFoundException e) {
      Log.w(TAG,"Failed to restore stack for package: " + packageName + " because of error: "+ e);
      mState.stack.reset();
      mRestoredStack=false;
    }
  }
  return null;
}
