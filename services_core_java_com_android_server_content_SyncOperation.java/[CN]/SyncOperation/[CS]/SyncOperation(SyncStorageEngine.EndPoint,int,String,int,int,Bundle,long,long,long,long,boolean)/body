{
  this.target=info;
  this.owningUid=owningUid;
  this.owningPackage=owningPackage;
  this.reason=reason;
  this.syncSource=source;
  this.extras=new Bundle(extras);
  cleanBundle(this.extras);
  this.delayUntil=delayUntil;
  this.backoff=backoff;
  this.allowParallelSyncs=allowParallelSyncs;
  final long now=SystemClock.elapsedRealtime();
  if (runTimeFromNow < 0) {
    this.expedited=true;
    if (!this.extras.getBoolean(ContentResolver.SYNC_EXTRAS_EXPEDITED,false)) {
      this.extras.putBoolean(ContentResolver.SYNC_EXTRAS_EXPEDITED,true);
    }
    this.latestRunTime=now;
    this.flexTime=0;
  }
 else {
    this.expedited=false;
    this.extras.remove(ContentResolver.SYNC_EXTRAS_EXPEDITED);
    this.latestRunTime=now + runTimeFromNow;
    this.flexTime=flexTime;
  }
  updateEffectiveRunTime();
  this.key=toKey(info,this.extras);
}
