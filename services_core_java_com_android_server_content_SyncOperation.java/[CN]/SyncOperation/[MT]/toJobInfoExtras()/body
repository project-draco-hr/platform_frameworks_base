{
  PersistableBundle jobInfoExtras=new PersistableBundle();
  PersistableBundle syncExtrasBundle=new PersistableBundle();
  for (  String key : extras.keySet()) {
    Object value=extras.get(key);
    if (value instanceof Account) {
      Account account=(Account)value;
      PersistableBundle accountBundle=new PersistableBundle();
      accountBundle.putString("accountName",account.name);
      accountBundle.putString("accountType",account.type);
      jobInfoExtras.putPersistableBundle("ACCOUNT:" + key,accountBundle);
    }
 else     if (value instanceof Long) {
      syncExtrasBundle.putLong(key,(Long)value);
    }
 else     if (value instanceof Integer) {
      syncExtrasBundle.putInt(key,(Integer)value);
    }
 else     if (value instanceof Boolean) {
      syncExtrasBundle.putBoolean(key,(Boolean)value);
    }
 else     if (value instanceof Float) {
      syncExtrasBundle.putDouble(key,(Double)value);
    }
 else     if (value instanceof Double) {
      syncExtrasBundle.putDouble(key,(Double)value);
    }
 else     if (value instanceof String) {
      syncExtrasBundle.putString(key,(String)value);
    }
 else     if (value == null) {
      syncExtrasBundle.putString(key,null);
    }
 else {
      Slog.e(TAG,"Unknown extra type.");
    }
  }
  jobInfoExtras.putPersistableBundle("syncExtras",syncExtrasBundle);
  jobInfoExtras.putBoolean("SyncManagerJob",true);
  jobInfoExtras.putString("provider",target.provider);
  jobInfoExtras.putString("accountName",target.account.name);
  jobInfoExtras.putString("accountType",target.account.type);
  jobInfoExtras.putInt("userId",target.userId);
  jobInfoExtras.putInt("owningUid",owningUid);
  jobInfoExtras.putString("owningPackage",owningPackage);
  jobInfoExtras.putInt("reason",reason);
  jobInfoExtras.putInt("source",syncSource);
  jobInfoExtras.putBoolean("allowParallelSyncs",allowParallelSyncs);
  jobInfoExtras.putInt("jobId",jobId);
  jobInfoExtras.putBoolean("isPeriodic",isPeriodic);
  jobInfoExtras.putInt("sourcePeriodicId",sourcePeriodicId);
  jobInfoExtras.putLong("periodMillis",periodMillis);
  jobInfoExtras.putLong("flexMillis",flexMillis);
  jobInfoExtras.putLong("expectedRuntime",expectedRuntime);
  jobInfoExtras.putInt("retries",retries);
  return jobInfoExtras;
}
