{
  boolean profileConnected=false;
  boolean a2dpNotConnected=false;
  boolean hfpNotConnected=false;
  for (  LocalBluetoothProfile profile : getProfiles()) {
    int connectionStatus=getProfileConnectionState(profile);
switch (connectionStatus) {
case BluetoothProfile.STATE_CONNECTING:
case BluetoothProfile.STATE_DISCONNECTING:
      return Utils.getConnectionStateSummary(connectionStatus);
case BluetoothProfile.STATE_CONNECTED:
    profileConnected=true;
  break;
case BluetoothProfile.STATE_DISCONNECTED:
if (profile.isProfileReady()) {
  if ((profile instanceof A2dpProfile) || (profile instanceof A2dpSinkProfile)) {
    a2dpNotConnected=true;
  }
 else   if ((profile instanceof HeadsetProfile) || (profile instanceof HfpClientProfile)) {
    hfpNotConnected=true;
  }
}
break;
}
}
if (profileConnected) {
if (a2dpNotConnected && hfpNotConnected) {
return R.string.bluetooth_connected_no_headset_no_a2dp;
}
 else if (a2dpNotConnected) {
return R.string.bluetooth_connected_no_a2dp;
}
 else if (hfpNotConnected) {
return R.string.bluetooth_connected_no_headset;
}
 else {
return R.string.bluetooth_connected;
}
}
return getBondState() == BluetoothDevice.BOND_BONDING ? R.string.bluetooth_pairing : 0;
}
