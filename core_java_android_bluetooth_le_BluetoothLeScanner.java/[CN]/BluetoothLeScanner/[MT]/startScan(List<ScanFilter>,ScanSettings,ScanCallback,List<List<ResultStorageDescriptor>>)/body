{
  BluetoothLeUtils.checkAdapterStateOn(mBluetoothAdapter);
  if (settings == null || callback == null) {
    throw new IllegalArgumentException("settings or callback is null");
  }
synchronized (mLeScanClients) {
    if (mLeScanClients.containsKey(callback)) {
      postCallbackError(callback,ScanCallback.SCAN_FAILED_ALREADY_STARTED);
      return;
    }
    IBluetoothGatt gatt;
    try {
      gatt=mBluetoothManager.getBluetoothGatt();
    }
 catch (    RemoteException e) {
      gatt=null;
    }
    if (gatt == null) {
      postCallbackError(callback,ScanCallback.SCAN_FAILED_INTERNAL_ERROR);
      return;
    }
    if (!isSettingsConfigAllowedForScan(settings)) {
      postCallbackError(callback,ScanCallback.SCAN_FAILED_FEATURE_UNSUPPORTED);
      return;
    }
    BleScanCallbackWrapper wrapper=new BleScanCallbackWrapper(gatt,filters,settings,callback,resultStorages);
    wrapper.startRegisteration();
  }
}
