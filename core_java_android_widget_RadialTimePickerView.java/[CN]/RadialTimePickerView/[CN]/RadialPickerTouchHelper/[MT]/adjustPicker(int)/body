{
  final int stepSize;
  final int initialValue;
  final int maxValue;
  final int minValue;
  if (mShowHours) {
    stepSize=DEGREES_FOR_ONE_HOUR;
    initialValue=getCurrentHour() % 12;
    if (mIs24HourMode) {
      maxValue=23;
      minValue=0;
    }
 else {
      maxValue=12;
      minValue=1;
    }
  }
 else {
    stepSize=DEGREES_FOR_ONE_MINUTE;
    initialValue=getCurrentMinute();
    maxValue=55;
    minValue=0;
  }
  final int steppedValue=snapOnly30s(initialValue * stepSize,step) / stepSize;
  final int clampedValue=MathUtils.constrain(steppedValue,minValue,maxValue);
  if (mShowHours) {
    setCurrentHour(clampedValue);
  }
 else {
    setCurrentMinute(clampedValue);
  }
}
