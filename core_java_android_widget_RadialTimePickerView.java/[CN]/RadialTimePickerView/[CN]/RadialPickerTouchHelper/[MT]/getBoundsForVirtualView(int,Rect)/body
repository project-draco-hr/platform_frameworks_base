{
  final float radius;
  final int type=getTypeFromId(virtualViewId);
  final int value=getValueFromId(virtualViewId);
  final float centerRadius;
  final float degrees;
  if (type == TYPE_HOUR) {
    final boolean innerCircle=getInnerCircleForHour(value);
    if (innerCircle) {
      centerRadius=mCircleRadius - mTextInset[HOURS_INNER];
      radius=mSelectorRadius;
    }
 else {
      centerRadius=mCircleRadius - mTextInset[HOURS];
      radius=mSelectorRadius;
    }
    degrees=getDegreesForHour(value);
  }
 else   if (type == TYPE_MINUTE) {
    centerRadius=mCircleRadius - mTextInset[MINUTES];
    degrees=getDegreesForMinute(value);
    radius=mSelectorRadius;
  }
 else {
    centerRadius=0;
    degrees=0;
    radius=0;
  }
  final double radians=Math.toRadians(degrees);
  final float xCenter=mXCenter + centerRadius * (float)Math.sin(radians);
  final float yCenter=mYCenter - centerRadius * (float)Math.cos(radians);
  bounds.set((int)(xCenter - radius),(int)(yCenter - radius),(int)(xCenter + radius),(int)(yCenter + radius));
}
