{
  final int innerBound;
  final int outerBound;
  if (mIs24HourMode && mShowHours) {
    innerBound=mMinDistForInnerNumber;
    outerBound=mMaxDistForOuterNumber;
  }
 else {
    final int index=mShowHours ? HOURS : MINUTES;
    final int center=mCircleRadius - mTextInset[index];
    innerBound=center - mSelectorRadius;
    outerBound=center + mSelectorRadius;
  }
  final double dX=x - mXCenter;
  final double dY=y - mYCenter;
  final double distFromCenter=Math.sqrt(dX * dX + dY * dY);
  if (distFromCenter < innerBound || constrainOutside && distFromCenter > outerBound) {
    return -1;
  }
  final int degrees=(int)(Math.toDegrees(Math.atan2(dY,dX) + Math.PI / 2) + 0.5);
  if (degrees < 0) {
    return degrees + 360;
  }
 else {
    return degrees;
  }
}
