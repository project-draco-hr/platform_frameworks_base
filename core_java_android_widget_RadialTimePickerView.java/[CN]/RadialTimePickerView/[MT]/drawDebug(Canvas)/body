{
  final float outerRadius=mCircleRadius * mNumbersRadiusMultiplier[HOURS];
  canvas.drawCircle(mXCenter,mYCenter,outerRadius,mPaintDebug);
  final float innerRadius=mCircleRadius * mNumbersRadiusMultiplier[HOURS_INNER];
  canvas.drawCircle(mXCenter,mYCenter,innerRadius,mPaintDebug);
  canvas.drawCircle(mXCenter,mYCenter,mCircleRadius,mPaintDebug);
  float left=mXCenter - outerRadius;
  float top=mYCenter - outerRadius;
  float right=mXCenter + outerRadius;
  float bottom=mYCenter + outerRadius;
  canvas.drawRect(left,top,right,bottom,mPaintDebug);
  left=mXCenter - mCircleRadius;
  top=mYCenter - mCircleRadius;
  right=mXCenter + mCircleRadius;
  bottom=mYCenter + mCircleRadius;
  canvas.drawRect(left,top,right,bottom,mPaintDebug);
  canvas.drawRect(0,0,getWidth(),getHeight(),mPaintDebug);
  final String selected=String.format("%02d:%02d",getCurrentHour(),getCurrentMinute());
  ViewGroup.LayoutParams lp=new ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,ViewGroup.LayoutParams.WRAP_CONTENT);
  TextView tv=new TextView(getContext());
  tv.setLayoutParams(lp);
  tv.setText(selected);
  tv.measure(MeasureSpec.UNSPECIFIED,MeasureSpec.UNSPECIFIED);
  Paint paint=tv.getPaint();
  paint.setColor(DEBUG_TEXT_COLOR);
  final int width=tv.getMeasuredWidth();
  float height=paint.descent() - paint.ascent();
  float x=mXCenter - width / 2;
  float y=mYCenter + 1.5f * height;
  canvas.drawText(selected,x,y,paint);
}
