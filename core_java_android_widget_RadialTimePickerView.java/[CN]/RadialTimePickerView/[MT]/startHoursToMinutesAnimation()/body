{
  if (mHoursToMinutesAnims.size() == 0) {
    mHoursToMinutesAnims.add(getRadiusDisappearAnimator(this,"animationRadiusMultiplierHours",mInvalidateUpdateListener,mTransitionMidRadiusMultiplier,mTransitionEndRadiusMultiplier));
    mHoursToMinutesAnims.add(getFadeOutAnimator(mPaint[HOURS],ALPHA_OPAQUE,ALPHA_TRANSPARENT,mInvalidateUpdateListener));
    mHoursToMinutesAnims.add(getFadeOutAnimator(mPaintSelector[HOURS][SELECTOR_CIRCLE],ALPHA_SELECTOR,ALPHA_TRANSPARENT,mInvalidateUpdateListener));
    mHoursToMinutesAnims.add(getFadeOutAnimator(mPaintSelector[HOURS][SELECTOR_DOT],ALPHA_OPAQUE,ALPHA_TRANSPARENT,mInvalidateUpdateListener));
    mHoursToMinutesAnims.add(getFadeOutAnimator(mPaintSelector[HOURS][SELECTOR_LINE],ALPHA_SELECTOR,ALPHA_TRANSPARENT,mInvalidateUpdateListener));
    mHoursToMinutesAnims.add(getRadiusReappearAnimator(this,"animationRadiusMultiplierMinutes",mInvalidateUpdateListener,mTransitionMidRadiusMultiplier,mTransitionEndRadiusMultiplier));
    mHoursToMinutesAnims.add(getFadeInAnimator(mPaint[MINUTES],ALPHA_TRANSPARENT,ALPHA_OPAQUE,mInvalidateUpdateListener));
    mHoursToMinutesAnims.add(getFadeInAnimator(mPaintSelector[MINUTES][SELECTOR_CIRCLE],ALPHA_TRANSPARENT,ALPHA_SELECTOR,mInvalidateUpdateListener));
    mHoursToMinutesAnims.add(getFadeInAnimator(mPaintSelector[MINUTES][SELECTOR_DOT],ALPHA_TRANSPARENT,ALPHA_OPAQUE,mInvalidateUpdateListener));
    mHoursToMinutesAnims.add(getFadeInAnimator(mPaintSelector[MINUTES][SELECTOR_LINE],ALPHA_TRANSPARENT,ALPHA_SELECTOR,mInvalidateUpdateListener));
  }
  if (mTransition != null && mTransition.isRunning()) {
    mTransition.end();
  }
  mTransition=new AnimatorSet();
  mTransition.playTogether(mHoursToMinutesAnims);
  mTransition.start();
}
