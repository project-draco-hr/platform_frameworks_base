{
  super.inflate(r,parser,attrs);
  int type;
  final int innerDepth=parser.getDepth() + 1;
  int depth;
  while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && ((depth=parser.getDepth()) >= innerDepth || type != XmlPullParser.END_TAG)) {
    if (type != XmlPullParser.START_TAG) {
      continue;
    }
    if (depth > innerDepth || !parser.getName().equals("item")) {
      continue;
    }
    TypedArray a=r.obtainAttributes(attrs,com.android.internal.R.styleable.MipmapDrawableItem);
    int drawableRes=a.getResourceId(com.android.internal.R.styleable.MipmapDrawableItem_drawable,0);
    a.recycle();
    Drawable dr;
    if (drawableRes != 0) {
      dr=r.getDrawable(drawableRes);
    }
 else {
      while ((type=parser.next()) == XmlPullParser.TEXT) {
      }
      if (type != XmlPullParser.START_TAG) {
        throw new XmlPullParserException(parser.getPositionDescription() + ": <item> tag requires a 'drawable' attribute or " + "child tag defining a drawable");
      }
      dr=Drawable.createFromXmlInner(r,parser,attrs);
    }
    mMipmapContainerState.addDrawable(dr);
  }
  onDrawableAdded();
}
