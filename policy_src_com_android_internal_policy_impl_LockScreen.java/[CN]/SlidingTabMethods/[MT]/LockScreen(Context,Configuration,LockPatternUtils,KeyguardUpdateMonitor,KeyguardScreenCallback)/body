{
  super(context);
  mLockPatternUtils=lockPatternUtils;
  mUpdateMonitor=updateMonitor;
  mCallback=callback;
  mEnableMenuKeyInLockScreen=shouldEnableMenuKey();
  mCreationOrientation=configuration.orientation;
  mKeyboardHidden=configuration.hardKeyboardHidden;
  if (LockPatternKeyguardView.DEBUG_CONFIGURATION) {
    Log.v(TAG,"***** CREATING LOCK SCREEN",new RuntimeException());
    Log.v(TAG,"Cur orient=" + mCreationOrientation + " res orient="+ context.getResources().getConfiguration().orientation);
  }
  final LayoutInflater inflater=LayoutInflater.from(context);
  if (DBG)   Log.v(TAG,"Creation orientation = " + mCreationOrientation);
  if (mCreationOrientation != Configuration.ORIENTATION_LANDSCAPE) {
    inflater.inflate(R.layout.keyguard_screen_tab_unlock,this,true);
  }
 else {
    inflater.inflate(R.layout.keyguard_screen_tab_unlock_land,this,true);
  }
  mStatusView=new StatusView(this,mUpdateMonitor,mLockPatternUtils);
  mScreenLocked=(TextView)findViewById(R.id.screenLocked);
  mEmergencyCallText=(TextView)findViewById(R.id.emergencyCallText);
  mEmergencyCallButton=(Button)findViewById(R.id.emergencyCallButton);
  mEmergencyCallButton.setText(R.string.lockscreen_emergency_call);
  mLockPatternUtils.updateEmergencyCallButtonState(mEmergencyCallButton);
  mEmergencyCallButton.setOnClickListener(new View.OnClickListener(){
    public void onClick(    View v){
      mCallback.takeEmergencyCallAction();
    }
  }
);
  setFocusable(true);
  setFocusableInTouchMode(true);
  setDescendantFocusability(ViewGroup.FOCUS_BLOCK_DESCENDANTS);
  mUpdateMonitor.registerInfoCallback(this);
  mUpdateMonitor.registerSimStateCallback(this);
  mAudioManager=(AudioManager)getContext().getSystemService(Context.AUDIO_SERVICE);
  mSilentMode=isSilentMode();
  View unlockWidget=findViewById(R.id.unlock_widget);
  if (unlockWidget instanceof SlidingTab) {
    mSlidingTab=(SlidingTab)unlockWidget;
    mSlidingTab.setHoldAfterTrigger(true,false);
    mSlidingTab.setLeftHintText(R.string.lockscreen_unlock_label);
    mSlidingTab.setLeftTabResources(R.drawable.ic_jog_dial_unlock,R.drawable.jog_tab_target_green,R.drawable.jog_tab_bar_left_unlock,R.drawable.jog_tab_left_unlock);
    mSlidingTabMethods=new SlidingTabMethods();
    mSlidingTab.setOnTriggerListener(mSlidingTabMethods);
    mSlidingTabMethods.updateRightTabResources();
  }
 else   if (unlockWidget instanceof WaveView) {
    mEnergyWave=(WaveView)unlockWidget;
    mWaveViewMethods=new WaveViewMethods();
    mEnergyWave.setOnTriggerListener(mWaveViewMethods);
  }
 else   if (unlockWidget instanceof MultiWaveView) {
    mMultiWaveView=(MultiWaveView)unlockWidget;
    mMultiWaveViewMethods=new MultiWaveViewMethods();
    mMultiWaveViewMethods.updateResources();
    mMultiWaveView.setOnTriggerListener(mMultiWaveViewMethods);
  }
 else {
    throw new IllegalStateException("Unrecognized unlock widget: " + unlockWidget);
  }
  resetStatusInfo(updateMonitor);
}
