{
  final int N=p.readInt();
  mList=new ArrayList<T>(N);
  if (DEBUG)   Log.d(TAG,"Retrieving " + N + " items");
  if (N <= 0) {
    return;
  }
  Parcelable.Creator<T> creator=p.readParcelableCreator(loader);
  int i=0;
  while (i < N) {
    if (p.readInt() == 0) {
      break;
    }
    mList.add(p.readCreator(creator,loader));
    if (DEBUG)     Log.d(TAG,"Read inline #" + i + ": "+ mList.get(mList.size() - 1));
    i++;
  }
  if (i >= N) {
    return;
  }
  final IBinder retriever=p.readStrongBinder();
  while (i < N) {
    if (DEBUG)     Log.d(TAG,"Reading more @" + i + " of "+ N+ ": retriever="+ retriever);
    Parcel data=Parcel.obtain();
    Parcel reply=Parcel.obtain();
    data.writeInt(i);
    try {
      retriever.transact(IBinder.FIRST_CALL_TRANSACTION,data,reply,0);
    }
 catch (    RemoteException e) {
      Log.w(TAG,"Failure retrieving array; only received " + i + " of "+ N,e);
      return;
    }
    while (i < N && reply.readInt() != 0) {
      mList.add(reply.readCreator(creator,loader));
      if (DEBUG)       Log.d(TAG,"Read extra #" + i + ": "+ mList.get(mList.size() - 1));
      i++;
    }
    reply.recycle();
    data.recycle();
  }
}
