{
  while (true) {
    if (mCancelled) {
      mContext=null;
synchronized (mLoadThread) {
        try {
          mLoadThread.wait();
        }
 catch (        InterruptedException ie) {
          ie.printStackTrace();
        }
      }
    }
 else {
      RecentsConfiguration config=RecentsConfiguration.getInstance();
      SystemServicesProxy ssp=mSystemServicesProxy;
      if (ssp == null)       continue;
      final Task t=mLoadQueue.nextTask();
      if (t != null) {
        Drawable cachedIcon=mApplicationIconCache.get(t.key);
        Bitmap cachedThumbnail=mThumbnailCache.get(t.key);
        if (cachedIcon == null) {
          cachedIcon=getTaskDescriptionIcon(t.key,t.icon,t.iconFilename,ssp,mContext.getResources());
          if (cachedIcon == null) {
            ActivityInfo info=ssp.getActivityInfo(t.key.baseIntent.getComponent(),t.key.userId);
            if (info != null) {
              if (DEBUG)               Log.d(TAG,"Loading icon: " + t.key);
              cachedIcon=ssp.getActivityIcon(info,t.key.userId);
            }
          }
          if (cachedIcon == null) {
            cachedIcon=mDefaultApplicationIcon;
          }
          mApplicationIconCache.put(t.key,cachedIcon);
        }
        if (cachedThumbnail == null) {
          if (config.svelteLevel < RecentsConfiguration.SVELTE_DISABLE_LOADING) {
            if (DEBUG)             Log.d(TAG,"Loading thumbnail: " + t.key);
            cachedThumbnail=ssp.getTaskThumbnail(t.key.id);
          }
          if (cachedThumbnail == null) {
            cachedThumbnail=mDefaultThumbnail;
          }
          if (config.svelteLevel < RecentsConfiguration.SVELTE_LIMIT_CACHE) {
            mThumbnailCache.put(t.key,cachedThumbnail);
          }
        }
        if (!mCancelled) {
          final Drawable newIcon=cachedIcon;
          final Bitmap newThumbnail=cachedThumbnail == mDefaultThumbnail ? null : cachedThumbnail;
          mMainThreadHandler.post(new Runnable(){
            @Override public void run(){
              t.notifyTaskDataLoaded(newThumbnail,newIcon);
            }
          }
);
        }
      }
      if (!mCancelled && mLoadQueue.isEmpty()) {
synchronized (mLoadQueue) {
          try {
            mWaitingOnLoadQueue=true;
            mLoadQueue.wait();
            mWaitingOnLoadQueue=false;
          }
 catch (          InterruptedException ie) {
            ie.printStackTrace();
          }
        }
      }
    }
  }
}
