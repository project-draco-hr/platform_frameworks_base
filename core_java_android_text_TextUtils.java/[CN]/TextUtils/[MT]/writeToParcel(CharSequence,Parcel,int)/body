{
  if (cs instanceof Spanned) {
    p.writeInt(0);
    p.writeString(cs.toString());
    Spanned sp=(Spanned)cs;
    Object[] os=sp.getSpans(0,cs.length(),Object.class);
    for (int i=0; i < os.length; i++) {
      Object o=os[i];
      Object prop=os[i];
      if (prop instanceof CharacterStyle) {
        prop=((CharacterStyle)prop).getUnderlying();
      }
      if (prop instanceof AlignmentSpan) {
        p.writeInt(ALIGNMENT_SPAN);
        p.writeString(((AlignmentSpan)prop).getAlignment().name());
        writeWhere(p,sp,o);
      }
      if (prop instanceof ForegroundColorSpan) {
        p.writeInt(FOREGROUND_COLOR_SPAN);
        p.writeInt(((ForegroundColorSpan)prop).getForegroundColor());
        writeWhere(p,sp,o);
      }
      if (prop instanceof RelativeSizeSpan) {
        p.writeInt(RELATIVE_SIZE_SPAN);
        p.writeFloat(((RelativeSizeSpan)prop).getSizeChange());
        writeWhere(p,sp,o);
      }
      if (prop instanceof ScaleXSpan) {
        p.writeInt(SCALE_X_SPAN);
        p.writeFloat(((ScaleXSpan)prop).getScaleX());
        writeWhere(p,sp,o);
      }
      if (prop instanceof StrikethroughSpan) {
        p.writeInt(STRIKETHROUGH_SPAN);
        writeWhere(p,sp,o);
      }
      if (prop instanceof UnderlineSpan) {
        p.writeInt(UNDERLINE_SPAN);
        writeWhere(p,sp,o);
      }
      if (prop instanceof StyleSpan) {
        p.writeInt(STYLE_SPAN);
        p.writeInt(((StyleSpan)prop).getStyle());
        writeWhere(p,sp,o);
      }
      if (prop instanceof LeadingMarginSpan) {
        if (prop instanceof BulletSpan) {
          p.writeInt(BULLET_SPAN);
          writeWhere(p,sp,o);
        }
 else         if (prop instanceof QuoteSpan) {
          p.writeInt(QUOTE_SPAN);
          p.writeInt(((QuoteSpan)prop).getColor());
          writeWhere(p,sp,o);
        }
 else {
          p.writeInt(LEADING_MARGIN_SPAN);
          p.writeInt(((LeadingMarginSpan)prop).getLeadingMargin(true));
          p.writeInt(((LeadingMarginSpan)prop).getLeadingMargin(false));
          writeWhere(p,sp,o);
        }
      }
      if (prop instanceof URLSpan) {
        p.writeInt(URL_SPAN);
        p.writeString(((URLSpan)prop).getURL());
        writeWhere(p,sp,o);
      }
      if (prop instanceof BackgroundColorSpan) {
        p.writeInt(BACKGROUND_COLOR_SPAN);
        p.writeInt(((BackgroundColorSpan)prop).getBackgroundColor());
        writeWhere(p,sp,o);
      }
      if (prop instanceof TypefaceSpan) {
        p.writeInt(TYPEFACE_SPAN);
        p.writeString(((TypefaceSpan)prop).getFamily());
        writeWhere(p,sp,o);
      }
      if (prop instanceof SuperscriptSpan) {
        p.writeInt(SUPERSCRIPT_SPAN);
        writeWhere(p,sp,o);
      }
      if (prop instanceof SubscriptSpan) {
        p.writeInt(SUBSCRIPT_SPAN);
        writeWhere(p,sp,o);
      }
      if (prop instanceof AbsoluteSizeSpan) {
        p.writeInt(ABSOLUTE_SIZE_SPAN);
        p.writeInt(((AbsoluteSizeSpan)prop).getSize());
        writeWhere(p,sp,o);
      }
      if (prop instanceof TextAppearanceSpan) {
        TextAppearanceSpan tas=(TextAppearanceSpan)prop;
        p.writeInt(TEXT_APPEARANCE_SPAN);
        String tf=tas.getFamily();
        if (tf != null) {
          p.writeInt(1);
          p.writeString(tf);
        }
 else {
          p.writeInt(0);
        }
        p.writeInt(tas.getTextStyle());
        p.writeInt(tas.getTextSize());
        ColorStateList csl=tas.getTextColor();
        if (csl == null) {
          p.writeInt(0);
        }
 else {
          p.writeInt(1);
          csl.writeToParcel(p,parcelableFlags);
        }
        csl=tas.getLinkTextColor();
        if (csl == null) {
          p.writeInt(0);
        }
 else {
          p.writeInt(1);
          csl.writeToParcel(p,parcelableFlags);
        }
        writeWhere(p,sp,o);
      }
      if (prop instanceof Annotation) {
        p.writeInt(ANNOTATION);
        p.writeString(((Annotation)prop).getKey());
        p.writeString(((Annotation)prop).getValue());
        writeWhere(p,sp,o);
      }
    }
    p.writeInt(0);
  }
 else {
    p.writeInt(1);
    if (cs != null) {
      p.writeString(cs.toString());
    }
 else {
      p.writeString(null);
    }
  }
}
