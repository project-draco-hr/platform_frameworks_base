{
  if (cs instanceof Spanned) {
    p.writeInt(0);
    p.writeString(cs.toString());
    Spanned sp=(Spanned)cs;
    Object[] os=sp.getSpans(0,cs.length(),Object.class);
    for (int i=0; i < os.length; i++) {
      Object o=os[i];
      Object prop=os[i];
      if (prop instanceof CharacterStyle) {
        prop=((CharacterStyle)prop).getUnderlying();
      }
      if (prop instanceof ParcelableSpan) {
        ParcelableSpan ps=(ParcelableSpan)prop;
        int spanTypeId=ps.getSpanTypeId();
        if (spanTypeId < FIRST_SPAN || spanTypeId > LAST_SPAN) {
          Log.e(TAG,"external class \"" + ps.getClass().getSimpleName() + "\" is attempting to use the frameworks-only ParcelableSpan"+ " interface");
        }
 else {
          p.writeInt(spanTypeId);
          ps.writeToParcel(p,parcelableFlags);
          writeWhere(p,sp,o);
        }
      }
    }
    p.writeInt(0);
  }
 else {
    p.writeInt(1);
    if (cs != null) {
      p.writeString(cs.toString());
    }
 else {
      p.writeString(null);
    }
  }
}
