{
  try {
    mNwService.setInterfaceIpv6PrivacyExtensions(mInterfaceName,true);
    mNwService.enableIpv6(mInterfaceName);
  }
 catch (  RemoteException re) {
    Log.e(mTag,"Unable to change interface settings: " + re);
  }
catch (  IllegalStateException ie) {
    Log.e(mTag,"Unable to change interface settings: " + ie);
  }
  if (mConfiguration.mUsingIpReachabilityMonitor) {
    mIpReachabilityMonitor=new IpReachabilityMonitor(mContext,mInterfaceName,new IpReachabilityMonitor.Callback(){
      @Override public void notifyLost(      InetAddress ip,      String logMsg){
        mCallback.onReachabilityLost(logMsg);
      }
    }
);
  }
  if (mConfiguration.mStaticIpConfig != null) {
    if (applyStaticIpConfig()) {
      handleIPv4Success(new DhcpResults(mConfiguration.mStaticIpConfig));
    }
 else {
      if (VDBG) {
        Log.d(mTag,"onProvisioningFailure()");
      }
      mCallback.onProvisioningFailure(getLinkProperties());
      transitionTo(mStoppingState);
    }
  }
 else {
    makeDhcpStateMachine();
    mDhcpStateMachine.registerForPreDhcpNotification();
    mDhcpStateMachine.sendMessage(DhcpClient.CMD_START_DHCP);
  }
}
