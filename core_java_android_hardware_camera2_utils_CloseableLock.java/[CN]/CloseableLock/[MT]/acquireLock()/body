{
  int ownedLocks;
  try {
    mLock.lock();
    if (mClosed) {
      log("acquire lock early aborted (already closed)");
      return null;
    }
    ownedLocks=mLockCount.get();
    if (mExclusive && ownedLocks > 0) {
      throw new IllegalStateException("Cannot acquire shared lock while holding exclusive lock");
    }
    while (mExclusive) {
      mCondition.awaitUninterruptibly();
      if (mClosed) {
        log("acquire lock unblocked aborted (already closed)");
        return null;
      }
    }
    mSharedLocks++;
    ownedLocks=mLockCount.get() + 1;
    mLockCount.set(ownedLocks);
  }
  finally {
    mLock.unlock();
  }
  log("acquired lock (local own count = " + ownedLocks + "");
  return new ScopedLock();
}
