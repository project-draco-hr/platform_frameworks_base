{
  int ownedLocks;
  try {
    mLock.lock();
    if (mClosed) {
      if (VERBOSE) {
        log("acquire exclusive lock early aborted (already closed)");
      }
      return null;
    }
    ownedLocks=mLockCount.get();
    if (!mExclusive && ownedLocks > 0) {
      throw new IllegalStateException("Cannot acquire exclusive lock while holding shared lock");
    }
    while (ownedLocks == 0 && (mExclusive || mSharedLocks > 0)) {
      mCondition.awaitUninterruptibly();
      if (mClosed) {
        if (VERBOSE) {
          log("acquire exclusive lock unblocked aborted (already closed)");
        }
        return null;
      }
    }
    mExclusive=true;
    ownedLocks=mLockCount.get() + 1;
    mLockCount.set(ownedLocks);
  }
  finally {
    mLock.unlock();
  }
  if (VERBOSE) {
    log("acquired exclusive lock (local own count = " + ownedLocks + ")");
  }
  return new ScopedLock();
}
