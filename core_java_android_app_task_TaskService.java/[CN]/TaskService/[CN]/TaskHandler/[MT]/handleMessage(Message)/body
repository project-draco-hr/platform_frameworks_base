{
  final TaskParams params=(TaskParams)msg.obj;
switch (msg.what) {
case MSG_EXECUTE_TASK:
    try {
      TaskService.this.onStartTask(params);
    }
 catch (    Exception e) {
      Log.e(TAG,"Error while executing task: " + params.getTaskId());
      throw new RuntimeException(e);
    }
 finally {
      maybeAckMessageReceived(params,MSG_EXECUTE_TASK);
    }
  break;
case MSG_STOP_TASK:
try {
  TaskService.this.onStopTask(params);
}
 catch (Exception e) {
  Log.e(TAG,"Application unable to handle onStopTask.",e);
  throw new RuntimeException(e);
}
 finally {
  maybeAckMessageReceived(params,MSG_STOP_TASK);
}
break;
case MSG_TASK_FINISHED:
final boolean needsReschedule=(msg.arg2 == 1);
ITaskCallback callback=params.getCallback();
if (callback != null) {
try {
callback.taskFinished(params.getTaskId(),needsReschedule);
}
 catch (RemoteException e) {
Log.e(TAG,"Error reporting task finish to system: binder has gone" + "away.");
}
}
 else {
Log.e(TAG,"finishTask() called for a nonexistent task id.");
}
break;
default :
Log.e(TAG,"Unrecognised message received.");
break;
}
}
