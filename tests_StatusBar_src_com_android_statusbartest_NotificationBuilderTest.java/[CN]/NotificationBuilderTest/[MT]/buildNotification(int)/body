{
  Notification.Builder b=new Notification.Builder(this);
switch (getRadioChecked(R.id.group_when)) {
case R.id.when_midnight:
{
      GregorianCalendar c=new GregorianCalendar();
      c.set(GregorianCalendar.HOUR_OF_DAY,0);
      c.set(GregorianCalendar.MINUTE,0);
      c.set(GregorianCalendar.SECOND,0);
      b.setWhen(c.getTimeInMillis());
      break;
    }
case R.id.when_now:
  b.setWhen(System.currentTimeMillis());
break;
case R.id.when_now_plus_1h:
break;
case R.id.when_tomorrow:
break;
}
switch (getRadioChecked(R.id.group_icon)) {
case R.id.icon_im:
b.setSmallIcon(R.drawable.icon1);
break;
case R.id.icon_alert:
b.setSmallIcon(R.drawable.icon2);
break;
case R.id.icon_surprise:
b.setSmallIcon(R.drawable.emo_im_kissing);
break;
}
final CharSequence title=getRadioTag(R.id.group_title);
if (!TextUtils.isEmpty(title)) {
b.setContentTitle(title);
}
final CharSequence text=getRadioTag(R.id.group_text);
if (!TextUtils.isEmpty(text)) {
if (getRadioChecked(R.id.group_text) == R.id.text_emoji) {
b.setContentText(subst(text,'_',"\ud83c\udf35"));
}
 else {
b.setContentText(text);
}
}
final CharSequence info=getRadioTag(R.id.group_info);
if (!TextUtils.isEmpty(info)) {
b.setContentInfo(info);
}
b.setNumber(getRadioInt(R.id.group_number,0));
switch (getRadioChecked(R.id.group_intent)) {
case R.id.intent_none:
break;
case R.id.intent_alert:
b.setContentIntent(makeContentIntent(id));
break;
}
switch (getRadioChecked(R.id.group_delete)) {
case R.id.delete_none:
break;
case R.id.delete_alert:
b.setDeleteIntent(makeDeleteIntent(id));
break;
}
switch (getRadioChecked(R.id.group_ticker)) {
case R.id.ticker_none:
break;
case R.id.ticker_short:
case R.id.ticker_wrap:
case R.id.ticker_haiku:
b.setTicker(getRadioTag(R.id.group_ticker));
break;
case R.id.ticker_emoji:
b.setTicker(subst(getRadioTag(R.id.group_ticker),'_',"\ud83c\udf35"));
break;
case R.id.ticker_custom:
break;
}
switch (getRadioChecked(R.id.group_large_icon)) {
case R.id.large_icon_none:
break;
case R.id.large_icon_pineapple:
b.setLargeIcon(loadBitmap(R.drawable.pineapple));
break;
case R.id.large_icon_pineapple2:
b.setLargeIcon(loadBitmap(R.drawable.pineapple2));
break;
case R.id.large_icon_small:
b.setLargeIcon(loadBitmap(R.drawable.icon2));
break;
}
switch (getRadioChecked(R.id.group_vibrate)) {
case R.id.vibrate_none:
break;
case R.id.vibrate_short:
b.setVibrate(new long[]{0,200});
break;
case R.id.vibrate_medium:
b.setVibrate(new long[]{0,500});
break;
case R.id.vibrate_long:
b.setVibrate(new long[]{0,1000});
break;
case R.id.vibrate_pattern:
b.setVibrate(new long[]{0,250,250,250,250,250,250,250});
break;
}
final int color=getRadioInt(R.id.group_lights_color,0xff0000);
int onMs;
int offMs;
switch (getRadioChecked(R.id.group_lights_blink)) {
case R.id.lights_slow:
onMs=1300;
offMs=1300;
break;
case R.id.lights_fast:
onMs=300;
offMs=300;
break;
case R.id.lights_on:
onMs=1;
offMs=0;
break;
case R.id.lights_off:
default :
onMs=0;
offMs=0;
break;
}
if (onMs != 0 && offMs != 0) {
b.setLights(color,onMs,offMs);
}
b.setOngoing(getChecked(R.id.flag_ongoing));
b.setOnlyAlertOnce(getChecked(R.id.flag_once));
b.setAutoCancel(getChecked(R.id.flag_auto_cancel));
int defaults=0;
if (getChecked(R.id.default_sound)) {
defaults|=Notification.DEFAULT_SOUND;
}
if (getChecked(R.id.default_vibrate)) {
defaults|=Notification.DEFAULT_VIBRATE;
}
if (getChecked(R.id.default_lights)) {
defaults|=Notification.DEFAULT_LIGHTS;
}
b.setDefaults(defaults);
return b.getNotification();
}
