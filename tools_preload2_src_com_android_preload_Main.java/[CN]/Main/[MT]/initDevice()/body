{
  DeviceUtils.init(DEFAULT_TIMEOUT_MILLIS);
  IDevice devices[]=DeviceUtils.findDevices(DEFAULT_TIMEOUT_MILLIS);
  if (devices == null || devices.length == 0) {
    throw new RuntimeException("Could not find any devices...");
  }
  getUI().hideWaitDialog();
  DeviceWrapper deviceWrappers[]=new DeviceWrapper[devices.length];
  for (int i=0; i < devices.length; i++) {
    deviceWrappers[i]=new DeviceWrapper(devices[i]);
  }
  DeviceWrapper ret=Main.getUI().showChoiceDialog("Choose a device","Choose device",deviceWrappers);
  if (ret != null) {
    setDevice(ret.device);
  }
 else {
    System.exit(0);
  }
  boolean prepare=Main.getUI().showConfirmDialog("Prepare device?","Do you want to prepare the device? This is highly recommended.");
  if (prepare) {
    String buildType=DeviceUtils.getBuildType(device);
    if (buildType == null || (!buildType.equals("userdebug") && !buildType.equals("eng"))) {
      Main.getUI().showMessageDialog("Need a userdebug or eng build! (Found " + buildType + ")");
      return;
    }
    if (DeviceUtils.hasPrebuiltBootImage(device)) {
      Main.getUI().showMessageDialog("Cannot prepare a device with pre-optimized boot " + "image!");
      return;
    }
    if (ENABLE_TRACING) {
      DeviceUtils.enableTracing(device);
    }
    Main.getUI().showMessageDialog("The device will reboot. This will potentially take a " + "long time. Please be patient.");
    if (!DeviceUtils.removePreloaded(device,15 * 60)) {
      Main.getUI().showMessageDialog("Removing preloaded-classes failed unexpectedly!");
    }
  }
}
