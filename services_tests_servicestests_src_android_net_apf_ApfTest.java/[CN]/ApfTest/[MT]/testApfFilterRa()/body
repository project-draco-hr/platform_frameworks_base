{
  MockIpManagerCallback ipManagerCallback=new MockIpManagerCallback();
  TestApfFilter apfFilter=new TestApfFilter(ipManagerCallback,true);
  byte[] program=ipManagerCallback.getApfProgram();
  ByteBuffer basePacket=ByteBuffer.wrap(new byte[ICMP6_RA_OPTION_OFFSET]);
  basePacket.putShort(ETH_ETHERTYPE_OFFSET,(short)ETH_P_IPV6);
  basePacket.put(IPV6_NEXT_HEADER_OFFSET,(byte)IPPROTO_ICMPV6);
  basePacket.put(ICMP6_TYPE_OFFSET,(byte)ICMP6_ROUTER_ADVERTISEMENT);
  basePacket.putShort(ICMP6_RA_ROUTER_LIFETIME_OFFSET,(short)1000);
  basePacket.position(IPV6_DEST_ADDR_OFFSET);
  basePacket.put(IPV6_ALL_NODES_ADDRESS);
  assertPass(program,basePacket.array(),0);
  testRaLifetime(apfFilter,ipManagerCallback,basePacket,1000);
  ByteBuffer prefixOptionPacket=ByteBuffer.wrap(new byte[ICMP6_RA_OPTION_OFFSET + ICMP6_PREFIX_OPTION_LEN]);
  basePacket.clear();
  prefixOptionPacket.put(basePacket);
  prefixOptionPacket.put((byte)ICMP6_PREFIX_OPTION_TYPE);
  prefixOptionPacket.put((byte)(ICMP6_PREFIX_OPTION_LEN / 8));
  prefixOptionPacket.putInt(ICMP6_RA_OPTION_OFFSET + ICMP6_PREFIX_OPTION_PREFERRED_LIFETIME_OFFSET,100);
  prefixOptionPacket.putInt(ICMP6_RA_OPTION_OFFSET + ICMP6_PREFIX_OPTION_VALID_LIFETIME_OFFSET,200);
  testRaLifetime(apfFilter,ipManagerCallback,prefixOptionPacket,100);
  ByteBuffer rdnssOptionPacket=ByteBuffer.wrap(new byte[ICMP6_RA_OPTION_OFFSET + ICMP6_4_BYTE_OPTION_LEN]);
  basePacket.clear();
  rdnssOptionPacket.put(basePacket);
  rdnssOptionPacket.put((byte)ICMP6_RDNSS_OPTION_TYPE);
  rdnssOptionPacket.put((byte)(ICMP6_4_BYTE_OPTION_LEN / 8));
  rdnssOptionPacket.putInt(ICMP6_RA_OPTION_OFFSET + ICMP6_4_BYTE_LIFETIME_OFFSET,300);
  testRaLifetime(apfFilter,ipManagerCallback,rdnssOptionPacket,300);
  ByteBuffer routeInfoOptionPacket=ByteBuffer.wrap(new byte[ICMP6_RA_OPTION_OFFSET + ICMP6_4_BYTE_OPTION_LEN]);
  basePacket.clear();
  routeInfoOptionPacket.put(basePacket);
  routeInfoOptionPacket.put((byte)ICMP6_ROUTE_INFO_OPTION_TYPE);
  routeInfoOptionPacket.put((byte)(ICMP6_4_BYTE_OPTION_LEN / 8));
  routeInfoOptionPacket.putInt(ICMP6_RA_OPTION_OFFSET + ICMP6_4_BYTE_LIFETIME_OFFSET,400);
  testRaLifetime(apfFilter,ipManagerCallback,routeInfoOptionPacket,400);
  ByteBuffer dnsslOptionPacket=ByteBuffer.wrap(new byte[ICMP6_RA_OPTION_OFFSET + ICMP6_4_BYTE_OPTION_LEN]);
  basePacket.clear();
  dnsslOptionPacket.put(basePacket);
  dnsslOptionPacket.put((byte)ICMP6_DNSSL_OPTION_TYPE);
  dnsslOptionPacket.put((byte)(ICMP6_4_BYTE_OPTION_LEN / 8));
  dnsslOptionPacket.putInt(ICMP6_RA_OPTION_OFFSET + ICMP6_4_BYTE_LIFETIME_OFFSET,2000);
  testRaLifetime(apfFilter,ipManagerCallback,dnsslOptionPacket,1000);
  verifyRaLifetime(ipManagerCallback,basePacket,1000);
  verifyRaLifetime(ipManagerCallback,prefixOptionPacket,100);
  verifyRaLifetime(ipManagerCallback,rdnssOptionPacket,300);
  verifyRaLifetime(ipManagerCallback,routeInfoOptionPacket,400);
  verifyRaLifetime(ipManagerCallback,dnsslOptionPacket,1000);
  apfFilter.shutdown();
}
