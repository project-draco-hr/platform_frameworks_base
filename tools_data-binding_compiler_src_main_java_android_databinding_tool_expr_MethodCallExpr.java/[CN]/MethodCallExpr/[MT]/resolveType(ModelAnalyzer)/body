{
  if (mGetter == null) {
    List<ModelClass> args=new ArrayList<ModelClass>();
    for (    Expr expr : getArgs()) {
      args.add(expr.getResolvedType());
    }
    Expr target=getTarget();
    boolean isStatic=target instanceof StaticIdentifierExpr;
    ModelMethod method=target.getResolvedType().getMethod(mName,args,isStatic);
    if (method == null) {
      String message="cannot find method '" + mName + "' in class "+ target.getResolvedType().toJavaCode();
      IllegalArgumentException e=new IllegalArgumentException(message);
      L.e(e,"cannot find method %s in class %s",mName,target.getResolvedType().toJavaCode());
      throw e;
    }
    mGetter=new Callable(Type.METHOD,method.getName(),method.getReturnType(args),true,false);
  }
  return mGetter.resolvedType;
}
