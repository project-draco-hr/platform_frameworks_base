{
  super.updateStateFromTypedArray(a);
  final RotateState state=mState;
  state.mChangingConfigurations|=a.getChangingConfigurations();
  state.mThemeAttrs=a.extractThemeAttrs();
  if (a.hasValue(R.styleable.RotateDrawable_pivotX)) {
    final TypedValue tv=a.peekValue(R.styleable.RotateDrawable_pivotX);
    state.mPivotXRel=tv.type == TypedValue.TYPE_FRACTION;
    state.mPivotX=state.mPivotXRel ? tv.getFraction(1.0f,1.0f) : tv.getFloat();
  }
  if (a.hasValue(R.styleable.RotateDrawable_pivotY)) {
    final TypedValue tv=a.peekValue(R.styleable.RotateDrawable_pivotY);
    state.mPivotYRel=tv.type == TypedValue.TYPE_FRACTION;
    state.mPivotY=state.mPivotYRel ? tv.getFraction(1.0f,1.0f) : tv.getFloat();
  }
  state.mFromDegrees=a.getFloat(R.styleable.RotateDrawable_fromDegrees,state.mFromDegrees);
  state.mToDegrees=a.getFloat(R.styleable.RotateDrawable_toDegrees,state.mToDegrees);
  state.mCurrentDegrees=state.mFromDegrees;
  final Drawable dr=a.getDrawable(R.styleable.RotateDrawable_drawable);
  if (dr != null) {
    setDrawable(dr);
  }
}
