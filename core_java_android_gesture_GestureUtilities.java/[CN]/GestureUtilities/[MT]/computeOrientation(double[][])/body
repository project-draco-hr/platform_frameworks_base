{
  double[] targetVector=new double[2];
  if (covarianceMatrix[0][1] == 0 || covarianceMatrix[1][0] == 0) {
    targetVector[0]=1;
    targetVector[1]=0;
  }
  double a=-covarianceMatrix[0][0] - covarianceMatrix[1][1];
  double b=covarianceMatrix[0][0] * covarianceMatrix[1][1] - covarianceMatrix[0][1] * covarianceMatrix[1][0];
  double value=a / 2;
  double rightside=Math.sqrt(Math.pow(value,2) - b);
  double lambda1=-value + rightside;
  double lambda2=-value - rightside;
  if (lambda1 == lambda2) {
    targetVector[0]=0;
    targetVector[1]=0;
  }
 else {
    double lambda=lambda1 > lambda2 ? lambda1 : lambda2;
    targetVector[0]=1;
    targetVector[1]=(lambda - covarianceMatrix[0][0]) / covarianceMatrix[0][1];
  }
  return targetVector;
}
