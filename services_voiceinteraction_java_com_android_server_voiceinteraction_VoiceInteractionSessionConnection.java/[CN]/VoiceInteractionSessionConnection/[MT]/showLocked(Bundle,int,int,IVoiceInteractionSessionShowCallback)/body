{
  if (mBound) {
    if (!mFullyBound) {
      mFullyBound=mContext.bindServiceAsUser(mBindIntent,mFullConnection,Context.BIND_AUTO_CREATE | Context.BIND_TREAT_LIKE_ACTIVITY | Context.BIND_FOREGROUND_SERVICE,new UserHandle(mUser));
    }
    mShown=true;
    boolean isScreenCaptureAllowed=true;
    try {
      isScreenCaptureAllowed=mAm.isScreenCaptureAllowedOnCurrentActivity();
    }
 catch (    RemoteException e) {
    }
    boolean structureEnabled=Settings.Secure.getIntForUser(mContext.getContentResolver(),Settings.Secure.ASSIST_STRUCTURE_ENABLED,1,mUser) != 0 && isScreenCaptureAllowed && (disabledContext & VoiceInteractionSession.SHOW_WITH_ASSIST) == 0;
    boolean screenshotEnabled=Settings.Secure.getIntForUser(mContext.getContentResolver(),Settings.Secure.ASSIST_SCREENSHOT_ENABLED,1,mUser) != 0 && isScreenCaptureAllowed && (disabledContext & VoiceInteractionSession.SHOW_WITH_SCREENSHOT) == 0;
    mShowArgs=args;
    mShowFlags=flags;
    mHaveAssistData=false;
    boolean needDisclosure=false;
    if ((flags & VoiceInteractionSession.SHOW_WITH_ASSIST) != 0) {
      if (mAppOps.noteOpNoThrow(AppOpsManager.OP_ASSIST_STRUCTURE,mCallingUid,mSessionComponentName.getPackageName()) == AppOpsManager.MODE_ALLOWED && structureEnabled) {
        try {
          needDisclosure=true;
          mAm.requestAssistContextExtras(ActivityManager.ASSIST_CONTEXT_FULL,mAssistReceiver);
        }
 catch (        RemoteException e) {
        }
      }
 else {
        mHaveAssistData=true;
        mAssistData=null;
      }
    }
 else {
      mAssistData=null;
    }
    mHaveScreenshot=false;
    if ((flags & VoiceInteractionSession.SHOW_WITH_SCREENSHOT) != 0) {
      if (mAppOps.noteOpNoThrow(AppOpsManager.OP_ASSIST_SCREENSHOT,mCallingUid,mSessionComponentName.getPackageName()) == AppOpsManager.MODE_ALLOWED && screenshotEnabled) {
        try {
          needDisclosure=true;
          mIWindowManager.requestAssistScreenshot(mScreenshotReceiver);
        }
 catch (        RemoteException e) {
        }
      }
 else {
        mHaveScreenshot=true;
        mScreenshot=null;
      }
    }
 else {
      mScreenshot=null;
    }
    if (needDisclosure) {
      mHandler.post(mShowAssistDisclosureRunnable);
    }
    if (mSession != null) {
      try {
        mSession.show(mShowArgs,mShowFlags,showCallback);
        mShowArgs=null;
        mShowFlags=0;
      }
 catch (      RemoteException e) {
      }
      deliverSessionDataLocked();
    }
 else     if (showCallback != null) {
      mPendingShowCallbacks.add(showCallback);
    }
    return true;
  }
  if (showCallback != null) {
    try {
      showCallback.onFailed();
    }
 catch (    RemoteException e) {
    }
  }
  return false;
}
