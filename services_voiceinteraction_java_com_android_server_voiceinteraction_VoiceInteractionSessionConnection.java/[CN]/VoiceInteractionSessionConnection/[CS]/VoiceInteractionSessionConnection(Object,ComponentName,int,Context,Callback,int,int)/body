{
  mLock=lock;
  mSessionComponentName=component;
  mUser=user;
  mContext=context;
  mCallback=callback;
  mCallingPid=callingPid;
  mCallingUid=callingUid;
  mAm=ActivityManagerNative.getDefault();
  mIWindowManager=IWindowManager.Stub.asInterface(ServiceManager.getService(Context.WINDOW_SERVICE));
  mAppOps=context.getSystemService(AppOpsManager.class);
  IBinder permOwner=null;
  try {
    permOwner=mAm.newUriPermissionOwner("voicesession:" + component.flattenToShortString());
  }
 catch (  RemoteException e) {
    Slog.w("voicesession","AM dead",e);
  }
  mPermissionOwner=permOwner;
  mBindIntent=new Intent(VoiceInteractionService.SERVICE_INTERFACE);
  mBindIntent.setComponent(mSessionComponentName);
  mBound=mContext.bindServiceAsUser(mBindIntent,this,Context.BIND_AUTO_CREATE | Context.BIND_WAIVE_PRIORITY | Context.BIND_ALLOW_OOM_MANAGEMENT,new UserHandle(mUser));
  if (mBound) {
    try {
      mIWindowManager.addWindowToken(mToken,WindowManager.LayoutParams.TYPE_VOICE_INTERACTION);
    }
 catch (    RemoteException e) {
      Slog.w(TAG,"Failed adding window token",e);
    }
  }
 else {
    Slog.w(TAG,"Failed binding to voice interaction session service " + mSessionComponentName);
  }
}
