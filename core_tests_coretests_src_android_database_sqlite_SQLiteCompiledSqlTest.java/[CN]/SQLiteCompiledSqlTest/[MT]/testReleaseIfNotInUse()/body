{
  ClassToTestSqlCompilationAndCaching c;
  int crudSqlNum=20 * 4;
  mDatabase.setMaxSqlCacheSize(crudSqlNum);
  for (int i=0; i < crudSqlNum / 4; i++) {
    c=ClassToTestSqlCompilationAndCaching.create(mDatabase,"insert into " + TABLE_NAME + " values("+ i+ ",?);");
    c.close();
    c=ClassToTestSqlCompilationAndCaching.create(mDatabase,"update " + TABLE_NAME + " set i = "+ i);
    c.close();
    c=ClassToTestSqlCompilationAndCaching.create(mDatabase,"select * from " + TABLE_NAME + " where i = "+ i);
    c.close();
    c=ClassToTestSqlCompilationAndCaching.create(mDatabase,"delete from " + TABLE_NAME + " where i = "+ i);
    c.close();
  }
  assertEquals(crudSqlNum,mCache.getCachesize());
  String sql="insert into " + TABLE_NAME + " values(1,?);";
  SQLiteCompiledSql compiledSql=mCache.getCompiledStatementForSql(sql);
  assertNotNull(compiledSql);
  assertTrue(compiledSql.isInUse());
  compiledSql.releaseIfNotInUse();
  int stmtId=compiledSql.nStatement;
  assertTrue(stmtId > 0);
  compiledSql.free();
  assertFalse(compiledSql.isInUse());
  compiledSql.releaseIfNotInUse();
  assertEquals(0,compiledSql.nStatement);
  assertTrue(mDatabase.getQueuedUpStmtList().contains(stmtId));
}
