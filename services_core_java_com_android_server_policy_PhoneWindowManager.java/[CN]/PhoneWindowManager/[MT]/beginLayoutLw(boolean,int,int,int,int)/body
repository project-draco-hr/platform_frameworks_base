{
  mDisplayRotation=displayRotation;
  final int overscanLeft, overscanTop, overscanRight, overscanBottom;
  if (isDefaultDisplay) {
switch (displayRotation) {
case Surface.ROTATION_90:
      overscanLeft=mOverscanTop;
    overscanTop=mOverscanRight;
  overscanRight=mOverscanBottom;
overscanBottom=mOverscanLeft;
break;
case Surface.ROTATION_180:
overscanLeft=mOverscanRight;
overscanTop=mOverscanBottom;
overscanRight=mOverscanLeft;
overscanBottom=mOverscanTop;
break;
case Surface.ROTATION_270:
overscanLeft=mOverscanBottom;
overscanTop=mOverscanLeft;
overscanRight=mOverscanTop;
overscanBottom=mOverscanRight;
break;
default :
overscanLeft=mOverscanLeft;
overscanTop=mOverscanTop;
overscanRight=mOverscanRight;
overscanBottom=mOverscanBottom;
break;
}
}
 else {
overscanLeft=0;
overscanTop=0;
overscanRight=0;
overscanBottom=0;
}
mOverscanScreenLeft=mRestrictedOverscanScreenLeft=0;
mOverscanScreenTop=mRestrictedOverscanScreenTop=0;
mOverscanScreenWidth=mRestrictedOverscanScreenWidth=displayWidth;
mOverscanScreenHeight=mRestrictedOverscanScreenHeight=displayHeight;
mSystemLeft=0;
mSystemTop=0;
mSystemRight=displayWidth;
mSystemBottom=displayHeight;
mUnrestrictedScreenLeft=overscanLeft;
mUnrestrictedScreenTop=overscanTop;
mUnrestrictedScreenWidth=displayWidth - overscanLeft - overscanRight;
mUnrestrictedScreenHeight=displayHeight - overscanTop - overscanBottom;
mRestrictedScreenLeft=mUnrestrictedScreenLeft;
mRestrictedScreenTop=mUnrestrictedScreenTop;
mRestrictedScreenWidth=mSystemGestures.screenWidth=mUnrestrictedScreenWidth;
mRestrictedScreenHeight=mSystemGestures.screenHeight=mUnrestrictedScreenHeight;
mDockLeft=mContentLeft=mVoiceContentLeft=mStableLeft=mStableFullscreenLeft=mCurLeft=mUnrestrictedScreenLeft;
mDockTop=mContentTop=mVoiceContentTop=mStableTop=mStableFullscreenTop=mCurTop=mUnrestrictedScreenTop;
mDockRight=mContentRight=mVoiceContentRight=mStableRight=mStableFullscreenRight=mCurRight=displayWidth - overscanRight;
mDockBottom=mContentBottom=mVoiceContentBottom=mStableBottom=mStableFullscreenBottom=mCurBottom=displayHeight - overscanBottom;
mDockLayer=0x10000000;
mStatusBarLayer=-1;
final Rect pf=mTmpParentFrame;
final Rect df=mTmpDisplayFrame;
final Rect of=mTmpOverscanFrame;
final Rect vf=mTmpVisibleFrame;
final Rect dcf=mTmpDecorFrame;
pf.left=df.left=of.left=vf.left=mDockLeft;
pf.top=df.top=of.top=vf.top=mDockTop;
pf.right=df.right=of.right=vf.right=mDockRight;
pf.bottom=df.bottom=of.bottom=vf.bottom=mDockBottom;
dcf.setEmpty();
if (isDefaultDisplay) {
final int sysui=mLastSystemUiFlags;
boolean navVisible=(sysui & View.SYSTEM_UI_FLAG_HIDE_NAVIGATION) == 0;
boolean navTranslucent=(sysui & (View.NAVIGATION_BAR_TRANSLUCENT | View.NAVIGATION_BAR_TRANSPARENT)) != 0;
boolean immersive=(sysui & View.SYSTEM_UI_FLAG_IMMERSIVE) != 0;
boolean immersiveSticky=(sysui & View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY) != 0;
boolean navAllowedHidden=immersive || immersiveSticky;
navTranslucent&=!immersiveSticky;
boolean isKeyguardShowing=isStatusBarKeyguard() && !mHideLockScreen;
if (!isKeyguardShowing) {
navTranslucent&=areTranslucentBarsAllowed();
}
boolean statusBarExpandedNotKeyguard=!isKeyguardShowing && mStatusBar.getAttrs().height == MATCH_PARENT && mStatusBar.getAttrs().width == MATCH_PARENT;
if (navVisible || navAllowedHidden) {
if (mInputConsumer != null) {
mInputConsumer.dismiss();
mInputConsumer=null;
}
}
 else if (mInputConsumer == null) {
mInputConsumer=mWindowManagerFuncs.addInputConsumer(mHandler.getLooper(),mHideNavInputEventReceiverFactory);
}
navVisible|=!canHideNavigationBar();
boolean updateSysUiVisibility=layoutNavigationBar(displayWidth,displayHeight,displayRotation,uiMode,overscanRight,overscanBottom,dcf,navVisible,navTranslucent,navAllowedHidden,statusBarExpandedNotKeyguard);
if (DEBUG_LAYOUT) Slog.i(TAG,String.format("mDock rect: (%d,%d - %d,%d)",mDockLeft,mDockTop,mDockRight,mDockBottom));
updateSysUiVisibility|=layoutStatusBar(pf,df,of,vf,dcf,sysui,isKeyguardShowing);
if (updateSysUiVisibility) {
updateSystemUiVisibilityLw();
}
}
}
