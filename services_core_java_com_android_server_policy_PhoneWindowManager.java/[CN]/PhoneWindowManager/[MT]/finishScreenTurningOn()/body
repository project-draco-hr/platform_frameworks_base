{
synchronized (mLock) {
    updateOrientationListenerLp();
  }
  final ScreenOnListener listener;
  final boolean enableScreen;
synchronized (mLock) {
    if (DEBUG_WAKEUP)     Slog.d(TAG,"finishScreenTurningOn: mAwake=" + mAwake + ", mScreenOnEarly="+ mScreenOnEarly+ ", mScreenOnFully="+ mScreenOnFully+ ", mKeyguardDrawComplete="+ mKeyguardDrawComplete+ ", mWindowManagerDrawComplete="+ mWindowManagerDrawComplete);
    if (mScreenOnFully || !mScreenOnEarly || !mWindowManagerDrawComplete|| (mAwake && !mKeyguardDrawComplete)) {
      return;
    }
    if (DEBUG_WAKEUP)     Slog.i(TAG,"Finished screen turning on...");
    listener=mScreenOnListener;
    mScreenOnListener=null;
    mScreenOnFully=true;
    if (!mKeyguardDrawnOnce && mAwake) {
      mKeyguardDrawnOnce=true;
      enableScreen=true;
      if (mBootMessageNeedsHiding) {
        mBootMessageNeedsHiding=false;
        hideBootMessages();
      }
    }
 else {
      enableScreen=false;
    }
  }
  if (listener != null) {
    listener.onScreenOn();
  }
  if (enableScreen) {
    try {
      mWindowManager.enableScreenIfNeeded();
    }
 catch (    RemoteException unhandled) {
    }
  }
}
