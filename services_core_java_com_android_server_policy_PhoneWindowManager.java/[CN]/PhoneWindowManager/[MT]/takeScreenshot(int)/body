{
synchronized (mScreenshotLock) {
    if (mScreenshotConnection != null) {
      return;
    }
    final ComponentName serviceComponent=new ComponentName(SYSUI_PACKAGE,SYSUI_SCREENSHOT_SERVICE);
    final Intent serviceIntent=new Intent();
    serviceIntent.setComponent(serviceComponent);
    ServiceConnection conn=new ServiceConnection(){
      @Override public void onServiceConnected(      ComponentName name,      IBinder service){
synchronized (mScreenshotLock) {
          if (mScreenshotConnection != this) {
            return;
          }
          Messenger messenger=new Messenger(service);
          Message msg=Message.obtain(null,screenshotType);
          final ServiceConnection myConn=this;
          Handler h=new Handler(mHandler.getLooper()){
            @Override public void handleMessage(            Message msg){
synchronized (mScreenshotLock) {
                if (mScreenshotConnection == myConn) {
                  mContext.unbindService(mScreenshotConnection);
                  mScreenshotConnection=null;
                  mHandler.removeCallbacks(mScreenshotTimeout);
                }
              }
            }
          }
;
          msg.replyTo=new Messenger(h);
          msg.arg1=msg.arg2=0;
          if (mStatusBar != null && mStatusBar.isVisibleLw())           msg.arg1=1;
          if (mNavigationBar != null && mNavigationBar.isVisibleLw())           msg.arg2=1;
          try {
            messenger.send(msg);
          }
 catch (          RemoteException e) {
          }
        }
      }
      @Override public void onServiceDisconnected(      ComponentName name){
        notifyScreenshotError();
      }
    }
;
    if (mContext.bindServiceAsUser(serviceIntent,conn,Context.BIND_AUTO_CREATE | Context.BIND_FOREGROUND_SERVICE_WHILE_AWAKE,UserHandle.CURRENT)) {
      mScreenshotConnection=conn;
      mHandler.postDelayed(mScreenshotTimeout,10000);
    }
  }
}
