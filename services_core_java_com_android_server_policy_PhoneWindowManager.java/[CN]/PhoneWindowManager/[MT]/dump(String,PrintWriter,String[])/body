{
  pw.print(prefix);
  pw.print("mSafeMode=");
  pw.print(mSafeMode);
  pw.print(" mSystemReady=");
  pw.print(mSystemReady);
  pw.print(" mSystemBooted=");
  pw.println(mSystemBooted);
  pw.print(prefix);
  pw.print("mLidState=");
  pw.print(mLidState);
  pw.print(" mLidOpenRotation=");
  pw.print(mLidOpenRotation);
  pw.print(" mCameraLensCoverState=");
  pw.print(mCameraLensCoverState);
  pw.print(" mHdmiPlugged=");
  pw.println(mHdmiPlugged);
  if (mLastSystemUiFlags != 0 || mResettingSystemUiFlags != 0 || mForceClearedSystemUiFlags != 0) {
    pw.print(prefix);
    pw.print("mLastSystemUiFlags=0x");
    pw.print(Integer.toHexString(mLastSystemUiFlags));
    pw.print(" mResettingSystemUiFlags=0x");
    pw.print(Integer.toHexString(mResettingSystemUiFlags));
    pw.print(" mForceClearedSystemUiFlags=0x");
    pw.println(Integer.toHexString(mForceClearedSystemUiFlags));
  }
  if (mLastFocusNeedsMenu) {
    pw.print(prefix);
    pw.print("mLastFocusNeedsMenu=");
    pw.println(mLastFocusNeedsMenu);
  }
  pw.print(prefix);
  pw.print("mWakeGestureEnabledSetting=");
  pw.println(mWakeGestureEnabledSetting);
  pw.print(prefix);
  pw.print("mSupportAutoRotation=");
  pw.println(mSupportAutoRotation);
  pw.print(prefix);
  pw.print("mUiMode=");
  pw.print(mUiMode);
  pw.print(" mDockMode=");
  pw.print(mDockMode);
  pw.print(" mCarDockRotation=");
  pw.print(mCarDockRotation);
  pw.print(" mDeskDockRotation=");
  pw.println(mDeskDockRotation);
  pw.print(prefix);
  pw.print("mUserRotationMode=");
  pw.print(mUserRotationMode);
  pw.print(" mUserRotation=");
  pw.print(mUserRotation);
  pw.print(" mAllowAllRotations=");
  pw.println(mAllowAllRotations);
  pw.print(prefix);
  pw.print("mCurrentAppOrientation=");
  pw.println(mCurrentAppOrientation);
  pw.print(prefix);
  pw.print("mCarDockEnablesAccelerometer=");
  pw.print(mCarDockEnablesAccelerometer);
  pw.print(" mDeskDockEnablesAccelerometer=");
  pw.println(mDeskDockEnablesAccelerometer);
  pw.print(prefix);
  pw.print("mLidKeyboardAccessibility=");
  pw.print(mLidKeyboardAccessibility);
  pw.print(" mLidNavigationAccessibility=");
  pw.print(mLidNavigationAccessibility);
  pw.print(" mLidControlsSleep=");
  pw.println(mLidControlsSleep);
  pw.print(prefix);
  pw.print("mShortPressOnPowerBehavior=");
  pw.print(mShortPressOnPowerBehavior);
  pw.print(" mLongPressOnPowerBehavior=");
  pw.println(mLongPressOnPowerBehavior);
  pw.print(prefix);
  pw.print("mDoublePressOnPowerBehavior=");
  pw.print(mDoublePressOnPowerBehavior);
  pw.print(" mTriplePressOnPowerBehavior=");
  pw.println(mTriplePressOnPowerBehavior);
  pw.print(prefix);
  pw.print("mHasSoftInput=");
  pw.println(mHasSoftInput);
  pw.print(prefix);
  pw.print("mAwake=");
  pw.println(mAwake);
  pw.print(prefix);
  pw.print("mScreenOnEarly=");
  pw.print(mScreenOnEarly);
  pw.print(" mScreenOnFully=");
  pw.println(mScreenOnFully);
  pw.print(prefix);
  pw.print("mKeyguardDrawComplete=");
  pw.print(mKeyguardDrawComplete);
  pw.print(" mWindowManagerDrawComplete=");
  pw.println(mWindowManagerDrawComplete);
  pw.print(prefix);
  pw.print("mOrientationSensorEnabled=");
  pw.println(mOrientationSensorEnabled);
  pw.print(prefix);
  pw.print("mOverscanScreen=(");
  pw.print(mOverscanScreenLeft);
  pw.print(",");
  pw.print(mOverscanScreenTop);
  pw.print(") ");
  pw.print(mOverscanScreenWidth);
  pw.print("x");
  pw.println(mOverscanScreenHeight);
  if (mOverscanLeft != 0 || mOverscanTop != 0 || mOverscanRight != 0 || mOverscanBottom != 0) {
    pw.print(prefix);
    pw.print("mOverscan left=");
    pw.print(mOverscanLeft);
    pw.print(" top=");
    pw.print(mOverscanTop);
    pw.print(" right=");
    pw.print(mOverscanRight);
    pw.print(" bottom=");
    pw.println(mOverscanBottom);
  }
  pw.print(prefix);
  pw.print("mRestrictedOverscanScreen=(");
  pw.print(mRestrictedOverscanScreenLeft);
  pw.print(",");
  pw.print(mRestrictedOverscanScreenTop);
  pw.print(") ");
  pw.print(mRestrictedOverscanScreenWidth);
  pw.print("x");
  pw.println(mRestrictedOverscanScreenHeight);
  pw.print(prefix);
  pw.print("mUnrestrictedScreen=(");
  pw.print(mUnrestrictedScreenLeft);
  pw.print(",");
  pw.print(mUnrestrictedScreenTop);
  pw.print(") ");
  pw.print(mUnrestrictedScreenWidth);
  pw.print("x");
  pw.println(mUnrestrictedScreenHeight);
  pw.print(prefix);
  pw.print("mRestrictedScreen=(");
  pw.print(mRestrictedScreenLeft);
  pw.print(",");
  pw.print(mRestrictedScreenTop);
  pw.print(") ");
  pw.print(mRestrictedScreenWidth);
  pw.print("x");
  pw.println(mRestrictedScreenHeight);
  pw.print(prefix);
  pw.print("mStableFullscreen=(");
  pw.print(mStableFullscreenLeft);
  pw.print(",");
  pw.print(mStableFullscreenTop);
  pw.print(")-(");
  pw.print(mStableFullscreenRight);
  pw.print(",");
  pw.print(mStableFullscreenBottom);
  pw.println(")");
  pw.print(prefix);
  pw.print("mStable=(");
  pw.print(mStableLeft);
  pw.print(",");
  pw.print(mStableTop);
  pw.print(")-(");
  pw.print(mStableRight);
  pw.print(",");
  pw.print(mStableBottom);
  pw.println(")");
  pw.print(prefix);
  pw.print("mSystem=(");
  pw.print(mSystemLeft);
  pw.print(",");
  pw.print(mSystemTop);
  pw.print(")-(");
  pw.print(mSystemRight);
  pw.print(",");
  pw.print(mSystemBottom);
  pw.println(")");
  pw.print(prefix);
  pw.print("mCur=(");
  pw.print(mCurLeft);
  pw.print(",");
  pw.print(mCurTop);
  pw.print(")-(");
  pw.print(mCurRight);
  pw.print(",");
  pw.print(mCurBottom);
  pw.println(")");
  pw.print(prefix);
  pw.print("mContent=(");
  pw.print(mContentLeft);
  pw.print(",");
  pw.print(mContentTop);
  pw.print(")-(");
  pw.print(mContentRight);
  pw.print(",");
  pw.print(mContentBottom);
  pw.println(")");
  pw.print(prefix);
  pw.print("mVoiceContent=(");
  pw.print(mVoiceContentLeft);
  pw.print(",");
  pw.print(mVoiceContentTop);
  pw.print(")-(");
  pw.print(mVoiceContentRight);
  pw.print(",");
  pw.print(mVoiceContentBottom);
  pw.println(")");
  pw.print(prefix);
  pw.print("mDock=(");
  pw.print(mDockLeft);
  pw.print(",");
  pw.print(mDockTop);
  pw.print(")-(");
  pw.print(mDockRight);
  pw.print(",");
  pw.print(mDockBottom);
  pw.println(")");
  pw.print(prefix);
  pw.print("mDockLayer=");
  pw.print(mDockLayer);
  pw.print(" mStatusBarLayer=");
  pw.println(mStatusBarLayer);
  pw.print(prefix);
  pw.print("mShowingLockscreen=");
  pw.print(mShowingLockscreen);
  pw.print(" mShowingDream=");
  pw.print(mShowingDream);
  pw.print(" mDreamingLockscreen=");
  pw.println(mDreamingLockscreen);
  if (mLastInputMethodWindow != null) {
    pw.print(prefix);
    pw.print("mLastInputMethodWindow=");
    pw.println(mLastInputMethodWindow);
  }
  if (mLastInputMethodTargetWindow != null) {
    pw.print(prefix);
    pw.print("mLastInputMethodTargetWindow=");
    pw.println(mLastInputMethodTargetWindow);
  }
  if (mStatusBar != null) {
    pw.print(prefix);
    pw.print("mStatusBar=");
    pw.print(mStatusBar);
    pw.print(" isStatusBarKeyguard=");
    pw.println(isStatusBarKeyguard());
  }
  if (mNavigationBar != null) {
    pw.print(prefix);
    pw.print("mNavigationBar=");
    pw.println(mNavigationBar);
  }
  if (mFocusedWindow != null) {
    pw.print(prefix);
    pw.print("mFocusedWindow=");
    pw.println(mFocusedWindow);
  }
  if (mFocusedApp != null) {
    pw.print(prefix);
    pw.print("mFocusedApp=");
    pw.println(mFocusedApp);
  }
  if (mWinDismissingKeyguard != null) {
    pw.print(prefix);
    pw.print("mWinDismissingKeyguard=");
    pw.println(mWinDismissingKeyguard);
  }
  if (mTopFullscreenOpaqueWindowState != null) {
    pw.print(prefix);
    pw.print("mTopFullscreenOpaqueWindowState=");
    pw.println(mTopFullscreenOpaqueWindowState);
  }
  if (mTopFullscreenOpaqueOrDimmingWindowState != null) {
    pw.print(prefix);
    pw.print("mTopFullscreenOpaqueOrDimmingWindowState=");
    pw.println(mTopFullscreenOpaqueOrDimmingWindowState);
  }
  if (mForcingShowNavBar) {
    pw.print(prefix);
    pw.print("mForcingShowNavBar=");
    pw.println(mForcingShowNavBar);
    pw.print("mForcingShowNavBarLayer=");
    pw.println(mForcingShowNavBarLayer);
  }
  pw.print(prefix);
  pw.print("mTopIsFullscreen=");
  pw.print(mTopIsFullscreen);
  pw.print(" mHideLockScreen=");
  pw.println(mHideLockScreen);
  pw.print(prefix);
  pw.print("mForceStatusBar=");
  pw.print(mForceStatusBar);
  pw.print(" mForceStatusBarFromKeyguard=");
  pw.println(mForceStatusBarFromKeyguard);
  pw.print(prefix);
  pw.print("mDismissKeyguard=");
  pw.print(mDismissKeyguard);
  pw.print(" mWinDismissingKeyguard=");
  pw.print(mWinDismissingKeyguard);
  pw.print(" mHomePressed=");
  pw.println(mHomePressed);
  pw.print(prefix);
  pw.print("mAllowLockscreenWhenOn=");
  pw.print(mAllowLockscreenWhenOn);
  pw.print(" mLockScreenTimeout=");
  pw.print(mLockScreenTimeout);
  pw.print(" mLockScreenTimerActive=");
  pw.println(mLockScreenTimerActive);
  pw.print(prefix);
  pw.print("mEndcallBehavior=");
  pw.print(mEndcallBehavior);
  pw.print(" mIncallPowerBehavior=");
  pw.print(mIncallPowerBehavior);
  pw.print(" mLongPressOnHomeBehavior=");
  pw.println(mLongPressOnHomeBehavior);
  pw.print(prefix);
  pw.print("mLandscapeRotation=");
  pw.print(mLandscapeRotation);
  pw.print(" mSeascapeRotation=");
  pw.println(mSeascapeRotation);
  pw.print(prefix);
  pw.print("mPortraitRotation=");
  pw.print(mPortraitRotation);
  pw.print(" mUpsideDownRotation=");
  pw.println(mUpsideDownRotation);
  pw.print(prefix);
  pw.print("mDemoHdmiRotation=");
  pw.print(mDemoHdmiRotation);
  pw.print(" mDemoHdmiRotationLock=");
  pw.println(mDemoHdmiRotationLock);
  pw.print(prefix);
  pw.print("mUndockedHdmiRotation=");
  pw.println(mUndockedHdmiRotation);
  mGlobalKeyManager.dump(prefix,pw);
  mStatusBarController.dump(pw,prefix);
  mNavigationBarController.dump(pw,prefix);
  PolicyControl.dump(prefix,pw);
  if (mWakeGestureListener != null) {
    mWakeGestureListener.dump(pw,prefix);
  }
  if (mOrientationListener != null) {
    mOrientationListener.dump(pw,prefix);
  }
  if (mBurnInProtectionHelper != null) {
    mBurnInProtectionHelper.dump(prefix,pw);
  }
}
