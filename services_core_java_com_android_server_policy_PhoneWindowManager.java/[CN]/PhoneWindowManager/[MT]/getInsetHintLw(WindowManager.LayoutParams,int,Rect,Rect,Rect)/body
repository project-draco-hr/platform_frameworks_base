{
  final int fl=PolicyControl.getWindowFlags(null,attrs);
  final int sysuiVis=PolicyControl.getSystemUiVisibility(null,attrs);
  final int systemUiVisibility=(sysuiVis | attrs.subtreeSystemUiVisibility);
  final boolean useOutsets=outOutsets != null && shouldUseOutsets(attrs,fl);
  if (useOutsets) {
    int outset=ScreenShapeHelper.getWindowOutsetBottomPx(mContext.getResources());
    if (outset > 0) {
      if (displayRotation == Surface.ROTATION_0) {
        outOutsets.bottom+=outset;
      }
 else       if (displayRotation == Surface.ROTATION_90) {
        outOutsets.right+=outset;
      }
 else       if (displayRotation == Surface.ROTATION_180) {
        outOutsets.top+=outset;
      }
 else       if (displayRotation == Surface.ROTATION_270) {
        outOutsets.left+=outset;
      }
    }
  }
  if ((fl & (FLAG_LAYOUT_IN_SCREEN | FLAG_LAYOUT_INSET_DECOR)) == (FLAG_LAYOUT_IN_SCREEN | FLAG_LAYOUT_INSET_DECOR)) {
    int availRight, availBottom;
    if (canHideNavigationBar() && (systemUiVisibility & View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION) != 0) {
      availRight=mUnrestrictedScreenLeft + mUnrestrictedScreenWidth;
      availBottom=mUnrestrictedScreenTop + mUnrestrictedScreenHeight;
    }
 else {
      availRight=mRestrictedScreenLeft + mRestrictedScreenWidth;
      availBottom=mRestrictedScreenTop + mRestrictedScreenHeight;
    }
    if ((systemUiVisibility & View.SYSTEM_UI_FLAG_LAYOUT_STABLE) != 0) {
      if ((fl & FLAG_FULLSCREEN) != 0) {
        outContentInsets.set(mStableFullscreenLeft,mStableFullscreenTop,availRight - mStableFullscreenRight,availBottom - mStableFullscreenBottom);
      }
 else {
        outContentInsets.set(mStableLeft,mStableTop,availRight - mStableRight,availBottom - mStableBottom);
      }
    }
 else     if ((fl & FLAG_FULLSCREEN) != 0 || (fl & FLAG_LAYOUT_IN_OVERSCAN) != 0) {
      outContentInsets.setEmpty();
    }
 else     if ((systemUiVisibility & (View.SYSTEM_UI_FLAG_FULLSCREEN | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN)) == 0) {
      outContentInsets.set(mCurLeft,mCurTop,availRight - mCurRight,availBottom - mCurBottom);
    }
 else {
      outContentInsets.set(mCurLeft,mCurTop,availRight - mCurRight,availBottom - mCurBottom);
    }
    outStableInsets.set(mStableLeft,mStableTop,availRight - mStableRight,availBottom - mStableBottom);
    return mForceShowSystemBars;
  }
  outContentInsets.setEmpty();
  outStableInsets.setEmpty();
  return mForceShowSystemBars;
}
