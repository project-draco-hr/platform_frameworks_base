{
  final WindowState win=mFocusedWindow != null ? mFocusedWindow : mTopFullscreenOpaqueWindowState;
  if (win == null) {
    return 0;
  }
  if ((win.getAttrs().privateFlags & PRIVATE_FLAG_KEYGUARD) != 0 && mHideLockScreen == true) {
    return 0;
  }
  int tmpVisibility=PolicyControl.getSystemUiVisibility(win,null) & ~mResettingSystemUiFlags & ~mForceClearedSystemUiFlags;
  if (mForcingShowNavBar && win.getSurfaceLayer() < mForcingShowNavBarLayer) {
    tmpVisibility&=~PolicyControl.adjustClearableFlags(win,View.SYSTEM_UI_CLEARABLE_FLAGS);
  }
  if (mUiMode == Configuration.UI_MODE_TYPE_CAR) {
    tmpVisibility|=StatusBarManager.DISABLE_RECENT;
  }
  final int fullscreenVisibility=updateLightStatusBarLw(0,mTopFullscreenOpaqueWindowState,mTopFullscreenOpaqueOrDimmingWindowState);
  final int dockedVisibility=updateLightStatusBarLw(0,mTopDockedOpaqueWindowState,mTopDockedOpaqueOrDimmingWindowState);
  mWindowManagerFuncs.getStackBounds(HOME_STACK_ID,mNonDockedStackBounds);
  mWindowManagerFuncs.getStackBounds(DOCKED_STACK_ID,mDockedStackBounds);
  final int visibility=updateSystemBarsLw(win,mLastSystemUiFlags,tmpVisibility);
  final int diff=visibility ^ mLastSystemUiFlags;
  final int fullscreenDiff=fullscreenVisibility ^ mLastFullscreenStackSysUiFlags;
  final int dockedDiff=dockedVisibility ^ mLastDockedStackSysUiFlags;
  final boolean needsMenu=win.getNeedsMenuLw(mTopFullscreenOpaqueWindowState);
  if (diff == 0 && fullscreenDiff == 0 && dockedDiff == 0 && mLastFocusNeedsMenu == needsMenu && mFocusedApp == win.getAppToken() && mLastNonDockedStackBounds.equals(mNonDockedStackBounds) && mLastDockedStackBounds.equals(mDockedStackBounds)) {
    return 0;
  }
  mLastSystemUiFlags=visibility;
  mLastFullscreenStackSysUiFlags=fullscreenVisibility;
  mLastDockedStackSysUiFlags=dockedVisibility;
  mLastFocusNeedsMenu=needsMenu;
  mFocusedApp=win.getAppToken();
  final Rect fullscreenStackBounds=new Rect(mNonDockedStackBounds);
  final Rect dockedStackBounds=new Rect(mDockedStackBounds);
  mHandler.post(new Runnable(){
    @Override public void run(){
      StatusBarManagerInternal statusbar=getStatusBarManagerInternal();
      if (statusbar != null) {
        statusbar.setSystemUiVisibility(visibility,fullscreenVisibility,dockedVisibility,0xffffffff,fullscreenStackBounds,dockedStackBounds,win.toString());
        statusbar.topAppWindowChanged(needsMenu);
      }
    }
  }
);
  return diff;
}
