{
  if (r == null || mFocusedActivity == r) {
    return false;
  }
  if (!r.isFocusable()) {
    if (DEBUG_FOCUS)     Slog.d(TAG_FOCUS,"setFocusedActivityLocked: unfocusable r=" + r);
    return false;
  }
  if (DEBUG_FOCUS)   Slog.d(TAG_FOCUS,"setFocusedActivityLocked: r=" + r);
  final ActivityRecord last=mFocusedActivity;
  mFocusedActivity=r;
  if (r.task.isApplicationTask()) {
    if (mCurAppTimeTracker != r.appTimeTracker) {
      if (mCurAppTimeTracker != null) {
        mCurAppTimeTracker.stop();
        mHandler.obtainMessage(REPORT_TIME_TRACKER_MSG,mCurAppTimeTracker).sendToTarget();
        mStackSupervisor.clearOtherAppTimeTrackers(r.appTimeTracker);
        mCurAppTimeTracker=null;
      }
      if (r.appTimeTracker != null) {
        mCurAppTimeTracker=r.appTimeTracker;
        startTimeTrackingFocusedActivityLocked();
      }
    }
 else {
      startTimeTrackingFocusedActivityLocked();
    }
  }
 else {
    r.appTimeTracker=null;
  }
  if (r.task.voiceInteractor != null) {
    startRunningVoiceLocked(r.task.voiceSession,r.info.applicationInfo.uid);
  }
 else {
    finishRunningVoiceLocked();
    if (last != null && last.task.voiceSession != null) {
      finishVoiceTask(last.task.voiceSession);
    }
  }
  if (mStackSupervisor.moveActivityStackToFront(r,reason + " setFocusedActivity")) {
    mWindowManager.setFocusedApp(r.appToken,true);
  }
  applyUpdateLockStateLocked(r);
  applyUpdateVrModeLocked(r);
  if (mFocusedActivity.userId != mLastFocusedUserId) {
    mHandler.removeMessages(FOREGROUND_PROFILE_CHANGED_MSG);
    mHandler.obtainMessage(FOREGROUND_PROFILE_CHANGED_MSG,mFocusedActivity.userId,0).sendToTarget();
    mLastFocusedUserId=mFocusedActivity.userId;
  }
  EventLogTags.writeAmFocusedActivity(mFocusedActivity == null ? -1 : mFocusedActivity.userId,mFocusedActivity == null ? "NULL" : mFocusedActivity.shortComponentName,reason);
  return true;
}
