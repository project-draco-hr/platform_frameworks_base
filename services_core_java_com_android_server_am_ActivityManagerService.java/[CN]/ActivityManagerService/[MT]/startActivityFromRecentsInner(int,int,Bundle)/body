{
  final TaskRecord task;
  final int callingUid;
  final String callingPackage;
  final Intent intent;
  final int userId;
synchronized (this) {
    if (launchStackId == HOME_STACK_ID) {
      throw new IllegalArgumentException("startActivityFromRecentsInner: Task " + taskId + " can't be launch in the home stack.");
    }
    task=mStackSupervisor.anyTaskForIdLocked(taskId,RESTORE_FROM_RECENTS,launchStackId);
    if (task == null) {
      throw new IllegalArgumentException("startActivityFromRecentsInner: Task " + taskId + " not found.");
    }
    if (launchStackId != INVALID_STACK_ID && task.stack.mStackId != launchStackId) {
      mStackSupervisor.moveTaskToStackUncheckedLocked(task,launchStackId,ON_TOP,FORCE_FOCUS,"startActivityFromRecents");
    }
    if (task.getRootActivity() != null) {
      moveTaskToFrontLocked(task.taskId,0,options);
      return ActivityManager.START_TASK_TO_FRONT;
    }
    callingUid=task.mCallingUid;
    callingPackage=task.mCallingPackage;
    intent=task.intent;
    intent.addFlags(Intent.FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY);
    userId=task.userId;
  }
  return startActivityInPackage(callingUid,callingPackage,intent,null,null,null,0,0,options,userId,null,task);
}
