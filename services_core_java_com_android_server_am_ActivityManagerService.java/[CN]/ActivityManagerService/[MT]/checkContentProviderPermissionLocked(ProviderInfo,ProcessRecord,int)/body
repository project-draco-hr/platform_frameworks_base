{
  final int callingPid=(r != null) ? r.pid : Binder.getCallingPid();
  final int callingUid=(r != null) ? r.uid : Binder.getCallingUid();
  final ArrayMap<GrantUri,UriPermission> perms=mGrantedUriPermissions.get(callingUid);
  if (userId != UserHandle.getUserId(callingUid)) {
    if (perms != null) {
      for (      GrantUri grantUri : perms.keySet()) {
        if (grantUri.sourceUserId == userId) {
          String authority=grantUri.uri.getAuthority();
          if (authority.equals(cpi.authority)) {
            return null;
          }
        }
      }
    }
  }
  userId=handleIncomingUser(callingPid,callingUid,userId,false,true,"checkContentProviderPermissionLocked",null);
  if (checkComponentPermission(cpi.readPermission,callingPid,callingUid,cpi.applicationInfo.uid,cpi.exported) == PackageManager.PERMISSION_GRANTED) {
    return null;
  }
  if (checkComponentPermission(cpi.writePermission,callingPid,callingUid,cpi.applicationInfo.uid,cpi.exported) == PackageManager.PERMISSION_GRANTED) {
    return null;
  }
  PathPermission[] pps=cpi.pathPermissions;
  if (pps != null) {
    int i=pps.length;
    while (i > 0) {
      i--;
      PathPermission pp=pps[i];
      if (checkComponentPermission(pp.getReadPermission(),callingPid,callingUid,cpi.applicationInfo.uid,cpi.exported) == PackageManager.PERMISSION_GRANTED) {
        return null;
      }
      if (checkComponentPermission(pp.getWritePermission(),callingPid,callingUid,cpi.applicationInfo.uid,cpi.exported) == PackageManager.PERMISSION_GRANTED) {
        return null;
      }
    }
  }
  if (perms != null) {
    for (    GrantUri grantUri : perms.keySet()) {
      if (grantUri.uri.getAuthority().equals(cpi.authority)) {
        return null;
      }
    }
  }
  String msg;
  if (!cpi.exported) {
    msg="Permission Denial: opening provider " + cpi.name + " from "+ (r != null ? r : "(null)")+ " (pid="+ callingPid+ ", uid="+ callingUid+ ") that is not exported from uid "+ cpi.applicationInfo.uid;
  }
 else {
    msg="Permission Denial: opening provider " + cpi.name + " from "+ (r != null ? r : "(null)")+ " (pid="+ callingPid+ ", uid="+ callingUid+ ") requires "+ cpi.readPermission+ " or "+ cpi.writePermission;
  }
  Slog.w(TAG,msg);
  return msg;
}
