{
  int N=mRecentTasks.size();
  if (N > 0 && mRecentTasks.get(0) == task) {
    return;
  }
  if (task.voiceSession != null) {
    return;
  }
  final Intent intent=task.intent;
  final boolean document=intent != null && intent.isDocument();
  final ComponentName comp=intent.getComponent();
  int maxRecents=task.maxRecents - 1;
  for (int i=0; i < N; i++) {
    final TaskRecord tr=mRecentTasks.get(i);
    if (task != tr) {
      if (task.userId != tr.userId) {
        continue;
      }
      if (i > MAX_RECENT_BITMAPS) {
        tr.freeLastThumbnail();
      }
      final Intent trIntent=tr.intent;
      if ((task.affinity == null || !task.affinity.equals(tr.affinity)) && (intent == null || !intent.filterEquals(trIntent))) {
        continue;
      }
      final boolean trIsDocument=trIntent != null && trIntent.isDocument();
      if (document && trIsDocument) {
        if (maxRecents > 0) {
          --maxRecents;
          continue;
        }
      }
 else       if (document || trIsDocument) {
        continue;
      }
    }
    tr.disposeThumbnail();
    mRecentTasks.remove(i);
    if (task != tr) {
      tr.closeRecentsChain();
    }
    i--;
    N--;
    if (task.intent == null) {
      task=tr;
    }
    notifyTaskPersisterLocked(tr,false);
  }
  if (N >= MAX_RECENT_TASKS) {
    final TaskRecord tr=mRecentTasks.remove(N - 1);
    tr.disposeThumbnail();
    tr.closeRecentsChain();
  }
  mRecentTasks.add(0,task);
}
