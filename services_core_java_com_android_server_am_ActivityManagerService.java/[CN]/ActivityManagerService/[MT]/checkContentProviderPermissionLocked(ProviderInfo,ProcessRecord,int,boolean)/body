{
  final int callingPid=(r != null) ? r.pid : Binder.getCallingPid();
  final int callingUid=(r != null) ? r.uid : Binder.getCallingUid();
  boolean checkedGrants=false;
  if (checkUser) {
    if (UserHandle.getUserId(callingUid) != userId) {
      if (checkAuthorityGrants(callingUid,cpi,userId,checkUser)) {
        return null;
      }
      checkedGrants=true;
    }
    userId=handleIncomingUser(callingPid,callingUid,userId,false,false,"checkContentProviderPermissionLocked " + cpi.authority,null);
  }
  if (checkComponentPermission(cpi.readPermission,callingPid,callingUid,cpi.applicationInfo.uid,cpi.exported) == PackageManager.PERMISSION_GRANTED) {
    return null;
  }
  if (checkComponentPermission(cpi.writePermission,callingPid,callingUid,cpi.applicationInfo.uid,cpi.exported) == PackageManager.PERMISSION_GRANTED) {
    return null;
  }
  PathPermission[] pps=cpi.pathPermissions;
  if (pps != null) {
    int i=pps.length;
    while (i > 0) {
      i--;
      PathPermission pp=pps[i];
      String pprperm=pp.getReadPermission();
      if (pprperm != null && checkComponentPermission(pprperm,callingPid,callingUid,cpi.applicationInfo.uid,cpi.exported) == PackageManager.PERMISSION_GRANTED) {
        return null;
      }
      String ppwperm=pp.getWritePermission();
      if (ppwperm != null && checkComponentPermission(ppwperm,callingPid,callingUid,cpi.applicationInfo.uid,cpi.exported) == PackageManager.PERMISSION_GRANTED) {
        return null;
      }
    }
  }
  if (!checkedGrants && checkAuthorityGrants(callingUid,cpi,userId,checkUser)) {
    return null;
  }
  String msg;
  if (!cpi.exported) {
    msg="Permission Denial: opening provider " + cpi.name + " from "+ (r != null ? r : "(null)")+ " (pid="+ callingPid+ ", uid="+ callingUid+ ") that is not exported from uid "+ cpi.applicationInfo.uid;
  }
 else {
    msg="Permission Denial: opening provider " + cpi.name + " from "+ (r != null ? r : "(null)")+ " (pid="+ callingPid+ ", uid="+ callingUid+ ") requires "+ cpi.readPermission+ " or "+ cpi.writePermission;
  }
  Slog.w(TAG,msg);
  return msg;
}
