{
  enforceCallingPermission(MANAGE_ACTIVITY_STACKS,"moveTasksToFullscreenStack()");
  if (fromStackId == HOME_STACK_ID) {
    throw new IllegalArgumentException("You can't move tasks from the home stack.");
  }
synchronized (this) {
    final long origId=Binder.clearCallingIdentity();
    final ActivityStack stack=mStackSupervisor.getStack(fromStackId);
    if (stack != null) {
      mWindowManager.deferSurfaceLayout();
      try {
        if (fromStackId == DOCKED_STACK_ID) {
          for (int i=FIRST_STATIC_STACK_ID; i <= LAST_STATIC_STACK_ID; i++) {
            if (StackId.isResizeableByDockedStack(i)) {
              ActivityStack otherStack=mStackSupervisor.getStack(i);
              if (otherStack != null) {
                mStackSupervisor.resizeStackLocked(i,null,null,null,PRESERVE_WINDOWS,true);
              }
            }
          }
        }
        final ArrayList<TaskRecord> tasks=stack.getAllTasks();
        final int size=tasks.size();
        if (onTop) {
          for (int i=0; i < size; i++) {
            mStackSupervisor.moveTaskToStackLocked(tasks.get(i).taskId,FULLSCREEN_WORKSPACE_STACK_ID,onTop,!FORCE_FOCUS,"moveTasksToFullscreenStack",ANIMATE);
          }
        }
 else {
          for (int i=size - 1; i >= 0; i--) {
            mStackSupervisor.positionTaskInStackLocked(tasks.get(i).taskId,FULLSCREEN_WORKSPACE_STACK_ID,0);
          }
        }
      }
  finally {
        mWindowManager.continueSurfaceLayout();
      }
    }
    Binder.restoreCallingIdentity(origId);
  }
}
