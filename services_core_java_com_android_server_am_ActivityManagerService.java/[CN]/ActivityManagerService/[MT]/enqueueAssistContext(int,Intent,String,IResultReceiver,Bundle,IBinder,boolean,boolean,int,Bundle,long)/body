{
  enforceCallingPermission(android.Manifest.permission.GET_TOP_ACTIVITY_INFO,"enqueueAssistContext()");
synchronized (this) {
    ActivityRecord activity=getFocusedStack().topActivity();
    if (activity == null) {
      Slog.w(TAG,"getAssistContextExtras failed: no top activity");
      return null;
    }
    if (activity.app == null || activity.app.thread == null) {
      Slog.w(TAG,"getAssistContextExtras failed: no process for " + activity);
      return null;
    }
    if (focused) {
      if (activityToken != null) {
        ActivityRecord caller=ActivityRecord.forTokenLocked(activityToken);
        if (activity != caller) {
          Slog.w(TAG,"enqueueAssistContext failed: caller " + caller + " is not current top "+ activity);
          return null;
        }
      }
    }
 else {
      activity=ActivityRecord.forTokenLocked(activityToken);
      if (activity == null) {
        Slog.w(TAG,"enqueueAssistContext failed: activity for token=" + activityToken + " couldn't be found");
        return null;
      }
    }
    PendingAssistExtras pae;
    Bundle extras=new Bundle();
    if (args != null) {
      extras.putAll(args);
    }
    extras.putString(Intent.EXTRA_ASSIST_PACKAGE,activity.packageName);
    extras.putInt(Intent.EXTRA_ASSIST_UID,activity.app.uid);
    pae=new PendingAssistExtras(activity,extras,intent,hint,receiver,receiverExtras,userHandle);
    if (newSessionId) {
      mViSessionId++;
    }
    try {
      activity.app.thread.requestAssistContextExtras(activity.appToken,pae,requestType,mViSessionId);
      mPendingAssistExtras.add(pae);
      mUiHandler.postDelayed(pae,timeout);
    }
 catch (    RemoteException e) {
      Slog.w(TAG,"getAssistContextExtras failed: crash calling " + activity);
      return null;
    }
    return pae;
  }
}
