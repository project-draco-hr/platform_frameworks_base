{
  if (UserManager.isSplitSystemUser()) {
    AppsQueryHelper queryHelper=new AppsQueryHelper(mContext);
    Set<String> enableApps=new HashSet<>();
    enableApps.addAll(queryHelper.queryApps(AppsQueryHelper.GET_NON_LAUNCHABLE_APPS | AppsQueryHelper.GET_APPS_WITH_INTERACT_ACROSS_USERS_PERM,true,UserHandle.SYSTEM));
    ArraySet<String> wlApps=SystemConfig.getInstance().getSystemUserWhitelistedApps();
    enableApps.addAll(wlApps);
    ArraySet<String> blApps=SystemConfig.getInstance().getSystemUserBlacklistedApps();
    enableApps.removeAll(blApps);
    List<String> systemApps=queryHelper.queryApps(0,true,UserHandle.SYSTEM);
    final int systemAppsSize=systemApps.size();
    for (int i=0; i < systemAppsSize; i++) {
      String pName=systemApps.get(i);
      boolean enable=enableApps.contains(pName);
      try {
        if (enable) {
          AppGlobals.getPackageManager().installExistingPackageAsUser(pName,UserHandle.USER_SYSTEM);
        }
 else {
          AppGlobals.getPackageManager().deletePackageAsUser(pName,null,UserHandle.USER_SYSTEM,PackageManager.DELETE_SYSTEM_APP);
        }
      }
 catch (      RemoteException e) {
        Slog.e(TAG,"Error occured when processing package " + pName,e);
      }
    }
  }
}
