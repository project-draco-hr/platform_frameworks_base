{
  mRecentTasks.remove(tr);
  tr.removedFromRecents(mTaskPersister);
  ComponentName component=tr.getBaseIntent().getComponent();
  if (component == null) {
    Slog.w(TAG,"No component for base intent of task: " + tr);
    return;
  }
  if (!killProcess) {
    return;
  }
  final String pkg=component.getPackageName();
  ArrayList<ProcessRecord> procsToKill=new ArrayList<ProcessRecord>();
  ArrayMap<String,SparseArray<ProcessRecord>> pmap=mProcessNames.getMap();
  for (int i=0; i < pmap.size(); i++) {
    SparseArray<ProcessRecord> uids=pmap.valueAt(i);
    for (int j=0; j < uids.size(); j++) {
      ProcessRecord proc=uids.valueAt(j);
      if (proc.userId != tr.userId) {
        continue;
      }
      if (proc == mHomeProcess) {
        continue;
      }
      if (!proc.pkgList.containsKey(pkg)) {
        continue;
      }
      for (int k=0; k < proc.activities.size(); k++) {
        TaskRecord otherTask=proc.activities.get(k).task;
        if (tr.taskId != otherTask.taskId && otherTask.inRecents) {
          return;
        }
      }
      procsToKill.add(proc);
    }
  }
  mServices.cleanUpRemovedTaskLocked(tr,component,new Intent(tr.getBaseIntent()));
  for (int i=0; i < procsToKill.size(); i++) {
    ProcessRecord pr=procsToKill.get(i);
    if (pr.setSchedGroup == Process.THREAD_GROUP_BG_NONINTERACTIVE) {
      pr.kill("remove task",true);
    }
 else {
      pr.waitingToKill="remove task";
    }
  }
}
