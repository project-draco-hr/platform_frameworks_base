{
  if (DEBUG_MU)   Slog.i(TAG_MU,"stopUserLocked userId=" + userId);
  if (mCurrentUserId == userId && mTargetUserId == UserHandle.USER_NULL) {
    return ActivityManager.USER_OP_IS_CURRENT;
  }
  final UserState uss=mStartedUsers.get(userId);
  if (uss == null) {
    if (callback != null) {
      mHandler.post(new Runnable(){
        @Override public void run(){
          try {
            callback.userStopped(userId);
          }
 catch (          RemoteException e) {
          }
        }
      }
);
    }
    return ActivityManager.USER_OP_SUCCESS;
  }
  if (callback != null) {
    uss.mStopCallbacks.add(callback);
  }
  if (uss.mState != UserState.STATE_STOPPING && uss.mState != UserState.STATE_SHUTDOWN) {
    uss.mState=UserState.STATE_STOPPING;
    updateStartedUserArrayLocked();
    long ident=Binder.clearCallingIdentity();
    try {
      final Intent stoppingIntent=new Intent(Intent.ACTION_USER_STOPPING);
      stoppingIntent.addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY);
      stoppingIntent.putExtra(Intent.EXTRA_USER_HANDLE,userId);
      stoppingIntent.putExtra(Intent.EXTRA_SHUTDOWN_USERSPACE_ONLY,true);
      final Intent shutdownIntent=new Intent(Intent.ACTION_SHUTDOWN);
      final IIntentReceiver shutdownReceiver=new IIntentReceiver.Stub(){
        @Override public void performReceive(        Intent intent,        int resultCode,        String data,        Bundle extras,        boolean ordered,        boolean sticky,        int sendingUser){
          finishUserStop(uss);
        }
      }
;
      final IIntentReceiver stoppingReceiver=new IIntentReceiver.Stub(){
        @Override public void performReceive(        Intent intent,        int resultCode,        String data,        Bundle extras,        boolean ordered,        boolean sticky,        int sendingUser){
synchronized (ActivityManagerService.this) {
            if (uss.mState != UserState.STATE_STOPPING) {
              return;
            }
            uss.mState=UserState.STATE_SHUTDOWN;
          }
          mBatteryStatsService.noteEvent(BatteryStats.HistoryItem.EVENT_USER_RUNNING_FINISH,Integer.toString(userId),userId);
          mSystemServiceManager.stopUser(userId);
          broadcastIntentLocked(null,null,shutdownIntent,null,shutdownReceiver,0,null,null,null,AppOpsManager.OP_NONE,null,true,false,MY_PID,Process.SYSTEM_UID,userId);
        }
      }
;
      broadcastIntentLocked(null,null,stoppingIntent,null,stoppingReceiver,0,null,null,INTERACT_ACROSS_USERS,AppOpsManager.OP_NONE,null,true,false,MY_PID,Process.SYSTEM_UID,UserHandle.USER_ALL);
    }
  finally {
      Binder.restoreCallingIdentity(ident);
    }
  }
  return ActivityManager.USER_OP_SUCCESS;
}
