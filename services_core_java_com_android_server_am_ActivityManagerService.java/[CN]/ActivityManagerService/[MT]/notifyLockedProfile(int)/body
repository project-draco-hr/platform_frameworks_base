{
  try {
    if (!AppGlobals.getPackageManager().isUidPrivileged(Binder.getCallingUid())) {
      throw new SecurityException("Only privileged app can call notifyLockedProfile");
    }
  }
 catch (  RemoteException ex) {
    throw new SecurityException("Fail to check is caller a privileged app",ex);
  }
synchronized (this) {
    if (mStackSupervisor.isFocusedUserLockedProfile()) {
      final long ident=Binder.clearCallingIdentity();
      try {
        final int currentUserId=mUserController.getCurrentUserIdLocked();
        final int taskId=(mFocusedActivity == null) ? -1 : mFocusedActivity.task.taskId;
        startHomeActivityLocked(currentUserId,"notifyLockedProfile");
        if (mUserController.isLockScreenDisabled(currentUserId)) {
          if (taskId != -1) {
            startActivityFromRecentsInner(taskId,null);
          }
        }
      }
  finally {
        Binder.restoreCallingIdentity(ident);
      }
    }
  }
}
