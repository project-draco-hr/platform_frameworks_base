{
  mRS=createRenderScript();
  int partCount=1024;
  mIntAlloc=mRS.allocationCreatePredefSized(RenderScript.ElementPredefined.USER_I32,10);
  mPartAlloc=mRS.allocationCreatePredefSized(RenderScript.ElementPredefined.USER_I32,partCount * 3 * 3);
  mVertAlloc=mRS.allocationCreatePredefSized(RenderScript.ElementPredefined.USER_I32,partCount * 5 + 1);
{
    Resources res=getResources();
    Drawable d=res.getDrawable(R.drawable.gadgets_clock_mp3);
    BitmapDrawable bd=(BitmapDrawable)d;
    Bitmap b=bd.getBitmap();
    mTexture=mRS.allocationCreateFromBitmap(b,RenderScript.ElementPredefined.RGB_565,true);
    mTexture.uploadToTexture(0);
  }
  mRS.programFragmentStoreBegin(null,null);
  mRS.programFragmentStoreBlendFunc(RenderScript.BlendSrcFunc.SRC_ALPHA,RenderScript.BlendDstFunc.ONE);
  mRS.programFragmentStoreDepthFunc(RenderScript.DepthFunc.ALWAYS);
  mPFS=mRS.programFragmentStoreCreate();
  mPFS.setName("MyBlend");
  mRS.contextBindProgramFragmentStore(mPFS);
  mRS.samplerBegin();
  mRS.samplerSet(RenderScript.SamplerParam.FILTER_MAG,RenderScript.SamplerValue.LINEAR);
  mRS.samplerSet(RenderScript.SamplerParam.FILTER_MIN,RenderScript.SamplerValue.LINEAR);
  mSampler=mRS.samplerCreate();
  mRS.programFragmentBegin(null,null);
  mPF=mRS.programFragmentCreate();
  mPF.setName("PgmFragParts");
  mRS.programFragmentBegin(null,null);
  mRS.programFragmentSetTexEnable(0,true);
  mPF2=mRS.programFragmentCreate();
  mRS.contextBindProgramFragment(mPF2);
  mPF2.bindTexture(mTexture,0);
  mPF2.bindSampler(mSampler,0);
  mPF2.setName("PgmFragBackground");
  mParams[0]=0;
  mParams[1]=partCount;
  mParams[2]=0;
  mParams[3]=0;
  mParams[4]=0;
  mParams[5]=mPartAlloc.getID();
  mParams[6]=mPF.getID();
  mParams[7]=mPF2.getID();
  mIntAlloc.data(mParams);
  int t2[]=new int[partCount * 4 * 3];
  for (int ct=0; ct < t2.length; ct++) {
    t2[ct]=0;
  }
  mPartAlloc.data(t2);
  mRS.scriptCBegin();
  mRS.scriptCSetClearColor(0.0f,0.0f,0.0f,1.0f);
  mRS.scriptCSetScript(getResources(),R.raw.fountain);
  mRS.scriptCSetRoot(true);
  mScript=mRS.scriptCCreate();
  mScript.bindAllocation(mIntAlloc,0);
  mScript.bindAllocation(mPartAlloc,1);
  mScript.bindAllocation(mVertAlloc,2);
  mRS.contextBindRootScript(mScript);
}
