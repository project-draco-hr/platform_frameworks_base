{
  try {
    PduCacheEntry cacheEntry;
synchronized (PDU_CACHE_INSTANCE) {
      if (PDU_CACHE_INSTANCE.isUpdating(uri)) {
        try {
          PDU_CACHE_INSTANCE.wait();
        }
 catch (        InterruptedException e) {
          Log.e(TAG,"updateParts: ",e);
        }
        cacheEntry=PDU_CACHE_INSTANCE.get(uri);
        if (cacheEntry != null) {
          ((MultimediaMessagePdu)cacheEntry.getPdu()).setBody(body);
        }
      }
      PDU_CACHE_INSTANCE.setUpdating(uri,true);
    }
    ArrayList<PduPart> toBeCreated=new ArrayList<PduPart>();
    HashMap<Uri,PduPart> toBeUpdated=new HashMap<Uri,PduPart>();
    int partsNum=body.getPartsNum();
    StringBuilder filter=new StringBuilder().append('(');
    for (int i=0; i < partsNum; i++) {
      PduPart part=body.getPart(i);
      Uri partUri=part.getDataUri();
      if ((partUri == null) || !partUri.getAuthority().startsWith("mms")) {
        toBeCreated.add(part);
      }
 else {
        toBeUpdated.put(partUri,part);
        if (filter.length() > 1) {
          filter.append(" AND ");
        }
        filter.append(Part._ID);
        filter.append("!=");
        DatabaseUtils.appendEscapedSQLString(filter,partUri.getLastPathSegment());
      }
    }
    filter.append(')');
    long msgId=ContentUris.parseId(uri);
    SqliteWrapper.delete(mContext,mContentResolver,Uri.parse(Mms.CONTENT_URI + "/" + msgId+ "/part"),filter.length() > 2 ? filter.toString() : null,null);
    for (    PduPart part : toBeCreated) {
      persistPart(part,msgId);
    }
    for (    Map.Entry<Uri,PduPart> e : toBeUpdated.entrySet()) {
      updatePart(e.getKey(),e.getValue());
    }
  }
  finally {
synchronized (PDU_CACHE_INSTANCE) {
      PDU_CACHE_INSTANCE.setUpdating(uri,false);
      PDU_CACHE_INSTANCE.notifyAll();
    }
  }
}
