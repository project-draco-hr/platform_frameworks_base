{
  final String upperEncoding=mCurrentEncoding.toUpperCase();
  if (upperEncoding.equals(VCardConstants.PARAM_ENCODING_QP)) {
    final long start=System.currentTimeMillis();
    final String result=getQuotedPrintable(propertyValue);
    final ArrayList<String> v=new ArrayList<String>();
    v.add(result);
    mInterpreter.propertyValues(v);
    mTimeHandleQuotedPrintable+=System.currentTimeMillis() - start;
  }
 else   if (upperEncoding.equals(VCardConstants.PARAM_ENCODING_BASE64) || upperEncoding.equals(VCardConstants.PARAM_ENCODING_B)) {
    final long start=System.currentTimeMillis();
    try {
      final ArrayList<String> arrayList=new ArrayList<String>();
      arrayList.add(getBase64(propertyValue));
      mInterpreter.propertyValues(arrayList);
    }
 catch (    OutOfMemoryError error) {
      Log.e(LOG_TAG,"OutOfMemoryError happened during parsing BASE64 data!");
      mInterpreter.propertyValues(null);
    }
    mTimeHandleBase64+=System.currentTimeMillis() - start;
  }
 else {
    if (!(upperEncoding.equals("7BIT") || upperEncoding.equals("8BIT") || upperEncoding.startsWith("X-"))) {
      Log.w(LOG_TAG,String.format("The encoding \"%s\" is unsupported by vCard %s",mCurrentEncoding,getVersionString()));
    }
    if (getVersion() == VCardConfig.VERSION_21) {
      StringBuilder builder=null;
      while (true) {
        final String nextLine=peekLine();
        if (!TextUtils.isEmpty(nextLine) && nextLine.charAt(0) == ' ' && !"END:VCARD".contains(nextLine.toUpperCase())) {
          getLine();
          if (builder == null) {
            builder=new StringBuilder();
            builder.append(propertyValue);
          }
          builder.append(nextLine.substring(1));
        }
 else {
          break;
        }
      }
      if (builder != null) {
        propertyValue=builder.toString();
      }
    }
    final long start=System.currentTimeMillis();
    ArrayList<String> v=new ArrayList<String>();
    v.add(maybeUnescapeText(propertyValue));
    mInterpreter.propertyValues(v);
    mTimeHandleMiscPropertyValue+=System.currentTimeMillis() - start;
  }
}
