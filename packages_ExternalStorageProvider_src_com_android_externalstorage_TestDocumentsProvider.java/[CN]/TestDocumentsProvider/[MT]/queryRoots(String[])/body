{
  Log.d(TAG,"Someone asked for our roots!");
  if (LAG)   lagUntilCanceled(null);
  if (ROOTS_WEDGE)   wedgeUntilCanceled(null);
  if (ROOTS_CRASH)   System.exit(12);
  if (ROOTS_REFRESH) {
    new AsyncTask<Void,Void,Void>(){
      @Override protected Void doInBackground(      Void... params){
        SystemClock.sleep(3000);
        Log.d(TAG,"Notifying that something changed!!");
        final Uri uri=DocumentsContract.buildRootsUri(mAuthority);
        getContext().getContentResolver().notifyChange(uri,null,false);
        return null;
      }
    }
.execute();
  }
  final MatrixCursor result=new MatrixCursor(resolveRootProjection(projection));
  final RowBuilder row=result.newRow();
  row.add(Root.COLUMN_ROOT_ID,MY_ROOT_ID);
  row.add(Root.COLUMN_FLAGS,Root.FLAG_SUPPORTS_RECENTS);
  row.add(Root.COLUMN_TITLE,"_Test title which is really long");
  row.add(Root.COLUMN_SUMMARY,SystemClock.elapsedRealtime() + " summary which is also super long text");
  row.add(Root.COLUMN_DOCUMENT_ID,MY_DOC_ID);
  row.add(Root.COLUMN_AVAILABLE_BYTES,1024);
  return result;
}
