{
  if (CHILD_WEDGE)   SystemClock.sleep(Integer.MAX_VALUE);
  if (CHILD_CRASH)   System.exit(12);
  final ContentResolver resolver=getContext().getContentResolver();
  final Uri notifyUri=DocumentsContract.buildDocumentUri("com.example.documents",parentDocumentId);
  CloudCursor result=new CloudCursor(resolveDocumentProjection(projection));
  result.setNotificationUri(resolver,notifyUri);
  includeFile(result,MY_DOC_NULL,0);
  includeFile(result,"localfile1",0);
  includeFile(result,"localfile2",Document.FLAG_SUPPORTS_THUMBNAIL);
  includeFile(result,"localfile3",0);
  includeFile(result,"localfile4",0);
synchronized (this) {
    CloudTask task=mTask != null ? mTask.get() : null;
    if (task == null) {
      Log.d(TAG,"No network task found; starting!");
      task=new CloudTask(resolver,notifyUri);
      mTask=new WeakReference<CloudTask>(task);
      new Thread(task).start();
      new Thread(){
        @Override public void run(){
          while (mTask.get() != null) {
            SystemClock.sleep(200);
            System.gc();
            System.runFinalization();
          }
          Log.d(TAG,"AHA! THE CLOUD TASK WAS GC'ED!");
        }
      }
.start();
    }
    if (task.includeIfFinished(result)) {
      result.extras.putString(DocumentsContract.EXTRA_INFO,"Everything Went Better Than Expected and this message is quite " + "long and verbose and maybe even too long");
      result.extras.putString(DocumentsContract.EXTRA_ERROR,"But then again, maybe our server ran into an error, which means " + "we're going to have a bad time");
    }
 else {
      result.extras.putBoolean(DocumentsContract.EXTRA_LOADING,true);
    }
    result.keepAlive=task;
    return result;
  }
}
