{
  String packageName=null;
  int userId=UserHandle.USER_CURRENT;
  for (String argument; (argument=nextArg()) != null; ) {
    if (ARGUMENT_USER.equals(argument)) {
      String userStr=nextArgRequired();
      if ("all".equals(userStr)) {
        userId=UserHandle.USER_ALL;
      }
 else       if ("current".equals(userStr)) {
        userId=UserHandle.USER_CURRENT;
      }
 else       if ("owner".equals(userStr) || "system".equals(userStr)) {
        userId=UserHandle.USER_SYSTEM;
      }
 else {
        userId=Integer.parseInt(nextArgRequired());
      }
    }
 else {
      if (packageName == null) {
        packageName=argument;
      }
 else {
        System.err.println("Error: Unsupported argument: " + argument);
        return;
      }
    }
  }
  if (userId == UserHandle.USER_CURRENT) {
    userId=ActivityManager.getCurrentUser();
  }
  final IAppOpsService appOpsService=IAppOpsService.Stub.asInterface(ServiceManager.getService(Context.APP_OPS_SERVICE));
  appOpsService.resetAllModes(userId,packageName);
  System.out.print("Reset all modes for: ");
  if (userId == UserHandle.USER_ALL) {
    System.out.print("all users");
  }
 else {
    System.out.print("user ");
    System.out.print(userId);
  }
  System.out.print(", ");
  if (packageName == null) {
    System.out.println("all packages");
  }
 else {
    System.out.print("package ");
    System.out.println(packageName);
  }
}
