{
  SpannableStringBuilder s=new SpannableStringBuilder(inFormat);
  int c;
  int count;
  int len=inFormat.length();
  for (int i=0; i < len; i+=count) {
    int temp;
    count=1;
    c=s.charAt(i);
    if (c == QUOTE) {
      count=appendQuotedText(s,i,len);
      len=s.length();
      continue;
    }
    while ((i + count < len) && (s.charAt(i + count) == c)) {
      count++;
    }
    String replacement;
switch (c) {
case AM_PM:
      replacement=DateUtils.getAMPMString(inDate.get(Calendar.AM_PM));
    break;
case CAPITAL_AM_PM:
  replacement=DateUtils.getAMPMString(inDate.get(Calendar.AM_PM));
break;
case DATE:
replacement=zeroPad(inDate.get(Calendar.DATE),count);
break;
case DAY:
temp=inDate.get(Calendar.DAY_OF_WEEK);
replacement=DateUtils.getDayOfWeekString(temp,count < 4 ? DateUtils.LENGTH_MEDIUM : DateUtils.LENGTH_LONG);
break;
case HOUR:
temp=inDate.get(Calendar.HOUR);
if (0 == temp) temp=12;
replacement=zeroPad(temp,count);
break;
case HOUR_OF_DAY:
replacement=zeroPad(inDate.get(Calendar.HOUR_OF_DAY),count);
break;
case MINUTE:
replacement=zeroPad(inDate.get(Calendar.MINUTE),count);
break;
case MONTH:
replacement=getMonthString(inDate,count);
break;
case SECONDS:
replacement=zeroPad(inDate.get(Calendar.SECOND),count);
break;
case TIME_ZONE:
replacement=getTimeZoneString(inDate,count);
break;
case YEAR:
replacement=getYearString(inDate,count);
break;
default :
replacement=null;
break;
}
if (replacement != null) {
s.replace(i,i + count,replacement);
count=replacement.length();
len=s.length();
}
}
if (inFormat instanceof Spanned) return new SpannedString(s);
 else return s.toString();
}
