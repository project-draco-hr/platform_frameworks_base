{
  boolean ret=true;
  int act=ev.getAction();
  if (act == ev.ACTION_UP) {
    ret=false;
  }
  float nx=ev.getX() / getWidth();
  float ny=ev.getY() / getHeight();
  mRender.setTouch(ret);
  if ((ny > 0.85f) || mControlMode) {
    mFlingMode=false;
    if ((nx > 0.2f) && (nx < 0.8f) || mControlMode) {
      if (act != ev.ACTION_UP) {
        float zoom=mMaxZoom;
        if (mControlMode) {
          if (!mZoomMode) {
            zoom=1.f;
          }
          float dx=nx - mFlingX;
          if ((ny < 0.9) && mZoomMode) {
            zoom=mMaxZoom - ((0.9f - ny) * 10.f);
            if (zoom < 1) {
              zoom=1;
              mZoomMode=false;
            }
            mOldColumn=mColumn;
          }
          mColumn+=dx * 4;
          if (zoom > 1.01f) {
            mColumn+=(mZoom - zoom) * (nx - 0.5f) * 4* zoom;
          }
        }
 else {
          mOldColumn=mColumn;
          mColumn=((float)mColumns) / 2;
          mControlMode=true;
          mZoomMode=true;
        }
        mZoom=zoom;
        mFlingX=nx;
        mRender.setZoom(zoom);
        if (mZoom < 1.01f) {
          computeSelection(nx,ny);
        }
      }
 else {
        mControlMode=false;
        mColumn=mOldColumn;
        mRender.setZoom(1.f);
        mRender.setSelected(-1);
      }
    }
 else {
    }
    setColumn(true);
  }
 else {
    if (act != ev.ACTION_UP) {
      if (mFlingMode) {
        mColumn+=(mFlingX - nx) * 4;
        setColumn(true);
      }
      mFlingMode=true;
      mFlingX=nx;
      mFlingY=ny;
    }
 else {
      mFlingMode=false;
    }
  }
  return ret;
}
