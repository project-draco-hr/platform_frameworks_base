{
  Set<String> trackIdSet=new HashSet<>();
  for (  TvTrackInfo track : tracks) {
    String trackId=track.getId();
    if (trackIdSet.contains(trackId)) {
      throw new IllegalArgumentException("redundant track ID: " + trackId);
    }
    trackIdSet.add(trackId);
  }
  trackIdSet.clear();
  final List<TvTrackInfo> tracksCopy=new ArrayList<>(tracks);
  executeOrPostRunnable(new Runnable(){
    @Override public void run(){
      try {
        if (DEBUG)         Log.d(TAG,"notifyTracksChanged");
        if (mSessionCallback != null) {
          mSessionCallback.onTracksChanged(tracksCopy);
        }
      }
 catch (      RemoteException e) {
        Log.w(TAG,"error in notifyTracksChanged",e);
      }
    }
  }
);
}
