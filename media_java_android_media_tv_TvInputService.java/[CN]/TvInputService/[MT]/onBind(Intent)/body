{
  return new ITvInputService.Stub(){
    @Override public void registerCallback(    ITvInputServiceCallback cb){
      if (cb != null) {
        mCallbacks.register(cb);
      }
    }
    @Override public void unregisterCallback(    ITvInputServiceCallback cb){
      if (cb != null) {
        mCallbacks.unregister(cb);
      }
    }
    @Override public void createSession(    InputChannel channel,    ITvInputSessionCallback cb,    String inputId){
      if (channel == null) {
        Log.w(TAG,"Creating session without input channel");
      }
      if (cb == null) {
        return;
      }
      SomeArgs args=SomeArgs.obtain();
      args.arg1=channel;
      args.arg2=cb;
      args.arg3=inputId;
      mHandler.obtainMessage(ServiceHandler.DO_CREATE_SESSION,args).sendToTarget();
    }
    @Override public void notifyHardwareAdded(    TvInputHardwareInfo hardwareInfo){
      mHandler.obtainMessage(ServiceHandler.DO_ADD_TV_INPUT_FROM_HARDWARE,hardwareInfo).sendToTarget();
    }
    @Override public void notifyHardwareRemoved(    int deviceId){
      mHandler.obtainMessage(ServiceHandler.DO_REMOVE_TV_INPUT_FROM_HARDWARE,deviceId,0).sendToTarget();
    }
  }
;
}
