{
  addUsersToUserManager(10,11,20,21);
{
    final OwnersTestable owners=new OwnersTestable(getContext(),dataDir);
    createLegacyFile(owners.getLegacyConfigFileWithTestOverride(),readAsset("OwnersTest/test02/input.xml"));
    owners.load();
    assertFalse(owners.getLegacyConfigFileWithTestOverride().exists());
    assertTrue(owners.getDeviceOwnerFileWithTestOverride().exists());
    assertFalse(owners.getProfileOwnerFileWithTestOverride(10).exists());
    assertFalse(owners.getProfileOwnerFileWithTestOverride(11).exists());
    assertFalse(owners.getProfileOwnerFileWithTestOverride(20).exists());
    assertFalse(owners.getProfileOwnerFileWithTestOverride(21).exists());
    assertTrue(owners.hasDeviceOwner());
    assertEquals(null,owners.getDeviceOwnerName());
    assertEquals("com.google.android.testdpc",owners.getDeviceOwnerPackageName());
    assertEquals(UserHandle.USER_SYSTEM,owners.getDeviceOwnerUserId());
    assertFalse(owners.hasDeviceInitializer());
    assertNull(owners.getSystemUpdatePolicy());
    assertEquals(0,owners.getProfileOwnerKeys().size());
  }
{
    final OwnersTestable owners=new OwnersTestable(getContext(),dataDir);
    owners.load();
    assertTrue(owners.hasDeviceOwner());
    assertEquals(null,owners.getDeviceOwnerName());
    assertEquals("com.google.android.testdpc",owners.getDeviceOwnerPackageName());
    assertEquals(UserHandle.USER_SYSTEM,owners.getDeviceOwnerUserId());
    assertFalse(owners.hasDeviceInitializer());
    assertNull(owners.getSystemUpdatePolicy());
    assertEquals(0,owners.getProfileOwnerKeys().size());
  }
}
