{
  if (WAIT_FOR_DEBUGGER)   Debug.waitForDebugger();
  StateMachineQuitNowTest smQuitNowTest=new StateMachineQuitNowTest("smQuitNowTest");
  smQuitNowTest.start();
  if (smQuitNowTest.isDbg())   Log.d(TAG,"testStateMachineQuitNow E");
synchronized (smQuitNowTest) {
    for (int i=1; i <= 6; i++) {
      smQuitNowTest.sendMessage(smQuitNowTest.obtainMessage(i));
    }
    try {
      smQuitNowTest.wait();
    }
 catch (    InterruptedException e) {
      Log.e(TAG,"testStateMachineQuitNow: exception while waiting " + e.getMessage());
    }
  }
  assertEquals(3,smQuitNowTest.getLogRecCount());
  LogRec lr;
  lr=smQuitNowTest.getLogRec(0);
  assertEquals(1,lr.getWhat());
  assertEquals(smQuitNowTest.mS1,lr.getState());
  assertEquals(smQuitNowTest.mS1,lr.getOriginalState());
  lr=smQuitNowTest.getLogRec(1);
  assertEquals(EXIT,lr.getInfo());
  assertEquals(smQuitNowTest.mS1,lr.getState());
  lr=smQuitNowTest.getLogRec(2);
  assertEquals(ON_QUITTING,lr.getInfo());
synchronized (smQuitNowTest.mWaitUntilTestDone) {
    smQuitNowTest.mWaitUntilTestDone.notifyAll();
  }
  if (smQuitNowTest.isDbg())   Log.d(TAG,"testStateMachineQuitNow X");
}
