{
  if (WAIT_FOR_DEBUGGER)   Debug.waitForDebugger();
  StateMachineQuitTest smQuitTest=new StateMachineQuitTest("smQuitTest");
  smQuitTest.start();
  if (smQuitTest.isDbg())   tlog("testStateMachineQuit E");
synchronized (smQuitTest) {
    for (int i=1; i <= 6; i++) {
      smQuitTest.sendMessage(smQuitTest.obtainMessage(i));
    }
    try {
      smQuitTest.wait();
    }
 catch (    InterruptedException e) {
      tloge("testStateMachineQuit: exception while waiting " + e.getMessage());
    }
  }
  dumpLogRecs(smQuitTest.mLogRecs);
  assertEquals(8,smQuitTest.mLogRecs.size());
  LogRec lr;
  Iterator<LogRec> itr=smQuitTest.mLogRecs.iterator();
  for (int i=1; i <= 6; i++) {
    lr=itr.next();
    assertEquals(i,lr.getWhat());
    assertEquals(smQuitTest.mS1,lr.getState());
    assertEquals(smQuitTest.mS1,lr.getOriginalState());
  }
  lr=itr.next();
  assertEquals(EXIT,lr.getInfo());
  assertEquals(smQuitTest.mS1,lr.getState());
  lr=itr.next();
  assertEquals(ON_QUITTING,lr.getInfo());
  if (smQuitTest.isDbg())   tlog("testStateMachineQuit X");
}
