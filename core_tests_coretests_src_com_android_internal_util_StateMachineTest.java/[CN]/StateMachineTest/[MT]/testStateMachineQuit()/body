{
  if (WAIT_FOR_DEBUGGER)   Debug.waitForDebugger();
  StateMachineQuitTest smQuitTest=new StateMachineQuitTest("smQuitTest");
  smQuitTest.start();
  if (smQuitTest.isDbg())   Log.d(TAG,"testStateMachineQuit E");
synchronized (smQuitTest) {
    for (int i=1; i <= 6; i++) {
      smQuitTest.sendMessage(smQuitTest.obtainMessage(i));
    }
    try {
      smQuitTest.wait();
    }
 catch (    InterruptedException e) {
      Log.e(TAG,"testStateMachineQuit: exception while waiting " + e.getMessage());
    }
  }
  assertEquals(8,smQuitTest.getLogRecCount());
  LogRec lr;
  for (int i=0; i < 6; i++) {
    lr=smQuitTest.getLogRec(i);
    assertEquals(i + 1,lr.getWhat());
    assertEquals(smQuitTest.mS1,lr.getState());
    assertEquals(smQuitTest.mS1,lr.getOriginalState());
  }
  lr=smQuitTest.getLogRec(6);
  assertEquals(EXIT,lr.getInfo());
  assertEquals(smQuitTest.mS1,lr.getState());
  lr=smQuitTest.getLogRec(7);
  assertEquals(ON_QUITTING,lr.getInfo());
synchronized (smQuitTest.mWaitUntilTestDone) {
    smQuitTest.mWaitUntilTestDone.notifyAll();
  }
  if (smQuitTest.isDbg())   Log.d(TAG,"testStateMachineQuit X");
}
