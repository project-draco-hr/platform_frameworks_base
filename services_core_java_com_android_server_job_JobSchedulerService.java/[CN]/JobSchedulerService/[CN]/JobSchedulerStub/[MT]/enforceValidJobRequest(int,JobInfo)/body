{
  final IPackageManager pm=AppGlobals.getPackageManager();
  final ComponentName service=job.getService();
  try {
    ServiceInfo si=pm.getServiceInfo(service,PackageManager.MATCH_DEBUG_TRIAGED_MISSING,UserHandle.getUserId(uid));
    if (si == null) {
      throw new IllegalArgumentException("No such service " + service);
    }
    if (si.applicationInfo.uid != uid) {
      throw new IllegalArgumentException("uid " + uid + " cannot schedule job in "+ service.getPackageName());
    }
    if (!JobService.PERMISSION_BIND.equals(si.permission)) {
      throw new IllegalArgumentException("Scheduled service " + service + " does not require android.permission.BIND_JOB_SERVICE permission");
    }
  }
 catch (  RemoteException e) {
  }
}
