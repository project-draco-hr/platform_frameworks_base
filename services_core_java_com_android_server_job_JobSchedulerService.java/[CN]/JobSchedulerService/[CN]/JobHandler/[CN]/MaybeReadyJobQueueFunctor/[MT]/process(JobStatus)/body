{
  if (isReadyToBeExecutedLocked(job)) {
    try {
      if (ActivityManagerNative.getDefault().getAppStartMode(job.getUid(),job.getJob().getService().getPackageName()) == ActivityManager.APP_START_MODE_DISABLED) {
        Slog.w(TAG,"Aborting job " + job.getUid() + ":"+ job.getJob().toString()+ " -- package not allowed to start");
        mHandler.obtainMessage(MSG_STOP_JOB,job).sendToTarget();
        return;
      }
    }
 catch (    RemoteException e) {
    }
    if (job.getNumFailures() > 0) {
      backoffCount++;
    }
    if (job.hasIdleConstraint()) {
      idleCount++;
    }
    if (job.hasConnectivityConstraint() || job.hasUnmeteredConstraint() || job.hasNotRoamingConstraint()) {
      connectivityCount++;
    }
    if (job.hasChargingConstraint()) {
      chargingCount++;
    }
    if (job.hasContentTriggerConstraint()) {
      contentCount++;
    }
    if (runnableJobs == null) {
      runnableJobs=new ArrayList<>();
    }
    runnableJobs.add(job);
  }
 else   if (areJobConstraintsNotSatisfiedLocked(job)) {
    stopJobOnServiceContextLocked(job,JobParameters.REASON_CONSTRAINTS_NOT_SATISFIED);
  }
}
