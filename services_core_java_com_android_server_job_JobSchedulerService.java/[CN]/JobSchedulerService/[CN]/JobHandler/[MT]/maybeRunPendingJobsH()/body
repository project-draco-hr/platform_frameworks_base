{
synchronized (mJobs) {
    Iterator<JobStatus> it=mPendingJobs.iterator();
    while (it.hasNext()) {
      JobStatus nextPending=it.next();
      JobServiceContext availableContext=null;
      for (      JobServiceContext jsc : mActiveServices) {
        final JobStatus running=jsc.getRunningJob();
        if (running != null && running.matches(nextPending.getUid(),nextPending.getJobId())) {
          availableContext=null;
          break;
        }
        if (jsc.isAvailable()) {
          availableContext=jsc;
        }
      }
      if (availableContext != null) {
        if (!availableContext.executeRunnableJob(nextPending)) {
          if (DEBUG) {
            Slog.d(TAG,"Error executing " + nextPending);
          }
          mJobs.remove(nextPending);
        }
        it.remove();
      }
    }
  }
}
