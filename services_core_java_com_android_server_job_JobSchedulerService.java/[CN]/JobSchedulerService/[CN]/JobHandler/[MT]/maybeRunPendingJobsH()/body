{
synchronized (mJobs) {
    if (mDeviceIdleMode) {
      return;
    }
    Iterator<JobStatus> it=mPendingJobs.iterator();
    if (DEBUG) {
      Slog.d(TAG,"pending queue: " + mPendingJobs.size() + " jobs.");
    }
    while (it.hasNext()) {
      JobStatus nextPending=it.next();
      JobServiceContext availableContext=null;
      for (int i=0; i < mActiveServices.size(); i++) {
        JobServiceContext jsc=mActiveServices.get(i);
        final JobStatus running=jsc.getRunningJob();
        if (running != null && running.matches(nextPending.getUid(),nextPending.getJobId())) {
          availableContext=null;
          break;
        }
        if (jsc.isAvailable()) {
          availableContext=jsc;
        }
      }
      if (availableContext != null) {
        if (DEBUG) {
          Slog.d(TAG,"About to run job " + nextPending.getJob().getService().toString());
        }
        if (!availableContext.executeRunnableJob(nextPending)) {
          if (DEBUG) {
            Slog.d(TAG,"Error executing " + nextPending);
          }
          mJobs.remove(nextPending);
        }
        it.remove();
      }
    }
  }
}
