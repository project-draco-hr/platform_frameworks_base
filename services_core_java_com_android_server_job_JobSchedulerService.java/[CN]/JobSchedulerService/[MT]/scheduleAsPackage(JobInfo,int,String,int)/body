{
  JobStatus jobStatus=new JobStatus(job,uId,packageName,userId);
  try {
    if (ActivityManagerNative.getDefault().getAppStartMode(uId,job.getService().getPackageName()) == ActivityManager.APP_START_MODE_DISABLED) {
      Slog.w(TAG,"Not scheduling job " + uId + ":"+ job.toString()+ " -- package not allowed to start");
      return JobScheduler.RESULT_FAILURE;
    }
  }
 catch (  RemoteException e) {
  }
  if (DEBUG)   Slog.d(TAG,"SCHEDULE: " + jobStatus.toShortString());
  JobStatus toCancel;
synchronized (mJobs) {
    toCancel=mJobs.getJobByUidAndJobId(uId,job.getId());
  }
  startTrackingJob(jobStatus,toCancel);
  if (toCancel != null) {
    cancelJobImpl(toCancel);
  }
  mHandler.obtainMessage(MSG_CHECK_JOB).sendToTarget();
  return JobScheduler.RESULT_SUCCESS;
}
