{
  if (DISABLE_TOUCH_INTERACTION) {
    return false;
  }
  acquireVelocityTrackerAndAddMovement(ev);
  if (getChildCount() <= 0)   return super.onInterceptTouchEvent(ev);
  final int action=ev.getAction();
  if ((action == MotionEvent.ACTION_MOVE) && (mTouchState == TOUCH_STATE_SCROLLING)) {
    return true;
  }
switch (action & MotionEvent.ACTION_MASK) {
case MotionEvent.ACTION_MOVE:
{
      if (mActivePointerId != INVALID_POINTER) {
        determineScrollingStart(ev);
        break;
      }
    }
case MotionEvent.ACTION_DOWN:
{
    final float x=ev.getX();
    final float y=ev.getY();
    mDownMotionX=x;
    mLastMotionX=x;
    mLastMotionY=y;
    mLastMotionXRemainder=0;
    mTotalMotionX=0;
    mActivePointerId=ev.getPointerId(0);
    mAllowLongPress=true;
    final int xDist=Math.abs(mScroller.getFinalX() - mScroller.getCurrX());
    final boolean finishedScrolling=(mScroller.isFinished() || xDist < mTouchSlop);
    if (finishedScrolling) {
      mTouchState=TOUCH_STATE_REST;
      mScroller.abortAnimation();
    }
 else {
      mTouchState=TOUCH_STATE_SCROLLING;
    }
    if (mTouchState != TOUCH_STATE_PREV_PAGE && mTouchState != TOUCH_STATE_NEXT_PAGE) {
      if (getChildCount() > 0) {
        if (hitsPreviousPage(x,y)) {
          mTouchState=TOUCH_STATE_PREV_PAGE;
        }
 else         if (hitsNextPage(x,y)) {
          mTouchState=TOUCH_STATE_NEXT_PAGE;
        }
      }
    }
    break;
  }
case MotionEvent.ACTION_UP:
case MotionEvent.ACTION_CANCEL:
mTouchState=TOUCH_STATE_REST;
mAllowLongPress=false;
mActivePointerId=INVALID_POINTER;
releaseVelocityTracker();
break;
case MotionEvent.ACTION_POINTER_UP:
onSecondaryPointerUp(ev);
releaseVelocityTracker();
break;
}
return mTouchState != TOUCH_STATE_REST;
}
