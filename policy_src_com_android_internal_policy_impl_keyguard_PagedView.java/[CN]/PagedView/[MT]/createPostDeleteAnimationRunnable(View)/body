{
  return new Runnable(){
    @Override public void run(){
      int dragViewIndex=indexOfChild(dragView);
      getVisiblePages(mTempVisiblePagesRange);
      boundByReorderablePages(true,mTempVisiblePagesRange);
      boolean isLastWidgetPage=(mTempVisiblePagesRange[0] == mTempVisiblePagesRange[1]);
      boolean slideFromLeft=(isLastWidgetPage || dragViewIndex > mTempVisiblePagesRange[0]);
      if (slideFromLeft) {
        snapToPageImmediately(dragViewIndex - 1);
      }
      int firstIndex=(isLastWidgetPage ? 0 : mTempVisiblePagesRange[0]);
      int lastIndex=Math.min(mTempVisiblePagesRange[1],getPageCount() - 1);
      int lowerIndex=(slideFromLeft ? firstIndex : dragViewIndex + 1);
      int upperIndex=(slideFromLeft ? dragViewIndex - 1 : lastIndex);
      ArrayList<Animator> animations=new ArrayList<Animator>();
      for (int i=lowerIndex; i <= upperIndex; ++i) {
        View v=getChildAt(i);
        int oldX=0;
        int newX=0;
        if (slideFromLeft) {
          if (i == 0) {
            oldX=getViewportOffsetX() + getChildOffset(i) - getChildWidth(i) - mPageSpacing;
          }
 else {
            oldX=getViewportOffsetX() + getChildOffset(i - 1);
          }
          newX=getViewportOffsetX() + getChildOffset(i);
        }
 else {
          oldX=getChildOffset(i) - getChildOffset(i - 1);
          newX=0;
        }
        AnimatorSet anim=(AnimatorSet)v.getTag();
        if (anim != null) {
          anim.cancel();
        }
        v.setAlpha(Math.max(v.getAlpha(),0.01f));
        v.setTranslationX(oldX - newX);
        anim=new AnimatorSet();
        anim.playTogether(ObjectAnimator.ofFloat(v,"translationX",0f),ObjectAnimator.ofFloat(v,"alpha",1f));
        animations.add(anim);
        v.setTag(anim);
      }
      AnimatorSet slideAnimations=new AnimatorSet();
      slideAnimations.playTogether(animations);
      slideAnimations.setDuration(DELETE_SLIDE_IN_SIDE_PAGE_DURATION);
      slideAnimations.addListener(new AnimatorListenerAdapter(){
        @Override public void onAnimationEnd(        Animator animation){
          final Runnable onCompleteRunnable=new Runnable(){
            @Override public void run(){
              mDeferringForDelete=false;
              onEndReordering();
            }
          }
;
          zoomIn(onCompleteRunnable);
        }
      }
);
      slideAnimations.start();
      removeView(dragView);
      onRemoveView(dragView,true);
    }
  }
;
}
