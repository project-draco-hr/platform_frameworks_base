{
  if (smsb == null) {
    Log.e(TAG,"dispatchMessage: message is null");
    return Intents.RESULT_SMS_GENERIC_ERROR;
  }
  SmsMessage sms=(SmsMessage)smsb;
  if (sms.isTypeZero()) {
    Log.d(TAG,"Received short message type 0, Don't display or store it. Send Ack");
    return Intents.RESULT_SMS_HANDLED;
  }
  if (sms.isUsimDataDownload()) {
    UsimServiceTable ust=mPhone.getUsimServiceTable();
    if (ust != null && ust.isAvailable(UsimServiceTable.UsimService.DATA_DL_VIA_SMS_PP)) {
      Log.d(TAG,"Received SMS-PP data download, sending to UICC.");
      return mDataDownloadHandler.startDataDownload(sms);
    }
 else {
      Log.d(TAG,"DATA_DL_VIA_SMS_PP service not available, storing message to UICC.");
      String smsc=IccUtils.bytesToHexString(PhoneNumberUtils.networkPortionToCalledPartyBCDWithLength(sms.getServiceCenterAddress()));
      mCm.writeSmsToSim(SmsManager.STATUS_ON_ICC_UNREAD,smsc,IccUtils.bytesToHexString(sms.getPdu()),obtainMessage(EVENT_WRITE_SMS_COMPLETE));
      return Activity.RESULT_OK;
    }
  }
  if (mSmsReceiveDisabled) {
    Log.d(TAG,"Received short message on device which doesn't support " + "SMS service. Ignored.");
    return Intents.RESULT_SMS_HANDLED;
  }
  boolean handled=false;
  if (sms.isMWISetMessage()) {
    mPhone.setVoiceMessageWaiting(1,-1);
    handled=sms.isMwiDontStore();
    if (false) {
      Log.d(TAG,"Received voice mail indicator set SMS shouldStore=" + !handled);
    }
  }
 else   if (sms.isMWIClearMessage()) {
    mPhone.setVoiceMessageWaiting(1,0);
    handled=sms.isMwiDontStore();
    if (false) {
      Log.d(TAG,"Received voice mail indicator clear SMS shouldStore=" + !handled);
    }
  }
  if (handled) {
    return Intents.RESULT_SMS_HANDLED;
  }
  if (!mStorageMonitor.isStorageAvailable() && sms.getMessageClass() != MessageClass.CLASS_0) {
    return Intents.RESULT_SMS_OUT_OF_MEMORY;
  }
  return dispatchNormalMessage(smsb);
}
