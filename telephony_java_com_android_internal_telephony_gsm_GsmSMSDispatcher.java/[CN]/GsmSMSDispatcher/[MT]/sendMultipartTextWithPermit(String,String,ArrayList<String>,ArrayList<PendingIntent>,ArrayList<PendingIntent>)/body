{
  PendingIntent sentIntent=null;
  PendingIntent deliveryIntent=null;
  int ss=mPhone.getServiceState().getState();
  if (ss != ServiceState.STATE_IN_SERVICE) {
    for (int i=0, count=parts.size(); i < count; i++) {
      if (sentIntents != null && sentIntents.size() > i) {
        sentIntent=sentIntents.get(i);
      }
      SmsTracker tracker=SmsTrackerFactory(null,sentIntent,null);
      handleNotInService(ss,tracker);
    }
    return;
  }
  int ref=++sConcatenatedRef & 0xff;
  for (int i=0, count=parts.size(); i < count; i++) {
    byte[] data=new byte[3];
    data[0]=(byte)ref;
    data[1]=(byte)count;
    data[2]=(byte)(i + 1);
    SmsHeader header=new SmsHeader();
    header.add(new SmsHeader.Element(SmsHeader.CONCATENATED_8_BIT_REFERENCE,data));
    if (sentIntents != null && sentIntents.size() > i) {
      sentIntent=sentIntents.get(i);
    }
    if (deliveryIntents != null && deliveryIntents.size() > i) {
      deliveryIntent=deliveryIntents.get(i);
    }
    SmsMessage.SubmitPdu pdus=SmsMessage.getSubmitPdu(scAddress,destinationAddress,parts.get(i),deliveryIntent != null,header.toByteArray());
    HashMap<String,Object> map=new HashMap<String,Object>();
    map.put("smsc",pdus.encodedScAddress);
    map.put("pdu",pdus.encodedMessage);
    SmsTracker tracker=SmsTrackerFactory(map,sentIntent,deliveryIntent);
    sendSms(tracker);
  }
}
