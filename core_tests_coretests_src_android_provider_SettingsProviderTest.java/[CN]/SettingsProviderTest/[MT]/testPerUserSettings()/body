{
  UserManager um=(UserManager)getContext().getSystemService(Context.USER_SERVICE);
  ContentResolver r=getContext().getContentResolver();
  assertTrue(findUser(um,UserHandle.USER_OWNER));
  UserInfo user=um.createUser("TestUser1",UserInfo.FLAG_GUEST);
  assertTrue(user != null);
  try {
    final String TEST_KEY="test_setting";
    final int SELF_VALUE=40;
    final int OTHER_VALUE=27;
    Settings.System.putInt(r,TEST_KEY,SELF_VALUE);
    Settings.System.putIntForUser(r,TEST_KEY,OTHER_VALUE,user.id);
    int myValue=Settings.System.getInt(r,TEST_KEY,0);
    int otherValue=Settings.System.getIntForUser(r,TEST_KEY,0,user.id);
    assertTrue("Running as user " + UserHandle.myUserId() + " and reading/writing as user "+ user.id+ ", expected to read "+ SELF_VALUE+ " but got "+ myValue,myValue == SELF_VALUE);
    assertTrue("Running as user " + UserHandle.myUserId() + " and reading/writing as user "+ user.id+ ", expected to read "+ OTHER_VALUE+ " but got "+ otherValue,otherValue == OTHER_VALUE);
  }
  finally {
    um.removeUser(user.id);
  }
}
