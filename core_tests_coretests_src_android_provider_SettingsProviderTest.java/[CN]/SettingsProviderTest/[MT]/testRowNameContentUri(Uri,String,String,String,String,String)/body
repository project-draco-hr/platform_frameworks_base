{
  ContentResolver r=getContext().getContentResolver();
  ContentValues v=new ContentValues();
  v.put(nameField,testKey);
  v.put(valueField,testValue);
  r.insert(table,v);
  Uri uri=Uri.parse(table.toString() + "/" + testKey);
  Cursor c=r.query(uri,null,null,null,null);
  try {
    assertTrue(c.moveToNext());
    assertEquals(testKey,c.getString(c.getColumnIndex(nameField)));
    assertEquals(testValue,c.getString(c.getColumnIndex(valueField)));
    assertFalse(c.moveToNext());
  }
  finally {
    c.close();
  }
  try {
    r.query(uri,null,"1",null,null);
    fail("IllegalArgumentException expected");
  }
 catch (  IllegalArgumentException e) {
  }
  c=r.query(table,null,"name='" + testKey + "'",null,null);
  try {
    assertTrue(c.moveToNext());
    assertEquals(testKey,c.getString(c.getColumnIndex(nameField)));
    assertEquals(testValue,c.getString(c.getColumnIndex(valueField)));
    assertFalse(c.moveToNext());
  }
  finally {
    c.close();
  }
  v=new ContentValues();
  v.put(nameField,testKey);
  v.put(valueField,secondTestValue);
  assertEquals(1,r.update(uri,v,null,null));
  c=r.query(uri,null,null,null,null);
  try {
    assertTrue(c.moveToNext());
    assertEquals(testKey,c.getString(c.getColumnIndex(nameField)));
    assertEquals(secondTestValue,c.getString(c.getColumnIndex(valueField)));
    assertFalse(c.moveToNext());
  }
  finally {
    c.close();
  }
}
