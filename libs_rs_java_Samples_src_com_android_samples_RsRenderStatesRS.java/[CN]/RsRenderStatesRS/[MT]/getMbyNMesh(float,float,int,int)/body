{
  Mesh.TriangleMeshBuilder tmb=new Mesh.TriangleMeshBuilder(mRS,2,Mesh.TriangleMeshBuilder.TEXTURE_0);
  for (int y=0; y <= hResolution; y++) {
    final float normalizedY=(float)y / hResolution;
    final float yOffset=(normalizedY - 0.5f) * height;
    for (int x=0; x <= wResolution; x++) {
      float normalizedX=(float)x / wResolution;
      float xOffset=(normalizedX - 0.5f) * width;
      tmb.setTexture(normalizedX,normalizedY);
      tmb.addVertex(xOffset,yOffset);
    }
  }
  for (int y=0; y < hResolution; y++) {
    final int curY=y * (wResolution + 1);
    final int belowY=(y + 1) * (wResolution + 1);
    for (int x=0; x < wResolution; x++) {
      int curV=curY + x;
      int belowV=belowY + x;
      tmb.addTriangle(curV,belowV,curV + 1);
      tmb.addTriangle(belowV,belowV + 1,curV + 1);
    }
  }
  return tmb.create(true);
}
