{
  Sampler.Builder bs=new Sampler.Builder(mRS);
  bs.setMinification(Sampler.Value.LINEAR);
  bs.setMagnification(Sampler.Value.LINEAR);
  bs.setWrapS(Sampler.Value.WRAP);
  bs.setWrapT(Sampler.Value.WRAP);
  mLinearWrap=bs.create();
  mLinearClamp=Sampler.CLAMP_LINEAR(mRS);
  mNearestClamp=Sampler.CLAMP_NEAREST(mRS);
  mMipLinearWrap=Sampler.WRAP_LINEAR_MIP_LINEAR(mRS);
  bs=new Sampler.Builder(mRS);
  bs.setMinification(Sampler.Value.LINEAR_MIP_LINEAR);
  bs.setMagnification(Sampler.Value.LINEAR);
  bs.setWrapS(Sampler.Value.WRAP);
  bs.setWrapT(Sampler.Value.WRAP);
  bs.setAnisotropy(8.0f);
  mMipLinearAniso8=bs.create();
  bs.setAnisotropy(15.0f);
  mMipLinearAniso15=bs.create();
  mScript.set_gLinearClamp(mLinearClamp);
  mScript.set_gLinearWrap(mLinearWrap);
  mScript.set_gMipLinearWrap(mMipLinearWrap);
  mScript.set_gMipLinearAniso8(mMipLinearAniso8);
  mScript.set_gMipLinearAniso15(mMipLinearAniso15);
  mScript.set_gNearestClamp(mNearestClamp);
}
