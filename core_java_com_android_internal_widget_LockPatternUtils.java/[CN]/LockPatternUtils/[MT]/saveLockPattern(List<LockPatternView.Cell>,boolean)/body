{
  final byte[] hash=LockPatternUtils.patternToHash(pattern);
  try {
    getLockSettings().setLockPattern(hash,getCurrentOrCallingUserId());
    DevicePolicyManager dpm=getDevicePolicyManager();
    KeyStore keyStore=KeyStore.getInstance();
    if (pattern != null) {
      keyStore.password(patternToString(pattern));
      setBoolean(PATTERN_EVER_CHOSEN_KEY,true);
      if (!isFallback) {
        deleteGallery();
        setLong(PASSWORD_TYPE_KEY,DevicePolicyManager.PASSWORD_QUALITY_SOMETHING);
        dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_SOMETHING,pattern.size(),0,0,0,0,0,0,getCurrentOrCallingUserId());
      }
 else {
        setLong(PASSWORD_TYPE_KEY,DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK);
        setLong(PASSWORD_TYPE_ALTERNATE_KEY,DevicePolicyManager.PASSWORD_QUALITY_SOMETHING);
        finishBiometricWeak();
        dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK,0,0,0,0,0,0,0,getCurrentOrCallingUserId());
      }
    }
 else {
      if (keyStore.isEmpty()) {
        keyStore.reset();
      }
      dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED,0,0,0,0,0,0,0,getCurrentOrCallingUserId());
    }
  }
 catch (  RemoteException re) {
    Log.e(TAG,"Couldn't save lock pattern " + re);
  }
}
