{
  try {
    int userId=getCurrentOrCallingUserId();
    getLockSettings().setLockPattern(patternToString(pattern),userId);
    DevicePolicyManager dpm=getDevicePolicyManager();
    if (pattern != null) {
      if (userId == UserHandle.USER_OWNER && LockPatternUtils.isDeviceEncryptionEnabled()) {
        final boolean required=isCredentialRequiredToDecrypt(true);
        if (!required) {
          clearEncryptionPassword();
        }
 else {
          String stringPattern=patternToString(pattern);
          updateEncryptionPassword(StorageManager.CRYPT_TYPE_PATTERN,stringPattern);
        }
      }
      setBoolean(PATTERN_EVER_CHOSEN_KEY,true);
      if (!isFallback) {
        deleteGallery();
        setLong(PASSWORD_TYPE_KEY,DevicePolicyManager.PASSWORD_QUALITY_SOMETHING);
        dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_SOMETHING,pattern.size(),0,0,0,0,0,0,userId);
      }
 else {
        setLong(PASSWORD_TYPE_KEY,DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK);
        setLong(PASSWORD_TYPE_ALTERNATE_KEY,DevicePolicyManager.PASSWORD_QUALITY_SOMETHING);
        finishBiometricWeak();
        dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK,0,0,0,0,0,0,0,userId);
      }
    }
 else {
      dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED,0,0,0,0,0,0,0,userId);
    }
    onAfterChangingPassword();
  }
 catch (  RemoteException re) {
    Log.e(TAG,"Couldn't save lock pattern " + re);
  }
}
