{
  final byte[] hash=LockPatternUtils.patternToHash(pattern);
  try {
    RandomAccessFile raf=new RandomAccessFile(sLockPatternFilename,"rw");
    if (pattern == null) {
      raf.setLength(0);
    }
 else {
      raf.write(hash,0,hash.length);
    }
    raf.close();
    DevicePolicyManager dpm=getDevicePolicyManager();
    KeyStore keyStore=KeyStore.getInstance();
    if (pattern != null) {
      keyStore.password(patternToString(pattern));
      setBoolean(PATTERN_EVER_CHOSEN_KEY,true);
      if (!isFallback) {
        deleteGallery();
        setLong(PASSWORD_TYPE_KEY,DevicePolicyManager.PASSWORD_QUALITY_SOMETHING);
      }
 else {
        setLong(PASSWORD_TYPE_KEY,DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK);
        setLong(PASSWORD_TYPE_ALTERNATE_KEY,DevicePolicyManager.PASSWORD_QUALITY_SOMETHING);
        finishBiometricWeak();
      }
      dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_SOMETHING,pattern.size(),0,0,0,0,0,0);
    }
 else {
      if (keyStore.isEmpty()) {
        keyStore.reset();
      }
      dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED,0,0,0,0,0,0,0);
    }
  }
 catch (  FileNotFoundException fnfe) {
    Log.e(TAG,"Unable to save lock pattern to " + sLockPatternFilename);
  }
catch (  IOException ioe) {
    Log.e(TAG,"Unable to save lock pattern to " + sLockPatternFilename);
  }
}
