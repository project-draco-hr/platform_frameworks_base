{
  try {
    if (pattern == null || pattern.size() < MIN_LOCK_PATTERN_SIZE) {
      throw new IllegalArgumentException("pattern must not be null and at least " + MIN_LOCK_PATTERN_SIZE + " dots long.");
    }
    getLockSettings().setLockPattern(patternToString(pattern),savedPattern,userId);
    DevicePolicyManager dpm=getDevicePolicyManager();
    if (userId == UserHandle.USER_SYSTEM && LockPatternUtils.isDeviceEncryptionEnabled()) {
      if (!shouldEncryptWithCredentials(true)) {
        clearEncryptionPassword();
      }
 else {
        String stringPattern=patternToString(pattern);
        updateEncryptionPassword(StorageManager.CRYPT_TYPE_PATTERN,stringPattern);
      }
    }
    setBoolean(PATTERN_EVER_CHOSEN_KEY,true,userId);
    setLong(PASSWORD_TYPE_KEY,DevicePolicyManager.PASSWORD_QUALITY_SOMETHING,userId);
    dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_SOMETHING,pattern.size(),0,0,0,0,0,0,userId);
    onAfterChangingPassword(userId);
  }
 catch (  RemoteException re) {
    Log.e(TAG,"Couldn't save lock pattern " + re);
  }
}
