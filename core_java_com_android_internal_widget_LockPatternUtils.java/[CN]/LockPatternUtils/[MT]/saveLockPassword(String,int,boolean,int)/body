{
  try {
    getLockSettings().setLockPassword(password,userHandle);
    DevicePolicyManager dpm=getDevicePolicyManager();
    if (password != null) {
      int computedQuality=computePasswordQuality(password);
      if (userHandle == UserHandle.USER_OWNER) {
        int type=computedQuality == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC ? StorageManager.CRYPT_TYPE_PIN : StorageManager.CRYPT_TYPE_PASSWORD;
        updateEncryptionPassword(type,password);
      }
      if (!isFallback) {
        deleteGallery();
        setLong(PASSWORD_TYPE_KEY,Math.max(quality,computedQuality),userHandle);
        if (computedQuality != DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED) {
          int letters=0;
          int uppercase=0;
          int lowercase=0;
          int numbers=0;
          int symbols=0;
          int nonletter=0;
          for (int i=0; i < password.length(); i++) {
            char c=password.charAt(i);
            if (c >= 'A' && c <= 'Z') {
              letters++;
              uppercase++;
            }
 else             if (c >= 'a' && c <= 'z') {
              letters++;
              lowercase++;
            }
 else             if (c >= '0' && c <= '9') {
              numbers++;
              nonletter++;
            }
 else {
              symbols++;
              nonletter++;
            }
          }
          dpm.setActivePasswordState(Math.max(quality,computedQuality),password.length(),letters,uppercase,lowercase,numbers,symbols,nonletter,userHandle);
        }
 else {
          dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED,0,0,0,0,0,0,0,userHandle);
        }
      }
 else {
        setLong(PASSWORD_TYPE_KEY,DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK,userHandle);
        setLong(PASSWORD_TYPE_ALTERNATE_KEY,Math.max(quality,computedQuality),userHandle);
        finishBiometricWeak();
        dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK,0,0,0,0,0,0,0,userHandle);
      }
      String passwordHistory=getString(PASSWORD_HISTORY_KEY,userHandle);
      if (passwordHistory == null) {
        passwordHistory=new String();
      }
      int passwordHistoryLength=getRequestedPasswordHistoryLength();
      if (passwordHistoryLength == 0) {
        passwordHistory="";
      }
 else {
        byte[] hash=passwordToHash(password);
        passwordHistory=new String(hash) + "," + passwordHistory;
        passwordHistory=passwordHistory.substring(0,Math.min(hash.length * passwordHistoryLength + passwordHistoryLength - 1,passwordHistory.length()));
      }
      setString(PASSWORD_HISTORY_KEY,passwordHistory,userHandle);
    }
 else {
      if (userHandle == UserHandle.USER_OWNER) {
        updateEncryptionPassword(StorageManager.CRYPT_TYPE_DEFAULT,password);
      }
      dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED,0,0,0,0,0,0,0,userHandle);
    }
  }
 catch (  RemoteException re) {
    Log.e(TAG,"Unable to save lock password " + re);
  }
}
