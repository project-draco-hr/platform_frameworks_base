{
  if (v == mTreeButton) {
    if (mAssistVisualizer != null) {
      mAssistVisualizer.logTree();
    }
  }
 else   if (v == mTextButton) {
    if (mAssistVisualizer != null) {
      mAssistVisualizer.logText();
    }
  }
 else   if (v == mStartButton) {
    mState=STATE_LAUNCHING;
    updateState();
    startVoiceActivity(mStartIntent);
  }
 else   if (v == mConfirmButton) {
    if (mPendingRequest instanceof ConfirmationRequest) {
      ((ConfirmationRequest)mPendingRequest).sendConfirmationResult(true,null);
      mPendingRequest=null;
      mState=STATE_LAUNCHING;
    }
 else     if (mPendingRequest instanceof PickOptionRequest) {
      PickOptionRequest pick=(PickOptionRequest)mPendingRequest;
      int numReturn=mPendingOptions.length / 2;
      if (numReturn <= 0) {
        numReturn=1;
      }
      VoiceInteractor.PickOptionRequest.Option[] picked=new VoiceInteractor.PickOptionRequest.Option[numReturn];
      for (int i=0; i < picked.length; i++) {
        picked[i]=mPendingOptions[i * 2];
      }
      mPendingOptions=picked;
      if (picked.length <= 1) {
        pick.sendPickOptionResult(picked,null);
        mPendingRequest=null;
        mState=STATE_LAUNCHING;
      }
 else {
        pick.sendIntermediatePickOptionResult(picked,null);
        updatePickText();
      }
    }
 else     if (mPendingRequest instanceof CommandRequest) {
      Bundle result=new Bundle();
      result.putString("key","a result!");
      ((CommandRequest)mPendingRequest).sendResult(result);
      mPendingRequest=null;
      mState=STATE_LAUNCHING;
    }
  }
 else   if (v == mAbortButton && mPendingRequest instanceof AbortVoiceRequest) {
    ((AbortVoiceRequest)mPendingRequest).sendAbortResult(null);
    mPendingRequest=null;
  }
 else   if (v == mCompleteButton && mPendingRequest instanceof CompleteVoiceRequest) {
    ((CompleteVoiceRequest)mPendingRequest).sendCompleteResult(null);
    mPendingRequest=null;
  }
 else   if (v == mScreenshot) {
    if (mFullScreenshot.getVisibility() != View.VISIBLE) {
      mFullScreenshot.setVisibility(View.VISIBLE);
    }
 else {
      mFullScreenshot.setVisibility(View.INVISIBLE);
    }
  }
  updateState();
}
