{
  super(c,attrs);
  final TypedArray a=c.obtainStyledAttributes(attrs,R.styleable.MultiPaneChallengeLayout_Layout);
  centerWithinArea=a.getFloat(R.styleable.MultiPaneChallengeLayout_Layout_layout_centerWithinArea,0);
  childType=a.getInt(R.styleable.MultiPaneChallengeLayout_Layout_layout_childType,CHILD_TYPE_NONE);
  gravity=a.getInt(R.styleable.MultiPaneChallengeLayout_Layout_layout_gravity,Gravity.NO_GRAVITY);
  maxWidth=a.getDimensionPixelSize(R.styleable.MultiPaneChallengeLayout_Layout_layout_maxWidth,-1);
  maxHeight=a.getDimensionPixelSize(R.styleable.MultiPaneChallengeLayout_Layout_layout_maxHeight,-1);
  if (gravity == Gravity.NO_GRAVITY) {
    if (parent.mOrientation == HORIZONTAL) {
switch (childType) {
case CHILD_TYPE_WIDGET:
        gravity=Gravity.LEFT | Gravity.CENTER_VERTICAL;
      break;
case CHILD_TYPE_CHALLENGE:
    gravity=Gravity.RIGHT | Gravity.CENTER_VERTICAL;
  break;
case CHILD_TYPE_USER_SWITCHER:
gravity=Gravity.BOTTOM | Gravity.CENTER_HORIZONTAL;
break;
}
}
 else {
switch (childType) {
case CHILD_TYPE_WIDGET:
gravity=Gravity.TOP | Gravity.CENTER_HORIZONTAL;
break;
case CHILD_TYPE_CHALLENGE:
gravity=Gravity.BOTTOM | Gravity.CENTER_HORIZONTAL;
break;
case CHILD_TYPE_USER_SWITCHER:
gravity=Gravity.BOTTOM | Gravity.CENTER_HORIZONTAL;
break;
}
}
}
a.recycle();
}
