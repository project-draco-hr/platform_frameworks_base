{
  when(mMockPrefs.getInt("version",-1)).thenReturn(-1);
  LauncherActivityInfo activity1=mock(LauncherActivityInfo.class);
  when(activity1.getComponentName()).thenReturn(new ComponentName("package1","class1"));
  LauncherActivityInfo activity2=mock(LauncherActivityInfo.class);
  when(activity2.getComponentName()).thenReturn(new ComponentName("package2","class2"));
  List<LauncherActivityInfo> apps=new ArrayList<LauncherActivityInfo>();
  apps.add(activity1);
  apps.add(activity2);
  when(mMockLauncherApps.getActivityList(anyString(),any(UserHandle.class))).thenReturn(apps);
  mModel.initialize();
  assertEquals(2,mModel.getAppCount());
  assertEquals("package1/class1",mModel.getApp(0).getComponentName().flattenToString());
  assertEquals(-1L,mModel.getApp(0).getUserSerialNumber());
  assertEquals("package2/class2",mModel.getApp(1).getComponentName().flattenToString());
  assertEquals(-1L,mModel.getApp(1).getUserSerialNumber());
}
