{
  when(mMockPrefs.getInt("222|app_count",-1)).thenReturn(-1);
  ActivityInfo ai1=new ActivityInfo();
  ai1.packageName="package1";
  ai1.name="class1";
  ActivityInfo ai2=new ActivityInfo();
  ai2.packageName="package2";
  ai2.name="class2";
  ResolveInfo ri1=new ResolveInfo();
  ri1.activityInfo=ai1;
  ResolveInfo ri2=new ResolveInfo();
  ri2.activityInfo=ai2;
  when(mMockPackageManager.queryIntentActivitiesAsUser(any(Intent.class),eq(0),eq(2))).thenReturn(Arrays.asList(ri1,ri2));
  mModel.setCurrentUser(2);
  assertEquals(2,mModel.getAppCount());
  assertEquals("package1/class1",mModel.getApp(0).getComponentName().flattenToString());
  assertEquals(new UserHandle(2),mModel.getApp(0).getUser());
  assertEquals("package2/class2",mModel.getApp(1).getComponentName().flattenToString());
  assertEquals(new UserHandle(2),mModel.getApp(1).getUser());
  InOrder order=inOrder(mMockEdit);
  order.verify(mMockEdit).apply();
  order.verify(mMockEdit).putInt("222|app_count",2);
  order.verify(mMockEdit).putString("222|app_0","package1/class1");
  order.verify(mMockEdit).putLong("222|app_user_0",222L);
  order.verify(mMockEdit).putString("222|app_1","package2/class2");
  order.verify(mMockEdit).putLong("222|app_user_1",222L);
  order.verify(mMockEdit).apply();
  verifyNoMoreInteractions(mMockEdit);
}
