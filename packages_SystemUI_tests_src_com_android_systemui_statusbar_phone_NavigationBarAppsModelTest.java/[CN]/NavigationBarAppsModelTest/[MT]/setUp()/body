{
  super.setUp();
  System.setProperty("dexmaker.dexcache",mContext.getCacheDir().getPath());
  Thread.currentThread().setContextClassLoader(getClass().getClassLoader());
  final Context context=mock(Context.class);
  mMockPackageManager=mock(PackageManager.class);
  mMockIPackageManager=mock(IPackageManager.class);
  mMockPrefs=mock(SharedPreferences.class);
  mMockEdit=mock(SharedPreferences.Editor.class);
  mMockUserManager=mock(UserManager.class);
  when(context.getSharedPreferences("com.android.systemui.navbarapps",Context.MODE_PRIVATE)).thenReturn(mMockPrefs);
  when(context.getSystemService(Context.USER_SERVICE)).thenReturn(mMockUserManager);
  when(context.getPackageManager()).thenReturn(mMockPackageManager);
  setContext(context);
  when(mMockUserManager.getUsers()).thenReturn(new ArrayList<UserInfo>());
  when(mMockPrefs.getInt("version",-1)).thenReturn(3);
  when(mMockPrefs.edit()).thenReturn(mMockEdit);
  when(mMockUserManager.getSerialNumberForUser(new UserHandle(2))).thenReturn(222L);
  when(mMockUserManager.getSerialNumberForUser(new UserHandle(4))).thenReturn(444L);
  when(mMockUserManager.getSerialNumberForUser(new UserHandle(5))).thenReturn(555L);
  when(mMockUserManager.getUserForSerialNumber(222L)).thenReturn(new UserHandle(2));
  when(mMockUserManager.getUserForSerialNumber(444L)).thenReturn(new UserHandle(4));
  when(mMockUserManager.getUserForSerialNumber(555L)).thenReturn(new UserHandle(5));
  mModel=new NavigationBarAppsModel(context){
    @Override protected IPackageManager getPackageManager(){
      return mMockIPackageManager;
    }
  }
;
}
