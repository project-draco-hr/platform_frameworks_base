{
  if (match == null)   return false;
  if (type == PATTERN_LITERAL) {
    return pattern.equals(match);
  }
  if (type == PATTERN_PREFIX) {
    return match.startsWith(pattern);
  }
 else   if (type != PATTERN_SIMPLE_GLOB) {
    return false;
  }
  final int NP=pattern.length();
  if (NP <= 0) {
    return match.length() <= 0;
  }
  final int NM=match.length();
  int ip=0, im=0;
  char nextChar=pattern.charAt(0);
  while ((ip < NP) && (im < NM)) {
    char c=nextChar;
    ip++;
    nextChar=ip < NP ? pattern.charAt(ip) : 0;
    final boolean escaped=(c == '\\');
    if (escaped) {
      c=nextChar;
      ip++;
      nextChar=ip < NP ? pattern.charAt(ip) : 0;
    }
    if (nextChar == '*') {
      if (!escaped && c == '.') {
        if (ip >= (NP - 1)) {
          return true;
        }
        ip++;
        nextChar=pattern.charAt(ip);
        if (nextChar == '\\') {
          ip++;
          nextChar=ip < NP ? pattern.charAt(ip) : 0;
        }
        do {
          if (match.charAt(im) == nextChar) {
            break;
          }
          im++;
        }
 while (im < NM);
        if (im == NM) {
          return false;
        }
        ip++;
        nextChar=ip < NP ? pattern.charAt(ip) : 0;
        im++;
      }
 else {
        do {
          if (match.charAt(im) != c) {
            break;
          }
          im++;
        }
 while (im < NM);
        ip++;
        nextChar=ip < NP ? pattern.charAt(ip) : 0;
      }
    }
 else {
      if (c != '.' && match.charAt(im) != c)       return false;
      im++;
    }
  }
  if (ip >= NP && im >= NM) {
    return true;
  }
  if (ip == NP - 2 && pattern.charAt(ip) == '.' && pattern.charAt(ip + 1) == '*') {
    return true;
  }
  return false;
}
