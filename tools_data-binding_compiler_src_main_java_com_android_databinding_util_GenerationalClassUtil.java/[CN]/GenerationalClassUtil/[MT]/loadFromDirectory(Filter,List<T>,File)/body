{
  Collection<File> files=FileUtils.listFiles(directory,new IOFileFilter(){
    @Override public boolean accept(    File file){
      return filter.accept(file.getName());
    }
    @Override public boolean accept(    File dir,    String name){
      return filter.accept(name);
    }
  }
,TrueFileFilter.INSTANCE);
  for (  File file : files) {
    InputStream inputStream=null;
    try {
      inputStream=FileUtils.openInputStream(file);
      T item=fromInputStream(result,inputStream);
      L.d("loaded item %s from file",item);
      if (item != null) {
        result.add(item);
      }
    }
 catch (    IOException e) {
      L.e(e,"Could not merge in Bindables from %s",file.getAbsolutePath());
    }
catch (    ClassNotFoundException e) {
      L.e(e,"Could not read Binding properties intermediate file. %s",file.getAbsolutePath());
    }
 finally {
      IOUtils.closeQuietly(inputStream);
    }
  }
}
