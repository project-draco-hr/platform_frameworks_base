{
  HashSet<String> existing=parseStateFile(oldState);
  for (  ApplicationInfo app : mAllApps) {
    String packName=app.packageName;
    if (!existing.contains(packName)) {
      try {
        PackageInfo info=mPackageManager.getPackageInfo(packName,PackageManager.GET_SIGNATURES);
        byte[] sigs=flattenSignatureArray(info.signatures);
        if (DEBUG) {
          CRC32 crc=new CRC32();
          crc.update(sigs);
          Log.i(TAG,"+ flat sig array for " + packName + " : "+ crc.getValue());
        }
        data.writeEntityHeader(packName,sigs.length);
        data.writeEntityData(sigs,sigs.length);
      }
 catch (      NameNotFoundException e) {
        existing.add(packName);
      }
catch (      IOException e) {
        Log.e(TAG,"Unable to write package backup data file!");
        return;
      }
    }
 else {
      if (!existing.remove(packName)) {
        Log.d(TAG,"*** failed to remove " + packName + " from package set!");
      }
    }
  }
  for (  String app : existing) {
    try {
      data.writeEntityHeader(app,-1);
    }
 catch (    IOException e) {
      Log.e(TAG,"Unable to write package deletions!");
      return;
    }
  }
  writeStateFile(mAllApps,newState);
}
