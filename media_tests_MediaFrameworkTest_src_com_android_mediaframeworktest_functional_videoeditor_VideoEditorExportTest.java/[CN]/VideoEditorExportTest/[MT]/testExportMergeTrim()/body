{
  final String videoItemFilename1=INPUT_FILE_PATH + "H263_profile0_176x144_15fps_256kbps_AACLC_32kHz_128kbps_s_0_26.3gp";
  final String imageItemFilename1=INPUT_FILE_PATH + "IMG_1600x1200.jpg";
  final String videoItemFilename2=INPUT_FILE_PATH + "H264_BP_640x480_12.5fps_256kbps_AACLC_16khz_24kbps_s_0_26.mp4";
  final String videoItemFilename3=INPUT_FILE_PATH + "MPEG4_SP_720x480_30fps_280kbps_AACLC_48kHz_96kbps_s_0_21.mp4";
  final String imageItemFilename2=INPUT_FILE_PATH + "IMG_176x144.jpg";
  final String imageItemFilename3=INPUT_FILE_PATH + "IMG_640x480.jpg";
  final String outFilename=mVideoEditorHelper.createRandomFile(mVideoEditor.getPath() + "/") + ".3gp";
  final MediaVideoItem mediaVideoItem1=mVideoEditorHelper.createMediaItem(mVideoEditor,"m1",videoItemFilename1,MediaItem.RENDERING_MODE_BLACK_BORDER);
  mediaVideoItem1.setExtractBoundaries(2000,7000);
  mVideoEditor.addMediaItem(mediaVideoItem1);
  final MediaImageItem mediaImageItem2=mVideoEditorHelper.createMediaItem(mVideoEditor,"m2",imageItemFilename1,3000,MediaItem.RENDERING_MODE_BLACK_BORDER);
  mVideoEditor.addMediaItem(mediaImageItem2);
  final MediaVideoItem mediaVideoItem3=mVideoEditorHelper.createMediaItem(mVideoEditor,"m3",videoItemFilename2,MediaItem.RENDERING_MODE_BLACK_BORDER);
  mediaVideoItem3.setExtractBoundaries(0,2000);
  mVideoEditor.addMediaItem(mediaVideoItem3);
  final MediaVideoItem mediaVideoItem4=mVideoEditorHelper.createMediaItem(mVideoEditor,"m4",videoItemFilename3,MediaItem.RENDERING_MODE_BLACK_BORDER);
  mediaVideoItem4.setExtractBoundaries(mediaVideoItem4.getDuration() - 5000,mediaVideoItem4.getDuration());
  mVideoEditor.addMediaItem(mediaVideoItem4);
  final MediaImageItem mediaImageItem5=mVideoEditorHelper.createMediaItem(mVideoEditor,"m5",imageItemFilename2,4000,MediaItem.RENDERING_MODE_BLACK_BORDER);
  mVideoEditor.addMediaItem(mediaImageItem5);
  final MediaImageItem mediaImageItem6=mVideoEditorHelper.createMediaItem(mVideoEditor,"m6",imageItemFilename3,2000,MediaItem.RENDERING_MODE_BLACK_BORDER);
  mVideoEditor.addMediaItem(mediaImageItem6);
  mVideoEditor.generatePreview(new MediaProcessingProgressListener(){
    public void onProgress(    Object item,    int action,    int progress){
    }
  }
);
  try {
    final int[] progressUpdate=new int[100];
    mVideoEditor.export(outFilename,MediaProperties.HEIGHT_720,MediaProperties.BITRATE_800K,new ExportProgressListener(){
      int i=0;
      public void onProgress(      VideoEditor ve,      String outFileName,      int progress){
        progressUpdate[i++]=progress;
      }
    }
);
    mVideoEditorHelper.checkProgressCBValues(progressUpdate);
  }
 catch (  Exception e) {
    assertTrue("Error in Export" + e.toString(),false);
  }
  final long storyBoardDuration=mediaVideoItem1.getTimelineDuration() + mediaImageItem2.getDuration() + mediaVideoItem3.getTimelineDuration()+ mediaVideoItem4.getTimelineDuration()+ mediaImageItem5.getDuration()+ mediaImageItem6.getDuration();
  mVideoEditorHelper.validateExport(mVideoEditor,outFilename,MediaProperties.HEIGHT_720,0,storyBoardDuration,MediaProperties.VCODEC_H264,MediaProperties.ACODEC_AAC_LC);
  mVideoEditorHelper.checkDeleteExistingFile(outFilename);
}
