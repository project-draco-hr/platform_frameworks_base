{
  float[][] schmidtQuasiNorm=new float[maxN + 1][];
  schmidtQuasiNorm[0]=new float[]{1.0f};
  for (int n=1; n <= maxN; n++) {
    schmidtQuasiNorm[n]=new float[n + 1];
    schmidtQuasiNorm[n][0]=schmidtQuasiNorm[n - 1][0] * (2 * n - 1) / (float)n;
    for (int m=1; m <= n; m++) {
      schmidtQuasiNorm[n][m]=schmidtQuasiNorm[n][m - 1] * (float)Math.sqrt((n - m + 1) * (m == 1 ? 2 : 1) / (float)(n + m));
    }
  }
  return schmidtQuasiNorm;
}
