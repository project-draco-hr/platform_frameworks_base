{
  if (klass == null) {
    throw new UnsupportedOperationException();
  }
  if (boolean.class.equals(klass)) {
    return BOOLEAN;
  }
  if (byte.class.equals(klass)) {
    return BYTE;
  }
  if (short.class.equals(klass)) {
    return SHORT;
  }
  if (int.class.equals(klass)) {
    return INT;
  }
  if (long.class.equals(klass)) {
    return LONG;
  }
  if (char.class.equals(klass)) {
    return CHAR;
  }
  if (float.class.equals(klass)) {
    return FLOAT;
  }
  if (double.class.equals(klass)) {
    return DOUBLE;
  }
  if (void.class.equals(klass)) {
    return VOID;
  }
  if (Object.class.isAssignableFrom(klass)) {
    return CLASS_PREFIX + klass.getCanonicalName().replace('.','/') + CLASS_SUFFIX;
  }
  if (Array.class.isAssignableFrom(klass)) {
    return ARRAY + getDescription(klass.getComponentType());
  }
  UnsupportedOperationException ex=new UnsupportedOperationException("cannot understand type " + klass.toString() + ", kind:");
  L.e(ex,"cannot create JNI type for %s",klass.getCanonicalName());
  throw ex;
}
