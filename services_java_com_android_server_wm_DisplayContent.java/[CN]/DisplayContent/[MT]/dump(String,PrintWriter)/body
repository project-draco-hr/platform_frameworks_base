{
  pw.print(prefix);
  pw.print("Display: mDisplayId=");
  pw.println(mDisplayId);
  final String subPrefix="  " + prefix;
  pw.print(subPrefix);
  pw.print("init=");
  pw.print(mInitialDisplayWidth);
  pw.print("x");
  pw.print(mInitialDisplayHeight);
  pw.print(" ");
  pw.print(mInitialDisplayDensity);
  pw.print("dpi");
  if (mInitialDisplayWidth != mBaseDisplayWidth || mInitialDisplayHeight != mBaseDisplayHeight || mInitialDisplayDensity != mBaseDisplayDensity) {
    pw.print(" base=");
    pw.print(mBaseDisplayWidth);
    pw.print("x");
    pw.print(mBaseDisplayHeight);
    pw.print(" ");
    pw.print(mBaseDisplayDensity);
    pw.print("dpi");
  }
  pw.print(" cur=");
  pw.print(mDisplayInfo.logicalWidth);
  pw.print("x");
  pw.print(mDisplayInfo.logicalHeight);
  pw.print(" app=");
  pw.print(mDisplayInfo.appWidth);
  pw.print("x");
  pw.print(mDisplayInfo.appHeight);
  pw.print(" rng=");
  pw.print(mDisplayInfo.smallestNominalAppWidth);
  pw.print("x");
  pw.print(mDisplayInfo.smallestNominalAppHeight);
  pw.print("-");
  pw.print(mDisplayInfo.largestNominalAppWidth);
  pw.print("x");
  pw.println(mDisplayInfo.largestNominalAppHeight);
  pw.print(subPrefix);
  pw.print("layoutNeeded=");
  pw.println(layoutNeeded);
  int ndx=numTokens();
  if (ndx > 0) {
    pw.println();
    pw.println("  Application tokens in Z order:");
    for (int taskNdx=mTasks.size() - 1; taskNdx >= 0; --taskNdx) {
      AppTokenList tokens=mTasks.get(taskNdx).mAppTokens;
      for (int tokenNdx=tokens.size() - 1; tokenNdx >= 0; --tokenNdx) {
        final AppWindowToken wtoken=tokens.get(tokenNdx);
        pw.print("  App #");
        pw.print(ndx--);
        pw.print(' ');
        pw.print(wtoken);
        pw.println(":");
        wtoken.dump(pw,"    ");
      }
    }
  }
  if (mExitingTokens.size() > 0) {
    pw.println();
    pw.println("  Exiting tokens:");
    for (int i=mExitingTokens.size() - 1; i >= 0; i--) {
      WindowToken token=mExitingTokens.get(i);
      pw.print("  Exiting #");
      pw.print(i);
      pw.print(' ');
      pw.print(token);
      pw.println(':');
      token.dump(pw,"    ");
    }
  }
  if (mExitingAppTokens.size() > 0) {
    pw.println();
    pw.println("  Exiting application tokens:");
    for (int i=mExitingAppTokens.size() - 1; i >= 0; i--) {
      WindowToken token=mExitingAppTokens.get(i);
      pw.print("  Exiting App #");
      pw.print(i);
      pw.print(' ');
      pw.print(token);
      pw.println(':');
      token.dump(pw,"    ");
    }
  }
  pw.println();
}
