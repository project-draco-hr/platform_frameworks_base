{
  mAm=ActivityManagerNative.getDefault();
  if (mAm == null) {
    System.err.println(NO_SYSTEM_ERROR_CODE);
    throw new AndroidException("Can't connect to activity manager; is the system running?");
  }
  String op=nextArgRequired();
  if (op.equals("start")) {
    runStart();
  }
 else   if (op.equals("startservice")) {
    runStartService();
  }
 else   if (op.equals("stopservice")) {
    runStopService();
  }
 else   if (op.equals("force-stop")) {
    runForceStop();
  }
 else   if (op.equals("kill")) {
    runKill();
  }
 else   if (op.equals("kill-all")) {
    runKillAll();
  }
 else   if (op.equals("instrument")) {
    runInstrument();
  }
 else   if (op.equals("broadcast")) {
    sendBroadcast();
  }
 else   if (op.equals("profile")) {
    runProfile();
  }
 else   if (op.equals("dumpheap")) {
    runDumpHeap();
  }
 else   if (op.equals("set-debug-app")) {
    runSetDebugApp();
  }
 else   if (op.equals("clear-debug-app")) {
    runClearDebugApp();
  }
 else   if (op.equals("set-watch-heap")) {
    runSetWatchHeap();
  }
 else   if (op.equals("clear-watch-heap")) {
    runClearWatchHeap();
  }
 else   if (op.equals("bug-report")) {
    runBugReport();
  }
 else   if (op.equals("monitor")) {
    runMonitor();
  }
 else   if (op.equals("hang")) {
    runHang();
  }
 else   if (op.equals("restart")) {
    runRestart();
  }
 else   if (op.equals("idle-maintenance")) {
    runIdleMaintenance();
  }
 else   if (op.equals("screen-compat")) {
    runScreenCompat();
  }
 else   if (op.equals("package-importance")) {
    runPackageImportance();
  }
 else   if (op.equals("to-uri")) {
    runToUri(0);
  }
 else   if (op.equals("to-intent-uri")) {
    runToUri(Intent.URI_INTENT_SCHEME);
  }
 else   if (op.equals("to-app-uri")) {
    runToUri(Intent.URI_ANDROID_APP_SCHEME);
  }
 else   if (op.equals("switch-user")) {
    runSwitchUser();
  }
 else   if (op.equals("start-user")) {
    runStartUserInBackground();
  }
 else   if (op.equals("stop-user")) {
    runStopUser();
  }
 else   if (op.equals("stack")) {
    runStack();
  }
 else   if (op.equals("task")) {
    runTask();
  }
 else   if (op.equals("get-config")) {
    runGetConfig();
  }
 else   if (op.equals("set-inactive")) {
    runSetInactive();
  }
 else   if (op.equals("get-inactive")) {
    runGetInactive();
  }
 else   if (op.equals("send-trim-memory")) {
    runSendTrimMemory();
  }
 else {
    showError("Error: unknown command '" + op + "'");
  }
}
