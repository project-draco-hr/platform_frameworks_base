{
  String profileFile=null;
  boolean start=false;
  boolean wall=false;
  int profileType=0;
  String process=null;
  String cmd=nextArgRequired();
  if ("looper".equals(cmd)) {
    cmd=nextArgRequired();
    profileType=1;
  }
  if ("start".equals(cmd)) {
    start=true;
    wall="--wall".equals(nextOption());
    process=nextArgRequired();
  }
 else   if ("stop".equals(cmd)) {
    process=nextArgRequired();
  }
 else {
    process=cmd;
    cmd=nextArgRequired();
    if ("start".equals(cmd)) {
      start=true;
    }
 else     if (!"stop".equals(cmd)) {
      throw new IllegalArgumentException("Profile command " + process + " not valid");
    }
  }
  ParcelFileDescriptor fd=null;
  if (start) {
    profileFile=nextArgRequired();
    try {
      fd=ParcelFileDescriptor.open(new File(profileFile),ParcelFileDescriptor.MODE_CREATE | ParcelFileDescriptor.MODE_TRUNCATE | ParcelFileDescriptor.MODE_READ_WRITE);
    }
 catch (    FileNotFoundException e) {
      System.err.println("Error: Unable to open file: " + profileFile);
      return;
    }
  }
  try {
    if (wall) {
      String props=SystemProperties.get("dalvik.vm.extra-opts");
      if (props == null || !props.contains("-Xprofile:wallclock")) {
        props=props + " -Xprofile:wallclock";
      }
    }
 else     if (start) {
    }
    if (!mAm.profileControl(process,start,profileFile,fd,profileType)) {
      wall=false;
      throw new AndroidException("PROFILE FAILED on process " + process);
    }
  }
  finally {
    if (!wall) {
    }
  }
}
