{
  Intent intent=makeIntent();
  System.out.println("Starting: " + intent);
  intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
  IActivityManager.WaitResult result=null;
  int res;
  if (mWaitOption) {
    result=mAm.startActivityAndWait(null,intent,intent.getType(),null,0,null,null,0,false,mDebugOption);
    res=result.result;
  }
 else {
    res=mAm.startActivity(null,intent,intent.getType(),null,0,null,null,0,false,mDebugOption);
  }
  PrintStream out=mWaitOption ? System.out : System.err;
  boolean launched=false;
switch (res) {
case IActivityManager.START_SUCCESS:
    launched=true;
  break;
case IActivityManager.START_SWITCHES_CANCELED:
launched=true;
out.println("Warning: Activity not started because the " + " current activity is being kept for the user.");
break;
case IActivityManager.START_DELIVERED_TO_TOP:
launched=true;
out.println("Warning: Activity not started, intent has " + "been delivered to currently running " + "top-most instance.");
break;
case IActivityManager.START_RETURN_INTENT_TO_CALLER:
launched=true;
out.println("Warning: Activity not started because intent " + "should be handled by the caller");
break;
case IActivityManager.START_TASK_TO_FRONT:
launched=true;
out.println("Warning: Activity not started, its current " + "task has been brought to the front");
break;
case IActivityManager.START_INTENT_NOT_RESOLVED:
out.println("Error: Activity not started, unable to " + "resolve " + intent.toString());
break;
case IActivityManager.START_CLASS_NOT_FOUND:
out.println(NO_CLASS_ERROR_CODE);
out.println("Error: Activity class " + intent.getComponent().toShortString() + " does not exist.");
break;
case IActivityManager.START_FORWARD_AND_REQUEST_CONFLICT:
out.println("Error: Activity not started, you requested to " + "both forward and receive its result");
break;
case IActivityManager.START_PERMISSION_DENIED:
out.println("Error: Activity not started, you do not " + "have permission to access it.");
break;
default :
out.println("Error: Activity not started, unknown error code " + res);
break;
}
if (mWaitOption && launched) {
if (result == null) {
result=new IActivityManager.WaitResult();
result.who=intent.getComponent();
}
System.out.println("Status: " + (result.timeout ? "timeout" : "ok"));
if (result.who != null) {
System.out.println("Activity: " + result.who.flattenToShortString());
}
if (result.thisTime >= 0) {
System.out.println("ThisTime: " + result.thisTime);
}
if (result.totalTime >= 0) {
System.out.println("TotalTime: " + result.totalTime);
}
System.out.println("Complete");
}
}
