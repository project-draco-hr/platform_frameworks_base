{
  final ActivityOptions opts=ActivityOptions.makeBasic();
  if (bounds != null) {
    opts.setBounds(bounds.isEmpty() ? null : bounds);
  }
  final ActivityOptions.OnAnimationStartedListener animStartedListener;
  final IAppTransitionAnimationSpecsFuture transitionFuture;
  if (task.thumbnail != null && task.thumbnail.getWidth() > 0 && task.thumbnail.getHeight() > 0) {
    transitionFuture=getAppTransitionFuture(task,stackView,destinationStack);
    animStartedListener=new ActivityOptions.OnAnimationStartedListener(){
      @Override public void onAnimationStarted(){
        EventBus.getDefault().send(new CancelEnterRecentsWindowAnimationEvent(task));
        if (lockToTask) {
          mHandler.postDelayed(mStartScreenPinningRunnable,350);
        }
      }
    }
;
  }
 else {
    transitionFuture=null;
    animStartedListener=null;
  }
  if (taskView == null) {
    startTaskActivity(stack,task,taskView,opts,transitionFuture,animStartedListener);
  }
 else {
    if (task.group != null && !task.group.isFrontMostTask(task)) {
      stackView.startLaunchTaskAnimation(taskView,new Runnable(){
        @Override public void run(){
          startTaskActivity(stack,task,taskView,opts,transitionFuture,animStartedListener);
        }
      }
,lockToTask);
    }
 else {
      stackView.startLaunchTaskAnimation(taskView,null,lockToTask);
      startTaskActivity(stack,task,taskView,opts,transitionFuture,animStartedListener);
    }
  }
}
