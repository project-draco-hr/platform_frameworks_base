{
  final int targetStackId=destinationStack != INVALID_STACK_ID ? destinationStack : task.key.stackId;
  if (!StackId.useAnimationSpecForAppTransition(targetStackId)) {
    return null;
  }
  TaskView taskView=stackView.getChildViewForTask(task);
  TaskStackLayoutAlgorithm stackLayout=stackView.getStackAlgorithm();
  Rect offscreenTaskRect=new Rect();
  stackLayout.getFrontOfStackTransform().rect.round(offscreenTaskRect);
  List<AppTransitionAnimationSpec> specs=new ArrayList<>();
  if (targetStackId == FULLSCREEN_WORKSPACE_STACK_ID || targetStackId == DOCKED_STACK_ID || targetStackId == INVALID_STACK_ID) {
    if (taskView == null) {
      specs.add(composeOffscreenAnimationSpec(task,offscreenTaskRect));
    }
 else {
      mTmpTransform.fillIn(taskView);
      stackLayout.transformToScreenCoordinates(mTmpTransform,null);
      AppTransitionAnimationSpec spec=composeAnimationSpec(stackView,taskView,mTmpTransform,true);
      if (spec != null) {
        specs.add(spec);
      }
    }
    return specs;
  }
  TaskStack stack=stackView.getStack();
  ArrayList<Task> tasks=stack.getStackTasks();
  int taskCount=tasks.size();
  for (int i=taskCount - 1; i >= 0; i--) {
    Task t=tasks.get(i);
    if (t.isFreeformTask() || targetStackId == FREEFORM_WORKSPACE_STACK_ID) {
      TaskView tv=stackView.getChildViewForTask(t);
      if (tv == null) {
        specs.add(composeOffscreenAnimationSpec(t,offscreenTaskRect));
      }
 else {
        mTmpTransform.fillIn(taskView);
        stackLayout.transformToScreenCoordinates(mTmpTransform,null);
        AppTransitionAnimationSpec spec=composeAnimationSpec(stackView,tv,mTmpTransform,true);
        if (spec != null) {
          specs.add(spec);
        }
      }
    }
  }
  return specs;
}
