{
  String[] tokens=supplicantEvent.split(" ");
  if (tokens.length < 3) {
    throw new IllegalArgumentException("Malformed supplicant event");
  }
  if (tokens[0].startsWith("P2P-GROUP")) {
    mInterface=tokens[1];
    mIsGroupOwner=tokens[2].equals("GO");
    for (    String token : tokens) {
      String[] nameValue=token.split("=");
      if (nameValue.length != 2)       continue;
      if (nameValue[0].equals("ssid")) {
        mNetworkName=nameValue[1];
        continue;
      }
      if (nameValue[0].equals("freq")) {
        try {
          mChannel=Integer.parseInt(nameValue[1]);
        }
 catch (        NumberFormatException e) {
          mChannel=0;
        }
        continue;
      }
      if (nameValue[0].equals("psk")) {
        mPsk=nameValue[1];
        continue;
      }
      if (nameValue[0].equals("passphrase")) {
        mPassphrase=nameValue[1];
        continue;
      }
      if (nameValue[0].equals("go_dev_addr")) {
        mOwner=new WifiP2pDevice(nameValue[1]);
      }
    }
  }
 else   if (tokens[0].equals("P2P-INVITATION-RECEIVED")) {
    for (    String token : tokens) {
      String[] nameValue=token.split("=");
      if (nameValue.length != 2)       continue;
      if (nameValue[0].equals("go_dev_addr")) {
        mOwner=new WifiP2pDevice(nameValue[1]);
        continue;
      }
      if (nameValue[0].equals("bssid")) {
        mNetworkBssid=nameValue[1];
      }
    }
  }
 else {
    throw new IllegalArgumentException("Malformed supplicant event");
  }
}
