{
  BearerData bearerData=new BearerData();
  bearerData.messageType=BearerData.MESSAGE_TYPE_DELIVER;
  bearerData.messageId=0;
  bearerData.hasUserDataHeader=false;
  UserData userData=new UserData();
  userData.payloadStr="Test standard SMS";
  userData.msgEncoding=UserData.ENCODING_GSM_7BIT_ALPHABET;
  userData.msgEncodingSet=true;
  bearerData.userData=userData;
  byte[] encodedSms=BearerData.encode(bearerData);
  BearerData revBearerData=BearerData.decode(encodedSms);
  assertEquals(BearerData.MESSAGE_TYPE_DELIVER,revBearerData.messageType);
  assertEquals(0,revBearerData.messageId);
  assertEquals(false,revBearerData.hasUserDataHeader);
  assertEquals(userData.msgEncoding,revBearerData.userData.msgEncoding);
  assertEquals(userData.payloadStr.length(),revBearerData.userData.numFields);
  assertEquals(userData.payloadStr,revBearerData.userData.payloadStr);
  userData.payloadStr="1234567";
  revBearerData=BearerData.decode(BearerData.encode(bearerData));
  assertEquals(userData.payloadStr,revBearerData.userData.payloadStr);
  userData.payloadStr="";
  revBearerData=BearerData.decode(BearerData.encode(bearerData));
  assertEquals(userData.payloadStr,revBearerData.userData.payloadStr);
  userData.payloadStr="12345678901234567890123456789012345678901234567890" + "12345678901234567890123456789012345678901234567890" + "12345678901234567890123456789012345678901234567890"+ "1234567890";
  revBearerData=BearerData.decode(BearerData.encode(bearerData));
  assertEquals(userData.payloadStr,revBearerData.userData.payloadStr);
  userData.payloadStr="Test \u007f illegal \u0000 SMS chars";
  revBearerData=BearerData.decode(BearerData.encode(bearerData));
  assertEquals("Test   illegal   SMS chars",revBearerData.userData.payloadStr);
  userData.payloadStr="More @ testing\nis great^|^~woohoo";
  revBearerData=BearerData.decode(BearerData.encode(bearerData));
  assertEquals(userData.payloadStr,revBearerData.userData.payloadStr);
  SmsHeader.ConcatRef concatRef=new SmsHeader.ConcatRef();
  concatRef.refNumber=0xEE;
  concatRef.msgCount=2;
  concatRef.seqNumber=2;
  concatRef.isEightBits=true;
  SmsHeader smsHeader=new SmsHeader();
  smsHeader.concatRef=concatRef;
  byte[] encodedHeader=SmsHeader.toByteArray(smsHeader);
  userData.userDataHeader=smsHeader;
  revBearerData=BearerData.decode(BearerData.encode(bearerData));
  assertEquals(userData.payloadStr,revBearerData.userData.payloadStr);
  SmsHeader decodedHeader=revBearerData.userData.userDataHeader;
  assertEquals(decodedHeader.concatRef.refNumber,concatRef.refNumber);
  assertEquals(decodedHeader.concatRef.msgCount,concatRef.msgCount);
  assertEquals(decodedHeader.concatRef.seqNumber,concatRef.seqNumber);
}
