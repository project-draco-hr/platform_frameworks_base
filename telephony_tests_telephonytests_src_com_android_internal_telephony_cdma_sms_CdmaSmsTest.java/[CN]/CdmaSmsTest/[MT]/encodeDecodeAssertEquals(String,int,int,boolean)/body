{
  BearerData bearerData=new BearerData();
  bearerData.messageType=BearerData.MESSAGE_TYPE_DELIVER;
  bearerData.messageId=55;
  SmsHeader smsHeader=new SmsHeader();
  if (oddLengthHeader) {
    SmsHeader.MiscElt miscElt=new SmsHeader.MiscElt();
    miscElt.id=0x27;
    miscElt.data=new byte[]{0x12,0x34};
    smsHeader.miscEltList.add(miscElt);
  }
 else {
    SmsHeader.ConcatRef concatRef=new SmsHeader.ConcatRef();
    concatRef.refNumber=0xEE;
    concatRef.msgCount=total;
    concatRef.seqNumber=index;
    concatRef.isEightBits=true;
    smsHeader.concatRef=concatRef;
  }
  byte[] encodeHeader=SmsHeader.toByteArray(smsHeader);
  if (oddLengthHeader) {
    assertEquals(4,encodeHeader.length);
  }
 else {
    assertEquals(5,encodeHeader.length);
  }
  UserData userData=new UserData();
  userData.payloadStr=payload;
  userData.userDataHeader=smsHeader;
  bearerData.userData=userData;
  byte[] encodedSms=BearerData.encode(bearerData);
  BearerData revBearerData=BearerData.decode(encodedSms);
  assertEquals(userData.payloadStr,revBearerData.userData.payloadStr);
  assertTrue(revBearerData.hasUserDataHeader);
  byte[] header=SmsHeader.toByteArray(revBearerData.userData.userDataHeader);
  if (oddLengthHeader) {
    assertEquals(4,header.length);
  }
 else {
    assertEquals(5,header.length);
  }
  assertTrue(Arrays.equals(encodeHeader,header));
}
