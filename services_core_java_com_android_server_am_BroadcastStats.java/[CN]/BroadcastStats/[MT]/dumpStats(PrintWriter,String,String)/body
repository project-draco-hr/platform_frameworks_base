{
  boolean printedSomething=false;
  ArrayList<ActionEntry> actions=new ArrayList<>(mActions.size());
  for (int i=mActions.size() - 1; i >= 0; i--) {
    actions.add(mActions.valueAt(i));
  }
  Collections.sort(actions,ACTIONS_COMPARATOR);
  for (int i=actions.size() - 1; i >= 0; i--) {
    ActionEntry ae=actions.get(i);
    if (dumpPackage != null && !ae.mPackages.containsKey(dumpPackage)) {
      continue;
    }
    printedSomething=true;
    pw.print(prefix);
    pw.print(ae.mAction);
    pw.println(":");
    pw.print(prefix);
    pw.print("  Number received: ");
    pw.print(ae.mReceiveCount);
    pw.print(", skipped: ");
    pw.println(ae.mSkipCount);
    pw.print(prefix);
    pw.print("  Total dispatch time: ");
    TimeUtils.formatDuration(ae.mTotalDispatchTime,pw);
    pw.print(", max: ");
    TimeUtils.formatDuration(ae.mMaxDispatchTime,pw);
    pw.println();
    for (int j=ae.mPackages.size() - 1; j >= 0; j--) {
      pw.print(prefix);
      pw.print("  Package ");
      pw.print(ae.mPackages.keyAt(j));
      pw.print(": ");
      PackageEntry pe=ae.mPackages.valueAt(j);
      pw.print(pe.mSendCount);
      pw.println(" times");
    }
  }
  return printedSomething;
}
