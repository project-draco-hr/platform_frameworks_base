{
  final List<ImeSubtypeListItem> enabledItems=createEnabledImeSubtypes();
  final ImeSubtypeListItem latinIme_en_US=enabledItems.get(0);
  final ImeSubtypeListItem latinIme_fr=enabledItems.get(1);
  final ImeSubtypeListItem switchingUnawarelatinIme_en_UK=enabledItems.get(2);
  final ImeSubtypeListItem switchingUnawarelatinIme_hi=enabledItems.get(3);
  final ImeSubtypeListItem subtypeUnawareIme=enabledItems.get(4);
  final ImeSubtypeListItem japaneseIme_ja_JP=enabledItems.get(5);
  final ImeSubtypeListItem switchUnawareJapaneseIme_ja_JP=enabledItems.get(6);
  final ControllerImpl controller=ControllerImpl.createFrom(null,enabledItems);
  assertRotationOrder(controller,false,latinIme_en_US,latinIme_fr,japaneseIme_ja_JP);
  onUserAction(controller,latinIme_fr);
  assertRotationOrder(controller,false,latinIme_fr,latinIme_en_US,japaneseIme_ja_JP);
  onUserAction(controller,latinIme_fr);
  assertRotationOrder(controller,false,latinIme_fr,latinIme_en_US,japaneseIme_ja_JP);
  onUserAction(controller,latinIme_fr);
  assertRotationOrder(controller,false,japaneseIme_ja_JP,latinIme_fr,latinIme_en_US);
  assertNextInputMethod(controller,true,japaneseIme_ja_JP,null,null);
  assertRotationOrder(controller,true,latinIme_fr,latinIme_en_US);
  assertRotationOrder(controller,true,latinIme_en_US,latinIme_fr);
  assertRotationOrder(controller,false,switchingUnawarelatinIme_en_UK,switchingUnawarelatinIme_hi,subtypeUnawareIme,switchUnawareJapaneseIme_ja_JP);
  onUserAction(controller,switchingUnawarelatinIme_hi);
  assertRotationOrder(controller,false,switchingUnawarelatinIme_en_UK,switchingUnawarelatinIme_hi,subtypeUnawareIme,switchUnawareJapaneseIme_ja_JP);
  onUserAction(controller,switchUnawareJapaneseIme_ja_JP);
  assertRotationOrder(controller,false,switchingUnawarelatinIme_en_UK,switchingUnawarelatinIme_hi,subtypeUnawareIme,switchUnawareJapaneseIme_ja_JP);
  assertRotationOrder(controller,true,switchingUnawarelatinIme_en_UK,switchingUnawarelatinIme_hi);
  assertNextInputMethod(controller,true,subtypeUnawareIme,null,null);
  assertNextInputMethod(controller,true,switchUnawareJapaneseIme_ja_JP,null,null);
  final List<ImeSubtypeListItem> sameEnabledItems=createEnabledImeSubtypes();
  final ControllerImpl newController=ControllerImpl.createFrom(controller,sameEnabledItems);
  assertRotationOrder(newController,false,japaneseIme_ja_JP,latinIme_fr,latinIme_en_US);
  assertRotationOrder(newController,false,switchingUnawarelatinIme_en_UK,switchingUnawarelatinIme_hi,subtypeUnawareIme,switchUnawareJapaneseIme_ja_JP);
  final List<ImeSubtypeListItem> differentEnabledItems=Arrays.asList(latinIme_en_US,latinIme_fr,switchingUnawarelatinIme_en_UK,switchUnawareJapaneseIme_ja_JP);
  final ControllerImpl anotherController=ControllerImpl.createFrom(controller,differentEnabledItems);
  assertRotationOrder(anotherController,false,latinIme_en_US,latinIme_fr);
  assertRotationOrder(anotherController,false,switchingUnawarelatinIme_en_UK,switchUnawareJapaneseIme_ja_JP);
}
