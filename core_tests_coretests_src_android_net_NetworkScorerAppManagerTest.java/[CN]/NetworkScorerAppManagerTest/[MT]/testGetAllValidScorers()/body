{
  ResolveInfoHolder package1=buildResolveInfo("package1",1,true,true,false,false);
  ResolveInfoHolder package2=buildResolveInfo("package2",2,false,true,false,false);
  ResolveInfoHolder package3=buildResolveInfo("package3",3,true,false,false,false);
  ResolveInfoHolder package4=buildResolveInfo("package4",4,true,true,true,false);
  ResolveInfoHolder package5=buildResolveInfo("package5",5,true,true,false,true);
  List<ResolveInfoHolder> scorers=new ArrayList<>();
  scorers.add(package1);
  scorers.add(package2);
  scorers.add(package3);
  scorers.add(package4);
  scorers.add(package5);
  setScorers(scorers);
  Iterator<NetworkScorerAppData> result=NetworkScorerAppManager.getAllValidScorers(mMockContext).iterator();
  assertTrue(result.hasNext());
  NetworkScorerAppData next=result.next();
  assertEquals("package1",next.mPackageName);
  assertEquals(1,next.mPackageUid);
  assertNull(next.mConfigurationActivityClassName);
  assertTrue(result.hasNext());
  next=result.next();
  assertEquals("package4",next.mPackageName);
  assertEquals(4,next.mPackageUid);
  assertEquals(".ConfigActivity",next.mConfigurationActivityClassName);
  assertTrue(result.hasNext());
  next=result.next();
  assertEquals("package5",next.mPackageName);
  assertEquals(5,next.mPackageUid);
  assertEquals(".ScoringService",next.mScoringServiceClassName);
  assertFalse(result.hasNext());
}
