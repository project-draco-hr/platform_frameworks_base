{
  mKeystoreAlias=keystoreKeyAlias;
  mOrigin=origin;
  mKeySize=keySize;
  mKeyValidityStart=keyValidityStart;
  mKeyValidityForOriginationEnd=keyValidityForOriginationEnd;
  mKeyValidityForConsumptionEnd=keyValidityForConsumptionEnd;
  mPurposes=purposes;
  mAlgorithm=algorithm;
  mPadding=padding;
  mDigest=digest;
  mBlockMode=blockMode;
  mMinSecondsBetweenOperations=minSecondsBetweenOperations;
  mMaxUsesPerBoot=maxUsesPerBoot;
  mUserAuthenticators=(userAuthenticators != null) ? new HashSet<Integer>(userAuthenticators) : Collections.<Integer>emptySet();
  mTeeBackedUserAuthenticators=(teeBackedUserAuthenticators != null) ? new HashSet<Integer>(teeBackedUserAuthenticators) : Collections.<Integer>emptySet();
  mUserAuthenticationValidityDurationSeconds=userAuthenticationValidityDurationSeconds;
}
