{
  final PrintWriter pw=getOutPrintWriter();
  int flags=0;
  int userId=UserHandle.USER_ALL;
  String opt;
  while ((opt=getNextOption()) != null) {
switch (opt) {
case "-k":
      flags|=PackageManager.DELETE_KEEP_DATA;
    break;
case "--user":
  userId=UserHandle.parseUserArg(getNextArgRequired());
break;
default :
pw.println("Error: Unknown option: " + opt);
return 1;
}
}
String packageName=getNextArg();
if (packageName == null) {
pw.println("Error: package name not specified");
return 1;
}
userId=translateUserId(userId,"runUninstall");
if (userId == UserHandle.USER_ALL) {
userId=UserHandle.USER_SYSTEM;
flags|=PackageManager.DELETE_ALL_USERS;
}
 else {
final PackageInfo info=mInterface.getPackageInfo(packageName,0,userId);
if (info == null) {
pw.println("Failure - not installed for " + userId);
return 1;
}
final boolean isSystem=(info.applicationInfo.flags & ApplicationInfo.FLAG_SYSTEM) != 0;
if (isSystem) {
flags|=PackageManager.DELETE_SYSTEM_APP;
}
}
final LocalIntentReceiver receiver=new LocalIntentReceiver();
mInterface.getPackageInstaller().uninstall(packageName,null,flags,receiver.getIntentSender(),userId);
final Intent result=receiver.getResult();
final int status=result.getIntExtra(PackageInstaller.EXTRA_STATUS,PackageInstaller.STATUS_FAILURE);
if (status == PackageInstaller.STATUS_SUCCESS) {
pw.println("Success");
return 0;
}
 else {
pw.println("Failure [" + result.getStringExtra(PackageInstaller.EXTRA_STATUS_MESSAGE) + "]");
return 1;
}
}
