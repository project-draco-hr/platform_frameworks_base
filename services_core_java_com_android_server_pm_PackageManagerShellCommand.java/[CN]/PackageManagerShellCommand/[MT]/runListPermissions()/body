{
  final PrintWriter pw=getOutPrintWriter();
  boolean labels=false;
  boolean groups=false;
  boolean userOnly=false;
  boolean summary=false;
  boolean dangerousOnly=false;
  String opt;
  while ((opt=getNextOption()) != null) {
switch (opt) {
case "-d":
      dangerousOnly=true;
    break;
case "-f":
  labels=true;
break;
case "-g":
groups=true;
break;
case "-s":
groups=true;
labels=true;
summary=true;
break;
case "-u":
userOnly=true;
break;
default :
pw.println("Error: Unknown option: " + opt);
return 1;
}
}
final ArrayList<String> groupList=new ArrayList<String>();
if (groups) {
final List<PermissionGroupInfo> infos=mInterface.getAllPermissionGroups(0).getList();
final int count=infos.size();
for (int i=0; i < count; i++) {
groupList.add(infos.get(i).name);
}
groupList.add(null);
}
 else {
final String grp=getNextArg();
groupList.add(grp);
}
if (dangerousOnly) {
pw.println("Dangerous Permissions:");
pw.println("");
doListPermissions(groupList,groups,labels,summary,PermissionInfo.PROTECTION_DANGEROUS,PermissionInfo.PROTECTION_DANGEROUS);
if (userOnly) {
pw.println("Normal Permissions:");
pw.println("");
doListPermissions(groupList,groups,labels,summary,PermissionInfo.PROTECTION_NORMAL,PermissionInfo.PROTECTION_NORMAL);
}
}
 else if (userOnly) {
pw.println("Dangerous and Normal Permissions:");
pw.println("");
doListPermissions(groupList,groups,labels,summary,PermissionInfo.PROTECTION_NORMAL,PermissionInfo.PROTECTION_DANGEROUS);
}
 else {
pw.println("All Permissions:");
pw.println("");
doListPermissions(groupList,groups,labels,summary,-10000,10000);
}
return 0;
}
