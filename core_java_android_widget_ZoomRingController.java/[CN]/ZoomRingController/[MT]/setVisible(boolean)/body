{
  if (!useThisZoom(mContext))   return;
  if (visible) {
    if (mOwnerView.getWindowToken() == null) {
      if (!mHandler.hasMessages(MSG_POST_SET_VISIBLE)) {
        mHandler.sendEmptyMessage(MSG_POST_SET_VISIBLE);
      }
      return;
    }
    dismissZoomRingDelayed(INACTIVITY_TIMEOUT);
  }
 else {
    mPanner.stop();
  }
  if (mIsZoomRingVisible == visible) {
    return;
  }
  mIsZoomRingVisible=visible;
  if (visible) {
    if (mContainerLayoutParams.token == null) {
      mContainerLayoutParams.token=mOwnerView.getWindowToken();
    }
    mWindowManager.addView(mContainer,mContainerLayoutParams);
    if (mPostedVisibleInitializer == null) {
      mPostedVisibleInitializer=new Runnable(){
        public void run(){
          refreshPositioningVariables();
          resetZoomRing();
          refreshContainerLayout();
          if (mCallback != null) {
            mCallback.onVisibilityChanged(true);
          }
        }
      }
;
    }
    mPanningArrows.setAnimation(null);
    mHandler.post(mPostedVisibleInitializer);
    mContext.registerReceiver(mConfigurationChangedReceiver,mConfigurationChangedFilter);
    mOwnerView.setOnKeyListener(this);
    mOwnerView.setOnTouchListener(this);
    mReleaseTouchListenerOnUp=false;
  }
 else {
    mOwnerView.setOnKeyListener(null);
    if (mTouchTargetView != null) {
      mReleaseTouchListenerOnUp=true;
    }
 else {
      mOwnerView.setOnTouchListener(null);
    }
    mContext.unregisterReceiver(mConfigurationChangedReceiver);
    mWindowManager.removeView(mContainer);
    mHandler.removeCallbacks(mPostedVisibleInitializer);
    if (mCallback != null) {
      mCallback.onVisibilityChanged(false);
    }
  }
}
