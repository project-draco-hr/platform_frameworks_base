{
  if (mMovingZoomRingOobX != 0) {
    boolean wasOobLeft=mMovingZoomRingOobX < 0;
    mMovingZoomRingOobX+=deltaX;
    if ((wasOobLeft && mMovingZoomRingOobX > 0) || (!wasOobLeft && mMovingZoomRingOobX < 0)) {
      deltaX=mMovingZoomRingOobX;
      mMovingZoomRingOobX=0;
    }
 else {
      deltaX=0;
    }
  }
  if (mMovingZoomRingOobY != 0) {
    boolean wasOobUp=mMovingZoomRingOobY < 0;
    mMovingZoomRingOobY+=deltaY;
    if ((wasOobUp && mMovingZoomRingOobY > 0) || (!wasOobUp && mMovingZoomRingOobY < 0)) {
      deltaY=mMovingZoomRingOobY;
      mMovingZoomRingOobY=0;
    }
 else {
      deltaY=0;
    }
  }
  WindowManager.LayoutParams lp=mContainerLayoutParams;
  Rect ownerBounds=mOwnerViewBounds;
  int zoomRingLeft=mZoomRing.getLeft();
  int zoomRingTop=mZoomRing.getTop();
  int newX=lp.x + deltaX;
  int newZoomRingX=newX + zoomRingLeft;
  newZoomRingX=(newZoomRingX <= ownerBounds.left) ? ownerBounds.left : (newZoomRingX + mZoomRingWidth > ownerBounds.right) ? ownerBounds.right - mZoomRingWidth : newZoomRingX;
  lp.x=newZoomRingX - zoomRingLeft;
  int newY=lp.y + deltaY;
  int newZoomRingY=newY + zoomRingTop;
  newZoomRingY=(newZoomRingY <= ownerBounds.top) ? ownerBounds.top : (newZoomRingY + mZoomRingHeight > ownerBounds.bottom) ? ownerBounds.bottom - mZoomRingHeight : newZoomRingY;
  lp.y=newZoomRingY - zoomRingTop;
  refreshContainerLayout();
  boolean horizontalPanning=true;
  int leftGap=newZoomRingX - ownerBounds.left;
  if (leftGap < mPanGap) {
    if (leftGap == 0 && deltaX != 0 && mMovingZoomRingOobX == 0) {
      mMovingZoomRingOobX=deltaX / Math.abs(deltaX);
    }
    if (shouldPan(leftGap)) {
      mPanner.setHorizontalStrength(-getStrengthFromGap(leftGap));
    }
  }
 else {
    int rightGap=ownerBounds.right - (lp.x + mZoomRingWidth + zoomRingLeft);
    if (rightGap < mPanGap) {
      if (rightGap == 0 && deltaX != 0 && mMovingZoomRingOobX == 0) {
        mMovingZoomRingOobX=deltaX / Math.abs(deltaX);
      }
      if (shouldPan(rightGap)) {
        mPanner.setHorizontalStrength(getStrengthFromGap(rightGap));
      }
    }
 else {
      mPanner.setHorizontalStrength(0);
      horizontalPanning=false;
    }
  }
  int topGap=newZoomRingY - ownerBounds.top;
  if (topGap < mPanGap) {
    if (topGap == 0 && deltaY != 0 && mMovingZoomRingOobY == 0) {
      mMovingZoomRingOobY=deltaY / Math.abs(deltaY);
    }
    if (shouldPan(topGap)) {
      mPanner.setVerticalStrength(-getStrengthFromGap(topGap));
    }
  }
 else {
    int bottomGap=ownerBounds.bottom - (lp.y + mZoomRingHeight + zoomRingTop);
    if (bottomGap < mPanGap) {
      if (bottomGap == 0 && deltaY != 0 && mMovingZoomRingOobY == 0) {
        mMovingZoomRingOobY=deltaY / Math.abs(deltaY);
      }
      if (shouldPan(bottomGap)) {
        mPanner.setVerticalStrength(getStrengthFromGap(bottomGap));
      }
    }
 else {
      mPanner.setVerticalStrength(0);
      if (!horizontalPanning) {
        mTouchingEdgeStartTime=0;
        mPanningInitiated=false;
        mPanner.stop();
      }
    }
  }
  return true;
}
