{
  WindowManager.LayoutParams lp=mContainerLayoutParams;
  Rect ownerBounds=mOwnerViewBounds;
  int zoomRingLeft=mZoomRing.getLeft();
  int zoomRingTop=mZoomRing.getTop();
  int newX=lp.x + deltaX;
  int newZoomRingX=newX + zoomRingLeft;
  newZoomRingX=(newZoomRingX <= ownerBounds.left) ? ownerBounds.left : (newZoomRingX + mZoomRingWidth > ownerBounds.right) ? ownerBounds.right - mZoomRingWidth : newZoomRingX;
  lp.x=newZoomRingX - zoomRingLeft;
  int newY=lp.y + deltaY;
  int newZoomRingY=newY + zoomRingTop;
  newZoomRingY=(newZoomRingY <= ownerBounds.top) ? ownerBounds.top : (newZoomRingY + mZoomRingHeight > ownerBounds.bottom) ? ownerBounds.bottom - mZoomRingHeight : newZoomRingY;
  lp.y=newZoomRingY - zoomRingTop;
  mWindowManager.updateViewLayout(mContainer,lp);
  int leftGap=newZoomRingX - ownerBounds.left;
  if (leftGap < MAX_PAN_GAP) {
    mPanner.setHorizontalStrength(-getStrengthFromGap(leftGap));
  }
 else {
    int rightGap=ownerBounds.right - (lp.x + mZoomRingWidth + zoomRingLeft);
    if (rightGap < MAX_PAN_GAP) {
      mPanner.setHorizontalStrength(getStrengthFromGap(rightGap));
    }
 else {
      mPanner.setHorizontalStrength(0);
    }
  }
  int topGap=newZoomRingY - ownerBounds.top;
  if (topGap < MAX_PAN_GAP) {
    mPanner.setVerticalStrength(-getStrengthFromGap(topGap));
  }
 else {
    int bottomGap=ownerBounds.bottom - (lp.y + mZoomRingHeight + zoomRingTop);
    if (bottomGap < MAX_PAN_GAP) {
      mPanner.setVerticalStrength(getStrengthFromGap(bottomGap));
    }
 else {
      mPanner.setVerticalStrength(0);
    }
  }
  return true;
}
