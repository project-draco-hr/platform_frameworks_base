{
  if (other == this) {
    return;
  }
  if (mPermissions != null) {
    if (other.mPermissions == null) {
      mPermissions=null;
    }
 else {
      mPermissions.clear();
    }
  }
  if (other.mPermissions != null) {
    if (mPermissions == null) {
      mPermissions=new ArrayMap<>();
    }
    final int permissionCount=other.mPermissions.size();
    for (int i=0; i < permissionCount; i++) {
      String name=other.mPermissions.keyAt(i);
      PermissionData permissionData=other.mPermissions.valueAt(i);
      mPermissions.put(name,new PermissionData(permissionData));
    }
  }
  mGlobalGids=NO_GIDS;
  if (other.mGlobalGids != NO_GIDS) {
    mGlobalGids=Arrays.copyOf(other.mGlobalGids,other.mGlobalGids.length);
  }
  if (mPermissionReviewRequired != null) {
    if (other.mPermissionReviewRequired == null) {
      mPermissionReviewRequired=null;
    }
 else {
      mPermissionReviewRequired.clear();
    }
  }
  if (other.mPermissionReviewRequired != null) {
    if (mPermissionReviewRequired == null) {
      mPermissionReviewRequired=new SparseBooleanArray();
    }
    final int userCount=other.mPermissionReviewRequired.size();
    for (int i=0; i < userCount; i++) {
      final boolean reviewRequired=other.mPermissionReviewRequired.valueAt(i);
      mPermissionReviewRequired.put(i,reviewRequired);
    }
  }
}
