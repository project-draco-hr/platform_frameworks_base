{
  StringWriter sw=new StringWriter();
  PrintWriter pw=new FastPrintWriter(sw,false,256);
  new LogStackTrace().printStackTrace(pw);
  pw.flush();
  String ourStack=sw.toString();
  int policyMask=getThreadPolicyMask();
  boolean currentlyGathering=(policyMask & PENALTY_GATHER) != 0;
  int numViolations=p.readInt();
  for (int i=0; i < numViolations; ++i) {
    if (LOG_V)     Log.d(TAG,"strict mode violation stacks read from binder call.  i=" + i);
    ViolationInfo info=new ViolationInfo(p,!currentlyGathering);
    if (info.crashInfo.stackTrace != null && info.crashInfo.stackTrace.length() > 10000) {
      String front=info.crashInfo.stackTrace.substring(256);
      while (i < numViolations) {
        info=new ViolationInfo(p,!currentlyGathering);
        i++;
      }
      clearGatheredViolations();
      Slog.wtfStack(TAG,"Stack is too large: numViolations=" + numViolations + " policy=#"+ Integer.toHexString(policyMask)+ " front="+ front);
      return;
    }
    info.crashInfo.stackTrace+="# via Binder call with stack:\n" + ourStack;
    BlockGuard.Policy policy=BlockGuard.getThreadPolicy();
    if (policy instanceof AndroidBlockGuardPolicy) {
      ((AndroidBlockGuardPolicy)policy).handleViolationWithTimingAttempt(info);
    }
  }
}
