{
  if (mContext.checkCallingOrSelfPermission(android.Manifest.permission.DUMP) != PackageManager.PERMISSION_GRANTED) {
    pw.println("Permission Denial: can't dump wallpaper service from from pid=" + Binder.getCallingPid() + ", uid="+ Binder.getCallingUid());
    return;
  }
synchronized (mLock) {
    pw.println("Current Wallpaper Service state:");
    for (int i=0; i < mWallpaperMap.size(); i++) {
      WallpaperData wallpaper=mWallpaperMap.valueAt(i);
      pw.println(" User " + wallpaper.userId + ":");
      pw.print("  mWidth=");
      pw.print(wallpaper.width);
      pw.print(" mHeight=");
      pw.println(wallpaper.height);
      pw.print("  mName=");
      pw.println(wallpaper.name);
      pw.print("  mWallpaperComponent=");
      pw.println(wallpaper.wallpaperComponent);
      if (wallpaper.connection != null) {
        WallpaperConnection conn=wallpaper.connection;
        pw.print("  Wallpaper connection ");
        pw.print(conn);
        pw.println(":");
        if (conn.mInfo != null) {
          pw.print("    mInfo.component=");
          pw.println(conn.mInfo.getComponent());
        }
        pw.print("    mToken=");
        pw.println(conn.mToken);
        pw.print("    mService=");
        pw.println(conn.mService);
        pw.print("    mEngine=");
        pw.println(conn.mEngine);
        pw.print("    mLastDiedTime=");
        pw.println(wallpaper.lastDiedTime - SystemClock.uptimeMillis());
      }
    }
  }
}
