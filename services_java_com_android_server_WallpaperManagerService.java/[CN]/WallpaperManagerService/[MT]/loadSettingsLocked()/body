{
  JournaledFile journal=makeJournaledFile();
  FileInputStream stream=null;
  File file=journal.chooseForRead();
  boolean success=false;
  try {
    stream=new FileInputStream(file);
    XmlPullParser parser=Xml.newPullParser();
    parser.setInput(stream,null);
    int type;
    do {
      type=parser.next();
      if (type == XmlPullParser.START_TAG) {
        String tag=parser.getName();
        if ("wp".equals(tag)) {
          mWidth=Integer.parseInt(parser.getAttributeValue(null,"width"));
          mHeight=Integer.parseInt(parser.getAttributeValue(null,"height"));
          mName=parser.getAttributeValue(null,"name");
          String comp=parser.getAttributeValue(null,"component");
          mWallpaperComponent=comp != null ? ComponentName.unflattenFromString(comp) : null;
        }
      }
    }
 while (type != XmlPullParser.END_DOCUMENT);
    success=true;
  }
 catch (  NullPointerException e) {
    Log.w(TAG,"failed parsing " + file + " "+ e);
  }
catch (  NumberFormatException e) {
    Log.w(TAG,"failed parsing " + file + " "+ e);
  }
catch (  XmlPullParserException e) {
    Log.w(TAG,"failed parsing " + file + " "+ e);
  }
catch (  IOException e) {
    Log.w(TAG,"failed parsing " + file + " "+ e);
  }
catch (  IndexOutOfBoundsException e) {
    Log.w(TAG,"failed parsing " + file + " "+ e);
  }
  try {
    if (stream != null) {
      stream.close();
    }
  }
 catch (  IOException e) {
  }
  if (!success) {
    mWidth=-1;
    mHeight=-1;
    mName="";
  }
}
