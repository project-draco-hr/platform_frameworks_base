{
  if (mWallpaperConnection != null) {
    if (mWallpaperComponent == null) {
      if (name == null) {
        return;
      }
    }
 else     if (mWallpaperComponent.equals(name)) {
      return;
    }
  }
  try {
    ComponentName realName=name;
    if (realName == null) {
      clearWallpaperComponentLocked();
      return;
    }
    ServiceInfo si=mContext.getPackageManager().getServiceInfo(realName,PackageManager.GET_META_DATA | PackageManager.GET_PERMISSIONS);
    if (!android.Manifest.permission.BIND_WALLPAPER.equals(si.permission)) {
      throw new SecurityException("Selected service does not require " + android.Manifest.permission.BIND_WALLPAPER + ": "+ realName);
    }
    Intent intent=new Intent(WallpaperService.SERVICE_INTERFACE);
    if (name != null) {
      List<ResolveInfo> ris=mContext.getPackageManager().queryIntentServices(intent,0);
      for (int i=0; i < ris.size(); i++) {
        ServiceInfo rsi=ris.get(i).serviceInfo;
        if (rsi.name.equals(si.name) && rsi.packageName.equals(si.packageName)) {
          ris=null;
          break;
        }
      }
      if (ris != null) {
        throw new SecurityException("Selected service is not a wallpaper: " + realName);
      }
    }
    WallpaperConnection newConn=new WallpaperConnection();
    intent.setComponent(realName);
    if (!mContext.bindService(intent,newConn,Context.BIND_AUTO_CREATE)) {
      throw new IllegalArgumentException("Unable to bind service: " + name);
    }
    clearWallpaperComponentLocked();
    mWallpaperComponent=name;
    mWallpaperConnection=newConn;
    mLastDiedTime=SystemClock.uptimeMillis();
    try {
      if (DEBUG)       Log.v(TAG,"Adding window token: " + newConn.mToken);
      mIWindowManager.addWindowToken(newConn.mToken,WindowManager.LayoutParams.TYPE_WALLPAPER);
    }
 catch (    RemoteException e) {
    }
  }
 catch (  PackageManager.NameNotFoundException e) {
    throw new IllegalArgumentException("Unknown component " + name);
  }
}
