{
  final String action=intent.getAction();
  final boolean enabled=intent.getBooleanExtra(LocationManager.EXTRA_GPS_ENABLED,false);
  boolean visible;
  int iconId, textResId;
  if (action.equals(LocationManager.GPS_FIX_CHANGE_ACTION) && enabled) {
    iconId=com.android.internal.R.drawable.stat_sys_gps_on;
    textResId=R.string.gps_notification_found_text;
    visible=true;
  }
 else   if (action.equals(LocationManager.GPS_ENABLED_CHANGE_ACTION) && !enabled) {
    visible=false;
    iconId=textResId=0;
  }
 else {
    iconId=R.drawable.stat_sys_gps_acquiring_anim;
    textResId=R.string.gps_notification_searching_text;
    visible=true;
  }
  try {
    if (visible) {
      Intent gpsIntent=new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);
      gpsIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
      PendingIntent pendingIntent=PendingIntent.getActivityAsUser(context,0,gpsIntent,0,null,UserHandle.CURRENT);
      String text=mContext.getText(textResId).toString();
      Notification n=new Notification.Builder(mContext).setSmallIcon(iconId).setContentTitle(text).setOngoing(true).setContentIntent(pendingIntent).getNotification();
      n.tickerView=null;
      n.tickerText=null;
      n.priority=Notification.PRIORITY_HIGH;
      int[] idOut=new int[1];
      mNotificationService.enqueueNotificationWithTag(mContext.getPackageName(),null,GPS_NOTIFICATION_ID,n,idOut,UserHandle.USER_CURRENT);
      for (      LocationGpsStateChangeCallback cb : mChangeCallbacks) {
        cb.onLocationGpsStateChanged(true,text);
      }
    }
 else {
      mNotificationService.cancelNotificationWithTag(mContext.getPackageName(),null,GPS_NOTIFICATION_ID,UserHandle.USER_CURRENT);
      for (      LocationGpsStateChangeCallback cb : mChangeCallbacks) {
        cb.onLocationGpsStateChanged(false,null);
      }
    }
  }
 catch (  android.os.RemoteException ex) {
  }
}
