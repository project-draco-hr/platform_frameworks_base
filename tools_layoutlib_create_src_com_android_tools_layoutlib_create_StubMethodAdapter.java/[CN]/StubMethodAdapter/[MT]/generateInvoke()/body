{
  mParentVisitor.visitLdcInsn(mInvokeSignature);
  mParentVisitor.visitInsn(mIsNative ? Opcodes.ICONST_1 : Opcodes.ICONST_0);
  if (mIsStatic) {
    mParentVisitor.visitInsn(Opcodes.ACONST_NULL);
  }
 else {
    mParentVisitor.visitVarInsn(Opcodes.ALOAD,0);
  }
  int sort=mReturnType != null ? mReturnType.getSort() : Type.VOID;
switch (sort) {
case Type.VOID:
    mParentVisitor.visitMethodInsn(Opcodes.INVOKESTATIC,"com/android/tools/layoutlib/create/OverrideMethod","invokeV","(Ljava/lang/String;ZLjava/lang/Object;)V",false);
  mParentVisitor.visitInsn(Opcodes.RETURN);
break;
case Type.BOOLEAN:
case Type.CHAR:
case Type.BYTE:
case Type.SHORT:
case Type.INT:
mParentVisitor.visitMethodInsn(Opcodes.INVOKESTATIC,"com/android/tools/layoutlib/create/OverrideMethod","invokeI","(Ljava/lang/String;ZLjava/lang/Object;)I",false);
switch (sort) {
case Type.BOOLEAN:
Label l1=new Label();
mParentVisitor.visitJumpInsn(Opcodes.IFEQ,l1);
mParentVisitor.visitInsn(Opcodes.ICONST_1);
mParentVisitor.visitInsn(Opcodes.IRETURN);
mParentVisitor.visitLabel(l1);
mParentVisitor.visitInsn(Opcodes.ICONST_0);
break;
case Type.CHAR:
mParentVisitor.visitInsn(Opcodes.I2C);
break;
case Type.BYTE:
mParentVisitor.visitInsn(Opcodes.I2B);
break;
case Type.SHORT:
mParentVisitor.visitInsn(Opcodes.I2S);
break;
}
mParentVisitor.visitInsn(Opcodes.IRETURN);
break;
case Type.LONG:
mParentVisitor.visitMethodInsn(Opcodes.INVOKESTATIC,"com/android/tools/layoutlib/create/OverrideMethod","invokeL","(Ljava/lang/String;ZLjava/lang/Object;)J",false);
mParentVisitor.visitInsn(Opcodes.LRETURN);
break;
case Type.FLOAT:
mParentVisitor.visitMethodInsn(Opcodes.INVOKESTATIC,"com/android/tools/layoutlib/create/OverrideMethod","invokeF","(Ljava/lang/String;ZLjava/lang/Object;)F",false);
mParentVisitor.visitInsn(Opcodes.FRETURN);
break;
case Type.DOUBLE:
mParentVisitor.visitMethodInsn(Opcodes.INVOKESTATIC,"com/android/tools/layoutlib/create/OverrideMethod","invokeD","(Ljava/lang/String;ZLjava/lang/Object;)D",false);
mParentVisitor.visitInsn(Opcodes.DRETURN);
break;
case Type.ARRAY:
case Type.OBJECT:
mParentVisitor.visitMethodInsn(Opcodes.INVOKESTATIC,"com/android/tools/layoutlib/create/OverrideMethod","invokeA","(Ljava/lang/String;ZLjava/lang/Object;)Ljava/lang/Object;",false);
mParentVisitor.visitTypeInsn(Opcodes.CHECKCAST,mReturnType.getInternalName());
mParentVisitor.visitInsn(Opcodes.ARETURN);
break;
}
}
