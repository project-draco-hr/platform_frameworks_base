{
  final Locale fallbackLocale=getFallbackLocaleForDefaultIme(imis,context);
  if (!isSystemReady) {
    final ArrayList<InputMethodInfo> retval=new ArrayList<>();
    for (int i=0; i < imis.size(); ++i) {
      final InputMethodInfo imi=imis.get(i);
      if (isSystemIme(imi) && imi.isDefault(context) && isImeThatHasSubtypeOf(imi,fallbackLocale,false,SUBTYPE_MODE_KEYBOARD)) {
        retval.add(imi);
      }
    }
    return retval;
  }
  final Locale systemLocale=getSystemLocaleFromContext(context);
  final ArrayList<InputMethodInfo> retval=new ArrayList<>();
  boolean systemLocaleKeyboardImeFound=false;
  for (int i=0; i < imis.size(); ++i) {
    final InputMethodInfo imi=imis.get(i);
    if (!isSystemIme(imi) || !imi.isDefault(context)) {
      continue;
    }
    final boolean isSystemLocaleKeyboardIme=isImeThatHasSubtypeOf(imi,systemLocale,false,SUBTYPE_MODE_KEYBOARD);
    if (isSystemLocaleKeyboardIme || isImeThatHasSubtypeOf(imi,fallbackLocale,false,SUBTYPE_MODE_ANY)) {
      retval.add(imi);
    }
    systemLocaleKeyboardImeFound|=isSystemLocaleKeyboardIme;
  }
  if (!systemLocaleKeyboardImeFound) {
    for (int i=0; i < imis.size(); ++i) {
      final InputMethodInfo imi=imis.get(i);
      if (!isSystemIme(imi) || !imi.isDefault(context)) {
        continue;
      }
      if (isImeThatHasSubtypeOf(imi,fallbackLocale,false,SUBTYPE_MODE_KEYBOARD)) {
        continue;
      }
      if (isImeThatHasSubtypeOf(imi,systemLocale,true,SUBTYPE_MODE_ANY)) {
        retval.add(imi);
      }
    }
  }
  for (int i=0; i < retval.size(); ++i) {
    if (retval.get(i).isAuxiliaryIme()) {
      return retval;
    }
  }
  for (int i=0; i < imis.size(); ++i) {
    final InputMethodInfo imi=imis.get(i);
    if (isSystemAuxilialyImeThatHasAutomaticSubtype(imi)) {
      retval.add(imi);
    }
  }
  return retval;
}
