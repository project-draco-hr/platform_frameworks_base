{
  long[] tempTimes=out;
  long[] tempSpeeds=mCpuSpeeds;
  final int MAX_SPEEDS=20;
  if (out == null) {
    tempTimes=new long[MAX_SPEEDS];
    tempSpeeds=new long[MAX_SPEEDS];
  }
  int speed=0;
  String file=readFile("/sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state",'\0');
  if (file != null) {
    StringTokenizer st=new StringTokenizer(file,"\n ");
    while (st.hasMoreElements()) {
      String token=st.nextToken();
      try {
        long val=Long.parseLong(token);
        tempSpeeds[speed]=val;
        token=st.nextToken();
        val=Long.parseLong(token);
        tempTimes[speed]=val;
        speed++;
        if (speed == MAX_SPEEDS)         break;
        if (localLOGV && out == null) {
          Slog.v(TAG,"First time : Speed/Time = " + tempSpeeds[speed - 1] + "\t"+ tempTimes[speed - 1]);
        }
      }
 catch (      NumberFormatException nfe) {
        Slog.i(TAG,"Unable to parse time_in_state");
      }
    }
  }
  if (out == null) {
    out=new long[speed];
    mCpuSpeeds=new long[speed];
    System.arraycopy(tempSpeeds,0,mCpuSpeeds,0,speed);
    System.arraycopy(tempTimes,0,out,0,speed);
  }
  return out;
}
