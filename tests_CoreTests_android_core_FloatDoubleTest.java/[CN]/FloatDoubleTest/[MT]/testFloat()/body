{
  float pz=0.0f;
  float nz=-0.0f;
  float pzero=1.0f / Float.POSITIVE_INFINITY;
  float nzero=1.0f / Float.NEGATIVE_INFINITY;
  assertTrue(pz == pz);
  assertTrue(pz == nz);
  assertTrue(pz == pzero);
  assertTrue(pz == nzero);
  assertTrue(nz == pz);
  assertTrue(nz == nz);
  assertTrue(nz == pzero);
  assertTrue(nz == nzero);
  assertTrue(pzero == pz);
  assertTrue(pzero == nz);
  assertTrue(pzero == pzero);
  assertTrue(pzero == nzero);
  assertTrue(nzero == pz);
  assertTrue(nzero == nz);
  assertTrue(nzero == pzero);
  assertTrue(nzero == nzero);
  assertEquals(Float.valueOf(pz),Float.valueOf(pz));
  assertTrue(!Float.valueOf(pz).equals(Float.valueOf(nz)));
  assertEquals(Float.valueOf(pz),Float.valueOf(pzero));
  assertTrue(!Float.valueOf(pz).equals(Float.valueOf(nzero)));
  assertTrue(!Float.valueOf(nz).equals(Float.valueOf(pz)));
  assertEquals(Float.valueOf(nz),Float.valueOf(nz));
  assertTrue(!Float.valueOf(nz).equals(Float.valueOf(pzero)));
  assertEquals(Float.valueOf(nz),Float.valueOf(nzero));
  assertEquals(Float.valueOf(pzero),Float.valueOf(pz));
  assertTrue(!Float.valueOf(pzero).equals(Float.valueOf(nz)));
  assertEquals(Float.valueOf(pzero),Float.valueOf(pzero));
  assertTrue(!Float.valueOf(pzero).equals(Float.valueOf(nzero)));
  assertTrue(!Float.valueOf(nzero).equals(Float.valueOf(pz)));
  assertEquals(Float.valueOf(nzero),Float.valueOf(nz));
  assertTrue(!Float.valueOf(nzero).equals(Float.valueOf(pzero)));
  assertEquals(Float.valueOf(nzero),Float.valueOf(nzero));
  Float sqrtm2=Float.valueOf((float)Math.sqrt(-2.0f));
  Float sqrtm3=Float.valueOf((float)Math.sqrt(-3.0f));
  assertEquals(sqrtm2,sqrtm3);
}
