{
  double pz=0.0;
  double nz=-0.0;
  double pzero=1.0 / Double.POSITIVE_INFINITY;
  double nzero=1.0 / Double.NEGATIVE_INFINITY;
  assertTrue(pz == pz);
  assertTrue(pz == nz);
  assertTrue(pz == pzero);
  assertTrue(pz == nzero);
  assertTrue(nz == pz);
  assertTrue(nz == nz);
  assertTrue(nz == pzero);
  assertTrue(nz == nzero);
  assertTrue(pzero == pz);
  assertTrue(pzero == nz);
  assertTrue(pzero == pzero);
  assertTrue(pzero == nzero);
  assertTrue(nzero == pz);
  assertTrue(nzero == nz);
  assertTrue(nzero == pzero);
  assertTrue(nzero == nzero);
  assertEquals(Double.valueOf(pz),Double.valueOf(pz));
  assertTrue(!Double.valueOf(pz).equals(Double.valueOf(nz)));
  assertEquals(Double.valueOf(pz),Double.valueOf(pzero));
  assertTrue(!Double.valueOf(pz).equals(Double.valueOf(nzero)));
  assertTrue(!Double.valueOf(nz).equals(Double.valueOf(pz)));
  assertEquals(Double.valueOf(nz),Double.valueOf(nz));
  assertTrue(!Double.valueOf(nz).equals(Double.valueOf(pzero)));
  assertEquals(Double.valueOf(nz),Double.valueOf(nzero));
  assertEquals(Double.valueOf(pzero),Double.valueOf(pz));
  assertTrue(!Double.valueOf(pzero).equals(Double.valueOf(nz)));
  assertEquals(Double.valueOf(pzero),Double.valueOf(pzero));
  assertTrue(!Double.valueOf(pzero).equals(Double.valueOf(nzero)));
  assertTrue(!Double.valueOf(nzero).equals(Double.valueOf(pz)));
  assertEquals(Double.valueOf(nzero),Double.valueOf(nz));
  assertTrue(!Double.valueOf(nzero).equals(Double.valueOf(pzero)));
  assertEquals(Double.valueOf(nzero),Double.valueOf(nzero));
  Double sqrtm2=Double.valueOf(Math.sqrt(-2.0));
  Double sqrtm3=Double.valueOf(Math.sqrt(-3.0));
  assertEquals(sqrtm2,sqrtm3);
}
