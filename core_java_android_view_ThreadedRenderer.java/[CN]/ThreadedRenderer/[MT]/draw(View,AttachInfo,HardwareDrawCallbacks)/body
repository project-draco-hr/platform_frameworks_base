{
  attachInfo.mIgnoreDirtyState=true;
  long frameTimeNanos=mChoreographer.getFrameTimeNanos();
  attachInfo.mDrawingTime=frameTimeNanos / TimeUtils.NANOS_PER_MS;
  long recordDuration=0;
  if (mProfilingEnabled) {
    recordDuration=System.nanoTime();
  }
  updateRootDisplayList(view,callbacks);
  if (mProfilingEnabled) {
    recordDuration=System.nanoTime() - recordDuration;
  }
  attachInfo.mIgnoreDirtyState=false;
  if (attachInfo.mPendingAnimatingRenderNodes != null) {
    final int count=attachInfo.mPendingAnimatingRenderNodes.size();
    for (int i=0; i < count; i++) {
      registerAnimatingRenderNode(attachInfo.mPendingAnimatingRenderNodes.get(i));
    }
    attachInfo.mPendingAnimatingRenderNodes.clear();
    attachInfo.mPendingAnimatingRenderNodes=null;
  }
  int syncResult=nSyncAndDrawFrame(mNativeProxy,frameTimeNanos,recordDuration,view.getResources().getDisplayMetrics().density);
  if ((syncResult & SYNC_LOST_SURFACE_REWARD_IF_FOUND) != 0) {
    setEnabled(false);
    attachInfo.mViewRootImpl.mSurface.release();
    attachInfo.mViewRootImpl.invalidate();
  }
  if ((syncResult & SYNC_INVALIDATE_REQUIRED) != 0) {
    attachInfo.mViewRootImpl.invalidate();
  }
}
