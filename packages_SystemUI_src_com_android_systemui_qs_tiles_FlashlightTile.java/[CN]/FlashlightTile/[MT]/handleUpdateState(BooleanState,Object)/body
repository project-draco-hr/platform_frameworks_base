{
  state.label=mHost.getContext().getString(R.string.quick_settings_flashlight_label);
  if (!mFlashlightController.isAvailable()) {
    Drawable icon=mHost.getContext().getDrawable(R.drawable.ic_signal_flashlight_disable);
    final int disabledColor=mHost.getContext().getColor(R.color.qs_tile_tint_unavailable);
    icon.setTint(disabledColor);
    state.icon=new DrawableIcon(icon);
    state.label=new SpannableStringBuilder().append(state.label,new ForegroundColorSpan(disabledColor),SpannableStringBuilder.SPAN_INCLUSIVE_INCLUSIVE);
    state.contentDescription=mContext.getString(R.string.accessibility_quick_settings_flashlight_unavailable);
    return;
  }
  if (arg instanceof Boolean) {
    boolean value=(Boolean)arg;
    if (value == state.value) {
      return;
    }
    state.value=value;
  }
 else {
    state.value=mFlashlightController.isEnabled();
  }
  final AnimationIcon icon=state.value ? mEnable : mDisable;
  state.icon=icon;
  state.contentDescription=mContext.getString(R.string.quick_settings_flashlight_label);
  state.minimalAccessibilityClassName=state.expandedAccessibilityClassName=Switch.class.getName();
}
