{
  if (D.BUG)   Log.d(TAG,"startDismiss");
  if (mDismissing)   return;
  setDismissing(true);
  if (mShowing) {
    mDialogView.animate().cancel();
    if (mContentsPositionAnimator != null) {
      mContentsPositionAnimator.cancel();
    }
    mContents.animate().cancel();
    if (mChevronPositionAnimator != null) {
      mChevronPositionAnimator.cancel();
    }
    mChevron.animate().cancel();
    setShowing(false);
  }
  mDialogView.animate().translationY(-mDialogView.getHeight()).setDuration(scaledDuration(250)).setInterpolator(new LogAccelerateInterpolator()).setUpdateListener(new AnimatorUpdateListener(){
    @Override public void onAnimationUpdate(    ValueAnimator animation){
      mContents.setTranslationY(-mDialogView.getTranslationY());
      final int posY=chevronPosY();
      mChevron.setTranslationY(posY + -mDialogView.getTranslationY());
    }
  }
).setListener(new AnimatorListenerAdapter(){
    private boolean mCancelled;
    @Override public void onAnimationEnd(    Animator animation){
      if (mCancelled)       return;
      if (D.BUG)       Log.d(TAG,"dismiss.onAnimationEnd");
      mHandler.postDelayed(new Runnable(){
        @Override public void run(){
          if (D.BUG)           Log.d(TAG,"mDialog.dismiss()");
          mDialog.dismiss();
          onComplete.run();
          setDismissing(false);
        }
      }
,PRE_DISMISS_DELAY);
    }
    @Override public void onAnimationCancel(    Animator animation){
      if (D.BUG)       Log.d(TAG,"dismiss.onAnimationCancel");
      mCancelled=true;
    }
  }
).start();
}
