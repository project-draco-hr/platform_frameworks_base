{
  HashMap<String,String> emailMap=new HashMap<String,String>();
  String joinMark=version == VERSION_VCARD21_INT ? ";" : ",";
  for (  ContactStruct.ContactMethod contactMethod : contactMList) {
switch (contactMethod.kind) {
case Contacts.KIND_EMAIL:
      String mailType="INTERNET";
    if (!isNull(contactMethod.data)) {
      int methodType=new Integer(contactMethod.type).intValue();
      if (emailTypeMap.containsKey(methodType)) {
        mailType=emailTypeMap.get(methodType);
      }
 else       if (emailTypes.contains(contactMethod.label.toUpperCase())) {
        mailType=contactMethod.label.toUpperCase();
      }
      if (emailMap.containsKey(contactMethod.data)) {
        mailType=emailMap.get(contactMethod.data) + joinMark + mailType;
      }
      emailMap.put(contactMethod.data,mailType);
    }
  break;
case Contacts.KIND_POSTAL:
if (!isNull(contactMethod.data)) {
  mResult.append("ADR;TYPE=POSTAL:").append(foldingString(contactMethod.data,version)).append(mNewline);
}
break;
default :
break;
}
}
for (Map.Entry<String,String> email : emailMap.entrySet()) {
if (version == VERSION_VCARD21_INT) {
mResult.append("EMAIL;");
}
 else {
mResult.append("EMAIL;TYPE=");
}
mResult.append(email.getValue()).append(":").append(email.getKey()).append(mNewline);
}
}
