{
  boolean restore=false;
  float appScale=mCompatibilityInfo.mApplicationScale;
  boolean scalingRequired=mCompatibilityInfo.mScalingRequired;
  if (params != null && !mCompatibilityInfo.mExpandable) {
    adjustWindowAttributesForCompatibleMode(params);
  }
  if (params != null && scalingRequired) {
    restore=true;
    params.scale(appScale,mWindowLayoutParamsBackup);
  }
  int relayoutResult=sWindowSession.relayout(mWindow,params,(int)(mView.mMeasuredWidth * appScale),(int)(mView.mMeasuredHeight * appScale),viewVisibility,insetsPending,mWinFrame,mPendingContentInsets,mPendingVisibleInsets,mSurface);
  if (restore) {
    params.restore(mWindowLayoutParamsBackup);
  }
  if (scalingRequired) {
    float invertedScale=mCompatibilityInfo.mApplicationInvertedScale;
    mPendingContentInsets.scale(invertedScale);
    mPendingVisibleInsets.scale(invertedScale);
    mWinFrame.scale(invertedScale);
  }
  return relayoutResult;
}
