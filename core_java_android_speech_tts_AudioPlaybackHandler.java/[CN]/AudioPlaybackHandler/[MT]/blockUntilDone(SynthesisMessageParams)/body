{
  if (params.mAudioTrack == null || params.mBytesWritten <= 0) {
    return;
  }
  final AudioTrack audioTrack=params.mAudioTrack;
  final int bytesPerFrame=params.mBytesPerFrame;
  final int lengthInBytes=params.mBytesWritten;
  final int lengthInFrames=lengthInBytes / bytesPerFrame;
  int currentPosition=0;
  while ((currentPosition=audioTrack.getPlaybackHeadPosition()) < lengthInFrames) {
    if (audioTrack.getPlayState() != AudioTrack.PLAYSTATE_PLAYING) {
      break;
    }
    final long estimatedTimeMs=((lengthInFrames - currentPosition) * 1000) / audioTrack.getSampleRate();
    final long sleepTimeMs=Math.max(estimatedTimeMs,MIN_SLEEP_TIME_MS);
    if (DBG)     Log.d(TAG,"About to sleep for : " + sleepTimeMs + " ms,"+ " Playback position : "+ currentPosition+ ", Length in frames : "+ lengthInFrames);
    try {
      Thread.sleep(sleepTimeMs);
    }
 catch (    InterruptedException ie) {
      break;
    }
  }
}
