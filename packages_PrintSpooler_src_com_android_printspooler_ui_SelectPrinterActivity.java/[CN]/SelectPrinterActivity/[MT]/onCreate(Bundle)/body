{
  super.onCreate(savedInstanceState);
  getActionBar().setIcon(R.drawable.ic_print);
  setContentView(R.layout.select_printer_activity);
  mPrinterRegistry=new PrinterRegistry(this,null,LOADER_ID_PRINT_REGISTRY,LOADER_ID_PRINT_REGISTRY_INT);
  mListView=(ListView)findViewById(android.R.id.list);
  final DestinationAdapter adapter=new DestinationAdapter();
  adapter.registerDataSetObserver(new DataSetObserver(){
    @Override public void onChanged(){
      if (!isFinishing() && adapter.getCount() <= 0) {
        updateEmptyView(adapter);
      }
    }
    @Override public void onInvalidated(){
      if (!isFinishing()) {
        updateEmptyView(adapter);
      }
    }
  }
);
  mListView.setAdapter(adapter);
  mListView.setOnItemClickListener(new AdapterView.OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> parent,    View view,    int position,    long id){
      if (!((DestinationAdapter)mListView.getAdapter()).isActionable(position)) {
        return;
      }
      PrinterInfo printer=(PrinterInfo)mListView.getAdapter().getItem(position);
      if (printer == null) {
        startAddPrinterActivity();
      }
 else {
        onPrinterSelected(printer);
      }
    }
  }
);
  findViewById(R.id.button).setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      startAddPrinterActivity();
    }
  }
);
  registerForContextMenu(mListView);
  getLoaderManager().initLoader(LOADER_ID_ENABLED_PRINT_SERVICES,null,this);
  if (savedInstanceState == null || !savedInstanceState.getBoolean(KEY_NOT_FIRST_CREATE)) {
    List<PrintServiceInfo> allServices=((PrintManager)getSystemService(Context.PRINT_SERVICE)).getPrintServices(PrintManager.ALL_SERVICES);
    boolean hasEnabledServices=false;
    boolean hasDisabledServices=false;
    if (allServices != null) {
      final int numServices=allServices.size();
      for (int i=0; i < numServices; i++) {
        if (allServices.get(i).isEnabled()) {
          hasEnabledServices=true;
        }
 else {
          hasDisabledServices=true;
        }
      }
    }
    if (!hasEnabledServices) {
      startAddPrinterActivity();
    }
 else     if (hasDisabledServices) {
      String disabledServicesSetting=Settings.Secure.getString(getContentResolver(),Settings.Secure.DISABLED_PRINT_SERVICES);
      if (!TextUtils.isEmpty(disabledServicesSetting)) {
        Toast.makeText(this,getString(R.string.print_services_disabled_toast),Toast.LENGTH_LONG).show();
      }
    }
  }
}
