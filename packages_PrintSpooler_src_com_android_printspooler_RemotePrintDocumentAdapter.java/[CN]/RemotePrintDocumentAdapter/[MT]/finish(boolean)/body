{
  QueuedAsyncTask task=new QueuedAsyncTask(){
    @Override protected Void doInBackground(    Void... params){
      if (DEBUG) {
        Log.i(LOG_TAG,"finish");
      }
synchronized (mLock) {
        if (abortPendingWork) {
          final int taskCount=mTaskQueue.size();
          for (int i=taskCount - 1; i >= 0; i--) {
            mTaskQueue.remove(i).cancel();
          }
        }
        mTaskQueue.add(this);
        if (mState < STATE_START_COMPLETED) {
          return null;
        }
      }
      try {
        mRemoteInterface.finish();
synchronized (mLock) {
          mState=STATE_FINISH_COMPLETED;
        }
      }
 catch (      RemoteException re) {
        Log.e(LOG_TAG,"Error reading file",re);
        mState=STATE_FAILED;
      }
      return null;
    }
  }
;
  task.executeOnExecutor(AsyncTask.SERIAL_EXECUTOR,(Void[])null);
}
