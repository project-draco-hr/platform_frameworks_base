{
  ArrayList<PageRange> selectedPagesList=new ArrayList<>();
  int startPageIndex=INVALID_PAGE_INDEX;
  int endPageIndex=INVALID_PAGE_INDEX;
  final int pageCount=mConfirmedPagesInDocument.size();
  for (int i=0; i < pageCount; i++) {
    final int pageIndex=mConfirmedPagesInDocument.keyAt(i);
    if (startPageIndex == INVALID_PAGE_INDEX) {
      startPageIndex=endPageIndex=pageIndex;
    }
    if (endPageIndex + 1 < pageIndex) {
      PageRange pageRange=new PageRange(startPageIndex,endPageIndex);
      selectedPagesList.add(pageRange);
      startPageIndex=pageIndex;
    }
    endPageIndex=pageIndex;
  }
  if (startPageIndex != INVALID_PAGE_INDEX && endPageIndex != INVALID_PAGE_INDEX) {
    PageRange pageRange=new PageRange(startPageIndex,endPageIndex);
    selectedPagesList.add(pageRange);
  }
  PageRange[] selectedPages=new PageRange[selectedPagesList.size()];
  selectedPagesList.toArray(selectedPages);
  return selectedPages;
}
