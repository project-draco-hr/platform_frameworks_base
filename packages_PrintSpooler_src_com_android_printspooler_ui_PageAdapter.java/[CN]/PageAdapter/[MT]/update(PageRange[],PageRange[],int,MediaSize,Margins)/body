{
  boolean documentChanged=false;
  boolean updatePreviewAreaAndPageSize=false;
  boolean clearSelectedPages=false;
  if (documentPageCount == PrintDocumentInfo.PAGE_COUNT_UNKNOWN) {
    if (writtenPages == null) {
      if (!Arrays.equals(ALL_PAGES_ARRAY,mRequestedPages)) {
        mRequestedPages=ALL_PAGES_ARRAY;
        mCallbacks.onRequestContentUpdate();
      }
      return;
    }
 else {
      documentPageCount=mPageContentRepository.getFilePageCount();
      if (documentPageCount <= 0) {
        return;
      }
    }
  }
  if (mDocumentPageCount != documentPageCount) {
    mDocumentPageCount=documentPageCount;
    documentChanged=true;
    clearSelectedPages=true;
  }
  if (mMediaSize == null || !mMediaSize.equals(mediaSize)) {
    mMediaSize=mediaSize;
    updatePreviewAreaAndPageSize=true;
    documentChanged=true;
    clearSelectedPages=true;
  }
  if (mMinMargins == null || !mMinMargins.equals(minMargins)) {
    mMinMargins=minMargins;
    updatePreviewAreaAndPageSize=true;
    documentChanged=true;
    clearSelectedPages=true;
  }
  if (clearSelectedPages) {
    mSelectedPages=PageRange.ALL_PAGES_ARRAY;
    mSelectedPageCount=documentPageCount;
    setConfirmedPages(mSelectedPages,documentPageCount);
    updatePreviewAreaAndPageSize=true;
    documentChanged=true;
  }
 else   if (!Arrays.equals(mSelectedPages,selectedPages)) {
    mSelectedPages=selectedPages;
    mSelectedPageCount=PageRangeUtils.getNormalizedPageCount(mSelectedPages,documentPageCount);
    setConfirmedPages(mSelectedPages,documentPageCount);
    updatePreviewAreaAndPageSize=true;
    documentChanged=true;
  }
  if (writtenPages != null) {
    if (PageRangeUtils.isAllPages(writtenPages)) {
      writtenPages=mRequestedPages;
    }
    if (!Arrays.equals(mWrittenPages,writtenPages)) {
      mWrittenPages=writtenPages;
      documentChanged=true;
    }
  }
  if (updatePreviewAreaAndPageSize) {
    updatePreviewAreaPageSizeAndEmptyState();
  }
  if (documentChanged) {
    notifyDataSetChanged();
  }
}
