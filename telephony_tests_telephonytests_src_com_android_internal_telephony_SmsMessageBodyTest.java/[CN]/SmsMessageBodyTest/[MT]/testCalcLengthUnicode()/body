{
  StringBuilder sb=new StringBuilder(160);
  int[] values={0,0,0,SmsMessage.ENCODING_16BIT};
  int[] values7bit={1,0,0,SmsMessage.ENCODING_7BIT};
  int startPos=0;
  int unicodeCharsLen=sUnicodeChars.length();
  for (int i=1; i < sTestLengthCount; i++) {
    int len=sUnicodeTestLengths[i];
    assertTrue(sb.length() <= len);
    while (sb.length() < len) {
      int addCount=len - sb.length();
      int endPos=(unicodeCharsLen - startPos > addCount) ? (startPos + addCount) : unicodeCharsLen;
      sb.append(sUnicodeChars,startPos,endPos);
      startPos=(endPos == unicodeCharsLen) ? 0 : endPos;
    }
    assertEquals(len,sb.length());
    String testStr=sb.toString();
    values[0]=sTestMsgCounts[i];
    values[1]=len;
    values[2]=sUnicodeUnitsRemaining[i];
    values7bit[1]=len;
    values7bit[2]=MAX_USER_DATA_SEPTETS - len;
    callGsmLengthMethods(testStr,false,values);
    callCdmaLengthMethods(testStr,false,values);
    callGsmLengthMethods(testStr,true,values7bit);
    callCdmaLengthMethods(testStr,true,values7bit);
  }
}
