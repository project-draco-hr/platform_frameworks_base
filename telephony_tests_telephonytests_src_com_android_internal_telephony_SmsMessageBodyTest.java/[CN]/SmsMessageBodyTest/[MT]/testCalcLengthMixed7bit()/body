{
  StringBuilder sb=new StringBuilder(320);
  CounterHelper ch=new CounterHelper();
  Random r=new Random(0x4321);
  int[] expectedValues=new int[6];
  int[] origLockingShiftTables=GsmAlphabet.getEnabledLockingShiftTables();
  int[] origSingleShiftTables=GsmAlphabet.getEnabledSingleShiftTables();
  int enabledLanguagesTestCases=sEnabledSingleShiftTables.length;
  long startTime=System.currentTimeMillis();
  for (int run=0; run < 10; run++) {
    sb.setLength(0);
    ch.clear();
    int unicodeOnlyCount=0;
    for (int i=1; i < 320; i++) {
      int charClass=r.nextInt(100);
      if (charClass >= sNumCharacterClasses) {
        charClass=sNumCharacterClasses - 1;
      }
      int classLength=sCharacterClasses[charClass].length();
      char nextChar=sCharacterClasses[charClass].charAt(r.nextInt(classLength));
      sb.append(nextChar);
      ch.addChar(charClass);
      boolean unicodeOnly=true;
      for (int j=0; j < enabledLanguagesTestCases; j++) {
        GsmAlphabet.setEnabledSingleShiftTables(sEnabledSingleShiftTables[j]);
        GsmAlphabet.setEnabledLockingShiftTables(sEnabledLockingShiftTables[j]);
        ch.fillData(j,false,expectedValues,i);
        if (expectedValues[3] == SmsMessage.ENCODING_7BIT) {
          unicodeOnly=false;
        }
        callGsmLengthMethods(sb,false,expectedValues);
        ch.fillData(j,true,expectedValues,i);
        callGsmLengthMethods(sb,true,expectedValues);
      }
      if (unicodeOnly && ++unicodeOnlyCount == 10) {
        break;
      }
    }
  }
  ch.printStats();
  Log.d(TAG,"Completed in " + (System.currentTimeMillis() - startTime) + " ms");
  GsmAlphabet.setEnabledLockingShiftTables(origLockingShiftTables);
  GsmAlphabet.setEnabledSingleShiftTables(origSingleShiftTables);
}
