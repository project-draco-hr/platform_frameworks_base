{
  teardownConnection();
  try {
    mConnection=(HttpURLConnection)mURL.openConnection();
    if (mHeaders != null) {
      for (      Map.Entry<String,String> entry : mHeaders.entrySet()) {
        mConnection.setRequestProperty(entry.getKey(),entry.getValue());
      }
    }
    if (offset > 0) {
      mConnection.setRequestProperty("Range","bytes=" + offset + "-");
    }
    int response=mConnection.getResponseCode();
    mURL=mConnection.getURL();
    if (response == HttpURLConnection.HTTP_PARTIAL) {
      String contentRange=mConnection.getHeaderField("Content-Range");
      mTotalSize=-1;
      if (contentRange != null) {
        int lastSlashPos=contentRange.lastIndexOf('/');
        if (lastSlashPos >= 0) {
          String total=contentRange.substring(lastSlashPos + 1);
          try {
            mTotalSize=Long.parseLong(total);
          }
 catch (          NumberFormatException e) {
          }
        }
      }
    }
 else     if (response != HttpURLConnection.HTTP_OK) {
      throw new IOException();
    }
 else {
      mTotalSize=mConnection.getContentLength();
    }
    if (offset > 0 && response != HttpURLConnection.HTTP_PARTIAL) {
      throw new IOException();
    }
    mInputStream=new BufferedInputStream(mConnection.getInputStream());
    mCurrentOffset=offset;
  }
 catch (  IOException e) {
    mTotalSize=-1;
    mInputStream=null;
    mConnection=null;
    mCurrentOffset=-1;
    throw e;
  }
}
