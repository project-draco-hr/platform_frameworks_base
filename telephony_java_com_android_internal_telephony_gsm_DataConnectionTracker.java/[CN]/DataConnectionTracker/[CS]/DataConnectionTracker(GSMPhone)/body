{
  this.phone=phone;
  phone.mCM.registerForAvailable(this,EVENT_RADIO_AVAILABLE,null);
  phone.mCM.registerForOffOrNotAvailable(this,EVENT_RADIO_OFF_OR_NOT_AVAILABLE,null);
  phone.mSIMRecords.registerForRecordsLoaded(this,EVENT_RECORDS_LOADED,null);
  phone.mCM.registerForPDPStateChanged(this,EVENT_PDP_STATE_CHANGED,null);
  phone.mCT.registerForVoiceCallEnded(this,EVENT_VOICE_CALL_ENDED,null);
  phone.mCT.registerForVoiceCallStarted(this,EVENT_VOICE_CALL_STARTED,null);
  phone.mSST.registerForGprsAttached(this,EVENT_GPRS_ATTACHED,null);
  phone.mSST.registerForGprsDetached(this,EVENT_GPRS_DETACHED,null);
  phone.mSST.registerForRoamingOn(this,EVENT_ROAMING_ON,null);
  phone.mSST.registerForRoamingOff(this,EVENT_ROAMING_OFF,null);
  phone.mSST.registerForPsRestrictedEnabled(this,EVENT_PS_RESTRICT_ENABLED,null);
  phone.mSST.registerForPsRestrictedDisabled(this,EVENT_PS_RESTRICT_DISABLED,null);
  this.netstat=INetStatService.Stub.asInterface(ServiceManager.getService("netstat"));
  IntentFilter filter=new IntentFilter();
  filter.addAction(INTENT_RECONNECT_ALARM);
  filter.addAction(Intent.ACTION_SCREEN_ON);
  filter.addAction(Intent.ACTION_SCREEN_OFF);
  filter.addAction(WifiManager.NETWORK_STATE_CHANGED_ACTION);
  filter.addAction(WifiManager.WIFI_STATE_CHANGED_ACTION);
  phone.getContext().registerReceiver(mIntentReceiver,filter,null,phone.h);
  mDataConnectionTracker=this;
  mResolver=phone.getContext().getContentResolver();
  apnObserver=new ApnChangeObserver();
  phone.getContext().getContentResolver().registerContentObserver(Telephony.Carriers.CONTENT_URI,true,apnObserver);
  createAllPdpList();
  SharedPreferences sp=PreferenceManager.getDefaultSharedPreferences(phone.getContext());
  dataEnabled[APN_DEFAULT_ID]=!sp.getBoolean(GSMPhone.DATA_DISABLED_ON_BOOT_KEY,false);
  noAutoAttach=!dataEnabled[APN_DEFAULT_ID];
}
