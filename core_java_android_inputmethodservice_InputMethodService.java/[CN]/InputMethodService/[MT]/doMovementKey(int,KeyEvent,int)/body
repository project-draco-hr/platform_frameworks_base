{
  final ExtractEditText eet=mExtractEditText;
  if (isFullscreenMode() && isInputViewShown() && eet != null) {
    MovementMethod movement=eet.getMovementMethod();
    Layout layout=eet.getLayout();
    if (movement != null && layout != null) {
      if (count == MOVEMENT_DOWN) {
        if (movement.onKeyDown(eet,(Spannable)eet.getText(),keyCode,event)) {
          reportExtractedMovement(keyCode,1);
          return true;
        }
      }
 else       if (count == MOVEMENT_UP) {
        if (movement.onKeyUp(eet,(Spannable)eet.getText(),keyCode,event)) {
          return true;
        }
      }
 else {
        if (movement.onKeyOther(eet,(Spannable)eet.getText(),event)) {
          reportExtractedMovement(keyCode,count);
        }
 else {
          KeyEvent down=new KeyEvent(event,KeyEvent.ACTION_DOWN);
          if (movement.onKeyDown(eet,(Spannable)eet.getText(),keyCode,down)) {
            KeyEvent up=new KeyEvent(event,KeyEvent.ACTION_UP);
            movement.onKeyUp(eet,(Spannable)eet.getText(),keyCode,up);
            while (--count > 0) {
              movement.onKeyDown(eet,(Spannable)eet.getText(),keyCode,down);
              movement.onKeyUp(eet,(Spannable)eet.getText(),keyCode,up);
            }
            reportExtractedMovement(keyCode,count);
          }
        }
      }
    }
switch (keyCode) {
case KeyEvent.KEYCODE_DPAD_LEFT:
case KeyEvent.KEYCODE_DPAD_RIGHT:
case KeyEvent.KEYCODE_DPAD_UP:
case KeyEvent.KEYCODE_DPAD_DOWN:
      return true;
  }
}
return false;
}
