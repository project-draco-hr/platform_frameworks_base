{
  final Printer p=new PrintWriterPrinter(fout);
  p.println("Input method service state for " + this + ":");
  p.println("  mWindowCreated=" + mWindowCreated + " mWindowAdded="+ mWindowAdded);
  p.println("  mWindowVisible=" + mWindowVisible + " mWindowWasVisible="+ mWindowWasVisible+ " mInShowWindow="+ mInShowWindow);
  p.println("  Configuration=" + getResources().getConfiguration());
  p.println("  mToken=" + mToken);
  p.println("  mInputBinding=" + mInputBinding);
  p.println("  mInputConnection=" + mInputConnection);
  p.println("  mStartedInputConnection=" + mStartedInputConnection);
  p.println("  mInputStarted=" + mInputStarted + " mInputViewStarted="+ mInputViewStarted+ " mCandidatesViewStarted="+ mCandidatesViewStarted);
  if (mInputEditorInfo != null) {
    p.println("  mInputEditorInfo:");
    mInputEditorInfo.dump(p,"    ");
  }
 else {
    p.println("  mInputEditorInfo: null");
  }
  p.println("  mShowInputRequested=" + mShowInputRequested + " mLastShowInputRequested="+ mLastShowInputRequested+ " mShowInputForced="+ mShowInputForced+ " mShowInputFlags=0x"+ Integer.toHexString(mShowInputFlags));
  p.println("  mCandidatesVisibility=" + mCandidatesVisibility + " mFullscreenApplied="+ mFullscreenApplied+ " mIsFullscreen="+ mIsFullscreen+ " mExtractViewHidden="+ mExtractViewHidden);
  if (mExtractedText != null) {
    p.println("  mExtractedText:");
    p.println("    text=" + mExtractedText.text.length() + " chars"+ " startOffset="+ mExtractedText.startOffset);
    p.println("    selectionStart=" + mExtractedText.selectionStart + " selectionEnd="+ mExtractedText.selectionEnd+ " flags=0x"+ Integer.toHexString(mExtractedText.flags));
  }
 else {
    p.println("  mExtractedText: null");
  }
  p.println("  mExtractedToken=" + mExtractedToken);
  p.println("  mIsInputViewShown=" + mIsInputViewShown + " mStatusIcon="+ mStatusIcon);
  p.println("Last computed insets:");
  p.println("  contentTopInsets=" + mTmpInsets.contentTopInsets + " visibleTopInsets="+ mTmpInsets.visibleTopInsets+ " touchableInsets="+ mTmpInsets.touchableInsets);
}
