{
  final ExtractEditText eet=mExtractEditText;
  if (eet != null && getCurrentInputStarted() && isFullscreenMode()) {
    mExtractedToken++;
    ExtractedTextRequest req=new ExtractedTextRequest();
    req.token=mExtractedToken;
    req.flags=InputConnection.GET_TEXT_WITH_STYLES;
    req.hintMaxLines=10;
    req.hintMaxChars=10000;
    InputConnection ic=getCurrentInputConnection();
    mExtractedText=ic == null ? null : ic.getExtractedText(req,InputConnection.GET_EXTRACTED_TEXT_MONITOR);
    final EditorInfo ei=getCurrentInputEditorInfo();
    try {
      eet.startInternalChanges();
      onUpdateExtractingVisibility(ei);
      onUpdateExtractingViews(ei);
      int inputType=ei.inputType;
      if ((inputType & EditorInfo.TYPE_MASK_CLASS) == EditorInfo.TYPE_CLASS_TEXT) {
        if ((inputType & EditorInfo.TYPE_TEXT_FLAG_IME_MULTI_LINE) != 0) {
          inputType|=EditorInfo.TYPE_TEXT_FLAG_MULTI_LINE;
        }
      }
      eet.setInputType(inputType);
      eet.setHint(ei.hintText);
      if (mExtractedText != null) {
        eet.setEnabled(true);
        eet.setExtractedText(mExtractedText);
      }
 else {
        eet.setEnabled(false);
        eet.setText("");
      }
    }
  finally {
      eet.finishInternalChanges();
    }
    if (inputChanged) {
      onExtractingInputChanged(ei);
    }
  }
}
