{
  final int primaryUserId=mUserManager.getPrimaryUser().id;
  UserInfo profile=createProfileForUser("Managed 1",UserInfo.FLAG_MANAGED_PROFILE,primaryUserId);
  assertNotNull(profile);
  assertTrue("creationTime must be set when the profile is created",profile.creationTime > 0);
  assertEquals(profile.creationTime,mUserManager.getUserCreationTime(new UserHandle(profile.id)));
  long ownerCreationTime=mUserManager.getUserInfo(primaryUserId).creationTime;
  assertEquals(ownerCreationTime,mUserManager.getUserCreationTime(new UserHandle(primaryUserId)));
  try {
    int noSuchUserId=100500;
    mUserManager.getUserCreationTime(new UserHandle(noSuchUserId));
    fail("SecurityException should be thrown for nonexistent user");
  }
 catch (  Exception e) {
    assertTrue("SecurityException should be thrown for nonexistent user, but was: " + e,e instanceof SecurityException);
  }
  UserInfo user=createUser("User 1",0);
  try {
    mUserManager.getUserCreationTime(new UserHandle(user.id));
    fail("SecurityException should be thrown for other user");
  }
 catch (  Exception e) {
    assertTrue("SecurityException should be thrown for other user, but was: " + e,e instanceof SecurityException);
  }
}
