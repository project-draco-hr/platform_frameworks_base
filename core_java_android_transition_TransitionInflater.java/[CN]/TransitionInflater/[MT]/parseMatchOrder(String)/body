{
  StringTokenizer st=new StringTokenizer(matchOrderString,",");
  int matches[]=new int[st.countTokens()];
  int index=0;
  while (st.hasMoreTokens()) {
    String token=st.nextToken().trim();
    if (MATCH_ID.equalsIgnoreCase(token)) {
      matches[index]=Transition.MATCH_ID;
    }
 else     if (MATCH_INSTANCE.equalsIgnoreCase(token)) {
      matches[index]=Transition.MATCH_INSTANCE;
    }
 else     if (MATCH_NAME.equalsIgnoreCase(token)) {
      matches[index]=Transition.MATCH_NAME;
    }
 else     if (MATCH_VIEW_NAME.equalsIgnoreCase(token)) {
      matches[index]=Transition.MATCH_NAME;
    }
 else     if (MATCH_ITEM_ID.equalsIgnoreCase(token)) {
      matches[index]=Transition.MATCH_ITEM_ID;
    }
 else     if (token.isEmpty()) {
      int[] smallerMatches=new int[matches.length - 1];
      System.arraycopy(matches,0,smallerMatches,0,index);
      matches=smallerMatches;
      index--;
    }
 else {
      throw new RuntimeException("Unknown match type in matchOrder: '" + token + "'");
    }
    index++;
  }
  return matches;
}
