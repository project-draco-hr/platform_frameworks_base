{
  final byte[] MAGIC={0xB,0xE,0x0,0x5};
  try {
    FileOutputStream os=new FileOutputStream(mTestFile,false);
    os.write(MAGIC,0,4);
    os.flush();
    os.close();
  }
 catch (  FileNotFoundException e) {
    Assert.fail("File was removed durning test" + e);
  }
catch (  IOException e) {
    Assert.fail("Unexpected IOException: " + e);
  }
  Assert.assertTrue(mTestFile.exists());
  Assert.assertTrue(FileUtils.getFileStatus(mTestFile.getPath(),null));
  FileStatus status1=new FileStatus();
  FileUtils.getFileStatus(mTestFile.getPath(),status1);
  Assert.assertEquals(4,status1.size);
  try {
    Thread.sleep(1000);
  }
 catch (  InterruptedException e) {
  }
  try {
    FileOutputStream os=new FileOutputStream(mTestFile,true);
    os.write(MAGIC,0,4);
    os.flush();
    os.close();
  }
 catch (  FileNotFoundException e) {
    Assert.fail("File was removed durning test" + e);
  }
catch (  IOException e) {
    Assert.fail("Unexpected IOException: " + e);
  }
  FileStatus status2=new FileStatus();
  FileUtils.getFileStatus(mTestFile.getPath(),status2);
  Assert.assertEquals(8,status2.size);
  Assert.assertTrue(status2.mtime > status1.mtime);
  mTestFile.delete();
  Assert.assertFalse(mTestFile.exists());
  Assert.assertFalse(FileUtils.getFileStatus(mTestFile.getPath(),null));
}
