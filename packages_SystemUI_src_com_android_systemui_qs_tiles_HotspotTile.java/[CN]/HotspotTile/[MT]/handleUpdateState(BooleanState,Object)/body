{
  state.label=mContext.getString(R.string.quick_settings_hotspot_label);
  checkIfRestrictionEnforcedByAdminOnly(state,UserManager.DISALLOW_CONFIG_TETHERING);
  if (arg instanceof Boolean) {
    state.value=(boolean)arg;
  }
 else {
    state.value=mController.isHotspotEnabled();
  }
  state.icon=state.value ? mEnable : mDisable;
  if (mAirplaneMode.getValue() != 0) {
    final int disabledColor=mHost.getContext().getColor(R.color.qs_tile_tint_unavailable);
    state.label=new SpannableStringBuilder().append(state.label,new ForegroundColorSpan(disabledColor),SpannableStringBuilder.SPAN_INCLUSIVE_INCLUSIVE);
    state.icon=mUnavailable;
  }
  state.minimalAccessibilityClassName=state.expandedAccessibilityClassName=Switch.class.getName();
  state.contentDescription=state.label;
}
