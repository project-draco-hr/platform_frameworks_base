{
  setupProvider(MtpDatabaseConstants.FLAG_DATABASE_IN_MEMORY);
  mMtpManager.addValidDevice(new MtpDeviceRecord(0,"Device A","Device key A",false,new MtpRoot[]{new MtpRoot(0,1,"Storage A",1024,2048,"")},null,null));
  mMtpManager.addValidDevice(new MtpDeviceRecord(1,"Device B","Device key B",false,new MtpRoot[]{new MtpRoot(1,1,"Storage B",2048,4096,"Identifier B")},null,null));
{
    mProvider.openDevice(0);
    mResolver.waitForNotification(ROOTS_URI,1);
    final Cursor cursor=mProvider.queryRoots(null);
    assertEquals(2,cursor.getCount());
    cursor.moveToNext();
    assertEquals("1",cursor.getString(0));
    assertEquals(Root.FLAG_SUPPORTS_IS_CHILD | Root.FLAG_SUPPORTS_CREATE,cursor.getInt(1));
    assertEquals(R.drawable.ic_root_mtp,cursor.getInt(2));
    assertEquals("Device A Storage A",cursor.getString(3));
    assertEquals("1",cursor.getString(4));
    assertEquals(1024,cursor.getInt(5));
  }
{
    mProvider.openDevice(1);
    mResolver.waitForNotification(ROOTS_URI,2);
    final Cursor cursor=mProvider.queryRoots(null);
    assertEquals(2,cursor.getCount());
    cursor.moveToNext();
    cursor.moveToNext();
    assertEquals("2",cursor.getString(0));
    assertEquals(Root.FLAG_SUPPORTS_IS_CHILD | Root.FLAG_SUPPORTS_CREATE,cursor.getInt(1));
    assertEquals(R.drawable.ic_root_mtp,cursor.getInt(2));
    assertEquals("Device B Storage B",cursor.getString(3));
    assertEquals("2",cursor.getString(4));
    assertEquals(2048,cursor.getInt(5));
  }
}
