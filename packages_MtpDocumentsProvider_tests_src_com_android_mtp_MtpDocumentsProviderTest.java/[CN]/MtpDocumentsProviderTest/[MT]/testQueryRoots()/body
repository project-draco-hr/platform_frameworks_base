{
  mMtpManager.addValidDevice(0);
  mMtpManager.addValidDevice(1);
  mMtpManager.setRoots(0,new MtpRoot[]{new MtpRoot(0,1,"Storage A",1024,2048,"")});
  mMtpManager.setRoots(1,new MtpRoot[]{new MtpRoot(1,1,"Storage B",2048,4096,"Identifier B")});
{
    mProvider.openDevice(0);
    mResolver.waitForNotification(ROOTS_URI,1);
    final Cursor cursor=mProvider.queryRoots(null);
    assertEquals(1,cursor.getCount());
    cursor.moveToNext();
    assertEquals("0_1",cursor.getString(0));
    assertEquals(Root.FLAG_SUPPORTS_IS_CHILD,cursor.getInt(1));
    assertTrue(cursor.isNull(2));
    assertEquals("Storage A",cursor.getString(3));
    assertEquals("0_1_0",cursor.getString(4));
    assertEquals(1024,cursor.getInt(5));
  }
{
    mProvider.openDevice(1);
    mResolver.waitForNotification(ROOTS_URI,2);
    final Cursor cursor=mProvider.queryRoots(null);
    assertEquals(2,cursor.getCount());
    cursor.moveToNext();
    cursor.moveToNext();
    assertEquals("1_1",cursor.getString(0));
    assertEquals(Root.FLAG_SUPPORTS_IS_CHILD,cursor.getInt(1));
    assertTrue(cursor.isNull(2));
    assertEquals("Storage B",cursor.getString(3));
    assertEquals("1_1_0",cursor.getString(4));
    assertEquals(2048,cursor.getInt(5));
  }
{
    mProvider.closeAllDevices();
    mResolver.waitForNotification(ROOTS_URI,3);
    final Cursor cursor=mProvider.queryRoots(null);
    assertEquals(0,cursor.getCount());
  }
}
