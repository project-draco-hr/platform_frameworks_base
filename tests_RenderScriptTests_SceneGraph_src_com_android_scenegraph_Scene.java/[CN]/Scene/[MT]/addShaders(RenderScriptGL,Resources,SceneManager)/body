{
  if (mVertexShaders.size() > 0) {
    Allocation shaderData=Allocation.createSized(rs,Element.ALLOCATION(rs),mVertexShaders.size());
    Allocation[] shaderAllocs=new Allocation[mVertexShaders.size()];
    for (int i=0; i < mVertexShaders.size(); i++) {
      VertexShader sI=mVertexShaders.get(i);
      shaderAllocs[i]=sI.getRSData().getAllocation();
    }
    shaderData.copyFrom(shaderAllocs);
    sceneManager.mRenderLoop.set_gVertexShaders(shaderData);
  }
  if (mFragmentShaders.size() > 0) {
    Allocation shaderData=Allocation.createSized(rs,Element.ALLOCATION(rs),mFragmentShaders.size());
    Allocation[] shaderAllocs=new Allocation[mFragmentShaders.size()];
    for (int i=0; i < mFragmentShaders.size(); i++) {
      FragmentShader sI=mFragmentShaders.get(i);
      shaderAllocs[i]=sI.getRSData().getAllocation();
    }
    shaderData.copyFrom(shaderAllocs);
    sceneManager.mRenderLoop.set_gFragmentShaders(shaderData);
  }
}
