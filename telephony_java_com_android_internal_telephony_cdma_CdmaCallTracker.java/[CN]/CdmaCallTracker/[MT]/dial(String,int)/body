{
  clearDisconnected();
  if (!canDial()) {
    throw new CallStateException("cannot dial in current state");
  }
  foregroundCall.setGeneric(false);
  if (foregroundCall.getState() == CdmaCall.State.ACTIVE) {
    return dialThreeWay(dialString);
  }
  pendingMO=new CdmaConnection(phone.getContext(),dialString,this,foregroundCall);
  hangupPendingMO=false;
  if (pendingMO.address == null || pendingMO.address.length() == 0 || pendingMO.address.indexOf(PhoneNumberUtils.WILD) >= 0) {
    pendingMO.cause=Connection.DisconnectCause.INVALID_NUMBER;
    pollCallsWhenSafe();
  }
 else {
    setMute(false);
    String inEcm=SystemProperties.get(TelephonyProperties.PROPERTY_INECM_MODE,"false");
    if (inEcm.equals("false")) {
      cm.dial(pendingMO.address,clirMode,obtainCompleteMessage());
    }
 else {
      phone.exitEmergencyCallbackMode();
      phone.setOnEcbModeExitResponse(this,EVENT_EXIT_ECM_RESPONSE_CDMA,null);
      pendingCallClirMode=clirMode;
      pendingCallInECM=true;
    }
  }
  updatePhoneState();
  phone.notifyPreciseCallStateChanged();
  return pendingMO;
}
