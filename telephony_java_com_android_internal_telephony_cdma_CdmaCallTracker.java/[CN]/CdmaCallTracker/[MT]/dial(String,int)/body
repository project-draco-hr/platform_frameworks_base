{
  clearDisconnected();
  if (!canDial()) {
    throw new CallStateException("cannot dial in current state");
  }
  String inEcm=SystemProperties.get(TelephonyProperties.PROPERTY_INECM_MODE,"false");
  boolean isPhoneInEcmMode=inEcm.equals("true");
  boolean isEmergencyCall=PhoneNumberUtils.isLocalEmergencyNumber(dialString,phone.getContext());
  if (isPhoneInEcmMode && isEmergencyCall) {
    handleEcmTimer(phone.CANCEL_ECM_TIMER);
  }
  foregroundCall.setGeneric(false);
  if (foregroundCall.getState() == CdmaCall.State.ACTIVE) {
    return dialThreeWay(dialString);
  }
  pendingMO=new CdmaConnection(phone.getContext(),dialString,this,foregroundCall);
  hangupPendingMO=false;
  if (pendingMO.address == null || pendingMO.address.length() == 0 || pendingMO.address.indexOf(PhoneNumberUtils.WILD) >= 0) {
    pendingMO.cause=Connection.DisconnectCause.INVALID_NUMBER;
    pollCallsWhenSafe();
  }
 else {
    setMute(false);
    disableDataCallInEmergencyCall(dialString);
    if (!isPhoneInEcmMode || (isPhoneInEcmMode && isEmergencyCall)) {
      cm.dial(pendingMO.address,clirMode,obtainCompleteMessage());
    }
 else {
      phone.exitEmergencyCallbackMode();
      phone.setOnEcbModeExitResponse(this,EVENT_EXIT_ECM_RESPONSE_CDMA,null);
      pendingCallClirMode=clirMode;
      pendingCallInEcm=true;
    }
  }
  updatePhoneState();
  phone.notifyPreciseCallStateChanged();
  return pendingMO;
}
