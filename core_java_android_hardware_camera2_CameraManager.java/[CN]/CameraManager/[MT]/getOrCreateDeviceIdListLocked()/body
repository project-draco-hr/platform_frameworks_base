{
  if (mDeviceIdList == null) {
    int numCameras=0;
    ICameraService cameraService=CameraManagerGlobal.get().getCameraService();
    ArrayList<String> deviceIdList=new ArrayList<>();
    if (cameraService == null) {
      return deviceIdList;
    }
    try {
      numCameras=cameraService.getNumberOfCameras(CAMERA_TYPE_ALL);
    }
 catch (    ServiceSpecificException e) {
      throwAsPublicException(e);
    }
catch (    RemoteException e) {
      return deviceIdList;
    }
    for (int i=0; i < numCameras; ++i) {
      boolean isDeviceSupported=false;
      try {
        CameraMetadataNative info=cameraService.getCameraCharacteristics(i);
        if (!info.isEmpty()) {
          isDeviceSupported=true;
        }
 else {
          throw new AssertionError("Expected to get non-empty characteristics");
        }
      }
 catch (      ServiceSpecificException e) {
        if (e.errorCode != ICameraService.ERROR_DISCONNECTED || e.errorCode != ICameraService.ERROR_ILLEGAL_ARGUMENT) {
          throwAsPublicException(e);
        }
      }
catch (      RemoteException e) {
        deviceIdList.clear();
        return deviceIdList;
      }
      if (isDeviceSupported) {
        deviceIdList.add(String.valueOf(i));
      }
 else {
        Log.w(TAG,"Error querying camera device " + i + " for listing.");
      }
    }
    mDeviceIdList=deviceIdList;
  }
  return mDeviceIdList;
}
