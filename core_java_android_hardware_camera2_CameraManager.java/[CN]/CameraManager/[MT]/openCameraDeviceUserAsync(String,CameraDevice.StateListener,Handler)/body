{
  try {
synchronized (mLock) {
      ICameraDeviceUser cameraUser;
      android.hardware.camera2.impl.CameraDevice device=new android.hardware.camera2.impl.CameraDevice(cameraId,listener,handler);
      BinderHolder holder=new BinderHolder();
      ICameraDeviceCallbacks callbacks=device.getCallbacks();
      int id=Integer.parseInt(cameraId);
      try {
        mCameraService.connectDevice(callbacks,id,mContext.getPackageName(),USE_CALLING_UID,holder);
        cameraUser=ICameraDeviceUser.Stub.asInterface(holder.getBinder());
      }
 catch (      CameraRuntimeException e) {
        if (e.getReason() == CameraAccessException.CAMERA_DEPRECATED_HAL) {
          Log.i(TAG,"Using legacy camera HAL.");
          cameraUser=CameraDeviceUserShim.connectBinderShim(callbacks,id);
        }
 else {
          throw e;
        }
      }
      device.setRemoteDevice(cameraUser);
    }
  }
 catch (  NumberFormatException e) {
    throw new IllegalArgumentException("Expected cameraId to be numeric, but it was: " + cameraId);
  }
catch (  CameraRuntimeException e) {
    throw e.asChecked();
  }
catch (  RemoteException e) {
  }
}
