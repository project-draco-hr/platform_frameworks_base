{
  mContext=context;
  IBinder cameraServiceBinder=ServiceManager.getService(CAMERA_SERVICE_BINDER_NAME);
  ICameraService cameraServiceRaw=ICameraService.Stub.asInterface(cameraServiceBinder);
  mCameraService=CameraBinderDecorator.newInstance(cameraServiceRaw);
  try {
    int err=CameraMetadataNative.nativeSetupGlobalVendorTagDescriptor();
    if (err == CameraBinderDecorator.EOPNOTSUPP) {
      Log.w(TAG,"HAL version doesn't vendor tags.");
    }
 else {
      CameraBinderDecorator.throwOnError(CameraMetadataNative.nativeSetupGlobalVendorTagDescriptor());
    }
  }
 catch (  CameraRuntimeException e) {
    throw new IllegalStateException("Failed to setup camera vendor tags",e.asChecked());
  }
  try {
    mCameraService.addListener(new CameraServiceListener());
  }
 catch (  CameraRuntimeException e) {
    throw new IllegalStateException("Failed to register a camera service listener",e.asChecked());
  }
catch (  RemoteException e) {
  }
}
