{
synchronized (mLock) {
    if (cameraId == null) {
      throw new IllegalArgumentException("cameraId was null");
    }
    ICameraService cameraService=getCameraService();
    if (cameraService == null) {
      throw new CameraAccessException(CameraAccessException.CAMERA_DISCONNECTED,"Camera service is currently unavailable");
    }
    try {
      cameraService.setTorchMode(cameraId,enabled,mTorchClientBinder);
    }
 catch (    ServiceSpecificException e) {
      throwAsPublicException(e);
    }
catch (    RemoteException e) {
      throw new CameraAccessException(CameraAccessException.CAMERA_DISCONNECTED,"Camera service is currently unavailable");
    }
  }
}
