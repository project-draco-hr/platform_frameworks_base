{
  if (DEBUG) {
    Log.v(TAG,String.format("Camera id %s has torch status changed to 0x%x",id,status));
  }
  if (!validTorchStatus(status)) {
    Log.e(TAG,String.format("Ignoring invalid device %s torch status 0x%x",id,status));
    return;
  }
  Integer oldStatus=mTorchStatus.put(id,status);
  if (oldStatus != null && oldStatus == status) {
    if (DEBUG) {
      Log.v(TAG,String.format("Torch status changed to 0x%x, which is what it already was",status));
    }
    return;
  }
  final int callbackCount=mTorchCallbackMap.size();
  for (int i=0; i < callbackCount; i++) {
    final Handler handler=mTorchCallbackMap.valueAt(i);
    final TorchCallback callback=mTorchCallbackMap.keyAt(i);
    postSingleTorchUpdate(callback,handler,id,status);
  }
}
