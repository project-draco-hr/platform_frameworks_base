{
  mCameraService=null;
  IBinder cameraServiceBinder=ServiceManager.getService(CAMERA_SERVICE_BINDER_NAME);
  if (cameraServiceBinder == null) {
    return;
  }
  try {
    cameraServiceBinder.linkToDeath(this,0);
  }
 catch (  RemoteException e) {
    return;
  }
  ICameraService cameraServiceRaw=ICameraService.Stub.asInterface(cameraServiceBinder);
  ICameraService cameraService=CameraServiceBinderDecorator.newInstance(cameraServiceRaw);
  try {
    CameraServiceBinderDecorator.throwOnError(CameraMetadataNative.nativeSetupGlobalVendorTagDescriptor());
  }
 catch (  CameraRuntimeException e) {
    handleRecoverableSetupErrors(e,"Failed to set up vendor tags");
  }
  try {
    cameraService.addListener(this);
    mCameraService=cameraService;
  }
 catch (  CameraRuntimeException e) {
    throw new IllegalStateException("Failed to register a camera service listener",e.asChecked());
  }
catch (  RemoteException e) {
  }
}
