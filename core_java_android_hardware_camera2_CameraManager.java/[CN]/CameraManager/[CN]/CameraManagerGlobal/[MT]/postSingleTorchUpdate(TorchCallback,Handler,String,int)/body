{
switch (status) {
case ICameraServiceListener.TORCH_STATUS_AVAILABLE_ON:
case ICameraServiceListener.TORCH_STATUS_AVAILABLE_OFF:
    handler.post(new Runnable(){
      @Override public void run(){
        callback.onTorchModeChanged(id,status == ICameraServiceListener.TORCH_STATUS_AVAILABLE_ON);
      }
    }
);
  break;
default :
handler.post(new Runnable(){
  @Override public void run(){
    callback.onTorchModeUnavailable(id);
  }
}
);
break;
}
}
