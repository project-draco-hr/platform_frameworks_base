{
synchronized (CameraManager.this.mLock) {
    Log.v(TAG,String.format("Camera id %d has status changed to 0x%x",cameraId,status));
    final String id=String.valueOf(cameraId);
    if (!validStatus(status)) {
      Log.e(TAG,String.format("Ignoring invalid device %d status 0x%x",cameraId,status));
      return;
    }
    Integer oldStatus=mDeviceStatus.put(id,status);
    if (oldStatus != null && oldStatus == status) {
      Log.v(TAG,String.format("Device status changed to 0x%x, which is what it already was",status));
      return;
    }
    if (oldStatus != null && isAvailable(status) == isAvailable(oldStatus)) {
      Log.v(TAG,String.format("Device status was previously available (%d), " + " and is now again available (%d)" + "so no new client visible update will be sent",isAvailable(status),isAvailable(status)));
      return;
    }
    final int listenerCount=mListenerMap.size();
    for (int i=0; i < listenerCount; i++) {
      Handler handler=mListenerMap.valueAt(i);
      final AvailabilityListener listener=mListenerMap.keyAt(i);
      if (isAvailable(status)) {
        handler.post(new Runnable(){
          public void run(){
            listener.onCameraAvailable(id);
          }
        }
);
      }
 else {
        handler.post(new Runnable(){
          public void run(){
            listener.onCameraUnavailable(id);
          }
        }
);
      }
    }
  }
}
