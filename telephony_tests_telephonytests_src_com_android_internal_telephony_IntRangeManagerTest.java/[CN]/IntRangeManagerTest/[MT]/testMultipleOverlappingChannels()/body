{
  TestIntRangeManager testManager=new TestIntRangeManager();
  assertEquals("flags before test",0,testManager.flags);
  assertTrue("enabling range 1",testManager.enableRange(67,9999,"client1"));
  assertEquals("flags after test",ALL_FLAGS_SET,testManager.flags);
  assertEquals("configlist size",1,testManager.mConfigList.size());
  checkConfigInfo(testManager.mConfigList.get(0),67,9999,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,true);
  testManager.reset();
  assertTrue("enabling range 2",testManager.enableRange(150,250,"client2"));
  assertEquals("flags after test",0,testManager.flags);
  assertEquals("configlist size",0,testManager.mConfigList.size());
  testManager.reset();
  assertTrue("enabling range 3",testManager.enableRange(25,75,"client3"));
  assertEquals("flags after test",ALL_FLAGS_SET,testManager.flags);
  assertEquals("configlist size",1,testManager.mConfigList.size());
  checkConfigInfo(testManager.mConfigList.get(0),25,66,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,true);
  testManager.reset();
  assertTrue("enabling range 4",testManager.enableRange(12,500,"client4"));
  assertEquals("flags after test",ALL_FLAGS_SET,testManager.flags);
  assertEquals("configlist size",1,testManager.mConfigList.size());
  checkConfigInfo(testManager.mConfigList.get(0),12,24,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,true);
  testManager.reset();
  assertTrue("enabling range 5",testManager.enableRange(8000,9998,"client5"));
  assertEquals("flags after test",0,testManager.flags);
  assertEquals("configlist size",0,testManager.mConfigList.size());
  testManager.reset();
  assertTrue("enabling range 6",testManager.enableRange(50000,65535,"client6"));
  assertEquals("flags after test",ALL_FLAGS_SET,testManager.flags);
  assertEquals("configlist size",1,testManager.mConfigList.size());
  checkConfigInfo(testManager.mConfigList.get(0),50000,65535,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,true);
  testManager.reset();
  assertTrue("updating ranges",testManager.updateRanges());
  assertEquals("flags after test",ALL_FLAGS_SET,testManager.flags);
  assertEquals("configlist size",2,testManager.mConfigList.size());
  checkConfigInfo(testManager.mConfigList.get(0),12,9999,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,true);
  checkConfigInfo(testManager.mConfigList.get(1),50000,65535,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,true);
  testManager.reset();
  assertTrue("disabling range 1",testManager.disableRange(67,9999,"client1"));
  assertEquals("flags after test",ALL_FLAGS_SET,testManager.flags);
  assertEquals("configlist size",2,testManager.mConfigList.size());
  checkConfigInfo(testManager.mConfigList.get(0),501,7999,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,false);
  checkConfigInfo(testManager.mConfigList.get(1),9999,9999,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,false);
  testManager.reset();
  assertTrue("updating ranges",testManager.updateRanges());
  assertEquals("flags after test",ALL_FLAGS_SET,testManager.flags);
  assertEquals("configlist size",3,testManager.mConfigList.size());
  checkConfigInfo(testManager.mConfigList.get(0),12,500,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,true);
  checkConfigInfo(testManager.mConfigList.get(1),8000,9998,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,true);
  checkConfigInfo(testManager.mConfigList.get(2),50000,65535,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,true);
  testManager.reset();
  assertTrue("disabling range 4",testManager.disableRange(12,500,"client4"));
  assertEquals("flags after test",ALL_FLAGS_SET,testManager.flags);
  assertEquals("configlist size",3,testManager.mConfigList.size());
  checkConfigInfo(testManager.mConfigList.get(0),12,24,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,false);
  checkConfigInfo(testManager.mConfigList.get(1),76,149,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,false);
  checkConfigInfo(testManager.mConfigList.get(2),251,500,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,false);
  testManager.reset();
  assertTrue("updating ranges",testManager.updateRanges());
  assertEquals("flags after test",ALL_FLAGS_SET,testManager.flags);
  assertEquals("configlist size",4,testManager.mConfigList.size());
  checkConfigInfo(testManager.mConfigList.get(0),25,75,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,true);
  checkConfigInfo(testManager.mConfigList.get(1),150,250,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,true);
  checkConfigInfo(testManager.mConfigList.get(2),8000,9998,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,true);
  checkConfigInfo(testManager.mConfigList.get(3),50000,65535,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,true);
  testManager.reset();
  assertTrue("disabling range 5",testManager.disableRange(8000,9998,"client5"));
  assertEquals("flags after test",ALL_FLAGS_SET,testManager.flags);
  assertEquals("configlist size",1,testManager.mConfigList.size());
  checkConfigInfo(testManager.mConfigList.get(0),8000,9998,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,false);
  testManager.reset();
  assertTrue("updating ranges",testManager.updateRanges());
  assertEquals("flags after test",ALL_FLAGS_SET,testManager.flags);
  assertEquals("configlist size",3,testManager.mConfigList.size());
  checkConfigInfo(testManager.mConfigList.get(0),25,75,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,true);
  checkConfigInfo(testManager.mConfigList.get(1),150,250,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,true);
  checkConfigInfo(testManager.mConfigList.get(2),50000,65535,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,true);
  testManager.reset();
  assertTrue("disabling range 6",testManager.disableRange(50000,65535,"client6"));
  assertEquals("flags after test",ALL_FLAGS_SET,testManager.flags);
  assertEquals("configlist size",1,testManager.mConfigList.size());
  checkConfigInfo(testManager.mConfigList.get(0),50000,65535,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,false);
  testManager.reset();
  assertTrue("updating ranges",testManager.updateRanges());
  assertEquals("flags after test",ALL_FLAGS_SET,testManager.flags);
  assertEquals("configlist size",2,testManager.mConfigList.size());
  checkConfigInfo(testManager.mConfigList.get(0),25,75,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,true);
  checkConfigInfo(testManager.mConfigList.get(1),150,250,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,true);
  testManager.reset();
  assertTrue("disabling range 2",testManager.disableRange(150,250,"client2"));
  assertEquals("flags after test",ALL_FLAGS_SET,testManager.flags);
  assertEquals("configlist size",1,testManager.mConfigList.size());
  checkConfigInfo(testManager.mConfigList.get(0),150,250,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,false);
  testManager.reset();
  assertTrue("updating ranges",testManager.updateRanges());
  assertEquals("flags after test",ALL_FLAGS_SET,testManager.flags);
  assertEquals("configlist size",1,testManager.mConfigList.size());
  checkConfigInfo(testManager.mConfigList.get(0),25,75,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,true);
  testManager.reset();
  assertTrue("disabling range 3",testManager.disableRange(25,75,"client3"));
  assertEquals("flags after test",ALL_FLAGS_SET,testManager.flags);
  assertEquals("configlist size",1,testManager.mConfigList.size());
  checkConfigInfo(testManager.mConfigList.get(0),25,75,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,false);
  testManager.reset();
  assertTrue("updating ranges",testManager.updateRanges());
  assertEquals("flags after test",FLAG_START_UPDATE_CALLED | FLAG_FINISH_UPDATE_CALLED,testManager.flags);
  assertEquals("configlist size",0,testManager.mConfigList.size());
}
