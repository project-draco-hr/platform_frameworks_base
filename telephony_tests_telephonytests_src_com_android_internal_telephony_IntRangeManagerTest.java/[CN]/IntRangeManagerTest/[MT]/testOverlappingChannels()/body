{
  TestIntRangeManager testManager=new TestIntRangeManager();
  assertEquals("flags before test",0,testManager.flags);
  assertTrue("enabling range 1",testManager.enableRange(100,200,"client1"));
  assertEquals("flags after test",ALL_FLAGS_SET,testManager.flags);
  assertEquals("configlist size",1,testManager.mConfigList.size());
  checkConfigInfo(testManager.mConfigList.get(0),100,200,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,true);
  testManager.reset();
  assertTrue("enabling range 2",testManager.enableRange(150,250,"client2"));
  assertEquals("flags after test",ALL_FLAGS_SET,testManager.flags);
  assertEquals("configlist size",1,testManager.mConfigList.size());
  checkConfigInfo(testManager.mConfigList.get(0),201,250,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,true);
  testManager.reset();
  assertTrue("updating ranges",testManager.updateRanges());
  assertEquals("flags after test",ALL_FLAGS_SET,testManager.flags);
  assertEquals("configlist size",1,testManager.mConfigList.size());
  checkConfigInfo(testManager.mConfigList.get(0),100,250,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,true);
  testManager.reset();
  assertTrue("disabling range 1",testManager.disableRange(100,200,"client1"));
  assertEquals("flags after test",ALL_FLAGS_SET,testManager.flags);
  assertEquals("configlist size",1,testManager.mConfigList.size());
  checkConfigInfo(testManager.mConfigList.get(0),100,149,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,false);
  testManager.reset();
  assertTrue("disabling range 2",testManager.disableRange(150,250,"client2"));
  assertEquals("flags after test",ALL_FLAGS_SET,testManager.flags);
  assertEquals("configlist size",1,testManager.mConfigList.size());
  checkConfigInfo(testManager.mConfigList.get(0),150,250,SMS_CB_CODE_SCHEME_MIN,SMS_CB_CODE_SCHEME_MAX,false);
  testManager.reset();
  assertTrue("updating ranges",testManager.updateRanges());
  assertEquals("flags after test",FLAG_START_UPDATE_CALLED | FLAG_FINISH_UPDATE_CALLED,testManager.flags);
  assertEquals("configlist size",0,testManager.mConfigList.size());
}
