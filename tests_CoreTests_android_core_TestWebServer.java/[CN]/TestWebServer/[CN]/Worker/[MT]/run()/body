{
  running=true;
  while (running) {
    if (s == null) {
      try {
        log(this + " Moving to wait state");
        wait();
      }
 catch (      InterruptedException e) {
        continue;
      }
      if (!running)       break;
    }
    try {
      handleClient();
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
    s=null;
    Vector pool=threads;
synchronized (pool) {
      if (pool.size() >= workers) {
        activeThreads.remove(this);
        return;
      }
 else {
        pool.addElement(this);
      }
    }
  }
  log(this + " terminated");
}
