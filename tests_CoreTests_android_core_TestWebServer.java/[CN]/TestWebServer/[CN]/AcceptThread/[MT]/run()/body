{
  running=true;
  try {
    while (running) {
      Socket s=ss.accept();
      acceptedConnections++;
      if (acceptedConnections >= acceptLimit) {
        running=false;
      }
      Worker w=null;
synchronized (threads) {
        if (threads.isEmpty()) {
          Worker ws=new Worker();
          ws.setSocket(s);
          activeThreads.addElement(ws);
          (new Thread(ws,"additional worker")).start();
        }
 else {
          w=(Worker)threads.elementAt(0);
          threads.removeElementAt(0);
          w.setSocket(s);
        }
      }
    }
  }
 catch (  SocketException e) {
    log("SocketException in AcceptThread: probably closed during accept");
    running=false;
  }
catch (  IOException e) {
    log("IOException in AcceptThread");
    e.printStackTrace();
    running=false;
  }
  log("AcceptThread terminated" + this);
}
