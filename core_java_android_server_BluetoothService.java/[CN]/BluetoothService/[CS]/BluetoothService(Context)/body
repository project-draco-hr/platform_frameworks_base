{
  mContext=context;
  mBatteryStats=IBatteryStats.Stub.asInterface(ServiceManager.getService("batteryinfo"));
  initializeNativeDataNative();
  if (isEnabledNative() == 1) {
    Log.w(TAG,"Bluetooth daemons already running - runtime restart? ");
    disableNative();
  }
  mBluetoothState=BluetoothAdapter.STATE_OFF;
  mIsDiscovering=false;
  mTetheringOn=false;
  mAdapterProperties=new HashMap<String,String>();
  mDeviceProperties=new HashMap<String,Map<String,String>>();
  mDeviceServiceChannelCache=new HashMap<String,Map<ParcelUuid,Integer>>();
  mDeviceOobData=new HashMap<String,Pair<byte[],byte[]>>();
  mUuidIntentTracker=new ArrayList<String>();
  mUuidCallbackTracker=new HashMap<RemoteService,IBluetoothCallback>();
  mServiceRecordToPid=new HashMap<Integer,Integer>();
  mDeviceProfileState=new HashMap<String,BluetoothDeviceProfileState>();
  mA2dpProfileState=new BluetoothProfileState(mContext,BluetoothProfileState.A2DP);
  mHfpProfileState=new BluetoothProfileState(mContext,BluetoothProfileState.HFP);
  mHidProfileState=new BluetoothProfileState(mContext,BluetoothProfileState.HID);
  mBluetoothIfaceAddresses=new ArrayList<String>(BluetoothPan.MAX_CONNECTIONS);
  for (int i=1; i <= BluetoothPan.MAX_CONNECTIONS; i++) {
    mBluetoothIfaceAddresses.add(BLUETOOTH_NEAR_IFACE_ADDR_PREFIX + i);
  }
  mHfpProfileState.start();
  mA2dpProfileState.start();
  mHidProfileState.start();
  IntentFilter filter=new IntentFilter();
  registerForAirplaneMode(filter);
  filter.addAction(Intent.ACTION_DOCK_EVENT);
  mContext.registerReceiver(mReceiver,filter);
  mInputDevices=new HashMap<BluetoothDevice,Integer>();
  mPanDevices=new HashMap<BluetoothDevice,Integer>();
}
