{
  mContext.enforceCallingOrSelfPermission(BLUETOOTH_PERM,"Need BLUETOOTH permission");
  if (!isEnabledInternal())   return -1;
  if (serviceName == null || uuid == null || channel < 1 || channel > BluetoothSocket.MAX_RFCOMM_CHANNEL) {
    return -1;
  }
  if (BluetoothUuid.isUuidPresent(BluetoothUuid.RESERVED_UUIDS,uuid)) {
    Log.w(TAG,"Attempted to register a reserved UUID: " + uuid);
    return -1;
  }
  int handle=addRfcommServiceRecordNative(serviceName,uuid.getUuid().getMostSignificantBits(),uuid.getUuid().getLeastSignificantBits(),(short)channel);
  if (DBG)   Log.d(TAG,"new handle " + Integer.toHexString(handle));
  if (handle == -1) {
    return -1;
  }
  int pid=Binder.getCallingPid();
  mServiceRecordToPid.put(new Integer(handle),new Pair<Integer,IBinder>(pid,b));
  try {
    b.linkToDeath(new Reaper(handle,pid,RFCOMM_RECORD_REAPER),0);
  }
 catch (  RemoteException e) {
    Log.e(TAG,"",e);
  }
  return handle;
}
