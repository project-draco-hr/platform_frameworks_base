{
  int prevState;
  String ifaceAddr=null;
  if (mPanDevices.get(device) == null) {
    prevState=BluetoothPan.STATE_DISCONNECTED;
  }
 else {
    prevState=mPanDevices.get(device).first;
    ifaceAddr=mPanDevices.get(device).second;
  }
  if (prevState == state)   return;
  if (role == BluetoothPan.LOCAL_NAP_ROLE) {
    if (state == BluetoothPan.STATE_CONNECTED) {
      ifaceAddr=enableTethering(iface);
      if (ifaceAddr == null)       Log.e(TAG,"Error seting up tether interface");
    }
 else     if (state == BluetoothPan.STATE_DISCONNECTED) {
      if (ifaceAddr != null) {
        mBluetoothIfaceAddresses.remove(ifaceAddr);
        ifaceAddr=null;
      }
    }
  }
 else {
    if (state == BluetoothPan.STATE_CONNECTED) {
      mIface=iface;
      BluetoothTetheringDataTracker.getInstance().startReverseTether(iface,device);
    }
 else     if (state == BluetoothPan.STATE_DISCONNECTED && (prevState == BluetoothPan.STATE_CONNECTED || prevState == BluetoothPan.STATE_DISCONNECTING)) {
      BluetoothTetheringDataTracker.getInstance().stopReverseTether(mIface);
    }
  }
  Pair<Integer,String> value=new Pair<Integer,String>(state,ifaceAddr);
  mPanDevices.put(device,value);
  Intent intent=new Intent(BluetoothPan.ACTION_PAN_STATE_CHANGED);
  intent.putExtra(BluetoothDevice.EXTRA_DEVICE,device);
  intent.putExtra(BluetoothPan.EXTRA_PREVIOUS_PAN_STATE,prevState);
  intent.putExtra(BluetoothPan.EXTRA_PAN_STATE,state);
  intent.putExtra(BluetoothPan.EXTRA_LOCAL_ROLE,role);
  mContext.sendBroadcast(intent,BLUETOOTH_PERM);
  if (DBG)   log("Pan Device state : device: " + device + " State:"+ prevState+ "->"+ state);
  sendConnectionStateChange(device,state,prevState);
}
