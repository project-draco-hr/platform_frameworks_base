{
  int pid=Binder.getCallingPid();
  if (!mStateChangeTracker.containsKey(pid)) {
    if (on) {
      mStateChangeTracker.put(pid,callback);
    }
 else {
      return false;
    }
  }
 else   if (!on) {
    mStateChangeTracker.remove(pid);
  }
  if (binder != null) {
    try {
      binder.linkToDeath(new Reaper(pid,STATE_CHANGE_REAPER),0);
    }
 catch (    RemoteException e) {
      return false;
    }
  }
  int type;
  if (on) {
    type=BluetoothAdapterStateMachine.PER_PROCESS_TURN_ON;
  }
 else {
    type=BluetoothAdapterStateMachine.PER_PROCESS_TURN_OFF;
  }
  mBluetoothState.sendMessage(type,callback);
  return true;
}
