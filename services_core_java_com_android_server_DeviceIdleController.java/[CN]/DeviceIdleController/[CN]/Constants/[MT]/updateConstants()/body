{
synchronized (DeviceIdleController.this) {
    try {
      mParser.setString(Settings.Global.getString(mResolver,Settings.Global.DEVICE_IDLE_CONSTANTS));
    }
 catch (    IllegalArgumentException e) {
      Slog.e(TAG,"Bad device idle settings",e);
    }
    INACTIVE_TIMEOUT=mParser.getLong(KEY_INACTIVE_TIMEOUT,!COMPRESS_TIME ? 30 * 60 * 1000L : 3 * 60 * 1000L);
    SENSING_TIMEOUT=mParser.getLong(KEY_SENSING_TIMEOUT,!DEBUG ? 5 * 60 * 1000L : 60 * 1000L);
    MOTION_INACTIVE_TIMEOUT=mParser.getLong(KEY_MOTION_INACTIVE_TIMEOUT,!COMPRESS_TIME ? 10 * 60 * 1000L : 60 * 1000L);
    IDLE_AFTER_INACTIVE_TIMEOUT=mParser.getLong(KEY_IDLE_AFTER_INACTIVE_TIMEOUT,!COMPRESS_TIME ? 30 * 60 * 1000L : 3 * 60 * 1000L);
    IDLE_PENDING_TIMEOUT=mParser.getLong(KEY_IDLE_PENDING_TIMEOUT,!COMPRESS_TIME ? 5 * 60 * 1000L : 30 * 1000L);
    MAX_IDLE_PENDING_TIMEOUT=mParser.getLong(KEY_MAX_IDLE_PENDING_TIMEOUT,!COMPRESS_TIME ? 10 * 60 * 1000L : 60 * 1000L);
    IDLE_PENDING_FACTOR=mParser.getFloat(KEY_IDLE_PENDING_FACTOR,2f);
    IDLE_TIMEOUT=mParser.getLong(KEY_IDLE_TIMEOUT,!COMPRESS_TIME ? 60 * 60 * 1000L : 6 * 60 * 1000L);
    MAX_IDLE_TIMEOUT=mParser.getLong(KEY_MAX_IDLE_TIMEOUT,!COMPRESS_TIME ? 6 * 60 * 60* 1000L : 30 * 60 * 1000L);
    IDLE_FACTOR=mParser.getFloat(KEY_IDLE_FACTOR,2f);
    MIN_TIME_TO_ALARM=mParser.getLong(KEY_MIN_TIME_TO_ALARM,!COMPRESS_TIME ? 60 * 60 * 1000L : 6 * 60 * 1000L);
    MAX_TEMP_APP_WHITELIST_DURATION=mParser.getLong(KEY_MAX_TEMP_APP_WHITELIST_DURATION,5 * 60 * 1000L);
    MMS_TEMP_APP_WHITELIST_DURATION=mParser.getLong(KEY_MMS_TEMP_APP_WHITELIST_DURATION,30 * 1000L);
  }
}
