{
  EventLogTags.writeDeviceIdleStep();
  final long now=SystemClock.elapsedRealtime();
  if ((now + DEFAULT_MIN_TIME_TO_ALARM) > mAlarmManager.getNextWakeFromIdleTime()) {
    if (mState != STATE_ACTIVE) {
      becomeActiveLocked("alarm");
    }
    return;
  }
switch (mState) {
case STATE_INACTIVE:
    startMonitoringSignificantMotion();
  scheduleAlarmLocked(DEFAULT_IDLE_AFTER_INACTIVE_TIMEOUT,false);
mNextIdlePendingDelay=DEFAULT_IDLE_PENDING_TIMEOUT;
mNextIdleDelay=DEFAULT_IDLE_TIMEOUT;
mState=STATE_IDLE_PENDING;
EventLogTags.writeDeviceIdle(mState,"step");
break;
case STATE_IDLE_PENDING:
case STATE_IDLE_MAINTENANCE:
scheduleAlarmLocked(mNextIdleDelay,true);
mNextIdleDelay=(long)(mNextIdleDelay * DEFAULT_IDLE_FACTOR);
if (mNextIdleDelay > DEFAULT_MAX_IDLE_TIMEOUT) {
mNextIdleDelay=DEFAULT_MAX_IDLE_TIMEOUT;
}
mState=STATE_IDLE;
EventLogTags.writeDeviceIdle(mState,"step");
mHandler.sendEmptyMessage(MSG_REPORT_IDLE_ON);
break;
case STATE_IDLE:
scheduleAlarmLocked(mNextIdlePendingDelay,false);
mNextIdlePendingDelay=(long)(mNextIdlePendingDelay * DEFAULT_IDLE_PENDING_FACTOR);
if (mNextIdlePendingDelay > DEFAULT_MAX_IDLE_PENDING_TIMEOUT) {
mNextIdlePendingDelay=DEFAULT_MAX_IDLE_PENDING_TIMEOUT;
}
mState=STATE_IDLE_MAINTENANCE;
EventLogTags.writeDeviceIdle(mState,"step");
mHandler.sendEmptyMessage(MSG_REPORT_IDLE_OFF);
break;
}
}
