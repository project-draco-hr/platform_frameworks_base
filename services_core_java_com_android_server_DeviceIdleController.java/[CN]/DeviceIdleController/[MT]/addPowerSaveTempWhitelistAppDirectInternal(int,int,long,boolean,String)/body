{
  final long timeNow=SystemClock.elapsedRealtime();
  Runnable networkPolicyTempWhitelistCallback=null;
synchronized (this) {
    int callingAppId=UserHandle.getAppId(callingUid);
    if (callingAppId >= Process.FIRST_APPLICATION_UID) {
      if (!mPowerSaveWhitelistSystemAppIds.get(callingAppId)) {
        throw new SecurityException("Calling app " + UserHandle.formatUid(callingUid) + " is not on whitelist");
      }
    }
    duration=Math.min(duration,mConstants.MAX_TEMP_APP_WHITELIST_DURATION);
    Pair<MutableLong,String> entry=mTempWhitelistAppIdEndTimes.get(appId);
    final boolean newEntry=entry == null;
    if (newEntry) {
      entry=new Pair<>(new MutableLong(0),reason);
      mTempWhitelistAppIdEndTimes.put(appId,entry);
    }
    entry.first.value=timeNow + duration;
    if (DEBUG) {
      Slog.d(TAG,"Adding AppId " + appId + " to temp whitelist. New entry: "+ newEntry);
    }
    if (newEntry) {
      try {
        mBatteryStats.noteEvent(BatteryStats.HistoryItem.EVENT_TEMP_WHITELIST_START,reason,appId);
      }
 catch (      RemoteException e) {
      }
      postTempActiveTimeoutMessage(appId,duration);
      updateTempWhitelistAppIdsLocked();
      if (mNetworkPolicyTempWhitelistCallback != null) {
        if (!sync) {
          mHandler.post(mNetworkPolicyTempWhitelistCallback);
        }
 else {
          networkPolicyTempWhitelistCallback=mNetworkPolicyTempWhitelistCallback;
        }
      }
      reportTempWhitelistChangedLocked();
    }
  }
  if (networkPolicyTempWhitelistCallback != null) {
    networkPolicyTempWhitelistCallback.run();
  }
}
