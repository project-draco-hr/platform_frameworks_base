{
  mRS=rs;
  mRes=res;
  mWidth=width;
  mHeight=height;
  stopTesting=false;
  mScript=new ScriptC_rslist(mRS,mRes,R.raw.rslist);
  unitTests=new ArrayList<UnitTest>();
  unitTests.add(new UT_primitives(this,mRes,mCtx));
  unitTests.add(new UT_constant(this,mRes,mCtx));
  unitTests.add(new UT_vector(this,mRes,mCtx));
  unitTests.add(new UT_unsigned(this,mRes,mCtx));
  unitTests.add(new UT_array_init(this,mRes,mCtx));
  unitTests.add(new UT_array_alloc(this,mRes,mCtx));
  unitTests.add(new UT_kernel(this,mRes,mCtx));
  unitTests.add(new UT_kernel_struct(this,mRes,mCtx));
  unitTests.add(new UT_bug_char(this,mRes,mCtx));
  unitTests.add(new UT_clamp(this,mRes,mCtx));
  unitTests.add(new UT_clamp_relaxed(this,mRes,mCtx));
  unitTests.add(new UT_convert(this,mRes,mCtx));
  unitTests.add(new UT_convert_relaxed(this,mRes,mCtx));
  unitTests.add(new UT_rsdebug(this,mRes,mCtx));
  unitTests.add(new UT_rstime(this,mRes,mCtx));
  unitTests.add(new UT_rstypes(this,mRes,mCtx));
  unitTests.add(new UT_alloc(this,mRes,mCtx));
  unitTests.add(new UT_refcount(this,mRes,mCtx));
  unitTests.add(new UT_foreach(this,mRes,mCtx));
  unitTests.add(new UT_noroot(this,mRes,mCtx));
  unitTests.add(new UT_atomic(this,mRes,mCtx));
  unitTests.add(new UT_struct(this,mRes,mCtx));
  unitTests.add(new UT_math(this,mRes,mCtx));
  unitTests.add(new UT_math_conformance(this,mRes,mCtx));
  unitTests.add(new UT_math_agree(this,mRes,mCtx));
  unitTests.add(new UT_min(this,mRes,mCtx));
  unitTests.add(new UT_int4(this,mRes,mCtx));
  unitTests.add(new UT_element(this,mRes,mCtx));
  unitTests.add(new UT_sampler(this,mRes,mCtx));
  unitTests.add(new UT_program_store(this,mRes,mCtx));
  unitTests.add(new UT_program_raster(this,mRes,mCtx));
  unitTests.add(new UT_mesh(this,mRes,mCtx));
  unitTests.add(new UT_fp_mad(this,mRes,mCtx));
  UnitTest[] uta=new UnitTest[unitTests.size()];
  uta=unitTests.toArray(uta);
  mListAllocs=new ScriptField_ListAllocs_s(mRS,uta.length);
  for (int i=0; i < uta.length; i++) {
    ScriptField_ListAllocs_s.Item listElem=new ScriptField_ListAllocs_s.Item();
    listElem.text=Allocation.createFromString(mRS,uta[i].name,Allocation.USAGE_SCRIPT);
    listElem.result=uta[i].getResult();
    mListAllocs.set(listElem,i,false);
    uta[i].setItem(listElem);
  }
  mListAllocs.copyAll();
  mScript.bind_gList(mListAllocs);
  mFont=Font.create(mRS,mRes,"serif",Font.Style.BOLD,8);
  mScript.set_gFont(mFont);
  mRS.bindRootScript(mScript);
  test_iter=unitTests.listIterator();
  refreshTestResults();
  TimerTask pTask=new TimerTask(){
    public void run(){
      refreshTestResults();
    }
  }
;
  mTimer=new Timer();
  mTimer.schedule(pTask,RS_TIMER_PERIOD,RS_TIMER_PERIOD);
}
