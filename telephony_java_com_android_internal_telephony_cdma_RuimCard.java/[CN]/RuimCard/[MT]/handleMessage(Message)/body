{
  AsyncResult ar;
  int serviceClassX;
  serviceClassX=CommandsInterface.SERVICE_CLASS_VOICE + CommandsInterface.SERVICE_CLASS_DATA + CommandsInterface.SERVICE_CLASS_FAX;
switch (msg.what) {
case EVENT_RADIO_OFF_OR_NOT_AVAILABLE:
    Log.d(LOG_TAG,"Event EVENT_RADIO_OFF_OR_NOT_AVAILABLE Received");
  status=null;
updateStateProperty();
broadcastRuimStateChangedIntent(RuimCard.INTENT_VALUE_ICC_NOT_READY,null);
break;
case EVENT_RUIM_READY:
Log.d(LOG_TAG,"Event EVENT_RUIM_READY Received");
phone.mCM.getIccStatus(obtainMessage(EVENT_GET_RUIM_STATUS_DONE));
phone.mCM.queryFacilityLock(CommandsInterface.CB_FACILITY_BA_SIM,"",serviceClassX,obtainMessage(EVENT_QUERY_FACILITY_LOCK_DONE));
phone.mCM.queryFacilityLock(CommandsInterface.CB_FACILITY_BA_FD,"",serviceClassX,obtainMessage(EVENT_QUERY_FACILITY_FDN_DONE));
break;
case EVENT_RUIM_LOCKED_OR_ABSENT:
Log.d(LOG_TAG,"Event EVENT_RUIM_LOCKED_OR_ABSENT Received");
phone.mCM.getIccStatus(obtainMessage(EVENT_GET_RUIM_STATUS_DONE));
phone.mCM.queryFacilityLock(CommandsInterface.CB_FACILITY_BA_SIM,"",serviceClassX,obtainMessage(EVENT_QUERY_FACILITY_LOCK_DONE));
break;
case EVENT_GET_RUIM_STATUS_DONE:
Log.d(LOG_TAG,"Event EVENT_GET_RUIM_STATUS_DONE Received");
ar=(AsyncResult)msg.obj;
getRuimStatusDone(ar);
break;
case EVENT_PINPUK_DONE:
Log.d(LOG_TAG,"Event EVENT_PINPUK_DONE Received");
ar=(AsyncResult)msg.obj;
AsyncResult.forMessage(((Message)ar.userObj)).exception=ar.exception;
phone.mCM.getIccStatus(obtainMessage(EVENT_REPOLL_STATUS_DONE,ar.userObj));
break;
case EVENT_REPOLL_STATUS_DONE:
Log.d(LOG_TAG,"Event EVENT_REPOLL_STATUS_DONE Received");
ar=(AsyncResult)msg.obj;
getRuimStatusDone(ar);
((Message)ar.userObj).sendToTarget();
break;
case EVENT_QUERY_FACILITY_LOCK_DONE:
Log.d(LOG_TAG,"Event EVENT_QUERY_FACILITY_LOCK_DONE Received");
ar=(AsyncResult)msg.obj;
onQueryFacilityLock(ar);
break;
case EVENT_QUERY_FACILITY_FDN_DONE:
Log.d(LOG_TAG,"Event EVENT_QUERY_FACILITY_FDN_DONE Received");
ar=(AsyncResult)msg.obj;
onQueryFdnEnabled(ar);
break;
case EVENT_CHANGE_FACILITY_LOCK_DONE:
Log.d(LOG_TAG,"Event EVENT_CHANGE_FACILITY_LOCK_DONE Received");
ar=(AsyncResult)msg.obj;
if (ar.exception == null) {
mRuimPinLocked=mDesiredPinLocked;
if (DBG) log("EVENT_CHANGE_FACILITY_LOCK_DONE: " + "mRuimPinLocked= " + mRuimPinLocked);
}
 else {
Log.e(LOG_TAG,"Error change facility lock with exception " + ar.exception);
}
AsyncResult.forMessage(((Message)ar.userObj)).exception=ar.exception;
((Message)ar.userObj).sendToTarget();
break;
case EVENT_CHANGE_FACILITY_FDN_DONE:
Log.d(LOG_TAG,"Event EVENT_CHANGE_FACILITY_FDN_DONE Received");
ar=(AsyncResult)msg.obj;
if (ar.exception == null) {
mRuimFdnEnabled=mDesiredFdnEnabled;
if (DBG) log("EVENT_CHANGE_FACILITY_FDN_DONE: " + "mRuimFdnEnabled=" + mRuimFdnEnabled);
}
 else {
Log.e(LOG_TAG,"Error change facility fdn with exception " + ar.exception);
}
AsyncResult.forMessage(((Message)ar.userObj)).exception=ar.exception;
((Message)ar.userObj).sendToTarget();
break;
case EVENT_CHANGE_RUIM_PASSWORD_DONE:
Log.d(LOG_TAG,"Event EVENT_CHANGE_RUIM_PASSWORD_DONE Received");
ar=(AsyncResult)msg.obj;
if (ar.exception != null) {
Log.e(LOG_TAG,"Error in change sim password with exception" + ar.exception);
}
AsyncResult.forMessage(((Message)ar.userObj)).exception=ar.exception;
((Message)ar.userObj).sendToTarget();
break;
default :
Log.e(LOG_TAG,"[CdmaRuimCard] Unknown Event " + msg.what);
}
}
