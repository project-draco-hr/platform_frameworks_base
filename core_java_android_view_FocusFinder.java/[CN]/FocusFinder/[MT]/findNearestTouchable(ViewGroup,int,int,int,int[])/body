{
  ArrayList<View> touchables=root.getTouchables();
  int minDistance=Integer.MAX_VALUE;
  View closest=null;
  int numTouchables=touchables.size();
  int edgeSlop=ViewConfiguration.getEdgeSlop();
  Rect closestBounds=new Rect();
  Rect touchableBounds=mOtherRect;
  for (int i=0; i < numTouchables; i++) {
    View touchable=touchables.get(i);
    touchable.getDrawingRect(touchableBounds);
    root.offsetRectBetweenParentAndChild(touchable,touchableBounds,true,true);
    if (!isTouchCandidate(x,y,touchableBounds,direction)) {
      continue;
    }
    int distance=Integer.MAX_VALUE;
switch (direction) {
case View.FOCUS_LEFT:
      distance=x - touchableBounds.right + 1;
    break;
case View.FOCUS_RIGHT:
  distance=touchableBounds.left;
break;
case View.FOCUS_UP:
distance=y - touchableBounds.bottom + 1;
break;
case View.FOCUS_DOWN:
distance=touchableBounds.top;
break;
}
if (distance < edgeSlop) {
if (closest == null || closestBounds.contains(touchableBounds) || (!touchableBounds.contains(closestBounds) && distance < minDistance)) {
minDistance=distance;
closest=touchable;
closestBounds.set(touchableBounds);
switch (direction) {
case View.FOCUS_LEFT:
deltas[0]=-distance;
break;
case View.FOCUS_RIGHT:
deltas[0]=distance;
break;
case View.FOCUS_UP:
deltas[1]=-distance;
break;
case View.FOCUS_DOWN:
deltas[1]=distance;
break;
}
}
}
}
return closest;
}
