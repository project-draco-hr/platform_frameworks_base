{
  Class<?> thisClass=getClass();
  boolean flag=true;
synchronized (childClassesFlags) {
    Boolean flagWrapper=childClassesFlags.get(thisClass);
    if (flagWrapper == null) {
      Method coalesceMethod=null;
      for (Class<?> c=thisClass; c != Component.class; c=c.getSuperclass()) {
        try {
          coalesceMethod=c.getDeclaredMethod("coalesceEvents",new Class[]{Class.forName("java.awt.AWTEvent"),Class.forName("java.awt.AWTEvent")});
        }
 catch (        Exception e) {
        }
        if (coalesceMethod != null) {
          break;
        }
      }
      flag=(coalesceMethod != null);
      childClassesFlags.put(thisClass,Boolean.valueOf(flag));
    }
 else {
      flag=flagWrapper.booleanValue();
    }
  }
  coalescer=flag;
  if (flag) {
    eventsTable=new Hashtable<Integer,LinkedList<AWTEvent>>();
  }
 else {
    eventsTable=null;
  }
}
