{
  Graphics2D g=getGraphics2d();
  g=(Graphics2D)g.create();
  g.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);
  g.setColor(new Color(paint.getColor()));
  int alpha=paint.getAlpha();
  float falpha=alpha / 255.f;
  g.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,falpha));
  if (paint.getTextAlign() != Align.LEFT) {
    float m=paint.measureText(text,index,count);
    if (paint.getTextAlign() == Align.CENTER) {
      x-=m / 2;
    }
 else     if (paint.getTextAlign() == Align.RIGHT) {
      x-=m;
    }
  }
  List<FontInfo> fonts=paint.getFonts();
  try {
    if (fonts.size() > 0) {
      FontInfo mainFont=fonts.get(0);
      int i=index;
      int lastIndex=index + count;
      while (i < lastIndex) {
        int upTo=mainFont.mFont.canDisplayUpTo(text,i,lastIndex);
        if (upTo == -1) {
          g.setFont(mainFont.mFont);
          g.drawChars(text,i,lastIndex - i,(int)x,(int)y);
          return;
        }
 else         if (upTo > 0) {
          g.setFont(mainFont.mFont);
          g.drawChars(text,i,upTo - i,(int)x,(int)y);
          x+=mainFont.mMetrics.charsWidth(text,i,upTo - i);
          i=upTo;
        }
        boolean foundFont=false;
        for (int f=1; f < fonts.size(); f++) {
          FontInfo fontInfo=fonts.get(f);
          int charCount=Character.isHighSurrogate(text[i]) ? 2 : 1;
          upTo=fontInfo.mFont.canDisplayUpTo(text,i,i + charCount);
          if (upTo == -1) {
            g.setFont(fontInfo.mFont);
            g.drawChars(text,i,charCount,(int)x,(int)y);
            x+=fontInfo.mMetrics.charsWidth(text,i,charCount);
            i+=charCount;
            foundFont=true;
            break;
          }
        }
        if (foundFont == false) {
          int charCount=Character.isHighSurrogate(text[i]) ? 2 : 1;
          g.setFont(mainFont.mFont);
          g.drawChars(text,i,charCount,(int)x,(int)y);
          x+=mainFont.mMetrics.charsWidth(text,i,charCount);
          i+=charCount;
        }
      }
    }
  }
  finally {
    g.dispose();
  }
}
