{
  checkXYSign(x,y);
  checkWidthHeight(width,height);
  if (x + width > source.getWidth()) {
    throw new IllegalArgumentException("x + width must be <= bitmap.width()");
  }
  if (y + height > source.getHeight()) {
    throw new IllegalArgumentException("y + height must be <= bitmap.height()");
  }
  if (!source.isMutable() && x == 0 && y == 0 && width == source.getWidth() && height == source.getHeight() && (m == null || m.isIdentity())) {
    return source;
  }
  int neww=width;
  int newh=height;
  Canvas canvas=new Canvas();
  Bitmap bitmap;
  Paint paint;
  Rect srcR=new Rect(x,y,x + width,y + height);
  RectF dstR=new RectF(0,0,width,height);
  if (m == null || m.isIdentity()) {
    bitmap=createBitmap(neww,newh,source.hasAlpha() ? Config.ARGB_8888 : Config.RGB_565);
    paint=null;
  }
 else {
    boolean hasAlpha=source.hasAlpha() || !m.rectStaysRect();
    RectF deviceR=new RectF();
    m.mapRect(deviceR,dstR);
    neww=Math.round(deviceR.width());
    newh=Math.round(deviceR.height());
    bitmap=createBitmap(neww,newh,hasAlpha ? Config.ARGB_8888 : Config.RGB_565);
    if (hasAlpha) {
      bitmap.eraseColor(0);
    }
    canvas.translate(-deviceR.left,-deviceR.top);
    canvas.concat(m);
    paint=new Paint();
    paint.setFilterBitmap(filter);
    if (!m.rectStaysRect()) {
      paint.setAntiAlias(true);
    }
  }
  canvas.setBitmap(bitmap);
  canvas.drawBitmap(source,srcR,dstR,paint);
  bitmap.setDensityScale(source.getDensityScale());
  bitmap.setAutoScalingEnabled(source.isAutoScalingEnabled());
  return bitmap;
}
