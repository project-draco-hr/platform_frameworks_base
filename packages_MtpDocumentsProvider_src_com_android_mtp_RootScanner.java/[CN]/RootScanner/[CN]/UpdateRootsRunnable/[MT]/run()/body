{
  Process.setThreadPriority(Process.THREAD_PRIORITY_BACKGROUND);
  int pollingCount=0;
  while (!Thread.interrupted()) {
    boolean changed=false;
    final MtpDeviceRecord[] devices=mManager.getDevices();
    mDatabase.getMapper().startAddingDocuments(null);
    for (    final MtpDeviceRecord device : devices) {
      if (mDatabase.getMapper().putDeviceDocument(device)) {
        changed=true;
      }
    }
    if (mDatabase.getMapper().stopAddingDocuments(null)) {
      changed=true;
    }
    for (    final MtpDeviceRecord device : devices) {
      final String documentId=mDatabase.getDocumentIdForDevice(device.deviceId);
      if (documentId == null) {
        continue;
      }
      mDatabase.getMapper().startAddingDocuments(documentId);
      if (mDatabase.getMapper().putRootDocuments(documentId,mResources,device.roots)) {
        changed=true;
      }
      if (mDatabase.getMapper().stopAddingDocuments(documentId)) {
        changed=true;
      }
    }
    if (changed) {
      notifyChange();
    }
    pollingCount++;
    try {
      Thread.sleep(pollingCount > SHORT_POLLING_TIMES ? LONG_POLLING_INTERVAL : SHORT_POLLING_INTERVAL);
    }
 catch (    InterruptedException exp) {
      continue;
    }
  }
}
