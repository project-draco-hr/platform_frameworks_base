{
  Process.setThreadPriority(Process.THREAD_PRIORITY_BACKGROUND);
  int pollingCount=0;
  while (!Thread.interrupted()) {
    final int[] deviceIds=mManager.getOpenedDeviceIds();
    if (deviceIds.length == 0) {
      return;
    }
    boolean changed=false;
    mDatabase.getMapper().startAddingDocuments(null);
    for (    int deviceId : deviceIds) {
      try {
        final MtpRoot[] roots=mManager.getRoots(deviceId);
        if (mDatabase.getMapper().putRootDocuments(deviceId,mResources,roots)) {
          changed=true;
        }
      }
 catch (      IOException|SQLiteException exception) {
        Log.e(MtpDocumentsProvider.TAG,exception.getMessage());
      }
    }
    if (mDatabase.getMapper().stopAddingDocuments(null)) {
      changed=true;
    }
    if (changed) {
      notifyChange();
    }
    pollingCount++;
    try {
      Thread.sleep(pollingCount > SHORT_POLLING_TIMES ? LONG_POLLING_INTERVAL : SHORT_POLLING_INTERVAL);
    }
 catch (    InterruptedException exp) {
      continue;
    }
  }
}
