{
  if (proxy == null)   return;
switch (profile) {
case BluetoothProfile.HEADSET:
    BluetoothHeadset headset=(BluetoothHeadset)proxy;
  headset.close();
break;
case BluetoothProfile.A2DP:
BluetoothA2dp a2dp=(BluetoothA2dp)proxy;
a2dp.close();
break;
case BluetoothProfile.A2DP_SINK:
BluetoothA2dpSink a2dpSink=(BluetoothA2dpSink)proxy;
a2dpSink.close();
break;
case BluetoothProfile.AVRCP_CONTROLLER:
BluetoothAvrcpController avrcp=(BluetoothAvrcpController)proxy;
avrcp.close();
break;
case BluetoothProfile.INPUT_DEVICE:
BluetoothInputDevice iDev=(BluetoothInputDevice)proxy;
iDev.close();
break;
case BluetoothProfile.PAN:
BluetoothPan pan=(BluetoothPan)proxy;
pan.close();
break;
case BluetoothProfile.HEALTH:
BluetoothHealth health=(BluetoothHealth)proxy;
health.close();
break;
case BluetoothProfile.GATT:
BluetoothGatt gatt=(BluetoothGatt)proxy;
gatt.close();
break;
case BluetoothProfile.GATT_SERVER:
BluetoothGattServer gattServer=(BluetoothGattServer)proxy;
gattServer.close();
break;
case BluetoothProfile.MAP:
BluetoothMap map=(BluetoothMap)proxy;
map.close();
break;
case BluetoothProfile.HEADSET_CLIENT:
BluetoothHeadsetClient headsetClient=(BluetoothHeadsetClient)proxy;
headsetClient.close();
break;
case BluetoothProfile.SAP:
BluetoothSap sap=(BluetoothSap)proxy;
sap.close();
break;
case BluetoothProfile.PBAP_CLIENT:
BluetoothPbapClient pbapClient=(BluetoothPbapClient)proxy;
pbapClient.close();
break;
case BluetoothProfile.MAP_CLIENT:
BluetoothMapClient mapClient=(BluetoothMapClient)proxy;
mapClient.close();
break;
}
}
