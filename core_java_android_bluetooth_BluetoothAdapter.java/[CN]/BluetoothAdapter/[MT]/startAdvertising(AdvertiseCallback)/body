{
  if (getState() != STATE_ON)   return false;
  try {
    IBluetoothGatt iGatt=mManagerService.getBluetoothGatt();
    if (iGatt == null) {
      return false;
    }
    if (isAdvertising()) {
      if (mAdvertisingGattCallback == null || mAdvertisingGattCallback.mLeHandle == -1) {
        Log.e(TAG,"failed to restart advertising, invalid callback");
        return false;
      }
      iGatt.startAdvertising(mAdvertisingGattCallback.mLeHandle);
      mHandler.post(new Runnable(){
        @Override public void run(){
          callback.onAdvertiseStart(ADVERTISE_CALLBACK_SUCCESS);
        }
      }
);
      return true;
    }
    UUID uuid=UUID.randomUUID();
    GattCallbackWrapper wrapper=new GattCallbackWrapper(this,null,null,callback);
    iGatt.registerClient(new ParcelUuid(uuid),wrapper);
    if (!wrapper.advertiseStarted()) {
      return false;
    }
synchronized (mLock) {
      mAdvertisingGattCallback=wrapper;
    }
    return true;
  }
 catch (  RemoteException e) {
    Log.e(TAG,"",e);
    return false;
  }
}
