{
  super(context);
  mUpdateMonitor=updateMonitor;
  mCallback=callback;
  mCreationOrientation=configuration.orientation;
  mKeyboardHidden=configuration.hardKeyboardHidden;
  mLockPatternUtils=lockpatternutils;
  LayoutInflater inflater=LayoutInflater.from(context);
  if (mKeyboardHidden == Configuration.HARDKEYBOARDHIDDEN_NO) {
    inflater.inflate(R.layout.keyguard_screen_sim_pin_landscape,this,true);
  }
 else {
    inflater.inflate(R.layout.keyguard_screen_sim_pin_portrait,this,true);
    new TouchInput();
  }
  mHeaderText=(TextView)findViewById(R.id.headerText);
  mPinText=(TextView)findViewById(R.id.pinDisplay);
  mBackSpaceButton=findViewById(R.id.backspace);
  mBackSpaceButton.setOnClickListener(this);
  mEmergencyCallButton=(Button)findViewById(R.id.emergencyCall);
  mLockPatternUtils.updateEmergencyCallButtonState(mEmergencyCallButton);
  mOkButton=(TextView)findViewById(R.id.ok);
  mHeaderText.setText(R.string.keyguard_password_enter_pin_code);
  mPinText.setFocusable(false);
  mEmergencyCallButton.setOnClickListener(this);
  mOkButton.setOnClickListener(this);
  setFocusableInTouchMode(true);
}
