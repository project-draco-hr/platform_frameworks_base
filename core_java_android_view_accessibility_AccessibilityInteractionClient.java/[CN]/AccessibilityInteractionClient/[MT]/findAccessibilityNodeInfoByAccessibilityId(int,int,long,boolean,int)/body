{
  if ((prefetchFlags & AccessibilityNodeInfo.FLAG_PREFETCH_SIBLINGS) != 0 && (prefetchFlags & AccessibilityNodeInfo.FLAG_PREFETCH_PREDECESSORS) == 0) {
    throw new IllegalArgumentException("FLAG_PREFETCH_SIBLINGS" + " requires FLAG_PREFETCH_PREDECESSORS");
  }
  try {
    IAccessibilityServiceConnection connection=getConnection(connectionId);
    if (connection != null) {
      if (!bypassCache) {
        AccessibilityNodeInfo cachedInfo=sAccessibilityCache.getNode(accessibilityWindowId,accessibilityNodeId);
        if (cachedInfo != null) {
          if (DEBUG) {
            Log.i(LOG_TAG,"Node cache hit");
          }
          return cachedInfo;
        }
        if (DEBUG) {
          Log.i(LOG_TAG,"Node cache miss");
        }
      }
      final int interactionId=mInteractionIdCounter.getAndIncrement();
      final boolean success=connection.findAccessibilityNodeInfoByAccessibilityId(accessibilityWindowId,accessibilityNodeId,interactionId,this,prefetchFlags,Thread.currentThread().getId());
      if (success) {
        List<AccessibilityNodeInfo> infos=getFindAccessibilityNodeInfosResultAndClear(interactionId);
        finalizeAndCacheAccessibilityNodeInfos(infos,connectionId);
        if (infos != null && !infos.isEmpty()) {
          return infos.get(0);
        }
      }
    }
 else {
      if (DEBUG) {
        Log.w(LOG_TAG,"No connection for connection id: " + connectionId);
      }
    }
  }
 catch (  RemoteException re) {
    Log.e(LOG_TAG,"Error while calling remote" + " findAccessibilityNodeInfoByAccessibilityId",re);
  }
  return null;
}
