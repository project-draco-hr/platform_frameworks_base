{
  if (mController == null)   return;
  final boolean rotationLocked=mController.isRotationLocked();
  state.visible=mController.isRotationLockAffordanceVisible();
  final Resources res=mContext.getResources();
  if (state.value != rotationLocked) {
    state.value=rotationLocked;
    final AnimationDrawable d=(AnimationDrawable)res.getDrawable(rotationLocked ? R.drawable.ic_qs_rotation_locked : R.drawable.ic_qs_rotation_unlocked);
    state.icon=d;
    mUiHandler.post(new Runnable(){
      @Override public void run(){
        d.start();
      }
    }
);
  }
  if (rotationLocked) {
    final int lockOrientation=mController.getRotationLockOrientation();
    final int label=lockOrientation == Configuration.ORIENTATION_PORTRAIT ? R.string.quick_settings_rotation_locked_portrait_label : lockOrientation == Configuration.ORIENTATION_LANDSCAPE ? R.string.quick_settings_rotation_locked_landscape_label : R.string.quick_settings_rotation_locked_label;
    state.label=mContext.getString(label);
    if (state.icon == null) {
      state.icon=res.getDrawable(R.drawable.ic_qs_rotation_15);
    }
  }
 else {
    state.label=mContext.getString(R.string.quick_settings_rotation_unlocked_label);
    if (state.icon == null) {
      state.icon=res.getDrawable(R.drawable.ic_qs_rotation_01);
    }
  }
}
