{
  final int anchorHeight=anchor.getHeight();
  final int anchorWidth=anchor.getWidth();
  if (mOverlapAnchor) {
    yOffset-=anchorHeight;
  }
  final int[] drawingLocation=mTmpDrawingLocation;
  anchor.getLocationInWindow(drawingLocation);
  outParams.x=drawingLocation[0] + xOffset;
  outParams.y=drawingLocation[1] + anchorHeight + yOffset;
  final int hgrav=Gravity.getAbsoluteGravity(gravity,anchor.getLayoutDirection()) & Gravity.HORIZONTAL_GRAVITY_MASK;
  if (hgrav == Gravity.RIGHT) {
    outParams.x-=width - anchorWidth;
  }
  outParams.gravity=Gravity.LEFT | Gravity.TOP;
  final int[] screenLocation=mTmpScreenLocation;
  anchor.getLocationOnScreen(screenLocation);
  final Rect displayFrame=new Rect();
  anchor.getWindowVisibleDisplayFrame(displayFrame);
  boolean onTop=false;
  final View root=anchor.getRootView();
  final int screenY=screenLocation[1] + anchorHeight + yOffset;
  final boolean tooFarDown=screenY + height > displayFrame.bottom;
  final boolean tooFarRight=outParams.x + width > root.getWidth();
  if (tooFarDown || tooFarRight) {
    if (mAllowScrollingAnchorParent) {
      final int scrollX=anchor.getScrollX();
      final int scrollY=anchor.getScrollY();
      final Rect r=new Rect(scrollX,scrollY,scrollX + width + xOffset,scrollY + height + anchorHeight+ yOffset);
      anchor.requestRectangleOnScreen(r,true);
    }
    anchor.getLocationInWindow(drawingLocation);
    outParams.x=drawingLocation[0] + xOffset;
    outParams.y=drawingLocation[1] + anchorHeight + yOffset;
    if (hgrav == Gravity.RIGHT) {
      outParams.x-=width - anchorWidth;
    }
    final int newScreenY=screenLocation[1] + anchorHeight + yOffset;
    final boolean stillTooFarDown=newScreenY + height > displayFrame.bottom;
    if (stillTooFarDown) {
      anchor.getLocationOnScreen(screenLocation);
      final int below=displayFrame.bottom - screenLocation[1] - anchorHeight- yOffset;
      final int above=screenLocation[1] - displayFrame.top + yOffset;
      onTop=above > below;
      if (onTop) {
        if (mOverlapAnchor) {
          yOffset+=anchorHeight;
        }
        outParams.y=drawingLocation[1] - height + yOffset;
      }
    }
  }
  if (mClipToScreen) {
    final int winOffsetX=screenLocation[0] - drawingLocation[0];
    final int winOffsetY=screenLocation[1] - drawingLocation[1];
    outParams.x+=winOffsetX;
    outParams.y+=winOffsetY;
    final int right=outParams.x + width;
    if (right > displayFrame.right) {
      outParams.x-=right - displayFrame.right;
    }
    if (outParams.x < displayFrame.left) {
      outParams.x=displayFrame.left;
      final int displayFrameWidth=displayFrame.width();
      width=Math.min(width,displayFrameWidth);
    }
    final int bottom=outParams.y + height;
    if (bottom > displayFrame.bottom) {
      outParams.y-=bottom - displayFrame.bottom;
    }
    if (outParams.y < displayFrame.top) {
      outParams.y=displayFrame.top;
      final int displayFrameHeight=displayFrame.height();
      height=Math.min(height,displayFrameHeight);
    }
    outParams.x-=winOffsetX;
    outParams.y-=winOffsetY;
  }
  outParams.width=width;
  outParams.height=height;
  return onTop;
}
