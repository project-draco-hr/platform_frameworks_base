{
  final int anchorHeight=anchor.getHeight();
  final int anchorWidth=anchor.getWidth();
  if (mOverlapAnchor) {
    yOffset-=anchorHeight;
  }
  final int[] drawingLocation=mTmpDrawingLocation;
  anchor.getLocationInWindow(drawingLocation);
  outParams.x=drawingLocation[0] + xOffset;
  outParams.y=drawingLocation[1] + anchorHeight + yOffset;
  outParams.gravity=Gravity.LEFT | Gravity.TOP;
  outParams.width=width;
  outParams.height=height;
  final Rect displayFrame=new Rect();
  anchor.getWindowVisibleDisplayFrame(displayFrame);
  if (width < 0) {
    width=displayFrame.right - displayFrame.left;
  }
  if (height < 0) {
    height=displayFrame.bottom - displayFrame.top;
  }
  final int hgrav=Gravity.getAbsoluteGravity(gravity,anchor.getLayoutDirection()) & Gravity.HORIZONTAL_GRAVITY_MASK;
  if (hgrav == Gravity.RIGHT) {
    outParams.x-=width - anchorWidth;
  }
  final int[] screenLocation=mTmpScreenLocation;
  anchor.getLocationOnScreen(screenLocation);
  final boolean fitsVertical=tryFitVertical(outParams,yOffset,height,anchorHeight,drawingLocation[1],screenLocation[1],displayFrame.top,displayFrame.bottom,false);
  final boolean fitsHorizontal=tryFitHorizontal(outParams,xOffset,width,anchorWidth,drawingLocation[0],screenLocation[0],displayFrame.left,displayFrame.right,false);
  if (!fitsVertical || !fitsHorizontal) {
    final int scrollX=anchor.getScrollX();
    final int scrollY=anchor.getScrollY();
    final Rect r=new Rect(scrollX,scrollY,scrollX + width + xOffset,scrollY + height + anchorHeight+ yOffset);
    if (mAllowScrollingAnchorParent && anchor.requestRectangleOnScreen(r,true)) {
      anchor.getLocationInWindow(drawingLocation);
      outParams.x=drawingLocation[0] + xOffset;
      outParams.y=drawingLocation[1] + anchorHeight + yOffset;
      if (hgrav == Gravity.RIGHT) {
        outParams.x-=width - anchorWidth;
      }
    }
    tryFitVertical(outParams,yOffset,height,anchorHeight,drawingLocation[1],screenLocation[1],displayFrame.top,displayFrame.bottom,mClipToScreen);
    tryFitHorizontal(outParams,xOffset,width,anchorWidth,drawingLocation[0],screenLocation[0],displayFrame.left,displayFrame.right,mClipToScreen);
  }
  return outParams.y < drawingLocation[1];
}
