{
  final int anchorHeight=anchor.getHeight();
  final int anchorWidth=anchor.getWidth();
  if (mOverlapAnchor) {
    yOffset-=anchorHeight;
  }
  final int[] drawingLocation=mTmpDrawingLocation;
  anchor.getLocationInWindow(drawingLocation);
  outParams.x=drawingLocation[0] + xOffset;
  outParams.y=drawingLocation[1] + anchorHeight + yOffset;
  final int hgrav=Gravity.getAbsoluteGravity(gravity,anchor.getLayoutDirection()) & Gravity.HORIZONTAL_GRAVITY_MASK;
  if (hgrav == Gravity.RIGHT) {
    outParams.x-=width - anchorWidth;
  }
  outParams.gravity=Gravity.LEFT | Gravity.TOP;
  final int[] screenLocation=mTmpScreenLocation;
  anchor.getLocationOnScreen(screenLocation);
  final Rect displayFrame=new Rect();
  anchor.getWindowVisibleDisplayFrame(displayFrame);
  final boolean onTop;
  final int screenY=screenLocation[1] + anchorHeight + yOffset;
  final View root=anchor.getRootView();
  if (screenY + height > displayFrame.bottom || outParams.x + width - root.getWidth() > 0) {
    if (mAllowScrollingAnchorParent) {
      final int scrollX=anchor.getScrollX();
      final int scrollY=anchor.getScrollY();
      final Rect r=new Rect(scrollX,scrollY,scrollX + width + xOffset,scrollY + height + anchorHeight+ yOffset);
      anchor.requestRectangleOnScreen(r,true);
    }
    anchor.getLocationInWindow(drawingLocation);
    outParams.x=drawingLocation[0] + xOffset;
    outParams.y=drawingLocation[1] + anchorHeight + yOffset;
    if (hgrav == Gravity.RIGHT) {
      outParams.x-=width - anchorWidth;
    }
    anchor.getLocationOnScreen(screenLocation);
    final int spaceBelow=displayFrame.bottom - screenLocation[1] - anchorHeight- yOffset;
    final int spaceAbove=screenLocation[1] - yOffset - displayFrame.top;
    onTop=spaceBelow < spaceAbove;
    if (!mOverlapAnchor) {
      if (onTop) {
        outParams.gravity=Gravity.LEFT | Gravity.BOTTOM;
        outParams.y=root.getHeight() - drawingLocation[1] + yOffset;
      }
 else {
        outParams.y=drawingLocation[1] + anchorHeight + yOffset;
      }
    }
  }
 else {
    onTop=false;
  }
  if (mClipToScreen) {
    final int winOffsetX=screenLocation[0] - drawingLocation[0];
    final int winOffsetY=screenLocation[1] - drawingLocation[1];
    outParams.x+=winOffsetX;
    outParams.y+=winOffsetY;
    final int right=outParams.x + width;
    if (right > displayFrame.right) {
      outParams.x-=right - displayFrame.right;
    }
    if (outParams.x < displayFrame.left) {
      outParams.x=displayFrame.left;
      final int displayFrameWidth=displayFrame.right - displayFrame.left;
      width=Math.min(width,displayFrameWidth);
    }
    if (mOverlapAnchor) {
      final int bottom=outParams.y + width;
      if (bottom > displayFrame.bottom) {
        outParams.y-=bottom - displayFrame.bottom;
      }
    }
 else {
      if (onTop) {
        final int popupTop=screenLocation[1] + yOffset - height;
        if (popupTop < 0) {
          outParams.y+=popupTop;
        }
      }
 else {
        outParams.y=Math.max(outParams.y,displayFrame.top);
      }
    }
    outParams.x-=winOffsetX;
    outParams.y-=winOffsetY;
  }
  outParams.width=width;
  outParams.height=height;
  outParams.gravity|=Gravity.DISPLAY_CLIP_VERTICAL;
  return onTop;
}
