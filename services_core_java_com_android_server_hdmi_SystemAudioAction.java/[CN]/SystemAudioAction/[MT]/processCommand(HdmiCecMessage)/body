{
switch (mState) {
case STATE_WAIT_FOR_SET_SYSTEM_AUDIO_MODE:
    if (cmd.getOpcode() != HdmiCec.MESSAGE_SET_SYSTEM_AUDIO_MODE || !HdmiUtils.checkCommandSource(cmd,mAvrLogicalAddress,TAG)) {
      return false;
    }
  boolean receivedStatus=HdmiUtils.parseCommandParamSystemAudioStatus(cmd);
if (receivedStatus == mTargetAudioStatus) {
  setSystemAudioMode(receivedStatus);
  sendGiveAudioStatus();
}
 else {
  finish();
  return false;
}
return true;
case STATE_WAIT_FOR_REPORT_AUDIO_STATUS:
if (cmd.getOpcode() != HdmiCec.MESSAGE_REPORT_AUDIO_STATUS || !HdmiUtils.checkCommandSource(cmd,mAvrLogicalAddress,TAG)) {
return false;
}
byte[] params=cmd.getParams();
if (params.length > 0) {
boolean mute=(params[0] & 0x80) == 0x80;
int volume=params[0] & 0x7F;
mService.setAudioStatus(mute,volume);
if (mTargetAudioStatus && mute || !mTargetAudioStatus && !mute) {
sendUserControlPressedAndReleased(HdmiConstants.UI_COMMAND_MUTE);
}
}
finish();
return true;
}
return false;
}
