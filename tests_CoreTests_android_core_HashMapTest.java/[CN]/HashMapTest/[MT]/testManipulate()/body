{
  HashMap map=new HashMap();
  assertTrue(map.isEmpty());
  assertEquals(0,map.size());
  assertNull(map.get(null));
  assertNull(map.get("one"));
  assertFalse(map.containsKey("one"));
  assertFalse(map.containsValue(new Integer(1)));
  assertNull(map.remove(null));
  assertNull(map.remove("one"));
  assertNull(map.put(null,new Integer(-1)));
  assertNull(map.put("one",new Integer(1)));
  assertNull(map.put("two",new Integer(2)));
  assertNull(map.put("three",new Integer(3)));
  assertEquals(-1,((Integer)map.put(null,new Integer(0))).intValue());
  assertEquals(0,((Integer)map.get(null)).intValue());
  assertEquals(1,((Integer)map.get("one")).intValue());
  assertEquals(2,((Integer)map.get("two")).intValue());
  assertEquals(3,((Integer)map.get("three")).intValue());
  assertTrue(map.containsKey(null));
  assertTrue(map.containsKey("one"));
  assertTrue(map.containsKey("two"));
  assertTrue(map.containsKey("three"));
  assertTrue(map.containsValue(new Integer(0)));
  assertTrue(map.containsValue(new Integer(1)));
  assertTrue(map.containsValue(new Integer(2)));
  assertTrue(map.containsValue(new Integer(3)));
  assertEquals(0,((Integer)map.remove(null)).intValue());
  assertEquals(1,((Integer)map.remove("one")).intValue());
  assertEquals(2,((Integer)map.remove("two")).intValue());
  assertEquals(3,((Integer)map.remove("three")).intValue());
  assertTrue(map.isEmpty());
  assertEquals(0,map.size());
  assertNull(map.get(null));
  assertNull(map.get("one"));
  assertFalse(map.containsKey("one"));
  assertFalse(map.containsValue(new Integer(1)));
  assertNull(map.remove(null));
  assertNull(map.remove("one"));
}
