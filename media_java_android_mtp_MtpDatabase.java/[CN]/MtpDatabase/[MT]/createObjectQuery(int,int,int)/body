{
  String where;
  String[] whereArgs;
  if (storageID == 0xFFFFFFFF) {
    if (format == 0) {
      if (parent == 0) {
        where=null;
        whereArgs=null;
      }
 else {
        if (parent == 0xFFFFFFFF) {
          parent=0;
        }
        where=PARENT_WHERE;
        whereArgs=new String[]{Integer.toString(parent)};
      }
    }
 else {
      if (parent == 0) {
        where=FORMAT_WHERE;
        whereArgs=new String[]{Integer.toString(format)};
      }
 else {
        if (parent == 0xFFFFFFFF) {
          parent=0;
        }
        where=FORMAT_PARENT_WHERE;
        whereArgs=new String[]{Integer.toString(format),Integer.toString(parent)};
      }
    }
  }
 else {
    if (format == 0) {
      if (parent == 0) {
        where=STORAGE_WHERE;
        whereArgs=new String[]{Integer.toString(storageID)};
      }
 else {
        if (parent == 0xFFFFFFFF) {
          parent=0;
        }
        where=STORAGE_PARENT_WHERE;
        whereArgs=new String[]{Integer.toString(storageID),Integer.toString(parent)};
      }
    }
 else {
      if (parent == 0) {
        where=STORAGE_FORMAT_WHERE;
        whereArgs=new String[]{Integer.toString(storageID),Integer.toString(format)};
      }
 else {
        if (parent == 0xFFFFFFFF) {
          parent=0;
        }
        where=STORAGE_FORMAT_PARENT_WHERE;
        whereArgs=new String[]{Integer.toString(storageID),Integer.toString(format),Integer.toString(parent)};
      }
    }
  }
  if (mSubDirectoriesWhere != null) {
    if (where == null) {
      where=mSubDirectoriesWhere;
      whereArgs=mSubDirectoriesWhereArgs;
    }
 else {
      where=where + " AND " + mSubDirectoriesWhere;
      String[] newWhereArgs=new String[whereArgs.length + mSubDirectoriesWhereArgs.length];
      int i, j;
      for (i=0; i < whereArgs.length; i++) {
        newWhereArgs[i]=whereArgs[i];
      }
      for (j=0; j < mSubDirectoriesWhereArgs.length; i++, j++) {
        newWhereArgs[i]=mSubDirectoriesWhereArgs[j];
      }
      whereArgs=newWhereArgs;
    }
  }
  return mMediaProvider.query(mObjectsUri,ID_PROJECTION,where,whereArgs,null);
}
