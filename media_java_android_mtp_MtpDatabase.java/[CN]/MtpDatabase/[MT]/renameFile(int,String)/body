{
  Cursor c=null;
  String path=null;
  String[] whereArgs=new String[]{Integer.toString(handle)};
  try {
    c=mMediaProvider.query(mObjectsUri,PATH_PROJECTION,ID_WHERE,whereArgs,null,null);
    if (c != null && c.moveToNext()) {
      path=c.getString(1);
    }
  }
 catch (  RemoteException e) {
    Log.e(TAG,"RemoteException in getObjectFilePath",e);
    return MtpConstants.RESPONSE_GENERAL_ERROR;
  }
 finally {
    if (c != null) {
      c.close();
    }
  }
  if (path == null) {
    return MtpConstants.RESPONSE_INVALID_OBJECT_HANDLE;
  }
  if (isStorageSubDirectory(path)) {
    return MtpConstants.RESPONSE_OBJECT_WRITE_PROTECTED;
  }
  File oldFile=new File(path);
  int lastSlash=path.lastIndexOf('/');
  if (lastSlash <= 1) {
    return MtpConstants.RESPONSE_GENERAL_ERROR;
  }
  String newPath=path.substring(0,lastSlash + 1) + newName;
  File newFile=new File(newPath);
  boolean success=oldFile.renameTo(newFile);
  if (!success) {
    Log.w(TAG,"renaming " + path + " to "+ newPath+ " failed");
    return MtpConstants.RESPONSE_GENERAL_ERROR;
  }
  ContentValues values=new ContentValues();
  values.put(Files.FileColumns.DATA,newPath);
  int updated=0;
  try {
    updated=mMediaProvider.update(mObjectsUri,values,ID_WHERE,whereArgs);
  }
 catch (  RemoteException e) {
    Log.e(TAG,"RemoteException in mMediaProvider.update",e);
  }
  if (updated == 0) {
    Log.e(TAG,"Unable to update path for " + path + " to "+ newPath);
    newFile.renameTo(oldFile);
    return MtpConstants.RESPONSE_GENERAL_ERROR;
  }
  if (newFile.isDirectory()) {
    if (oldFile.getName().startsWith(".") && !newPath.startsWith(".")) {
      try {
        mMediaProvider.call(MediaStore.UNHIDE_CALL,newPath,null);
      }
 catch (      RemoteException e) {
        Log.e(TAG,"failed to unhide/rescan for " + newPath);
      }
    }
  }
 else {
    if (oldFile.getName().toLowerCase(Locale.US).equals(".nomedia") && !newPath.toLowerCase(Locale.US).equals(".nomedia")) {
      try {
        mMediaProvider.call(MediaStore.UNHIDE_CALL,oldFile.getParent(),null);
      }
 catch (      RemoteException e) {
        Log.e(TAG,"failed to unhide/rescan for " + newPath);
      }
    }
  }
  return MtpConstants.RESPONSE_OK;
}
