{
  attachBaseContext(context);
  mFragments.attachActivity(this,mContainer,null);
  mWindow=PolicyManager.makeNewWindow(this);
  mWindow.setCallback(this);
  mWindow.getLayoutInflater().setPrivateFactory(this);
  if (info.softInputMode != WindowManager.LayoutParams.SOFT_INPUT_STATE_UNSPECIFIED) {
    mWindow.setSoftInputMode(info.softInputMode);
  }
  if (info.uiOptions != 0) {
    mWindow.setUiOptions(info.uiOptions);
  }
  mUiThread=Thread.currentThread();
  mMainThread=aThread;
  mInstrumentation=instr;
  mToken=token;
  mIdent=ident;
  mApplication=application;
  mIntent=intent;
  mComponent=intent.getComponent();
  mActivityInfo=info;
  mTitle=title;
  mParent=parent;
  mEmbeddedID=id;
  mLastNonConfigurationInstances=lastNonConfigurationInstances;
  mWindow.setWindowManager((WindowManager)context.getSystemService(Context.WINDOW_SERVICE),mToken,mComponent.flattenToString(),(info.flags & ActivityInfo.FLAG_HARDWARE_ACCELERATED) != 0);
  if (mParent != null) {
    mWindow.setContainer(mParent.getWindow());
  }
  mWindowManager=mWindow.getWindowManager();
  mCurrentConfig=config;
  mTransitionActivityOptions=null;
  Window.SceneTransitionListener sceneTransitionListener=null;
  if (options != null) {
    ActivityOptions activityOptions=new ActivityOptions(options);
    if (activityOptions.getAnimationType() == ActivityOptions.ANIM_SCENE_TRANSITION) {
      mTransitionActivityOptions=activityOptions;
      sceneTransitionListener=new Window.SceneTransitionListener(){
        @Override public void nullPendingTransition(){
          overridePendingTransition(0,0);
        }
        @Override public void convertFromTranslucent(){
          Activity.this.convertFromTranslucent();
        }
        @Override public void convertToTranslucent(){
          Activity.this.convertToTranslucent(null);
        }
        @Override public void sharedElementStart(        Transition transition){
          Activity.this.onCaptureSharedElementStart(transition);
        }
        @Override public void sharedElementEnd(){
          Activity.this.onCaptureSharedElementEnd();
        }
      }
;
    }
  }
  mWindow.setTransitionOptions(mTransitionActivityOptions,sceneTransitionListener);
}
