{
  if (mDecor == null) {
    return false;
  }
  int paddingLeft=0;
  int paddingRight=0;
  int paddingTop=0;
  int paddingBottom=0;
  final FrameLayout top=(FrameLayout)mDecor;
  for (int i=0; i < top.getChildCount(); i++) {
    View child=top.getChildAt(i);
    if (child.isFitsSystemWindowsFlagSet()) {
      paddingLeft=child.getPaddingLeft();
      paddingRight=child.getPaddingRight();
      paddingTop=child.getPaddingTop();
      paddingBottom=child.getPaddingBottom();
      break;
    }
  }
  final int visibleWidth=mDecor.getWidth() - paddingLeft - paddingRight;
  final int visibleHeight=mDecor.getHeight() - paddingTop - paddingBottom;
  canvas.save();
  canvas.scale((float)outBitmap.getWidth() / visibleWidth,(float)outBitmap.getHeight() / visibleHeight);
  canvas.translate(-paddingLeft,-paddingTop);
  mDecor.draw(canvas);
  canvas.restore();
  return true;
}
