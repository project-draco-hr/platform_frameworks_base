{
  attachBaseContext(context);
  mFragments.attachHost(null);
  mWindow=new PhoneWindow(this);
  mWindow.setWindowControllerCallback(this);
  mWindow.setCallback(this);
  mWindow.setOnWindowDismissedCallback(this);
  mWindow.getLayoutInflater().setPrivateFactory(this);
  if (info.softInputMode != WindowManager.LayoutParams.SOFT_INPUT_STATE_UNSPECIFIED) {
    mWindow.setSoftInputMode(info.softInputMode);
  }
  if (info.uiOptions != 0) {
    mWindow.setUiOptions(info.uiOptions);
  }
  mUiThread=Thread.currentThread();
  mMainThread=aThread;
  mInstrumentation=instr;
  mToken=token;
  mIdent=ident;
  mApplication=application;
  mIntent=intent;
  mReferrer=referrer;
  mComponent=intent.getComponent();
  mActivityInfo=info;
  mTitle=title;
  mParent=parent;
  mEmbeddedID=id;
  mLastNonConfigurationInstances=lastNonConfigurationInstances;
  if (voiceInteractor != null) {
    if (lastNonConfigurationInstances != null) {
      mVoiceInteractor=lastNonConfigurationInstances.voiceInteractor;
    }
 else {
      mVoiceInteractor=new VoiceInteractor(voiceInteractor,this,this,Looper.myLooper());
    }
  }
  mWindow.setWindowManager((WindowManager)context.getSystemService(Context.WINDOW_SERVICE),mToken,mComponent.flattenToString(),(info.flags & ActivityInfo.FLAG_HARDWARE_ACCELERATED) != 0);
  if (mParent != null) {
    mWindow.setContainer(mParent.getWindow());
  }
  mWindowManager=mWindow.getWindowManager();
  mCurrentConfig=config;
}
