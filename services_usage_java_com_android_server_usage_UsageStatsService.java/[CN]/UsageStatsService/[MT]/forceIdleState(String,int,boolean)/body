{
synchronized (mLock) {
    final long timeNow=checkAndGetTimeLocked();
    final long screenOnTime=getScreenOnTimeLocked(timeNow);
    final long deviceUsageTime=screenOnTime - (idle ? mAppIdleDurationMillis : 0) - 5000;
    final UserUsageStatsService service=getUserDataAndInitializeIfNeededLocked(userId,timeNow);
    final long lastUsed=service.getBeginIdleTime(packageName);
    final boolean previouslyIdle=hasPassedIdleTimeout(lastUsed,getScreenOnTimeLocked(timeNow));
    service.setBeginIdleTime(packageName,deviceUsageTime);
    if (previouslyIdle != idle) {
      mHandler.sendMessage(mHandler.obtainMessage(MSG_INFORM_LISTENERS,userId,idle ? 1 : 0,packageName));
      mAppIdleHistory.addEntry(packageName,userId,idle,timeNow);
    }
  }
}
