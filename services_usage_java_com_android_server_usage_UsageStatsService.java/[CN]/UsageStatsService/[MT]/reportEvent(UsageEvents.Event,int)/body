{
synchronized (mLock) {
    final long timeNow=checkAndGetTimeLocked();
    final long screenOnTime=getScreenOnTimeLocked();
    convertToSystemTimeLocked(event);
    final UserUsageStatsService service=getUserDataAndInitializeIfNeededLocked(userId,timeNow);
    final long beginIdleTime=service.getBeginIdleTime(event.mPackage);
    final long lastUsedTime=service.getSystemLastUsedTime(event.mPackage);
    final boolean previouslyIdle=hasPassedIdleTimeoutLocked(beginIdleTime,lastUsedTime,screenOnTime,timeNow);
    service.reportEvent(event,screenOnTime);
    if ((event.mEventType == Event.MOVE_TO_FOREGROUND || event.mEventType == Event.MOVE_TO_BACKGROUND || event.mEventType == Event.SYSTEM_INTERACTION || event.mEventType == Event.USER_INTERACTION)) {
      if (previouslyIdle) {
        mHandler.sendMessage(mHandler.obtainMessage(MSG_INFORM_LISTENERS,userId,0,event.mPackage));
        notifyBatteryStats(event.mPackage,userId,false);
        mAppIdleHistory.addEntry(event.mPackage,userId,false,timeNow);
      }
    }
  }
}
