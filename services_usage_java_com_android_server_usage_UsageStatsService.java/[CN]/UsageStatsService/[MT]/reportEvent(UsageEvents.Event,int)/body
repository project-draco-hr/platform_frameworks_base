{
synchronized (mLock) {
    final long timeNow=checkAndGetTimeLocked();
    final long elapsedRealtime=SystemClock.elapsedRealtime();
    convertToSystemTimeLocked(event);
    final UserUsageStatsService service=getUserDataAndInitializeIfNeededLocked(userId,timeNow);
    final boolean previouslyIdle=mAppIdleHistory.isIdleLocked(event.mPackage,userId,elapsedRealtime);
    service.reportEvent(event);
    if ((event.mEventType == Event.MOVE_TO_FOREGROUND || event.mEventType == Event.MOVE_TO_BACKGROUND || event.mEventType == Event.SYSTEM_INTERACTION || event.mEventType == Event.USER_INTERACTION)) {
      mAppIdleHistory.reportUsageLocked(event.mPackage,userId,elapsedRealtime);
      if (previouslyIdle) {
        mHandler.sendMessage(mHandler.obtainMessage(MSG_INFORM_LISTENERS,userId,0,event.mPackage));
        notifyBatteryStats(event.mPackage,userId,false);
      }
    }
  }
}
