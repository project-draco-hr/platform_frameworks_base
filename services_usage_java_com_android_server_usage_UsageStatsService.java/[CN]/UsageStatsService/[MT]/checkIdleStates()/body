{
  if (DEBUG)   Slog.d(TAG,"Checking idle state");
  final int[] runningUsers;
  try {
    runningUsers=ActivityManagerNative.getDefault().getRunningUserIds();
  }
 catch (  RemoteException re) {
    return;
  }
  for (int i=0; i < runningUsers.length; i++) {
    final int userId=runningUsers[i];
    List<PackageInfo> packages=getContext().getPackageManager().getInstalledPackages(PackageManager.GET_DISABLED_COMPONENTS | PackageManager.GET_UNINSTALLED_PACKAGES,userId);
synchronized (mLock) {
      final long timeNow=checkAndGetTimeLocked();
      final int packageCount=packages.size();
      for (int p=0; p < packageCount; p++) {
        final String packageName=packages.get(p).packageName;
        final boolean isIdle=isAppIdleFiltered(packageName,userId);
        mHandler.sendMessage(mHandler.obtainMessage(MSG_INFORM_LISTENERS,userId,isIdle ? 1 : 0,packageName));
        mAppIdleHistory.addEntry(packageName,userId,isIdle,timeNow);
      }
    }
  }
  mHandler.sendEmptyMessageDelayed(MSG_CHECK_IDLE_STATES,mCheckIdleIntervalMillis);
}
