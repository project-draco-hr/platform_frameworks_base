{
switch (msg.what) {
case MSG_REPORT_EVENT:
    reportEvent((UsageEvents.Event)msg.obj,msg.arg1);
  break;
case MSG_FLUSH_TO_DISK:
flushToDisk();
break;
case MSG_REMOVE_USER:
removeUser(msg.arg1);
break;
case MSG_INFORM_LISTENERS:
informListeners((String)msg.obj,msg.arg1,msg.arg2 == 1);
break;
case MSG_FORCE_IDLE_STATE:
forceIdleState((String)msg.obj,msg.arg1,msg.arg2 == 1);
break;
case MSG_CHECK_IDLE_STATES:
checkIdleStates(msg.arg1);
break;
case MSG_CHECK_PAROLE_TIMEOUT:
checkParoleTimeout();
break;
case MSG_PAROLE_END_TIMEOUT:
if (DEBUG) Slog.d(TAG,"Ending parole");
setAppIdleParoled(false);
break;
case MSG_REPORT_CONTENT_PROVIDER_USAGE:
SomeArgs args=(SomeArgs)msg.obj;
reportContentProviderUsage((String)args.arg1,(String)args.arg2,(int)args.arg3);
args.recycle();
break;
case MSG_PAROLE_STATE_CHANGED:
if (DEBUG) Slog.d(TAG,"Parole state changed: " + mAppIdleParoled);
informParoleStateChanged();
break;
default :
super.handleMessage(msg);
break;
}
}
