{
  final Context context=getContext();
  final PackageManager pm=context.getPackageManager();
  final ActivityManager am=(ActivityManager)context.getSystemService(Context.ACTIVITY_SERVICE);
  final List<ActivityManager.RecentTaskInfo> recentTasks=am.getRecentTasks(MAX_RECENT_TASKS,0);
  ResolveInfo homeInfo=pm.resolveActivity(new Intent(Intent.ACTION_MAIN).addCategory(Intent.CATEGORY_HOME),0);
  int button=0;
  int numTasks=recentTasks.size();
  for (int i=0; i < numTasks && (button < NUM_BUTTONS); ++i) {
    final ActivityManager.RecentTaskInfo info=recentTasks.get(i);
    if (DBG_FORCE_EMPTY_LIST && (i == 0))     continue;
    Intent intent=new Intent(info.baseIntent);
    if (info.origActivity != null) {
      intent.setComponent(info.origActivity);
    }
    if (homeInfo != null) {
      if (homeInfo.activityInfo.packageName.equals(intent.getComponent().getPackageName()) && homeInfo.activityInfo.name.equals(intent.getComponent().getClassName())) {
        continue;
      }
    }
    intent.setFlags((intent.getFlags() & ~Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED) | Intent.FLAG_ACTIVITY_NEW_TASK);
    final ResolveInfo resolveInfo=pm.resolveActivity(intent,0);
    if (resolveInfo != null) {
      final ActivityInfo activityInfo=resolveInfo.activityInfo;
      final String title=activityInfo.loadLabel(pm).toString();
      final Drawable icon=activityInfo.loadIcon(pm);
      if (title != null && title.length() > 0 && icon != null) {
        final View b=mButtons[button];
        setButtonAppearance(b,title,icon);
        b.setTag(intent);
        b.setVisibility(View.VISIBLE);
        b.setPressed(false);
        b.clearFocus();
        ++button;
      }
    }
  }
  mNoAppsText.setVisibility((button == 0) ? View.VISIBLE : View.GONE);
  for (; button < NUM_BUTTONS; ++button) {
    mButtons[button].setVisibility(View.GONE);
  }
}
