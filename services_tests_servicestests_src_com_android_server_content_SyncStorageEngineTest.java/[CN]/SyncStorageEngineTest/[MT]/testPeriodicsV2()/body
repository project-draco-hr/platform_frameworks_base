{
  final Account account1=new Account("a@example.com","example.type");
  final Account account2=new Account("b@example.com","example.type.2");
  final String authority="testprovider";
  final Bundle extras1=new Bundle();
  extras1.putString("a","1");
  final Bundle extras2=new Bundle();
  extras2.putString("a","2");
  final int period1=200;
  final int period2=1000;
  final int flex1=10;
  final int flex2=100;
  EndPoint point1=new EndPoint(account1,authority,0);
  EndPoint point2=new EndPoint(account2,authority,0);
  EndPoint point1User2=new EndPoint(account1,authority,1);
  PeriodicSync sync1=new PeriodicSync(account1,authority,extras1,period1,flex1);
  PeriodicSync sync2=new PeriodicSync(account1,authority,extras2,period1,flex1);
  PeriodicSync sync3=new PeriodicSync(account1,authority,extras2,period2,flex2);
  PeriodicSync sync4=new PeriodicSync(account2,authority,extras2,period2,flex2);
  EndPoint target1=new EndPoint(account1,authority,0);
  EndPoint target2=new EndPoint(account2,authority,0);
  EndPoint target1UserB=new EndPoint(account1,authority,1);
  MockContentResolver mockResolver=new MockContentResolver();
  SyncStorageEngine engine=SyncStorageEngine.newTestInstance(new TestContext(mockResolver,getContext()));
  removePeriodicSyncs(engine,account1,0,authority);
  removePeriodicSyncs(engine,account2,0,authority);
  removePeriodicSyncs(engine,account1,1,authority);
  engine.updateOrAddPeriodicSync(target1,period1,flex1,extras1);
  engine.updateOrAddPeriodicSync(target1,period1,flex1,extras2);
  engine.updateOrAddPeriodicSync(target1,period2,flex2,extras2);
  engine.updateOrAddPeriodicSync(target2,period2,flex2,extras2);
  engine.updateOrAddPeriodicSync(target1UserB,period1,flex1,extras2);
  List<PeriodicSync> syncs=engine.getPeriodicSyncs(target1);
  assertEquals(2,syncs.size());
  assertEquals(sync1,syncs.get(0));
  assertEquals(sync3,syncs.get(1));
  engine.removePeriodicSync(target1,extras1);
  syncs=engine.getPeriodicSyncs(target1);
  assertEquals(1,syncs.size());
  assertEquals(sync3,syncs.get(0));
  syncs=engine.getPeriodicSyncs(target2);
  assertEquals(1,syncs.size());
  assertEquals(sync4,syncs.get(0));
  syncs=engine.getPeriodicSyncs(target1UserB);
  assertEquals(1,syncs.size());
  assertEquals(sync2,syncs.get(0));
}
