{
  byte[] accountsFileData=("<?xml version='1.0' encoding='utf-8' standalone='yes' ?>\n" + "<accounts version=\"2\" >\n" + "<authority id=\"0\" user=\"0\" package=\"" + syncService1.getPackageName() + "\""+ " class=\""+ syncService1.getClassName()+ "\" syncable=\"true\">"+ "\n<periodicSync period=\""+ dayPoll+ "\" flex=\""+ dayFuzz+ "\"/>"+ "\n</authority>"+ "</accounts>").getBytes();
  File syncDir=getSyncDir();
  syncDir.mkdirs();
  AtomicFile accountInfoFile=new AtomicFile(new File(syncDir,"accounts.xml"));
  FileOutputStream fos=accountInfoFile.startWrite();
  fos.write(accountsFileData);
  accountInfoFile.finishWrite(fos);
  engine.clearAndReadState();
  SyncStorageEngine.AuthorityInfo aInfo=engine.getAuthority(0);
  assertNotNull(aInfo);
  List<PeriodicSync> syncs=engine.getPeriodicSyncs(new SyncStorageEngine.EndPoint(syncService1,0));
  assertEquals(1,syncs.size());
  assertEquals(true,engine.getIsTargetServiceActive(syncService1,0));
}
