{
  byte[] accountsFileData=("<?xml version='1.0' encoding='utf-8' standalone='yes' ?>\n" + "<accounts>\n" + "<listenForTickles user=\"0\" enabled=\"false\" />"+ "<listenForTickles user=\"1\" enabled=\"true\" />"+ "<authority id=\"0\" user=\"0\" account=\"account1\" type=\"type1\" authority=\"auth1\" />\n"+ "<authority id=\"1\" user=\"1\" account=\"account1\" type=\"type1\" authority=\"auth1\" />\n"+ "</accounts>\n").getBytes();
  MockContentResolver mockResolver=new MockContentResolver();
  final TestContext testContext=new TestContext(mockResolver,getContext());
  File syncDir=getSyncDir();
  syncDir.mkdirs();
  AtomicFile accountInfoFile=new AtomicFile(new File(syncDir,"accounts.xml"));
  FileOutputStream fos=accountInfoFile.startWrite();
  fos.write(accountsFileData);
  accountInfoFile.finishWrite(fos);
  SyncStorageEngine engine=SyncStorageEngine.newTestInstance(testContext);
  assertEquals(false,engine.getMasterSyncAutomatically(0));
  assertEquals(true,engine.getMasterSyncAutomatically(1));
  assertEquals(true,engine.getMasterSyncAutomatically(2));
}
