{
  SyncOperation sop=new SyncOperation(account1,DEFAULT_USER,SyncOperation.REASON_IS_SYNCABLE,SyncStorageEngine.SOURCE_LOCAL,authority1,Bundle.EMPTY,1000L,57L,0,0,true);
  SyncOperation sop1=new SyncOperation(account2,DEFAULT_USER,SyncOperation.REASON_PERIODIC,SyncStorageEngine.SOURCE_LOCAL,authority1,defaultBundle,0,0,20L,100L,false);
  SyncOperation deleted=new SyncOperation(account2,DEFAULT_USER,SyncOperation.REASON_SYNC_AUTO,SyncStorageEngine.SOURCE_LOCAL,authority1,Bundle.EMPTY,0,0,20L,100L,false);
  engine.insertIntoPending(sop);
  engine.insertIntoPending(sop1);
  engine.insertIntoPending(deleted);
  SyncStorageEngine.PendingOperation popDeleted=engine.getPendingOperations().get(2);
  assertEquals(deleted.target.account,popDeleted.target.account);
  assertEquals(deleted.target.provider,popDeleted.target.provider);
  assertEquals(deleted.target.service,popDeleted.target.service);
  assertEquals(deleted.target.userId,popDeleted.target.userId);
  assertEquals(deleted.reason,popDeleted.reason);
  assertEquals(deleted.syncSource,popDeleted.syncSource);
  assertEquals(deleted.isExpedited(),popDeleted.expedited);
  assert(android.content.PeriodicSync.syncExtrasEquals(deleted.extras,popDeleted.extras));
  engine.deleteFromPending(popDeleted);
  assertEquals("Delete of pending op failed.",2,engine.getPendingOperationCount());
  engine.writeAllState();
  engine.clearAndReadState();
  assertEquals("Delete of pending op failed.",2,engine.getPendingOperationCount());
  List<SyncStorageEngine.PendingOperation> pops=engine.getPendingOperations();
  SyncStorageEngine.PendingOperation popRetrieved=pops.get(0);
  assertEquals(sop.target.account,popRetrieved.target.account);
  assertEquals(sop.target.provider,popRetrieved.target.provider);
  assertEquals(sop.target.service,popRetrieved.target.service);
  assertEquals(sop.target.userId,popRetrieved.target.userId);
  assertEquals(sop.reason,popRetrieved.reason);
  assertEquals(sop.syncSource,popRetrieved.syncSource);
  assertEquals(sop.isExpedited(),popRetrieved.expedited);
  assert(android.content.PeriodicSync.syncExtrasEquals(sop.extras,popRetrieved.extras));
  popRetrieved=pops.get(1);
  assertEquals(sop1.target.account,popRetrieved.target.account);
  assertEquals(sop1.target.provider,popRetrieved.target.provider);
  assertEquals(sop1.target.service,popRetrieved.target.service);
  assertEquals(sop1.target.userId,popRetrieved.target.userId);
  assertEquals(sop1.reason,popRetrieved.reason);
  assertEquals(sop1.syncSource,popRetrieved.syncSource);
  assertEquals(sop1.isExpedited(),popRetrieved.expedited);
  assert(android.content.PeriodicSync.syncExtrasEquals(sop1.extras,popRetrieved.extras));
}
