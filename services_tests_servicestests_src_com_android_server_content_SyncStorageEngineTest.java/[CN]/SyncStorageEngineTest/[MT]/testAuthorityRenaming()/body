{
  final Account account1=new Account("acc1","type1");
  final Account account2=new Account("acc2","type2");
  final String authorityContacts="contacts";
  final String authorityCalendar="calendar";
  final String authorityOther="other";
  final String authorityContactsNew="com.android.contacts";
  final String authorityCalendarNew="com.android.calendar";
  MockContentResolver mockResolver=new MockContentResolver();
  final TestContext testContext=new TestContext(mockResolver,getContext());
  byte[] accountsFileData=("<?xml version='1.0' encoding='utf-8' standalone='yes' ?>\n" + "<accounts>\n" + "<authority id=\"0\" account=\"acc1\" type=\"type1\" authority=\"contacts\" />\n"+ "<authority id=\"1\" account=\"acc1\" type=\"type1\" authority=\"calendar\" />\n"+ "<authority id=\"2\" account=\"acc1\" type=\"type1\" authority=\"other\" />\n"+ "<authority id=\"3\" account=\"acc2\" type=\"type2\" authority=\"contacts\" />\n"+ "<authority id=\"4\" account=\"acc2\" type=\"type2\" authority=\"calendar\" />\n"+ "<authority id=\"5\" account=\"acc2\" type=\"type2\" authority=\"other\" />\n"+ "<authority id=\"6\" account=\"acc2\" type=\"type2\" enabled=\"false\""+ " authority=\"com.android.calendar\" />\n"+ "<authority id=\"7\" account=\"acc2\" type=\"type2\" enabled=\"false\""+ " authority=\"com.android.contacts\" />\n"+ "</accounts>\n").getBytes();
  File syncDir=new File(new File(testContext.getFilesDir(),"system"),"sync");
  syncDir.mkdirs();
  AtomicFile accountInfoFile=new AtomicFile(new File(syncDir,"accounts.xml"));
  FileOutputStream fos=accountInfoFile.startWrite();
  fos.write(accountsFileData);
  accountInfoFile.finishWrite(fos);
  SyncStorageEngine engine=SyncStorageEngine.newTestInstance(testContext);
  assertEquals(false,engine.getSyncAutomatically(account1,0,authorityContacts));
  assertEquals(false,engine.getSyncAutomatically(account1,0,authorityCalendar));
  assertEquals(true,engine.getSyncAutomatically(account1,0,authorityOther));
  assertEquals(true,engine.getSyncAutomatically(account1,0,authorityContactsNew));
  assertEquals(true,engine.getSyncAutomatically(account1,0,authorityCalendarNew));
  assertEquals(false,engine.getSyncAutomatically(account2,0,authorityContacts));
  assertEquals(false,engine.getSyncAutomatically(account2,0,authorityCalendar));
  assertEquals(true,engine.getSyncAutomatically(account2,0,authorityOther));
  assertEquals(false,engine.getSyncAutomatically(account2,0,authorityContactsNew));
  assertEquals(false,engine.getSyncAutomatically(account2,0,authorityCalendarNew));
}
