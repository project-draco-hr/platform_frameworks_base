{
  boolean wantMini=(kind == Images.Thumbnails.MINI_KIND || saveMini);
  int targetSize=wantMini ? ThumbnailUtil.THUMBNAIL_TARGET_SIZE : ThumbnailUtil.MINI_THUMB_TARGET_SIZE;
  int maxPixels=wantMini ? ThumbnailUtil.THUMBNAIL_MAX_NUM_PIXELS : ThumbnailUtil.MINI_THUMB_MAX_NUM_PIXELS;
  SizedThumbnailBitmap sizedThumbnailBitmap=new SizedThumbnailBitmap();
  Bitmap bitmap=null;
  MediaFileType fileType=MediaFile.getFileType(filePath);
  if (fileType != null && fileType.fileType == MediaFile.FILE_TYPE_JPEG) {
    createThumbnailFromEXIF(filePath,targetSize,maxPixels,sizedThumbnailBitmap);
    bitmap=sizedThumbnailBitmap.mBitmap;
  }
  if (bitmap == null) {
    bitmap=ThumbnailUtil.makeBitmap(targetSize,maxPixels,uri,cr);
  }
  if (bitmap == null) {
    return null;
  }
  if (saveMini) {
    if (sizedThumbnailBitmap.mThumbnailData != null) {
      ThumbnailUtil.storeThumbnail(cr,origId,sizedThumbnailBitmap.mThumbnailData,sizedThumbnailBitmap.mThumbnailWidth,sizedThumbnailBitmap.mThumbnailHeight);
    }
 else {
      ThumbnailUtil.storeThumbnail(cr,origId,bitmap);
    }
  }
  if (kind == Images.Thumbnails.MICRO_KIND) {
    bitmap=ThumbnailUtil.extractMiniThumb(bitmap,ThumbnailUtil.MINI_THUMB_TARGET_SIZE,ThumbnailUtil.MINI_THUMB_TARGET_SIZE,ThumbnailUtil.RECYCLE_INPUT);
  }
  return bitmap;
}
