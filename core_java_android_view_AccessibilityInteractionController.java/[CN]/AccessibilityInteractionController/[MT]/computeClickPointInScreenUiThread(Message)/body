{
  SomeArgs args=(SomeArgs)message.obj;
  final int accessibilityViewId=args.argi1;
  final int virtualDescendantId=args.argi2;
  final int interactionId=args.argi3;
  final IAccessibilityInteractionConnectionCallback callback=(IAccessibilityInteractionConnectionCallback)args.arg1;
  final MagnificationSpec spec=(MagnificationSpec)args.arg2;
  final Region interactiveRegion=(Region)args.arg3;
  args.recycle();
  boolean succeeded=false;
  Point point=mTempPoint;
  try {
    if (mViewRootImpl.mView == null || mViewRootImpl.mAttachInfo == null) {
      return;
    }
    View target=null;
    if (accessibilityViewId != AccessibilityNodeInfo.UNDEFINED_ITEM_ID) {
      target=findViewByAccessibilityId(accessibilityViewId);
    }
 else {
      target=mViewRootImpl.mView;
    }
    if (target != null && isShown(target)) {
      AccessibilityNodeProvider provider=target.getAccessibilityNodeProvider();
      if (provider != null) {
        AccessibilityNodeInfo node=null;
        if (virtualDescendantId != AccessibilityNodeInfo.UNDEFINED_ITEM_ID) {
          node=provider.createAccessibilityNodeInfo(virtualDescendantId);
        }
 else {
          node=provider.createAccessibilityNodeInfo(AccessibilityNodeProvider.HOST_VIEW_ID);
        }
        if (node != null) {
          succeeded=true;
          Rect boundsInScreen=mTempRect;
          node.getBoundsInScreen(boundsInScreen);
          point.set(boundsInScreen.centerX(),boundsInScreen.centerY());
        }
      }
 else       if (virtualDescendantId == AccessibilityNodeInfo.UNDEFINED_ITEM_ID) {
        succeeded=target.computeClickPointInScreenForAccessibility(interactiveRegion,point);
      }
    }
  }
  finally {
    try {
      Point result=null;
      if (succeeded) {
        applyAppScaleAndMagnificationSpecIfNeeded(point,spec);
        result=point;
      }
      callback.setComputeClickPointInScreenActionResult(result,interactionId);
    }
 catch (    RemoteException re) {
    }
  }
}
