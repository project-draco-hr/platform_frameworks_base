{
  final int flags=message.arg1;
  final int accessibilityViewId=message.arg2;
  SomeArgs args=(SomeArgs)message.obj;
  final int virtualDescendantId=args.argi1;
  final int action=args.argi2;
  final int interactionId=args.argi3;
  final IAccessibilityInteractionConnectionCallback callback=(IAccessibilityInteractionConnectionCallback)args.arg1;
  Bundle arguments=(Bundle)args.arg2;
  args.recycle();
  boolean succeeded=false;
  try {
    if (mViewRootImpl.mView == null || mViewRootImpl.mAttachInfo == null) {
      return;
    }
    mViewRootImpl.mAttachInfo.mAccessibilityFetchFlags=flags;
    View target=null;
    if (accessibilityViewId != AccessibilityNodeInfo.UNDEFINED_ITEM_ID) {
      target=findViewByAccessibilityId(accessibilityViewId);
    }
 else {
      target=mViewRootImpl.mView;
    }
    if (target != null && isShown(target)) {
      AccessibilityNodeProvider provider=target.getAccessibilityNodeProvider();
      if (provider != null) {
        if (virtualDescendantId != AccessibilityNodeInfo.UNDEFINED_ITEM_ID) {
          succeeded=provider.performAction(virtualDescendantId,action,arguments);
        }
 else {
          succeeded=provider.performAction(AccessibilityNodeProvider.HOST_VIEW_ID,action,arguments);
        }
      }
 else       if (virtualDescendantId == AccessibilityNodeInfo.UNDEFINED_ITEM_ID) {
        succeeded=target.performAccessibilityAction(action,arguments);
      }
    }
  }
  finally {
    try {
      mViewRootImpl.mAttachInfo.mAccessibilityFetchFlags=0;
      callback.setPerformAccessibilityActionResult(succeeded,interactionId);
    }
 catch (    RemoteException re) {
    }
  }
}
