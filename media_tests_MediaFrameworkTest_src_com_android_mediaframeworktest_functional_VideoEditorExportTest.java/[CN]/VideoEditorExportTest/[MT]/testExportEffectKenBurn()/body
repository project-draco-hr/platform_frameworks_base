{
  final String imageItemFileName=INPUT_FILE_PATH + "IMG_640x480.jpg";
  final int imageItemRenderingMode=MediaItem.RENDERING_MODE_BLACK_BORDER;
  final String outFilename=mVideoEditorHelper.createRandomFile(mVideoEditor.getPath() + "/") + ".3gp";
  final MediaImageItem mediaImageItem=mVideoEditorHelper.createMediaItem(mVideoEditor,"mediaImageItem1",imageItemFileName,5000,imageItemRenderingMode);
  mVideoEditor.addMediaItem(mediaImageItem);
  final Rect startRect=new Rect((mediaImageItem.getHeight() / 3),(mediaImageItem.getWidth() / 3),(mediaImageItem.getHeight() / 2),(mediaImageItem.getWidth() / 2));
  final Rect endRect=new Rect(0,0,mediaImageItem.getWidth(),mediaImageItem.getHeight());
  final EffectKenBurns kbEffectOnMediaItem=new EffectKenBurns(mediaImageItem,"KBOnM2",startRect,endRect,500,3000);
  assertNotNull("EffectKenBurns",kbEffectOnMediaItem);
  mediaImageItem.addEffect(kbEffectOnMediaItem);
  assertEquals("KenBurn Start Rect",startRect,kbEffectOnMediaItem.getStartRect());
  assertEquals("KenBurn End Rect",endRect,kbEffectOnMediaItem.getEndRect());
  mVideoEditor.generatePreview(new MediaProcessingProgressListener(){
    public void onProgress(    Object item,    int action,    int progress){
    }
  }
);
  try {
    final int[] progressUpdate=new int[100];
    mVideoEditor.export(outFilename,MediaProperties.HEIGHT_720,MediaProperties.BITRATE_800K,new ExportProgressListener(){
      int i=0;
      public void onProgress(      VideoEditor ve,      String outFileName,      int progress){
        progressUpdate[i++]=progress;
      }
    }
);
    mVideoEditorHelper.checkProgressCBValues(progressUpdate);
  }
 catch (  Exception e) {
    assertTrue("Error in Export" + e.toString(),false);
  }
  mVideoEditorHelper.validateExport(mVideoEditor,outFilename,MediaProperties.HEIGHT_720,0,mediaImageItem.getDuration(),MediaProperties.VCODEC_H264BP,MediaProperties.ACODEC_AAC_LC);
  mVideoEditorHelper.checkDeleteExistingFile(outFilename);
}
