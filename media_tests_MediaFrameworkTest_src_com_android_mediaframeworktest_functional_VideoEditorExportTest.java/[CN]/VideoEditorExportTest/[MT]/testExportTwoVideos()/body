{
  final String videoItemFileName=INPUT_FILE_PATH + "H263_profile0_176x144_15fps_256kbps_AACLC_32kHz_128kbps_s_1_17.3gp";
  final String videoItemFileName1=INPUT_FILE_PATH + "H264_BP_640x480_12.5fps_256kbps_AACLC_16khz_24kbps_s_0_26.mp4";
  final String outFilename=mVideoEditorHelper.createRandomFile(mVideoEditor.getPath() + "/") + ".3gp";
  final MediaVideoItem mediaVideoItem=mVideoEditorHelper.createMediaItem(mVideoEditor,"m1",videoItemFileName,MediaItem.RENDERING_MODE_BLACK_BORDER);
  mVideoEditor.addMediaItem(mediaVideoItem);
  final MediaVideoItem mediaVideoItem1=mVideoEditorHelper.createMediaItem(mVideoEditor,"m2",videoItemFileName1,MediaItem.RENDERING_MODE_BLACK_BORDER);
  mVideoEditor.addMediaItem(mediaVideoItem1);
  mVideoEditor.generatePreview(new MediaProcessingProgressListener(){
    public void onProgress(    Object item,    int action,    int progress){
    }
  }
);
  try {
    final int[] progressUpdate=new int[100];
    mVideoEditor.export(outFilename,MediaProperties.HEIGHT_720,MediaProperties.BITRATE_800K,new ExportProgressListener(){
      int i=0;
      public void onProgress(      VideoEditor ve,      String outFileName,      int progress){
        progressUpdate[i++]=progress;
      }
    }
);
    mVideoEditorHelper.checkProgressCBValues(progressUpdate);
  }
 catch (  Exception e) {
    assertTrue("Error in Export" + e.toString(),false);
  }
  mVideoEditorHelper.validateExport(mVideoEditor,outFilename,MediaProperties.HEIGHT_720,0,(mediaVideoItem.getDuration() + mediaVideoItem1.getDuration()),MediaProperties.VCODEC_H264BP,MediaProperties.ACODEC_AAC_LC);
  mVideoEditorHelper.checkDeleteExistingFile(outFilename);
}
