{
  final String videoItemFileName=INPUT_FILE_PATH + "H263_profile0_176x144_15fps_256kbps_AACLC_32kHz_128kbps_s_0_26.3gp";
  final String imageItemFileName=INPUT_FILE_PATH + "IMG_1600x1200.jpg";
  final String outFilename=mVideoEditorHelper.createRandomFile(mVideoEditor.getPath() + "/") + ".3gp";
  final String audioTrackFilename=INPUT_FILE_PATH + "AMRNB_8KHz_12.2Kbps_m_1_17.3gp";
  final MediaVideoItem mediaVideoItem=mVideoEditorHelper.createMediaItem(mVideoEditor,"m1",videoItemFileName,MediaItem.RENDERING_MODE_BLACK_BORDER);
  mediaVideoItem.setExtractBoundaries(0,10000);
  mVideoEditor.addMediaItem(mediaVideoItem);
  final MediaImageItem mediaImageItem=mVideoEditorHelper.createMediaItem(mVideoEditor,"m2",imageItemFileName,5000,MediaItem.RENDERING_MODE_BLACK_BORDER);
  mVideoEditor.addMediaItem(mediaImageItem);
  final AudioTrack audioTrack=mVideoEditorHelper.createAudio(mVideoEditor,"a1",audioTrackFilename);
  audioTrack.setExtractBoundaries(2000,5000);
  mVideoEditor.addAudioTrack(audioTrack);
  audioTrack.disableDucking();
  audioTrack.enableLoop();
  audioTrack.setVolume(75);
  mVideoEditor.generatePreview(new MediaProcessingProgressListener(){
    public void onProgress(    Object item,    int action,    int progress){
    }
  }
);
  try {
    final int[] progressUpdate=new int[100];
    mVideoEditor.export(outFilename,MediaProperties.HEIGHT_720,MediaProperties.BITRATE_800K,new ExportProgressListener(){
      int i=0;
      public void onProgress(      VideoEditor ve,      String outFileName,      int progress){
        progressUpdate[i++]=progress;
      }
    }
);
    mVideoEditorHelper.checkProgressCBValues(progressUpdate);
  }
 catch (  Exception e) {
    assertTrue("Error in Export" + e.toString(),false);
  }
  mVideoEditorHelper.validateExport(mVideoEditor,outFilename,MediaProperties.HEIGHT_720,0,(mediaVideoItem.getTimelineDuration() + mediaImageItem.getDuration()),MediaProperties.VCODEC_H264,MediaProperties.ACODEC_AAC_LC);
  mVideoEditorHelper.checkDeleteExistingFile(outFilename);
}
