{
  final String videoItemFilename1=INPUT_FILE_PATH + "H263_profile0_176x144_15fps_256kbps_AACLC_32kHz_128kbps_s_1_17.3gp";
  final String imageItemFilename1=INPUT_FILE_PATH + "IMG_1600x1200.jpg";
  final String videoItemFilename2=INPUT_FILE_PATH + "H264_BP_640x480_12.5fps_256kbps_AACLC_16khz_24kbps_s_0_26.mp4";
  final String maskFilename=INPUT_FILE_PATH + "TransitionSpiral_QVGA.jpg";
  final String outFilename=mVideoEditorHelper.createRandomFile(mVideoEditor.getPath() + "/") + ".3gp";
  final MediaVideoItem mediaItem1=mVideoEditorHelper.createMediaItem(mVideoEditor,"m1",videoItemFilename1,MediaItem.RENDERING_MODE_BLACK_BORDER);
  mediaItem1.setExtractBoundaries(2000,7000);
  mVideoEditor.addMediaItem(mediaItem1);
  final TransitionAlpha transition1=mVideoEditorHelper.createTAlpha("transition1",null,mediaItem1,2000,Transition.BEHAVIOR_LINEAR,maskFilename,50,true);
  mVideoEditor.addTransition(transition1);
  final MediaImageItem mediaItem2=mVideoEditorHelper.createMediaItem(mVideoEditor,"m2",imageItemFilename1,8000,MediaItem.RENDERING_MODE_BLACK_BORDER);
  mVideoEditor.addMediaItem(mediaItem2);
  final MediaVideoItem mediaItem3=mVideoEditorHelper.createMediaItem(mVideoEditor,"m3",videoItemFilename2,MediaItem.RENDERING_MODE_BLACK_BORDER);
  mediaItem3.setExtractBoundaries(0,8000);
  mVideoEditor.addMediaItem(mediaItem3);
  final TransitionSliding transition2And3=mVideoEditorHelper.createTSliding("transition2",mediaItem2,mediaItem3,4000,Transition.BEHAVIOR_MIDDLE_FAST,TransitionSliding.DIRECTION_RIGHT_OUT_LEFT_IN);
  mVideoEditor.addTransition(transition2And3);
  final TransitionCrossfade transition3=mVideoEditorHelper.createTCrossFade("transition3",mediaItem3,null,3500,Transition.BEHAVIOR_MIDDLE_SLOW);
  mVideoEditor.addTransition(transition3);
  final EffectColor effectColor=mVideoEditorHelper.createEffectItem(mediaItem2,"effect",0,3000,EffectColor.TYPE_COLOR,EffectColor.PINK);
  mediaItem2.addEffect(effectColor);
  mVideoEditor.setAspectRatio(MediaProperties.ASPECT_RATIO_11_9);
  try {
    final int[] progressUpdate=new int[100];
    mVideoEditor.export(outFilename,MediaProperties.HEIGHT_144,MediaProperties.BITRATE_800K,new ExportProgressListener(){
      int i=0;
      public void onProgress(      VideoEditor ve,      String outFileName,      int progress){
        progressUpdate[i++]=progress;
      }
    }
);
    mVideoEditorHelper.checkProgressCBValues(progressUpdate);
  }
 catch (  Exception e) {
    assertTrue("Error in Export" + e.toString(),false);
  }
  final long storyBoardDuration=mediaItem1.getTimelineDuration() + mediaItem2.getTimelineDuration() + mediaItem3.getTimelineDuration() - transition2And3.getDuration();
  mVideoEditorHelper.validateExport(mVideoEditor,outFilename,MediaProperties.HEIGHT_144,0,storyBoardDuration,MediaProperties.VCODEC_H264BP,MediaProperties.ACODEC_AAC_LC);
  mVideoEditorHelper.checkDeleteExistingFile(outFilename);
}
