{
  boolean needsInvalidate=false;
  final int width=getPaddedWidth();
  final float deltaX=mLastMotionX - x;
  mLastMotionX=x;
  final EdgeEffect startEdge;
  final EdgeEffect endEdge;
  if (isLayoutRtl()) {
    startEdge=mRightEdge;
    endEdge=mLeftEdge;
  }
 else {
    startEdge=mLeftEdge;
    endEdge=mRightEdge;
  }
  final float nextScrollX=getScrollX() + deltaX;
  final float scrollStart;
  if (isLayoutRtl()) {
    scrollStart=MAX_SCROLL_X - nextScrollX;
  }
 else {
    scrollStart=nextScrollX;
  }
  final float startBound;
  final ItemInfo startItem=mItems.get(0);
  final boolean startAbsolute=startItem.position == 0;
  if (startAbsolute) {
    startBound=startItem.offset * width;
  }
 else {
    startBound=width * mFirstOffset;
  }
  final float endBound;
  final ItemInfo endItem=mItems.get(mItems.size() - 1);
  final boolean endAbsolute=endItem.position == mAdapter.getCount() - 1;
  if (endAbsolute) {
    endBound=endItem.offset * width;
  }
 else {
    endBound=width * mLastOffset;
  }
  final float clampedScrollStart;
  if (scrollStart < startBound) {
    if (startAbsolute) {
      final float over=startBound - scrollStart;
      startEdge.onPull(Math.abs(over) / width);
      needsInvalidate=true;
    }
    clampedScrollStart=startBound;
  }
 else   if (scrollStart > endBound) {
    if (endAbsolute) {
      final float over=scrollStart - endBound;
      endEdge.onPull(Math.abs(over) / width);
      needsInvalidate=true;
    }
    clampedScrollStart=endBound;
  }
 else {
    clampedScrollStart=scrollStart;
  }
  final float targetScrollX;
  if (isLayoutRtl()) {
    targetScrollX=MAX_SCROLL_X - clampedScrollStart;
  }
 else {
    targetScrollX=clampedScrollStart;
  }
  mLastMotionX+=targetScrollX - (int)targetScrollX;
  scrollTo((int)targetScrollX,getScrollY());
  pageScrolled((int)targetScrollX);
  return needsInvalidate;
}
