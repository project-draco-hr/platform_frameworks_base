{
  super.onCreate(bundle);
  setContentView(R.layout.tv_pip_menu);
  mPipManager.addListener(this);
  mFullButtonView=findViewById(R.id.full_button);
  mFullDescriptionView=findViewById(R.id.full_desc);
  mFullButtonView.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      mPipManager.movePipToFullscreen();
      mMovePipToFullscreen=true;
      finish();
    }
  }
);
  mFullButtonView.setOnFocusChangeListener(new View.OnFocusChangeListener(){
    @Override public void onFocusChange(    View v,    boolean hasFocus){
      mFullDescriptionView.setVisibility(hasFocus ? View.VISIBLE : View.INVISIBLE);
    }
  }
);
  mPlayPauseView=findViewById(R.id.play_pause);
  mPlayPauseButtonImageView=(ImageView)findViewById(R.id.play_pause_button);
  mPlayPauseDescriptionTextView=(TextView)findViewById(R.id.play_pause_desc);
  mPlayPauseButtonImageView.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      if (mMediaController == null || mMediaController.getPlaybackState() == null) {
        return;
      }
      long actions=mMediaController.getPlaybackState().getActions();
      int state=mMediaController.getPlaybackState().getState();
      if (((actions & ACTION_PLAY) != 0) && !isPlaying(state)) {
        mMediaController.getTransportControls().play();
      }
 else       if ((actions & ACTION_PAUSE) != 0 && isPlaying(state)) {
        mMediaController.getTransportControls().pause();
      }
    }
  }
);
  mPlayPauseButtonImageView.setOnFocusChangeListener(new View.OnFocusChangeListener(){
    @Override public void onFocusChange(    View v,    boolean hasFocus){
      mPlayPauseDescriptionTextView.setVisibility(hasFocus ? View.VISIBLE : View.INVISIBLE);
    }
  }
);
  mCloseButtonView=findViewById(R.id.close_button);
  mCloseDescriptionView=findViewById(R.id.close_desc);
  mCloseButtonView.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      mPipManager.closePip();
      finish();
    }
  }
);
  mCloseButtonView.setOnFocusChangeListener(new View.OnFocusChangeListener(){
    @Override public void onFocusChange(    View v,    boolean hasFocus){
      mCloseDescriptionView.setVisibility(hasFocus ? View.VISIBLE : View.INVISIBLE);
    }
  }
);
  updateMediaController();
}
