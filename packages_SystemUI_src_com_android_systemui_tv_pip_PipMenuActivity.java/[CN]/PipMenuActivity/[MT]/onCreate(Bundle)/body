{
  super.onCreate(bundle);
  setContentView(R.layout.tv_pip_menu);
  mPipManager.addListener(this);
  mFullButtonView=findViewById(R.id.full);
  mFullDescriptionView=findViewById(R.id.full_desc);
  mFullButtonView.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      mPipManager.movePipToFullscreen();
      finish();
    }
  }
);
  mFullButtonView.setOnFocusChangeListener(new View.OnFocusChangeListener(){
    @Override public void onFocusChange(    View v,    boolean hasFocus){
      mFullDescriptionView.setVisibility(hasFocus ? View.VISIBLE : View.INVISIBLE);
    }
  }
);
  mPlayPauseButtonView=findViewById(R.id.play_pause);
  mPlayPauseDescriptionView=findViewById(R.id.play_pause_desc);
  mPlayPauseButtonView.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
    }
  }
);
  mPlayPauseButtonView.setOnFocusChangeListener(new View.OnFocusChangeListener(){
    @Override public void onFocusChange(    View v,    boolean hasFocus){
      mPlayPauseDescriptionView.setVisibility(hasFocus ? View.VISIBLE : View.INVISIBLE);
    }
  }
);
  mCloseButtonView=findViewById(R.id.close);
  mCloseDescriptionView=findViewById(R.id.close_desc);
  mCloseButtonView.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      mPipManager.closePip();
      finish();
    }
  }
);
  mCloseButtonView.setOnFocusChangeListener(new View.OnFocusChangeListener(){
    @Override public void onFocusChange(    View v,    boolean hasFocus){
      mCloseDescriptionView.setVisibility(hasFocus ? View.VISIBLE : View.INVISIBLE);
    }
  }
);
}
