{
  StreamConfiguration[] configurations=getBase(CameraCharacteristics.SCALER_AVAILABLE_STREAM_CONFIGURATIONS);
  StreamConfigurationDuration[] minFrameDurations=getBase(CameraCharacteristics.SCALER_AVAILABLE_MIN_FRAME_DURATIONS);
  StreamConfigurationDuration[] stallDurations=getBase(CameraCharacteristics.SCALER_AVAILABLE_STALL_DURATIONS);
  StreamConfiguration[] depthConfigurations=getBase(CameraCharacteristics.DEPTH_AVAILABLE_DEPTH_STREAM_CONFIGURATIONS);
  StreamConfigurationDuration[] depthMinFrameDurations=getBase(CameraCharacteristics.DEPTH_AVAILABLE_DEPTH_MIN_FRAME_DURATIONS);
  StreamConfigurationDuration[] depthStallDurations=getBase(CameraCharacteristics.DEPTH_AVAILABLE_DEPTH_STALL_DURATIONS);
  HighSpeedVideoConfiguration[] highSpeedVideoConfigurations=getBase(CameraCharacteristics.CONTROL_AVAILABLE_HIGH_SPEED_VIDEO_CONFIGURATIONS);
  ReprocessFormatsMap inputOutputFormatsMap=getBase(CameraCharacteristics.SCALER_AVAILABLE_INPUT_OUTPUT_FORMATS_MAP);
  int[] capabilities=getBase(CameraCharacteristics.REQUEST_AVAILABLE_CAPABILITIES);
  boolean listHighResolution=false;
  for (  int capability : capabilities) {
    if (capability == CameraCharacteristics.REQUEST_AVAILABLE_CAPABILITIES_BURST_CAPTURE) {
      listHighResolution=true;
      break;
    }
  }
  return new StreamConfigurationMap(configurations,minFrameDurations,stallDurations,depthConfigurations,depthMinFrameDurations,depthStallDurations,highSpeedVideoConfigurations,inputOutputFormatsMap,listHighResolution);
}
