{
  final int FACE_LANDMARK_SIZE=6;
  Integer faceDetectMode=getBase(CaptureResult.STATISTICS_FACE_DETECT_MODE);
  if (faceDetectMode == null) {
    throw new AssertionError("Expect non-null face detect mode");
  }
  if (faceDetectMode == CaptureResult.STATISTICS_FACE_DETECT_MODE_OFF) {
    return new Face[0];
  }
  if (faceDetectMode != CaptureResult.STATISTICS_FACE_DETECT_MODE_SIMPLE && faceDetectMode != CaptureResult.STATISTICS_FACE_DETECT_MODE_FULL) {
    throw new AssertionError("Unknown face detect mode: " + faceDetectMode);
  }
  byte[] faceScores=getBase(CaptureResult.STATISTICS_FACE_SCORES);
  Rect[] faceRectangles=getBase(CaptureResult.STATISTICS_FACE_RECTANGLES);
  if (faceScores == null || faceRectangles == null) {
    throw new AssertionError("Expect face scores and rectangles to be non-null");
  }
 else   if (faceScores.length != faceRectangles.length) {
    throw new AssertionError(String.format("Face score size(%d) doesn match face rectangle size(%d)!",faceScores.length,faceRectangles.length));
  }
  int[] faceIds=getBase(CaptureResult.STATISTICS_FACE_IDS);
  int[] faceLandmarks=getBase(CaptureResult.STATISTICS_FACE_LANDMARKS);
  int numFaces=faceScores.length;
  if (faceDetectMode == CaptureResult.STATISTICS_FACE_DETECT_MODE_FULL) {
    if (faceIds == null || faceLandmarks == null) {
      throw new AssertionError("Expect face ids and landmarks to be non-null for " + "FULL mode");
    }
 else     if (faceIds.length != numFaces || faceLandmarks.length != numFaces * FACE_LANDMARK_SIZE) {
      throw new AssertionError(String.format("Face id size(%d), or face landmark size(%d) don't match " + "face number(%d)!",faceIds.length,faceLandmarks.length * FACE_LANDMARK_SIZE,numFaces));
    }
  }
  Face[] faces=new Face[numFaces];
  if (faceDetectMode == CaptureResult.STATISTICS_FACE_DETECT_MODE_SIMPLE) {
    for (int i=0; i < numFaces; i++) {
      faces[i]=new Face(faceRectangles[i],faceScores[i]);
    }
  }
 else {
    for (int i=0; i < numFaces; i++) {
      Point leftEye=new Point(faceLandmarks[i * 6],faceLandmarks[i * 6 + 1]);
      Point rightEye=new Point(faceLandmarks[i * 6 + 2],faceLandmarks[i * 6 + 3]);
      Point mouth=new Point(faceLandmarks[i * 6 + 4],faceLandmarks[i * 6 + 5]);
      faces[i]=new Face(faceRectangles[i],faceScores[i],faceIds[i],leftEye,rightEye,mouth);
    }
  }
  return faces;
}
