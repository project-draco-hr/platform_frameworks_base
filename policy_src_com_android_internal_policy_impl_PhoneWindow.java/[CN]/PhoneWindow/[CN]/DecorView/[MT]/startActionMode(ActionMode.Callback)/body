{
  if (mActionMode != null) {
    mActionMode.finish();
  }
  final ActionMode.Callback wrappedCallback=new ActionModeCallbackWrapper(callback);
  ActionMode mode=null;
  try {
    mode=getCallback().onWindowStartingActionMode(wrappedCallback);
  }
 catch (  AbstractMethodError ame) {
  }
  if (mode != null) {
    mActionMode=mode;
  }
 else {
    if (mActionModeView == null) {
      if (hasFeature(FEATURE_ACTION_MODE_OVERLAY)) {
        mActionModeView=new ActionBarContextView(mContext);
        mActionModePopup=new PopupWindow(mContext,null,com.android.internal.R.attr.actionModePopupWindowStyle);
        mActionModePopup.setLayoutInScreenEnabled(true);
        mActionModePopup.setClippingEnabled(false);
        mActionModePopup.setContentView(mActionModeView);
        mActionModePopup.setWidth(MATCH_PARENT);
        TypedValue heightValue=new TypedValue();
        mContext.getTheme().resolveAttribute(com.android.internal.R.attr.actionBarSize,heightValue,false);
        final int height=TypedValue.complexToDimensionPixelSize(heightValue.data,mContext.getResources().getDisplayMetrics());
        mActionModePopup.setHeight(height);
        mShowActionModePopup=new Runnable(){
          public void run(){
            mActionModePopup.showAtLocation(PhoneWindow.DecorView.this,Gravity.TOP | Gravity.FILL_HORIZONTAL,0,0);
          }
        }
;
      }
 else {
        ViewStub stub=(ViewStub)findViewById(com.android.internal.R.id.action_mode_bar_stub);
        if (stub != null) {
          mActionModeView=(ActionBarContextView)stub.inflate();
        }
      }
    }
    if (mActionModeView != null) {
      mActionModeView.killMode();
      mode=new StandaloneActionMode(getContext(),mActionModeView,wrappedCallback);
      if (callback.onCreateActionMode(mode,mode.getMenu())) {
        mode.invalidate();
        mActionModeView.initForMode(mode);
        mActionModeView.setVisibility(View.VISIBLE);
        mActionMode=mode;
        if (mActionModePopup != null) {
          post(mShowActionModePopup);
        }
      }
 else {
        mActionMode=null;
      }
    }
  }
  if (mActionMode != null) {
    try {
      getCallback().onActionModeStarted(mActionMode);
    }
 catch (    AbstractMethodError ame) {
    }
  }
  return mActionMode;
}
