{
  if (mDecor == null) {
    mDecor=generateDecor();
    mDecor.setDescendantFocusability(ViewGroup.FOCUS_AFTER_DESCENDANTS);
    mDecor.setIsRootNamespace(true);
    if (!mInvalidatePanelMenuPosted && mInvalidatePanelMenuFeatures != 0) {
      mDecor.postOnAnimation(mInvalidatePanelMenuRunnable);
    }
  }
  if (mContentParent == null) {
    mContentParent=generateLayout(mDecor);
    mDecor.makeOptionalFitsSystemWindows();
    mTitleView=(TextView)findViewById(com.android.internal.R.id.title);
    if (mTitleView != null) {
      mTitleView.setLayoutDirection(mDecor.getLayoutDirection());
      if ((getLocalFeatures() & (1 << FEATURE_NO_TITLE)) != 0) {
        View titleContainer=findViewById(com.android.internal.R.id.title_container);
        if (titleContainer != null) {
          titleContainer.setVisibility(View.GONE);
        }
 else {
          mTitleView.setVisibility(View.GONE);
        }
        if (mContentParent instanceof FrameLayout) {
          ((FrameLayout)mContentParent).setForeground(null);
        }
      }
 else {
        mTitleView.setText(mTitle);
      }
    }
 else {
      mActionBar=(ActionBarView)findViewById(com.android.internal.R.id.action_bar);
      if (mActionBar != null) {
        mActionBar.setWindowCallback(getCallback());
        if (mActionBar.getTitle() == null) {
          mActionBar.setWindowTitle(mTitle);
        }
        final int localFeatures=getLocalFeatures();
        if ((localFeatures & (1 << FEATURE_PROGRESS)) != 0) {
          mActionBar.initProgress();
        }
        if ((localFeatures & (1 << FEATURE_INDETERMINATE_PROGRESS)) != 0) {
          mActionBar.initIndeterminateProgress();
        }
        final ActionBarOverlayLayout abol=(ActionBarOverlayLayout)findViewById(com.android.internal.R.id.action_bar_overlay_layout);
        if (abol != null) {
          abol.setOverlayMode((localFeatures & (1 << FEATURE_ACTION_BAR_OVERLAY)) != 0);
        }
        boolean splitActionBar=false;
        final boolean splitWhenNarrow=(mUiOptions & ActivityInfo.UIOPTION_SPLIT_ACTION_BAR_WHEN_NARROW) != 0;
        if (splitWhenNarrow) {
          splitActionBar=getContext().getResources().getBoolean(com.android.internal.R.bool.split_action_bar_is_narrow);
        }
 else {
          splitActionBar=getWindowStyle().getBoolean(com.android.internal.R.styleable.Window_windowSplitActionBar,false);
        }
        final ActionBarContainer splitView=(ActionBarContainer)findViewById(com.android.internal.R.id.split_action_bar);
        if (splitView != null) {
          mActionBar.setSplitView(splitView);
          mActionBar.setSplitActionBar(splitActionBar);
          mActionBar.setSplitWhenNarrow(splitWhenNarrow);
          final ActionBarContextView cab=(ActionBarContextView)findViewById(com.android.internal.R.id.action_context_bar);
          cab.setSplitView(splitView);
          cab.setSplitActionBar(splitActionBar);
          cab.setSplitWhenNarrow(splitWhenNarrow);
        }
 else         if (splitActionBar) {
          Log.e(TAG,"Requested split action bar with " + "incompatible window decor! Ignoring request.");
        }
        if ((mResourcesSetFlags & FLAG_RESOURCE_SET_ICON) != 0 || (mIconRes != 0 && !mActionBar.hasIcon())) {
          mActionBar.setIcon(mIconRes);
        }
 else         if ((mResourcesSetFlags & FLAG_RESOURCE_SET_ICON) == 0 && mIconRes == 0 && !mActionBar.hasIcon()) {
          mActionBar.setIcon(getContext().getPackageManager().getDefaultActivityIcon());
          mResourcesSetFlags|=FLAG_RESOURCE_SET_ICON_FALLBACK;
        }
        if ((mResourcesSetFlags & FLAG_RESOURCE_SET_LOGO) != 0 || (mLogoRes != 0 && !mActionBar.hasLogo())) {
          mActionBar.setLogo(mLogoRes);
        }
        mDecor.post(new Runnable(){
          public void run(){
            PanelFeatureState st=getPanelState(FEATURE_OPTIONS_PANEL,false);
            if (!isDestroyed() && (st == null || st.menu == null)) {
              invalidatePanelMenu(FEATURE_ACTION_BAR);
            }
          }
        }
);
      }
    }
    if (hasFeature(FEATURE_CONTENT_TRANSITIONS)) {
      if (mTransitionManager == null) {
        final int transitionRes=getWindowStyle().getResourceId(com.android.internal.R.styleable.Window_windowContentTransitionManager,0);
        if (transitionRes != 0) {
          final TransitionInflater inflater=TransitionInflater.from(getContext());
          mTransitionManager=inflater.inflateTransitionManager(transitionRes,mContentParent);
        }
 else {
          mTransitionManager=new TransitionManager();
        }
      }
      mEnterTransition=getTransition(mEnterTransition,com.android.internal.R.styleable.Window_windowEnterTransition);
      mExitTransition=getTransition(mExitTransition,com.android.internal.R.styleable.Window_windowExitTransition);
      mSharedElementEnterTransition=getTransition(mSharedElementEnterTransition,com.android.internal.R.styleable.Window_windowSharedElementEnterTransition);
      mSharedElementExitTransition=getTransition(mSharedElementExitTransition,com.android.internal.R.styleable.Window_windowSharedElementExitTransition);
      if (mAllowEnterTransitionOverlap == null) {
        mAllowEnterTransitionOverlap=getWindowStyle().getBoolean(com.android.internal.R.styleable.Window_windowAllowEnterTransitionOverlap,true);
      }
      if (mAllowExitTransitionOverlap == null) {
        mAllowExitTransitionOverlap=getWindowStyle().getBoolean(com.android.internal.R.styleable.Window_windowAllowExitTransitionOverlap,true);
      }
    }
  }
}
