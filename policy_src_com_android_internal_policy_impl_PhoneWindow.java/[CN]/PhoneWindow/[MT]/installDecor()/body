{
  if (mDecor == null) {
    mDecor=generateDecor();
    mDecor.setDescendantFocusability(ViewGroup.FOCUS_AFTER_DESCENDANTS);
    mDecor.setIsRootNamespace(true);
    if (!mInvalidatePanelMenuPosted && mInvalidatePanelMenuFeatures != 0) {
      mDecor.postOnAnimation(mInvalidatePanelMenuRunnable);
    }
  }
  if (mContentParent == null) {
    mContentParent=generateLayout(mDecor);
    mDecor.makeOptionalFitsSystemWindows();
    final DecorContentParent decorContentParent=(DecorContentParent)mDecor.findViewById(R.id.decor_content_parent);
    if (decorContentParent != null) {
      mDecorContentParent=decorContentParent;
      mDecorContentParent.setWindowCallback(getCallback());
      if (mDecorContentParent.getTitle() == null) {
        mDecorContentParent.setWindowTitle(mTitle);
      }
      final int localFeatures=getLocalFeatures();
      for (int i=0; i < FEATURE_MAX; i++) {
        if ((localFeatures & (1 << i)) != 0) {
          mDecorContentParent.initFeature(i);
        }
      }
      mDecorContentParent.setUiOptions(mUiOptions);
      if ((mResourcesSetFlags & FLAG_RESOURCE_SET_ICON) != 0 || (mIconRes != 0 && !mDecorContentParent.hasIcon())) {
        mDecorContentParent.setIcon(mIconRes);
      }
 else       if ((mResourcesSetFlags & FLAG_RESOURCE_SET_ICON) == 0 && mIconRes == 0 && !mDecorContentParent.hasIcon()) {
        mDecorContentParent.setIcon(getContext().getPackageManager().getDefaultActivityIcon());
        mResourcesSetFlags|=FLAG_RESOURCE_SET_ICON_FALLBACK;
      }
      if ((mResourcesSetFlags & FLAG_RESOURCE_SET_LOGO) != 0 || (mLogoRes != 0 && !mDecorContentParent.hasLogo())) {
        mDecorContentParent.setLogo(mLogoRes);
      }
      mDecor.post(new Runnable(){
        public void run(){
          PanelFeatureState st=getPanelState(FEATURE_OPTIONS_PANEL,false);
          if (!isDestroyed() && (st == null || st.menu == null)) {
            invalidatePanelMenu(FEATURE_ACTION_BAR);
          }
        }
      }
);
    }
 else {
      mTitleView=(TextView)findViewById(R.id.title);
      if (mTitleView != null) {
        mTitleView.setLayoutDirection(mDecor.getLayoutDirection());
        if ((getLocalFeatures() & (1 << FEATURE_NO_TITLE)) != 0) {
          View titleContainer=findViewById(R.id.title_container);
          if (titleContainer != null) {
            titleContainer.setVisibility(View.GONE);
          }
 else {
            mTitleView.setVisibility(View.GONE);
          }
          if (mContentParent instanceof FrameLayout) {
            ((FrameLayout)mContentParent).setForeground(null);
          }
        }
 else {
          mTitleView.setText(mTitle);
        }
      }
    }
    if (hasFeature(FEATURE_CONTENT_TRANSITIONS)) {
      if (mTransitionManager == null) {
        final int transitionRes=getWindowStyle().getResourceId(R.styleable.Window_windowContentTransitionManager,0);
        if (transitionRes != 0) {
          final TransitionInflater inflater=TransitionInflater.from(getContext());
          mTransitionManager=inflater.inflateTransitionManager(transitionRes,mContentParent);
        }
 else {
          mTransitionManager=new TransitionManager();
        }
      }
      mEnterTransition=getTransition(mEnterTransition,R.styleable.Window_windowEnterTransition);
      mExitTransition=getTransition(mExitTransition,R.styleable.Window_windowExitTransition);
      mSharedElementEnterTransition=getTransition(mSharedElementEnterTransition,R.styleable.Window_windowSharedElementEnterTransition);
      mSharedElementExitTransition=getTransition(mSharedElementExitTransition,R.styleable.Window_windowSharedElementExitTransition);
      if (mAllowEnterTransitionOverlap == null) {
        mAllowEnterTransitionOverlap=getWindowStyle().getBoolean(R.styleable.Window_windowAllowEnterTransitionOverlap,true);
      }
      if (mAllowExitTransitionOverlap == null) {
        mAllowExitTransitionOverlap=getWindowStyle().getBoolean(R.styleable.Window_windowAllowExitTransitionOverlap,true);
      }
      if (mBackgroundFadeDurationMillis < 0) {
        mBackgroundFadeDurationMillis=getWindowStyle().getInteger(R.styleable.Window_windowTransitionBackgroundFadeDuration,DEFAULT_BACKGROUND_FADE_DURATION_MS);
      }
    }
  }
}
