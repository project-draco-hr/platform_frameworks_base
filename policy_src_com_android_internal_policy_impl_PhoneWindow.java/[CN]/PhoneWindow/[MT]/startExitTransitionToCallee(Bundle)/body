{
  if (mContentScene == null) {
    return null;
  }
  Transition transition=mTransitionManager.getExitTransition(mContentScene);
  if (transition == null) {
    return null;
  }
  ActivityOptions activityOptions=new ActivityOptions(options);
  ArrayMap<String,View> sharedElements=findSharedElements(activityOptions);
  ArrayList<View> transitioningViews=captureTransitioningViews(sharedElements.values());
  Transition exitTransition=addTransitionTargets(transition,transitioningViews,true);
  Transition sharedElementTransition=addTransitionTargets(transition,transitioningViews,false);
  TransitionSet transitionSet=new TransitionSet();
  transitionSet.addTransition(exitTransition);
  transitionSet.addTransition(sharedElementTransition);
  Rect epicenter=calcEpicenter(sharedElements,activityOptions.getSharedElementNames());
  FixedEpicenterCallback epicenterCallback=new FixedEpicenterCallback(epicenter);
  transitionSet.setEpicenterCallback(epicenterCallback);
  updateExitActivityOptions(activityOptions,sharedElements,sharedElementTransition,transitioningViews,exitTransition,epicenterCallback);
  TransitionManager.beginDelayedTransition(mDecor,transitionSet);
  setViewVisibility(transitioningViews,View.INVISIBLE);
  return activityOptions.toBundle();
}
