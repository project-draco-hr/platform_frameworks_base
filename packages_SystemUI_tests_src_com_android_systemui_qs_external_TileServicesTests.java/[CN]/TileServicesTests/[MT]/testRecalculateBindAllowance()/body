{
  for (int i=0; i < NUM_FAKES; i++) {
    mTileService.getTileWrapper(Mockito.mock(CustomTile.class));
  }
  assertEquals(NUM_FAKES,mManagers.size());
  for (int i=0; i < NUM_FAKES; i++) {
    Mockito.when(mManagers.get(i).getBindPriority()).thenReturn(i);
  }
  mTileService.recalculateBindAllowance();
  for (int i=0; i < NUM_FAKES; i++) {
    Mockito.verify(mManagers.get(i),Mockito.times(1)).calculateBindPriority(Mockito.anyLong());
    ArgumentCaptor<Boolean> captor=ArgumentCaptor.forClass(Boolean.class);
    Mockito.verify(mManagers.get(i),Mockito.times(1)).setBindAllowed(captor.capture());
    assertEquals("" + i + "th service",i >= (NUM_FAKES - TileServices.DEFAULT_MAX_BOUND),(boolean)captor.getValue());
  }
}
