{
  checkNotNull(captureRequest,"captureRequest must not be null");
  int fdMode=ParamsUtils.getOrDefault(captureRequest,STATISTICS_FACE_DETECT_MODE,STATISTICS_FACE_DETECT_MODE_OFF);
  if (fdMode != STATISTICS_FACE_DETECT_MODE_OFF && !mFaceDetectSupported) {
    Log.w(TAG,"processFaceDetectMode - Ignoring statistics.faceDetectMode; " + "face detection is not available");
    return;
  }
  int sceneMode=ParamsUtils.getOrDefault(captureRequest,CONTROL_SCENE_MODE,CONTROL_SCENE_MODE_DISABLED);
  if (sceneMode == CONTROL_SCENE_MODE_FACE_PRIORITY && !mFaceDetectSupported) {
    Log.w(TAG,"processFaceDetectMode - ignoring control.sceneMode == FACE_PRIORITY; " + "face detection is not available");
    return;
  }
switch (fdMode) {
case STATISTICS_FACE_DETECT_MODE_OFF:
case STATISTICS_FACE_DETECT_MODE_SIMPLE:
    break;
case STATISTICS_FACE_DETECT_MODE_FULL:
  Log.w(TAG,"processFaceDetectMode - statistics.faceDetectMode == FULL unsupported, " + "downgrading to SIMPLE");
break;
default :
Log.w(TAG,"processFaceDetectMode - ignoring unknown statistics.faceDetectMode = " + fdMode);
return;
}
boolean enableFaceDetect=(fdMode != STATISTICS_FACE_DETECT_MODE_OFF) || (sceneMode == CONTROL_SCENE_MODE_FACE_PRIORITY);
synchronized (mLock) {
if (enableFaceDetect != mFaceDetectEnabled) {
if (enableFaceDetect) {
mCamera.startFaceDetection();
if (VERBOSE) {
Log.v(TAG,"processFaceDetectMode - start face detection");
}
}
 else {
mCamera.stopFaceDetection();
if (VERBOSE) {
Log.v(TAG,"processFaceDetectMode - stop face detection");
}
mFaces=null;
}
mFaceDetectEnabled=enableFaceDetect;
mFaceDetectScenePriority=sceneMode == CONTROL_SCENE_MODE_FACE_PRIORITY;
mFaceDetectReporting=fdMode != STATISTICS_FACE_DETECT_MODE_OFF;
}
}
}
