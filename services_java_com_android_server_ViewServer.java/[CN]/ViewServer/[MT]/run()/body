{
  final ServerSocket server=mServer;
  while (Thread.currentThread() == mThread) {
    Socket client=null;
    try {
      client=server.accept();
      BufferedReader in=null;
      try {
        in=new BufferedReader(new InputStreamReader(client.getInputStream()),1024);
        final String request=in.readLine();
        String command;
        String parameters;
        int index=request.indexOf(' ');
        if (index == -1) {
          command=request;
          parameters="";
        }
 else {
          command=request.substring(0,index);
          parameters=request.substring(index + 1);
        }
        boolean result;
        if (COMMAND_PROTOCOL_VERSION.equalsIgnoreCase(command)) {
          result=writeValue(client,VALUE_PROTOCOL_VERSION);
        }
 else         if (COMMAND_SERVER_VERSION.equalsIgnoreCase(command)) {
          result=writeValue(client,VALUE_SERVER_VERSION);
        }
 else         if (COMMAND_WINDOW_MANAGER_LIST.equalsIgnoreCase(command)) {
          result=mWindowManager.viewServerListWindows(client);
        }
 else {
          result=mWindowManager.viewServerWindowCommand(client,command,parameters);
        }
        if (!result) {
          Log.w(LOG_TAG,"An error occured with the command: " + command);
        }
      }
  finally {
        if (in != null) {
          in.close();
        }
      }
    }
 catch (    Exception e) {
      Log.w(LOG_TAG,"Connection error: ",e);
    }
 finally {
      if (client != null) {
        try {
          client.close();
        }
 catch (        IOException e) {
          e.printStackTrace();
        }
      }
    }
  }
}
