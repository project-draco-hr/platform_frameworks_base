{
  IpPrefix p1, p2;
  p1=new IpPrefix("192.0.2.251/23");
  p2=new IpPrefix(new byte[]{(byte)192,(byte)0,(byte)2,(byte)251},23);
  assertAreEqual(p1,p2);
  p1=new IpPrefix("192.0.2.5/23");
  assertAreEqual(p1,p2);
  p1=new IpPrefix("192.0.2.5/24");
  assertAreNotEqual(p1,p2);
  p1=new IpPrefix("192.0.4.5/23");
  assertAreNotEqual(p1,p2);
  p1=new IpPrefix("2001:db8:dead:beef:f00::80/122");
  p2=new IpPrefix(IPV6_BYTES,122);
  assertEquals("2001:db8:dead:beef:f00::80/122",p2.toString());
  assertAreEqual(p1,p2);
  p1=new IpPrefix("2001:db8:dead:beef:f00::bf/122");
  assertAreEqual(p1,p2);
  p1=new IpPrefix("2001:db8:dead:beef:f00::8:0/123");
  assertAreNotEqual(p1,p2);
  p1=new IpPrefix("2001:db8:dead:beef::/122");
  assertAreNotEqual(p1,p2);
  byte[] ipv6bytes=new byte[16];
  System.arraycopy(IPV4_BYTES,0,ipv6bytes,0,IPV4_BYTES.length);
  p1=new IpPrefix(ipv6bytes,32);
  assertAreEqual(p1,new IpPrefix("c000:0204::/32"));
  p2=new IpPrefix(IPV4_BYTES,32);
  assertAreNotEqual(p1,p2);
}
