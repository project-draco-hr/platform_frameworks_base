{
  int pointerIndex=ev.findPointerIndex(mActivePointerId);
  float newY=ev.getY(pointerIndex);
  int deltaY=(int)(newY - mInitialY);
  if (mVelocityTracker != null) {
    mVelocityTracker.computeCurrentVelocity(1000,mMaximumVelocity);
    mYVelocity=(int)mVelocityTracker.getYVelocity(mActivePointerId);
  }
  if (mVelocityTracker != null) {
    mVelocityTracker.recycle();
    mVelocityTracker=null;
  }
  if (deltaY > mSwipeThreshold && mSwipeGestureType == GESTURE_SLIDE_DOWN && mStackSlider.mMode == StackSlider.NORMAL_MODE) {
    if (mStackMode == ITEMS_SLIDE_UP) {
      showNext();
    }
 else {
      showPrevious();
    }
    mHighlight.bringToFront();
  }
 else   if (deltaY < -mSwipeThreshold && mSwipeGestureType == GESTURE_SLIDE_UP && mStackSlider.mMode == StackSlider.NORMAL_MODE) {
    if (mStackMode == ITEMS_SLIDE_UP) {
      showPrevious();
    }
 else {
      showNext();
    }
    mHighlight.bringToFront();
  }
 else   if (mSwipeGestureType == GESTURE_SLIDE_UP) {
    int duration;
    float finalYProgress=(mStackMode == ITEMS_SLIDE_DOWN) ? 1 : 0;
    if (mStackMode == ITEMS_SLIDE_UP || mStackSlider.mMode != StackSlider.NORMAL_MODE) {
      duration=Math.round(mStackSlider.getDurationForNeutralPosition());
    }
 else {
      duration=Math.round(mStackSlider.getDurationForOffscreenPosition());
    }
    StackSlider animationSlider=new StackSlider(mStackSlider);
    PropertyValuesHolder<Float> snapBackY=new PropertyValuesHolder<Float>("YProgress",finalYProgress);
    PropertyValuesHolder<Float> snapBackX=new PropertyValuesHolder<Float>("XProgress",0.0f);
    PropertyAnimator pa=new PropertyAnimator(duration,animationSlider,snapBackX,snapBackY);
    pa.setInterpolator(new LinearInterpolator());
    pa.start();
  }
 else   if (mSwipeGestureType == GESTURE_SLIDE_DOWN) {
    float finalYProgress=(mStackMode == ITEMS_SLIDE_DOWN) ? 0 : 1;
    int duration;
    if (mStackMode == ITEMS_SLIDE_DOWN || mStackSlider.mMode != StackSlider.NORMAL_MODE) {
      duration=Math.round(mStackSlider.getDurationForNeutralPosition());
    }
 else {
      duration=Math.round(mStackSlider.getDurationForOffscreenPosition());
    }
    StackSlider animationSlider=new StackSlider(mStackSlider);
    PropertyValuesHolder<Float> snapBackY=new PropertyValuesHolder<Float>("YProgress",finalYProgress);
    PropertyValuesHolder<Float> snapBackX=new PropertyValuesHolder<Float>("XProgress",0.0f);
    PropertyAnimator pa=new PropertyAnimator(duration,animationSlider,snapBackX,snapBackY);
    pa.start();
  }
  mActivePointerId=INVALID_POINTER;
  mSwipeGestureType=GESTURE_NONE;
}
