{
  final float maxPerspectiveShiftY=mPerspectiveShiftY;
  final float maxPerspectiveShiftX=mPerspectiveShiftX;
  if (mStackMode == ITEMS_SLIDE_DOWN) {
    index=mMaxNumActiveViews - index - 1;
    if (index == mMaxNumActiveViews - 1)     index--;
  }
 else {
    index--;
    if (index < 0)     index++;
  }
  float r=(index * 1.0f) / (mMaxNumActiveViews - 2);
  final float scale=1 - PERSPECTIVE_SCALE_FACTOR * (1 - r);
  float perspectiveTranslationY=r * maxPerspectiveShiftY;
  float scaleShiftCorrectionY=(scale - 1) * (getMeasuredHeight() * (1 - PERSPECTIVE_SHIFT_FACTOR_Y) / 2.0f);
  final float transY=perspectiveTranslationY + scaleShiftCorrectionY;
  float perspectiveTranslationX=(1 - r) * maxPerspectiveShiftX;
  float scaleShiftCorrectionX=(1 - scale) * (getMeasuredWidth() * (1 - PERSPECTIVE_SHIFT_FACTOR_X) / 2.0f);
  final float transX=perspectiveTranslationX + scaleShiftCorrectionX;
  if (view instanceof StackFrame) {
    ((StackFrame)view).cancelTransformAnimator();
  }
  if (animate) {
    PropertyValuesHolder translationX=PropertyValuesHolder.ofFloat("translationX",transX);
    PropertyValuesHolder translationY=PropertyValuesHolder.ofFloat("translationY",transY);
    PropertyValuesHolder scalePropX=PropertyValuesHolder.ofFloat("scaleX",scale);
    PropertyValuesHolder scalePropY=PropertyValuesHolder.ofFloat("scaleY",scale);
    ObjectAnimator oa=ObjectAnimator.ofPropertyValuesHolder(view,scalePropX,scalePropY,translationY,translationX);
    oa.setDuration(STACK_RELAYOUT_DURATION);
    if (view instanceof StackFrame) {
      ((StackFrame)view).setTransformAnimator(oa);
    }
    oa.start();
  }
 else {
    view.setTranslationX(transX);
    view.setTranslationY(transY);
    view.setScaleX(scale);
    view.setScaleY(scale);
  }
}
