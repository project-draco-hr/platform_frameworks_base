{
  final int count=getChildCount();
  final int measuredWidth=getMeasuredWidth();
  final int measuredHeight=getMeasuredHeight();
  final int childWidth=Math.round(measuredWidth * (1 - PERSPECTIVE_SHIFT_FACTOR_X)) - mPaddingLeft - mPaddingRight;
  final int childHeight=Math.round(measuredHeight * (1 - PERSPECTIVE_SHIFT_FACTOR_Y)) - mPaddingTop - mPaddingBottom;
  int maxWidth=0;
  int maxHeight=0;
  for (int i=0; i < count; i++) {
    final View child=getChildAt(i);
    child.measure(MeasureSpec.makeMeasureSpec(childWidth,MeasureSpec.AT_MOST),MeasureSpec.makeMeasureSpec(childHeight,MeasureSpec.AT_MOST));
    if (child != mHighlight && child != mClickFeedback) {
      final int childMeasuredWidth=child.getMeasuredWidth();
      final int childMeasuredHeight=child.getMeasuredHeight();
      if (childMeasuredWidth > maxWidth) {
        maxWidth=childMeasuredWidth;
      }
      if (childMeasuredHeight > maxHeight) {
        maxHeight=childMeasuredHeight;
      }
    }
  }
  mNewPerspectiveShiftX=PERSPECTIVE_SHIFT_FACTOR_X * measuredWidth;
  mNewPerspectiveShiftY=PERSPECTIVE_SHIFT_FACTOR_Y * measuredHeight;
  if (maxWidth > 0 && maxWidth < childWidth) {
    mNewPerspectiveShiftX=measuredWidth - maxWidth;
  }
  if (maxHeight > 0 && maxHeight < childHeight) {
    mNewPerspectiveShiftY=measuredHeight - maxHeight;
  }
}
