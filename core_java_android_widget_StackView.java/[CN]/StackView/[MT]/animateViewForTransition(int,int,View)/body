{
  ObjectAnimator alphaOa=null;
  ObjectAnimator oldAlphaOa=null;
  Object tag=view.getTag(com.android.internal.R.id.viewAlphaAnimation);
  if (tag instanceof WeakReference<?>) {
    Object obj=((WeakReference<?>)tag).get();
    if (obj instanceof ObjectAnimator) {
      oldAlphaOa=(ObjectAnimator)obj;
    }
  }
  if (fromIndex == -1 && toIndex == getNumActiveViews() - 1) {
    if (view.getAlpha() == 1) {
      view.setAlpha(0);
    }
    transformViewAtIndex(toIndex,view,false);
    view.setVisibility(VISIBLE);
    alphaOa=ObjectAnimator.ofFloat(view,"alpha",view.getAlpha(),1.0f);
    alphaOa.setDuration(FADE_IN_ANIMATION_DURATION);
    if (oldAlphaOa != null)     oldAlphaOa.cancel();
    alphaOa.start();
    view.setTagInternal(com.android.internal.R.id.viewAlphaAnimation,new WeakReference<ObjectAnimator>(alphaOa));
  }
 else   if (fromIndex == 0 && toIndex == 1) {
    view.setVisibility(VISIBLE);
    int duration=Math.round(mStackSlider.getDurationForNeutralPosition(mYVelocity));
    StackSlider animationSlider=new StackSlider(mStackSlider);
    animationSlider.setView(view);
    PropertyValuesHolder slideInY=PropertyValuesHolder.ofFloat("YProgress",0.0f);
    PropertyValuesHolder slideInX=PropertyValuesHolder.ofFloat("XProgress",0.0f);
    ObjectAnimator slideIn=ObjectAnimator.ofPropertyValuesHolder(animationSlider,slideInX,slideInY);
    slideIn.setDuration(duration);
    slideIn.setInterpolator(new LinearInterpolator());
    slideIn.start();
  }
 else   if (fromIndex == 1 && toIndex == 0) {
    int duration=Math.round(mStackSlider.getDurationForOffscreenPosition(mYVelocity));
    StackSlider animationSlider=new StackSlider(mStackSlider);
    animationSlider.setView(view);
    PropertyValuesHolder slideOutY=PropertyValuesHolder.ofFloat("YProgress",1.0f);
    PropertyValuesHolder slideOutX=PropertyValuesHolder.ofFloat("XProgress",0.0f);
    ObjectAnimator slideOut=ObjectAnimator.ofPropertyValuesHolder(animationSlider,slideOutX,slideOutY);
    slideOut.setDuration(duration);
    slideOut.setInterpolator(new LinearInterpolator());
    slideOut.start();
  }
 else   if (toIndex == 0) {
    view.setAlpha(0.0f);
    view.setVisibility(INVISIBLE);
  }
 else   if (fromIndex == 0 && toIndex > 1) {
    view.setVisibility(VISIBLE);
    view.setAlpha(1.0f);
  }
 else   if (fromIndex == -1) {
    view.setAlpha(1.0f);
    view.setVisibility(VISIBLE);
  }
 else   if (toIndex == -1) {
    alphaOa=ObjectAnimator.ofFloat(view,"alpha",view.getAlpha(),0.0f);
    alphaOa.setDuration(STACK_RELAYOUT_DURATION);
    if (oldAlphaOa != null)     oldAlphaOa.cancel();
    alphaOa.start();
    view.setTagInternal(com.android.internal.R.id.viewAlphaAnimation,new WeakReference<ObjectAnimator>(alphaOa));
  }
  if (toIndex != -1) {
    transformViewAtIndex(toIndex,view,true);
  }
}
