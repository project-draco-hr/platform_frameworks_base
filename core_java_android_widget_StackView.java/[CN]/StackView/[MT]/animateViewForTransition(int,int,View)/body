{
  if (fromIndex == -1 && toIndex == 0) {
    if (view.getAlpha() == 1) {
      view.setAlpha(0);
    }
    PropertyAnimator fadeIn=new PropertyAnimator(DEFAULT_ANIMATION_DURATION,view,"alpha",view.getAlpha(),1.0f);
    fadeIn.start();
  }
 else   if (fromIndex == mNumActiveViews - 1 && toIndex == mNumActiveViews - 2) {
    view.setVisibility(VISIBLE);
    LayoutParams lp=(LayoutParams)view.getLayoutParams();
    int largestDuration=(int)Math.round((lp.verticalOffset * 1.0f / -mViewHeight) * DEFAULT_ANIMATION_DURATION);
    int duration=largestDuration;
    if (mYVelocity != 0) {
      duration=1000 * (0 - lp.verticalOffset) / Math.abs(mYVelocity);
    }
    duration=Math.min(duration,largestDuration);
    duration=Math.max(duration,MINIMUM_ANIMATION_DURATION);
    PropertyAnimator slideDown=new PropertyAnimator(duration,lp,"verticalOffset",lp.verticalOffset,0);
    slideDown.start();
    PropertyAnimator fadeIn=new PropertyAnimator(duration,view,"alpha",view.getAlpha(),1.0f);
    fadeIn.start();
  }
 else   if (fromIndex == mNumActiveViews - 2 && toIndex == mNumActiveViews - 1) {
    LayoutParams lp=(LayoutParams)view.getLayoutParams();
    int largestDuration=(int)Math.round((1 - (lp.verticalOffset * 1.0f / -mViewHeight)) * DEFAULT_ANIMATION_DURATION);
    int duration=largestDuration;
    if (mYVelocity != 0) {
      duration=1000 * (lp.verticalOffset + mViewHeight) / Math.abs(mYVelocity);
    }
    duration=Math.min(duration,largestDuration);
    duration=Math.max(duration,MINIMUM_ANIMATION_DURATION);
    PropertyAnimator slideUp=new PropertyAnimator(duration,lp,"verticalOffset",lp.verticalOffset,-mViewHeight);
    slideUp.start();
    PropertyAnimator fadeOut=new PropertyAnimator(duration,view,"alpha",view.getAlpha(),0.0f);
    fadeOut.start();
  }
 else   if (fromIndex == -1 && toIndex == mNumActiveViews - 1) {
    view.setAlpha(0.0f);
  }
 else   if (toIndex == -1) {
    PropertyAnimator fadeOut=new PropertyAnimator(DEFAULT_ANIMATION_DURATION,view,"alpha",view.getAlpha(),0);
    fadeOut.start();
  }
}
