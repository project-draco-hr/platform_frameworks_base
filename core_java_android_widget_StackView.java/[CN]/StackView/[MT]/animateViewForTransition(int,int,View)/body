{
  if (fromIndex == -1 && toIndex == 0) {
    if (view.getAlpha() == 1) {
      view.setAlpha(0);
    }
    view.setVisibility(VISIBLE);
    PropertyAnimator<Float> fadeIn=new PropertyAnimator<Float>(DEFAULT_ANIMATION_DURATION,view,"alpha",view.getAlpha(),1.0f);
    fadeIn.start();
  }
 else   if (fromIndex == mNumActiveViews - 1 && toIndex == mNumActiveViews - 2) {
    view.setVisibility(VISIBLE);
    LayoutParams lp=(LayoutParams)view.getLayoutParams();
    int duration=Math.round(mStackSlider.getDurationForNeutralPosition(mYVelocity));
    StackSlider animationSlider=new StackSlider(mStackSlider);
    PropertyValuesHolder<Float> slideInY=new PropertyValuesHolder<Float>("YProgress",0.0f);
    PropertyValuesHolder<Float> slideInX=new PropertyValuesHolder<Float>("XProgress",0.0f);
    PropertyAnimator pa=new PropertyAnimator(duration,animationSlider,slideInX,slideInY);
    pa.setInterpolator(new LinearInterpolator());
    pa.start();
  }
 else   if (fromIndex == mNumActiveViews - 2 && toIndex == mNumActiveViews - 1) {
    LayoutParams lp=(LayoutParams)view.getLayoutParams();
    int duration=Math.round(mStackSlider.getDurationForOffscreenPosition(mYVelocity));
    StackSlider animationSlider=new StackSlider(mStackSlider);
    PropertyValuesHolder<Float> slideOutY=new PropertyValuesHolder<Float>("YProgress",1.0f);
    PropertyValuesHolder<Float> slideOutX=new PropertyValuesHolder<Float>("XProgress",0.0f);
    PropertyAnimator pa=new PropertyAnimator(duration,animationSlider,slideOutX,slideOutY);
    pa.setInterpolator(new LinearInterpolator());
    pa.start();
  }
 else   if (fromIndex == -1 && toIndex == mNumActiveViews - 1) {
    view.setAlpha(0.0f);
    view.setVisibility(INVISIBLE);
    LayoutParams lp=(LayoutParams)view.getLayoutParams();
    lp.setVerticalOffset(-mViewHeight);
  }
 else   if (toIndex == -1) {
    PropertyAnimator<Float> fadeOut=new PropertyAnimator<Float>(DEFAULT_ANIMATION_DURATION,view,"alpha",view.getAlpha(),0.0f);
    fadeOut.start();
  }
  if (toIndex != -1) {
    float maxPerpectiveShift=mViewHeight * PERSPECTIVE_SHIFT_FACTOR;
    int index=toIndex;
    if (toIndex == mNumActiveViews - 1)     index--;
    float r=(index * 1.0f) / (mNumActiveViews - 2);
    float scale=1 - PERSPECTIVE_SCALE_FACTOR * (1 - r);
    PropertyValuesHolder<Float> scaleX=new PropertyValuesHolder<Float>("scaleX",scale);
    PropertyValuesHolder<Float> scaleY=new PropertyValuesHolder<Float>("scaleY",scale);
    r=(float)Math.pow(r,2);
    int stackDirection=(mStackMode == ITEMS_SLIDE_UP) ? 1 : -1;
    float transY=-stackDirection * r * maxPerpectiveShift + stackDirection * (1 - scale) * (mViewHeight / 2.0f);
    PropertyValuesHolder<Float> translationY=new PropertyValuesHolder<Float>("translationY",transY);
    PropertyAnimator pa=new PropertyAnimator(100,view,scaleX,scaleY,translationY);
    pa.start();
  }
}
