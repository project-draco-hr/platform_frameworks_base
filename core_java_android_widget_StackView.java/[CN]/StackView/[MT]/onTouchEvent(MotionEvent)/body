{
  int action=ev.getAction();
  int pointerIndex=ev.findPointerIndex(mActivePointerId);
  if (pointerIndex == INVALID_POINTER) {
    Log.d(TAG,"Error: No data for our primary pointer.");
    return false;
  }
  float newY=ev.getY(pointerIndex);
  float newX=ev.getX(pointerIndex);
  float deltaY=newY - mInitialY;
  float deltaX=newX - mInitialX;
  if (mVelocityTracker == null) {
    mVelocityTracker=VelocityTracker.obtain();
  }
  mVelocityTracker.addMovement(ev);
switch (action & MotionEvent.ACTION_MASK) {
case MotionEvent.ACTION_MOVE:
{
      beginGestureIfNeeded(deltaY);
      float rx=0.3f * deltaX / (mViewHeight * 1.0f);
      if (mSwipeGestureType == GESTURE_SLIDE_DOWN) {
        float r=(deltaY - mTouchSlop * 1.0f) / mViewHeight * 1.0f;
        mStackSlider.setYProgress(1 - r);
        mStackSlider.setXProgress(rx);
        return true;
      }
 else       if (mSwipeGestureType == GESTURE_SLIDE_UP) {
        float r=-(deltaY + mTouchSlop * 1.0f) / mViewHeight * 1.0f;
        mStackSlider.setYProgress(r);
        mStackSlider.setXProgress(rx);
        return true;
      }
      break;
    }
case MotionEvent.ACTION_UP:
{
    handlePointerUp(ev);
    break;
  }
case MotionEvent.ACTION_POINTER_UP:
{
  onSecondaryPointerUp(ev);
  break;
}
case MotionEvent.ACTION_CANCEL:
{
mActivePointerId=INVALID_POINTER;
mSwipeGestureType=GESTURE_NONE;
break;
}
}
return true;
}
