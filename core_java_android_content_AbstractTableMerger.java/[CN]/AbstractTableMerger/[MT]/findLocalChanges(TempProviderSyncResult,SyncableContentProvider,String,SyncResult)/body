{
  SyncableContentProvider clientDiffs=mergeResult.tempContentProvider;
  if (Log.isLoggable(TAG,Log.VERBOSE))   Log.v(TAG,"generating client updates");
  final String[] accountSelectionArgs=new String[]{account};
  Cursor localChangesCursor=mDb.query(mTable,null,SELECT_UNSYNCED,accountSelectionArgs,null,null,null);
  long numInsertsOrUpdates=localChangesCursor.getCount();
  while (localChangesCursor.moveToNext()) {
    if (mIsMergeCancelled) {
      localChangesCursor.close();
      return;
    }
    if (clientDiffs == null) {
      clientDiffs=temporaryInstanceFactory.getTemporaryInstance();
    }
    mValues.clear();
    cursorRowToContentValues(localChangesCursor,mValues);
    mValues.remove("_id");
    DatabaseUtils.cursorLongToContentValues(localChangesCursor,"_id",mValues,_SYNC_LOCAL_ID);
    clientDiffs.insert(mTableURL,mValues);
  }
  localChangesCursor.close();
  if (Log.isLoggable(TAG,Log.VERBOSE))   Log.v(TAG,"generating client deletions");
  long numEntries=DatabaseUtils.queryNumEntries(mDb,mTable);
  long numDeletedEntries=0;
  if (mDeletedTable != null) {
    Cursor deletedCursor=mDb.query(mDeletedTable,syncIdAndVersionProjection,_SYNC_ACCOUNT + "=? AND " + _SYNC_ID+ " IS NOT NULL",accountSelectionArgs,null,null,mDeletedTable + "." + _SYNC_ID);
    numDeletedEntries=deletedCursor.getCount();
    while (deletedCursor.moveToNext()) {
      if (mIsMergeCancelled) {
        deletedCursor.close();
        return;
      }
      if (clientDiffs == null) {
        clientDiffs=temporaryInstanceFactory.getTemporaryInstance();
      }
      mValues.clear();
      DatabaseUtils.cursorRowToContentValues(deletedCursor,mValues);
      clientDiffs.insert(mDeletedTableURL,mValues);
    }
    deletedCursor.close();
  }
  if (clientDiffs != null) {
    mergeResult.tempContentProvider=clientDiffs;
  }
  syncResult.stats.numDeletes+=numDeletedEntries;
  syncResult.stats.numUpdates+=numInsertsOrUpdates;
  syncResult.stats.numEntries+=numEntries;
}
