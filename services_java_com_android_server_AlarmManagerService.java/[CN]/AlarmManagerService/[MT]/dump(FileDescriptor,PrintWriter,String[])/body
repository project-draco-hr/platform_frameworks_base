{
  if (mContext.checkCallingPermission("android.permission.DUMP") != PackageManager.PERMISSION_GRANTED) {
    pw.println("Permission Denial: can't dump AlarmManager from from pid=" + Binder.getCallingPid() + ", uid="+ Binder.getCallingUid());
    return;
  }
synchronized (mLock) {
    pw.println("Current Alarm Manager state:");
    if (mRtcWakeupAlarms.size() > 0) {
      pw.println(" ");
      pw.println("  Realtime wakeup alarms that are scheduled:");
      dumpAlarmList(pw,mRtcWakeupAlarms,"  ","RTC_WAKEUP");
    }
    if (mRtcAlarms.size() > 0) {
      pw.println(" ");
      pw.println("  Realtime alarms that are scheduled:");
      dumpAlarmList(pw,mRtcAlarms,"  ","RTC");
    }
    if (mElapsedRealtimeWakeupAlarms.size() > 0) {
      pw.println(" ");
      pw.println("  Elapsed realtime wakeup alarms that are scheduled:");
      dumpAlarmList(pw,mElapsedRealtimeWakeupAlarms,"  ","ELAPSED_REALTIME_WAKEUP");
    }
    if (mElapsedRealtimeAlarms.size() > 0) {
      pw.println(" ");
      pw.println("  Elapsed realtime alarms that are scheduled:");
      dumpAlarmList(pw,mElapsedRealtimeAlarms,"  ","ELAPSED_REALTIME");
    }
    pw.println(" ");
    pw.println("  Broadcast ref count: " + mBroadcastRefCount);
    pw.println(" ");
    pw.println("  Alarm Stats:");
    for (    Map.Entry<String,BroadcastStats> be : mBroadcastStats.entrySet()) {
      BroadcastStats bs=be.getValue();
      pw.println("  " + be.getKey());
      pw.println("    " + bs.aggregateTime + "ms running, "+ bs.numWakeup+ " wakeups");
      for (      Map.Entry<Intent.FilterComparison,FilterStats> fe : bs.filterStats.entrySet()) {
        pw.println("    " + fe.getValue().count + " alarms: "+ fe.getKey().getIntent());
      }
    }
  }
}
