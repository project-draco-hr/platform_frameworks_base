{
  if (mDialog != null) {
    if (DEBUG)     Log.d(TAG,"fragment.onCreateDialog(): reusing dialog");
    return mDialog;
  }
  if (mActivity != getActivity()) {
    Log.wtf(TAG,"activity references don't match on onCreateDialog(): mActivity = " + mActivity + " , getActivity() = "+ getActivity());
    mActivity=(OpenExternalDirectoryActivity)getActivity();
  }
  final String directory=mFile.getName();
  final Context context=mActivity.getApplicationContext();
  final OnClickListener listener=new OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      Intent intent=null;
      if (which == DialogInterface.BUTTON_POSITIVE) {
        intent=createGrantedUriPermissionsIntent(mActivity,mActivity.getExternalStorageClient(),mFile);
      }
      if (which == DialogInterface.BUTTON_NEGATIVE || intent == null) {
        logValidScopedAccessRequest(mActivity,directory,SCOPED_DIRECTORY_ACCESS_DENIED);
        final boolean checked=mDontAskAgain.isChecked();
        if (checked) {
          logValidScopedAccessRequest(mActivity,directory,SCOPED_DIRECTORY_ACCESS_DENIED_AND_PERSIST);
          setScopedAccessPermissionStatus(context,mActivity.getCallingPackage(),mVolumeUuid,directory,PERMISSION_NEVER_ASK);
        }
 else {
          setScopedAccessPermissionStatus(context,mActivity.getCallingPackage(),mVolumeUuid,directory,PERMISSION_ASK_AGAIN);
        }
        mActivity.setResult(RESULT_CANCELED);
      }
 else {
        logValidScopedAccessRequest(mActivity,directory,SCOPED_DIRECTORY_ACCESS_GRANTED);
        mActivity.setResult(RESULT_OK,intent);
      }
      mActivity.finish();
    }
  }
;
  final CharSequence message=TextUtils.expandTemplate(getText(R.string.open_external_dialog_request),mAppLabel,directory,mVolumeLabel);
  @SuppressLint("InflateParams") final View view=View.inflate(mActivity,R.layout.dialog_open_scoped_directory,null);
  final TextView messageField=(TextView)view.findViewById(R.id.message);
  messageField.setText(message);
  mDialog=new AlertDialog.Builder(mActivity,R.style.AlertDialogTheme).setView(view).setPositiveButton(R.string.allow,listener).setNegativeButton(R.string.deny,listener).create();
  mDontAskAgain=(CheckBox)view.findViewById(R.id.do_not_ask_checkbox);
  if (getScopedAccessPermissionStatus(context,mActivity.getCallingPackage(),mVolumeUuid,directory) == PERMISSION_ASK_AGAIN) {
    mDontAskAgain.setVisibility(View.VISIBLE);
    mDontAskAgain.setOnCheckedChangeListener(new OnCheckedChangeListener(){
      @Override public void onCheckedChanged(      CompoundButton buttonView,      boolean isChecked){
        mDialog.getButton(DialogInterface.BUTTON_POSITIVE).setEnabled(!isChecked);
      }
    }
);
  }
  return mDialog;
}
