{
  mContext=context;
  mWifiStateMachine=wsm;
  IntentFilter filter=new IntentFilter();
  filter.addAction(WifiManager.WIFI_STATE_CHANGED_ACTION);
  filter.addAction(WifiManager.NETWORK_STATE_CHANGED_ACTION);
  filter.addAction(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION);
  mContext.registerReceiver(new BroadcastReceiver(){
    @Override public void onReceive(    Context context,    Intent intent){
      if (intent.getAction().equals(WifiManager.WIFI_STATE_CHANGED_ACTION)) {
        resetNotification();
      }
 else       if (intent.getAction().equals(WifiManager.NETWORK_STATE_CHANGED_ACTION)) {
        mNetworkInfo=(NetworkInfo)intent.getParcelableExtra(WifiManager.EXTRA_NETWORK_INFO);
switch (mNetworkInfo.getDetailedState()) {
case CONNECTED:
case DISCONNECTED:
case CAPTIVE_PORTAL_CHECK:
          resetNotification();
        break;
    }
  }
 else   if (intent.getAction().equals(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION)) {
    checkAndSetNotification(mNetworkInfo,mWifiStateMachine.syncGetScanResultsList());
  }
}
}
,filter);
NOTIFICATION_REPEAT_DELAY_MS=Settings.Global.getInt(context.getContentResolver(),Settings.Global.WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY,900) * 1000l;
mNotificationEnabledSettingObserver=new NotificationEnabledSettingObserver(new Handler());
mNotificationEnabledSettingObserver.register();
}
