{
  final Context context=getContext();
  final int pid=Binder.getCallingPid();
  final int uid=Binder.getCallingUid();
  String missingPerm=null;
  if (uid == mMyUid) {
    return;
  }
  if (mExported) {
    final String componentPerm=getWritePermission();
    if (componentPerm != null) {
      if (context.checkPermission(componentPerm,pid,uid) == PERMISSION_GRANTED) {
        return;
      }
 else {
        missingPerm=componentPerm;
      }
    }
    boolean allowDefaultWrite=(componentPerm == null);
    final PathPermission[] pps=getPathPermissions();
    if (pps != null) {
      final String path=uri.getPath();
      for (      PathPermission pp : pps) {
        final String pathPerm=pp.getWritePermission();
        if (pathPerm != null && pp.match(path)) {
          if (context.checkPermission(pathPerm,pid,uid) == PERMISSION_GRANTED) {
            return;
          }
 else {
            allowDefaultWrite=false;
            missingPerm=pathPerm;
          }
        }
      }
    }
    if (allowDefaultWrite)     return;
  }
  if (context.checkUriPermission(uri,pid,uid,Intent.FLAG_GRANT_WRITE_URI_PERMISSION) == PERMISSION_GRANTED) {
    return;
  }
  final String failReason=mExported ? " requires " + missingPerm + ", or grantUriPermission()" : " requires the provider be exported, or grantUriPermission()";
  throw new SecurityException("Permission Denial: writing " + ContentProvider.this.getClass().getName() + " uri "+ uri+ " from pid="+ pid+ ", uid="+ uid+ failReason);
}
