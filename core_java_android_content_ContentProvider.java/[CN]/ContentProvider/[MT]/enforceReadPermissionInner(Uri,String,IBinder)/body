{
  final Context context=getContext();
  final int pid=Binder.getCallingPid();
  final int uid=Binder.getCallingUid();
  String missingPerm=null;
  int strongestMode=MODE_ALLOWED;
  if (UserHandle.isSameApp(uid,mMyUid)) {
    return MODE_ALLOWED;
  }
  if (mExported && checkUser(pid,uid,context)) {
    final String componentPerm=getReadPermission();
    if (componentPerm != null) {
      final int mode=checkPermissionAndAppOp(componentPerm,callingPkg,callerToken);
      if (mode == MODE_ALLOWED) {
        return MODE_ALLOWED;
      }
 else {
        missingPerm=componentPerm;
        strongestMode=Math.max(strongestMode,mode);
      }
    }
    boolean allowDefaultRead=(componentPerm == null);
    final PathPermission[] pps=getPathPermissions();
    if (pps != null) {
      final String path=uri.getPath();
      for (      PathPermission pp : pps) {
        final String pathPerm=pp.getReadPermission();
        if (pathPerm != null && pp.match(path)) {
          final int mode=checkPermissionAndAppOp(pathPerm,callingPkg,callerToken);
          if (mode == MODE_ALLOWED) {
            return MODE_ALLOWED;
          }
 else {
            allowDefaultRead=false;
            missingPerm=pathPerm;
            strongestMode=Math.max(strongestMode,mode);
          }
        }
      }
    }
    if (allowDefaultRead)     return MODE_ALLOWED;
  }
  final int callingUserId=UserHandle.getUserId(uid);
  final Uri userUri=(mSingleUser && !UserHandle.isSameUser(mMyUid,uid)) ? maybeAddUserId(uri,callingUserId) : uri;
  if (context.checkUriPermission(userUri,pid,uid,Intent.FLAG_GRANT_READ_URI_PERMISSION,callerToken) == PERMISSION_GRANTED) {
    return MODE_ALLOWED;
  }
  if (strongestMode == MODE_IGNORED) {
    return MODE_IGNORED;
  }
  final String failReason=mExported ? " requires " + missingPerm + ", or grantUriPermission()" : " requires the provider be exported, or grantUriPermission()";
  throw new SecurityException("Permission Denial: reading " + ContentProvider.this.getClass().getName() + " uri "+ uri+ " from pid="+ pid+ ", uid="+ uid+ failReason);
}
