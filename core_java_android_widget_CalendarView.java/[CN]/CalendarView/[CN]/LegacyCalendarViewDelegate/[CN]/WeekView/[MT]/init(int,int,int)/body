{
  mSelectedDay=selectedWeekDay;
  mHasSelectedDay=mSelectedDay != -1;
  mNumCells=mShowWeekNumber ? mDaysPerWeek + 1 : mDaysPerWeek;
  mWeek=weekNumber;
  mTempDate.setTimeInMillis(mMinDate.getTimeInMillis());
  mTempDate.add(Calendar.WEEK_OF_YEAR,mWeek);
  mTempDate.setFirstDayOfWeek(mFirstDayOfWeek);
  mDayNumbers=new String[mNumCells];
  mFocusDay=new boolean[mNumCells];
  int i=0;
  if (mShowWeekNumber) {
    mDayNumbers[0]=String.format(Locale.getDefault(),"%d",mTempDate.get(Calendar.WEEK_OF_YEAR));
    i++;
  }
  int diff=mFirstDayOfWeek - mTempDate.get(Calendar.DAY_OF_WEEK);
  mTempDate.add(Calendar.DAY_OF_MONTH,diff);
  mFirstDay=(Calendar)mTempDate.clone();
  mMonthOfFirstWeekDay=mTempDate.get(Calendar.MONTH);
  mHasUnfocusedDay=true;
  for (; i < mNumCells; i++) {
    final boolean isFocusedDay=(mTempDate.get(Calendar.MONTH) == focusedMonth);
    mFocusDay[i]=isFocusedDay;
    mHasFocusedDay|=isFocusedDay;
    mHasUnfocusedDay&=!isFocusedDay;
    if (mTempDate.before(mMinDate) || mTempDate.after(mMaxDate)) {
      mDayNumbers[i]="";
    }
 else {
      mDayNumbers[i]=String.format(Locale.getDefault(),"%d",mTempDate.get(Calendar.DAY_OF_MONTH));
    }
    mTempDate.add(Calendar.DAY_OF_MONTH,1);
  }
  if (mTempDate.get(Calendar.DAY_OF_MONTH) == 1) {
    mTempDate.add(Calendar.DAY_OF_MONTH,-1);
  }
  mLastWeekDayMonth=mTempDate.get(Calendar.MONTH);
  updateSelectionPositions();
}
