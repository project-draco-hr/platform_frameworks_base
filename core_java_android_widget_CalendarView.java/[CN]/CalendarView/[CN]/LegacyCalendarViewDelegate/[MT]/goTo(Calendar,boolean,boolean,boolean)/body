{
  if (date.before(mMinDate) || date.after(mMaxDate)) {
    throw new IllegalArgumentException("Time not between " + mMinDate.getTime() + " and "+ mMaxDate.getTime());
  }
  int firstFullyVisiblePosition=mListView.getFirstVisiblePosition();
  View firstChild=mListView.getChildAt(0);
  if (firstChild != null && firstChild.getTop() < 0) {
    firstFullyVisiblePosition++;
  }
  int lastFullyVisiblePosition=firstFullyVisiblePosition + mShownWeekCount - 1;
  if (firstChild != null && firstChild.getTop() > mBottomBuffer) {
    lastFullyVisiblePosition--;
  }
  if (setSelected) {
    mAdapter.setSelectedDay(date);
  }
  int position=getWeeksSinceMinDate(date);
  if (position < firstFullyVisiblePosition || position > lastFullyVisiblePosition || forceScroll) {
    mFirstDayOfMonth.setTimeInMillis(date.getTimeInMillis());
    mFirstDayOfMonth.set(Calendar.DAY_OF_MONTH,1);
    setMonthDisplayed(mFirstDayOfMonth);
    if (mFirstDayOfMonth.before(mMinDate)) {
      position=0;
    }
 else {
      position=getWeeksSinceMinDate(mFirstDayOfMonth);
    }
    mPreviousScrollState=OnScrollListener.SCROLL_STATE_FLING;
    if (animate) {
      mListView.smoothScrollToPositionFromTop(position,mListScrollTopOffset,GOTO_SCROLL_DURATION);
    }
 else {
      mListView.setSelectionFromTop(position,mListScrollTopOffset);
      onScrollStateChanged(mListView,OnScrollListener.SCROLL_STATE_IDLE);
    }
  }
 else   if (setSelected) {
    setMonthDisplayed(date);
  }
}
