{
  final float textHeight=mDrawPaint.getTextSize();
  final int y=(int)((mHeight + textHeight) / 2) - mWeekSeperatorLineWidth;
  final int nDays=mNumCells;
  final int divisor=2 * nDays;
  mDrawPaint.setTextAlign(Align.CENTER);
  mDrawPaint.setTextSize(mDateTextSize);
  int i=0;
  if (isLayoutRtl()) {
    for (; i < nDays - 1; i++) {
      mMonthNumDrawPaint.setColor(mFocusDay[i] ? mFocusedMonthDateColor : mUnfocusedMonthDateColor);
      int x=(2 * i + 1) * mWidth / divisor;
      canvas.drawText(mDayNumbers[nDays - 1 - i],x,y,mMonthNumDrawPaint);
    }
    if (mShowWeekNumber) {
      mDrawPaint.setColor(mWeekNumberColor);
      int x=mWidth - mWidth / divisor;
      canvas.drawText(mDayNumbers[0],x,y,mDrawPaint);
    }
  }
 else {
    if (mShowWeekNumber) {
      mDrawPaint.setColor(mWeekNumberColor);
      int x=mWidth / divisor;
      canvas.drawText(mDayNumbers[0],x,y,mDrawPaint);
      i++;
    }
    for (; i < nDays; i++) {
      mMonthNumDrawPaint.setColor(mFocusDay[i] ? mFocusedMonthDateColor : mUnfocusedMonthDateColor);
      int x=(2 * i + 1) * mWidth / divisor;
      canvas.drawText(mDayNumbers[i],x,y,mMonthNumDrawPaint);
    }
  }
}
