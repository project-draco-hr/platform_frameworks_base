{
  if (!params.containsKey(VIEW_PARAMS_WEEK)) {
    throw new InvalidParameterException("You must specify the week number for this view");
  }
  setTag(params);
  if (params.containsKey(VIEW_PARAMS_SELECTED_DAY)) {
    mSelectedDate=((int[])params.get(VIEW_PARAMS_SELECTED_DAY))[0];
  }
  mHasSelectedDay=mSelectedDate != -1;
  mNumCells=mShowWeekNumber ? mDaysPerWeek + 1 : mDaysPerWeek;
  mWeek=((int[])params.get(VIEW_PARAMS_WEEK))[0];
  mTempDate.setTimeInMillis(mMinDate.getTimeInMillis());
  mTempDate.add(Calendar.WEEK_OF_YEAR,mWeek);
  mTempDate.setFirstDayOfWeek(mFirstDayOfWeek);
  mDayNumbers=new String[mNumCells];
  mFocusDay=new boolean[mNumCells];
  int i=0;
  if (mShowWeekNumber) {
    mDayNumbers[0]=Integer.toString(mTempDate.get(Calendar.WEEK_OF_YEAR));
    i++;
  }
  int diff=mFirstDayOfWeek - mTempDate.get(Calendar.DAY_OF_WEEK);
  mTempDate.add(Calendar.DAY_OF_MONTH,diff);
  mFirstDay=(Calendar)mTempDate.clone();
  mMonthOfFirstWeekDay=mTempDate.get(Calendar.MONTH);
  int focusMonth=params.containsKey(VIEW_PARAMS_FOCUS_MONTH) ? ((int[])params.get(VIEW_PARAMS_FOCUS_MONTH))[0] : -1;
  for (; i < mNumCells; i++) {
    mFocusDay[i]=(mTempDate.get(Calendar.MONTH) == focusMonth);
    if (mTempDate.before(mMinDate) || mTempDate.after(mMaxDate)) {
      mDayNumbers[i]="";
    }
 else {
      mDayNumbers[i]=Integer.toString(mTempDate.get(Calendar.DAY_OF_MONTH));
    }
    mTempDate.add(Calendar.DAY_OF_MONTH,1);
  }
  if (mTempDate.get(Calendar.DAY_OF_MONTH) == 1) {
    mTempDate.add(Calendar.DAY_OF_MONTH,-1);
  }
  mLastWeekDayMonth=mTempDate.get(Calendar.MONTH);
  updateSelectionPositions();
}
