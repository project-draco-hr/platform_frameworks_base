{
  mDayLabels=new String[mDaysPerWeek];
  for (int i=mFirstDayOfWeek, count=mFirstDayOfWeek + mDaysPerWeek; i < count; i++) {
    int calendarDay=(i > Calendar.SATURDAY) ? i - Calendar.SATURDAY : i;
    mDayLabels[i - mFirstDayOfWeek]=DateUtils.getDayOfWeekString(calendarDay,DateUtils.LENGTH_SHORTEST);
  }
  TextView label=(TextView)mDayNamesHeader.getChildAt(0);
  if (mShowWeekNumber) {
    label.setVisibility(View.VISIBLE);
  }
 else {
    label.setVisibility(View.GONE);
  }
  for (int i=1, count=mDayNamesHeader.getChildCount(); i < count; i++) {
    label=(TextView)mDayNamesHeader.getChildAt(i);
    if (weekDayTextAppearanceResId > -1) {
      label.setTextAppearance(mContext,weekDayTextAppearanceResId);
    }
    if (i < mDaysPerWeek + 1) {
      label.setText(mDayLabels[i - 1]);
      label.setVisibility(View.VISIBLE);
    }
 else {
      label.setVisibility(View.GONE);
    }
  }
  mDayNamesHeader.invalidate();
}
