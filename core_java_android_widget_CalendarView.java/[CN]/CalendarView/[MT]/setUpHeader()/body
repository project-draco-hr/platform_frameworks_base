{
  final String[] tinyWeekdayNames=LocaleData.get(Locale.getDefault()).tinyWeekdayNames;
  mDayLabels=new String[mDaysPerWeek];
  for (int i=0; i < mDaysPerWeek; i++) {
    final int j=i + mFirstDayOfWeek;
    final int calendarDay=(j > Calendar.SATURDAY) ? j - Calendar.SATURDAY : j;
    mDayLabels[i]=tinyWeekdayNames[calendarDay];
  }
  TextView label=(TextView)mDayNamesHeader.getChildAt(0);
  if (mShowWeekNumber) {
    label.setVisibility(View.VISIBLE);
  }
 else {
    label.setVisibility(View.GONE);
  }
  final int count=mDayNamesHeader.getChildCount();
  for (int i=0; i < count - 1; i++) {
    label=(TextView)mDayNamesHeader.getChildAt(i + 1);
    if (mWeekDayTextAppearanceResId > -1) {
      label.setTextAppearance(mContext,mWeekDayTextAppearanceResId);
    }
    if (i < mDaysPerWeek) {
      label.setText(mDayLabels[i]);
      label.setVisibility(View.VISIBLE);
    }
 else {
      label.setVisibility(View.GONE);
    }
  }
  mDayNamesHeader.invalidate();
}
