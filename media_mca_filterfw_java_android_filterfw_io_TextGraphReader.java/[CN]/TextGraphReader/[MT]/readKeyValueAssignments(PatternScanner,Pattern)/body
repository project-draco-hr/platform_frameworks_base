{
  final int STATE_IDENTIFIER=0;
  final int STATE_EQUALS=1;
  final int STATE_VALUE=2;
  final int STATE_POST_VALUE=3;
  final Pattern equalsPattern=Pattern.compile("=");
  final Pattern semicolonPattern=Pattern.compile(";");
  final Pattern wordPattern=Pattern.compile("[a-zA-Z]+[a-zA-Z0-9]*");
  final Pattern stringPattern=Pattern.compile("'[^']*'|\\\"[^\\\"]*\\\"");
  final Pattern intPattern=Pattern.compile("[0-9]+");
  final Pattern floatPattern=Pattern.compile("[0-9]*\\.[0-9]+f?");
  final Pattern referencePattern=Pattern.compile("\\$[a-zA-Z]+[a-zA-Z0-9]");
  final Pattern booleanPattern=Pattern.compile("true|false");
  int state=STATE_IDENTIFIER;
  KeyValueMap newVals=new KeyValueMap();
  String curKey=null;
  String curValue=null;
  while (!scanner.atEnd() && !(endPattern != null && scanner.peek(endPattern))) {
switch (state) {
case STATE_IDENTIFIER:
      curKey=scanner.eat(wordPattern,"<identifier>");
    state=STATE_EQUALS;
  break;
case STATE_EQUALS:
scanner.eat(equalsPattern,"=");
state=STATE_VALUE;
break;
case STATE_VALUE:
if ((curValue=scanner.tryEat(stringPattern)) != null) {
newVals.put(curKey,curValue.substring(1,curValue.length() - 1));
}
 else if ((curValue=scanner.tryEat(referencePattern)) != null) {
String refName=curValue.substring(1,curValue.length());
Object referencedObject=mBoundReferences != null ? mBoundReferences.get(refName) : null;
if (referencedObject == null) {
throw new GraphIOException("Unknown object reference to '" + refName + "'!");
}
newVals.put(curKey,referencedObject);
}
 else if ((curValue=scanner.tryEat(booleanPattern)) != null) {
newVals.put(curKey,Boolean.parseBoolean(curValue));
}
 else if ((curValue=scanner.tryEat(floatPattern)) != null) {
newVals.put(curKey,Float.parseFloat(curValue));
}
 else if ((curValue=scanner.tryEat(intPattern)) != null) {
newVals.put(curKey,Integer.parseInt(curValue));
}
 else {
throw new GraphIOException(scanner.unexpectedTokenMessage("<value>"));
}
state=STATE_POST_VALUE;
break;
case STATE_POST_VALUE:
scanner.eat(semicolonPattern,";");
state=STATE_IDENTIFIER;
break;
}
}
if (state != STATE_IDENTIFIER && state != STATE_POST_VALUE) {
throw new GraphIOException("Unexpected end of assignments on line " + scanner.lineNo() + "!");
}
return newVals;
}
