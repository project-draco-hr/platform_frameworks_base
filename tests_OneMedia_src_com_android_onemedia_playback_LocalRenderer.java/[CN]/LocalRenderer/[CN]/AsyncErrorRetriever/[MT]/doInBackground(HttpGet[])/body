{
synchronized (mErrorLock) {
    if (isCancelled() || mHttpClient == null) {
      if (mErrorRetriever == this) {
        mErrorRetriever=null;
      }
      return null;
    }
    mSafeToCloseClient=false;
  }
  final PlaybackError error=new PlaybackError();
  try {
    HttpResponse response=mHttpClient.execute(params[0]);
synchronized (mErrorLock) {
      if (mErrorId != errorId || mError == null) {
        return null;
      }
      error.type=mError.type;
      error.extra=mError.extra;
      error.errorMessage=mError.errorMessage;
    }
    final int code=response.getStatusLine().getStatusCode();
    if (code >= 300) {
      error.extra=code;
    }
    final Bundle errorExtras=new Bundle();
    Header[] headers=response.getAllHeaders();
    if (headers != null && headers.length > 0) {
      for (      Header header : headers) {
        errorExtras.putString(header.getName(),header.getValue());
      }
      error.errorExtras=errorExtras;
    }
  }
 catch (  IOException e) {
    Log.e(TAG,"IOException requesting from server, unable to get more exact error");
  }
 finally {
synchronized (mErrorLock) {
      mSafeToCloseClient=true;
      if (mErrorRetriever == this) {
        mErrorRetriever=null;
      }
      if (isCancelled()) {
        if (closeHttpClient) {
          mHttpClient.close();
          mHttpClient=null;
        }
        return null;
      }
    }
  }
  mHandler.post(new Runnable(){
    @Override public void run(){
synchronized (mErrorLock) {
        if (mErrorId == errorId) {
          setError(error.type,error.extra,error.errorExtras,null);
        }
      }
    }
  }
);
  return null;
}
