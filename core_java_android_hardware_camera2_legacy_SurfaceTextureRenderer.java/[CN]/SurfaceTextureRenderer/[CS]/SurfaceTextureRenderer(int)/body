{
  mFacing=facing;
  mRegularTriangleVertices=ByteBuffer.allocateDirect(sRegularTriangleVertices.length * FLOAT_SIZE_BYTES).order(ByteOrder.nativeOrder()).asFloatBuffer();
  mRegularTriangleVertices.put(sRegularTriangleVertices).position(0);
  mHorizontalFlipTriangleVertices=ByteBuffer.allocateDirect(sHorizontalFlipTriangleVertices.length * FLOAT_SIZE_BYTES).order(ByteOrder.nativeOrder()).asFloatBuffer();
  mHorizontalFlipTriangleVertices.put(sHorizontalFlipTriangleVertices).position(0);
  mVerticalFlipTriangleVertices=ByteBuffer.allocateDirect(sVerticalFlipTriangleVertices.length * FLOAT_SIZE_BYTES).order(ByteOrder.nativeOrder()).asFloatBuffer();
  mVerticalFlipTriangleVertices.put(sVerticalFlipTriangleVertices).position(0);
  mBothFlipTriangleVertices=ByteBuffer.allocateDirect(sBothFlipTriangleVertices.length * FLOAT_SIZE_BYTES).order(ByteOrder.nativeOrder()).asFloatBuffer();
  mBothFlipTriangleVertices.put(sBothFlipTriangleVertices).position(0);
  Matrix.setIdentityM(mSTMatrix,0);
}
