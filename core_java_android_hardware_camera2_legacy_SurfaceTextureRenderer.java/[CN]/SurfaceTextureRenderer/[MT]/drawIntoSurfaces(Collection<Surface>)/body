{
  if ((mSurfaces == null || mSurfaces.size() == 0) && (mConversionSurfaces == null || mConversionSurfaces.size() == 0)) {
    return;
  }
  checkGlError("before updateTexImage");
  mSurfaceTexture.updateTexImage();
  if (targetSurfaces == null)   return;
  for (  EGLSurfaceHolder holder : mSurfaces) {
    if (targetSurfaces.contains(holder.surface)) {
      makeCurrent(holder.eglSurface);
      drawFrame(mSurfaceTexture);
      swapBuffers(holder.eglSurface);
    }
  }
  for (  EGLSurfaceHolder holder : mConversionSurfaces) {
    if (targetSurfaces.contains(holder.surface)) {
      makeCurrent(holder.eglSurface);
      drawFrame(mSurfaceTexture);
      mPBufferPixels.clear();
      GLES20.glReadPixels(0,0,holder.width,holder.height,GLES20.GL_RGBA,GLES20.GL_UNSIGNED_BYTE,mPBufferPixels);
      checkGlError("glReadPixels");
      int format=LegacyCameraDevice.nativeDetectSurfaceType(holder.surface);
      LegacyCameraDevice.nativeProduceFrame(holder.surface,mPBufferPixels.array(),holder.width,holder.height,format);
      swapBuffers(holder.eglSurface);
    }
  }
}
