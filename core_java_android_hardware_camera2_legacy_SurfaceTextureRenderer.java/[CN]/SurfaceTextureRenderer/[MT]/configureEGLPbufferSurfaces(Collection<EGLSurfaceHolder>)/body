{
  if (surfaces == null || surfaces.size() == 0) {
    throw new IllegalStateException("No Surfaces were provided to draw to");
  }
  int maxLength=0;
  for (  EGLSurfaceHolder holder : surfaces) {
    try {
      Size size=LegacyCameraDevice.getSurfaceSize(holder.surface);
      int length=size.getWidth() * size.getHeight();
      maxLength=(length > maxLength) ? length : maxLength;
      int[] surfaceAttribs={EGL14.EGL_WIDTH,size.getWidth(),EGL14.EGL_HEIGHT,size.getHeight(),EGL14.EGL_NONE};
      holder.width=size.getWidth();
      holder.height=size.getHeight();
      holder.eglSurface=EGL14.eglCreatePbufferSurface(mEGLDisplay,mConfigs,surfaceAttribs,0);
      checkEglError("eglCreatePbufferSurface");
    }
 catch (    LegacyExceptionUtils.BufferQueueAbandonedException e) {
      Log.w(TAG,"Surface abandoned, skipping...",e);
    }
  }
  mPBufferPixels=ByteBuffer.allocateDirect(maxLength * PBUFFER_PIXEL_BYTES).order(ByteOrder.nativeOrder());
}
