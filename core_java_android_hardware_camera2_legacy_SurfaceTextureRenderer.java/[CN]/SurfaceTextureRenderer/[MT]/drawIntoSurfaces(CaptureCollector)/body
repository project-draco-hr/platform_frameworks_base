{
  if ((mSurfaces == null || mSurfaces.size() == 0) && (mConversionSurfaces == null || mConversionSurfaces.size() == 0)) {
    return;
  }
  boolean doTiming=targetCollector.hasPendingPreviewCaptures();
  checkGlError("before updateTexImage");
  if (doTiming) {
    beginGlTiming();
  }
  mSurfaceTexture.updateTexImage();
  long timestamp=mSurfaceTexture.getTimestamp();
  Pair<RequestHolder,Long> captureHolder=targetCollector.previewCaptured(timestamp);
  if (captureHolder == null) {
    if (DEBUG) {
      Log.d(TAG,"Dropping preview frame.");
    }
    if (doTiming) {
      endGlTiming();
    }
    return;
  }
  RequestHolder request=captureHolder.first;
  Collection<Surface> targetSurfaces=request.getHolderTargets();
  if (doTiming) {
    addGlTimestamp(timestamp);
  }
  List<Long> targetSurfaceIds=LegacyCameraDevice.getSurfaceIds(targetSurfaces);
  for (  EGLSurfaceHolder holder : mSurfaces) {
    if (LegacyCameraDevice.containsSurfaceId(holder.surface,targetSurfaceIds)) {
      try {
        LegacyCameraDevice.setSurfaceDimens(holder.surface,holder.width,holder.height);
        makeCurrent(holder.eglSurface);
        LegacyCameraDevice.setNextTimestamp(holder.surface,captureHolder.second);
        drawFrame(mSurfaceTexture,holder.width,holder.height,(mFacing == CameraCharacteristics.LENS_FACING_FRONT) ? FLIP_TYPE_HORIZONTAL : FLIP_TYPE_NONE);
        swapBuffers(holder.eglSurface);
      }
 catch (      LegacyExceptionUtils.BufferQueueAbandonedException e) {
        Log.w(TAG,"Surface abandoned, dropping frame. ",e);
      }
    }
  }
  for (  EGLSurfaceHolder holder : mConversionSurfaces) {
    if (LegacyCameraDevice.containsSurfaceId(holder.surface,targetSurfaceIds)) {
      makeCurrent(holder.eglSurface);
      drawFrame(mSurfaceTexture,holder.width,holder.height,(mFacing == CameraCharacteristics.LENS_FACING_FRONT) ? FLIP_TYPE_BOTH : FLIP_TYPE_VERTICAL);
      mPBufferPixels.clear();
      GLES20.glReadPixels(0,0,holder.width,holder.height,GLES20.GL_RGBA,GLES20.GL_UNSIGNED_BYTE,mPBufferPixels);
      checkGlError("glReadPixels");
      try {
        int format=LegacyCameraDevice.detectSurfaceType(holder.surface);
        LegacyCameraDevice.setSurfaceDimens(holder.surface,holder.width,holder.height);
        LegacyCameraDevice.setNextTimestamp(holder.surface,captureHolder.second);
        LegacyCameraDevice.produceFrame(holder.surface,mPBufferPixels.array(),holder.width,holder.height,format);
      }
 catch (      LegacyExceptionUtils.BufferQueueAbandonedException e) {
        Log.w(TAG,"Surface abandoned, dropping frame. ",e);
      }
    }
  }
  targetCollector.previewProduced();
  if (doTiming) {
    endGlTiming();
  }
}
