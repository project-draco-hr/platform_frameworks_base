{
  try {
    int bytesRead=0;
    int needBytes, offset, bytesInBuffer=0;
    for (; ; ) {
      needBytes=INPUT_BUFFER_SIZE - bytesInBuffer;
      offset=bytesInBuffer;
      bytesRead=inputStream.read(buffer,offset,needBytes);
      if (bytesRead < 0) {
        releaseNativeDecoder(hNativeDecoder);
        break;
      }
      bytesInBuffer+=bytesRead;
      hNativeDecoder=decode(buffer,bytesInBuffer,hNativeDecoder);
      bytesInBuffer=0;
      returnData();
      if (hNativeDecoder == 0) {
        break;
      }
    }
    imageComplete(ImageConsumer.STATICIMAGEDONE);
  }
 catch (  IOException e) {
    throw e;
  }
catch (  RuntimeException e) {
    imageComplete(ImageConsumer.IMAGEERROR);
    throw e;
  }
 finally {
    closeStream();
  }
}
