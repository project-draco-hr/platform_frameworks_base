{
  int duration=0;
  int curPosition=0;
  int nextPosition=0;
  int waittime=0;
  Random r=new Random();
  initializeMessageLooper();
synchronized (lock) {
    try {
      lock.wait(WAIT_FOR_COMMAND_TO_COMPLETE);
    }
 catch (    Exception e) {
      Log.v(TAG,"looper was interrupted.");
      return false;
    }
  }
  try {
    mMediaPlayer.setOnCompletionListener(mCompletionListener);
    Log.v(TAG,"playMediaSamples: sample file name " + filePath);
    mMediaPlayer.setDataSource(filePath);
    mMediaPlayer.setDisplay(MediaFrameworkTest.mSurfaceView.getHolder());
    mMediaPlayer.prepare();
    duration=mMediaPlayer.getDuration();
    Log.v(TAG,"playMediaSamples: duration = " + duration);
    mMediaPlayer.start();
    Thread.sleep(r.nextInt(duration / 3));
    mMediaPlayer.pause();
    Log.v(TAG,"playMediaSamples: current position after pause: " + mMediaPlayer.getCurrentPosition());
    nextPosition=mMediaPlayer.getCurrentPosition() + r.nextInt(duration / 3);
    mMediaPlayer.seekTo(nextPosition);
    Log.v(TAG,"playMediaSamples: current position after the first seek:" + mMediaPlayer.getCurrentPosition());
    mMediaPlayer.start();
    Thread.sleep(r.nextInt(duration / 6));
    Log.v(TAG,"playMediaSamples: position after the second play:" + mMediaPlayer.getCurrentPosition());
    mMediaPlayer.seekTo(r.nextInt(duration));
    Log.v(TAG,"playMediaSamples: current position after the second seek:" + mMediaPlayer.getCurrentPosition());
    waittime=duration - mMediaPlayer.getCurrentPosition();
synchronized (onCompletion) {
      try {
        onCompletion.wait(waittime + 30000);
      }
 catch (      Exception e) {
        Log.v(TAG,"playMediaSamples are interrupted");
        return false;
      }
    }
    terminateMessageLooper();
  }
 catch (  Exception e) {
    Log.v(TAG,"playMediaSamples:" + e.getMessage());
  }
  return onCompleteSuccess;
}
