{
  int duration=0;
  int curPosition=0;
  int nextPosition=0;
  int waittime=0;
  onCompleteSuccess=false;
  mMediaInfoUnknownCount=0;
  mMediaInfoVideoTrackLaggingCount=0;
  mMediaInfoBadInterleavingCount=0;
  mMediaInfoNotSeekableCount=0;
  mMediaInfoMetdataUpdateCount=0;
  mPlaybackError=false;
  String testResult;
  initializeMessageLooper();
synchronized (lock) {
    try {
      lock.wait(WAIT_FOR_COMMAND_TO_COMPLETE);
    }
 catch (    Exception e) {
      Log.v(TAG,"looper was interrupted.");
      return false;
    }
  }
  try {
    mMediaPlayer.setOnCompletionListener(mCompletionListener);
    mMediaPlayer.setOnErrorListener(mOnErrorListener);
    mMediaPlayer.setOnInfoListener(mInfoListener);
    Log.v(TAG,"playMediaSamples: sample file name " + filePath);
    mMediaPlayer.setDataSource(filePath);
    mMediaPlayer.setDisplay(MediaFrameworkTest.mSurfaceView.getHolder());
    mMediaPlayer.prepare();
    duration=mMediaPlayer.getDuration();
    mMediaPlayer.start();
    if (duration < 0) {
      Log.w(TAG,filePath + " has unknown duration, waiting until playback completes");
      while (mMediaPlayer.isPlaying()) {
        SystemClock.sleep(1000);
      }
    }
 else {
      waittime=duration - mMediaPlayer.getCurrentPosition();
synchronized (onCompletion) {
        try {
          onCompletion.wait(waittime + buffertime);
        }
 catch (        Exception e) {
          Log.v(TAG,"playMediaSamples are interrupted");
          return false;
        }
      }
    }
    terminateMessageLooper();
  }
 catch (  Exception e) {
    Log.v(TAG,"playMediaSamples:" + e.getMessage());
  }
  return onCompleteSuccess;
}
