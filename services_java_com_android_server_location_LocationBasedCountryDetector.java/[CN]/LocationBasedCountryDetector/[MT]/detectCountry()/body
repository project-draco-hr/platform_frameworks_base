{
  if (mLocationListeners != null) {
    throw new IllegalStateException();
  }
  List<String> enabledProviders=getEnabledProviders();
  int totalProviders=enabledProviders.size();
  if (totalProviders > 0) {
    mLocationListeners=new ArrayList<LocationListener>(totalProviders);
    for (int i=0; i < totalProviders; i++) {
      String provider=enabledProviders.get(i);
      if (isAcceptableProvider(provider)) {
        LocationListener listener=new LocationListener(){
          @Override public void onLocationChanged(          Location location){
            if (location != null) {
              LocationBasedCountryDetector.this.stop();
              queryCountryCode(location);
            }
          }
          @Override public void onProviderDisabled(          String provider){
          }
          @Override public void onProviderEnabled(          String provider){
          }
          @Override public void onStatusChanged(          String provider,          int status,          Bundle extras){
          }
        }
;
        mLocationListeners.add(listener);
        registerListener(provider,listener);
      }
    }
    mTimer=new Timer();
    mTimer.schedule(new TimerTask(){
      @Override public void run(){
        mTimer=null;
        LocationBasedCountryDetector.this.stop();
        queryCountryCode(getLastKnownLocation());
      }
    }
,getQueryLocationTimeout());
  }
 else {
    queryCountryCode(getLastKnownLocation());
  }
  return mDetectedCountry;
}
