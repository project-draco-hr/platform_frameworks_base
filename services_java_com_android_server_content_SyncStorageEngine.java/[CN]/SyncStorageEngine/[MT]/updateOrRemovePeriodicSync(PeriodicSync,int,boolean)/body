{
  if (DEBUG) {
    Log.v(TAG,"addOrRemovePeriodicSync: " + toUpdate.account + ", user "+ userId+ ", provider "+ toUpdate.authority+ " -> period "+ toUpdate.period+ ", extras "+ toUpdate.extras);
  }
synchronized (mAuthorities) {
    if (toUpdate.period <= 0 && add) {
      Log.e(TAG,"period < 0, should never happen in updateOrRemovePeriodicSync: add-" + add);
    }
    if (toUpdate.extras == null) {
      Log.e(TAG,"null extras, should never happen in updateOrRemovePeriodicSync: add-" + add);
    }
    try {
      AuthorityInfo authority=getOrCreateAuthorityLocked(toUpdate.account,userId,toUpdate.authority,-1,false);
      if (add) {
        boolean alreadyPresent=false;
        for (int i=0, N=authority.periodicSyncs.size(); i < N; i++) {
          PeriodicSync syncInfo=authority.periodicSyncs.get(i);
          if (PeriodicSync.syncExtrasEquals(toUpdate.extras,syncInfo.extras)) {
            if (toUpdate.period == syncInfo.period && toUpdate.flexTime == syncInfo.flexTime) {
              return;
            }
            authority.periodicSyncs.set(i,new PeriodicSync(toUpdate));
            alreadyPresent=true;
            break;
          }
        }
        if (!alreadyPresent) {
          authority.periodicSyncs.add(new PeriodicSync(toUpdate));
          SyncStatusInfo status=getOrCreateSyncStatusLocked(authority.ident);
          status.setPeriodicSyncTime(authority.periodicSyncs.size() - 1,0L);
        }
      }
 else {
        SyncStatusInfo status=mSyncStatus.get(authority.ident);
        boolean changed=false;
        Iterator<PeriodicSync> iterator=authority.periodicSyncs.iterator();
        int i=0;
        while (iterator.hasNext()) {
          PeriodicSync syncInfo=iterator.next();
          if (PeriodicSync.syncExtrasEquals(syncInfo.extras,toUpdate.extras)) {
            iterator.remove();
            changed=true;
            if (status != null) {
              status.removePeriodicSyncTime(i);
            }
 else {
              Log.e(TAG,"Tried removing sync status on remove periodic sync but" + "did not find it.");
            }
          }
 else {
            i++;
          }
        }
        if (!changed) {
          return;
        }
      }
    }
  finally {
      writeAccountInfoLocked();
      writeStatusLocked();
    }
  }
  reportChange(ContentResolver.SYNC_OBSERVER_TYPE_SETTINGS);
}
