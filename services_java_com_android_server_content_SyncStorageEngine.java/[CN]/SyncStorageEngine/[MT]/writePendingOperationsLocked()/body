{
  final int N=mPendingOperations.size();
  FileOutputStream fos=null;
  try {
    if (N == 0) {
      if (Log.isLoggable(TAG_FILE,Log.VERBOSE)) {
        Log.v(TAG_FILE,"Truncating " + mPendingFile.getBaseFile());
      }
      mPendingFile.truncate();
      return;
    }
    if (Log.isLoggable(TAG_FILE,Log.VERBOSE)) {
      Log.v(TAG_FILE,"Writing new " + mPendingFile.getBaseFile());
    }
    fos=mPendingFile.startWrite();
    XmlSerializer out=new FastXmlSerializer();
    out.setOutput(fos,"utf-8");
    for (int i=0; i < N; i++) {
      PendingOperation pop=mPendingOperations.get(i);
      writePendingOperationLocked(pop,out);
    }
    out.endDocument();
    mPendingFile.finishWrite(fos);
  }
 catch (  java.io.IOException e1) {
    Log.w(TAG,"Error writing pending operations",e1);
    if (fos != null) {
      mPendingFile.failWrite(fos);
    }
  }
}
