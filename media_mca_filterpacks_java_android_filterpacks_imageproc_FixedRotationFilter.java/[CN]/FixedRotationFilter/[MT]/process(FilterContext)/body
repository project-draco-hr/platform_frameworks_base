{
  Frame input=pullInput("image");
  if (mRotation == 0) {
    pushOutput("image",input);
    return;
  }
  FrameFormat inputFormat=input.getFormat();
  if (mProgram == null) {
    mProgram=ShaderProgram.createIdentity(context);
  }
  MutableFrameFormat outputFormat=inputFormat.mutableCopy();
  int width=inputFormat.getWidth();
  int height=inputFormat.getHeight();
  Point p1=new Point(0.0f,0.0f);
  Point p2=new Point(1.0f,0.0f);
  Point p3=new Point(0.0f,1.0f);
  Point p4=new Point(1.0f,1.0f);
  Quad sourceRegion;
switch (((int)Math.round(mRotation / 90f)) % 4) {
case 1:
    sourceRegion=new Quad(p3,p1,p4,p2);
  outputFormat.setDimensions(height,width);
break;
case 2:
sourceRegion=new Quad(p4,p3,p2,p1);
break;
case 3:
sourceRegion=new Quad(p2,p4,p1,p3);
outputFormat.setDimensions(height,width);
break;
case 0:
default :
sourceRegion=new Quad(p1,p2,p3,p4);
break;
}
Frame output=context.getFrameManager().newFrame(outputFormat);
mProgram.setSourceRegion(sourceRegion);
mProgram.process(input,output);
pushOutput("image",output);
output.release();
}
