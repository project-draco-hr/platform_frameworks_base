{
  checkLock();
  DrawableParams params=getParams();
  HardwareConfig hardwareConfig=params.getHardwareConfig();
  ResourceValue drawableResource=params.getDrawable();
  BridgeContext context=getContext();
  drawableResource=context.getRenderResources().resolveResValue(drawableResource);
  if (drawableResource == null || drawableResource.getResourceType() != ResourceType.DRAWABLE) {
    return Status.ERROR_NOT_A_DRAWABLE.createResult();
  }
  FrameLayout content=new FrameLayout(context);
  Drawable d=ResourceHelper.getDrawable(drawableResource,context);
  content.setBackground(d);
  AttachInfo_Accessor.setAttachInfo(content);
  int w=hardwareConfig.getScreenWidth();
  int h=hardwareConfig.getScreenHeight();
  int w_spec=MeasureSpec.makeMeasureSpec(w,MeasureSpec.EXACTLY);
  int h_spec=MeasureSpec.makeMeasureSpec(h,MeasureSpec.EXACTLY);
  content.measure(w_spec,h_spec);
  content.layout(0,0,w,h);
  AttachInfo_Accessor.dispatchOnPreDraw(content);
  BufferedImage image=getImage(w,h);
  Bitmap bitmap=Bitmap_Delegate.createBitmap(image,true,hardwareConfig.getDensity());
  Canvas canvas=new Canvas(bitmap);
  canvas.setDensity(hardwareConfig.getDensity().getDpiValue());
  content.draw(canvas);
  return Status.SUCCESS.createResult(image);
}
