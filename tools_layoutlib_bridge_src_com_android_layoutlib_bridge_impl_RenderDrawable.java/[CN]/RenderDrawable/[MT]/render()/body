{
  checkLock();
  try {
    DrawableParams params=getParams();
    ResourceValue drawableResource=params.getDrawable();
    BridgeContext context=getContext();
    drawableResource=context.getRenderResources().resolveResValue(drawableResource);
    if (drawableResource == null || drawableResource.getResourceType() != ResourceType.DRAWABLE) {
      return Status.ERROR_NOT_A_DRAWABLE.createResult();
    }
    FrameLayout content=new FrameLayout(context);
    Drawable d=ResourceHelper.getDrawable(drawableResource,context);
    content.setBackgroundDrawable(d);
    AttachInfo info=new AttachInfo(new BridgeWindowSession(),new BridgeWindow(),new Handler(),null);
    info.mHasWindowFocus=true;
    info.mWindowVisibility=View.VISIBLE;
    info.mInTouchMode=false;
    content.dispatchAttachedToWindow(info,0);
    int w=params.getScreenWidth();
    int h=params.getScreenHeight();
    int w_spec=MeasureSpec.makeMeasureSpec(w,MeasureSpec.EXACTLY);
    int h_spec=MeasureSpec.makeMeasureSpec(h,MeasureSpec.EXACTLY);
    content.measure(w_spec,h_spec);
    content.layout(0,0,w,h);
    content.mAttachInfo.mTreeObserver.dispatchOnPreDraw();
    BufferedImage image=getImage(w,h);
    Bitmap bitmap=Bitmap_Delegate.createBitmap(image,true,params.getDensity());
    Canvas canvas=new Canvas(bitmap);
    canvas.setDensity(params.getDensity().getDpiValue());
    content.draw(canvas);
    return Status.SUCCESS.createResult(image);
  }
 catch (  IOException e) {
    return ERROR_UNKNOWN.createResult(e.getMessage(),e);
  }
}
