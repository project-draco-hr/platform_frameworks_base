{
  checkConnected();
  try {
    int serviceHandle=mTag.getServiceHandle();
    INfcTag tagService=mTag.getTagService();
    int errorCode=tagService.formatNdef(serviceHandle,MifareClassic.KEY_DEFAULT);
switch (errorCode) {
case ErrorCodes.SUCCESS:
      break;
case ErrorCodes.ERROR_IO:
    throw new IOException();
case ErrorCodes.ERROR_INVALID_PARAM:
  throw new FormatException();
default :
throw new IOException();
}
if (!tagService.isNdef(serviceHandle)) {
throw new IOException();
}
if (firstMessage != null) {
errorCode=tagService.ndefWrite(serviceHandle,firstMessage);
switch (errorCode) {
case ErrorCodes.SUCCESS:
break;
case ErrorCodes.ERROR_IO:
throw new IOException();
case ErrorCodes.ERROR_INVALID_PARAM:
throw new FormatException();
default :
throw new IOException();
}
}
if (makeReadOnly) {
errorCode=tagService.ndefMakeReadOnly(serviceHandle);
switch (errorCode) {
case ErrorCodes.SUCCESS:
break;
case ErrorCodes.ERROR_IO:
throw new IOException();
case ErrorCodes.ERROR_INVALID_PARAM:
throw new IOException();
default :
throw new IOException();
}
}
}
 catch (RemoteException e) {
Log.e(TAG,"NFC service dead",e);
}
}
