{
  parcel.writeInt(isSealed() ? 1 : 0);
  parcel.writeLong(mSourceNodeId);
  parcel.writeInt(mWindowId);
  parcel.writeLong(mParentNodeId);
  parcel.writeLong(mLabelForId);
  parcel.writeLong(mLabeledById);
  parcel.writeLong(mTraversalBefore);
  parcel.writeLong(mTraversalAfter);
  parcel.writeInt(mConnectionId);
  final LongArray childIds=mChildNodeIds;
  if (childIds == null) {
    parcel.writeInt(0);
  }
 else {
    final int childIdsSize=childIds.size();
    parcel.writeInt(childIdsSize);
    for (int i=0; i < childIdsSize; i++) {
      parcel.writeLong(childIds.get(i));
    }
  }
  parcel.writeInt(mBoundsInParent.top);
  parcel.writeInt(mBoundsInParent.bottom);
  parcel.writeInt(mBoundsInParent.left);
  parcel.writeInt(mBoundsInParent.right);
  parcel.writeInt(mBoundsInScreen.top);
  parcel.writeInt(mBoundsInScreen.bottom);
  parcel.writeInt(mBoundsInScreen.left);
  parcel.writeInt(mBoundsInScreen.right);
  if (mActions != null && !mActions.isEmpty()) {
    final int actionCount=mActions.size();
    parcel.writeInt(actionCount);
    int defaultLegacyStandardActions=0;
    for (int i=0; i < actionCount; i++) {
      AccessibilityAction action=mActions.get(i);
      if (isDefaultLegacyStandardAction(action)) {
        defaultLegacyStandardActions|=action.getId();
      }
    }
    parcel.writeInt(defaultLegacyStandardActions);
    for (int i=0; i < actionCount; i++) {
      AccessibilityAction action=mActions.get(i);
      if (!isDefaultLegacyStandardAction(action)) {
        parcel.writeInt(action.getId());
        parcel.writeCharSequence(action.getLabel());
      }
    }
  }
 else {
    parcel.writeInt(0);
  }
  parcel.writeInt(mMaxTextLength);
  parcel.writeInt(mMovementGranularities);
  parcel.writeInt(mBooleanProperties);
  parcel.writeCharSequence(mPackageName);
  parcel.writeCharSequence(mClassName);
  parcel.writeCharSequence(mText);
  parcel.writeCharSequence(mError);
  parcel.writeCharSequence(mContentDescription);
  parcel.writeString(mViewIdResourceName);
  parcel.writeInt(mTextSelectionStart);
  parcel.writeInt(mTextSelectionEnd);
  parcel.writeInt(mInputType);
  parcel.writeInt(mLiveRegion);
  parcel.writeInt(mDrawingOrderInParent);
  if (mExtras != null) {
    parcel.writeInt(1);
    parcel.writeBundle(mExtras);
  }
 else {
    parcel.writeInt(0);
  }
  if (mRangeInfo != null) {
    parcel.writeInt(1);
    parcel.writeInt(mRangeInfo.getType());
    parcel.writeFloat(mRangeInfo.getMin());
    parcel.writeFloat(mRangeInfo.getMax());
    parcel.writeFloat(mRangeInfo.getCurrent());
  }
 else {
    parcel.writeInt(0);
  }
  if (mCollectionInfo != null) {
    parcel.writeInt(1);
    parcel.writeInt(mCollectionInfo.getRowCount());
    parcel.writeInt(mCollectionInfo.getColumnCount());
    parcel.writeInt(mCollectionInfo.isHierarchical() ? 1 : 0);
    parcel.writeInt(mCollectionInfo.getSelectionMode());
  }
 else {
    parcel.writeInt(0);
  }
  if (mCollectionItemInfo != null) {
    parcel.writeInt(1);
    parcel.writeInt(mCollectionItemInfo.getRowIndex());
    parcel.writeInt(mCollectionItemInfo.getRowSpan());
    parcel.writeInt(mCollectionItemInfo.getColumnIndex());
    parcel.writeInt(mCollectionItemInfo.getColumnSpan());
    parcel.writeInt(mCollectionItemInfo.isHeading() ? 1 : 0);
    parcel.writeInt(mCollectionItemInfo.isSelected() ? 1 : 0);
  }
 else {
    parcel.writeInt(0);
  }
  recycle();
}
