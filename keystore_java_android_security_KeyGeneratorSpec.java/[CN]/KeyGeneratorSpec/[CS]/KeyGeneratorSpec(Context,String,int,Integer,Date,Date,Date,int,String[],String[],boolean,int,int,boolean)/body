{
  if (context == null) {
    throw new IllegalArgumentException("context == null");
  }
 else   if (TextUtils.isEmpty(keyStoreAlias)) {
    throw new IllegalArgumentException("keyStoreAlias must not be empty");
  }
 else   if ((userAuthenticationValidityDurationSeconds < 0) && (userAuthenticationValidityDurationSeconds != -1)) {
    throw new IllegalArgumentException("userAuthenticationValidityDurationSeconds must not be negative");
  }
  mContext=context;
  mKeystoreAlias=keyStoreAlias;
  mFlags=flags;
  mKeySize=keySize;
  mKeyValidityStart=keyValidityStart;
  mKeyValidityForOriginationEnd=keyValidityForOriginationEnd;
  mKeyValidityForConsumptionEnd=keyValidityForConsumptionEnd;
  mPurposes=purposes;
  mEncryptionPaddings=ArrayUtils.cloneIfNotEmpty(ArrayUtils.nullToEmpty(encryptionPaddings));
  mBlockModes=ArrayUtils.cloneIfNotEmpty(ArrayUtils.nullToEmpty(blockModes));
  mRandomizedEncryptionRequired=randomizedEncryptionRequired;
  mUserAuthenticators=userAuthenticators;
  mUserAuthenticationValidityDurationSeconds=userAuthenticationValidityDurationSeconds;
  mInvalidatedOnNewFingerprintEnrolled=invalidatedOnNewFingerprintEnrolled;
}
