{
  if (context == null) {
    throw new IllegalArgumentException("context == null");
  }
 else   if (TextUtils.isEmpty(keyStoreAlias)) {
    throw new IllegalArgumentException("keyStoreAlias must not be empty");
  }
 else   if ((userAuthenticationValidityDurationSeconds != null) && (userAuthenticationValidityDurationSeconds < 0)) {
    throw new IllegalArgumentException("userAuthenticationValidityDurationSeconds must not be negative");
  }
  mContext=context;
  mKeystoreAlias=keyStoreAlias;
  mFlags=flags;
  mKeySize=keySize;
  mKeyValidityStart=keyValidityStart;
  mKeyValidityForOriginationEnd=keyValidityForOriginationEnd;
  mKeyValidityForConsumptionEnd=keyValidityForConsumptionEnd;
  mPurposes=purposes;
  mPadding=padding;
  mBlockMode=blockMode;
  mMinSecondsBetweenOperations=minSecondsBetweenOperations;
  mMaxUsesPerBoot=maxUsesPerBoot;
  mUserAuthenticators=(userAuthenticators != null) ? new HashSet<Integer>(userAuthenticators) : Collections.<Integer>emptySet();
  mUserAuthenticationValidityDurationSeconds=userAuthenticationValidityDurationSeconds;
}
