{
  CharSequence labelText=null;
  CharSequence labelDescription=null;
  if (mLabel != null) {
    labelText=mLabel.getText();
    removeView(mLabel);
    mLabel=null;
  }
  if (mDualLabel != null) {
    labelText=mDualLabel.getText();
    labelDescription=mLabel.getContentDescription();
    removeView(mDualLabel);
    mDualLabel=null;
  }
  final Resources res=mContext.getResources();
  if (mDual) {
    mDualLabel=new QSDualTileLabel(mContext);
    mDualLabel.setId(View.generateViewId());
    mDualLabel.setBackgroundResource(R.drawable.btn_borderless_rect);
    mDualLabel.setFirstLineCaret(mContext.getDrawable(R.drawable.qs_dual_tile_caret));
    mDualLabel.setTextColor(mContext.getColor(R.color.qs_tile_text));
    mDualLabel.setPadding(0,mDualTileVerticalPaddingPx,0,mDualTileVerticalPaddingPx);
    mDualLabel.setTypeface(CONDENSED);
    mDualLabel.setTextSize(TypedValue.COMPLEX_UNIT_PX,res.getDimensionPixelSize(R.dimen.qs_tile_text_size));
    mDualLabel.setClickable(true);
    mDualLabel.setOnClickListener(mClickSecondary);
    mDualLabel.setFocusable(true);
    if (labelText != null) {
      mDualLabel.setText(labelText);
    }
    if (labelDescription != null) {
      mDualLabel.setContentDescription(labelDescription);
    }
    addView(mDualLabel);
    mDualLabel.setAccessibilityTraversalAfter(mTopBackgroundView.getId());
  }
 else {
    mLabel=new TextView(mContext);
    mLabel.setTextColor(mContext.getColor(R.color.qs_tile_text));
    mLabel.setGravity(Gravity.CENTER_HORIZONTAL);
    mLabel.setMinLines(2);
    mLabel.setPadding(0,0,0,0);
    mLabel.setTypeface(CONDENSED);
    mLabel.setTextSize(TypedValue.COMPLEX_UNIT_PX,res.getDimensionPixelSize(R.dimen.qs_tile_text_size));
    mLabel.setClickable(false);
    if (labelText != null) {
      mLabel.setText(labelText);
    }
    addView(mLabel);
  }
}
