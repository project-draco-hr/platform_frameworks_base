{
  final String authority=uri.getAuthority();
  final Uri queryUri=buildChildDocumentsUri(authority,getDocumentId(uri));
  final String queryColumns[]=new String[]{Document.COLUMN_DOCUMENT_ID,Document.COLUMN_MIME_TYPE,Document.COLUMN_SIZE};
  long result=0;
  Cursor cursor=null;
  try {
    cursor=client.query(queryUri,queryColumns,null,null,null);
    while (cursor.moveToNext()) {
      if (Document.MIME_TYPE_DIR.equals(getCursorString(cursor,Document.COLUMN_MIME_TYPE))) {
        final Uri dirUri=buildDocumentUri(authority,getCursorString(cursor,Document.COLUMN_DOCUMENT_ID));
        result+=calculateFileSizesRecursively(client,dirUri);
      }
 else {
        long size=getCursorLong(cursor,Document.COLUMN_SIZE);
        result+=size > 0 ? size : 0;
      }
    }
  }
 catch (  RemoteException|RuntimeException e) {
    throw new ResourceException("Failed to calculate size for %s due to an exception.",uri,e);
  }
 finally {
    IoUtils.closeQuietly(cursor);
  }
  return result;
}
