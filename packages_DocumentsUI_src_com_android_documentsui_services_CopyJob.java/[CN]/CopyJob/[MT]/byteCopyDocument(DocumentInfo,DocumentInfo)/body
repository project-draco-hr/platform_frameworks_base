{
  final String dstMimeType;
  final String dstDisplayName;
  if (srcInfo.isVirtualDocument()) {
    final String[] streamTypes=getContentResolver().getStreamTypes(srcInfo.derivedUri,"*/*");
    if (streamTypes != null && streamTypes.length > 0) {
      dstMimeType=streamTypes[0];
      final String extension=MimeTypeMap.getSingleton().getExtensionFromMimeType(dstMimeType);
      dstDisplayName=srcInfo.displayName + (extension != null ? "." + extension : srcInfo.displayName);
    }
 else {
      onFileFailed(srcInfo);
      return false;
    }
  }
 else {
    dstMimeType=srcInfo.mimeType;
    dstDisplayName=srcInfo.displayName;
  }
  final Uri dstUri=DocumentsContract.createDocument(dstClient,dstDirInfo.derivedUri,dstMimeType,dstDisplayName);
  if (dstUri == null) {
    onFileFailed(srcInfo);
    return false;
  }
  DocumentInfo dstInfo=null;
  try {
    dstInfo=DocumentInfo.fromUri(getContentResolver(),dstUri);
  }
 catch (  FileNotFoundException e) {
    onFileFailed(srcInfo);
    return false;
  }
  final boolean success;
  if (Document.MIME_TYPE_DIR.equals(srcInfo.mimeType)) {
    success=copyDirectoryHelper(srcInfo,dstInfo);
  }
 else {
    success=copyFileHelper(srcInfo,dstInfo,dstMimeType);
  }
  return success;
}
