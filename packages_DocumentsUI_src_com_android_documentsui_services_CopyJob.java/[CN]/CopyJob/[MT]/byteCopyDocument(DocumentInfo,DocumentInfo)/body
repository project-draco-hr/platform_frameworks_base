{
  final String dstMimeType;
  final String dstDisplayName;
  if (DEBUG)   Log.d(TAG,"Doing byte copy of document: " + src);
  if (src.isVirtualDocument()) {
    final String[] streamTypes=getContentResolver().getStreamTypes(src.derivedUri,"*/*");
    if (streamTypes != null && streamTypes.length > 0) {
      dstMimeType=streamTypes[0];
      final String extension=MimeTypeMap.getSingleton().getExtensionFromMimeType(dstMimeType);
      dstDisplayName=src.displayName + (extension != null ? "." + extension : src.displayName);
    }
 else {
      onFileFailed(src,"Cannot copy virtual file. No streamable formats available.");
      return false;
    }
  }
 else {
    dstMimeType=src.mimeType;
    dstDisplayName=src.displayName;
  }
  final Uri dstUri=DocumentsContract.createDocument(getClient(dest),dest.derivedUri,dstMimeType,dstDisplayName);
  if (dstUri == null) {
    onFileFailed(src,"Couldn't create destination document " + dstDisplayName + " in directory "+ dest.displayName+ ".");
    return false;
  }
  DocumentInfo dstInfo=null;
  try {
    dstInfo=DocumentInfo.fromUri(getContentResolver(),dstUri);
  }
 catch (  FileNotFoundException e) {
    onFileFailed(src,"Could not load DocumentInfo for newly created file: " + dstUri + ".");
    return false;
  }
  final boolean success;
  if (Document.MIME_TYPE_DIR.equals(src.mimeType)) {
    success=copyDirectoryHelper(src,dstInfo);
  }
 else {
    success=copyFileHelper(src,dstInfo,dstMimeType);
  }
  return success;
}
