{
  if (DEBUG)   Log.d(TAG,this + " onlayout height: " + (bottom - top));
  mLastActive=mActiveChild;
  int measureSpec=View.MeasureSpec.makeMeasureSpec(bottom - top,View.MeasureSpec.EXACTLY);
  mActiveChild=selectActiveChild(measureSpec);
  mActiveChild.setVisibility(View.VISIBLE);
  mActiveChild.setLayoutDirection(getLayoutDirection());
  if (mLastActive != mActiveChild && mLastActive != null) {
    if (DEBUG)     Log.d(TAG,this + " changed children from: " + mLastActive+ " to: "+ mActiveChild);
    mEnteringView=mActiveChild;
    mLeavingView=mLastActive;
    mEnteringView.setAlpha(1f);
    mModestyPanel.setAlpha(1f);
    mModestyPanel.bringToFront();
    mModestyPanelTop=mLeavingView.getHeight();
    mModestyPanel.setVisibility(View.VISIBLE);
    mLeavingView.bringToFront();
    if (mTransitionAnimation.isRunning()) {
      mTransitionAnimation.cancel();
    }
    mFadeView.setTarget(mLeavingView);
    mFadeView.setFloatValues(0f);
    mFadePanel.setFloatValues(0f);
    mTransitionAnimation.setupStartValues();
    mTransitionAnimation.start();
  }
  final int childWidth=mActiveChild.getMeasuredWidth();
  final int childHeight=mActiveChild.getMeasuredHeight();
  mActiveChild.layout(0,0,childWidth,childHeight);
  if (DEBUG)   Log.d(TAG,"got modesty offset of " + mModestyPanelTop);
  mModestyPanel.layout(0,mModestyPanelTop,childWidth,mModestyPanelTop + childHeight);
}
