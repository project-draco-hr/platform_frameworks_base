{
  final int heightMode=MeasureSpec.getMode(heightMeasureSpec);
  final int heightSize=MeasureSpec.getSize(heightMeasureSpec);
  View unboundedView=null;
  View tallestView=null;
  int tallestViewSize=0;
  View smallestView=null;
  int smallestViewSize=Integer.MAX_VALUE;
  for (int i=0; i < getChildCount(); i++) {
    View child=getChildAt(i);
    if (child != mModestyPanel) {
      SizeAdaptiveLayout.LayoutParams lp=(SizeAdaptiveLayout.LayoutParams)child.getLayoutParams();
      if (DEBUG)       Log.d(TAG,"looking at " + i + " with min: "+ lp.minHeight+ " max: "+ lp.maxHeight);
      if (lp.maxHeight == SizeAdaptiveLayout.LayoutParams.UNBOUNDED && unboundedView == null) {
        unboundedView=child;
      }
      if (lp.maxHeight > tallestViewSize) {
        tallestViewSize=lp.maxHeight;
        tallestView=child;
      }
      if (lp.minHeight < smallestViewSize) {
        smallestViewSize=lp.minHeight;
        smallestView=child;
      }
      if (heightMode != MeasureSpec.UNSPECIFIED && heightSize >= lp.minHeight && heightSize <= lp.maxHeight) {
        if (DEBUG)         Log.d(TAG,"  found exact match, finishing early");
        return child;
      }
    }
  }
  if (unboundedView != null) {
    tallestView=unboundedView;
  }
  if (heightMode == MeasureSpec.UNSPECIFIED) {
    return tallestView;
  }
  if (heightSize > tallestViewSize) {
    return tallestView;
  }
  return smallestView;
}
