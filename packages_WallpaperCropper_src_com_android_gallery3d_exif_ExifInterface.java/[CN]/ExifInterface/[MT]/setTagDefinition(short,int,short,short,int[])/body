{
  if (sBannedDefines.contains(tagId)) {
    return TAG_NULL;
  }
  if (ExifTag.isValidType(tagType) && ExifTag.isValidIfd(defaultIfd)) {
    int tagDef=defineTag(defaultIfd,tagId);
    if (tagDef == TAG_NULL) {
      return TAG_NULL;
    }
    int[] otherDefs=getTagDefinitionsForTagId(tagId);
    SparseIntArray infos=getTagInfo();
    boolean defaultCheck=false;
    for (    int i : allowedIfds) {
      if (defaultIfd == i) {
        defaultCheck=true;
      }
      if (!ExifTag.isValidIfd(i)) {
        return TAG_NULL;
      }
    }
    if (!defaultCheck) {
      return TAG_NULL;
    }
    int ifdFlags=getFlagsFromAllowedIfds(allowedIfds);
    if (otherDefs != null) {
      for (      int def : otherDefs) {
        int tagInfo=infos.get(def);
        int allowedFlags=getAllowedIfdFlagsFromInfo(tagInfo);
        if ((ifdFlags & allowedFlags) != 0) {
          return TAG_NULL;
        }
      }
    }
    getTagInfo().put(tagDef,ifdFlags << 24 | (tagType << 16) | defaultComponentCount);
    return tagDef;
  }
  return TAG_NULL;
}
