{
  super(TAG,looper);
  mContext=context;
  mWifiStateMachine=service.mWifiStateMachine;
  mSettingsStore=service.mSettingsStore;
  mLocks=service.mLocks;
  mAlarmManager=(AlarmManager)mContext.getSystemService(Context.ALARM_SERVICE);
  Intent idleIntent=new Intent(ACTION_DEVICE_IDLE,null);
  mIdleIntent=PendingIntent.getBroadcast(mContext,IDLE_REQUEST,idleIntent,0);
  addState(mDefaultState);
  addState(mApStaDisabledState,mDefaultState);
  addState(mStaEnabledState,mDefaultState);
  addState(mDeviceActiveState,mStaEnabledState);
  addState(mDeviceInactiveState,mStaEnabledState);
  addState(mScanOnlyLockHeldState,mDeviceInactiveState);
  addState(mFullLockHeldState,mDeviceInactiveState);
  addState(mFullHighPerfLockHeldState,mDeviceInactiveState);
  addState(mNoLockHeldState,mDeviceInactiveState);
  addState(mStaDisabledWithScanState,mDefaultState);
  addState(mApEnabledState,mDefaultState);
  addState(mEcmState,mDefaultState);
  setInitialState(mApStaDisabledState);
  setLogRecSize(25);
  setLogOnlyTransitions(true);
  IntentFilter filter=new IntentFilter();
  filter.addAction(ACTION_DEVICE_IDLE);
  filter.addAction(WifiManager.NETWORK_STATE_CHANGED_ACTION);
  mContext.registerReceiver(new BroadcastReceiver(){
    @Override public void onReceive(    Context context,    Intent intent){
      String action=intent.getAction();
      if (action.equals(ACTION_DEVICE_IDLE)) {
        sendMessage(CMD_DEVICE_IDLE);
      }
 else       if (action.equals(WifiManager.NETWORK_STATE_CHANGED_ACTION)) {
        mNetworkInfo=(NetworkInfo)intent.getParcelableExtra(WifiManager.EXTRA_NETWORK_INFO);
      }
    }
  }
,new IntentFilter(filter));
  initializeAndRegisterForSettingsChange(looper);
}
