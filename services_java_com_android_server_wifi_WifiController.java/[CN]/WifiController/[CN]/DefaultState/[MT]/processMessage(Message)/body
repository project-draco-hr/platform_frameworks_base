{
switch (msg.what) {
case CMD_SCREEN_ON:
    mAlarmManager.cancel(mIdleIntent);
  mScreenOff=false;
mDeviceIdle=false;
updateBatteryWorkSource();
break;
case CMD_SCREEN_OFF:
mScreenOff=true;
if (!shouldWifiStayAwake(mPluggedType)) {
if (mNetworkInfo.getDetailedState() == NetworkInfo.DetailedState.CONNECTED) {
if (DBG) Slog.d(TAG,"set idle timer: " + mIdleMillis + " ms");
mAlarmManager.set(AlarmManager.RTC_WAKEUP,System.currentTimeMillis() + mIdleMillis,mIdleIntent);
}
 else {
sendMessage(CMD_DEVICE_IDLE);
}
}
break;
case CMD_DEVICE_IDLE:
mDeviceIdle=true;
updateBatteryWorkSource();
break;
case CMD_BATTERY_CHANGED:
int pluggedType=msg.arg1;
if (DBG) Slog.d(TAG,"battery changed pluggedType: " + pluggedType);
if (mScreenOff && shouldWifiStayAwake(mPluggedType) && !shouldWifiStayAwake(pluggedType)) {
long triggerTime=System.currentTimeMillis() + mIdleMillis;
if (DBG) Slog.d(TAG,"set idle timer for " + mIdleMillis + "ms");
mAlarmManager.set(AlarmManager.RTC_WAKEUP,triggerTime,mIdleIntent);
}
mPluggedType=pluggedType;
break;
case CMD_SET_AP:
case CMD_SCAN_ALWAYS_MODE_CHANGED:
case CMD_LOCKS_CHANGED:
case CMD_WIFI_TOGGLED:
case CMD_AIRPLANE_TOGGLED:
case CMD_EMERGENCY_MODE_CHANGED:
break;
case CMD_DEFERRED_TOGGLE:
log("DEFERRED_TOGGLE ignored due to state change");
break;
default :
throw new RuntimeException("WifiController.handleMessage " + msg.what);
}
return HANDLED;
}
