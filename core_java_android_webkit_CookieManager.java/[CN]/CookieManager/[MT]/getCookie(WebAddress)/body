{
  if (JniUtil.useChromiumHttpStack()) {
    return nativeGetCookie(uri.toString(),false);
  }
  if (!mAcceptCookie || uri == null) {
    return null;
  }
  String[] hostAndPath=getHostAndPath(uri);
  if (hostAndPath == null) {
    return null;
  }
  String baseDomain=getBaseDomain(hostAndPath[0]);
  ArrayList<Cookie> cookieList=mCookieMap.get(baseDomain);
  if (cookieList == null) {
    cookieList=CookieSyncManager.getInstance().getCookiesForDomain(baseDomain);
    mCookieMap.put(baseDomain,cookieList);
  }
  long now=System.currentTimeMillis();
  boolean secure=HTTPS.equals(uri.getScheme());
  Iterator<Cookie> iter=cookieList.iterator();
  SortedSet<Cookie> cookieSet=new TreeSet<Cookie>(COMPARATOR);
  while (iter.hasNext()) {
    Cookie cookie=iter.next();
    if (cookie.domainMatch(hostAndPath[0]) && cookie.pathMatch(hostAndPath[1]) && (cookie.expires < 0 || cookie.expires > now)&& (!cookie.secure || secure)&& cookie.mode != Cookie.MODE_DELETED) {
      cookie.lastAcessTime=now;
      cookieSet.add(cookie);
    }
  }
  StringBuilder ret=new StringBuilder(256);
  Iterator<Cookie> setIter=cookieSet.iterator();
  while (setIter.hasNext()) {
    Cookie cookie=setIter.next();
    if (ret.length() > 0) {
      ret.append(SEMICOLON);
      ret.append(WHITE_SPACE);
    }
    ret.append(cookie.name);
    if (cookie.value != null) {
      ret.append(EQUAL);
      ret.append(cookie.value);
    }
  }
  if (ret.length() > 0) {
    if (DebugFlags.COOKIE_MANAGER) {
      Log.v(LOGTAG,"getCookie: uri: " + uri + " value: "+ ret);
    }
    return ret.toString();
  }
 else {
    if (DebugFlags.COOKIE_MANAGER) {
      Log.v(LOGTAG,"getCookie: uri: " + uri + " But can't find cookie.");
    }
    return null;
  }
}
