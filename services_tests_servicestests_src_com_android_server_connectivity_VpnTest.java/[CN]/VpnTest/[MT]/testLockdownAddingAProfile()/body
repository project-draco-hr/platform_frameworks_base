{
  final MockVpn vpn=new MockVpn(primaryUser.id);
  setMockedUsers(primaryUser);
  final UserInfo tempProfile=new UserInfo(restrictedProfileA.id,restrictedProfileA.name,restrictedProfileA.flags);
  tempProfile.restrictedProfileParentId=primaryUser.id;
  final UidRange user=UidRange.createForUser(primaryUser.id);
  final UidRange profile=UidRange.createForUser(tempProfile.id);
  assertTrue(vpn.setAlwaysOnPackage(PKGS[3],true));
  verify(mNetService).setAllowOnlyVpnForUids(eq(true),aryEq(new UidRange[]{new UidRange(user.start,user.start + PKG_UIDS[3] - 1),new UidRange(user.start + PKG_UIDS[3] + 1,user.stop)}));
  vpn.assertUnblocked(profile.start + PKG_UIDS[0]);
  setMockedUsers(primaryUser,tempProfile);
  vpn.onUserAdded(tempProfile.id);
  verify(mNetService).setAllowOnlyVpnForUids(eq(true),aryEq(new UidRange[]{new UidRange(profile.start,profile.start + PKG_UIDS[3] - 1),new UidRange(profile.start + PKG_UIDS[3] + 1,profile.stop)}));
  tempProfile.partial=true;
  vpn.onUserRemoved(tempProfile.id);
  verify(mNetService).setAllowOnlyVpnForUids(eq(false),aryEq(new UidRange[]{new UidRange(profile.start,profile.start + PKG_UIDS[3] - 1),new UidRange(profile.start + PKG_UIDS[3] + 1,profile.stop)}));
}
