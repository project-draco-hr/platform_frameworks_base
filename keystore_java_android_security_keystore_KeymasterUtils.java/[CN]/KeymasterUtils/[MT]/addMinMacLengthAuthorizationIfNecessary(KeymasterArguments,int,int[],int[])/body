{
switch (keymasterAlgorithm) {
case KeymasterDefs.KM_ALGORITHM_AES:
    if (com.android.internal.util.ArrayUtils.contains(keymasterBlockModes,KeymasterDefs.KM_MODE_GCM)) {
      args.addUnsignedInt(KeymasterDefs.KM_TAG_MIN_MAC_LENGTH,AndroidKeyStoreAuthenticatedAESCipherSpi.GCM.MIN_SUPPORTED_TAG_LENGTH_BITS);
    }
  break;
case KeymasterDefs.KM_ALGORITHM_HMAC:
if (keymasterDigests.length != 1) {
  throw new ProviderException("Unsupported number of authorized digests for HMAC key: " + keymasterDigests.length + ". Exactly one digest must be authorized");
}
int keymasterDigest=keymasterDigests[0];
int digestOutputSizeBits=getDigestOutputSizeBits(keymasterDigest);
if (digestOutputSizeBits == -1) {
throw new ProviderException("HMAC key authorized for unsupported digest: " + KeyProperties.Digest.fromKeymaster(keymasterDigest));
}
args.addUnsignedInt(KeymasterDefs.KM_TAG_MIN_MAC_LENGTH,digestOutputSizeBits);
break;
}
}
