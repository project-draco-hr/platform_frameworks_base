{
  if (!userAuthenticationRequired) {
    args.addBoolean(KeymasterDefs.KM_TAG_NO_AUTH_REQUIRED);
    return;
  }
  if (userAuthenticationValidityDurationSeconds == -1) {
    FingerprintManager fingerprintManager=KeyStore.getApplicationContext().getSystemService(FingerprintManager.class);
    long fingerprintOnlySid=(fingerprintManager != null) ? fingerprintManager.getAuthenticatorId() : 0;
    if (fingerprintOnlySid == 0) {
      throw new IllegalStateException("At least one fingerprint must be enrolled to create keys requiring user" + " authentication for every use");
    }
    args.addUnsignedLong(KeymasterDefs.KM_TAG_USER_SECURE_ID,KeymasterArguments.toUint64(fingerprintOnlySid));
    args.addEnum(KeymasterDefs.KM_TAG_USER_AUTH_TYPE,KeymasterDefs.HW_AUTH_FINGERPRINT);
    if (userAuthenticationValidWhileOnBody) {
      throw new ProviderException("Key validity extension while device is on-body is not " + "supported for keys requiring fingerprint authentication");
    }
  }
 else {
    long rootSid=GateKeeper.getSecureUserId();
    if (rootSid == 0) {
      throw new IllegalStateException("Secure lock screen must be enabled" + " to create keys requiring user authentication");
    }
    args.addUnsignedLong(KeymasterDefs.KM_TAG_USER_SECURE_ID,KeymasterArguments.toUint64(rootSid));
    args.addEnum(KeymasterDefs.KM_TAG_USER_AUTH_TYPE,KeymasterDefs.HW_AUTH_PASSWORD | KeymasterDefs.HW_AUTH_FINGERPRINT);
    args.addUnsignedInt(KeymasterDefs.KM_TAG_AUTH_TIMEOUT,userAuthenticationValidityDurationSeconds);
    if (userAuthenticationValidWhileOnBody) {
      args.addBoolean(KeymasterDefs.KM_TAG_ALLOW_WHILE_ON_BODY);
    }
  }
}
