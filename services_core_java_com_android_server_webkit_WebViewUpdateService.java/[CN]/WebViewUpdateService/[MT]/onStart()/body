{
  mWebViewUpdatedReceiver=new BroadcastReceiver(){
    @Override public void onReceive(    Context context,    Intent intent){
switch (intent.getAction()) {
case Intent.ACTION_PACKAGE_REMOVED:
        if (intent.getExtras().getBoolean(Intent.EXTRA_REPLACING))         return;
      mImpl.packageStateChanged(packageNameFromIntent(intent),PACKAGE_REMOVED);
    break;
case Intent.ACTION_PACKAGE_CHANGED:
  if (entirePackageChanged(intent)) {
    mImpl.packageStateChanged(packageNameFromIntent(intent),PACKAGE_CHANGED);
  }
break;
case Intent.ACTION_PACKAGE_ADDED:
mImpl.packageStateChanged(packageNameFromIntent(intent),(intent.getExtras().getBoolean(Intent.EXTRA_REPLACING) ? PACKAGE_ADDED_REPLACED : PACKAGE_ADDED));
break;
case Intent.ACTION_USER_ADDED:
int userId=intent.getIntExtra(Intent.EXTRA_USER_HANDLE,UserHandle.USER_NULL);
mImpl.handleNewUser(userId);
break;
}
}
}
;
IntentFilter filter=new IntentFilter();
filter.addAction(Intent.ACTION_PACKAGE_ADDED);
filter.addAction(Intent.ACTION_PACKAGE_REMOVED);
filter.addAction(Intent.ACTION_PACKAGE_CHANGED);
filter.addDataScheme("package");
for (WebViewProviderInfo provider : mImpl.getWebViewPackages()) {
filter.addDataSchemeSpecificPart(provider.packageName,PatternMatcher.PATTERN_LITERAL);
}
getContext().registerReceiver(mWebViewUpdatedReceiver,filter);
IntentFilter userAddedFilter=new IntentFilter();
userAddedFilter.addAction(Intent.ACTION_USER_ADDED);
getContext().registerReceiver(mWebViewUpdatedReceiver,userAddedFilter);
publishBinderService("webviewupdate",new BinderService(),true);
}
