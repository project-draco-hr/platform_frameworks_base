{
  if (!isFallbackLogicEnabled())   return;
  WebViewProviderInfo[] webviewProviders=WebViewFactory.getWebViewPackages();
  if (intent != null && (intent.getAction().equals(Intent.ACTION_PACKAGE_ADDED) || intent.getAction().equals(Intent.ACTION_PACKAGE_CHANGED))) {
    String changedPackage=null;
    for (    WebViewProviderInfo provider : webviewProviders) {
      String webviewPackage="package:" + provider.packageName;
      if (webviewPackage.equals(intent.getDataString())) {
        if (provider.isAvailableByDefault()) {
          changedPackage=provider.packageName;
        }
        break;
      }
    }
    if (changedPackage == null)     return;
  }
  WebViewProviderInfo fallbackProvider=getFallbackProvider(webviewProviders);
  if (fallbackProvider == null)   return;
  boolean existsValidNonFallbackProvider=existsValidNonFallbackProvider(webviewProviders);
  if (existsValidNonFallbackProvider && (fallbackProvider.isEnabled() || intent == null)) {
    context.getPackageManager().deletePackage(fallbackProvider.packageName,new IPackageDeleteObserver.Stub(){
      public void packageDeleted(      String packageName,      int returnCode){
        UserManager userManager=(UserManager)context.getSystemService(Context.USER_SERVICE);
        for (        UserInfo userInfo : userManager.getUsers()) {
          enablePackageForUser(packageName,false,userInfo.id);
        }
      }
    }
,PackageManager.DELETE_SYSTEM_APP | PackageManager.DELETE_ALL_USERS);
  }
 else   if (!existsValidNonFallbackProvider && (!fallbackProvider.isEnabled() || intent == null)) {
    UserManager userManager=(UserManager)context.getSystemService(Context.USER_SERVICE);
    for (    UserInfo userInfo : userManager.getUsers()) {
      enablePackageForUser(fallbackProvider.packageName,true,userInfo.id);
    }
  }
}
