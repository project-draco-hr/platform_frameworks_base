{
  final ArrayList<GroupMetadata> egml=mExpGroupMetadataList;
  final int numExpGroups=egml.size();
  int leftExpGroupIndex=0;
  int rightExpGroupIndex=numExpGroups - 1;
  int midExpGroupIndex=0;
  GroupMetadata midExpGm;
  if (numExpGroups == 0) {
    return new PositionMetadata(pos.groupPos,pos.type,pos.groupPos,pos.childPos,null,0);
  }
  while (leftExpGroupIndex <= rightExpGroupIndex) {
    midExpGroupIndex=(rightExpGroupIndex - leftExpGroupIndex) / 2 + leftExpGroupIndex;
    midExpGm=egml.get(midExpGroupIndex);
    if (pos.groupPos > midExpGm.gPos) {
      leftExpGroupIndex=midExpGroupIndex + 1;
    }
 else     if (pos.groupPos < midExpGm.gPos) {
      rightExpGroupIndex=midExpGroupIndex - 1;
    }
 else     if (pos.groupPos == midExpGm.gPos) {
      if (pos.type == ExpandableListPosition.GROUP) {
        return new PositionMetadata(midExpGm.flPos,pos.type,pos.groupPos,pos.childPos,midExpGm,midExpGroupIndex);
      }
 else       if (pos.type == ExpandableListPosition.CHILD) {
        return new PositionMetadata(midExpGm.flPos + pos.childPos + 1,pos.type,pos.groupPos,pos.childPos,midExpGm,midExpGroupIndex);
      }
 else {
        return null;
      }
    }
  }
  if (pos.type != ExpandableListPosition.GROUP) {
    return null;
  }
  if (leftExpGroupIndex > midExpGroupIndex) {
    final GroupMetadata leftExpGm=egml.get(leftExpGroupIndex - 1);
    final int flPos=leftExpGm.lastChildFlPos + (pos.groupPos - leftExpGm.gPos);
    return new PositionMetadata(flPos,pos.type,pos.groupPos,pos.childPos,null,leftExpGroupIndex);
  }
 else   if (rightExpGroupIndex < midExpGroupIndex) {
    final GroupMetadata rightExpGm=egml.get(++rightExpGroupIndex);
    final int flPos=rightExpGm.flPos - (rightExpGm.gPos - pos.groupPos);
    return new PositionMetadata(flPos,pos.type,pos.groupPos,pos.childPos,null,rightExpGroupIndex);
  }
 else {
    return null;
  }
}
