{
  JournaledFile journal=makeJournaledFile();
  FileInputStream stream=null;
  File file=journal.chooseForRead();
  try {
    stream=new FileInputStream(file);
    XmlPullParser parser=Xml.newPullParser();
    parser.setInput(stream,null);
    int type;
    while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && type != XmlPullParser.START_TAG) {
    }
    String tag=parser.getName();
    if (!"policies".equals(tag)) {
      throw new XmlPullParserException("Settings do not start with policies tag: found " + tag);
    }
    type=parser.next();
    int outerDepth=parser.getDepth();
    while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && (type != XmlPullParser.END_TAG || parser.getDepth() > outerDepth)) {
      if (type == XmlPullParser.END_TAG || type == XmlPullParser.TEXT) {
        continue;
      }
      tag=parser.getName();
      if ("admin".equals(tag)) {
        DeviceAdminInfo dai=findAdmin(ComponentName.unflattenFromString(parser.getAttributeValue(null,"name")));
        if (dai != null) {
          ActiveAdmin ap=new ActiveAdmin(dai);
          ap.readFromXml(parser);
          mAdminMap.put(ap.info.getComponent(),ap);
          mAdminList.add(ap);
        }
      }
 else       if ("failed-password-attempts".equals(tag)) {
        mFailedPasswordAttempts=Integer.parseInt(parser.getAttributeValue(null,"value"));
      }
    }
  }
 catch (  NullPointerException e) {
    Log.w(TAG,"failed parsing " + file + " "+ e);
  }
catch (  NumberFormatException e) {
    Log.w(TAG,"failed parsing " + file + " "+ e);
  }
catch (  XmlPullParserException e) {
    Log.w(TAG,"failed parsing " + file + " "+ e);
  }
catch (  IOException e) {
    Log.w(TAG,"failed parsing " + file + " "+ e);
  }
catch (  IndexOutOfBoundsException e) {
    Log.w(TAG,"failed parsing " + file + " "+ e);
  }
  try {
    if (stream != null) {
      stream.close();
    }
  }
 catch (  IOException e) {
  }
  long timeMs=getMaximumTimeToLock(null);
  if (timeMs <= 0) {
    timeMs=Integer.MAX_VALUE;
  }
  try {
    getIPowerManager().setMaximumScreenOffTimeount((int)timeMs);
  }
 catch (  RemoteException e) {
    Log.w(TAG,"Failure talking with power manager",e);
  }
}
