{
  if (mContext.checkCallingOrSelfPermission(android.Manifest.permission.DUMP) != PackageManager.PERMISSION_GRANTED) {
    pw.println("Permission Denial: can't dump DevicePolicyManagerService from from pid=" + Binder.getCallingPid() + ", uid="+ Binder.getCallingUid());
    return;
  }
  final Printer p=new PrintWriterPrinter(pw);
synchronized (this) {
    p.println("Current Device Policy Manager state:");
    p.println("  Enabled Device Admins:");
    final int N=mAdminList.size();
    for (int i=0; i < N; i++) {
      ActiveAdmin ap=mAdminList.get(i);
      if (ap != null) {
        pw.print("  ");
        pw.print(ap.info.getComponent().flattenToShortString());
        pw.println(":");
        ap.dump("    ",pw);
      }
    }
    pw.println(" ");
    pw.print("  mActivePasswordQuality=");
    pw.println(mActivePasswordQuality);
    pw.print("  mActivePasswordLength=");
    pw.println(mActivePasswordLength);
    pw.print("  mFailedPasswordAttempts=");
    pw.println(mFailedPasswordAttempts);
    pw.print("  mPasswordOwner=");
    pw.println(mPasswordOwner);
  }
}
