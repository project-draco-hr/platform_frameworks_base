{
  JournaledFile journal=makeJournaledFile();
  FileOutputStream stream=null;
  try {
    stream=new FileOutputStream(journal.chooseForWrite(),false);
    XmlSerializer out=new FastXmlSerializer();
    out.setOutput(stream,"utf-8");
    out.startDocument(null,true);
    out.startTag(null,"policies");
    ActiveAdmin ap=mActiveAdmin;
    if (ap != null) {
      out.startTag(null,"admin");
      out.attribute(null,"name",ap.info.getComponent().flattenToString());
      if (ap.passwordMode != DevicePolicyManager.PASSWORD_MODE_UNSPECIFIED) {
        out.startTag(null,"password-mode");
        out.attribute(null,"value",Integer.toString(ap.passwordMode));
        out.endTag(null,"password-mode");
        if (ap.minimumPasswordLength > 0) {
          out.startTag(null,"min-password-length");
          out.attribute(null,"value",Integer.toString(ap.minimumPasswordLength));
          out.endTag(null,"mn-password-length");
        }
      }
      if (ap.maximumTimeToUnlock != DevicePolicyManager.PASSWORD_MODE_UNSPECIFIED) {
        out.startTag(null,"max-time-to-unlock");
        out.attribute(null,"value",Long.toString(ap.maximumTimeToUnlock));
        out.endTag(null,"max-time-to-unlock");
      }
      out.endTag(null,"admin");
    }
    out.endTag(null,"policies");
    out.endDocument();
    stream.close();
    journal.commit();
  }
 catch (  IOException e) {
    try {
      if (stream != null) {
        stream.close();
      }
    }
 catch (    IOException ex) {
    }
    journal.rollback();
  }
}
