{
  out.startTag(null,"policies");
  info.writePoliciesToXml(out);
  out.endTag(null,"policies");
  if (passwordQuality != DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED) {
    out.startTag(null,"password-quality");
    out.attribute(null,"value",Integer.toString(passwordQuality));
    out.endTag(null,"password-quality");
    if (minimumPasswordLength != DEF_MINIMUM_PASSWORD_LENGTH) {
      out.startTag(null,"min-password-length");
      out.attribute(null,"value",Integer.toString(minimumPasswordLength));
      out.endTag(null,"min-password-length");
    }
    if (passwordHistoryLength != DEF_PASSWORD_HISTORY_LENGTH) {
      out.startTag(null,"password-history-length");
      out.attribute(null,"value",Integer.toString(passwordHistoryLength));
      out.endTag(null,"password-history-length");
    }
    if (minimumPasswordUpperCase != DEF_MINIMUM_PASSWORD_UPPER_CASE) {
      out.startTag(null,"min-password-uppercase");
      out.attribute(null,"value",Integer.toString(minimumPasswordUpperCase));
      out.endTag(null,"min-password-uppercase");
    }
    if (minimumPasswordLowerCase != DEF_MINIMUM_PASSWORD_LOWER_CASE) {
      out.startTag(null,"min-password-lowercase");
      out.attribute(null,"value",Integer.toString(minimumPasswordLowerCase));
      out.endTag(null,"min-password-lowercase");
    }
    if (minimumPasswordLetters != DEF_MINIMUM_PASSWORD_LETTERS) {
      out.startTag(null,"min-password-letters");
      out.attribute(null,"value",Integer.toString(minimumPasswordLetters));
      out.endTag(null,"min-password-letters");
    }
    if (minimumPasswordNumeric != DEF_MINIMUM_PASSWORD_NUMERIC) {
      out.startTag(null,"min-password-numeric");
      out.attribute(null,"value",Integer.toString(minimumPasswordNumeric));
      out.endTag(null,"min-password-numeric");
    }
    if (minimumPasswordSymbols != DEF_MINIMUM_PASSWORD_SYMBOLS) {
      out.startTag(null,"min-password-symbols");
      out.attribute(null,"value",Integer.toString(minimumPasswordSymbols));
      out.endTag(null,"min-password-symbols");
    }
    if (minimumPasswordNonLetter > DEF_MINIMUM_PASSWORD_NON_LETTER) {
      out.startTag(null,"min-password-nonletter");
      out.attribute(null,"value",Integer.toString(minimumPasswordNonLetter));
      out.endTag(null,"min-password-nonletter");
    }
  }
  if (maximumTimeToUnlock != DEF_MAXIMUM_TIME_TO_UNLOCK) {
    out.startTag(null,"max-time-to-unlock");
    out.attribute(null,"value",Long.toString(maximumTimeToUnlock));
    out.endTag(null,"max-time-to-unlock");
  }
  if (maximumFailedPasswordsForWipe != DEF_MAXIMUM_FAILED_PASSWORDS_FOR_WIPE) {
    out.startTag(null,"max-failed-password-wipe");
    out.attribute(null,"value",Integer.toString(maximumFailedPasswordsForWipe));
    out.endTag(null,"max-failed-password-wipe");
  }
  if (specifiesGlobalProxy) {
    out.startTag(null,"specifies-global-proxy");
    out.attribute(null,"value",Boolean.toString(specifiesGlobalProxy));
    out.endTag(null,"specifies_global_proxy");
    if (globalProxySpec != null) {
      out.startTag(null,"global-proxy-spec");
      out.attribute(null,"value",globalProxySpec);
      out.endTag(null,"global-proxy-spec");
    }
    if (globalProxyExclusionList != null) {
      out.startTag(null,"global-proxy-exclusion-list");
      out.attribute(null,"value",globalProxyExclusionList);
      out.endTag(null,"global-proxy-exclusion-list");
    }
  }
  if (passwordExpirationTimeout != DEF_PASSWORD_EXPIRATION_TIMEOUT) {
    out.startTag(null,"password-expiration-timeout");
    out.attribute(null,"value",Long.toString(passwordExpirationTimeout));
    out.endTag(null,"password-expiration-timeout");
  }
  if (passwordExpirationDate != DEF_PASSWORD_EXPIRATION_DATE) {
    out.startTag(null,"password-expiration-date");
    out.attribute(null,"value",Long.toString(passwordExpirationDate));
    out.endTag(null,"password-expiration-date");
  }
  if (encryptionRequested) {
    out.startTag(null,"encryption-requested");
    out.attribute(null,"value",Boolean.toString(encryptionRequested));
    out.endTag(null,"encryption-requested");
  }
  if (disableCamera) {
    out.startTag(null,"disable-camera");
    out.attribute(null,"value",Boolean.toString(disableCamera));
    out.endTag(null,"disable-camera");
  }
}
