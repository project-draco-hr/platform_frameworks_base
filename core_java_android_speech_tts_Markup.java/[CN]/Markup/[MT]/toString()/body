{
  StringBuilder out=new StringBuilder();
  if (mType != null) {
    out.append(TYPE + ": \"" + mType+ "\"");
  }
  if (mPlainText != null) {
    out.append(out.length() > 0 ? " " : "");
    out.append(PLAIN_TEXT + ": \"" + escapeQuotedString(mPlainText)+ "\"");
  }
  SortedMap<String,String> sortedMap=new TreeMap<String,String>();
  for (  String key : mParameters.keySet()) {
    sortedMap.put(key,mParameters.getString(key));
  }
  for (  Map.Entry<String,String> entry : sortedMap.entrySet()) {
    out.append(out.length() > 0 ? " " : "");
    out.append(entry.getKey() + ": \"" + escapeQuotedString(entry.getValue())+ "\"");
  }
  for (  Markup m : mNestedMarkups) {
    out.append(out.length() > 0 ? " " : "");
    String nestedStr=m.toString();
    if (nestedStr.isEmpty()) {
      out.append(MARKUP + " {}");
    }
 else {
      out.append(MARKUP + " { " + m.toString()+ " }");
    }
  }
  return out.toString();
}
