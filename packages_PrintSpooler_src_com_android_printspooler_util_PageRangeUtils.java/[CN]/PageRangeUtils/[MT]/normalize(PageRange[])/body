{
  if (pageRanges == null) {
    return null;
  }
  final int oldRangeCount=pageRanges.length;
  if (oldRangeCount <= 1) {
    return pageRanges;
  }
  Arrays.sort(pageRanges,sComparator);
  int newRangeCount=1;
  for (int i=0; i < oldRangeCount - 1; i++) {
    PageRange currentRange=pageRanges[i];
    PageRange nextRange=pageRanges[i + 1];
    if (currentRange.getEnd() + 1 >= nextRange.getStart()) {
      pageRanges[i]=null;
      pageRanges[i + 1]=new PageRange(currentRange.getStart(),Math.max(currentRange.getEnd(),nextRange.getEnd()));
    }
 else {
      newRangeCount++;
    }
  }
  if (newRangeCount == oldRangeCount) {
    return pageRanges;
  }
  int normalRangeIndex=0;
  PageRange[] normalRanges=new PageRange[newRangeCount];
  for (int i=0; i < oldRangeCount; i++) {
    PageRange normalRange=pageRanges[i];
    if (normalRange != null) {
      normalRanges[normalRangeIndex]=normalRange;
      normalRangeIndex++;
    }
  }
  return normalRanges;
}
