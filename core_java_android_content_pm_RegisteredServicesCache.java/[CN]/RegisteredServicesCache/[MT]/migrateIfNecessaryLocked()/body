{
  if (mSerializerAndParser == null) {
    return;
  }
  File systemDir=new File(getDataDirectory(),"system");
  File syncDir=new File(systemDir,REGISTERED_SERVICES_DIR);
  AtomicFile oldFile=new AtomicFile(new File(syncDir,mInterfaceName + ".xml"));
  boolean oldFileExists=oldFile.getBaseFile().exists();
  if (oldFileExists) {
    File marker=new File(syncDir,mInterfaceName + ".xml.migrated");
    if (!marker.exists()) {
      if (DEBUG) {
        Slog.i(TAG,"Marker file " + marker + " does not exist - running migration");
      }
      InputStream is=null;
      try {
        is=oldFile.openRead();
        mUserServices.clear();
        readPersistentServicesLocked(is);
      }
 catch (      Exception e) {
        Log.w(TAG,"Error reading persistent services, starting from scratch",e);
      }
 finally {
        IoUtils.closeQuietly(is);
      }
      try {
        for (        UserInfo user : getUsers()) {
          UserServices<V> userServices=mUserServices.get(user.id);
          if (userServices != null) {
            if (DEBUG) {
              Slog.i(TAG,"Migrating u" + user.id + " services "+ userServices.persistentServices);
            }
            writePersistentServicesLocked(userServices,user.id);
          }
        }
        marker.createNewFile();
      }
 catch (      Exception e) {
        Log.w(TAG,"Migration failed",e);
      }
      mUserServices.clear();
    }
  }
}
