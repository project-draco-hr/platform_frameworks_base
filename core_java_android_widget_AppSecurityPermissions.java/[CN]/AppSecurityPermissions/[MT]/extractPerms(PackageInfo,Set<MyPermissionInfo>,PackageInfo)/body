{
  String[] strList=info.requestedPermissions;
  int[] flagsList=info.requestedPermissionsFlags;
  if ((strList == null) || (strList.length == 0)) {
    return;
  }
  for (int i=0; i < strList.length; i++) {
    String permName=strList[i];
    if (installedPkgInfo != null && info == installedPkgInfo) {
      if ((flagsList[i] & PackageInfo.REQUESTED_PERMISSION_GRANTED) == 0) {
        continue;
      }
    }
    try {
      PermissionInfo tmpPermInfo=mPm.getPermissionInfo(permName,0);
      if (tmpPermInfo == null) {
        continue;
      }
      int existingIndex=-1;
      if (installedPkgInfo != null && installedPkgInfo.requestedPermissions != null) {
        for (int j=0; j < installedPkgInfo.requestedPermissions.length; j++) {
          if (permName.equals(installedPkgInfo.requestedPermissions[j])) {
            existingIndex=j;
            break;
          }
        }
      }
      final int existingFlags=existingIndex >= 0 ? installedPkgInfo.requestedPermissionsFlags[existingIndex] : 0;
      if (!isDisplayablePermission(tmpPermInfo,flagsList[i],existingFlags)) {
        continue;
      }
      final String origGroupName=tmpPermInfo.group;
      String groupName=origGroupName;
      if (groupName == null) {
        groupName=tmpPermInfo.packageName;
        tmpPermInfo.group=groupName;
      }
      MyPermissionGroupInfo group=mPermGroups.get(groupName);
      if (group == null) {
        PermissionGroupInfo grp=null;
        if (origGroupName != null) {
          grp=mPm.getPermissionGroupInfo(origGroupName,0);
        }
        if (grp != null) {
          group=new MyPermissionGroupInfo(grp);
        }
 else {
          tmpPermInfo.group=tmpPermInfo.packageName;
          group=mPermGroups.get(tmpPermInfo.group);
          if (group == null) {
            group=new MyPermissionGroupInfo(tmpPermInfo);
          }
          group=new MyPermissionGroupInfo(tmpPermInfo);
        }
        mPermGroups.put(tmpPermInfo.group,group);
      }
      final boolean newPerm=installedPkgInfo != null && (existingFlags & PackageInfo.REQUESTED_PERMISSION_GRANTED) == 0;
      MyPermissionInfo myPerm=new MyPermissionInfo(tmpPermInfo);
      myPerm.mNewReqFlags=flagsList[i];
      myPerm.mExistingReqFlags=existingFlags;
      myPerm.mNew=newPerm;
      permSet.add(myPerm);
    }
 catch (    NameNotFoundException e) {
      Log.i(TAG,"Ignoring unknown permission:" + permName);
    }
  }
}
