{
  Animatable anim=null;
  ArrayList<Animatable> childAnims=null;
  int type;
  int depth=parser.getDepth();
  while (((type=parser.next()) != XmlPullParser.END_TAG || parser.getDepth() > depth) && type != XmlPullParser.END_DOCUMENT) {
    if (type != XmlPullParser.START_TAG) {
      continue;
    }
    String name=parser.getName();
    if (name.equals("property")) {
      anim=loadPropertyAnimator(c,attrs);
    }
 else     if (name.equals("animator")) {
      anim=loadAnimator(c,attrs,null);
    }
 else     if (name.equals("sequencer")) {
      anim=new Sequencer();
      TypedArray a=c.obtainStyledAttributes(attrs,com.android.internal.R.styleable.Sequencer);
      int ordering=a.getInt(com.android.internal.R.styleable.Sequencer_ordering,TOGETHER);
      createAnimatableFromXml(c,parser,attrs,(Sequencer)anim,ordering);
      a.recycle();
    }
 else {
      throw new RuntimeException("Unknown animator name: " + parser.getName());
    }
    if (parent != null) {
      if (childAnims == null) {
        childAnims=new ArrayList<Animatable>();
      }
      childAnims.add(anim);
    }
  }
  if (parent != null && childAnims != null) {
    Animatable[] animsArray=new Animatable[childAnims.size()];
    int index=0;
    for (    Animatable a : childAnims) {
      animsArray[index++]=a;
    }
    if (sequenceOrdering == TOGETHER) {
      parent.playTogether(animsArray);
    }
 else {
      parent.playSequentially(animsArray);
    }
  }
  return anim;
}
