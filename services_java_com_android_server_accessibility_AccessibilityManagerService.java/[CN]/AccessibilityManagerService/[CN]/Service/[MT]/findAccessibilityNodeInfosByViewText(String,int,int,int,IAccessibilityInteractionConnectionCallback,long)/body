{
  IAccessibilityInteractionConnection connection=null;
synchronized (mLock) {
    mSecurityPolicy.enforceCanRetrieveWindowContent(this);
    final boolean permissionGranted=mSecurityPolicy.canGetAccessibilityNodeInfoLocked(this,accessibilityWindowId);
    if (!permissionGranted) {
      return 0;
    }
 else {
      connection=getConnectionToRetrievalAllowingWindowLocked();
      if (connection == null) {
        if (DEBUG) {
          Slog.e(LOG_TAG,"No interaction connection to focused window.");
        }
        return 0;
      }
    }
  }
  final int interrogatingPid=Binder.getCallingPid();
  final long identityToken=Binder.clearCallingIdentity();
  try {
    connection.findAccessibilityNodeInfosByViewText(text,accessibilityViewId,interactionId,callback,interrogatingPid,interrogatingTid);
  }
 catch (  RemoteException re) {
    if (DEBUG) {
      Slog.e(LOG_TAG,"Error finding node.");
    }
  }
 finally {
    Binder.restoreCallingIdentity(identityToken);
  }
  return getCompatibilityScale(accessibilityWindowId);
}
