{
  ContentResolver contentResolver=mContext.getContentResolver();
  Uri accessibilityEnabledUri=Settings.Secure.getUriFor(Settings.Secure.ACCESSIBILITY_ENABLED);
  contentResolver.registerContentObserver(accessibilityEnabledUri,false,new ContentObserver(new Handler()){
    @Override public void onChange(    boolean selfChange){
      super.onChange(selfChange);
synchronized (mLock) {
        mIsAccessibilityEnabled=Settings.Secure.getInt(mContext.getContentResolver(),Settings.Secure.ACCESSIBILITY_ENABLED,0) == 1;
        if (mIsAccessibilityEnabled) {
          manageServicesLocked();
        }
 else {
          unbindAllServicesLocked();
        }
        sendAccessibilityEnabledToClientsLocked();
      }
    }
  }
);
  Uri touchExplorationRequestedUri=Settings.Secure.getUriFor(Settings.Secure.TOUCH_EXPLORATION_REQUESTED);
  contentResolver.registerContentObserver(touchExplorationRequestedUri,false,new ContentObserver(new Handler()){
    @Override public void onChange(    boolean selfChange){
      super.onChange(selfChange);
synchronized (mLock) {
        mIsTouchExplorationRequested=Settings.Secure.getInt(mContext.getContentResolver(),Settings.Secure.TOUCH_EXPLORATION_REQUESTED,0) == 1;
        updateTouchExplorationEnabledLocked();
      }
    }
  }
);
  Uri accessibilityServicesUri=Settings.Secure.getUriFor(Settings.Secure.ENABLED_ACCESSIBILITY_SERVICES);
  contentResolver.registerContentObserver(accessibilityServicesUri,false,new ContentObserver(new Handler()){
    @Override public void onChange(    boolean selfChange){
      super.onChange(selfChange);
synchronized (mLock) {
        manageServicesLocked();
      }
    }
  }
);
}
