{
  Context context=mContext;
  PackageMonitor monitor=new PackageMonitor(){
    @Override public void onSomePackagesChanged(){
synchronized (mLock) {
        if (mUiAutomationService == null) {
          populateAccessibilityServiceListLocked();
          manageServicesLocked();
        }
      }
    }
    @Override public void onPackageRemoved(    String packageName,    int uid){
synchronized (mLock) {
        Iterator<ComponentName> it=mEnabledServices.iterator();
        while (it.hasNext()) {
          ComponentName comp=it.next();
          String compPkg=comp.getPackageName();
          if (compPkg.equals(packageName)) {
            it.remove();
            persistComponentNamesToSettingLocked(Settings.Secure.ENABLED_ACCESSIBILITY_SERVICES,mEnabledServices);
            mTouchExplorationGrantedServices.remove(comp);
            persistComponentNamesToSettingLocked(Settings.Secure.TOUCH_EXPLORATION_GRANTED_ACCESSIBILITY_SERVICES,mEnabledServices);
            return;
          }
        }
      }
    }
    @Override public boolean onHandleForceStop(    Intent intent,    String[] packages,    int uid,    boolean doit){
synchronized (mLock) {
        Iterator<ComponentName> it=mEnabledServices.iterator();
        while (it.hasNext()) {
          ComponentName comp=it.next();
          String compPkg=comp.getPackageName();
          for (          String pkg : packages) {
            if (compPkg.equals(pkg)) {
              if (!doit) {
                return true;
              }
              it.remove();
              persistComponentNamesToSettingLocked(Settings.Secure.ENABLED_ACCESSIBILITY_SERVICES,mEnabledServices);
            }
          }
        }
        return false;
      }
    }
    @Override public void onReceive(    Context context,    Intent intent){
      if (intent.getAction() == Intent.ACTION_BOOT_COMPLETED) {
synchronized (mLock) {
          if (mUiAutomationService == null) {
            populateAccessibilityServiceListLocked();
            populateEnabledAccessibilityServicesLocked();
            populateTouchExplorationGrantedAccessibilityServicesLocked();
            handleAccessibilityEnabledSettingChangedLocked();
            handleTouchExplorationEnabledSettingChangedLocked();
            updateInputFilterLocked();
            sendStateToClientsLocked();
          }
        }
        return;
      }
      super.onReceive(context,intent);
    }
  }
;
  monitor.register(context,null,true);
  IntentFilter bootFiler=new IntentFilter(Intent.ACTION_BOOT_COMPLETED);
  mContext.registerReceiver(monitor,bootFiler,null,monitor.getRegisteredHandler());
}
