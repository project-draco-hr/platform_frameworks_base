{
  Context context=mContext;
  PackageMonitor monitor=new PackageMonitor(){
    @Override public void onSomePackagesChanged(){
synchronized (mLock) {
        populateAccessibilityServiceListLocked();
        manageServicesLocked();
      }
    }
    @Override public void onPackageRemoved(    String packageName,    int uid){
synchronized (mLock) {
        Iterator<ComponentName> it=mEnabledServices.iterator();
        while (it.hasNext()) {
          ComponentName comp=it.next();
          String compPkg=comp.getPackageName();
          if (compPkg.equals(packageName)) {
            it.remove();
            updateEnabledAccessibilitySerivcesSettingLocked(mEnabledServices);
            return;
          }
        }
      }
    }
    @Override public boolean onHandleForceStop(    Intent intent,    String[] packages,    int uid,    boolean doit){
synchronized (mLock) {
        boolean changed=false;
        Iterator<ComponentName> it=mEnabledServices.iterator();
        while (it.hasNext()) {
          ComponentName comp=it.next();
          String compPkg=comp.getPackageName();
          for (          String pkg : packages) {
            if (compPkg.equals(pkg)) {
              if (!doit) {
                return true;
              }
              it.remove();
              changed=true;
            }
          }
        }
        if (changed) {
          updateEnabledAccessibilitySerivcesSettingLocked(mEnabledServices);
        }
        return false;
      }
    }
    @Override public void onReceive(    Context context,    Intent intent){
      if (intent.getAction() == Intent.ACTION_BOOT_COMPLETED) {
synchronized (mLock) {
          populateAccessibilityServiceListLocked();
          handleAccessibilityEnabledSettingChangedLocked();
          handleTouchExplorationEnabledSettingChangedLocked();
          updateInputFilterLocked();
          sendStateToClientsLocked();
        }
        return;
      }
      super.onReceive(context,intent);
    }
    private void updateEnabledAccessibilitySerivcesSettingLocked(    Set<ComponentName> enabledServices){
      Iterator<ComponentName> it=enabledServices.iterator();
      StringBuilder str=new StringBuilder();
      while (it.hasNext()) {
        if (str.length() > 0) {
          str.append(':');
        }
        str.append(it.next().flattenToShortString());
      }
      Settings.Secure.putString(mContext.getContentResolver(),Settings.Secure.ENABLED_ACCESSIBILITY_SERVICES,str.toString());
    }
  }
;
  monitor.register(context,true);
  IntentFilter bootFiler=new IntentFilter(Intent.ACTION_BOOT_COMPLETED);
  mContext.registerReceiver(monitor,bootFiler);
}
