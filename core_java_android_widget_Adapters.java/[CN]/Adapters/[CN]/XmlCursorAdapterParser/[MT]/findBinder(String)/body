{
  final XmlPullParser parser=mParser;
  final Context context=mContext;
  CursorTransformation transformation=mIdentity;
  int tagType;
  int depth=parser.getDepth();
  final boolean isDrawable=ADAPTER_CURSOR_AS_DRAWABLE.equals(type);
  while (((tagType=parser.next()) != XmlPullParser.END_TAG || parser.getDepth() > depth) && tagType != XmlPullParser.END_DOCUMENT) {
    if (tagType != XmlPullParser.START_TAG) {
      continue;
    }
    String name=parser.getName();
    if (ADAPTER_CURSOR_TRANSFORM.equals(name)) {
      transformation=findTransformation();
    }
 else     if (ADAPTER_CURSOR_MAP.equals(name)) {
      if (!(transformation instanceof MapTransformation)) {
        transformation=new MapTransformation(context);
      }
      findMap(((MapTransformation)transformation),isDrawable);
    }
 else {
      throw new RuntimeException("Unknown tag name " + parser.getName() + " in "+ context.getResources().getResourceEntryName(mId));
    }
  }
  if (ADAPTER_CURSOR_AS_STRING.equals(type)) {
    return new StringBinder(context,transformation);
  }
 else   if (ADAPTER_CURSOR_AS_TAG.equals(type)) {
    return new TagBinder(context,transformation);
  }
 else   if (ADAPTER_CURSOR_AS_IMAGE.equals(type)) {
    return new ImageBinder(context,transformation);
  }
 else   if (ADAPTER_CURSOR_AS_IMAGE_URI.equals(type)) {
    return new ImageUriBinder(context,transformation);
  }
 else   if (isDrawable) {
    return new DrawableBinder(context,transformation);
  }
 else {
    return createBinder(type,transformation);
  }
}
