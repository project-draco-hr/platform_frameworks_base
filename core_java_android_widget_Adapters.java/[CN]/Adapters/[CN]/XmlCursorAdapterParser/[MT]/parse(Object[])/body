{
  Resources resources=mResources;
  TypedArray a=resources.obtainAttributes(mAttrs,styleable.CursorAdapter);
  String uri=a.getString(styleable.CursorAdapter_uri);
  String selection=a.getString(styleable.CursorAdapter_selection);
  String sortOrder=a.getString(styleable.CursorAdapter_sortOrder);
  int layout=a.getResourceId(styleable.CursorAdapter_layout,0);
  if (layout == 0) {
    throw new IllegalArgumentException("The layout specified in " + resources.getResourceEntryName(mId) + " does not exist");
  }
  a.recycle();
  XmlPullParser parser=mParser;
  int type;
  int depth=parser.getDepth();
  while (((type=parser.next()) != XmlPullParser.END_TAG || parser.getDepth() > depth) && type != XmlPullParser.END_DOCUMENT) {
    if (type != XmlPullParser.START_TAG) {
      continue;
    }
    String name=parser.getName();
    if (ADAPTER_CURSOR_BIND.equals(name)) {
      parseBindTag();
    }
 else     if (ADAPTER_CURSOR_SELECT.equals(name)) {
      parseSelectTag();
    }
 else {
      throw new RuntimeException("Unknown tag name " + parser.getName() + " in "+ resources.getResourceEntryName(mId));
    }
  }
  String[] fromArray=mFrom.toArray(new String[mFrom.size()]);
  int[] toArray=new int[mTo.size()];
  for (int i=0; i < toArray.length; i++) {
    toArray[i]=mTo.get(i);
  }
  String[] selectionArgs=null;
  if (parameters != null) {
    selectionArgs=new String[parameters.length];
    for (int i=0; i < selectionArgs.length; i++) {
      selectionArgs[i]=(String)parameters[i];
    }
  }
  return new XmlCursorAdapter(mContext,layout,uri,fromArray,toArray,selection,selectionArgs,sortOrder,mBinders);
}
