{
  if (steps == 0)   steps=1;
  final float stepX1=(endPoint1.x - startPoint1.x) / steps;
  final float stepY1=(endPoint1.y - startPoint1.y) / steps;
  final float stepX2=(endPoint2.x - startPoint2.x) / steps;
  final float stepY2=(endPoint2.y - startPoint2.y) / steps;
  int eventX1, eventY1, eventX2, eventY2;
  eventX1=startPoint1.x;
  eventY1=startPoint1.y;
  eventX2=startPoint2.x;
  eventY2=startPoint2.y;
  PointerCoords[] points1=new PointerCoords[steps + 2];
  PointerCoords[] points2=new PointerCoords[steps + 2];
  for (int i=0; i < steps + 1; i++) {
    PointerCoords p1=new PointerCoords();
    p1.x=eventX1;
    p1.y=eventY1;
    p1.pressure=1;
    p1.size=1;
    points1[i]=p1;
    PointerCoords p2=new PointerCoords();
    p2.x=eventX2;
    p2.y=eventY2;
    p2.pressure=1;
    p2.size=1;
    points2[i]=p2;
    eventX1+=stepX1;
    eventY1+=stepY1;
    eventX2+=stepX2;
    eventY2+=stepY2;
  }
  PointerCoords p1=new PointerCoords();
  p1.x=endPoint1.x;
  p1.y=endPoint1.y;
  p1.pressure=1;
  p1.size=1;
  points1[steps + 1]=p1;
  PointerCoords p2=new PointerCoords();
  p2.x=endPoint2.x;
  p2.y=endPoint2.y;
  p2.pressure=1;
  p2.size=1;
  points2[steps + 1]=p2;
  return performMultiPointerGesture(points1,points2);
}
