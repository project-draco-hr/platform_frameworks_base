{
  final NetworkStats.Entry entry=new NetworkStats.Entry();
  List<Integer> sets=new ArrayList<>();
  if (set == SET_DEFAULT || set == SET_ALL) {
    sets.add(SET_DEFAULT);
  }
  if (set == SET_FOREGROUND || set == SET_ALL) {
    sets.add(SET_FOREGROUND);
  }
  List<Integer> roamings=new ArrayList<>();
  if (roaming == ROAMING_DEFAULT || roaming == ROAMING_ALL) {
    roamings.add(ROAMING_DEFAULT);
  }
  if (roaming == ROAMING_ROAMING || roaming == ROAMING_ALL) {
    roamings.add(ROAMING_ROAMING);
  }
  for (  int s : sets) {
    for (    int r : roamings) {
      final int i=stats.findIndex(iface,uid,s,tag,r);
      if (i != -1) {
        entry.add(stats.getValues(i,null));
      }
    }
  }
  assertEquals("unexpected rxBytes",rxBytes,entry.rxBytes);
  assertEquals("unexpected rxPackets",rxPackets,entry.rxPackets);
  assertEquals("unexpected txBytes",txBytes,entry.txBytes);
  assertEquals("unexpected txPackets",txPackets,entry.txPackets);
  assertEquals("unexpected operations",operations,entry.operations);
}
