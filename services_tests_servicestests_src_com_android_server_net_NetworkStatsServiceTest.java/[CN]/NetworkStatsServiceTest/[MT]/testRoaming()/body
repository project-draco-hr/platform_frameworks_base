{
  expectCurrentTime();
  expectDefaultSettings();
  expectNetworkState(buildMobile3gState(IMSI_1,true));
  expectNetworkStatsSummary(buildEmptyStats());
  expectNetworkStatsUidDetail(buildEmptyStats());
  expectNetworkStatsPoll();
  expectBandwidthControlCheck();
  replay();
  mService.forceUpdateIfaces();
  verifyAndReset();
  incrementCurrentTime(HOUR_IN_MILLIS);
  expectCurrentTime();
  expectDefaultSettings();
  expectNetworkStatsSummary(buildEmptyStats());
  expectNetworkStatsUidDetail(new NetworkStats(getElapsedRealtime(),1).addValues(TEST_IFACE,UID_RED,SET_DEFAULT,TAG_NONE,ROAMING_DEFAULT,128L,2L,128L,2L,0L).addValues(TEST_IFACE,UID_RED,SET_DEFAULT,0xF00D,ROAMING_DEFAULT,64L,1L,64L,1L,0L));
  expectNetworkStatsPoll();
  replay();
  forcePollAndWaitForIdle();
  assertUidTotal(sTemplateImsi1,UID_RED,128L,2L,128L,2L,0);
  final NetworkStats stats=mSession.getSummaryForAllUid(sTemplateImsi1,Long.MIN_VALUE,Long.MAX_VALUE,true);
  assertEquals(2,stats.size());
  assertValues(stats,IFACE_ALL,UID_RED,SET_DEFAULT,TAG_NONE,ROAMING_ROAMING,128L,2L,128L,2L,0);
  assertValues(stats,IFACE_ALL,UID_RED,SET_DEFAULT,0xF00D,ROAMING_ROAMING,64L,1L,64L,1L,0);
  verifyAndReset();
}
