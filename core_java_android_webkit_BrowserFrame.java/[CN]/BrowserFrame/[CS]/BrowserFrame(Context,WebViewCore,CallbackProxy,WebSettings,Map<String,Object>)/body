{
  Context appContext=context.getApplicationContext();
  if (sJavaBridge == null) {
    sJavaBridge=new JWebCoreJavaBridge(appContext);
    ActivityManager am=(ActivityManager)context.getSystemService(Context.ACTIVITY_SERVICE);
    if (am.getMemoryClass() > 16) {
      sJavaBridge.setCacheSize(8 * 1024 * 1024);
    }
 else {
      sJavaBridge.setCacheSize(4 * 1024 * 1024);
    }
    CacheManager.init(appContext);
    CookieSyncManager.createInstance(appContext);
    PluginManager.getInstance(appContext);
  }
  mJSInterfaceMap=javascriptInterfaces;
  mSettings=settings;
  mContext=context;
  mCallbackProxy=proxy;
  mDatabase=WebViewDatabase.getInstance(appContext);
  mWebViewCore=w;
  AssetManager am=context.getAssets();
  nativeCreateFrame(w,am,proxy.getBackForwardList());
  if (DebugFlags.BROWSER_FRAME) {
    Log.v(LOGTAG,"BrowserFrame constructor: this=" + this);
  }
  mOrientationListener=new WindowOrientationListener(context){
    @Override public void onOrientationChanged(    int orientation){
switch (orientation) {
case Surface.ROTATION_90:
        orientation=90;
      break;
case Surface.ROTATION_180:
    orientation=180;
  break;
case Surface.ROTATION_270:
orientation=-90;
break;
case Surface.ROTATION_0:
orientation=0;
break;
default :
break;
}
sendMessage(obtainMessage(ORIENTATION_CHANGED,orientation,0));
}
}
;
mOrientationListener.enable();
}
