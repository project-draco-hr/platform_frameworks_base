{
  PerfChecker checker=new PerfChecker();
  if (mSettings.getCacheMode() != WebSettings.LOAD_DEFAULT) {
    cacheMode=mSettings.getCacheMode();
  }
  if (method.equals("POST")) {
    if (cacheMode == WebSettings.LOAD_NORMAL) {
      cacheMode=WebSettings.LOAD_NO_CACHE;
    }
    if (mSettings.getSavePassword() && hasPasswordField()) {
      try {
        if (DebugFlags.BROWSER_FRAME) {
          Assert.assertNotNull(mCallbackProxy.getBackForwardList().getCurrentItem());
        }
        WebAddress uri=new WebAddress(mCallbackProxy.getBackForwardList().getCurrentItem().getUrl());
        String schemePlusHost=uri.getScheme() + uri.getHost();
        String[] ret=getUsernamePassword();
        if (ret != null && postData != null && ret[0].length() > 0 && ret[1].length() > 0) {
          String postString=new String(postData);
          if (postString.contains(URLEncoder.encode(ret[0])) && postString.contains(URLEncoder.encode(ret[1]))) {
            String[] saved=mDatabase.getUsernamePassword(schemePlusHost);
            if (saved != null) {
              if (saved[0] != null) {
                mDatabase.setUsernamePassword(schemePlusHost,ret[0],ret[1]);
              }
            }
 else {
              mCallbackProxy.onSavePassword(schemePlusHost,ret[0],ret[1],null);
            }
          }
        }
      }
 catch (      ParseException ex) {
      }
    }
  }
  boolean isMainFramePage=mIsMainFrame;
  if (DebugFlags.BROWSER_FRAME) {
    Log.v(LOGTAG,"startLoadingResource: url=" + url + ", method="+ method+ ", postData="+ postData+ ", isMainFramePage="+ isMainFramePage+ ", mainResource="+ mainResource+ ", userGesture="+ userGesture);
  }
  LoadListener loadListener=LoadListener.getLoadListener(mContext,this,url,loaderHandle,synchronous,isMainFramePage,mainResource,userGesture,postDataIdentifier,username,password);
  mCallbackProxy.onLoadResource(url);
  if (LoadListener.getNativeLoaderCount() > MAX_OUTSTANDING_REQUESTS) {
    loadListener.error(android.net.http.EventHandler.ERROR,mContext.getString(com.android.internal.R.string.httpErrorTooManyRequests));
    return loadListener;
  }
  FrameLoader loader=new FrameLoader(loadListener,mSettings,method);
  loader.setHeaders(headers);
  loader.setPostData(postData);
  loader.setCacheMode(headers.containsKey("If-Modified-Since") || headers.containsKey("If-None-Match") ? WebSettings.LOAD_NO_CACHE : cacheMode);
  if (!loader.executeLoad()) {
    checker.responseAlert("startLoadingResource fail");
  }
  checker.responseAlert("startLoadingResource succeed");
  return !synchronous ? loadListener : null;
}
