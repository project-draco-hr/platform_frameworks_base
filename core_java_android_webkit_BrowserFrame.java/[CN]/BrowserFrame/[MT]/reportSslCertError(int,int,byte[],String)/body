{
  final SslError ssl_error;
  try {
    X509Certificate cert=new X509CertImpl(cert_der);
    SslCertificate sslCert=new SslCertificate(cert);
    if (JniUtil.useChromiumHttpStack()) {
      ssl_error=SslError.SslErrorFromChromiumErrorCode(cert_error,sslCert,new URL(url).getHost());
    }
 else {
      ssl_error=new SslError(cert_error,cert,url);
    }
  }
 catch (  IOException e) {
    Log.e(LOGTAG,"Can't get the certificate from WebKit, canceling");
    nativeSslCertErrorCancel(handle,cert_error);
    return;
  }
  SslErrorHandler handler=new SslErrorHandler(){
    @Override public void proceed(){
      SslCertLookupTable.getInstance().Allow(ssl_error);
      nativeSslCertErrorProceed(handle);
    }
    @Override public void cancel(){
      SslCertLookupTable.getInstance().Deny(ssl_error);
      nativeSslCertErrorCancel(handle,cert_error);
    }
  }
;
  if (SslCertLookupTable.getInstance().IsAllowed(ssl_error)) {
    nativeSslCertErrorProceed(handle);
  }
 else {
    mCallbackProxy.onReceivedSslError(handler,ssl_error);
  }
}
