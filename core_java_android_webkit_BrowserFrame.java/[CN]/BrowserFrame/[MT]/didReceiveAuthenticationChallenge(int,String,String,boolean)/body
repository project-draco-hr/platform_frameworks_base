{
  HttpAuthHandler handler=new HttpAuthHandler(){
    private static final int AUTH_PROCEED=1;
    private static final int AUTH_CANCEL=2;
    @Override public boolean useHttpAuthUsernamePassword(){
      return useCachedCredentials;
    }
    @Override public void proceed(    String username,    String password){
      Message msg=obtainMessage(AUTH_PROCEED);
      msg.getData().putString("username",username);
      msg.getData().putString("password",password);
      sendMessage(msg);
    }
    @Override public void cancel(){
      sendMessage(obtainMessage(AUTH_CANCEL));
    }
    @Override public void handleMessage(    Message msg){
switch (msg.what) {
case AUTH_PROCEED:
        String username=msg.getData().getString("username");
      String password=msg.getData().getString("password");
    nativeAuthenticationProceed(handle,username,password);
  break;
case AUTH_CANCEL:
nativeAuthenticationCancel(handle);
break;
}
}
}
;
mCallbackProxy.onReceivedHttpAuthRequest(handler,host,realm);
}
