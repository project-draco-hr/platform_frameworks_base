{
  final int RESOURCE=1;
  final int ASSET=2;
  final int CONTENT=3;
  if (type == RESOURCE) {
    if (url == null || url.length() == 0) {
      Log.e(LOGTAG,"url has length 0 " + url);
      return null;
    }
    int slash=url.indexOf('/');
    int dot=url.indexOf('.',slash);
    if (slash == -1 || dot == -1) {
      Log.e(LOGTAG,"Incorrect res path: " + url);
      return null;
    }
    String subClassName=url.substring(0,slash);
    String fieldName=url.substring(slash + 1,dot);
    String errorMsg=null;
    try {
      final Class<?> d=mContext.getApplicationContext().getClassLoader().loadClass(mContext.getPackageName() + ".R$" + subClassName);
      final java.lang.reflect.Field field=d.getField(fieldName);
      final int id=field.getInt(null);
      TypedValue value=new TypedValue();
      mContext.getResources().getValue(id,value,true);
      if (value.type == TypedValue.TYPE_STRING) {
        return mContext.getAssets().openNonAsset(value.assetCookie,value.string.toString(),AssetManager.ACCESS_STREAMING);
      }
 else {
        Log.e(LOGTAG,"not of type string: " + url);
        return null;
      }
    }
 catch (    Exception e) {
      Log.e(LOGTAG,"Exception: " + url);
      return null;
    }
  }
 else   if (type == ASSET) {
    try {
      AssetManager assets=mContext.getAssets();
      return assets.open(url,AssetManager.ACCESS_STREAMING);
    }
 catch (    IOException e) {
      return null;
    }
  }
 else   if (type == CONTENT) {
    try {
      int mimeIndex=url.lastIndexOf('?');
      if (mimeIndex != -1) {
        url=url.substring(0,mimeIndex);
      }
      Uri uri=Uri.parse(url);
      return mContext.getContentResolver().openInputStream(uri);
    }
 catch (    Exception e) {
      Log.e(LOGTAG,"Exception: " + url);
      return null;
    }
  }
 else {
    return null;
  }
}
