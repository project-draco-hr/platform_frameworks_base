{
  boolean recordSuccess=false;
  int videoEncoder=videoCap.mCodec;
  int audioEncoder=audioCap.mCodec;
  int videoWidth=highQuality ? videoCap.mMaxFrameWidth : videoCap.mMinFrameWidth;
  int videoHeight=highQuality ? videoCap.mMaxFrameHeight : videoCap.mMinFrameHeight;
  int videoFps=highQuality ? videoCap.mMaxFrameRate : videoCap.mMinFrameRate;
  int videoBitrate=highQuality ? videoCap.mMaxBitRate : videoCap.mMinBitRate;
  int audioBitrate=highQuality ? audioCap.mMaxBitRate : audioCap.mMinBitRate;
  int audioChannels=highQuality ? audioCap.mMaxChannels : audioCap.mMinChannels;
  int audioSamplingRate=highQuality ? audioCap.mMaxSampleRate : audioCap.mMinSampleRate;
  if (MediaFrameworkTestRunner.mMinCameraFps != 0 && MediaFrameworkTestRunner.mMinCameraFps > videoFps) {
    videoFps=MediaFrameworkTestRunner.mMinCameraFps;
  }
  if (videoFps < MIN_VIDEO_FPS) {
    videoFps=MIN_VIDEO_FPS;
  }
  mSurfaceHolder=MediaFrameworkTest.mSurfaceView.getHolder();
  String filename=("/sdcard/" + videoEncoder + "_"+ audioEncoder+ "_"+ highQuality+ ".3gp");
  try {
    Log.v(TAG,"video encoder : " + videoEncoder);
    Log.v(TAG,"audio encoder : " + audioEncoder);
    Log.v(TAG,"quality : " + (highQuality ? "high" : "low"));
    Log.v(TAG,"encoder : " + MediaProfileReader.getVideoCodecName(videoEncoder));
    Log.v(TAG,"audio : " + MediaProfileReader.getAudioCodecName(audioEncoder));
    Log.v(TAG,"videoWidth : " + videoWidth);
    Log.v(TAG,"videoHeight : " + videoHeight);
    Log.v(TAG,"videoFPS : " + videoFps);
    Log.v(TAG,"videobitrate : " + videoBitrate);
    Log.v(TAG,"audioBitrate : " + audioBitrate);
    Log.v(TAG,"audioChannel : " + audioChannels);
    Log.v(TAG,"AudioSampleRate : " + audioSamplingRate);
    MediaRecorder mMediaRecorder=new MediaRecorder();
    mMediaRecorder.setAudioSource(MediaRecorder.AudioSource.MIC);
    mMediaRecorder.setVideoSource(MediaRecorder.VideoSource.CAMERA);
    mMediaRecorder.setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP);
    mMediaRecorder.setOutputFile(filename);
    mMediaRecorder.setVideoFrameRate(videoFps);
    mMediaRecorder.setVideoSize(videoWidth,videoHeight);
    mMediaRecorder.setVideoEncodingBitRate(videoBitrate);
    mMediaRecorder.setAudioEncodingBitRate(audioBitrate);
    mMediaRecorder.setAudioChannels(audioChannels);
    mMediaRecorder.setAudioSamplingRate(audioSamplingRate);
    mMediaRecorder.setVideoEncoder(videoEncoder);
    mMediaRecorder.setAudioEncoder(audioEncoder);
    mMediaRecorder.setPreviewDisplay(mSurfaceHolder.getSurface());
    mMediaRecorder.prepare();
    mMediaRecorder.start();
    Thread.sleep(MediaNames.RECORDED_TIME);
    mMediaRecorder.stop();
    mMediaRecorder.release();
    recordSuccess=validateVideo(filename,videoWidth,videoHeight);
  }
 catch (  Exception e) {
    Log.v(TAG,e.toString());
    return false;
  }
  return recordSuccess;
}
