{
  Log.v(TAG,"recordVideoFromSurface");
  MediaRecorder recorder=new MediaRecorder();
  int sleepTime=33;
  try {
    if (!videoOnly) {
      recorder.setAudioSource(MediaRecorder.AudioSource.MIC);
    }
    recorder.setVideoSource(MediaRecorder.VideoSource.SURFACE);
    recorder.setOutputFormat(outFormat);
    recorder.setOutputFile(outFile);
    recorder.setVideoFrameRate(frameRate);
    if (captureRate > 0) {
      recorder.setCaptureRate(captureRate);
      sleepTime=1000 / captureRate;
    }
    recorder.setVideoSize(width,height);
    recorder.setVideoEncoder(videoFormat);
    if (!videoOnly) {
      recorder.setAudioEncoder(MediaRecorder.AudioEncoder.AMR_NB);
    }
    recorder.prepare();
    Surface surface=recorder.getSurface();
    Paint paint=new Paint();
    paint.setTextSize(16);
    paint.setColor(Color.RED);
    int i;
    for (i=0; i < 10; i++) {
      Canvas canvas=surface.lockCanvas(null);
      int background=(i * 255 / 99);
      canvas.drawARGB(255,background,background,background);
      String text="Frame #" + i;
      canvas.drawText(text,100,100,paint);
      surface.unlockCanvasAndPost(canvas);
      Thread.sleep(sleepTime);
    }
    Log.v(TAG,"start");
    recorder.start();
    for (i=10; i < 100; i++) {
      Canvas canvas=surface.lockCanvas(null);
      int background=(i * 255 / 99);
      canvas.drawARGB(255,background,background,background);
      String text="Frame #" + i;
      canvas.drawText(text,100,100,paint);
      surface.unlockCanvasAndPost(canvas);
      Thread.sleep(sleepTime);
    }
    Log.v(TAG,"stop");
    recorder.stop();
    recorder.release();
  }
 catch (  Exception e) {
    Log.v("record video failed ",e.toString());
    recorder.release();
    return false;
  }
  return true;
}
