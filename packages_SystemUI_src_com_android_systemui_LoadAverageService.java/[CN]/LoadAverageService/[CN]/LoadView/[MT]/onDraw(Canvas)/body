{
  super.onDraw(canvas);
  final int W=mNeededWidth;
  final int RIGHT=getWidth() - 1;
  final CpuTracker stats=mStats;
  final int userTime=stats.getLastUserTime();
  final int systemTime=stats.getLastSystemTime();
  final int iowaitTime=stats.getLastIoWaitTime();
  final int irqTime=stats.getLastIrqTime();
  final int softIrqTime=stats.getLastSoftIrqTime();
  final int idleTime=stats.getLastIdleTime();
  final int totalTime=userTime + systemTime + iowaitTime+ irqTime+ softIrqTime+ idleTime;
  if (totalTime == 0) {
    return;
  }
  int userW=(userTime * W) / totalTime;
  int systemW=(systemTime * W) / totalTime;
  int irqW=((iowaitTime + irqTime + softIrqTime) * W) / totalTime;
  int x=RIGHT - mPaddingRight;
  int top=mPaddingTop + 2;
  int bottom=mPaddingTop + mFH - 2;
  if (irqW > 0) {
    canvas.drawRect(x - irqW,top,x,bottom,mIrqPaint);
    x-=irqW;
  }
  if (systemW > 0) {
    canvas.drawRect(x - systemW,top,x,bottom,mSystemPaint);
    x-=systemW;
  }
  if (userW > 0) {
    canvas.drawRect(x - userW,top,x,bottom,mUserPaint);
    x-=userW;
  }
  int y=mPaddingTop - (int)mAscent;
  canvas.drawText(stats.mLoadText,RIGHT - mPaddingRight - stats.mLoadWidth- 1,y - 1,mShadowPaint);
  canvas.drawText(stats.mLoadText,RIGHT - mPaddingRight - stats.mLoadWidth- 1,y + 1,mShadowPaint);
  canvas.drawText(stats.mLoadText,RIGHT - mPaddingRight - stats.mLoadWidth + 1,y - 1,mShadow2Paint);
  canvas.drawText(stats.mLoadText,RIGHT - mPaddingRight - stats.mLoadWidth + 1,y + 1,mShadow2Paint);
  canvas.drawText(stats.mLoadText,RIGHT - mPaddingRight - stats.mLoadWidth,y,mLoadPaint);
  int N=stats.countWorkingStats();
  for (int i=0; i < N; i++) {
    CpuTracker.Stats st=stats.getWorkingStats(i);
    y+=mFH;
    top+=mFH;
    bottom+=mFH;
    userW=(st.rel_utime * W) / totalTime;
    systemW=(st.rel_stime * W) / totalTime;
    x=RIGHT - mPaddingRight;
    if (systemW > 0) {
      canvas.drawRect(x - systemW,top,x,bottom,mSystemPaint);
      x-=systemW;
    }
    if (userW > 0) {
      canvas.drawRect(x - userW,top,x,bottom,mUserPaint);
      x-=userW;
    }
    canvas.drawText(st.name,RIGHT - mPaddingRight - st.nameWidth- 1,y - 1,mShadowPaint);
    canvas.drawText(st.name,RIGHT - mPaddingRight - st.nameWidth- 1,y + 1,mShadowPaint);
    canvas.drawText(st.name,RIGHT - mPaddingRight - st.nameWidth + 1,y - 1,mShadow2Paint);
    canvas.drawText(st.name,RIGHT - mPaddingRight - st.nameWidth + 1,y + 1,mShadow2Paint);
    Paint p=mLoadPaint;
    if (st.added)     p=mAddedPaint;
    if (st.removed)     p=mRemovedPaint;
    canvas.drawText(st.name,RIGHT - mPaddingRight - st.nameWidth,y,p);
  }
}
