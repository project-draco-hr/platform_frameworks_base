{
  if (DEBUG)   Log.d(TAG,"Reset GPS properties, previous size = " + properties.size());
  loadPropertiesFromResource(context,properties);
  boolean isPropertiesLoadedFromFile=false;
  final String gpsHardware=SystemProperties.get("ro.hardware.gps");
  if (!TextUtils.isEmpty(gpsHardware)) {
    final String propFilename=PROPERTIES_FILE_PREFIX + "." + gpsHardware+ PROPERTIES_FILE_SUFFIX;
    isPropertiesLoadedFromFile=loadPropertiesFromFile(propFilename,properties);
  }
  if (!isPropertiesLoadedFromFile) {
    loadPropertiesFromFile(DEFAULT_PROPERTIES_FILE,properties);
  }
  if (DEBUG)   Log.d(TAG,"GPS properties reloaded, size = " + properties.size());
  setSuplHostPort(properties.getProperty("SUPL_HOST"),properties.getProperty("SUPL_PORT"));
  mC2KServerHost=properties.getProperty("C2K_HOST");
  String portString=properties.getProperty("C2K_PORT");
  if (mC2KServerHost != null && portString != null) {
    try {
      mC2KServerPort=Integer.parseInt(portString);
    }
 catch (    NumberFormatException e) {
      Log.e(TAG,"unable to parse C2K_PORT: " + portString);
    }
  }
  if (native_is_gnss_configuration_supported()) {
    try {
      ByteArrayOutputStream baos=new ByteArrayOutputStream(4096);
      properties.store(baos,null);
      native_configuration_update(baos.toString());
      if (DEBUG)       Log.d(TAG,"final config = " + baos.toString());
    }
 catch (    IOException ex) {
      Log.e(TAG,"failed to dump properties contents");
    }
  }
 else   if (DEBUG) {
    Log.d(TAG,"Skipped configuration update because GNSS configuration in GPS HAL is not" + " supported");
  }
  String suplESProperty=mProperties.getProperty("SUPL_ES");
  if (suplESProperty != null) {
    try {
      mSuplEsEnabled=(Integer.parseInt(suplESProperty) == 1);
    }
 catch (    NumberFormatException e) {
      Log.e(TAG,"unable to parse SUPL_ES: " + suplESProperty);
    }
  }
}
