{
  if (settings == null || callback == null) {
    throw new IllegalArgumentException("settings or callback is null");
  }
synchronized (mLeScanClients) {
    if (mLeScanClients.get(settings) != null) {
      postCallbackError(callback,ScanCallback.SCAN_ALREADY_STARTED);
      return;
    }
    BleScanCallbackWrapper wrapper=new BleScanCallbackWrapper(mBluetoothGatt,filters,settings,callback);
    try {
      UUID uuid=UUID.randomUUID();
      mBluetoothGatt.registerClient(new ParcelUuid(uuid),wrapper);
      if (wrapper.scanStarted()) {
        mLeScanClients.put(settings,wrapper);
      }
 else {
        postCallbackError(callback,ScanCallback.APPLICATION_REGISTRATION_FAILED);
        return;
      }
    }
 catch (    RemoteException e) {
      Log.e(TAG,"GATT service exception when starting scan",e);
      postCallbackError(callback,ScanCallback.GATT_SERVICE_FAILURE);
    }
  }
}
