{
  mPeekHeight=getPeekHeight();
  if (DEBUG)   logf("peek to height=%.1f",mPeekHeight);
  if (mHeightAnimator != null) {
    return;
  }
  mPeekAnimator=ObjectAnimator.ofFloat(this,"expandedHeight",mPeekHeight).setDuration(250);
  mPeekAnimator.setInterpolator(mLinearOutSlowInInterpolator);
  mPeekAnimator.addListener(new AnimatorListenerAdapter(){
    private boolean mCancelled;
    @Override public void onAnimationCancel(    Animator animation){
      mCancelled=true;
    }
    @Override public void onAnimationEnd(    Animator animation){
      mPeekAnimator=null;
      if (mCollapseAfterPeek && !mCancelled) {
        postOnAnimation(new Runnable(){
          @Override public void run(){
            collapse();
          }
        }
);
      }
      mCollapseAfterPeek=false;
    }
  }
);
  notifyExpandingStarted();
  mPeekAnimator.start();
  mJustPeeked=true;
}
