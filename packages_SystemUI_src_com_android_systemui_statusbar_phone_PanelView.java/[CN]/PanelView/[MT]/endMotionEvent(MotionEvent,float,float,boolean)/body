{
  mTrackingPointer=-1;
  if ((mTracking && mTouchSlopExceeded) || Math.abs(x - mInitialTouchX) > mTouchSlop || Math.abs(y - mInitialTouchY) > mTouchSlop || event.getActionMasked() == MotionEvent.ACTION_CANCEL || forceCancel) {
    float vel=0f;
    float vectorVel=0f;
    if (mVelocityTracker != null) {
      mVelocityTracker.computeCurrentVelocity(1000);
      vel=mVelocityTracker.getYVelocity();
      vectorVel=(float)Math.hypot(mVelocityTracker.getXVelocity(),mVelocityTracker.getYVelocity());
    }
    boolean expand=flingExpands(vel,vectorVel,x,y) || event.getActionMasked() == MotionEvent.ACTION_CANCEL || forceCancel;
    onTrackingStopped(expand);
    DozeLog.traceFling(expand,mTouchAboveFalsingThreshold,mStatusBar.isFalsingThresholdNeeded(),mStatusBar.isScreenOnComingFromTouch());
    if (!expand && mStatusBar.getBarState() == StatusBarState.KEYGUARD) {
      float displayDensity=mStatusBar.getDisplayDensity();
      int heightDp=(int)Math.abs((y - mInitialTouchY) / displayDensity);
      int velocityDp=(int)Math.abs(vel / displayDensity);
      EventLogTags.writeSysuiLockscreenGesture(EventLogConstants.SYSUI_LOCKSCREEN_GESTURE_SWIPE_UP_UNLOCK,heightDp,velocityDp);
    }
    fling(vel,expand,isFalseTouch(x,y));
    mUpdateFlingOnLayout=expand && mPanelClosedOnDown && !mHasLayoutedSinceDown;
    if (mUpdateFlingOnLayout) {
      mUpdateFlingVelocity=vel;
    }
  }
 else {
    boolean expands=onEmptySpaceClick(mInitialTouchX);
    onTrackingStopped(expands);
  }
  if (mVelocityTracker != null) {
    mVelocityTracker.recycle();
    mVelocityTracker=null;
  }
  mPeekTouching=false;
}
