{
  if (nri.messenger == null)   return;
  Bundle bundle=new Bundle();
  bundle.putParcelable(NetworkRequest.class.getSimpleName(),new NetworkRequest(nri.request));
  Message msg=Message.obtain();
  if (notificationType != ConnectivityManager.CALLBACK_UNAVAIL && notificationType != ConnectivityManager.CALLBACK_RELEASED) {
    bundle.putParcelable(Network.class.getSimpleName(),networkAgent.network);
  }
switch (notificationType) {
case ConnectivityManager.CALLBACK_LOSING:
{
      msg.arg1=30 * 1000;
      break;
    }
case ConnectivityManager.CALLBACK_CAP_CHANGED:
{
    bundle.putParcelable(NetworkCapabilities.class.getSimpleName(),new NetworkCapabilities(networkAgent.networkCapabilities));
    break;
  }
case ConnectivityManager.CALLBACK_IP_CHANGED:
{
  bundle.putParcelable(LinkProperties.class.getSimpleName(),new LinkProperties(networkAgent.linkProperties));
  break;
}
}
msg.what=notificationType;
msg.setData(bundle);
try {
if (VDBG) {
log("sending notification " + notifyTypeToName(notificationType) + " for "+ nri.request);
}
nri.messenger.send(msg);
}
 catch (RemoteException e) {
loge("RemoteException caught trying to send a callback msg for " + nri.request);
}
}
