{
  if (DBG) {
    log("setProvNotificationVisibleIntent: E visible=" + visible + " networkType="+ networkType+ " extraInfo="+ extraInfo);
  }
  Resources r=Resources.getSystem();
  NotificationManager notificationManager=(NotificationManager)mContext.getSystemService(Context.NOTIFICATION_SERVICE);
  if (visible) {
    CharSequence title;
    CharSequence details;
    int icon;
    Notification notification=new Notification();
switch (networkType) {
case ConnectivityManager.TYPE_WIFI:
      title=r.getString(R.string.wifi_available_sign_in,0);
    details=r.getString(R.string.network_available_sign_in_detailed,extraInfo);
  icon=R.drawable.stat_notify_wifi_in_range;
break;
case ConnectivityManager.TYPE_MOBILE:
case ConnectivityManager.TYPE_MOBILE_HIPRI:
title=r.getString(R.string.network_available_sign_in,0);
details=mTelephonyManager.getNetworkOperatorName();
icon=R.drawable.stat_notify_rssi_in_range;
break;
default :
title=r.getString(R.string.network_available_sign_in,0);
details=r.getString(R.string.network_available_sign_in_detailed,extraInfo);
icon=R.drawable.stat_notify_rssi_in_range;
break;
}
notification.when=0;
notification.icon=icon;
notification.flags=Notification.FLAG_AUTO_CANCEL;
notification.tickerText=title;
notification.color=mContext.getResources().getColor(com.android.internal.R.color.system_notification_accent_color);
notification.setLatestEventInfo(mContext,title,details,notification.contentIntent);
notification.contentIntent=intent;
try {
notificationManager.notify(NOTIFICATION_ID,id,notification);
}
 catch (NullPointerException npe) {
loge("setNotificaitionVisible: visible notificationManager npe=" + npe);
npe.printStackTrace();
}
}
 else {
try {
notificationManager.cancel(NOTIFICATION_ID,id);
}
 catch (NullPointerException npe) {
loge("setNotificaitionVisible: cancel notificationManager npe=" + npe);
npe.printStackTrace();
}
}
mIsNotificationVisible=visible;
}
