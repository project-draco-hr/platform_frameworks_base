{
  NetworkAgentInfo nai=mNetworkAgentInfos.get(msg.replyTo);
  if (nai != null) {
    if (DBG) {
      log(nai.name() + " got DISCONNECTED, was satisfying " + nai.networkRequests.size());
    }
    if (nai.networkInfo.isConnected()) {
      nai.networkInfo.setDetailedState(NetworkInfo.DetailedState.DISCONNECTED,null,null);
    }
    final boolean wasDefault=isDefaultNetwork(nai);
    if (wasDefault) {
      mDefaultInetConditionPublished=0;
    }
    notifyIfacesChangedForNetworkStats();
    notifyNetworkCallbacks(nai,ConnectivityManager.CALLBACK_LOST);
    mKeepaliveTracker.handleStopAllKeepalives(nai,ConnectivityManager.PacketKeepalive.ERROR_INVALID_NETWORK);
    nai.networkMonitor.sendMessage(NetworkMonitor.CMD_NETWORK_DISCONNECTED);
    mNetworkAgentInfos.remove(msg.replyTo);
    updateClat(null,nai.linkProperties,nai);
synchronized (mNetworkForNetId) {
      mNetworkForNetId.remove(nai.network.netId);
    }
    for (int i=0; i < nai.networkRequests.size(); i++) {
      NetworkRequest request=nai.networkRequests.valueAt(i);
      NetworkAgentInfo currentNetwork=mNetworkForRequestId.get(request.requestId);
      if (currentNetwork != null && currentNetwork.network.netId == nai.network.netId) {
        mNetworkForRequestId.remove(request.requestId);
        sendUpdatedScoreToFactories(request,0);
      }
    }
    if (nai.networkRequests.get(mDefaultRequest.requestId) != null) {
      removeDataActivityTracking(nai);
      notifyLockdownVpn(nai);
      requestNetworkTransitionWakelock(nai.name());
    }
    mLegacyTypeTracker.remove(nai,wasDefault);
    rematchAllNetworksAndRequests(null,0);
    if (wasDefault && getDefaultNetwork() == null) {
      logConnectivityServiceChangeEvent(null,nai);
    }
    if (nai.created) {
      try {
        mNetd.removeNetwork(nai.network.netId);
      }
 catch (      Exception e) {
        loge("Exception removing network: " + e);
      }
    }
synchronized (mNetworkForNetId) {
      mNetIdInUse.delete(nai.network.netId);
    }
  }
 else {
    NetworkFactoryInfo nfi=mNetworkFactoryInfos.remove(msg.replyTo);
    if (DBG && nfi != null)     log("unregisterNetworkFactory for " + nfi.name);
  }
}
