{
  if ((lp == null) || (r == null)) {
    if (DBG)     log("modifyRoute got unexpected null: " + lp + ", "+ r);
    return false;
  }
  if (cycleCount > MAX_HOSTROUTE_CYCLE_COUNT) {
    loge("Error modifying route - too much recursion");
    return false;
  }
  String ifaceName=r.getInterface();
  if (ifaceName == null) {
    loge("Error modifying route - no interface name");
    return false;
  }
  if (r.hasGateway()) {
    RouteInfo bestRoute=RouteInfo.selectBestRoute(lp.getAllRoutes(),r.getGateway());
    if (bestRoute != null) {
      if (bestRoute.getGateway().equals(r.getGateway())) {
        bestRoute=RouteInfo.makeHostRoute(r.getGateway(),ifaceName);
      }
 else {
        bestRoute=RouteInfo.makeHostRoute(r.getGateway(),bestRoute.getGateway(),ifaceName);
      }
      modifyRoute(lp,bestRoute,cycleCount + 1,doAdd,toDefaultTable,exempt,netId,legacy,uid);
    }
  }
  if (doAdd) {
    if (VDBG)     log("Adding " + r + " for interface "+ ifaceName);
    try {
      if (toDefaultTable) {
synchronized (mRoutesLock) {
          mAddedRoutes.add(r);
          if (legacy) {
            mNetd.addLegacyRouteForNetId(netId,r,uid);
          }
 else {
            mNetd.addRoute(netId,r);
          }
          if (exempt) {
            LinkAddress dest=r.getDestinationLinkAddress();
            if (!mExemptAddresses.contains(dest)) {
              mNetd.setHostExemption(dest);
              mExemptAddresses.add(dest);
            }
          }
        }
      }
 else {
        if (legacy) {
          mNetd.addLegacyRouteForNetId(netId,r,uid);
        }
 else {
          mNetd.addRoute(netId,r);
        }
      }
    }
 catch (    Exception e) {
      if (DBG)       loge("Exception trying to add a route: " + e);
      return false;
    }
  }
 else {
    if (toDefaultTable) {
synchronized (mRoutesLock) {
        mAddedRoutes.remove(r);
        if (mAddedRoutes.contains(r) == false) {
          if (VDBG)           log("Removing " + r + " for interface "+ ifaceName);
          try {
            if (legacy) {
              mNetd.removeLegacyRouteForNetId(netId,r,uid);
            }
 else {
              mNetd.removeRoute(netId,r);
            }
            LinkAddress dest=r.getDestinationLinkAddress();
            if (mExemptAddresses.contains(dest)) {
              mNetd.clearHostExemption(dest);
              mExemptAddresses.remove(dest);
            }
          }
 catch (          Exception e) {
            if (VDBG)             loge("Exception trying to remove a route: " + e);
            return false;
          }
        }
 else {
          if (VDBG)           log("not removing " + r + " as it's still in use");
        }
      }
    }
 else {
      if (VDBG)       log("Removing " + r + " for interface "+ ifaceName);
      try {
        if (legacy) {
          mNetd.removeLegacyRouteForNetId(netId,r,uid);
        }
 else {
          mNetd.removeRoute(netId,r);
        }
      }
 catch (      Exception e) {
        if (VDBG)         loge("Exception trying to remove a route: " + e);
        return false;
      }
    }
  }
  return true;
}
