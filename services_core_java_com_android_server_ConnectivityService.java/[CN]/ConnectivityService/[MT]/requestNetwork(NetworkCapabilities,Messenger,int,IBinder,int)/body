{
  if (networkCapabilities.hasCapability(NetworkCapabilities.NET_CAPABILITY_NOT_RESTRICTED) == false) {
    enforceConnectivityInternalPermission();
  }
 else {
    enforceChangePermission();
  }
  networkCapabilities=new NetworkCapabilities(networkCapabilities);
  if (networkCapabilities.hasCapability(NetworkCapabilities.NET_CAPABILITY_NOT_METERED) == false) {
    final int uidRules;
synchronized (mRulesLock) {
      uidRules=mUidRules.get(Binder.getCallingUid(),RULE_ALLOW_ALL);
    }
    if ((uidRules & RULE_REJECT_METERED) != 0) {
      networkCapabilities.addCapability(NetworkCapabilities.NET_CAPABILITY_NOT_METERED);
    }
  }
  if (timeoutMs < 0 || timeoutMs > ConnectivityManager.MAX_NETWORK_REQUEST_TIMEOUT_MS) {
    throw new IllegalArgumentException("Bad timeout specified");
  }
  NetworkRequest networkRequest=new NetworkRequest(networkCapabilities,legacyType,nextNetworkRequestId());
  if (DBG)   log("requestNetwork for " + networkRequest);
  NetworkRequestInfo nri=new NetworkRequestInfo(messenger,networkRequest,binder,NetworkRequestInfo.REQUEST);
  mHandler.sendMessage(mHandler.obtainMessage(EVENT_REGISTER_NETWORK_REQUEST,nri));
  if (timeoutMs > 0) {
    mHandler.sendMessageDelayed(mHandler.obtainMessage(EVENT_TIMEOUT_NETWORK_REQUEST,nri),timeoutMs);
  }
  return networkRequest;
}
