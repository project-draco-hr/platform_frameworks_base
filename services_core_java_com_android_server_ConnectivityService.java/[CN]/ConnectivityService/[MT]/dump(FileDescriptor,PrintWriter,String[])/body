{
  final IndentingPrintWriter pw=new IndentingPrintWriter(writer,"  ");
  if (mContext.checkCallingOrSelfPermission(android.Manifest.permission.DUMP) != PackageManager.PERMISSION_GRANTED) {
    pw.println("Permission Denial: can't dump ConnectivityService " + "from from pid=" + Binder.getCallingPid() + ", uid="+ Binder.getCallingUid());
    return;
  }
  pw.print("NetworkFactories for:");
  for (  NetworkFactoryInfo nfi : mNetworkFactoryInfos.values()) {
    pw.print(" " + nfi.name);
  }
  pw.println();
  pw.println();
  NetworkAgentInfo defaultNai=mNetworkForRequestId.get(mDefaultRequest.requestId);
  pw.print("Active default network: ");
  if (defaultNai == null) {
    pw.println("none");
  }
 else {
    pw.println(defaultNai.network.netId);
  }
  pw.println();
  pw.println("Current Networks:");
  pw.increaseIndent();
  for (  NetworkAgentInfo nai : mNetworkAgentInfos.values()) {
    pw.println(nai.toString());
    pw.increaseIndent();
    pw.println("Requests:");
    pw.increaseIndent();
    for (int i=0; i < nai.networkRequests.size(); i++) {
      pw.println(nai.networkRequests.valueAt(i).toString());
    }
    pw.decreaseIndent();
    pw.println("Lingered:");
    pw.increaseIndent();
    for (    NetworkRequest nr : nai.networkLingered)     pw.println(nr.toString());
    pw.decreaseIndent();
    pw.decreaseIndent();
  }
  pw.decreaseIndent();
  pw.println();
  pw.println("Network Requests:");
  pw.increaseIndent();
  for (  NetworkRequestInfo nri : mNetworkRequests.values()) {
    pw.println(nri.toString());
  }
  pw.println();
  pw.decreaseIndent();
  mLegacyTypeTracker.dump(pw);
synchronized (this) {
    pw.print("mNetTransitionWakeLock: currently " + (mNetTransitionWakeLock.isHeld() ? "" : "not ") + "held");
    if (!TextUtils.isEmpty(mNetTransitionWakeLockCausedBy)) {
      pw.println(", last requested for " + mNetTransitionWakeLockCausedBy);
    }
 else {
      pw.println(", last requested never");
    }
  }
  pw.println();
  mTethering.dump(fd,pw,args);
  if (mInetLog != null && mInetLog.size() > 0) {
    pw.println();
    pw.println("Inet condition reports:");
    pw.increaseIndent();
    for (int i=0; i < mInetLog.size(); i++) {
      pw.println(mInetLog.get(i));
    }
    pw.decreaseIndent();
  }
}
