{
  LinkProperties newLp=networkAgent.linkProperties;
  int netId=networkAgent.network.netId;
  if (networkAgent.clatd != null) {
    networkAgent.clatd.fixupLinkProperties(oldLp);
  }
  if (networkAgent.apfFilter != null) {
    networkAgent.apfFilter.updateFilter();
  }
  updateInterfaces(newLp,oldLp,netId);
  updateMtu(newLp,oldLp);
  updateTcpBufferSizes(networkAgent);
  final boolean useDefaultDns=false;
  final boolean flushDns=updateRoutes(newLp,oldLp,netId);
  updateDnses(newLp,oldLp,netId,flushDns,useDefaultDns);
  updateClat(newLp,oldLp,networkAgent);
  if (isDefaultNetwork(networkAgent)) {
    handleApplyDefaultProxy(newLp.getHttpProxy());
  }
 else {
    updateProxy(newLp,oldLp,networkAgent);
  }
  if (!Objects.equals(newLp,oldLp)) {
    notifyIfacesChanged();
    notifyNetworkCallbacks(networkAgent,ConnectivityManager.CALLBACK_IP_CHANGED);
  }
  mKeepaliveTracker.handleCheckKeepalivesStillValid(networkAgent);
}
