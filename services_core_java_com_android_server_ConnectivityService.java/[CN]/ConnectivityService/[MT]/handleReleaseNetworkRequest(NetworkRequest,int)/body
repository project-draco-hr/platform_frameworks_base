{
  NetworkRequestInfo nri=mNetworkRequests.get(request);
  if (nri != null) {
    if (nri.mUid != callingUid) {
      if (DBG)       log("Attempt to release unowned NetworkRequest " + request);
      return;
    }
    if (DBG)     log("releasing NetworkRequest " + request);
    nri.unlinkDeathRecipient();
    mNetworkRequests.remove(request);
    NetworkAgentInfo affectedNetwork=mNetworkForRequestId.get(nri.request.requestId);
    if (affectedNetwork != null) {
      mNetworkForRequestId.remove(nri.request.requestId);
      affectedNetwork.networkRequests.remove(nri.request.requestId);
      if (VDBG) {
        log(" Removing from current network " + affectedNetwork.name() + ", leaving "+ affectedNetwork.networkRequests.size()+ " requests.");
      }
      if (nri.isRequest && nri.request.legacyType != TYPE_NONE) {
        mLegacyTypeTracker.remove(nri.request.legacyType,affectedNetwork);
      }
    }
    if (nri.isRequest) {
      for (      NetworkFactoryInfo nfi : mNetworkFactoryInfos.values()) {
        nfi.asyncChannel.sendMessage(android.net.NetworkFactory.CMD_CANCEL_REQUEST,nri.request);
      }
      if (affectedNetwork != null) {
        boolean keep=affectedNetwork.isVPN();
        for (int i=0; i < affectedNetwork.networkRequests.size() && !keep; i++) {
          NetworkRequest r=affectedNetwork.networkRequests.valueAt(i);
          if (mNetworkRequests.get(r).isRequest) {
            keep=true;
          }
        }
        if (keep == false) {
          if (DBG)           log("no live requests for " + affectedNetwork.name() + "; disconnecting");
          affectedNetwork.asyncChannel.disconnect();
        }
      }
    }
    callCallbackForRequest(nri,null,ConnectivityManager.CALLBACK_RELEASED);
  }
}
