{
  FileReader fileReader=null;
  XmlPullParser parser=null;
  Configuration config=mContext.getResources().getConfiguration();
  try {
    fileReader=new FileReader(mProvisioningUrlFile);
    parser=Xml.newPullParser();
    parser.setInput(fileReader);
    XmlUtils.beginDocument(parser,TAG_PROVISIONING_URLS);
    while (true) {
      XmlUtils.nextElement(parser);
      String element=parser.getName();
      if (element == null)       break;
      if (element.equals(TAG_PROVISIONING_URL)) {
        String mcc=parser.getAttributeValue(null,ATTR_MCC);
        try {
          if (mcc != null && Integer.parseInt(mcc) == config.mcc) {
            String mnc=parser.getAttributeValue(null,ATTR_MNC);
            if (mnc != null && Integer.parseInt(mnc) == config.mnc) {
              parser.next();
              if (parser.getEventType() == XmlPullParser.TEXT) {
                return parser.getText();
              }
            }
          }
        }
 catch (        NumberFormatException e) {
          loge("NumberFormatException in getProvisioningUrlBaseFromFile: " + e);
        }
      }
    }
    return null;
  }
 catch (  FileNotFoundException e) {
    loge("Carrier Provisioning Urls file not found");
  }
catch (  XmlPullParserException e) {
    loge("Xml parser exception reading Carrier Provisioning Urls file: " + e);
  }
catch (  IOException e) {
    loge("I/O exception reading Carrier Provisioning Urls file: " + e);
  }
 finally {
    if (fileReader != null) {
      try {
        fileReader.close();
      }
 catch (      IOException e) {
      }
    }
  }
  return null;
}
