{
  if (!isTypeSupported(type)) {
    return;
  }
  if (VDBG)   log("Adding agent " + nai + " for legacy network type "+ type);
  ArrayList<NetworkAgentInfo> list=mTypeLists[type];
  if (list.contains(nai)) {
    loge("Attempting to register duplicate agent for type " + type + ": "+ nai);
    return;
  }
  list.add(nai);
  final boolean isDefaultNetwork=isDefaultNetwork(nai);
  if (list.size() == 1 || isDefaultNetwork) {
    maybeLogBroadcast(nai,true,type,isDefaultNetwork);
    sendLegacyNetworkBroadcast(nai,true,type);
  }
}
