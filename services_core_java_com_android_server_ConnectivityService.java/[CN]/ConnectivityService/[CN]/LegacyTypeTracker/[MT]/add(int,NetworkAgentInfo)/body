{
  if (!isTypeSupported(type)) {
    return;
  }
  if (VDBG)   log("Adding agent " + nai + " for legacy network type "+ type);
  ArrayList<NetworkAgentInfo> list=mTypeLists[type];
  if (list.contains(nai)) {
    loge("Attempting to register duplicate agent for type " + type + ": "+ nai);
    return;
  }
  if (list.isEmpty() || isDefaultNetwork(nai)) {
    if (VDBG)     log("Sending connected broadcast for type " + type + "isDefaultNetwork="+ isDefaultNetwork(nai));
    sendLegacyNetworkBroadcast(nai,true,type);
  }
  list.add(nai);
}
