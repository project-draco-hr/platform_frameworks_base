{
  boolean expandable=compatibilityInfo.isConfiguredExpandable();
  boolean largeScreens=compatibilityInfo.isConfiguredLargeScreens();
  boolean xlargeScreens=compatibilityInfo.isConfiguredXLargeScreens();
  if (!expandable) {
    if ((screenLayout & Configuration.SCREENLAYOUT_COMPAT_NEEDED) == 0) {
      expandable=true;
      compatibilityInfo.setExpandable(true);
    }
 else {
      compatibilityInfo.setExpandable(false);
    }
  }
  if (!largeScreens) {
    if ((screenLayout & Configuration.SCREENLAYOUT_SIZE_MASK) != Configuration.SCREENLAYOUT_SIZE_LARGE) {
      largeScreens=true;
      compatibilityInfo.setLargeScreens(true);
    }
 else {
      compatibilityInfo.setLargeScreens(false);
    }
  }
  if (!xlargeScreens) {
    if ((screenLayout & Configuration.SCREENLAYOUT_SIZE_MASK) != Configuration.SCREENLAYOUT_SIZE_XLARGE) {
      xlargeScreens=true;
      compatibilityInfo.setXLargeScreens(true);
    }
 else {
      compatibilityInfo.setXLargeScreens(false);
    }
  }
  if (!expandable || (!largeScreens && !xlargeScreens)) {
    int defaultWidth;
    int defaultHeight;
switch (orientation) {
case Configuration.ORIENTATION_LANDSCAPE:
{
        defaultWidth=(int)(CompatibilityInfo.DEFAULT_PORTRAIT_HEIGHT * density + 0.5f);
        defaultHeight=(int)(CompatibilityInfo.DEFAULT_PORTRAIT_WIDTH * density + 0.5f);
        break;
      }
case Configuration.ORIENTATION_PORTRAIT:
case Configuration.ORIENTATION_SQUARE:
default :
{
      defaultWidth=(int)(CompatibilityInfo.DEFAULT_PORTRAIT_WIDTH * density + 0.5f);
      defaultHeight=(int)(CompatibilityInfo.DEFAULT_PORTRAIT_HEIGHT * density + 0.5f);
      break;
    }
case Configuration.ORIENTATION_UNDEFINED:
{
    return;
  }
}
if (defaultWidth < widthPixels) {
widthPixels=defaultWidth;
}
if (defaultHeight < heightPixels) {
heightPixels=defaultHeight;
}
}
if (compatibilityInfo.isScalingRequired()) {
float invertedRatio=compatibilityInfo.applicationInvertedScale;
density*=invertedRatio;
densityDpi=(int)((density * DisplayMetrics.DENSITY_DEFAULT) + .5f);
scaledDensity*=invertedRatio;
xdpi*=invertedRatio;
ydpi*=invertedRatio;
widthPixels=(int)(widthPixels * invertedRatio + 0.5f);
heightPixels=(int)(heightPixels * invertedRatio + 0.5f);
}
}
