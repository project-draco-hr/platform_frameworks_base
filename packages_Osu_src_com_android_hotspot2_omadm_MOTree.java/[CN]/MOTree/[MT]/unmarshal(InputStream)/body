{
  boolean strip=true;
  StringBuilder tree=new StringBuilder();
  for (; ; ) {
    int octet=in.read();
    if (octet < 0) {
      return null;
    }
 else     if (octet > ' ') {
      tree.append((char)octet);
      strip=false;
    }
 else     if (!strip) {
      break;
    }
  }
  if (!tree.toString().equals("tree")) {
    throw new IOException("Not a tree: " + tree);
  }
  String version=OMAConstants.deserializeString(in);
  int next=in.read();
  if (next != '(') {
    throw new IOException("Expected URN in tree definition");
  }
  String urn=OMAConstants.readURN(in);
  OMAConstructed root=OMANode.unmarshal(in);
  return new MOTree(urn,version,root);
}
