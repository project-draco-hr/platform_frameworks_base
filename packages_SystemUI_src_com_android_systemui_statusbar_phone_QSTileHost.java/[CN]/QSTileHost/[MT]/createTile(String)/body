{
  if (tileSpec.equals("wifi"))   return new WifiTile(this,false);
 else   if (tileSpec.equals("bt"))   return new BluetoothTile(this,false);
 else   if (tileSpec.equals("inversion"))   return new ColorInversionTile(this);
 else   if (tileSpec.equals("cell"))   return new CellularTile(this);
 else   if (tileSpec.equals("airplane"))   return new AirplaneModeTile(this);
 else   if (tileSpec.equals("work"))   return new WorkModeTile(this);
 else   if (tileSpec.equals("dnd"))   return new DndTile(this);
 else   if (tileSpec.equals("rotation"))   return new RotationLockTile(this);
 else   if (tileSpec.equals("flashlight"))   return new FlashlightTile(this);
 else   if (tileSpec.equals("location"))   return new LocationTile(this);
 else   if (tileSpec.equals("cast"))   return new CastTile(this);
 else   if (tileSpec.equals("hotspot"))   return new HotspotTile(this);
 else   if (tileSpec.equals("user"))   return new UserTile(this);
 else   if (tileSpec.equals("battery"))   return new BatteryTile(this);
 else   if (tileSpec.equals("dwifi"))   return new WifiTile(this,true);
 else   if (tileSpec.equals("dbt"))   return new BluetoothTile(this,true);
 else   if (tileSpec.equals("qwifi"))   return new QWifiTile(this);
 else   if (tileSpec.equals("qbt"))   return new QBluetoothTile(this);
 else   if (tileSpec.equals("qairplane"))   return new QAirplaneTile(this);
 else   if (tileSpec.equals("qrotation"))   return new QRotationLockTile(this);
 else   if (tileSpec.equals("qflashlight"))   return new QFlashlightTile(this);
 else   if (tileSpec.equals("qlock"))   return new QLockTile(this);
 else   if (tileSpec.startsWith(IntentTile.PREFIX))   return IntentTile.create(this,tileSpec);
 else   if (tileSpec.startsWith(CustomTile.PREFIX))   return CustomTile.create(this,tileSpec);
 else   throw new IllegalArgumentException("Bad tile spec: " + tileSpec);
}
