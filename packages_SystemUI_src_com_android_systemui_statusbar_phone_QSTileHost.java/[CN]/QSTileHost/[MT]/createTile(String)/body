{
  if (tileSpec.equals("wifi"))   return WifiTile.isSupported(this) ? new WifiTile(this) : null;
 else   if (tileSpec.equals("bt"))   return BluetoothTile.isSupported(this) ? new BluetoothTile(this) : null;
 else   if (tileSpec.equals("cell"))   return CellularTile.isSupported(this) ? new CellularTile(this) : null;
 else   if (tileSpec.equals("dnd"))   return DndTile.isSupported(this) ? new DndTile(this) : null;
 else   if (tileSpec.equals("inversion"))   return new ColorInversionTile(this);
 else   if (tileSpec.equals("airplane"))   return new AirplaneModeTile(this);
 else   if (tileSpec.equals("work"))   return new WorkModeTile(this);
 else   if (tileSpec.equals("rotation"))   return new RotationLockTile(this);
 else   if (tileSpec.equals("flashlight"))   return new FlashlightTile(this);
 else   if (tileSpec.equals("location"))   return new LocationTile(this);
 else   if (tileSpec.equals("cast"))   return new CastTile(this);
 else   if (tileSpec.equals("hotspot"))   return new HotspotTile(this);
 else   if (tileSpec.equals("user"))   return new UserTile(this);
 else   if (tileSpec.equals("battery"))   return new BatteryTile(this);
 else   if (tileSpec.equals(ColorMatrixTile.COLOR_MATRIX_SPEC))   return new ColorMatrixTile(this);
 else   if (tileSpec.startsWith(IntentTile.PREFIX))   return IntentTile.create(this,tileSpec);
 else   if (tileSpec.startsWith(CustomTile.PREFIX))   return CustomTile.create(this,tileSpec);
 else {
    Log.w(TAG,"Bad tile spec: " + tileSpec);
    return null;
  }
}
