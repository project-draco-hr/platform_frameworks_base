{
  if (DEBUG)   Log.d(TAG,"Recreating tiles");
  final List<String> tileSpecs=loadTileSpecs();
  for (  Map.Entry<String,QSTile<?>> tile : mTiles.entrySet()) {
    if (!tileSpecs.contains(tile.getKey())) {
      if (DEBUG)       Log.d(TAG,"Destroying tile: " + tile.getKey());
      tile.getValue().destroy();
    }
  }
  final LinkedHashMap<String,QSTile<?>> newTiles=new LinkedHashMap<>();
  for (  String tileSpec : tileSpecs) {
    if (mTiles.containsKey(tileSpec)) {
      newTiles.put(tileSpec,mTiles.get(tileSpec));
    }
 else {
      if (DEBUG)       Log.d(TAG,"Creating tile: " + tileSpec);
      try {
        newTiles.put(tileSpec,createTile(tileSpec));
      }
 catch (      Throwable t) {
        Log.w(TAG,"Error creating tile for spec: " + tileSpec,t);
      }
    }
  }
  if (mTiles.equals(newTiles))   return;
  mTiles.clear();
  mTiles.putAll(newTiles);
  if (mCallback != null) {
    mCallback.onTilesChanged();
  }
}
