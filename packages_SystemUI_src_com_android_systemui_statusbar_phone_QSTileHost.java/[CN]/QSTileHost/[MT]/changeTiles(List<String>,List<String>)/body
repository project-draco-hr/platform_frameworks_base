{
  final int NP=previousTiles.size();
  final int NA=newTiles.size();
  for (int i=0; i < NP; i++) {
    String tileSpec=previousTiles.get(i);
    if (!tileSpec.startsWith(CustomTile.PREFIX))     continue;
    if (!newTiles.contains(tileSpec)) {
      Intent intent=new Intent().setComponent(CustomTile.getComponentFromSpec(tileSpec));
      TileLifecycleManager lifecycleManager=new TileLifecycleManager(new Handler(),mContext,intent,new UserHandle(ActivityManager.getCurrentUser()));
      lifecycleManager.onStopListening();
      lifecycleManager.onTileRemoved();
      lifecycleManager.flushMessagesAndUnbind();
    }
  }
  for (int i=0; i < NA; i++) {
    String tileSpec=newTiles.get(i);
    if (!tileSpec.startsWith(CustomTile.PREFIX))     continue;
    if (!previousTiles.contains(tileSpec)) {
      Intent intent=new Intent().setComponent(CustomTile.getComponentFromSpec(tileSpec));
      TileLifecycleManager lifecycleManager=new TileLifecycleManager(new Handler(),mContext,intent,new UserHandle(ActivityManager.getCurrentUser()));
      lifecycleManager.onTileAdded();
      lifecycleManager.flushMessagesAndUnbind();
    }
  }
  if (DEBUG)   Log.d(TAG,"saveCurrentTiles " + newTiles);
  Secure.putStringForUser(getContext().getContentResolver(),QSTileHost.TILES_SETTING,TextUtils.join(",",newTiles),ActivityManager.getCurrentUser());
}
