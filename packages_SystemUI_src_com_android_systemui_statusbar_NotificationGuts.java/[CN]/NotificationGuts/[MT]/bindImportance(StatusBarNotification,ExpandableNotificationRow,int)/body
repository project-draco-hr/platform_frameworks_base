{
  final INotificationManager sINM=INotificationManager.Stub.asInterface(ServiceManager.getService(Context.NOTIFICATION_SERVICE));
  final Notification.Topic topic=sbn.getNotification().getTopic() == null ? new Notification.Topic(Notification.TOPIC_DEFAULT,mContext.getString(com.android.internal.R.string.default_notification_topic_label)) : sbn.getNotification().getTopic();
  final RadioButton applyToTopic=(RadioButton)row.findViewById(R.id.apply_to_topic);
  if (sbn.getNotification().getTopic() != null) {
    applyToTopic.setVisibility(View.VISIBLE);
    applyToTopic.setChecked(true);
    applyToTopic.setText(mContext.getString(R.string.apply_to_topic,topic.getLabel()));
    row.findViewById(R.id.apply_to_app).setVisibility(View.VISIBLE);
  }
  final TextView topicSummary=((TextView)row.findViewById(R.id.summary));
  final TextView topicTitle=((TextView)row.findViewById(R.id.title));
  SeekBar seekBar=(SeekBar)row.findViewById(R.id.seekbar);
  seekBar.setMax(4);
  seekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener(){
    @Override public void onProgressChanged(    SeekBar seekBar,    int progress,    boolean fromUser){
      updateTitleAndSummary(progress);
      if (fromUser) {
        try {
          if (applyToTopic.isChecked()) {
            sINM.setTopicImportance(sbn.getPackageName(),sbn.getUid(),topic,progress);
          }
 else {
            sINM.setAppImportance(sbn.getPackageName(),sbn.getUid(),progress);
          }
        }
 catch (        RemoteException e) {
        }
      }
    }
    @Override public void onStartTrackingTouch(    SeekBar seekBar){
    }
    @Override public void onStopTrackingTouch(    SeekBar seekBar){
    }
    private void updateTitleAndSummary(    int progress){
switch (progress) {
case NotificationListenerService.Ranking.IMPORTANCE_NONE:
        topicSummary.setText(mContext.getString(R.string.notification_importance_blocked));
      topicTitle.setText(mContext.getString(R.string.blocked_importance));
    break;
case NotificationListenerService.Ranking.IMPORTANCE_LOW:
  topicSummary.setText(mContext.getString(R.string.notification_importance_low));
topicTitle.setText(mContext.getString(R.string.low_importance));
break;
case NotificationListenerService.Ranking.IMPORTANCE_DEFAULT:
topicSummary.setText(mContext.getString(R.string.notification_importance_default));
topicTitle.setText(mContext.getString(R.string.default_importance));
break;
case NotificationListenerService.Ranking.IMPORTANCE_HIGH:
topicSummary.setText(mContext.getString(R.string.notification_importance_high));
topicTitle.setText(mContext.getString(R.string.high_importance));
break;
case NotificationListenerService.Ranking.IMPORTANCE_MAX:
topicSummary.setText(mContext.getString(R.string.notification_importance_max));
topicTitle.setText(mContext.getString(R.string.max_importance));
break;
}
}
}
);
seekBar.setProgress(importance);
}
