{
  if (getWindowToken() == null) {
    if (notify && mListener != null) {
      mListener.onGutsClosed(this);
    }
    return;
  }
  if (x == -1 || y == -1) {
    x=(getLeft() + getRight()) / 2;
    y=(getTop() + getHeight() / 2);
  }
  final double horz=Math.max(getWidth() - x,x);
  final double vert=Math.max(getHeight() - y,y);
  final float r=(float)Math.hypot(horz,vert);
  final Animator a=ViewAnimationUtils.createCircularReveal(this,x,y,r,0);
  a.setDuration(StackStateAnimator.ANIMATION_DURATION_STANDARD);
  a.setInterpolator(Interpolators.FAST_OUT_LINEAR_IN);
  a.addListener(new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator animation){
      super.onAnimationEnd(animation);
      setVisibility(View.GONE);
    }
  }
);
  a.start();
  setExposed(false,mNeedsFalsingProtection);
  if (notify && mListener != null) {
    mListener.onGutsClosed(this);
  }
}
