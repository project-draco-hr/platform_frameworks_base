{
  int type;
  long currentKeySetId=0;
  int outerDepth=parser.getDepth();
  String recordedVersion=parser.getAttributeValue(null,"version");
  if (recordedVersion == null || Integer.parseInt(recordedVersion) != CURRENT_VERSION) {
    while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && (type != XmlPullParser.END_TAG || parser.getDepth() > outerDepth)) {
      continue;
    }
    for (    PackageSetting p : mPackages.values()) {
      clearPackageKeySetDataLPw(p);
    }
    return;
  }
  while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && (type != XmlPullParser.END_TAG || parser.getDepth() > outerDepth)) {
    if (type == XmlPullParser.END_TAG || type == XmlPullParser.TEXT) {
      continue;
    }
    final String tagName=parser.getName();
    if (tagName.equals("keys")) {
      readKeysLPw(parser);
    }
 else     if (tagName.equals("keysets")) {
      readKeySetListLPw(parser);
    }
 else     if (tagName.equals("lastIssuedKeyId")) {
      lastIssuedKeyId=Long.parseLong(parser.getAttributeValue(null,"value"));
    }
 else     if (tagName.equals("lastIssuedKeySetId")) {
      lastIssuedKeySetId=Long.parseLong(parser.getAttributeValue(null,"value"));
    }
  }
}
