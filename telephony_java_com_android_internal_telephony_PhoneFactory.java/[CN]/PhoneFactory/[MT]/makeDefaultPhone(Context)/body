{
synchronized (Phone.class) {
    if (!sMadeDefaults) {
      sLooper=Looper.myLooper();
      sContext=context;
      if (sLooper == null) {
        throw new RuntimeException("PhoneFactory.makeDefaultPhone must be called from Looper thread");
      }
      int retryCount=0;
      for (; ; ) {
        boolean hasException=false;
        retryCount++;
        try {
          new LocalServerSocket("com.android.internal.telephony");
        }
 catch (        java.io.IOException ex) {
          hasException=true;
        }
        if (!hasException) {
          break;
        }
 else         if (retryCount > SOCKET_OPEN_MAX_RETRY) {
          throw new RuntimeException("PhoneFactory probably already running");
        }
 else {
          try {
            Thread.sleep(SOCKET_OPEN_RETRY_MILLIS);
          }
 catch (          InterruptedException er) {
          }
        }
      }
      sPhoneNotifier=new DefaultPhoneNotifier();
      int networkMode=Settings.Secure.getInt(context.getContentResolver(),Settings.Secure.PREFERRED_NETWORK_MODE,preferredNetworkMode);
      Log.i(LOG_TAG,"Network Mode set to " + Integer.toString(networkMode));
      int cdmaSubscription=Settings.Secure.getInt(context.getContentResolver(),Settings.Secure.PREFERRED_CDMA_SUBSCRIPTION,preferredCdmaSubscription);
      Log.i(LOG_TAG,"Cdma Subscription set to " + Integer.toString(cdmaSubscription));
      sCommandsInterface=new RIL(context,networkMode,cdmaSubscription);
      int phoneType=getPhoneType(networkMode);
      if (phoneType == Phone.PHONE_TYPE_GSM) {
        Log.i(LOG_TAG,"Creating GSMPhone");
        sProxyPhone=new PhoneProxy(new GSMPhone(context,sCommandsInterface,sPhoneNotifier));
      }
 else       if (phoneType == Phone.PHONE_TYPE_CDMA) {
        Log.i(LOG_TAG,"Creating CDMAPhone");
        sProxyPhone=new PhoneProxy(new CDMAPhone(context,sCommandsInterface,sPhoneNotifier));
      }
      sMadeDefaults=true;
    }
  }
}
