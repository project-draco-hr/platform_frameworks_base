{
  final boolean isV30=VCardConfig.isV30(vcardType);
  mVerifier.initForExportTest(vcardType);
  mVerifier.addInputEntry().addContentValues(StructuredName.CONTENT_ITEM_TYPE).put(StructuredName.FAMILY_NAME,"AppropriateFamilyName").put(StructuredName.GIVEN_NAME,"AppropriateGivenName").put(StructuredName.MIDDLE_NAME,"AppropriateMiddleName").put(StructuredName.PREFIX,"AppropriatePrefix").put(StructuredName.SUFFIX,"AppropriateSuffix").put(StructuredName.PHONETIC_FAMILY_NAME,"AppropriatePhoneticFamily").put(StructuredName.PHONETIC_GIVEN_NAME,"AppropriatePhoneticGiven").put(StructuredName.PHONETIC_MIDDLE_NAME,"AppropriatePhoneticMiddle");
  PropertyNodesVerifierElem elem=mVerifier.addPropertyNodesVerifierElem().addExpectedNodeWithOrder("N","AppropriateFamilyName;AppropriateGivenName;AppropriateMiddleName;" + "AppropriatePrefix;AppropriateSuffix",Arrays.asList("AppropriateFamilyName","AppropriateGivenName","AppropriateMiddleName","AppropriatePrefix","AppropriateSuffix")).addExpectedNodeWithOrder("FN","AppropriatePrefix AppropriateGivenName " + "AppropriateMiddleName AppropriateFamilyName AppropriateSuffix").addExpectedNode("X-PHONETIC-FIRST-NAME","AppropriatePhoneticGiven").addExpectedNode("X-PHONETIC-MIDDLE-NAME","AppropriatePhoneticMiddle").addExpectedNode("X-PHONETIC-LAST-NAME","AppropriatePhoneticFamily");
  if (isV30) {
    elem.addExpectedNode("SORT-STRING","AppropriatePhoneticGiven AppropriatePhoneticMiddle " + "AppropriatePhoneticFamily");
  }
}
