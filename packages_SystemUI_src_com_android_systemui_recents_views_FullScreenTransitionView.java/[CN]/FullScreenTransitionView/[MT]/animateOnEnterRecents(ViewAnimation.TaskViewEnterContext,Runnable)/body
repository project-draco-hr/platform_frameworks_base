{
  if (Console.Enabled) {
    Console.logTraceTime(Constants.Log.App.TimeRecentsScreenshotTransition,Constants.Log.App.TimeRecentsScreenshotTransitionKey,"Starting");
  }
  if (mEnterAnimation != null) {
    mEnterAnimation.removeAllListeners();
    mEnterAnimation.cancel();
  }
  float scale=(float)ctx.taskRect.width() / getMeasuredWidth();
  int translationY=-mConfig.systemInsets.top + ctx.stackRectSansPeek.top + ctx.transform.translationY;
  int clipBottom=mConfig.systemInsets.top + (int)(ctx.taskRect.height() / scale);
  mScreenshotView.setLayerType(View.LAYER_TYPE_HARDWARE,null);
  mEnterAnimation=new AnimatorSet();
  mEnterAnimation.addListener(new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator animation){
      mCb.onEnterAnimationComplete(false);
      postAnimRunnable.run();
      mIsAnimating=false;
      setLayerType(View.LAYER_TYPE_NONE,null);
      if (Console.Enabled) {
        Console.logTraceTime(Constants.Log.App.TimeRecentsScreenshotTransition,Constants.Log.App.TimeRecentsScreenshotTransitionKey,"Completed");
      }
    }
  }
);
  mEnterAnimation.setStartDelay(0);
  mEnterAnimation.setDuration(475);
  mEnterAnimation.setInterpolator(mConfig.fastOutSlowInInterpolator);
  mEnterAnimation.playTogether(ObjectAnimator.ofInt(this,"clipTop",mConfig.systemInsets.top),ObjectAnimator.ofInt(this,"clipBottom",clipBottom),ObjectAnimator.ofFloat(this,"translationY",translationY),ObjectAnimator.ofFloat(this,"scaleX",scale),ObjectAnimator.ofFloat(this,"scaleY",scale));
  mEnterAnimation.start();
  mIsAnimating=true;
}
