{
  mInitialZoomOverview=false;
  if (mZoomScale == 0) {
    Log.w(LOGTAG,"A WebView is attempting to perform a fixed length " + "zoom animation when no zoom is in progress");
    return;
  }
  float zoomScale;
  int interval=(int)(SystemClock.uptimeMillis() - mZoomStart);
  if (interval < ZOOM_ANIMATION_LENGTH) {
    float ratio=(float)interval / ZOOM_ANIMATION_LENGTH;
    zoomScale=1.0f / (mInvInitialZoomScale + (mInvFinalZoomScale - mInvInitialZoomScale) * ratio);
    mWebView.invalidate();
  }
 else {
    zoomScale=mZoomScale;
    mZoomScale=0;
    mWebView.onFixedLengthZoomAnimationEnd();
  }
  float scale=zoomScale * mInvInitialZoomScale;
  int tx=Math.round(scale * (mInitialScrollX + mZoomCenterX) - mZoomCenterX);
  tx=-WebViewClassic.pinLoc(tx,mWebView.getViewWidth(),Math.round(mWebView.getContentWidth() * zoomScale)) + mWebView.getScrollX();
  int titleHeight=mWebView.getTitleHeight();
  int ty=Math.round(scale * (mInitialScrollY + mZoomCenterY - titleHeight) - (mZoomCenterY - titleHeight));
  ty=-(ty <= titleHeight ? Math.max(ty,0) : WebViewClassic.pinLoc(ty - titleHeight,mWebView.getViewHeight(),Math.round(mWebView.getContentHeight() * zoomScale)) + titleHeight) + mWebView.getScrollY();
  if (mHardwareAccelerated) {
    mWebView.updateScrollCoordinates(mWebView.getScrollX() - tx,mWebView.getScrollY() - ty);
    canvas.translate(tx,ty);
    setZoomScale(zoomScale,false);
    if (mZoomScale == 0) {
      mInHWAcceleratedZoom=false;
      mWebView.sendViewSizeZoom(false);
    }
  }
 else {
    canvas.translate(tx,ty);
    canvas.scale(zoomScale,zoomScale);
  }
}
