{
  final int viewWidth=mWebView.getViewWidth();
  final boolean zoomOverviewWidthChanged=setupZoomOverviewWidth(drawData,viewWidth);
  final float newZoomOverviewScale=getZoomOverviewScale();
  WebSettings settings=mWebView.getSettings();
  if (zoomOverviewWidthChanged && settings.isNarrowColumnLayout() && settings.getUseFixedViewport()&& (mInitialZoomOverview || mInZoomOverview)) {
    if (exceedsMinScaleIncrement(mTextWrapScale,1.0f) || exceedsMinScaleIncrement(newZoomOverviewScale,1.0f)) {
      mTextWrapScale=getReadingLevelScale();
    }
 else {
      mTextWrapScale=newZoomOverviewScale;
    }
  }
  if (!mMinZoomScaleFixed) {
    mMinZoomScale=newZoomOverviewScale;
  }
  boolean scaleHasDiff=exceedsMinScaleIncrement(newZoomOverviewScale,mActualScale);
  if (!mWebView.drawHistory() && mInitialZoomOverview && scaleHasDiff) {
    mInitialZoomOverview=false;
    setZoomScale(newZoomOverviewScale,!willScaleTriggerZoom(mTextWrapScale) && !mWebView.getSettings().getUseFixedViewport());
  }
 else   if (scaleHasDiff) {
    mInZoomOverview=false;
  }
}
