{
  final int viewWidth=mWebView.getViewWidth();
  final boolean zoomOverviewWidthChanged=setupZoomOverviewWidth(drawData,viewWidth);
  final float newZoomOverviewScale=getZoomOverviewScale();
  WebSettings settings=mWebView.getSettings();
  if (zoomOverviewWidthChanged && settings.isNarrowColumnLayout() && settings.getUseFixedViewport()&& (mInitialZoomOverview || mInZoomOverview)) {
    if (exceedsMinScaleIncrement(mTextWrapScale,1.0f) || exceedsMinScaleIncrement(newZoomOverviewScale,1.0f)) {
      mTextWrapScale=getReadingLevelScale();
    }
 else {
      mTextWrapScale=newZoomOverviewScale;
    }
  }
  boolean scaleHasDiff=exceedsMinScaleIncrement(newZoomOverviewScale,mActualScale);
  boolean mobileSiteInOverview=mInZoomOverview && !exceedsMinScaleIncrement(newZoomOverviewScale,1.0f);
  if (!mWebView.drawHistory() && (mInitialZoomOverview || mobileSiteInOverview) && scaleHasDiff&& zoomOverviewWidthChanged) {
    mInitialZoomOverview=false;
    setZoomScale(newZoomOverviewScale,!willScaleTriggerZoom(mTextWrapScale) && !mWebView.getSettings().getUseFixedViewport());
  }
 else {
    mInZoomOverview=!scaleHasDiff;
  }
}
