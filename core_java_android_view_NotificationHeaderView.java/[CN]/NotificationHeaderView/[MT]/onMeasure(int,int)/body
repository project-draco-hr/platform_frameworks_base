{
  final int givenWidth=MeasureSpec.getSize(widthMeasureSpec);
  final int givenHeight=MeasureSpec.getSize(heightMeasureSpec);
  int wrapContentWidthSpec=MeasureSpec.makeMeasureSpec(givenWidth,MeasureSpec.AT_MOST);
  int wrapContentHeightSpec=MeasureSpec.makeMeasureSpec(givenHeight,MeasureSpec.AT_MOST);
  int totalWidth=getPaddingStart() + getPaddingEnd();
  for (int i=0; i < getChildCount(); i++) {
    final View child=getChildAt(i);
    if (child.getVisibility() == GONE) {
      continue;
    }
    final MarginLayoutParams lp=(MarginLayoutParams)child.getLayoutParams();
    int childWidthSpec=getChildMeasureSpec(wrapContentWidthSpec,lp.leftMargin + lp.rightMargin,lp.width);
    int childHeightSpec=getChildMeasureSpec(wrapContentHeightSpec,lp.topMargin + lp.bottomMargin,lp.height);
    child.measure(childWidthSpec,childHeightSpec);
    totalWidth+=lp.leftMargin + lp.rightMargin + child.getMeasuredWidth();
  }
  if (totalWidth > givenWidth) {
    int overFlow=totalWidth - givenWidth;
    final int appWidth=mAppName.getMeasuredWidth();
    if (mAppName.getVisibility() != GONE && appWidth > mHeaderMinWidth) {
      int newSize=appWidth - Math.min(appWidth - mHeaderMinWidth,overFlow);
      int childWidthSpec=MeasureSpec.makeMeasureSpec(newSize,MeasureSpec.AT_MOST);
      mAppName.measure(childWidthSpec,wrapContentHeightSpec);
      overFlow-=appWidth - newSize;
    }
    if (overFlow > 0 && mSubTextView.getVisibility() != GONE) {
      final int subTextWidth=mSubTextView.getMeasuredWidth();
      int newSize=Math.max(0,subTextWidth - overFlow);
      int childWidthSpec=MeasureSpec.makeMeasureSpec(newSize,MeasureSpec.AT_MOST);
      mSubTextView.measure(childWidthSpec,wrapContentHeightSpec);
    }
    totalWidth=givenWidth;
  }
  if (mProfileBadge.getVisibility() != View.GONE) {
    totalWidth=givenWidth;
  }
  setMeasuredDimension(totalWidth,givenHeight);
}
