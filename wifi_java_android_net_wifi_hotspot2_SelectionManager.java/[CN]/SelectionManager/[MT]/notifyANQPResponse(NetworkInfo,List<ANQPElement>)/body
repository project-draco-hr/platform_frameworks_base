{
  NetworkKey networkKey=new NetworkKey(networkInfo.getSSID(),networkInfo.getBSSID(),networkInfo.getAnqpDomainID());
  mPendingANQP.remove(networkKey);
  mANQPCache.put(networkKey,new ANQPData(anqpElements));
  for (  HomeSP homeSP : mHomeSPs) {
    PasspointMatch match=homeSP.match(networkInfo,anqpElements);
    if (match == PasspointMatch.HomeProvider || match == PasspointMatch.RoamingProvider) {
      mScoredNetworks.add(new ScoredNetwork(match,networkInfo));
    }
 else     if (match == PasspointMatch.Declined) {
      Iterator<ScoredNetwork> scoredNetworkIterator=mScoredNetworks.iterator();
      while (scoredNetworkIterator.hasNext()) {
        ScoredNetwork scoredNetwork=scoredNetworkIterator.next();
        if (scoredNetwork.getNetworkInfo().getBSSID() == networkInfo.getBSSID() && scoredNetwork.getNetworkInfo().getSSID().equals(networkInfo.getSSID())) {
          scoredNetworkIterator.remove();
          break;
        }
      }
    }
  }
  Collections.sort(mScoredNetworks);
  if (!mScoredNetworks.isEmpty() && mScoredNetworks.get(0).getMatch() == PasspointMatch.HomeProvider) {
  }
}
