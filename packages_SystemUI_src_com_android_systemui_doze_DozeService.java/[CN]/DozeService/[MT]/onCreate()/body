{
  if (DEBUG)   Log.d(mTag,"onCreate");
  super.onCreate();
  if (getApplication() instanceof SystemUIApplication) {
    final SystemUIApplication app=(SystemUIApplication)getApplication();
    mHost=app.getComponent(Host.class);
  }
  setWindowless(true);
  mSensors=(SensorManager)mContext.getSystemService(Context.SENSOR_SERVICE);
  mSigMotionSensor=mSensors.getDefaultSensor(Sensor.TYPE_SIGNIFICANT_MOTION);
  mPowerManager=(PowerManager)mContext.getSystemService(Context.POWER_SERVICE);
  mWakeLock=mPowerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,mTag);
  final Resources res=mContext.getResources();
  mSigMotionConfigured=SystemProperties.getBoolean("doze.tease.sigmotion",res.getBoolean(R.bool.doze_tease_on_significant_motion));
  mDisplayStateSupported=SystemProperties.getBoolean("doze.display.supported",res.getBoolean(R.bool.doze_display_state_supported));
  mMaxBrightness=MathUtils.constrain(res.getInteger(R.integer.doze_tease_brightness),BRIGHTNESS_OFF,BRIGHTNESS_ON);
  mDisplayStateWhenOn=mDisplayStateSupported ? Display.STATE_DOZE : Display.STATE_ON;
  setDozeScreenState(mDisplayStateWhenOn);
}
