{
  int id=com.android.internal.R.xml.power_profile;
  final Resources resources=context.getResources();
  XmlResourceParser parser=resources.getXml(id);
  boolean parsingArray=false;
  ArrayList<Double> array=new ArrayList<Double>();
  String arrayName=null;
  try {
    XmlUtils.beginDocument(parser,TAG_DEVICE);
    while (true) {
      XmlUtils.nextElement(parser);
      String element=parser.getName();
      if (element == null)       break;
      if (parsingArray && !element.equals(TAG_ARRAYITEM)) {
        sPowerMap.put(arrayName,array.toArray(new Double[array.size()]));
        parsingArray=false;
      }
      if (element.equals(TAG_ARRAY)) {
        parsingArray=true;
        array.clear();
        arrayName=parser.getAttributeValue(null,ATTR_NAME);
      }
 else       if (element.equals(TAG_ITEM) || element.equals(TAG_ARRAYITEM)) {
        String name=null;
        if (!parsingArray)         name=parser.getAttributeValue(null,ATTR_NAME);
        if (parser.next() == XmlPullParser.TEXT) {
          String power=parser.getText();
          double value=0;
          try {
            value=Double.valueOf(power);
          }
 catch (          NumberFormatException nfe) {
          }
          if (element.equals(TAG_ITEM)) {
            sPowerMap.put(name,value);
          }
 else           if (parsingArray) {
            array.add(value);
          }
        }
      }
    }
    if (parsingArray) {
      sPowerMap.put(arrayName,array.toArray(new Double[array.size()]));
    }
  }
 catch (  XmlPullParserException e) {
    throw new RuntimeException(e);
  }
catch (  IOException e) {
    throw new RuntimeException(e);
  }
 finally {
    parser.close();
  }
  int[] configResIds=new int[]{com.android.internal.R.integer.config_bluetooth_idle_cur_ma,com.android.internal.R.integer.config_bluetooth_rx_cur_ma,com.android.internal.R.integer.config_bluetooth_tx_cur_ma,com.android.internal.R.integer.config_bluetooth_operating_voltage_mv,com.android.internal.R.integer.config_wifi_idle_receive_cur_ma,com.android.internal.R.integer.config_wifi_active_rx_cur_ma,com.android.internal.R.integer.config_wifi_tx_cur_ma,com.android.internal.R.integer.config_wifi_operating_voltage_mv};
  String[] configResIdKeys=new String[]{POWER_BLUETOOTH_CONTROLLER_IDLE,POWER_BLUETOOTH_CONTROLLER_RX,POWER_BLUETOOTH_CONTROLLER_TX,POWER_BLUETOOTH_CONTROLLER_OPERATING_VOLTAGE,POWER_WIFI_CONTROLLER_IDLE,POWER_WIFI_CONTROLLER_RX,POWER_WIFI_CONTROLLER_TX,POWER_WIFI_CONTROLLER_OPERATING_VOLTAGE};
  for (int i=0; i < configResIds.length; i++) {
    String key=configResIdKeys[i];
    if ((sPowerMap.containsKey(key) && (Double)sPowerMap.get(key) > 0)) {
      continue;
    }
    int value=resources.getInteger(configResIds[i]);
    if (value > 0) {
      sPowerMap.put(key,(double)value);
    }
  }
}
