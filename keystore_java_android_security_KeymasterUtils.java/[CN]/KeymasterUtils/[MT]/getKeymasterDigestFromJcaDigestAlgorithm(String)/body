{
  if (jcaDigestAlgorithm.equalsIgnoreCase("SHA-1")) {
    return KeymasterDefs.KM_DIGEST_SHA1;
  }
 else   if (jcaDigestAlgorithm.equalsIgnoreCase("SHA-224")) {
    return KeymasterDefs.KM_DIGEST_SHA_2_224;
  }
 else   if (jcaDigestAlgorithm.equalsIgnoreCase("SHA-256")) {
    return KeymasterDefs.KM_DIGEST_SHA_2_256;
  }
 else   if (jcaDigestAlgorithm.equalsIgnoreCase("SHA-384")) {
    return KeymasterDefs.KM_DIGEST_SHA_2_384;
  }
 else   if (jcaDigestAlgorithm.equalsIgnoreCase("SHA-512")) {
    return KeymasterDefs.KM_DIGEST_SHA_2_512;
  }
 else   if (jcaDigestAlgorithm.equalsIgnoreCase("NONE")) {
    return KeymasterDefs.KM_DIGEST_NONE;
  }
 else   if (jcaDigestAlgorithm.equalsIgnoreCase("MD5")) {
    return KeymasterDefs.KM_DIGEST_MD5;
  }
 else {
    throw new IllegalArgumentException("Unsupported digest algorithm: " + jcaDigestAlgorithm);
  }
}
