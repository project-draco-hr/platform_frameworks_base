{
switch (keymasterAlgorithm) {
case KeymasterDefs.KM_ALGORITHM_AES:
    if (keymasterDigest != -1) {
      throw new IllegalArgumentException("Digest not supported for AES key: " + keymasterDigest);
    }
  return "AES";
case KeymasterDefs.KM_ALGORITHM_HMAC:
switch (keymasterDigest) {
case KeymasterDefs.KM_DIGEST_SHA1:
  return "HmacSHA1";
case KeymasterDefs.KM_DIGEST_SHA_2_224:
return "HmacSHA224";
case KeymasterDefs.KM_DIGEST_SHA_2_256:
return "HmacSHA256";
case KeymasterDefs.KM_DIGEST_SHA_2_384:
return "HmacSHA384";
case KeymasterDefs.KM_DIGEST_SHA_2_512:
return "HmacSHA512";
default :
throw new IllegalArgumentException("Unsupported HMAC digest: " + keymasterDigest);
}
default :
throw new IllegalArgumentException("Unsupported algorithm: " + keymasterAlgorithm);
}
}
