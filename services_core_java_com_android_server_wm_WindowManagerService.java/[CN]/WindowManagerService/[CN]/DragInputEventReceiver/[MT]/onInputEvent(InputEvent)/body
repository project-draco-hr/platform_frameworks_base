{
  boolean handled=false;
  try {
    if (event instanceof MotionEvent && (event.getSource() & InputDevice.SOURCE_CLASS_POINTER) != 0 && mDragState != null) {
      final MotionEvent motionEvent=(MotionEvent)event;
      boolean endDrag=false;
      final float newX=motionEvent.getRawX();
      final float newY=motionEvent.getRawY();
      final boolean isStylusButtonDown=(motionEvent.getButtonState() & MotionEvent.BUTTON_STYLUS_PRIMARY) != 0;
      if (mIsStartEvent) {
        if (isStylusButtonDown) {
          mStylusButtonDownAtStart=true;
        }
        mIsStartEvent=false;
      }
switch (motionEvent.getAction()) {
case MotionEvent.ACTION_DOWN:
{
          if (DEBUG_DRAG) {
            Slog.w(TAG,"Unexpected ACTION_DOWN in drag layer");
          }
        }
      break;
case MotionEvent.ACTION_MOVE:
{
      if (mStylusButtonDownAtStart && !isStylusButtonDown) {
        if (DEBUG_DRAG)         Slog.d(TAG,"Button no longer pressed; dropping at " + newX + ","+ newY);
synchronized (mWindowMap) {
          endDrag=completeDropLw(newX,newY);
        }
      }
 else {
synchronized (mWindowMap) {
          mDragState.notifyMoveLw(newX,newY);
        }
      }
    }
  break;
case MotionEvent.ACTION_UP:
{
  if (DEBUG_DRAG)   Slog.d(TAG,"Got UP on move channel; dropping at " + newX + ","+ newY);
synchronized (mWindowMap) {
    endDrag=completeDropLw(newX,newY);
  }
}
break;
case MotionEvent.ACTION_CANCEL:
{
if (DEBUG_DRAG) Slog.d(TAG,"Drag cancelled!");
endDrag=true;
}
break;
}
if (endDrag) {
if (DEBUG_DRAG) Slog.d(TAG,"Drag ended; tearing down state");
synchronized (mWindowMap) {
mDragState.endDragLw();
}
mStylusButtonDownAtStart=false;
mIsStartEvent=true;
}
handled=true;
}
}
 catch (Exception e) {
Slog.e(TAG,"Exception caught by drag handleMotion",e);
}
 finally {
finishInputEvent(event,handled);
}
}
