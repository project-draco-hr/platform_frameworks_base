{
  if (mDisplayFrozen) {
    if (mLastWindowForcedOrientation != ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED) {
      if (DEBUG_ORIENTATION)       Slog.v(TAG,"Display is frozen, return " + mLastWindowForcedOrientation);
      return mLastWindowForcedOrientation;
    }
  }
 else {
    final WindowList windows=getDefaultWindowListLocked();
    int pos=windows.size() - 1;
    while (pos >= 0) {
      WindowState win=windows.get(pos);
      pos--;
      if (win.mAppToken != null) {
        break;
      }
      if (!win.isVisibleLw() || !win.mPolicyVisibilityAfterAnim) {
        continue;
      }
      int req=win.mAttrs.screenOrientation;
      if ((req == ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED) || (req == ActivityInfo.SCREEN_ORIENTATION_BEHIND)) {
        continue;
      }
      if (DEBUG_ORIENTATION)       Slog.v(TAG,win + " forcing orientation to " + req);
      if (mPolicy.isKeyguardHostWindow(win.mAttrs)) {
        mLastKeyguardForcedOrientation=req;
      }
      return (mLastWindowForcedOrientation=req);
    }
    mLastWindowForcedOrientation=ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED;
    if (mPolicy.isKeyguardLocked()) {
      WindowState winShowWhenLocked=(WindowState)mPolicy.getWinShowWhenLockedLw();
      AppWindowToken appShowWhenLocked=winShowWhenLocked == null ? null : winShowWhenLocked.mAppToken;
      if (appShowWhenLocked != null) {
        int req=appShowWhenLocked.requestedOrientation;
        if (req == ActivityInfo.SCREEN_ORIENTATION_BEHIND) {
          req=mLastKeyguardForcedOrientation;
        }
        if (DEBUG_ORIENTATION)         Slog.v(TAG,"Done at " + appShowWhenLocked + " -- show when locked, return "+ req);
        return req;
      }
      if (DEBUG_ORIENTATION)       Slog.v(TAG,"No one is requesting an orientation when the screen is locked");
      return mLastKeyguardForcedOrientation;
    }
  }
  int lastOrientation=ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED;
  boolean findingBehind=false;
  boolean lastFullscreen=false;
  DisplayContent displayContent=getDefaultDisplayContentLocked();
  final ArrayList<Task> tasks=displayContent.getTasks();
  for (int taskNdx=tasks.size() - 1; taskNdx >= 0; --taskNdx) {
    AppTokenList tokens=tasks.get(taskNdx).mAppTokens;
    final int firstToken=tokens.size() - 1;
    for (int tokenNdx=firstToken; tokenNdx >= 0; --tokenNdx) {
      final AppWindowToken atoken=tokens.get(tokenNdx);
      if (DEBUG_APP_ORIENTATION)       Slog.v(TAG,"Checking app orientation: " + atoken);
      if (!findingBehind && (!atoken.hidden && atoken.hiddenRequested)) {
        if (DEBUG_ORIENTATION)         Slog.v(TAG,"Skipping " + atoken + " -- going to hide");
        continue;
      }
      if (tokenNdx == firstToken) {
        if (lastOrientation != ActivityInfo.SCREEN_ORIENTATION_BEHIND && lastFullscreen) {
          if (DEBUG_ORIENTATION)           Slog.v(TAG,"Done at " + atoken + " -- end of group, return "+ lastOrientation);
          return lastOrientation;
        }
      }
      if (atoken.hiddenRequested || atoken.willBeHidden) {
        if (DEBUG_ORIENTATION)         Slog.v(TAG,"Skipping " + atoken + " -- hidden on top");
        continue;
      }
      if (tokenNdx == 0) {
        lastOrientation=atoken.requestedOrientation;
      }
      int or=atoken.requestedOrientation;
      lastFullscreen=atoken.appFullscreen;
      if (lastFullscreen && or != ActivityInfo.SCREEN_ORIENTATION_BEHIND) {
        if (DEBUG_ORIENTATION)         Slog.v(TAG,"Done at " + atoken + " -- full screen, return "+ or);
        return or;
      }
      if (or != ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED && or != ActivityInfo.SCREEN_ORIENTATION_BEHIND) {
        if (DEBUG_ORIENTATION)         Slog.v(TAG,"Done at " + atoken + " -- explicitly set, return "+ or);
        return or;
      }
      findingBehind|=(or == ActivityInfo.SCREEN_ORIENTATION_BEHIND);
    }
  }
  if (DEBUG_ORIENTATION)   Slog.v(TAG,"No app is requesting an orientation, return " + mForcedAppOrientation);
  return mForcedAppOrientation;
}
