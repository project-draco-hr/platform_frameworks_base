{
  if (mDisplayFrozen) {
    if (mLastWindowForcedOrientation != SCREEN_ORIENTATION_UNSPECIFIED) {
      if (DEBUG_ORIENTATION)       Slog.v(TAG_WM,"Display is frozen, return " + mLastWindowForcedOrientation);
      return mLastWindowForcedOrientation;
    }
  }
 else {
    final WindowList windows=getDefaultWindowListLocked();
    for (int pos=windows.size() - 1; pos >= 0; --pos) {
      WindowState win=windows.get(pos);
      if (win.mAppToken != null) {
        break;
      }
      if (!win.isVisibleLw() || !win.mPolicyVisibilityAfterAnim) {
        continue;
      }
      int req=win.mAttrs.screenOrientation;
      if (req == SCREEN_ORIENTATION_UNSPECIFIED || req == SCREEN_ORIENTATION_BEHIND) {
        continue;
      }
      if (DEBUG_ORIENTATION)       Slog.v(TAG_WM,win + " forcing orientation to " + req);
      if (mPolicy.isKeyguardHostWindow(win.mAttrs)) {
        mLastKeyguardForcedOrientation=req;
      }
      return (mLastWindowForcedOrientation=req);
    }
    mLastWindowForcedOrientation=SCREEN_ORIENTATION_UNSPECIFIED;
    if (mPolicy.isKeyguardLocked()) {
      WindowState winShowWhenLocked=(WindowState)mPolicy.getWinShowWhenLockedLw();
      AppWindowToken appShowWhenLocked=winShowWhenLocked == null ? null : winShowWhenLocked.mAppToken;
      if (appShowWhenLocked != null) {
        int req=appShowWhenLocked.requestedOrientation;
        if (req == SCREEN_ORIENTATION_BEHIND) {
          req=mLastKeyguardForcedOrientation;
        }
        if (DEBUG_ORIENTATION)         Slog.v(TAG_WM,"Done at " + appShowWhenLocked + " -- show when locked, return "+ req);
        return req;
      }
      if (DEBUG_ORIENTATION)       Slog.v(TAG_WM,"No one is requesting an orientation when the screen is locked");
      return mLastKeyguardForcedOrientation;
    }
  }
  return getAppSpecifiedOrientation();
}
