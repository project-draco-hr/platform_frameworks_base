{
  final boolean hold=newHoldScreen != null;
  if (hold && mHoldingScreenOn != newHoldScreen) {
    mHoldingScreenWakeLock.setWorkSource(new WorkSource(newHoldScreen.mUid));
  }
  mHoldingScreenOn=newHoldScreen;
  final boolean state=mHoldingScreenWakeLock.isHeld();
  if (hold != state) {
    if (hold) {
      if (DEBUG_KEEP_SCREEN_ON) {
        Slog.d(TAG_KEEP_SCREEN_ON,"Acquiring screen wakelock due to " + mWindowPlacerLocked.mHoldScreenWindow);
      }
      mLastWakeLockHoldingWindow=mWindowPlacerLocked.mHoldScreenWindow;
      mLastWakeLockObscuringWindow=null;
      mHoldingScreenWakeLock.acquire();
      mPolicy.keepScreenOnStartedLw();
    }
 else {
      if (DEBUG_KEEP_SCREEN_ON) {
        Slog.d(TAG_KEEP_SCREEN_ON,"Releasing screen wakelock, obscured by " + mWindowPlacerLocked.mObsuringWindow);
      }
      mLastWakeLockHoldingWindow=null;
      mLastWakeLockObscuringWindow=mWindowPlacerLocked.mObsuringWindow;
      mPolicy.keepScreenOnStoppedLw();
      mHoldingScreenWakeLock.release();
    }
  }
}
