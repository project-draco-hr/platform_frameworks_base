{
  final IBinder watcherBinder=watcher.asBinder();
  IBinder.DeathRecipient dr=new IBinder.DeathRecipient(){
    @Override public void binderDied(){
synchronized (mWindowMap) {
        for (int i=0; i < mRotationWatchers.size(); i++) {
          if (watcherBinder == mRotationWatchers.get(i).watcher.asBinder()) {
            RotationWatcher removed=mRotationWatchers.remove(i);
            if (removed != null) {
              removed.watcher.asBinder().unlinkToDeath(this,0);
            }
            i--;
          }
        }
      }
    }
  }
;
synchronized (mWindowMap) {
    try {
      watcher.asBinder().linkToDeath(dr,0);
      mRotationWatchers.add(new RotationWatcher(watcher,dr));
    }
 catch (    RemoteException e) {
    }
    return mRotation;
  }
}
