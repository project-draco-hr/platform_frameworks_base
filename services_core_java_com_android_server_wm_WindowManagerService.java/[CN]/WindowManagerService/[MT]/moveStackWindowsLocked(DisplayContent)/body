{
  final ArrayList<Task> tasks=displayContent.getTasks();
  final int numTasks=tasks.size();
  for (int taskNdx=0; taskNdx < numTasks; ++taskNdx) {
    tmpRemoveTaskWindowsLocked(tasks.get(taskNdx));
  }
  for (int taskNdx=0; taskNdx < numTasks; ++taskNdx) {
    AppTokenList tokens=tasks.get(taskNdx).mAppTokens;
    final int numTokens=tokens.size();
    if (numTokens == 0) {
      continue;
    }
    int pos=findAppWindowInsertionPointLocked(tokens.get(0));
    for (int tokenNdx=0; tokenNdx < numTokens; ++tokenNdx) {
      final AppWindowToken wtoken=tokens.get(tokenNdx);
      if (wtoken != null) {
        final int newPos=reAddAppWindowsLocked(displayContent,pos,wtoken);
        if (newPos != pos) {
          displayContent.layoutNeeded=true;
        }
        pos=newPos;
      }
    }
  }
  if (!updateFocusedWindowLocked(UPDATE_FOCUS_WILL_PLACE_SURFACES,false)) {
    assignLayersLocked(displayContent.getWindowList());
  }
  mInputMonitor.setUpdateInputWindowsNeededLw();
  performLayoutAndPlaceSurfacesLocked();
  mInputMonitor.updateInputWindowsLw(false);
}
