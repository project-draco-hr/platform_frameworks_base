{
  final WindowList windows=displayContent.getWindowList();
  mTmpWindows.addAll(windows);
  rebuildAppWindowListLocked(displayContent);
  final int tmpSize=mTmpWindows.size();
  final int winSize=windows.size();
  int tmpNdx=0, winNdx=0;
  while (tmpNdx < tmpSize && winNdx < winSize) {
    WindowState tmp;
    do {
      tmp=mTmpWindows.get(tmpNdx++);
    }
 while (tmpNdx < tmpSize && tmp.mAppToken != null && tmp.mAppToken.mIsExiting);
    WindowState win;
    do {
      win=windows.get(winNdx++);
    }
 while (winNdx < winSize && win.mAppToken != null && win.mAppToken.mIsExiting);
    if (tmp != win) {
      displayContent.layoutNeeded=true;
      break;
    }
  }
  if (tmpNdx != winNdx) {
    displayContent.layoutNeeded=true;
  }
  mTmpWindows.clear();
  if (!updateFocusedWindowLocked(UPDATE_FOCUS_WILL_PLACE_SURFACES,false)) {
    assignLayersLocked(displayContent.getWindowList());
  }
  mInputMonitor.setUpdateInputWindowsNeededLw();
  performLayoutAndPlaceSurfacesLocked();
  mInputMonitor.updateInputWindowsLw(false);
}
