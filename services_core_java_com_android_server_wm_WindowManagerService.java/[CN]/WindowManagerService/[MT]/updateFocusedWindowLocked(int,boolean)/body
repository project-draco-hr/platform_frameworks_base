{
  WindowState newFocus=computeFocusedWindowLocked();
  if (mCurrentFocus != newFocus) {
    Trace.traceBegin(Trace.TRACE_TAG_WINDOW_MANAGER,"wmUpdateFocus");
    TaskStack oldFocusedStack=getFocusedStackLocked();
    mH.removeMessages(H.REPORT_FOCUS_CHANGE);
    mH.sendEmptyMessage(H.REPORT_FOCUS_CHANGE);
    final DisplayContent displayContent=getDefaultDisplayContentLocked();
    final boolean imWindowChanged=moveInputMethodWindowsIfNeededLocked(mode != UPDATE_FOCUS_WILL_ASSIGN_LAYERS && mode != UPDATE_FOCUS_WILL_PLACE_SURFACES);
    if (imWindowChanged) {
      displayContent.layoutNeeded=true;
      newFocus=computeFocusedWindowLocked();
    }
    if (DEBUG_FOCUS_LIGHT || localLOGV)     Slog.v(TAG_WM,"Changing focus from " + mCurrentFocus + " to "+ newFocus+ " Callers="+ Debug.getCallers(4));
    final WindowState oldFocus=mCurrentFocus;
    mCurrentFocus=newFocus;
    mLosingFocus.remove(newFocus);
    int focusChanged=mPolicy.focusChangedLw(oldFocus,newFocus);
    TaskStack newFocusedStack=getFocusedStackLocked();
    if (imWindowChanged && oldFocus != mInputMethodWindow) {
      if (mode == UPDATE_FOCUS_PLACING_SURFACES) {
        mWindowPlacerLocked.performLayoutLockedInner(displayContent,true,updateInputWindows);
        focusChanged&=~WindowManagerPolicy.FINISH_LAYOUT_REDO_LAYOUT;
      }
 else       if (mode == UPDATE_FOCUS_WILL_PLACE_SURFACES) {
        mLayersController.assignLayersLocked(displayContent.getWindowList());
      }
    }
    if ((focusChanged & WindowManagerPolicy.FINISH_LAYOUT_REDO_LAYOUT) != 0) {
      displayContent.layoutNeeded=true;
      if (mode == UPDATE_FOCUS_PLACING_SURFACES) {
        mWindowPlacerLocked.performLayoutLockedInner(displayContent,true,updateInputWindows);
      }
    }
    if (mode != UPDATE_FOCUS_WILL_ASSIGN_LAYERS) {
      mInputMonitor.setInputFocusLw(mCurrentFocus,updateInputWindows);
    }
    final WindowState imeWin=mInputMethodWindow;
    if (oldFocusedStack != null) {
      oldFocusedStack.resetAdjustedForIme(true);
    }
    if (newFocusedStack != null) {
      newFocusedStack.resetAdjustedForIme(true);
    }
    displayContent.mDividerControllerLocked.setAdjustedForIme(false,false,imeWin);
    adjustForImeIfNeeded(displayContent);
    Trace.traceEnd(Trace.TRACE_TAG_WINDOW_MANAGER);
    return true;
  }
  return false;
}
