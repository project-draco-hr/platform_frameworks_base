{
  final WindowList windows=displayContent.getWindowList();
  int NW=windows.size();
  int i;
  int lastBelow=-1;
  int numRemoved=0;
  if (mRebuildTmp.length < NW) {
    mRebuildTmp=new WindowState[NW + 10];
  }
  i=0;
  while (i < NW) {
    WindowState w=windows.get(i);
    if (w.mAppToken != null) {
      WindowState win=windows.remove(i);
      win.mRebuilding=true;
      mRebuildTmp[numRemoved]=win;
      mWindowsChanged=true;
      if (DEBUG_WINDOW_MOVEMENT)       Slog.v(TAG,"Rebuild removing window: " + win);
      NW--;
      numRemoved++;
      continue;
    }
 else     if (lastBelow == i - 1) {
      if (w.mAttrs.type == TYPE_WALLPAPER || w.mAttrs.type == TYPE_UNIVERSE_BACKGROUND) {
        lastBelow=i;
      }
    }
    i++;
  }
  lastBelow++;
  i=lastBelow;
  final ArrayList<TaskStack> stacks=displayContent.getStacks();
  final int numStacks=stacks.size();
  for (int stackNdx=0; stackNdx < numStacks; ++stackNdx) {
    AppTokenList exitingAppTokens=stacks.get(stackNdx).mExitingAppTokens;
    int NT=exitingAppTokens.size();
    for (int j=0; j < NT; j++) {
      i=reAddAppWindowsLocked(displayContent,i,exitingAppTokens.get(j));
    }
  }
  for (int stackNdx=0; stackNdx < numStacks; ++stackNdx) {
    final ArrayList<Task> tasks=stacks.get(stackNdx).getTasks();
    final int numTasks=tasks.size();
    for (int taskNdx=0; taskNdx < numTasks; ++taskNdx) {
      final AppTokenList tokens=tasks.get(taskNdx).mAppTokens;
      final int numTokens=tokens.size();
      for (int tokenNdx=0; tokenNdx < numTokens; ++tokenNdx) {
        final AppWindowToken wtoken=tokens.get(tokenNdx);
        if (wtoken.mIsExiting) {
          continue;
        }
        i=reAddAppWindowsLocked(displayContent,i,wtoken);
      }
    }
  }
  i-=lastBelow;
  if (i != numRemoved) {
    displayContent.layoutNeeded=true;
    Slog.w(TAG,"On display=" + displayContent.getDisplayId() + " Rebuild removed "+ numRemoved+ " windows but added "+ i,new RuntimeException("here").fillInStackTrace());
    for (i=0; i < numRemoved; i++) {
      WindowState ws=mRebuildTmp[i];
      if (ws.mRebuilding) {
        StringWriter sw=new StringWriter();
        PrintWriter pw=new FastPrintWriter(sw,false,1024);
        ws.dump(pw,"",true);
        pw.flush();
        Slog.w(TAG,"This window was lost: " + ws);
        Slog.w(TAG,sw.toString());
        ws.mWinAnimator.destroySurfaceLocked();
      }
    }
    Slog.w(TAG,"Current app token list:");
    dumpAppTokensLocked();
    Slog.w(TAG,"Final window list:");
    dumpWindowsLocked();
  }
  Arrays.fill(mRebuildTmp,null);
}
