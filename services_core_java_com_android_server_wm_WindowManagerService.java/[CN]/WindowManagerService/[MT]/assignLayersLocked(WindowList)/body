{
  int N=windows.size();
  int curBaseLayer=0;
  int curLayer=0;
  int i;
  if (DEBUG_LAYERS)   Slog.v(TAG,"Assigning layers based on windows=" + windows,new RuntimeException("here").fillInStackTrace());
  boolean anyLayerChanged=false;
  for (i=0; i < N; i++) {
    final WindowState w=windows.get(i);
    final WindowStateAnimator winAnimator=w.mWinAnimator;
    boolean layerChanged=false;
    int oldLayer=w.mLayer;
    if (w.mBaseLayer == curBaseLayer || w.mIsImWindow || (i > 0 && w.mIsWallpaper)) {
      curLayer+=WINDOW_LAYER_MULTIPLIER;
      w.mLayer=curLayer;
    }
 else {
      curBaseLayer=curLayer=w.mBaseLayer;
      w.mLayer=curLayer;
    }
    if (w.mLayer != oldLayer) {
      layerChanged=true;
      anyLayerChanged=true;
    }
    final AppWindowToken wtoken=w.mAppToken;
    oldLayer=winAnimator.mAnimLayer;
    if (w.mTargetAppToken != null) {
      winAnimator.mAnimLayer=w.mLayer + w.mTargetAppToken.mAppAnimator.animLayerAdjustment;
    }
 else     if (wtoken != null) {
      winAnimator.mAnimLayer=w.mLayer + wtoken.mAppAnimator.animLayerAdjustment;
    }
 else {
      winAnimator.mAnimLayer=w.mLayer;
    }
    if (w.mIsImWindow) {
      winAnimator.mAnimLayer+=mInputMethodAnimLayerAdjustment;
    }
 else     if (w.mIsWallpaper) {
      winAnimator.mAnimLayer+=mWallpaperAnimLayerAdjustment;
    }
    if (winAnimator.mAnimLayer != oldLayer) {
      layerChanged=true;
      anyLayerChanged=true;
    }
    if (layerChanged && w.getStack().isDimming(winAnimator)) {
      scheduleAnimationLocked();
    }
    if (DEBUG_LAYERS)     Slog.v(TAG,"Assign layer " + w + ": "+ "mBase="+ w.mBaseLayer+ " mLayer="+ w.mLayer+ (wtoken == null ? "" : " mAppLayer=" + wtoken.mAppAnimator.animLayerAdjustment)+ " =mAnimLayer="+ winAnimator.mAnimLayer);
  }
  if (mDisplayMagnifier != null && anyLayerChanged && windows.get(windows.size() - 1).getDisplayId() == Display.DEFAULT_DISPLAY) {
    mDisplayMagnifier.onWindowLayersChangedLocked();
  }
}
