{
  if (!checkCallingPermission(android.Manifest.permission.MANAGE_APP_TOKENS,"setAppStartingWindow()")) {
    throw new SecurityException("Requires MANAGE_APP_TOKENS permission");
  }
synchronized (mWindowMap) {
    if (DEBUG_STARTING_WINDOW)     Slog.v(TAG_WM,"setAppStartingWindow: token=" + token + " pkg="+ pkg+ " transferFrom="+ transferFrom);
    AppWindowToken wtoken=findAppWindowToken(token);
    if (wtoken == null) {
      Slog.w(TAG_WM,"Attempted to set icon of non-existing app token: " + token);
      return;
    }
    if (!okToDisplay()) {
      return;
    }
    if (wtoken.startingData != null) {
      return;
    }
    if (transferStartingWindow(transferFrom,wtoken)) {
      return;
    }
    if (!createIfNeeded) {
      return;
    }
    if (DEBUG_STARTING_WINDOW)     Slog.v(TAG_WM,"Checking theme of starting window: 0x" + Integer.toHexString(theme));
    if (theme != 0) {
      AttributeCache.Entry ent=AttributeCache.instance().get(pkg,theme,com.android.internal.R.styleable.Window,mCurrentUserId);
      if (ent == null) {
        return;
      }
      final boolean windowIsTranslucent=ent.array.getBoolean(com.android.internal.R.styleable.Window_windowIsTranslucent,false);
      final boolean windowIsFloating=ent.array.getBoolean(com.android.internal.R.styleable.Window_windowIsFloating,false);
      final boolean windowShowWallpaper=ent.array.getBoolean(com.android.internal.R.styleable.Window_windowShowWallpaper,false);
      final boolean windowDisableStarting=ent.array.getBoolean(com.android.internal.R.styleable.Window_windowDisablePreview,false);
      if (DEBUG_STARTING_WINDOW)       Slog.v(TAG_WM,"Translucent=" + windowIsTranslucent + " Floating="+ windowIsFloating+ " ShowWallpaper="+ windowShowWallpaper);
      if (windowIsTranslucent) {
        return;
      }
      if (windowIsFloating || windowDisableStarting) {
        return;
      }
      if (windowShowWallpaper) {
        if (mWallpaperControllerLocked.getWallpaperTarget() == null) {
          windowFlags|=FLAG_SHOW_WALLPAPER;
        }
 else {
          return;
        }
      }
    }
    if (DEBUG_STARTING_WINDOW)     Slog.v(TAG_WM,"Creating StartingData");
    wtoken.startingData=new StartingData(pkg,theme,compatInfo,nonLocalizedLabel,labelRes,icon,logo,windowFlags);
    Message m=mH.obtainMessage(H.ADD_STARTING,wtoken);
    if (DEBUG_STARTING_WINDOW)     Slog.v(TAG_WM,"Enqueueing ADD_STARTING");
    mH.sendMessageAtFrontOfQueue(m);
  }
}
