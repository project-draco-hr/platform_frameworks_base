{
  if (!mDisplayFrozen) {
    return;
  }
  if (mWaitingForConfig || mAppsFreezingScreen > 0 || mWindowsFreezingScreen == WINDOWS_FREEZING_SCREENS_ACTIVE || mClientFreezingScreen || !mOpeningApps.isEmpty()) {
    if (DEBUG_ORIENTATION)     Slog.d(TAG_WM,"stopFreezingDisplayLocked: Returning mWaitingForConfig=" + mWaitingForConfig + ", mAppsFreezingScreen="+ mAppsFreezingScreen+ ", mWindowsFreezingScreen="+ mWindowsFreezingScreen+ ", mClientFreezingScreen="+ mClientFreezingScreen+ ", mOpeningApps.size()="+ mOpeningApps.size());
    return;
  }
  mDisplayFrozen=false;
  mLastDisplayFreezeDuration=(int)(SystemClock.elapsedRealtime() - mDisplayFreezeTime);
  StringBuilder sb=new StringBuilder(128);
  sb.append("Screen frozen for ");
  TimeUtils.formatDuration(mLastDisplayFreezeDuration,sb);
  if (mLastFinishedFreezeSource != null) {
    sb.append(" due to ");
    sb.append(mLastFinishedFreezeSource);
  }
  Slog.i(TAG_WM,sb.toString());
  mH.removeMessages(H.APP_FREEZE_TIMEOUT);
  mH.removeMessages(H.CLIENT_FREEZE_TIMEOUT);
  if (PROFILE_ORIENTATION) {
    Debug.stopMethodTracing();
  }
  boolean updateRotation=false;
  final DisplayContent displayContent=getDefaultDisplayContentLocked();
  final int displayId=displayContent.getDisplayId();
  ScreenRotationAnimation screenRotationAnimation=mAnimator.getScreenRotationAnimationLocked(displayId);
  if (CUSTOM_SCREEN_ROTATION && screenRotationAnimation != null && screenRotationAnimation.hasScreenshot()) {
    if (DEBUG_ORIENTATION)     Slog.i(TAG_WM,"**** Dismissing screen rotation animation");
    DisplayInfo displayInfo=displayContent.getDisplayInfo();
    boolean isDimming=displayContent.isDimming();
    if (!mPolicy.validateRotationAnimationLw(mExitAnimId,mEnterAnimId,isDimming)) {
      mExitAnimId=mEnterAnimId=0;
    }
    if (screenRotationAnimation.dismiss(mFxSession,MAX_ANIMATION_DURATION,getTransitionAnimationScaleLocked(),displayInfo.logicalWidth,displayInfo.logicalHeight,mExitAnimId,mEnterAnimId)) {
      scheduleAnimationLocked();
    }
 else {
      screenRotationAnimation.kill();
      mAnimator.setScreenRotationAnimationLocked(displayId,null);
      updateRotation=true;
    }
  }
 else {
    if (screenRotationAnimation != null) {
      screenRotationAnimation.kill();
      mAnimator.setScreenRotationAnimationLocked(displayId,null);
    }
    updateRotation=true;
  }
  mInputMonitor.thawInputDispatchingLw();
  boolean configChanged;
  configChanged=updateOrientationFromAppTokensLocked(false);
  mH.removeMessages(H.FORCE_GC);
  mH.sendEmptyMessageDelayed(H.FORCE_GC,2000);
  mScreenFrozenLock.release();
  if (updateRotation) {
    if (DEBUG_ORIENTATION)     Slog.d(TAG_WM,"Performing post-rotate rotation");
    configChanged|=updateRotationUncheckedLocked(false);
  }
  if (configChanged) {
    mH.sendEmptyMessage(H.SEND_NEW_CONFIGURATION);
  }
}
