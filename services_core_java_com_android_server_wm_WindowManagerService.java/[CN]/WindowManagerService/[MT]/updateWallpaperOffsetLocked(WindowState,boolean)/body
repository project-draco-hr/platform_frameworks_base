{
  final DisplayContent displayContent=changingTarget.getDisplayContent();
  if (displayContent == null) {
    return;
  }
  final DisplayInfo displayInfo=displayContent.getDisplayInfo();
  final int dw=displayInfo.logicalWidth;
  final int dh=displayInfo.logicalHeight;
  WindowState target=mWallpaperTarget;
  if (target != null) {
    if (target.mWallpaperX >= 0) {
      mLastWallpaperX=target.mWallpaperX;
    }
 else     if (changingTarget.mWallpaperX >= 0) {
      mLastWallpaperX=changingTarget.mWallpaperX;
    }
    if (target.mWallpaperY >= 0) {
      mLastWallpaperY=target.mWallpaperY;
    }
 else     if (changingTarget.mWallpaperY >= 0) {
      mLastWallpaperY=changingTarget.mWallpaperY;
    }
    if (target.mWallpaperDisplayOffsetX != Integer.MIN_VALUE) {
      mLastWallpaperDisplayOffsetX=target.mWallpaperDisplayOffsetX;
    }
 else     if (changingTarget.mWallpaperDisplayOffsetX != Integer.MIN_VALUE) {
      mLastWallpaperDisplayOffsetX=changingTarget.mWallpaperDisplayOffsetX;
    }
    if (target.mWallpaperDisplayOffsetY != Integer.MIN_VALUE) {
      mLastWallpaperDisplayOffsetY=target.mWallpaperDisplayOffsetY;
    }
 else     if (changingTarget.mWallpaperDisplayOffsetY != Integer.MIN_VALUE) {
      mLastWallpaperDisplayOffsetY=changingTarget.mWallpaperDisplayOffsetY;
    }
  }
  for (int curTokenNdx=mWallpaperTokens.size() - 1; curTokenNdx >= 0; curTokenNdx--) {
    WindowList windows=mWallpaperTokens.get(curTokenNdx).windows;
    for (int wallpaperNdx=windows.size() - 1; wallpaperNdx >= 0; wallpaperNdx--) {
      WindowState wallpaper=windows.get(wallpaperNdx);
      if (updateWallpaperOffsetLocked(wallpaper,dw,dh,sync)) {
        WindowStateAnimator winAnimator=wallpaper.mWinAnimator;
        winAnimator.computeShownFrameLocked();
        winAnimator.setWallpaperOffset(wallpaper.mShownFrame);
        sync=false;
      }
    }
  }
}
