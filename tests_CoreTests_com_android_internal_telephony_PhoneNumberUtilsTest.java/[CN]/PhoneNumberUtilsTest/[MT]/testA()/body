{
  assertEquals("+17005554141",PhoneNumberUtils.extractNetworkPortion("+17005554141"));
  assertEquals("+17005554141",PhoneNumberUtils.extractNetworkPortion("+1 (700).555-4141"));
  assertEquals("17005554141",PhoneNumberUtils.extractNetworkPortion("1 (700).555-4141"));
  assertEquals("17005554141*#",PhoneNumberUtils.extractNetworkPortion("1 (700).555-4141*#"));
  assertEquals("170055541NN",PhoneNumberUtils.extractNetworkPortion("1 (700).555-41NN"));
  assertEquals("170055541NN",PhoneNumberUtils.extractNetworkPortion("1 (700).555-41NN,1234"));
  assertEquals("170055541NN",PhoneNumberUtils.extractNetworkPortion("1 (700).555-41NN;1234"));
  assertEquals("**21**17005554141#",PhoneNumberUtils.extractNetworkPortion("**21**+17005554141#"));
  assertEquals("",PhoneNumberUtils.extractNetworkPortion(""));
  assertEquals("",PhoneNumberUtils.extractNetworkPortion(",1234"));
  byte[] b=new byte[20];
  b[0]=(byte)0x81;
  b[1]=(byte)0x71;
  b[2]=(byte)0x00;
  b[3]=(byte)0x55;
  b[4]=(byte)0x05;
  b[5]=(byte)0x20;
  b[6]=(byte)0xF0;
  assertEquals("17005550020",PhoneNumberUtils.calledPartyBCDToString(b,0,7));
  b[0]=(byte)0x91;
  b[1]=(byte)0x71;
  b[2]=(byte)0x00;
  b[3]=(byte)0x55;
  b[4]=(byte)0x05;
  b[5]=(byte)0x20;
  b[6]=(byte)0xF0;
  assertEquals("+17005550020",PhoneNumberUtils.calledPartyBCDToString(b,0,7));
  byte[] bRet=PhoneNumberUtils.networkPortionToCalledPartyBCD("+17005550020");
  assertEquals(7,bRet.length);
  for (int i=0; i < 7; i++) {
    assertEquals(b[i],bRet[i]);
  }
  bRet=PhoneNumberUtils.networkPortionToCalledPartyBCDWithLength("+17005550020");
  assertEquals(8,bRet.length);
  assertEquals(bRet[0],7);
  for (int i=1; i < 8; i++) {
    assertEquals(b[i - 1],bRet[i]);
  }
  bRet=PhoneNumberUtils.networkPortionToCalledPartyBCD("7005550020");
  assertEquals("7005550020",PhoneNumberUtils.calledPartyBCDToString(bRet,0,bRet.length));
  b[0]=(byte)0x81;
  b[1]=(byte)0x71;
  b[2]=(byte)0x00;
  b[3]=(byte)0x55;
  b[4]=(byte)0x05;
  b[5]=(byte)0x20;
  b[6]=(byte)0xB0;
  assertEquals("17005550020#",PhoneNumberUtils.calledPartyBCDToString(b,0,7));
  b[0]=(byte)0x91;
  b[1]=(byte)0x71;
  b[2]=(byte)0x00;
  b[3]=(byte)0x55;
  b[4]=(byte)0x05;
  b[5]=(byte)0x20;
  b[6]=(byte)0xB0;
  assertEquals("+17005550020#",PhoneNumberUtils.calledPartyBCDToString(b,0,7));
  b[0]=(byte)0x81;
  b[1]=(byte)0x2A;
  b[2]=(byte)0xB1;
  assertEquals("*21#",PhoneNumberUtils.calledPartyBCDToString(b,0,3));
  b[0]=(byte)0x81;
  b[1]=(byte)0x2B;
  b[2]=(byte)0xB1;
  assertEquals("#21#",PhoneNumberUtils.calledPartyBCDToString(b,0,3));
  b[0]=(byte)0x91;
  b[1]=(byte)0x2A;
  b[2]=(byte)0xB1;
  assertEquals("*21#+",PhoneNumberUtils.calledPartyBCDToString(b,0,3));
  b[0]=(byte)0x81;
  b[1]=(byte)0xAA;
  b[2]=(byte)0x12;
  b[3]=(byte)0xFB;
  assertEquals("**21#",PhoneNumberUtils.calledPartyBCDToString(b,0,4));
  b[0]=(byte)0x91;
  b[1]=(byte)0xAA;
  b[2]=(byte)0x12;
  b[3]=(byte)0xFB;
  assertEquals("**21#+",PhoneNumberUtils.calledPartyBCDToString(b,0,4));
  b[0]=(byte)0x81;
  b[1]=(byte)0x9A;
  b[2]=(byte)0xA9;
  b[3]=(byte)0x71;
  b[4]=(byte)0x00;
  b[5]=(byte)0x55;
  b[6]=(byte)0x05;
  b[7]=(byte)0x20;
  b[8]=(byte)0xB0;
  assertEquals("*99*17005550020#",PhoneNumberUtils.calledPartyBCDToString(b,0,9));
  b[0]=(byte)0x91;
  b[1]=(byte)0x9A;
  b[2]=(byte)0xA9;
  b[3]=(byte)0x71;
  b[4]=(byte)0x00;
  b[5]=(byte)0x55;
  b[6]=(byte)0x05;
  b[7]=(byte)0x20;
  b[8]=(byte)0xB0;
  assertEquals("*99*+17005550020#",PhoneNumberUtils.calledPartyBCDToString(b,0,9));
  b[0]=(byte)0x81;
  b[1]=(byte)0xAA;
  b[2]=(byte)0x12;
  b[3]=(byte)0x1A;
  b[4]=(byte)0x07;
  b[5]=(byte)0x50;
  b[6]=(byte)0x55;
  b[7]=(byte)0x00;
  b[8]=(byte)0x02;
  b[9]=(byte)0xFB;
  assertEquals("**21*17005550020#",PhoneNumberUtils.calledPartyBCDToString(b,0,10));
  b[0]=(byte)0x91;
  b[1]=(byte)0xAA;
  b[2]=(byte)0x12;
  b[3]=(byte)0x1A;
  b[4]=(byte)0x07;
  b[5]=(byte)0x50;
  b[6]=(byte)0x55;
  b[7]=(byte)0x00;
  b[8]=(byte)0x02;
  b[9]=(byte)0xFB;
  assertEquals("**21*+17005550020#",PhoneNumberUtils.calledPartyBCDToString(b,0,10));
  b[0]=(byte)0x81;
  b[1]=(byte)0x2A;
  b[2]=(byte)0xA1;
  b[3]=(byte)0x71;
  b[4]=(byte)0x00;
  b[5]=(byte)0x55;
  b[6]=(byte)0x05;
  b[7]=(byte)0x20;
  b[8]=(byte)0xF0;
  assertEquals("*21*17005550020",PhoneNumberUtils.calledPartyBCDToString(b,0,9));
  b[0]=(byte)0x91;
  b[1]=(byte)0x2A;
  b[2]=(byte)0xB1;
  b[3]=(byte)0x71;
  b[4]=(byte)0x00;
  b[5]=(byte)0x55;
  b[6]=(byte)0x05;
  b[7]=(byte)0x20;
  b[8]=(byte)0xF0;
  assertEquals("*21#+17005550020",PhoneNumberUtils.calledPartyBCDToString(b,0,9));
  assertNull(PhoneNumberUtils.extractNetworkPortion(null));
  assertNull(PhoneNumberUtils.extractPostDialPortion(null));
  assertTrue(PhoneNumberUtils.compare(null,null));
  assertFalse(PhoneNumberUtils.compare(null,"123"));
  assertFalse(PhoneNumberUtils.compare("123",null));
  assertNull(PhoneNumberUtils.toCallerIDMinMatch(null));
  assertNull(PhoneNumberUtils.getStrippedReversed(null));
  assertNull(PhoneNumberUtils.stringFromStringAndTOA(null,1));
}
