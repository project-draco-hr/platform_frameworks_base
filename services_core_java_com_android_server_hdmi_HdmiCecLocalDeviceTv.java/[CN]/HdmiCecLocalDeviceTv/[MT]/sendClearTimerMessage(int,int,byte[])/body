{
  HdmiCecMessage message=null;
switch (sourceType) {
case TIMER_RECORDING_TYPE_DIGITAL:
    message=HdmiCecMessageBuilder.buildClearDigitalTimer(mAddress,recorderAddress,recordSource);
  break;
case TIMER_RECORDING_TYPE_ANALOGUE:
message=HdmiCecMessageBuilder.buildClearAnalogueTimer(mAddress,recorderAddress,recordSource);
break;
case TIMER_RECORDING_TYPE_EXTERNAL:
message=HdmiCecMessageBuilder.buildClearExternalTimer(mAddress,recorderAddress,recordSource);
break;
default :
Slog.w(TAG,"Invalid source type:" + recorderAddress);
announceClearTimerRecordingResult(CLEAR_TIMER_STATUS_FAIL_TO_CLEAR_SELECTED_SOURCE);
return;
}
mService.sendCecCommand(message,new SendMessageCallback(){
@Override public void onSendCompleted(int error){
if (error != Constants.SEND_RESULT_SUCCESS) {
announceClearTimerRecordingResult(CLEAR_TIMER_STATUS_FAIL_TO_CLEAR_SELECTED_SOURCE);
}
}
}
);
}
