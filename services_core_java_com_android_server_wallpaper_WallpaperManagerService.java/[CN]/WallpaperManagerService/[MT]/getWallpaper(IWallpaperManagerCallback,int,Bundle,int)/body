{
  wallpaperUserId=ActivityManager.handleIncomingUser(Binder.getCallingPid(),Binder.getCallingUid(),wallpaperUserId,false,true,"getWallpaper",null);
  if (which != FLAG_SYSTEM && which != FLAG_LOCK) {
    throw new IllegalArgumentException("Must specify exactly one kind of wallpaper to read");
  }
synchronized (mLock) {
    final SparseArray<WallpaperData> whichSet=(which == FLAG_LOCK) ? mLockWallpaperMap : mWallpaperMap;
    WallpaperData wallpaper=whichSet.get(wallpaperUserId);
    if (wallpaper == null) {
      loadSettingsLocked(wallpaperUserId);
      wallpaper=whichSet.get(wallpaperUserId);
      if (wallpaper == null) {
        return null;
      }
    }
    try {
      if (outParams != null) {
        outParams.putInt("width",wallpaper.width);
        outParams.putInt("height",wallpaper.height);
      }
      if (cb != null) {
        wallpaper.callbacks.register(cb);
      }
      if (!wallpaper.cropFile.exists()) {
        return null;
      }
      return ParcelFileDescriptor.open(wallpaper.cropFile,MODE_READ_ONLY);
    }
 catch (    FileNotFoundException e) {
      Slog.w(TAG,"Error getting wallpaper",e);
    }
    return null;
  }
}
