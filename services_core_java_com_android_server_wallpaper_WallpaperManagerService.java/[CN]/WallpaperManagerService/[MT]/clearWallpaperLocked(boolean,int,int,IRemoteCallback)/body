{
  if (which != FLAG_SET_SYSTEM && which != FLAG_SET_LOCK) {
    throw new IllegalArgumentException("Must specify exactly one kind of wallpaper to read");
  }
  WallpaperData wallpaper=null;
  if (which == FLAG_SET_LOCK) {
    wallpaper=mLockWallpaperMap.get(userId);
    if (wallpaper == null) {
      return;
    }
  }
 else {
    wallpaper=mWallpaperMap.get(userId);
    if (wallpaper == null) {
      loadSettingsLocked(userId);
      wallpaper=mWallpaperMap.get(userId);
    }
  }
  if (wallpaper == null) {
    return;
  }
  final long ident=Binder.clearCallingIdentity();
  try {
    if (wallpaper.wallpaperFile.exists()) {
      wallpaper.wallpaperFile.delete();
      wallpaper.cropFile.delete();
      if (which == FLAG_SET_LOCK) {
        final IWallpaperManagerCallback cb=mKeyguardListener;
        if (cb != null) {
          try {
            cb.onWallpaperChanged();
          }
 catch (          RemoteException e) {
          }
        }
        return;
      }
    }
    RuntimeException e=null;
    try {
      wallpaper.imageWallpaperPending=false;
      if (userId != mCurrentUserId)       return;
      if (bindWallpaperComponentLocked(defaultFailed ? mImageWallpaper : null,true,false,wallpaper,reply)) {
        return;
      }
    }
 catch (    IllegalArgumentException e1) {
      e=e1;
    }
    Slog.e(TAG,"Default wallpaper component not found!",e);
    clearWallpaperComponentLocked(wallpaper);
    if (reply != null) {
      try {
        reply.sendResult(null);
      }
 catch (      RemoteException e1) {
      }
    }
  }
  finally {
    Binder.restoreCallingIdentity(ident);
  }
}
