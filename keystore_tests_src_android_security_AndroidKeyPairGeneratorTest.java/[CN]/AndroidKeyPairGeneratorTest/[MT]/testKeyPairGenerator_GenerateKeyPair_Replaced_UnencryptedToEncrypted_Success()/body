{
{
    mGenerator.initialize(new KeyPairGeneratorSpec.Builder(getContext()).setAlias(TEST_ALIAS_1).setSubject(TEST_DN_1).setSerialNumber(TEST_SERIAL_1).setStartDate(NOW).setEndDate(NOW_PLUS_10_YEARS).build());
    final KeyPair pair1=mGenerator.generateKeyPair();
    assertNotNull("The KeyPair returned should not be null",pair1);
    assertKeyPairCorrect(pair1,TEST_ALIAS_1,TEST_DN_1,TEST_SERIAL_1,NOW,NOW_PLUS_10_YEARS);
  }
{
    mGenerator.initialize(new KeyPairGeneratorSpec.Builder(getContext()).setAlias(TEST_ALIAS_1).setSubject(TEST_DN_2).setSerialNumber(TEST_SERIAL_2).setStartDate(NOW).setEndDate(NOW_PLUS_10_YEARS).setEncryptionRequired().build());
    try {
      mGenerator.generateKeyPair();
      fail("Should not be able to generate encrypted key while not initialized");
    }
 catch (    IllegalStateException expected) {
    }
    assertTrue(mAndroidKeyStore.password("1111"));
    assertTrue(mAndroidKeyStore.isUnlocked());
    final KeyPair pair2=mGenerator.generateKeyPair();
    assertNotNull("The KeyPair returned should not be null",pair2);
    assertKeyPairCorrect(pair2,TEST_ALIAS_1,TEST_DN_2,TEST_SERIAL_2,NOW,NOW_PLUS_10_YEARS);
  }
}
