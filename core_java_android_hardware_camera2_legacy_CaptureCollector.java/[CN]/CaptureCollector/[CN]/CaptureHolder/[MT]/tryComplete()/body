{
  if (!mPreviewCompleted && needsPreview && isPreviewCompleted()) {
    CaptureCollector.this.onPreviewCompleted();
    mPreviewCompleted=true;
  }
  if (isCompleted() && !mCompleted) {
    if (mFailedPreview || mFailedJpeg) {
      if (!mHasStarted) {
        mRequest.failRequest();
        CaptureCollector.this.mDeviceState.setCaptureStart(mRequest,mTimestamp,CameraDeviceImpl.CameraDeviceCallbacks.ERROR_CAMERA_REQUEST);
      }
 else {
        if (mFailedPreview) {
          Log.w(TAG,"Preview buffers dropped for request: " + mRequest.getRequestId());
          for (int i=0; i < mRequest.numPreviewTargets(); i++) {
            CaptureCollector.this.mDeviceState.setCaptureResult(mRequest,null,CameraDeviceImpl.CameraDeviceCallbacks.ERROR_CAMERA_BUFFER);
          }
        }
        if (mFailedJpeg) {
          Log.w(TAG,"Jpeg buffers dropped for request: " + mRequest.getRequestId());
          for (int i=0; i < mRequest.numJpegTargets(); i++) {
            CaptureCollector.this.mDeviceState.setCaptureResult(mRequest,null,CameraDeviceImpl.CameraDeviceCallbacks.ERROR_CAMERA_BUFFER);
          }
        }
      }
    }
    CaptureCollector.this.onRequestCompleted(CaptureHolder.this);
    mCompleted=true;
  }
}
