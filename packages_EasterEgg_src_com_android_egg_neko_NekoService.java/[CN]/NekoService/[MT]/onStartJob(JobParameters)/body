{
  Log.v(TAG,"Starting job: " + String.valueOf(params));
  NotificationManager noman=getSystemService(NotificationManager.class);
  if (NekoLand.DEBUG_NOTIFICATIONS) {
    final Bundle extras=new Bundle();
    extras.putString("android.substName",getString(R.string.notification_name));
    final int size=getResources().getDimensionPixelSize(android.R.dimen.notification_large_icon_width);
    final Cat cat=Cat.create(this);
    final Notification.Builder builder=cat.buildNotification(this).setContentTitle("DEBUG").setContentText("Ran job: " + params);
    noman.notify(1,builder.build());
  }
  final PrefState prefs=new PrefState(this);
  int food=prefs.getFoodState();
  if (food != 0) {
    prefs.setFoodState(0);
    final Random rng=new Random();
    if (rng.nextFloat() <= CAT_CAPTURE_PROB) {
      Cat cat;
      List<Cat> cats=prefs.getCats();
      final int[] probs=getResources().getIntArray(R.array.food_new_cat_prob);
      final float new_cat_prob=(float)((food < probs.length) ? probs[food] : 50) / 100f;
      if (cats.size() == 0 || rng.nextFloat() <= new_cat_prob) {
        cat=Cat.create(this);
        prefs.addCat(cat);
        Log.v(TAG,"A new cat is here: " + cat.getName());
      }
 else {
        cat=cats.get(rng.nextInt(cats.size()));
        Log.v(TAG,"A cat has returned: " + cat.getName());
      }
      final Notification.Builder builder=cat.buildNotification(this);
      noman.notify(CAT_NOTIFICATION,builder.build());
    }
  }
  cancelJob(this);
  return false;
}
