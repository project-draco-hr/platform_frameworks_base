{
  super(context,attrs);
  TypedArray a=context.obtainStyledAttributes(attrs,R.styleable.LockPatternView);
  final String aspect=a.getString(R.styleable.LockPatternView_aspect);
  if ("square".equals(aspect)) {
    mAspect=ASPECT_SQUARE;
  }
 else   if ("lock_width".equals(aspect)) {
    mAspect=ASPECT_LOCK_WIDTH;
  }
 else   if ("lock_height".equals(aspect)) {
    mAspect=ASPECT_LOCK_HEIGHT;
  }
 else {
    mAspect=ASPECT_SQUARE;
  }
  setClickable(true);
  mPathPaint.setAntiAlias(true);
  mPathPaint.setDither(true);
  mRegularColor=getResources().getColor(R.color.lock_pattern_view_regular_color);
  mErrorColor=getResources().getColor(R.color.lock_pattern_view_error_color);
  mSuccessColor=getResources().getColor(R.color.lock_pattern_view_success_color);
  mRegularColor=a.getColor(R.styleable.LockPatternView_regularColor,mRegularColor);
  mErrorColor=a.getColor(R.styleable.LockPatternView_errorColor,mErrorColor);
  mSuccessColor=a.getColor(R.styleable.LockPatternView_successColor,mSuccessColor);
  int pathColor=a.getColor(R.styleable.LockPatternView_pathColor,mRegularColor);
  mPathPaint.setColor(pathColor);
  mPathPaint.setStyle(Paint.Style.STROKE);
  mPathPaint.setStrokeJoin(Paint.Join.ROUND);
  mPathPaint.setStrokeCap(Paint.Cap.ROUND);
  mPathWidth=getResources().getDimensionPixelSize(R.dimen.lock_pattern_dot_line_width);
  mPathPaint.setStrokeWidth(mPathWidth);
  mDotSize=getResources().getDimensionPixelSize(R.dimen.lock_pattern_dot_size);
  mDotSizeActivated=getResources().getDimensionPixelSize(R.dimen.lock_pattern_dot_size_activated);
  mPaint.setAntiAlias(true);
  mPaint.setDither(true);
  mCellStates=new CellState[3][3];
  for (int i=0; i < 3; i++) {
    for (int j=0; j < 3; j++) {
      mCellStates[i][j]=new CellState();
      mCellStates[i][j].size=mDotSize;
    }
  }
  mFastOutSlowInInterpolator=AnimationUtils.loadInterpolator(context,android.R.interpolator.fast_out_slow_in);
  mLinearOutSlowInInterpolator=AnimationUtils.loadInterpolator(context,android.R.interpolator.linear_out_slow_in);
}
