{
  super(context,attrs);
  vibe=new Vibrator();
  TypedArray a=context.obtainStyledAttributes(attrs,R.styleable.LockPatternView);
  final String aspect=a.getString(R.styleable.LockPatternView_aspect);
  if ("square".equals(aspect)) {
    mAspect=ASPECT_SQUARE;
  }
 else   if ("lock_width".equals(aspect)) {
    mAspect=ASPECT_LOCK_WIDTH;
  }
 else   if ("lock_height".equals(aspect)) {
    mAspect=ASPECT_LOCK_HEIGHT;
  }
 else {
    mAspect=ASPECT_SQUARE;
  }
  setClickable(true);
  mPathPaint.setAntiAlias(true);
  mPathPaint.setDither(true);
  mPathPaint.setColor(Color.WHITE);
  mPathPaint.setAlpha(mStrokeAlpha);
  mPathPaint.setStyle(Paint.Style.STROKE);
  mPathPaint.setStrokeJoin(Paint.Join.ROUND);
  mPathPaint.setStrokeCap(Paint.Cap.ROUND);
  mBitmapBtnDefault=getBitmapFor(R.drawable.btn_code_lock_default_holo);
  mBitmapBtnTouched=getBitmapFor(R.drawable.btn_code_lock_touched_holo);
  mBitmapCircleDefault=getBitmapFor(R.drawable.indicator_code_lock_point_area_default_holo);
  mBitmapCircleGreen=getBitmapFor(R.drawable.indicator_code_lock_point_area_green_holo);
  mBitmapCircleRed=getBitmapFor(R.drawable.indicator_code_lock_point_area_red_holo);
  mBitmapArrowGreenUp=getBitmapFor(R.drawable.indicator_code_lock_drag_direction_green_up);
  mBitmapArrowRedUp=getBitmapFor(R.drawable.indicator_code_lock_drag_direction_red_up);
  final Bitmap bitmaps[]={mBitmapBtnDefault,mBitmapBtnTouched,mBitmapCircleDefault,mBitmapCircleGreen,mBitmapCircleRed};
  for (  Bitmap bitmap : bitmaps) {
    mBitmapWidth=Math.max(mBitmapWidth,bitmap.getWidth());
    mBitmapHeight=Math.max(mBitmapHeight,bitmap.getHeight());
  }
  mVibePattern=loadVibratePattern(com.android.internal.R.array.config_virtualKeyVibePattern);
}
