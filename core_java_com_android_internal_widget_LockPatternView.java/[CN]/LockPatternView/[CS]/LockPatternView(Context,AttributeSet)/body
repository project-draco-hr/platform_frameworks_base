{
  super(context,attrs);
  TypedArray a=context.obtainStyledAttributes(attrs,R.styleable.LockPatternView);
  final String aspect=a.getString(R.styleable.LockPatternView_aspect);
  if ("square".equals(aspect)) {
    mAspect=ASPECT_SQUARE;
  }
 else   if ("lock_width".equals(aspect)) {
    mAspect=ASPECT_LOCK_WIDTH;
  }
 else   if ("lock_height".equals(aspect)) {
    mAspect=ASPECT_LOCK_HEIGHT;
  }
 else {
    mAspect=ASPECT_SQUARE;
  }
  setClickable(true);
  mPathPaint.setAntiAlias(true);
  mPathPaint.setDither(true);
  int regularColor=getResources().getColor(R.color.lock_pattern_view_regular_color);
  int errorColor=getResources().getColor(R.color.lock_pattern_view_error_color);
  int successColor=getResources().getColor(R.color.lock_pattern_view_success_color);
  regularColor=a.getColor(R.styleable.LockPatternView_regularColor,regularColor);
  errorColor=a.getColor(R.styleable.LockPatternView_errorColor,errorColor);
  successColor=a.getColor(R.styleable.LockPatternView_successColor,successColor);
  mRegularColorFilter=new PorterDuffColorFilter(regularColor,PorterDuff.Mode.SRC_ATOP);
  mErrorColorFilter=new PorterDuffColorFilter(errorColor,PorterDuff.Mode.SRC_ATOP);
  mSuccessColorFilter=new PorterDuffColorFilter(successColor,PorterDuff.Mode.SRC_ATOP);
  int pathColor=a.getColor(R.styleable.LockPatternView_pathColor,regularColor);
  mPathPaint.setColor(pathColor);
  mPathPaint.setAlpha(mStrokeAlpha);
  mPathPaint.setStyle(Paint.Style.STROKE);
  mPathPaint.setStrokeJoin(Paint.Join.ROUND);
  mPathPaint.setStrokeCap(Paint.Cap.ROUND);
  mBitmapBtnDefault=getBitmapFor(R.drawable.btn_code_lock_default_mtrl_alpha);
  mBitmapBtnTouched=getBitmapFor(R.drawable.btn_code_lock_touched_mtrl_alpha);
  mBitmapCircleDefault=getBitmapFor(R.drawable.indicator_code_lock_point_area_default_mtrl_alpha);
  mBitmapCircleAlpha=getBitmapFor(R.drawable.indicator_code_lock_point_area_mtrl_alpha);
  mBitmapArrowAlphaUp=getBitmapFor(R.drawable.indicator_code_lock_drag_direction_up_mtrl_alpha);
  final Bitmap bitmaps[]={mBitmapBtnDefault,mBitmapBtnTouched,mBitmapCircleDefault,mBitmapCircleAlpha};
  for (  Bitmap bitmap : bitmaps) {
    mBitmapWidth=Math.max(mBitmapWidth,bitmap.getWidth());
    mBitmapHeight=Math.max(mBitmapHeight,bitmap.getHeight());
  }
  mPaint.setAntiAlias(true);
  mPaint.setDither(true);
  mPaint.setFilterBitmap(true);
  mCellStates=new CellState[3][3];
  for (int i=0; i < 3; i++) {
    for (int j=0; j < 3; j++) {
      mCellStates[i][j]=new CellState();
    }
  }
}
