{
  cellState.alpha=endAlpha;
  cellState.translationY=endTranslationY;
  cellState.radius=mDotSize / 2 * endScale;
  cellState.hwAnimating=true;
  cellState.hwCenterY=CanvasProperty.createFloat(getCenterYForRow(cellState.row) + startTranslationY);
  cellState.hwCenterX=CanvasProperty.createFloat(getCenterXForColumn(cellState.col));
  cellState.hwRadius=CanvasProperty.createFloat(mDotSize / 2 * startScale);
  mPaint.setColor(getCurrentColor(false));
  mPaint.setAlpha((int)(startAlpha * 255));
  cellState.hwPaint=CanvasProperty.createPaint(new Paint(mPaint));
  startRtFloatAnimation(cellState.hwCenterY,getCenterYForRow(cellState.row) + endTranslationY,delay,duration,interpolator);
  startRtFloatAnimation(cellState.hwRadius,mDotSize / 2 * endScale,delay,duration,interpolator);
  startRtAlphaAnimation(cellState,endAlpha,delay,duration,interpolator,new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator animation){
      cellState.hwAnimating=false;
      if (finishRunnable != null) {
        finishRunnable.run();
      }
    }
  }
);
  invalidate();
}
