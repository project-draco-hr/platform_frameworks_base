{
  boolean green=mPatternDisplayMode != DisplayMode.Wrong;
  final int endRow=end.row;
  final int startRow=start.row;
  final int endColumn=end.column;
  final int startColumn=start.column;
  final int offsetX=((int)mSquareWidth - mBitmapWidth) / 2;
  final int offsetY=((int)mSquareHeight - mBitmapHeight) / 2;
  Bitmap arrow=green ? mBitmapArrowGreenUp : mBitmapArrowRedUp;
  Matrix matrix=new Matrix();
  final int cellWidth=mBitmapCircleDefault.getWidth();
  final int cellHeight=mBitmapCircleDefault.getHeight();
  final float theta=(float)Math.atan2((double)(endRow - startRow),(double)(endColumn - startColumn));
  final float angle=(float)Math.toDegrees(theta) + 90.0f;
  matrix.setTranslate(leftX + offsetX,topY + offsetY);
  matrix.preRotate(angle,cellWidth / 2.0f,cellHeight / 2.0f);
  matrix.preTranslate((cellWidth - arrow.getWidth()) / 2.0f,0.0f);
  canvas.drawBitmap(arrow,matrix,mPaint);
}
