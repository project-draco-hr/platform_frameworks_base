{
  Thread[] threads=new Thread[10];
  for (int i=0; i < threads.length; i++) {
    threads[i]=new Thread(){
      @Override public void run(){
        for (int i=0; i < 10; i++) {
          try {
            multithreadedFetchRuns++;
switch (multithreadedFetchRandom.nextInt(4)) {
case 0:
{
                fetch("www.fortify.net",443,true,"/sslcheck.html",1,1,0,60);
                break;
              }
case 1:
{
              fetch("mail.google.com",443,true,"/mail/",1,1,0,60);
              break;
            }
case 2:
{
            fetch("www.paypal.com",443,true,"/",1,1,0,60);
            break;
          }
case 3:
{
          fetch("www.yellownet.ch",443,true,"/",1,1,0,60);
          break;
        }
    }
    multithreadedFetchWins++;
  }
 catch (  Exception ex) {
    android.util.Log.d("SSLSocketTest","testMultithreadedFetch() got Exception",ex);
  }
}
}
}
;
threads[i].start();
android.util.Log.d("SSLSocketTest","testMultithreadedFetch() started thread #" + i);
}
for (int i=0; i < threads.length; i++) {
try {
threads[i].join();
android.util.Log.d("SSLSocketTest","testMultithreadedFetch() joined thread #" + i);
}
 catch (InterruptedException ex) {
}
}
assertTrue("At least 95% of multithreaded SSL connections must succeed",multithreadedFetchWins >= (multithreadedFetchRuns * 95) / 100);
}
