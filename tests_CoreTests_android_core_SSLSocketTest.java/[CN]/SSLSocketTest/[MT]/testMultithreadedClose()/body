{
  InetSocketAddress address=new InetSocketAddress("www.fortify.net",443);
  final Socket socket=clientFactory.createSocket();
  socket.connect(address);
  Thread reader=new Thread(){
    @Override public void run(){
      try {
        byte[] buffer=new byte[512];
        InputStream stream=socket.getInputStream();
        socket.getInputStream().read(buffer);
      }
 catch (      Exception ex) {
        android.util.Log.d("SSLSocketTest","testMultithreadedClose() reader got " + ex.toString());
      }
    }
  }
;
  Thread closer=new Thread(){
    @Override public void run(){
      try {
        Thread.sleep(5000);
        socket.close();
      }
 catch (      Exception ex) {
        android.util.Log.d("SSLSocketTest","testMultithreadedClose() closer got " + ex.toString());
      }
    }
  }
;
  android.util.Log.d("SSLSocketTest","testMultithreadedClose() starting reader...");
  reader.start();
  android.util.Log.d("SSLSocketTest","testMultithreadedClose() starting closer...");
  closer.start();
  long t1=System.currentTimeMillis();
  android.util.Log.d("SSLSocketTest","testMultithreadedClose() joining reader...");
  reader.join(30000);
  android.util.Log.d("SSLSocketTest","testMultithreadedClose() joining closer...");
  closer.join(30000);
  long t2=System.currentTimeMillis();
  assertTrue("Concurrent close() hangs",t2 - t1 < 30000);
}
