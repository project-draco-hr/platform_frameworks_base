{
  executeJavaScript("testObject.setByteValue(Number.NaN);");
  assertEquals(0,mTestObject.waitForByteValue());
  executeJavaScript("testObject.setCharValue(Number.NaN);");
  assertEquals('\u0000',mTestObject.waitForCharValue());
  executeJavaScript("testObject.setShortValue(Number.NaN);");
  assertEquals(0,mTestObject.waitForShortValue());
  executeJavaScript("testObject.setIntValue(Number.NaN);");
  assertEquals(0,mTestObject.waitForIntValue());
  executeJavaScript("testObject.setLongValue(Number.NaN);");
  assertEquals(0,mTestObject.waitForLongValue());
  executeJavaScript("testObject.setFloatValue(Number.NaN);");
  assertEquals(Float.NaN,mTestObject.waitForFloatValue());
  executeJavaScript("testObject.setDoubleValue(Number.NaN);");
  assertEquals(Double.NaN,mTestObject.waitForDoubleValue());
  executeJavaScript("testObject.setObjectValue(Number.NaN);");
  assertNull(mTestObject.waitForObjectValue());
  executeJavaScript("testObject.setStringValue(Number.NaN);");
  assertEquals("NaN",mTestObject.waitForStringValue());
  executeJavaScript("testObject.setBooleanValue(Number.NaN);");
  assertFalse(mTestObject.waitForBooleanValue());
  executeJavaScript("testObject.setCustomTypeValue(Number.NaN);");
  assertNull(mTestObject.waitForCustomTypeValue());
}
