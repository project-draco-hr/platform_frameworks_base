{
  executeJavaScript("testObject.setByteValue(42.1);");
  assertEquals(42,mTestObject.waitForByteValue());
  executeJavaScript("testObject.setByteValue(" + Byte.MAX_VALUE + " + 42.1);");
  assertEquals(Byte.MIN_VALUE + 42 - 1,mTestObject.waitForByteValue());
  executeJavaScript("testObject.setByteValue(" + Integer.MAX_VALUE + " + 42.1);");
  assertEquals(-1,mTestObject.waitForByteValue());
  executeJavaScript("testObject.setCharValue(42.1);");
  assertEquals('\u0000',mTestObject.waitForCharValue());
  executeJavaScript("testObject.setShortValue(42.1);");
  assertEquals(42,mTestObject.waitForShortValue());
  executeJavaScript("testObject.setShortValue(" + Short.MAX_VALUE + " + 42.1);");
  assertEquals(Short.MIN_VALUE + 42 - 1,mTestObject.waitForShortValue());
  executeJavaScript("testObject.setShortValue(" + Integer.MAX_VALUE + " + 42.1);");
  assertEquals(-1,mTestObject.waitForShortValue());
  executeJavaScript("testObject.setIntValue(42.1);");
  assertEquals(42,mTestObject.waitForIntValue());
  executeJavaScript("testObject.setIntValue(" + Integer.MAX_VALUE + " + 42.1);");
  assertEquals(Integer.MAX_VALUE,mTestObject.waitForIntValue());
  executeJavaScript("testObject.setLongValue(42.1);");
  assertEquals(42L,mTestObject.waitForLongValue());
  executeJavaScript("testObject.setLongValue(" + Long.MAX_VALUE + " + 42.1);");
  assertEquals(Long.MIN_VALUE,mTestObject.waitForLongValue());
  executeJavaScript("testObject.setFloatValue(42.1);");
  assertEquals(42.1f,mTestObject.waitForFloatValue());
  executeJavaScript("testObject.setDoubleValue(42.1);");
  assertEquals(42.1,mTestObject.waitForDoubleValue());
  executeJavaScript("testObject.setObjectValue(42.1);");
  assertNull(mTestObject.waitForObjectValue());
  executeJavaScript("testObject.setStringValue(42.1);");
  assertEquals("42.1",mTestObject.waitForStringValue());
  executeJavaScript("testObject.setBooleanValue(0.0);");
  assertFalse(mTestObject.waitForBooleanValue());
  executeJavaScript("testObject.setBooleanValue(42.1);");
  assertFalse(mTestObject.waitForBooleanValue());
  executeJavaScript("testObject.setCustomTypeValue(42.1);");
  assertNull(mTestObject.waitForCustomTypeValue());
}
