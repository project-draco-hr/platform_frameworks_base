{
  executeJavaScript("testObject.setBooleanValue(true);");
  assertTrue(mTestObject.waitForBooleanValue());
  executeJavaScript("testObject.setBooleanValue(false);");
  assertFalse(mTestObject.waitForBooleanValue());
  executeJavaScript("testObject.setObjectValue(true);");
  assertNull(mTestObject.waitForObjectValue());
  executeJavaScript("testObject.setStringValue(false);");
  assertEquals("false",mTestObject.waitForStringValue());
  executeJavaScript("testObject.setStringValue(true);");
  assertEquals("true",mTestObject.waitForStringValue());
  executeJavaScript("testObject.setByteValue(true);");
  assertEquals(0,mTestObject.waitForByteValue());
  executeJavaScript("testObject.setByteValue(false);");
  assertEquals(0,mTestObject.waitForByteValue());
  executeJavaScript("testObject.setCharValue(true);");
  assertEquals('\u0000',mTestObject.waitForCharValue());
  executeJavaScript("testObject.setCharValue(false);");
  assertEquals('\u0000',mTestObject.waitForCharValue());
  executeJavaScript("testObject.setShortValue(true);");
  assertEquals(0,mTestObject.waitForShortValue());
  executeJavaScript("testObject.setShortValue(false);");
  assertEquals(0,mTestObject.waitForShortValue());
  executeJavaScript("testObject.setIntValue(true);");
  assertEquals(0,mTestObject.waitForIntValue());
  executeJavaScript("testObject.setIntValue(false);");
  assertEquals(0,mTestObject.waitForIntValue());
  executeJavaScript("testObject.setLongValue(true);");
  assertEquals(0,mTestObject.waitForLongValue());
  executeJavaScript("testObject.setLongValue(false);");
  assertEquals(0,mTestObject.waitForLongValue());
  executeJavaScript("testObject.setFloatValue(true);");
  assertEquals(0.0f,mTestObject.waitForFloatValue());
  executeJavaScript("testObject.setFloatValue(false);");
  assertEquals(0.0f,mTestObject.waitForFloatValue());
  executeJavaScript("testObject.setDoubleValue(true);");
  assertEquals(0.0,mTestObject.waitForDoubleValue());
  executeJavaScript("testObject.setDoubleValue(false);");
  assertEquals(0.0,mTestObject.waitForDoubleValue());
  executeJavaScript("testObject.setCustomTypeValue(true);");
  assertNull(mTestObject.waitForCustomTypeValue());
}
