{
  executeJavaScript("testObject.setByteValue(Infinity);");
  assertEquals(-1,mTestObject.waitForByteValue());
  executeJavaScript("testObject.setCharValue(Infinity);");
  assertEquals('\u0000',mTestObject.waitForCharValue());
  executeJavaScript("testObject.setShortValue(Infinity);");
  assertEquals(-1,mTestObject.waitForShortValue());
  executeJavaScript("testObject.setIntValue(Infinity);");
  assertEquals(Integer.MAX_VALUE,mTestObject.waitForIntValue());
  executeJavaScript("testObject.setLongValue(Infinity);");
  assertEquals(-1L,mTestObject.waitForLongValue());
  executeJavaScript("testObject.setFloatValue(Infinity);");
  assertEquals(Float.POSITIVE_INFINITY,mTestObject.waitForFloatValue());
  executeJavaScript("testObject.setDoubleValue(Infinity);");
  assertEquals(Double.POSITIVE_INFINITY,mTestObject.waitForDoubleValue());
  executeJavaScript("testObject.setObjectValue(Infinity);");
  assertNull(mTestObject.waitForObjectValue());
  executeJavaScript("testObject.setStringValue(Infinity);");
  assertEquals("Inf",mTestObject.waitForStringValue());
  executeJavaScript("testObject.setBooleanValue(Infinity);");
  assertFalse(mTestObject.waitForBooleanValue());
  executeJavaScript("testObject.setCustomTypeValue(Infinity);");
  assertNull(mTestObject.waitForCustomTypeValue());
}
