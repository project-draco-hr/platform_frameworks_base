{
  executeJavaScript("testObject.setByteValue(42);");
  assertEquals(42,mTestObject.waitForByteValue());
  executeJavaScript("testObject.setByteValue(" + Byte.MAX_VALUE + " + 42);");
  assertEquals(Byte.MIN_VALUE + 42 - 1,mTestObject.waitForByteValue());
  executeJavaScript("testObject.setCharValue(42);");
  assertEquals('\u0000',mTestObject.waitForCharValue());
  executeJavaScript("testObject.setShortValue(42);");
  assertEquals(42,mTestObject.waitForShortValue());
  executeJavaScript("testObject.setShortValue(" + Short.MAX_VALUE + " + 42);");
  assertEquals(Short.MIN_VALUE + 42 - 1,mTestObject.waitForShortValue());
  executeJavaScript("testObject.setIntValue(42);");
  assertEquals(42,mTestObject.waitForIntValue());
  executeJavaScript("testObject.setLongValue(42);");
  assertEquals(42L,mTestObject.waitForLongValue());
  executeJavaScript("testObject.setFloatValue(42);");
  assertEquals(42.0f,mTestObject.waitForFloatValue());
  executeJavaScript("testObject.setDoubleValue(42);");
  assertEquals(42.0,mTestObject.waitForDoubleValue());
  executeJavaScript("testObject.setObjectValue(42);");
  assertNull(mTestObject.waitForObjectValue());
  executeJavaScript("testObject.setStringValue(42);");
  String str=mTestObject.waitForStringValue();
  assertTrue("42".equals(str) || "42.0".equals(str));
  executeJavaScript("testObject.setBooleanValue(0);");
  assertFalse(mTestObject.waitForBooleanValue());
  executeJavaScript("testObject.setBooleanValue(42);");
  assertFalse(mTestObject.waitForBooleanValue());
  executeJavaScript("testObject.setCustomTypeValue(42);");
  assertNull(mTestObject.waitForCustomTypeValue());
}
