{
  ElementContext _localctx=new ElementContext(_ctx,getState());
  enterRule(_localctx,6,RULE_element);
  int _la;
  try {
    setState(83);
switch (getInterpreter().adaptivePredict(_input,10,_ctx)) {
case 1:
      enterOuterAlt(_localctx,1);
{
      setState(59);
      match(OPEN);
      setState(60);
      _localctx.elmName=match(Name);
      setState(64);
      _errHandler.sync(this);
      _la=_input.LA(1);
      while (_la == Name) {
{
{
            setState(61);
            attribute();
          }
        }
        setState(66);
        _errHandler.sync(this);
        _la=_input.LA(1);
      }
      setState(67);
      match(CLOSE);
      setState(68);
      content();
      setState(69);
      match(OPEN);
      setState(70);
      match(SLASH);
      setState(71);
      match(Name);
      setState(72);
      match(CLOSE);
    }
  break;
case 2:
enterOuterAlt(_localctx,2);
{
setState(74);
match(OPEN);
setState(75);
_localctx.elmName=match(Name);
setState(79);
_errHandler.sync(this);
_la=_input.LA(1);
while (_la == Name) {
{
{
      setState(76);
      attribute();
    }
  }
  setState(81);
  _errHandler.sync(this);
  _la=_input.LA(1);
}
setState(82);
match(SLASH_CLOSE);
}
break;
}
}
 catch (RecognitionException re) {
_localctx.exception=re;
_errHandler.reportError(this,re);
_errHandler.recover(this,re);
}
 finally {
exitRule();
}
return _localctx;
}
