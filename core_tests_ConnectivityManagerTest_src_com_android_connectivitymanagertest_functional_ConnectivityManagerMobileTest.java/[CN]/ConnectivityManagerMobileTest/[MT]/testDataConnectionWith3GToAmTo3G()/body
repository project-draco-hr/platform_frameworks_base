{
  if (mWifiOnlyFlag) {
    Log.v(TAG,this.getName() + " is excluded for wifi-only test");
    return;
  }
  NetworkInfo networkInfo=mCM.getNetworkInfo(ConnectivityManager.TYPE_MOBILE);
  setStateTransitionCriteria(ConnectivityManager.TYPE_MOBILE,networkInfo.getState(),NetworkState.TO_DISCONNECTION,State.DISCONNECTED);
  networkInfo=mCM.getNetworkInfo(ConnectivityManager.TYPE_WIFI);
  assertEquals(State.DISCONNECTED,networkInfo.getState());
  log("Enable airplane mode");
  mCM.setAirplaneMode(true);
  sleep(SHORT_TIMEOUT);
  networkInfo=mCM.getNetworkInfo(ConnectivityManager.TYPE_WIFI);
  assertEquals(State.DISCONNECTED,networkInfo.getState());
  assertTrue(waitForNetworkState(ConnectivityManager.TYPE_MOBILE,State.DISCONNECTED,LONG_TIMEOUT));
  if (!validateNetworkStates(ConnectivityManager.TYPE_MOBILE)) {
    log("Mobile state transition validation failed.");
    log("reason: " + getTransitionFailureReason(ConnectivityManager.TYPE_MOBILE));
    assertTrue(false);
  }
  networkInfo=mCM.getNetworkInfo(ConnectivityManager.TYPE_MOBILE);
  setStateTransitionCriteria(ConnectivityManager.TYPE_MOBILE,networkInfo.getState(),NetworkState.TO_CONNECTION,State.CONNECTED);
  networkInfo=mCM.getNetworkInfo(ConnectivityManager.TYPE_WIFI);
  setStateTransitionCriteria(ConnectivityManager.TYPE_WIFI,networkInfo.getState(),NetworkState.DO_NOTHING,State.DISCONNECTED);
  mCM.setAirplaneMode(false);
  assertTrue(waitForNetworkState(ConnectivityManager.TYPE_MOBILE,State.CONNECTED,LONG_TIMEOUT));
  if (!validateNetworkStates(ConnectivityManager.TYPE_MOBILE)) {
    log("Mobile state transition validation failed.");
    log("reason: " + getTransitionFailureReason(ConnectivityManager.TYPE_MOBILE));
    assertTrue(false);
  }
  if (!validateNetworkStates(ConnectivityManager.TYPE_WIFI)) {
    log("Wifi state transition validation failed.");
    log("reason: " + getTransitionFailureReason(ConnectivityManager.TYPE_WIFI));
    assertTrue(false);
  }
}
