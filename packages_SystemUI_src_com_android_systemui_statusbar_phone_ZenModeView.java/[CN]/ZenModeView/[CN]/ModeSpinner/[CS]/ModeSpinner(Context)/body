{
  super(context);
  setBackgroundResource(R.drawable.spinner_default_holo_dark_am_no_underline);
  final ArrayAdapter<Integer> adapter=new ArrayAdapter<Integer>(mContext,0){
    @Override public View getView(    int position,    View convertView,    ViewGroup parent){
      if (DEBUG)       log("getView %s parent=%s",position,parent);
      return getDropDownView(position,convertView,parent);
    }
    @Override public View getDropDownView(    int position,    View convertView,    ViewGroup parent){
      if (DEBUG)       log("getDropDownView %s cv=%s parent=%s",position,convertView,parent);
      final TextView tv=convertView != null ? (TextView)convertView : new TextView(context);
      final int mode=getItem(position);
      tv.setText(modeToString(mode));
      if (convertView == null) {
        if (DEBUG)         log(" setting up view");
        tv.setTextColor(GRAY);
        tv.setTypeface(CONDENSED);
        tv.setAllCaps(true);
        tv.setTextSize(TypedValue.COMPLEX_UNIT_PX,tv.getTextSize() * 1.5f);
        final int p=(int)tv.getTextSize() / 2;
        if (parent instanceof ListView) {
          tv.setPadding(p,p,p,p);
        }
 else {
          tv.setGravity(Gravity.CENTER_HORIZONTAL);
          tv.setPadding(p,0,p,0);
        }
      }
      tv.setOnTouchListener(new OnTouchListener(){
        @Override public boolean onTouch(        View v,        MotionEvent event){
          if (DEBUG)           log("onTouch %s %s",tv.getText(),MotionEvent.actionToString(event.getAction()));
          if (mAdapter != null) {
            mAdapter.setMode(mode);
          }
          return false;
        }
      }
);
      return tv;
    }
  }
;
  adapter.add(Adapter.MODE_LIMITED);
  adapter.add(Adapter.MODE_FULL);
  setAdapter(adapter);
}
