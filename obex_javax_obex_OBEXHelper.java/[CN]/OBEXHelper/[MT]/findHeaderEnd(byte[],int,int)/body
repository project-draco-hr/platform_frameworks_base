{
  int fullLength=0;
  int lastLength=-1;
  int index=start;
  int length=0;
  while ((fullLength < maxSize) && (index < headerArray.length)) {
    int headerID=(headerArray[index] < 0 ? headerArray[index] + 256 : headerArray[index]);
    lastLength=fullLength;
switch (headerID & (0xC0)) {
case 0x00:
case 0x40:
      index++;
    length=(headerArray[index] < 0 ? headerArray[index] + 256 : headerArray[index]);
  length=length << 8;
index++;
length+=(headerArray[index] < 0 ? headerArray[index] + 256 : headerArray[index]);
length-=3;
index++;
index+=length;
fullLength+=length + 3;
break;
case 0x80:
index++;
index++;
fullLength+=2;
break;
case 0xC0:
index+=5;
fullLength+=5;
break;
}
}
if (lastLength == 0) {
if (fullLength < maxSize) {
return headerArray.length;
}
 else {
return -1;
}
}
 else {
return lastLength + start;
}
}
