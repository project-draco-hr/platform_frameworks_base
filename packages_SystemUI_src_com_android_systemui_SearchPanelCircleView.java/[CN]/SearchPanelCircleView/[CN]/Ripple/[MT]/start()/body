{
  ValueAnimator animator=ValueAnimator.ofFloat(0.0f,1.0f);
  animator.setInterpolator(new LinearInterpolator());
  animator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){
    @Override public void onAnimationUpdate(    ValueAnimator animation){
      alpha=1.0f - animation.getAnimatedFraction();
      alpha=mDisappearInterpolator.getInterpolation(alpha);
      radius=mAppearInterpolator.getInterpolation(animation.getAnimatedFraction());
      radius*=endRadius;
      invalidate();
    }
  }
);
  animator.addListener(new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator animation){
      mRipples.remove(Ripple.this);
      updateClipping();
    }
    public void onAnimationStart(    Animator animation){
      mRipples.add(Ripple.this);
      updateClipping();
    }
  }
);
  animator.setDuration(400);
  animator.start();
}
