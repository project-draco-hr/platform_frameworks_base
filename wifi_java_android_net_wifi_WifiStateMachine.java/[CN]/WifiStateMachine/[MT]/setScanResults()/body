{
  String bssid="";
  int level=0;
  int freq=0;
  long tsf=0;
  String flags="";
  WifiSsid wifiSsid=null;
  String scanResults;
  String tmpResults;
  StringBuffer scanResultsBuf=new StringBuffer();
  int sid=0;
  while (true) {
    tmpResults=mWifiNative.scanResults(sid);
    if (TextUtils.isEmpty(tmpResults))     break;
    scanResultsBuf.append(tmpResults);
    if (tmpResults.length() < SCAN_BUF_RANGE)     break;
    String[] lines=tmpResults.split("\n");
    sid=-1;
    for (int i=lines.length - 1; i >= 0; i--) {
      if (lines[i].startsWith(ID_STR)) {
        try {
          sid=Integer.parseInt(lines[i].substring(ID_STR.length())) + 1;
        }
 catch (        NumberFormatException e) {
        }
        break;
      }
    }
    if (sid == -1)     break;
  }
  scanResults=scanResultsBuf.toString();
  if (TextUtils.isEmpty(scanResults)) {
    return;
  }
synchronized (mScanResultCache) {
    mScanResults=new ArrayList<ScanResult>();
    String[] lines=scanResults.split("\n");
    for (    String line : lines) {
      if (line.startsWith(BSSID_STR)) {
        bssid=line.substring(BSSID_STR.length());
      }
 else       if (line.startsWith(FREQ_STR)) {
        try {
          freq=Integer.parseInt(line.substring(FREQ_STR.length()));
        }
 catch (        NumberFormatException e) {
          freq=0;
        }
      }
 else       if (line.startsWith(LEVEL_STR)) {
        try {
          level=Integer.parseInt(line.substring(LEVEL_STR.length()));
          if (level > 0)           level-=256;
        }
 catch (        NumberFormatException e) {
          level=0;
        }
      }
 else       if (line.startsWith(TSF_STR)) {
        try {
          tsf=Long.parseLong(line.substring(TSF_STR.length()));
        }
 catch (        NumberFormatException e) {
          tsf=0;
        }
      }
 else       if (line.startsWith(FLAGS_STR)) {
        flags=line.substring(FLAGS_STR.length());
      }
 else       if (line.startsWith(SSID_STR)) {
        wifiSsid=WifiSsid.createFromAsciiEncoded(line.substring(SSID_STR.length()));
      }
 else       if (line.startsWith(DELIMITER_STR)) {
        if (bssid != null) {
          String ssid=(wifiSsid != null) ? wifiSsid.toString() : WifiSsid.NONE;
          String key=bssid + ssid;
          ScanResult scanResult=mScanResultCache.get(key);
          if (scanResult != null) {
            scanResult.level=level;
            scanResult.wifiSsid=wifiSsid;
            scanResult.SSID=(wifiSsid != null) ? wifiSsid.toString() : WifiSsid.NONE;
            scanResult.capabilities=flags;
            scanResult.frequency=freq;
            scanResult.timestamp=tsf;
          }
 else {
            scanResult=new ScanResult(wifiSsid,bssid,flags,level,freq,tsf);
            mScanResultCache.put(key,scanResult);
          }
          mScanResults.add(scanResult);
        }
        bssid=null;
        level=0;
        freq=0;
        tsf=0;
        flags="";
        wifiSsid=null;
      }
    }
  }
}
