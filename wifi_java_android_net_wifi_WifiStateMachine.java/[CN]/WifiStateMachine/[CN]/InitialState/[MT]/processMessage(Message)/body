{
switch (message.what) {
case CMD_START_SUPPLICANT:
    if (mWifiNative.loadDriver()) {
      try {
        mNwService.wifiFirmwareReload(mInterfaceName,"STA");
      }
 catch (      Exception e) {
        loge("Failed to reload STA firmware " + e);
      }
      try {
        mNwService.setInterfaceDown(mInterfaceName);
        mNwService.setInterfaceIpv6PrivacyExtensions(mInterfaceName,true);
        mNwService.disableIpv6(mInterfaceName);
      }
 catch (      RemoteException re) {
        loge("Unable to change interface settings: " + re);
      }
catch (      IllegalStateException ie) {
        loge("Unable to change interface settings: " + ie);
      }
      mWifiNative.killSupplicant(mP2pSupported);
      if (mWifiNative.startSupplicant(mP2pSupported)) {
        setWifiState(WIFI_STATE_ENABLING);
        if (DBG)         log("Supplicant start successful");
        mWifiMonitor.startMonitoring();
        transitionTo(mSupplicantStartingState);
      }
 else {
        loge("Failed to start supplicant!");
      }
    }
 else {
      loge("Failed to load driver");
    }
  break;
case CMD_START_AP:
if (mWifiNative.loadDriver()) {
  setWifiApState(WIFI_AP_STATE_ENABLING);
  transitionTo(mSoftApStartingState);
}
 else {
  loge("Failed to load driver for softap");
}
default :
return NOT_HANDLED;
}
return HANDLED;
}
