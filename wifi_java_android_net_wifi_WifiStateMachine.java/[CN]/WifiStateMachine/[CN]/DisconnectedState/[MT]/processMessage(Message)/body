{
  if (DBG)   log(getName() + message.toString() + "\n");
switch (message.what) {
case CMD_SET_SCAN_MODE:
    if (message.arg1 == SCAN_ONLY_MODE) {
      mWifiNative.setScanResultHandling(message.arg1);
      mWifiNative.disconnect();
      mIsScanMode=true;
      transitionTo(mScanModeState);
    }
  break;
case CMD_ENABLE_BACKGROUND_SCAN:
mEnableBackgroundScan=(message.arg1 == 1);
if (mEnableBackgroundScan) {
mWifiNative.enableBackgroundScan(true);
setScanAlarm(false);
}
 else {
mWifiNative.enableBackgroundScan(false);
setScanAlarm(true);
}
break;
case WifiMonitor.NETWORK_DISCONNECTION_EVENT:
break;
case WifiMonitor.SUPPLICANT_STATE_CHANGE_EVENT:
StateChangeResult stateChangeResult=(StateChangeResult)message.obj;
setNetworkDetailedState(WifiInfo.getDetailedStateOf(stateChangeResult.state));
return NOT_HANDLED;
case CMD_START_SCAN:
if (mEnableBackgroundScan) {
mWifiNative.enableBackgroundScan(false);
}
return NOT_HANDLED;
case WifiMonitor.SCAN_RESULTS_EVENT:
if (mEnableBackgroundScan && mScanResultIsPending) {
mWifiNative.enableBackgroundScan(true);
}
return NOT_HANDLED;
default :
return NOT_HANDLED;
}
return HANDLED;
}
