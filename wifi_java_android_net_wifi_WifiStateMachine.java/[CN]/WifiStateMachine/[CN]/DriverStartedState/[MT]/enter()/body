{
  mIsRunning=true;
  mInDelayedStop=false;
  mDelayedStopCounter++;
  updateBatteryWorkSource(null);
  mWifiNative.setBluetoothCoexistenceScanMode(mBluetoothConnectionActive);
  setCountryCode();
  setFrequencyBand();
  setNetworkDetailedState(DetailedState.DISCONNECTED);
  mWifiNative.stopFilteringMulticastV6Packets();
  if (mFilteringMulticastV4Packets.get()) {
    mWifiNative.startFilteringMulticastV4Packets();
  }
 else {
    mWifiNative.stopFilteringMulticastV4Packets();
  }
  if (mBatchedScanSettings != null) {
    startBatchedScan();
  }
  if (mOperationalMode != CONNECT_MODE) {
    mWifiNative.disconnect();
    transitionTo(mScanModeState);
  }
 else {
    mWifiConfigStore.enableAllNetworks();
    mWifiNative.reconnect();
    mWifiNative.status();
    transitionTo(mDisconnectedState);
  }
  if (mScreenBroadcastReceived.get() == false) {
    PowerManager powerManager=(PowerManager)mContext.getSystemService(Context.POWER_SERVICE);
    handleScreenStateChanged(powerManager.isScreenOn());
  }
 else {
    mWifiNative.setSuspendOptimizations(mSuspendOptNeedsDisabled == 0 && mUserWantsSuspendOpt.get());
  }
  mWifiNative.setPowerSave(true);
  if (mP2pSupported)   mWifiP2pChannel.sendMessage(WifiStateMachine.CMD_ENABLE_P2P);
  final Intent intent=new Intent(WifiManager.WIFI_SCAN_AVAILABLE);
  intent.addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY_BEFORE_BOOT);
  intent.putExtra(WifiManager.EXTRA_SCAN_AVAILABLE,WIFI_STATE_ENABLED);
  mContext.sendStickyBroadcastAsUser(intent,UserHandle.ALL);
}
