{
  super(TAG);
  mContext=context;
  mNetworkInfo=new NetworkInfo(ConnectivityManager.TYPE_WIFI,0,NETWORKTYPE,"");
  mBatteryStats=IBatteryStats.Stub.asInterface(ServiceManager.getService("batteryinfo"));
  IBinder b=ServiceManager.getService(Context.NETWORKMANAGEMENT_SERVICE);
  nwService=INetworkManagementService.Stub.asInterface(b);
  mWifiMonitor=new WifiMonitor(this);
  mDhcpInfo=new DhcpInfo();
  mWifiInfo=new WifiInfo();
  mInterfaceName=SystemProperties.get("wifi.interface","tiwlan0");
  mSupplicantStateTracker=new SupplicantStateTracker(context,getHandler());
  mLinkProperties=new LinkProperties();
  BluetoothAdapter adapter=BluetoothAdapter.getDefaultAdapter();
  if (adapter != null) {
    adapter.getProfileProxy(mContext,mBluetoothProfileServiceListener,BluetoothProfile.A2DP);
    adapter.getProfileProxy(mContext,mBluetoothProfileServiceListener,BluetoothProfile.HEADSET);
  }
  mNetworkInfo.setIsAvailable(false);
  mLinkProperties.clear();
  mLastBssid=null;
  mLastNetworkId=-1;
  mLastSignalLevel=-1;
  mScanResultCache=new LinkedHashMap<String,ScanResult>(SCAN_RESULT_CACHE_SIZE,0.75f,true){
    @Override public boolean removeEldestEntry(    Map.Entry eldest){
      return SCAN_RESULT_CACHE_SIZE < this.size();
    }
  }
;
  PowerManager powerManager=(PowerManager)mContext.getSystemService(Context.POWER_SERVICE);
  mWakeLock=powerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,TAG);
  addState(mDefaultState);
  addState(mInitialState,mDefaultState);
  addState(mDriverUnloadingState,mDefaultState);
  addState(mDriverUnloadedState,mDefaultState);
  addState(mDriverFailedState,mDriverUnloadedState);
  addState(mDriverLoadingState,mDefaultState);
  addState(mDriverLoadedState,mDefaultState);
  addState(mWaitForSupState,mDriverLoadedState);
  addState(mDriverSupReadyState,mDefaultState);
  addState(mDriverStartingState,mDriverSupReadyState);
  addState(mDriverStartedState,mDriverSupReadyState);
  addState(mScanModeState,mDriverStartedState);
  addState(mConnectModeState,mDriverStartedState);
  addState(mConnectingState,mConnectModeState);
  addState(mConnectedState,mConnectModeState);
  addState(mDisconnectingState,mConnectModeState);
  addState(mDisconnectedState,mConnectModeState);
  addState(mDriverStoppingState,mDriverSupReadyState);
  addState(mDriverStoppedState,mDriverSupReadyState);
  addState(mSoftApStartedState,mDefaultState);
  setInitialState(mInitialState);
  if (DBG)   setDbg(true);
  start();
}
