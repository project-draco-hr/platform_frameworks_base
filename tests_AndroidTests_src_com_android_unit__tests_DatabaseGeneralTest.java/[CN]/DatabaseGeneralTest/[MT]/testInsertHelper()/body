{
  Cursor cur;
  ContentValues cv;
  long row;
  mDatabase.execSQL("CREATE TABLE insert_test (" + "_id INTEGER PRIMARY KEY, " + "s TEXT NOT NULL UNIQUE, "+ "t TEXT NOT NULL DEFAULT 'hello world', "+ "i INTEGER, "+ "j INTEGER NOT NULL DEFAULT 1234, "+ "'select' TEXT)");
  DatabaseUtils.InsertHelper ih=new DatabaseUtils.InsertHelper(mDatabase,"insert_test");
  cv=new ContentValues();
  cv.put("s","one");
  row=ih.insert(cv);
  cur=mDatabase.rawQuery("SELECT * FROM insert_test WHERE _id == " + row,null);
  Assert.assertTrue(cur.moveToFirst());
  Assert.assertEquals("one",cur.getString(1));
  Assert.assertEquals("hello world",cur.getString(2));
  Assert.assertNull(cur.getString(3));
  Assert.assertEquals(1234,cur.getLong(4));
  Assert.assertNull(cur.getString(5));
  cv=new ContentValues();
  cv.put("s","two");
  cv.put("t","goodbye world");
  row=ih.insert(cv);
  cur=mDatabase.rawQuery("SELECT * FROM insert_test WHERE _id == " + row,null);
  Assert.assertTrue(cur.moveToFirst());
  Assert.assertEquals("two",cur.getString(1));
  Assert.assertEquals("goodbye world",cur.getString(2));
  Assert.assertNull(cur.getString(3));
  Assert.assertEquals(1234,cur.getLong(4));
  Assert.assertNull(cur.getString(5));
  cv=new ContentValues();
  cv.put("t","goodbye world");
  row=ih.insert(cv);
  Assert.assertEquals(-1,row);
  cv=new ContentValues();
  cv.put("s","three");
  cv.put("i",2345);
  cv.put("j",3456);
  cv.put("select","tricky");
  row=ih.insert(cv);
  cur=mDatabase.rawQuery("SELECT * FROM insert_test WHERE _id == " + row,null);
  Assert.assertTrue(cur.moveToFirst());
  Assert.assertEquals("three",cur.getString(1));
  Assert.assertEquals("hello world",cur.getString(2));
  Assert.assertEquals(2345,cur.getLong(3));
  Assert.assertEquals(3456,cur.getLong(4));
  Assert.assertEquals("tricky",cur.getString(5));
  cv=new ContentValues();
  cv.put("s","three");
  cv.put("i",6789);
  row=ih.insert(cv);
  Assert.assertEquals(-1,row);
  row=ih.replace(cv);
  cur=mDatabase.rawQuery("SELECT * FROM insert_test WHERE _id == " + row,null);
  Assert.assertTrue(cur.moveToFirst());
  Assert.assertEquals("three",cur.getString(1));
  Assert.assertEquals("hello world",cur.getString(2));
  Assert.assertEquals(6789,cur.getLong(3));
  ih.close();
}
