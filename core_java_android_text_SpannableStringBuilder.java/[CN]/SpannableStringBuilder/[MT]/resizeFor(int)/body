{
  final int oldLength=mText.length;
  if (size + 1 <= oldLength) {
    return;
  }
  char[] newText=ArrayUtils.newUnpaddedCharArray(GrowingArrayUtils.growSize(size));
  System.arraycopy(mText,0,newText,0,mGapStart);
  final int newLength=newText.length;
  final int delta=newLength - oldLength;
  final int after=oldLength - (mGapStart + mGapLength);
  System.arraycopy(mText,oldLength - after,newText,newLength - after,after);
  mText=newText;
  mGapLength+=delta;
  if (mGapLength < 1)   new Exception("mGapLength < 1").printStackTrace();
  if (mSpanCount != 0) {
    for (int i=0; i < mSpanCount; i++) {
      if (mSpanStarts[i] > mGapStart)       mSpanStarts[i]+=delta;
      if (mSpanEnds[i] > mGapStart)       mSpanEnds[i]+=delta;
    }
    calcMax(treeRoot());
  }
}
