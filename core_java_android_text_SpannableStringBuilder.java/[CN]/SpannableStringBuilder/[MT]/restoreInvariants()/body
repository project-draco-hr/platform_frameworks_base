{
  if (mSpanCount == 0)   return;
  for (int i=1; i < mSpanCount; i++) {
    if (mSpanStarts[i] < mSpanStarts[i - 1]) {
      Object span=mSpans[i];
      int start=mSpanStarts[i];
      int end=mSpanEnds[i];
      int flags=mSpanFlags[i];
      int insertionOrder=mSpanOrder[i];
      int j=i;
      do {
        mSpans[j]=mSpans[j - 1];
        mSpanStarts[j]=mSpanStarts[j - 1];
        mSpanEnds[j]=mSpanEnds[j - 1];
        mSpanFlags[j]=mSpanFlags[j - 1];
        mSpanOrder[j]=mSpanOrder[j - 1];
        j--;
      }
 while (j > 0 && start < mSpanStarts[j - 1]);
      mSpans[j]=span;
      mSpanStarts[j]=start;
      mSpanEnds[j]=end;
      mSpanFlags[j]=flags;
      mSpanOrder[j]=insertionOrder;
      invalidateIndex(j);
    }
  }
  calcMax(treeRoot());
  if (mIndexOfSpan == null) {
    mIndexOfSpan=new IdentityHashMap<Object,Integer>();
  }
  for (int i=mLowWaterMark; i < mSpanCount; i++) {
    Integer existing=mIndexOfSpan.get(mSpans[i]);
    if (existing == null || existing != i) {
      mIndexOfSpan.put(mSpans[i],i);
    }
  }
  mLowWaterMark=Integer.MAX_VALUE;
}
