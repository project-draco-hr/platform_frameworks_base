{
  checkRange("measureText",start,end);
  float ret;
  if (end <= mGapStart) {
    ret=p.measureText(mText,start,end - start);
  }
 else   if (start >= mGapStart) {
    ret=p.measureText(mText,start + mGapLength,end - start);
  }
 else {
    char[] buf=TextUtils.obtain(end - start);
    getChars(start,end,buf,0);
    ret=p.measureText(buf,0,end - start);
    TextUtils.recycle(buf);
  }
  return ret;
}
