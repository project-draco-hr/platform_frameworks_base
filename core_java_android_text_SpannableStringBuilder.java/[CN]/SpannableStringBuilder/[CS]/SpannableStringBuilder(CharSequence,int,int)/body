{
  int srclen=end - start;
  if (srclen < 0)   throw new StringIndexOutOfBoundsException();
  mText=ArrayUtils.newUnpaddedCharArray(GrowingArrayUtils.growSize(srclen));
  mGapStart=srclen;
  mGapLength=mText.length - srclen;
  TextUtils.getChars(text,start,end,mText,0);
  mSpanCount=0;
  mSpanInsertCount=0;
  mSpans=EmptyArray.OBJECT;
  mSpanStarts=EmptyArray.INT;
  mSpanEnds=EmptyArray.INT;
  mSpanFlags=EmptyArray.INT;
  mSpanMax=EmptyArray.INT;
  mSpanOrder=EmptyArray.INT;
  mPrioSortBuffer=EmptyArray.INT;
  mOrderSortBuffer=EmptyArray.INT;
  if (text instanceof Spanned) {
    Spanned sp=(Spanned)text;
    Object[] spans=sp.getSpans(start,end,Object.class);
    for (int i=0; i < spans.length; i++) {
      if (spans[i] instanceof NoCopySpan) {
        continue;
      }
      int st=sp.getSpanStart(spans[i]) - start;
      int en=sp.getSpanEnd(spans[i]) - start;
      int fl=sp.getSpanFlags(spans[i]);
      if (st < 0)       st=0;
      if (st > end - start)       st=end - start;
      if (en < 0)       en=0;
      if (en > end - start)       en=end - start;
      setSpan(false,spans[i],st,en,fl);
    }
    restoreInvariants();
  }
}
