{
  mWakeLock.setWorkSource(mSystemWorkSource);
  if (mLastIdler == null) {
    if (DEBUG) {
      Slog.i(TAG,"Queue already drained; nothing more to do");
    }
    return;
  }
  if (DEBUG) {
    Slog.i(TAG,"startNextIdleService : last=" + mLastIdler + " cur="+ mCurrentIdler);
    if (mIdleServiceQueue.size() > 0) {
      int i=0;
      Slog.i(TAG,"Queue (" + mIdleServiceQueue.size() + "):");
      for (      IdleServiceInfo info : mIdleServiceQueue) {
        Slog.i(TAG,"   " + i + " : "+ info);
        i++;
      }
    }
  }
  if (mCurrentIdler != mLastIdler) {
    if (mIdleServiceQueue.size() > 0) {
      IdleServiceInfo target=mIdleServiceQueue.pop();
      if (DEBUG) {
        Slog.i(TAG,"starting next idle service " + target);
      }
      Intent idleIntent=new Intent(IdleService.SERVICE_INTERFACE);
      idleIntent.setComponent(target.componentName);
      mCurrentIdler=target;
      ActiveTask task=new ActiveTask(target,VERB_BINDING);
      scheduleOpTimeoutTm(task);
      boolean bindOk=mContext.bindServiceAsUser(idleIntent,mConnection,Context.BIND_AUTO_CREATE | Context.BIND_WAIVE_PRIORITY,UserHandle.OWNER);
      if (!bindOk) {
        if (DEBUG) {
          Slog.w(TAG,"bindService() to " + target.componentName + " failed");
        }
      }
 else {
        mIdleServiceQueue.add(target);
        if (DEBUG) {
          Slog.i(TAG,"Attributing wakelock to target uid " + target.uid);
        }
        mWakeLock.setWorkSource(new WorkSource(target.uid));
      }
    }
 else {
      Slog.e(TAG,"Queue unexpectedly empty; resetting.  last=" + mLastIdler + " cur="+ mCurrentIdler);
      mHandler.removeMessages(MSG_TIMEOUT);
      mPendingOperations.clear();
      stopIdleMaintenanceTm();
    }
  }
 else {
    if (DEBUG) {
      Slog.i(TAG,"Reached end of queue.");
    }
    stopIdleMaintenanceTm();
  }
}
