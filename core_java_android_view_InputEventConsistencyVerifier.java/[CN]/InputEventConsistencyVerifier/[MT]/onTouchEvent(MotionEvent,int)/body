{
  if (!startEvent(event,nestingLevel,EVENT_TYPE_TOUCH)) {
    return;
  }
  final int action=event.getAction();
  final boolean newStream=action == MotionEvent.ACTION_DOWN || action == MotionEvent.ACTION_CANCEL || action == MotionEvent.ACTION_OUTSIDE;
  if (newStream && (mTouchEventStreamIsTainted || mTouchEventStreamUnhandled)) {
    mTouchEventStreamIsTainted=false;
    mTouchEventStreamUnhandled=false;
    mTouchEventStreamPointers=0;
  }
  if (mTouchEventStreamIsTainted) {
    event.setTainted(true);
  }
  try {
    ensureMetaStateIsNormalized(event.getMetaState());
    final int deviceId=event.getDeviceId();
    final int source=event.getSource();
    if (!newStream && mTouchEventStreamDeviceId != -1 && (mTouchEventStreamDeviceId != deviceId || mTouchEventStreamSource != source)) {
      problem("Touch event stream contains events from multiple sources: " + "previous device id " + mTouchEventStreamDeviceId + ", previous source "+ Integer.toHexString(mTouchEventStreamSource)+ ", new device id "+ deviceId+ ", new source "+ Integer.toHexString(source));
    }
    mTouchEventStreamDeviceId=deviceId;
    mTouchEventStreamSource=source;
    final int pointerCount=event.getPointerCount();
    if ((source & InputDevice.SOURCE_CLASS_POINTER) != 0) {
switch (action) {
case MotionEvent.ACTION_DOWN:
        if (mTouchEventStreamPointers != 0) {
          problem("ACTION_DOWN but pointers are already down.  " + "Probably missing ACTION_UP from previous gesture.");
        }
      ensureHistorySizeIsZeroForThisAction(event);
    ensurePointerCountIsOneForThisAction(event);
  mTouchEventStreamPointers=1 << event.getPointerId(0);
break;
case MotionEvent.ACTION_UP:
ensureHistorySizeIsZeroForThisAction(event);
ensurePointerCountIsOneForThisAction(event);
mTouchEventStreamPointers=0;
mTouchEventStreamIsTainted=false;
break;
case MotionEvent.ACTION_MOVE:
{
final int expectedPointerCount=Integer.bitCount(mTouchEventStreamPointers);
if (pointerCount != expectedPointerCount) {
problem("ACTION_MOVE contained " + pointerCount + " pointers but there are currently "+ expectedPointerCount+ " pointers down.");
mTouchEventStreamIsTainted=true;
}
break;
}
case MotionEvent.ACTION_CANCEL:
mTouchEventStreamPointers=0;
mTouchEventStreamIsTainted=false;
break;
case MotionEvent.ACTION_OUTSIDE:
if (mTouchEventStreamPointers != 0) {
problem("ACTION_OUTSIDE but pointers are still down.");
}
ensureHistorySizeIsZeroForThisAction(event);
ensurePointerCountIsOneForThisAction(event);
mTouchEventStreamIsTainted=false;
break;
default :
{
final int actionMasked=event.getActionMasked();
final int actionIndex=event.getActionIndex();
if (actionMasked == MotionEvent.ACTION_POINTER_DOWN) {
if (mTouchEventStreamPointers == 0) {
problem("ACTION_POINTER_DOWN but no other pointers were down.");
mTouchEventStreamIsTainted=true;
}
if (actionIndex < 0 || actionIndex >= pointerCount) {
problem("ACTION_POINTER_DOWN index is " + actionIndex + " but the pointer count is "+ pointerCount+ ".");
mTouchEventStreamIsTainted=true;
}
 else {
final int id=event.getPointerId(actionIndex);
final int idBit=1 << id;
if ((mTouchEventStreamPointers & idBit) != 0) {
problem("ACTION_POINTER_DOWN specified pointer id " + id + " which is already down.");
mTouchEventStreamIsTainted=true;
}
 else {
mTouchEventStreamPointers|=idBit;
}
}
ensureHistorySizeIsZeroForThisAction(event);
}
 else if (actionMasked == MotionEvent.ACTION_POINTER_UP) {
if (actionIndex < 0 || actionIndex >= pointerCount) {
problem("ACTION_POINTER_UP index is " + actionIndex + " but the pointer count is "+ pointerCount+ ".");
mTouchEventStreamIsTainted=true;
}
 else {
final int id=event.getPointerId(actionIndex);
final int idBit=1 << id;
if ((mTouchEventStreamPointers & idBit) == 0) {
problem("ACTION_POINTER_UP specified pointer id " + id + " which is not currently down.");
mTouchEventStreamIsTainted=true;
}
 else {
mTouchEventStreamPointers&=~idBit;
}
}
ensureHistorySizeIsZeroForThisAction(event);
}
 else {
problem("Invalid action " + MotionEvent.actionToString(action) + " for touch event.");
}
break;
}
}
}
 else {
problem("Source was not SOURCE_CLASS_POINTER.");
}
}
  finally {
finishEvent();
}
}
