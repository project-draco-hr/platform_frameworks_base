{
  super.onDraw(c);
  if (SHOW_TOUCHES) {
    for (    Player p : mPlayers) {
      if (p.mTouchX > 0) {
        mTouchPaint.setColor(0x80FFFFFF & p.color);
        mPlayerTracePaint.setColor(0x80FFFFFF & p.color);
        float x1=p.mTouchX;
        float y1=p.mTouchY;
        c.drawCircle(x1,y1,100,mTouchPaint);
        float x2=p.getX() + p.getPivotX();
        float y2=p.getY() + p.getPivotY();
        float angle=PI_2 - (float)Math.atan2(x2 - x1,y2 - y1);
        x1+=100 * Math.cos(angle);
        y1+=100 * Math.sin(angle);
        c.drawLine(x1,y1,x2,y2,mPlayerTracePaint);
      }
    }
  }
  if (!DEBUG_DRAW)   return;
  final Paint pt=new Paint();
  pt.setColor(0xFFFFFFFF);
  for (  Player p : mPlayers) {
    final int L=p.corners.length;
    final int N=L / 2;
    for (int i=0; i < N; i++) {
      final int x=(int)p.corners[i * 2];
      final int y=(int)p.corners[i * 2 + 1];
      c.drawCircle(x,y,4,pt);
      c.drawLine(x,y,p.corners[(i * 2 + 2) % L],p.corners[(i * 2 + 3) % L],pt);
    }
  }
  pt.setStyle(Paint.Style.STROKE);
  pt.setStrokeWidth(getResources().getDisplayMetrics().density);
  final int M=getChildCount();
  pt.setColor(0x8000FF00);
  for (int i=0; i < M; i++) {
    final View v=getChildAt(i);
    if (v instanceof Player)     continue;
    if (!(v instanceof GameView))     continue;
    if (v instanceof Pop) {
      final Pop pop=(Pop)v;
      c.drawCircle(pop.cx,pop.cy,pop.r,pt);
    }
 else {
      final Rect r=new Rect();
      v.getHitRect(r);
      c.drawRect(r,pt);
    }
  }
  pt.setColor(Color.BLACK);
  final StringBuilder sb=new StringBuilder("obstacles: ");
  for (  Obstacle ob : mObstaclesInPlay) {
    sb.append(ob.hitRect.toShortString());
    sb.append(" ");
  }
  pt.setTextSize(20f);
  c.drawText(sb.toString(),20,100,pt);
}
