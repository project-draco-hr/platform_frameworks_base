{
  int childWidth=0;
  int childMargins=0;
  if (getChildCount() > 0) {
    childWidth=getChildAt(0).getMeasuredWidth();
    LayoutParams childParams=(LayoutParams)getChildAt(0).getLayoutParams();
    childMargins=childParams.leftMargin + childParams.rightMargin;
  }
  final int available=r - l - getPaddingLeftWithForeground()- getPaddingRightWithForeground()- childMargins;
  final boolean forceLeftGravity=(childWidth > available);
  layoutChildren(l,t,r,b,forceLeftGravity);
  mIsLayoutDirty=false;
  if (mChildToScrollTo != null && isViewDescendantOf(mChildToScrollTo,this)) {
    scrollToChild(mChildToScrollTo);
  }
  mChildToScrollTo=null;
  if (!isLaidOut()) {
    final int scrollRange=Math.max(0,childWidth - (r - l - mPaddingLeft- mPaddingRight));
    if (mSavedState != null) {
      if (isLayoutRtl() == mSavedState.isLayoutRtl) {
        mScrollX=mSavedState.scrollPosition;
      }
 else {
        mScrollX=scrollRange - mSavedState.scrollPosition;
      }
      mSavedState=null;
    }
 else {
      if (isLayoutRtl()) {
        mScrollX=scrollRange - mScrollX;
      }
    }
    if (mScrollX > scrollRange) {
      mScrollX=scrollRange;
    }
 else     if (mScrollX < 0) {
      mScrollX=0;
    }
  }
  scrollTo(mScrollX,mScrollY);
}
