{
  try {
    if (TRACE_FOR_PRELOAD) {
      if ((id >>> 24) == 0x1) {
        final String name=getResourceName(id);
        if (name != null) {
          Log.d("PreloadDrawable",name);
        }
      }
    }
    final boolean isColorDrawable;
    final DrawableCache caches;
    final long key;
    if (value.type >= TypedValue.TYPE_FIRST_COLOR_INT && value.type <= TypedValue.TYPE_LAST_COLOR_INT) {
      isColorDrawable=true;
      caches=mColorDrawableCache;
      key=value.data;
    }
 else {
      isColorDrawable=false;
      caches=mDrawableCache;
      key=(((long)value.assetCookie) << 32) | value.data;
    }
    if (!mPreloading && useCache) {
      final Drawable cachedDrawable=caches.getInstance(key,wrapper,theme);
      if (cachedDrawable != null) {
        return cachedDrawable;
      }
    }
    final Drawable.ConstantState cs;
    if (isColorDrawable) {
      cs=sPreloadedColorDrawables.get(key);
    }
 else {
      cs=sPreloadedDrawables[mConfiguration.getLayoutDirection()].get(key);
    }
    Drawable dr;
    if (cs != null) {
      dr=cs.newDrawable(wrapper);
    }
 else     if (isColorDrawable) {
      dr=new ColorDrawable(value.data);
    }
 else {
      dr=loadDrawableForCookie(wrapper,value,id,null);
    }
    final boolean canApplyTheme=dr != null && dr.canApplyTheme();
    if (canApplyTheme && theme != null) {
      dr=dr.mutate();
      dr.applyTheme(theme);
      dr.clearMutated();
    }
    if (dr != null && useCache) {
      dr.setChangingConfigurations(value.changingConfigurations);
      cacheDrawable(value,isColorDrawable,caches,theme,canApplyTheme,key,dr);
    }
    return dr;
  }
 catch (  Exception e) {
    String name;
    try {
      name=getResourceName(id);
    }
 catch (    NotFoundException e2) {
      name="(missing name)";
    }
    final NotFoundException nfe=new NotFoundException("Drawable " + name + " with resource ID #0x"+ Integer.toHexString(id),e);
    nfe.setStackTrace(new StackTraceElement[0]);
    throw nfe;
  }
}
