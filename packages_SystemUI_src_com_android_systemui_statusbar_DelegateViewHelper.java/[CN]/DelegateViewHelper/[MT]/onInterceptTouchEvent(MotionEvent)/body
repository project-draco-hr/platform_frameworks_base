{
  if (mSourceView == null || mDelegateView == null || mBar.shouldDisableNavbarGestures()) {
    return false;
  }
  mSourceView.getLocationOnScreen(mTempPoint);
  final float sourceX=mTempPoint[0];
  final float sourceY=mTempPoint[1];
  final int action=event.getAction();
switch (action) {
case MotionEvent.ACTION_DOWN:
    mPanelShowing=mDelegateView.getVisibility() == View.VISIBLE;
  mDownPoint[0]=event.getX();
mDownPoint[1]=event.getY();
mStarted=mInitialTouch.contains(mDownPoint[0] + sourceX,mDownPoint[1] + sourceY);
break;
}
if (!mStarted) {
return false;
}
if (!mDisabled && !mPanelShowing && action == MotionEvent.ACTION_MOVE) {
final int historySize=event.getHistorySize();
for (int k=0; k < historySize + 1; k++) {
float x=k < historySize ? event.getHistoricalX(k) : event.getX();
float y=k < historySize ? event.getHistoricalY(k) : event.getY();
final float distance=mSwapXY ? (mDownPoint[0] - x) : (mDownPoint[1] - y);
if (distance > mTriggerThreshhold) {
mBar.showSearchPanel();
mPanelShowing=true;
break;
}
}
}
if (action == MotionEvent.ACTION_DOWN) {
mBar.setInteracting(StatusBarManager.WINDOW_NAVIGATION_BAR,true);
}
 else if (action == MotionEvent.ACTION_UP || action == MotionEvent.ACTION_CANCEL) {
mBar.setInteracting(StatusBarManager.WINDOW_NAVIGATION_BAR,false);
}
mDelegateView.getLocationOnScreen(mTempPoint);
final float delegateX=mTempPoint[0];
final float delegateY=mTempPoint[1];
float deltaX=sourceX - delegateX;
float deltaY=sourceY - delegateY;
event.offsetLocation(deltaX,deltaY);
mDelegateView.dispatchTouchEvent(event);
event.offsetLocation(-deltaX,-deltaY);
return mPanelShowing;
}
