{
  if (!enabled) {
    return;
  }
  builder.append(" ");
  builder.append(name + ":{");
  if (pointer == null) {
    builder.append("undefined");
    return;
  }
  if (pointer.mStride < 0) {
    builder.append("invalid stride");
    return;
  }
  int stride=pointer.getStride();
  ByteBuffer byteBuffer=pointer.mTempByteBuffer;
  int size=pointer.mSize;
  int type=pointer.mType;
  int sizeofType=pointer.sizeof(type);
  int byteOffset=stride * index;
  for (int i=0; i < size; i++) {
    if (i > 0) {
      builder.append(", ");
    }
switch (type) {
case GL_BYTE:
{
        byte d=byteBuffer.get(byteOffset);
        builder.append(Integer.toString(d));
      }
    break;
case GL_UNSIGNED_BYTE:
{
    byte d=byteBuffer.get(byteOffset);
    builder.append(Integer.toString(0xff & d));
  }
break;
case GL_SHORT:
{
ShortBuffer shortBuffer=byteBuffer.asShortBuffer();
short d=shortBuffer.get(byteOffset / 2);
builder.append(Integer.toString(d));
}
break;
case GL_FIXED:
{
IntBuffer intBuffer=byteBuffer.asIntBuffer();
int d=intBuffer.get(byteOffset / 4);
builder.append(Integer.toString(d));
}
break;
case GL_FLOAT:
{
FloatBuffer intBuffer=byteBuffer.asFloatBuffer();
float d=intBuffer.get(byteOffset / 4);
builder.append(Float.toString(d));
}
break;
default :
builder.append("?");
break;
}
byteOffset+=sizeofType;
}
builder.append("}");
}
