{
  TypedValue[] staticValues=new TypedValue[]{new TypedValue(),new TypedValue()};
  TypedValue[] changingValues=new TypedValue[]{new TypedValue(),new TypedValue()};
  float staticDim=0;
  float changingDim=0;
  final Resources res=getActivity().getResources();
  for (int i=0; i < 2; i++) {
    res.getValue(R.dimen.resource_cache_test_generic,staticValues[i],true);
    staticDim=TypedValue.complexToDimension(staticValues[i].data,res.getDisplayMetrics());
    res.getValue(R.dimen.resource_cache_test_orientation_dependent,changingValues[i],true);
    changingDim=TypedValue.complexToDimension(changingValues[i].data,res.getDisplayMetrics());
    final Resources.Theme theme=i == 0 ? getActivity().getTheme() : null;
    mCache.put(R.dimen.resource_cache_test_generic,theme,new DummyFloatConstantState(staticDim,staticValues[i].changingConfigurations));
    mCache.put(R.dimen.resource_cache_test_orientation_dependent,theme,new DummyFloatConstantState(changingDim,changingValues[i].changingConfigurations));
  }
  final Configuration cfg=res.getConfiguration();
  Configuration newCnf=new Configuration(cfg);
  newCnf.orientation=cfg.orientation == Configuration.ORIENTATION_LANDSCAPE ? Configuration.ORIENTATION_PORTRAIT : Configuration.ORIENTATION_LANDSCAPE;
  int changes=calcConfigChanges(res,newCnf);
  for (int i=0; i < 2; i++) {
    final Resources.Theme theme=i == 0 ? getActivity().getTheme() : null;
    assertEquals(staticDim,mCache.get(R.dimen.resource_cache_test_generic,theme));
    assertEquals(changingDim,mCache.get(R.dimen.resource_cache_test_orientation_dependent,theme));
  }
  mCache.onConfigurationChange(changes);
  for (int i=0; i < 2; i++) {
    final Resources.Theme theme=i == 0 ? getActivity().getTheme() : null;
    assertEquals(staticDim,mCache.get(R.dimen.resource_cache_test_generic,theme));
    assertNull(mCache.get(R.dimen.resource_cache_test_orientation_dependent,theme));
  }
}
