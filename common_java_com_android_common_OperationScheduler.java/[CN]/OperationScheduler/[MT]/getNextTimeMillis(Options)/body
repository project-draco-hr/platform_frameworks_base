{
  boolean enabledState=mStorage.getBoolean(PREFIX + "enabledState",true);
  if (!enabledState)   return Long.MAX_VALUE;
  boolean permanentError=mStorage.getBoolean(PREFIX + "permanentError",false);
  if (permanentError)   return Long.MAX_VALUE;
  int errorCount=mStorage.getInt(PREFIX + "errorCount",0);
  long now=System.currentTimeMillis();
  long lastSuccessTimeMillis=getTimeBefore(PREFIX + "lastSuccessTimeMillis",now);
  long lastErrorTimeMillis=getTimeBefore(PREFIX + "lastErrorTimeMillis",now);
  long triggerTimeMillis=mStorage.getLong(PREFIX + "triggerTimeMillis",Long.MAX_VALUE);
  long moratoriumSetMillis=mStorage.getLong(PREFIX + "moratoriumSetTimeMillis",0);
  long moratoriumTimeMillis=getTimeBefore(PREFIX + "moratoriumTimeMillis",moratoriumSetMillis + options.maxMoratoriumMillis);
  long time=triggerTimeMillis;
  if (options.periodicIntervalMillis > 0) {
    time=Math.min(time,lastSuccessTimeMillis + options.periodicIntervalMillis);
  }
  if (time >= moratoriumTimeMillis - options.maxMoratoriumMillis) {
    time=Math.max(time,moratoriumTimeMillis);
  }
  time=Math.max(time,lastSuccessTimeMillis + options.minTriggerMillis);
  time=Math.max(time,lastErrorTimeMillis + options.backoffFixedMillis + options.backoffIncrementalMillis * errorCount);
  return time;
}
