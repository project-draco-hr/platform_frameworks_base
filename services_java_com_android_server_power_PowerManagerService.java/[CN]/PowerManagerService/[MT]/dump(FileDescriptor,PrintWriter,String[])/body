{
  if (mContext.checkCallingOrSelfPermission(Manifest.permission.DUMP) != PackageManager.PERMISSION_GRANTED) {
    pw.println("Permission Denial: can't dump PowerManager from from pid=" + Binder.getCallingPid() + ", uid="+ Binder.getCallingUid());
    return;
  }
  pw.println("POWER MANAGER (dumpsys power)\n");
  final DisplayPowerController dpc;
synchronized (mLock) {
    pw.println("Power Manager State:");
    pw.println("  mDirty=0x" + Integer.toHexString(mDirty));
    pw.println("  mWakefulness=" + wakefulnessToString(mWakefulness));
    pw.println("  mIsPowered=" + mIsPowered);
    pw.println("  mPlugType=" + mPlugType);
    pw.println("  mBatteryLevel=" + mBatteryLevel);
    pw.println("  mBatteryLevelWhenDreamStarted=" + mBatteryLevelWhenDreamStarted);
    pw.println("  mDockState=" + mDockState);
    pw.println("  mStayOn=" + mStayOn);
    pw.println("  mProximityPositive=" + mProximityPositive);
    pw.println("  mBootCompleted=" + mBootCompleted);
    pw.println("  mSystemReady=" + mSystemReady);
    pw.println("  mWakeLockSummary=0x" + Integer.toHexString(mWakeLockSummary));
    pw.println("  mUserActivitySummary=0x" + Integer.toHexString(mUserActivitySummary));
    pw.println("  mRequestWaitForNegativeProximity=" + mRequestWaitForNegativeProximity);
    pw.println("  mSandmanScheduled=" + mSandmanScheduled);
    pw.println("  mLastWakeTime=" + TimeUtils.formatUptime(mLastWakeTime));
    pw.println("  mLastSleepTime=" + TimeUtils.formatUptime(mLastSleepTime));
    pw.println("  mSendWakeUpFinishedNotificationWhenReady=" + mSendWakeUpFinishedNotificationWhenReady);
    pw.println("  mSendGoToSleepFinishedNotificationWhenReady=" + mSendGoToSleepFinishedNotificationWhenReady);
    pw.println("  mLastUserActivityTime=" + TimeUtils.formatUptime(mLastUserActivityTime));
    pw.println("  mLastUserActivityTimeNoChangeLights=" + TimeUtils.formatUptime(mLastUserActivityTimeNoChangeLights));
    pw.println("  mDisplayReady=" + mDisplayReady);
    pw.println("  mHoldingWakeLockSuspendBlocker=" + mHoldingWakeLockSuspendBlocker);
    pw.println();
    pw.println("Settings and Configuration:");
    pw.println("  mDreamsSupportedConfig=" + mDreamsSupportedConfig);
    pw.println("  mDreamsEnabledSetting=" + mDreamsEnabledSetting);
    pw.println("  mDreamsActivateOnSleepSetting=" + mDreamsActivateOnSleepSetting);
    pw.println("  mDreamsActivateOnDockSetting=" + mDreamsActivateOnDockSetting);
    pw.println("  mScreenOffTimeoutSetting=" + mScreenOffTimeoutSetting);
    pw.println("  mMaximumScreenOffTimeoutFromDeviceAdmin=" + mMaximumScreenOffTimeoutFromDeviceAdmin + " (enforced="+ isMaximumScreenOffTimeoutFromDeviceAdminEnforcedLocked()+ ")");
    pw.println("  mStayOnWhilePluggedInSetting=" + mStayOnWhilePluggedInSetting);
    pw.println("  mScreenBrightnessSetting=" + mScreenBrightnessSetting);
    pw.println("  mScreenAutoBrightnessAdjustmentSetting=" + mScreenAutoBrightnessAdjustmentSetting);
    pw.println("  mScreenBrightnessModeSetting=" + mScreenBrightnessModeSetting);
    pw.println("  mScreenBrightnessOverrideFromWindowManager=" + mScreenBrightnessOverrideFromWindowManager);
    pw.println("  mUserActivityTimeoutOverrideFromWindowManager=" + mUserActivityTimeoutOverrideFromWindowManager);
    pw.println("  mTemporaryScreenBrightnessSettingOverride=" + mTemporaryScreenBrightnessSettingOverride);
    pw.println("  mTemporaryScreenAutoBrightnessAdjustmentSettingOverride=" + mTemporaryScreenAutoBrightnessAdjustmentSettingOverride);
    pw.println("  mScreenBrightnessSettingMinimum=" + mScreenBrightnessSettingMinimum);
    pw.println("  mScreenBrightnessSettingMaximum=" + mScreenBrightnessSettingMaximum);
    pw.println("  mScreenBrightnessSettingDefault=" + mScreenBrightnessSettingDefault);
    final int screenOffTimeout=getScreenOffTimeoutLocked();
    final int screenDimDuration=getScreenDimDurationLocked(screenOffTimeout);
    pw.println();
    pw.println("Screen off timeout: " + screenOffTimeout + " ms");
    pw.println("Screen dim duration: " + screenDimDuration + " ms");
    pw.println();
    pw.println("Wake Locks: size=" + mWakeLocks.size());
    for (    WakeLock wl : mWakeLocks) {
      pw.println("  " + wl);
    }
    pw.println();
    pw.println("Suspend Blockers: size=" + mSuspendBlockers.size());
    for (    SuspendBlocker sb : mSuspendBlockers) {
      pw.println("  " + sb);
    }
    pw.println();
    pw.println("Screen On Blocker: " + mScreenOnBlocker);
    pw.println();
    pw.println("Display Blanker: " + mDisplayBlanker);
    dpc=mDisplayPowerController;
  }
  if (dpc != null) {
    dpc.dump(pw);
  }
}
