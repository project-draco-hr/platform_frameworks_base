{
  if ((dirty & (DIRTY_WAKE_LOCKS | DIRTY_USER_ACTIVITY | DIRTY_WAKEFULNESS| DIRTY_ACTUAL_DISPLAY_POWER_STATE_UPDATED| DIRTY_BOOT_COMPLETED| DIRTY_SETTINGS)) != 0) {
    int newScreenState=getDesiredScreenPowerState();
    if (newScreenState != mDisplayPowerRequest.screenState) {
      if (newScreenState == DisplayPowerRequest.SCREEN_STATE_OFF && mDisplayPowerRequest.screenState != DisplayPowerRequest.SCREEN_STATE_OFF) {
        mLastScreenOffEventElapsedRealTime=SystemClock.elapsedRealtime();
      }
      mDisplayPowerRequest.screenState=newScreenState;
      nativeSetPowerState(newScreenState != DisplayPowerRequest.SCREEN_STATE_OFF,newScreenState == DisplayPowerRequest.SCREEN_STATE_BRIGHT);
    }
    int screenBrightness=mScreenBrightnessSettingDefault;
    boolean autoBrightness=(mScreenBrightnessModeSetting == Settings.System.SCREEN_BRIGHTNESS_MODE_AUTOMATIC);
    if (isValidBrightness(mScreenBrightnessOverrideFromWindowManager)) {
      screenBrightness=mScreenBrightnessOverrideFromWindowManager;
      autoBrightness=false;
    }
 else     if (isValidBrightness(mTemporaryScreenBrightnessSettingOverride)) {
      screenBrightness=mTemporaryScreenBrightnessSettingOverride;
    }
 else     if (isValidBrightness(mScreenBrightnessSetting)) {
      screenBrightness=mScreenBrightnessSetting;
    }
    if (autoBrightness) {
      screenBrightness=mScreenBrightnessSettingDefault;
    }
    screenBrightness=Math.max(Math.min(screenBrightness,mScreenBrightnessSettingMaximum),mScreenBrightnessSettingMinimum);
    mDisplayPowerRequest.screenBrightness=screenBrightness;
    mDisplayPowerRequest.useAutoBrightness=autoBrightness;
    mDisplayPowerRequest.useProximitySensor=shouldUseProximitySensorLocked();
    mDisplayReady=mDisplayPowerController.requestPowerState(mDisplayPowerRequest,mRequestWaitForNegativeProximity);
    mRequestWaitForNegativeProximity=false;
    if (DEBUG_SPEW) {
      Slog.d(TAG,"updateScreenStateLocked: displayReady=" + mDisplayReady + ", newScreenState="+ newScreenState+ ", mWakefulness="+ mWakefulness+ ", mWakeLockSummary=0x"+ Integer.toHexString(mWakeLockSummary)+ ", mUserActivitySummary=0x"+ Integer.toHexString(mUserActivitySummary)+ ", mBootCompleted="+ mBootCompleted);
    }
  }
}
