{
synchronized (this) {
    if ((mask & SCREEN_BRIGHT_BIT) == 0) {
      if ((mask & BUTTON_BRIGHT_BIT) != 0) {
        mButtonLight.setBrightness(target);
      }
      if ((mask & KEYBOARD_BRIGHT_BIT) != 0) {
        mKeyboardLight.setBrightness(target);
      }
      return;
    }
    if (isAnimating() && (mask ^ currentMask) != 0) {
      cancelAnimation();
    }
    if (mInitialAnimation) {
      animationDuration=0;
      if (target > 0) {
        mInitialAnimation=false;
      }
    }
    startValue=currentValue;
    endValue=target;
    startSensorValue=mHighestLightSensorValue;
    endSensorValue=sensorTarget;
    currentMask=mask;
    duration=(int)(mWindowScaleAnimation * animationDuration);
    startTimeMillis=SystemClock.elapsedRealtime();
    if (DEBUG_LIGHT_ANIMATION) {
      Slog.v(TAG,"animateTo(target=" + target + ", sensor="+ sensorTarget+ ", mask="+ mask+ ", duration="+ animationDuration+ ")"+ ", currentValue="+ currentValue+ ", startTime="+ startTimeMillis);
    }
    if (target != currentValue) {
      final boolean doScreenAnim=(mask & (SCREEN_BRIGHT_BIT | SCREEN_ON_BIT)) != 0;
      final boolean turningOff=endValue == PowerManager.BRIGHTNESS_OFF;
      if (turningOff && doScreenAnim) {
        mScreenBrightnessHandler.removeCallbacksAndMessages(null);
        screenOffFinishedAnimatingLocked(mScreenOffReason);
        duration=200;
      }
      if (doScreenAnim) {
        animateInternal(mask,turningOff,0);
      }
    }
  }
}
