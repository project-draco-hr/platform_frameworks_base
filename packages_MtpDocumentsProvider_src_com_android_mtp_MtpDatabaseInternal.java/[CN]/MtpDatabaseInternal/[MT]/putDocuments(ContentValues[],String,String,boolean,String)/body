{
  boolean added=false;
  mDatabase.beginTransaction();
  try {
    for (    final ContentValues values : valuesList) {
      final Cursor candidateCursor=mDatabase.query(TABLE_DOCUMENTS,strings(Document.COLUMN_DOCUMENT_ID),selection + " AND " + COLUMN_ROW_STATE+ "=? AND "+ mappingKey+ "=?",strings(arg,ROW_STATE_INVALIDATED,values.getAsString(mappingKey)),null,null,null,"1");
      final long rowId;
      if (candidateCursor.getCount() == 0) {
        rowId=mDatabase.insert(TABLE_DOCUMENTS,null,values);
        added=true;
      }
 else       if (!heuristic) {
        candidateCursor.moveToNext();
        final String documentId=candidateCursor.getString(0);
        rowId=mDatabase.update(TABLE_DOCUMENTS,values,SELECTION_DOCUMENT_ID,strings(documentId));
      }
 else {
        values.put(COLUMN_ROW_STATE,ROW_STATE_PENDING);
        rowId=mDatabase.insert(TABLE_DOCUMENTS,null,values);
      }
      values.put(Document.COLUMN_DOCUMENT_ID,rowId);
      candidateCursor.close();
    }
    mDatabase.setTransactionSuccessful();
    return added;
  }
  finally {
    mDatabase.endTransaction();
  }
}
