{
  if (!appended) {
    mBuilder.clear();
  }
  if (text != null && text.length() > 0) {
    int length=mBuilder.length();
    mBuilder.append(text);
    for (    CharacterStyle characterStyle : mCharacterStyles) {
      mBuilder.setSpan(characterStyle,length,mBuilder.length(),Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
    }
  }
  String[] lines=TextUtils.split(mBuilder.toString(),"\n");
  String truncatedText=TextUtils.join("\n",Arrays.copyOfRange(lines,Math.max(0,lines.length - (mRowLimit + 1)),lines.length));
  mBuilder.delete(0,mBuilder.length() - truncatedText.length());
  int start=0, last=mBuilder.length() - 1;
  int end=last;
  while ((start <= end) && (mBuilder.charAt(start) <= ' ')) {
    ++start;
  }
  while ((end >= start) && (mBuilder.charAt(end) <= ' ')) {
    --end;
  }
  if (start == 0 && end == last) {
    mCCView.setText(mBuilder);
  }
 else {
    SpannableStringBuilder trim=new SpannableStringBuilder();
    trim.append(mBuilder);
    if (end < last) {
      trim.delete(end + 1,last + 1);
    }
    if (start > 0) {
      trim.delete(0,start);
    }
    mCCView.setText(trim);
  }
}
