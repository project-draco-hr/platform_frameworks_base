{
  if (mCCLayout == null)   return;
  StringBuilder widestTextBuilder=new StringBuilder();
  int screenColumnCount=getScreenColumnCount();
  for (int i=0; i < screenColumnCount; ++i) {
    widestTextBuilder.append(mWidestChar);
  }
  String widestText=widestTextBuilder.toString();
  Paint paint=new Paint();
  paint.setTypeface(mCaptionStyle.getTypeface());
  float startFontSize=0f;
  float endFontSize=255f;
  while (startFontSize < endFontSize) {
    float testTextSize=(startFontSize + endFontSize) / 2f;
    paint.setTextSize(testTextSize);
    float width=paint.measureText(widestText);
    if (mCCLayout.getWidth() * 0.8f > width) {
      startFontSize=testTextSize + 0.01f;
    }
 else {
      endFontSize=testTextSize - 0.01f;
    }
  }
  mTextSize=endFontSize * mFontScale;
  mCCView.setTextSize(mTextSize);
}
