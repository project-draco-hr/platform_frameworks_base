{
  File appDir=getEphemeralApplicationDir(ephemeralApp.getPackageName(),userId);
  if (!appDir.exists() && !appDir.mkdirs()) {
    return;
  }
  File metadataFile=new File(appDir,EPHEMERAL_APP_METADATA_FILE);
  AtomicFile destination=new AtomicFile(metadataFile);
  FileOutputStream out=null;
  try {
    out=destination.startWrite();
    XmlSerializer serializer=Xml.newSerializer();
    serializer.setOutput(out,StandardCharsets.UTF_8.name());
    serializer.setFeature("http://xmlpull.org/v1/doc/features.html#indent-output",true);
    serializer.startDocument(null,true);
    serializer.startTag(null,TAG_PACKAGE);
    serializer.attribute(null,ATTR_LABEL,ephemeralApp.loadLabel(mService.mContext.getPackageManager()).toString());
    serializer.startTag(null,TAG_PERMS);
    for (    String permission : ephemeralApp.getRequestedPermissions()) {
      serializer.startTag(null,TAG_PERM);
      serializer.attribute(null,ATTR_NAME,permission);
      if (ArrayUtils.contains(ephemeralApp.getGrantedPermissions(),permission)) {
        serializer.attribute(null,ATTR_GRANTED,String.valueOf(true));
      }
      serializer.endTag(null,TAG_PERM);
    }
    serializer.endTag(null,TAG_PERMS);
    serializer.endTag(null,TAG_PACKAGE);
    serializer.endDocument();
    destination.finishWrite(out);
  }
 catch (  Throwable t) {
    Slog.wtf(LOG_TAG,"Failed to write ephemeral state, restoring backup",t);
    destination.failWrite(out);
  }
 finally {
    IoUtils.closeQuietly(out);
  }
}
