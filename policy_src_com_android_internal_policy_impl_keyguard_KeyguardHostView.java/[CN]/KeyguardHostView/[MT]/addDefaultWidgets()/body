{
  LayoutInflater inflater=LayoutInflater.from(mContext);
  inflater.inflate(R.layout.keyguard_transport_control_view,this,true);
  View addWidget=inflater.inflate(R.layout.keyguard_add_widget,null,true);
  mAppWidgetContainer.addWidget(addWidget);
  if (mContext.getResources().getBoolean(R.bool.kg_enable_camera_default_widget)) {
    View cameraWidget=CameraWidgetFrame.create(mContext,mCameraWidgetCallbacks,mActivityLauncher);
    if (cameraWidget != null) {
      mAppWidgetContainer.addWidget(cameraWidget);
    }
  }
  View addWidgetButton=addWidget.findViewById(R.id.keyguard_add_widget_view);
  addWidgetButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      mCallback.setOnDismissRunnable(new Runnable(){
        @Override public void run(){
          int defaultIconId=0;
          Resources res=KeyguardHostView.this.getContext().getResources();
          ComponentName clock=new ComponentName(res.getString(R.string.widget_default_package_name),res.getString(R.string.widget_default_class_name));
          try {
            ActivityInfo activityInfo=mContext.getPackageManager().getActivityInfo(clock,0);
            if (activityInfo != null) {
              defaultIconId=activityInfo.icon;
            }
          }
 catch (          PackageManager.NameNotFoundException e) {
            defaultIconId=0;
          }
          launchPickActivityIntent(R.string.widget_default,defaultIconId,clock,LockPatternUtils.EXTRA_DEFAULT_WIDGET);
        }
      }
);
      mCallback.dismiss(false);
    }
  }
);
  enableUserSelectorIfNecessary();
  initializeTransportControl();
}
