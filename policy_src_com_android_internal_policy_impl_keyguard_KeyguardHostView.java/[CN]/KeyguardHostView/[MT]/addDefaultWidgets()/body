{
  LayoutInflater inflater=LayoutInflater.from(mContext);
  inflater.inflate(R.layout.keyguard_transport_control_view,this,true);
  View addWidget=inflater.inflate(R.layout.keyguard_add_widget,null,true);
  mAppWidgetContainer.addWidget(addWidget);
  View statusWidget=inflater.inflate(R.layout.keyguard_status_view,null,true);
  mAppWidgetContainer.addWidget(statusWidget);
  if (mContext.getResources().getBoolean(R.bool.kg_enable_camera_default_widget)) {
    View cameraWidget=new CameraWidgetFrame(mContext,new CameraWidgetFrame.Callbacks(){
      private SlidingChallengeLayout locateSlider(){
        return (SlidingChallengeLayout)findViewById(R.id.sliding_layout);
      }
      @Override public void onLaunchingCamera(){
        SlidingChallengeLayout slider=locateSlider();
        if (slider != null) {
          slider.showHandle(false);
        }
      }
      @Override public void onCameraLaunched(){
        SlidingChallengeLayout slider=locateSlider();
        if (slider != null) {
          slider.showHandle(true);
        }
        mAppWidgetContainer.scrollLeft();
      }
    }
);
    mAppWidgetContainer.addWidget(cameraWidget);
  }
  View addWidgetButton=addWidget.findViewById(R.id.keyguard_add_widget_view);
  addWidgetButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      mCallback.setOnDismissRunnable(new Runnable(){
        @Override public void run(){
          Intent intent=new Intent(Settings.ACTION_SECURITY_SETTINGS);
          intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_SINGLE_TOP | Intent.FLAG_ACTIVITY_CLEAR_TOP| Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS);
          mContext.startActivityAsUser(intent,new UserHandle(UserHandle.USER_CURRENT));
        }
      }
);
      mCallback.dismiss(false);
    }
  }
);
  enableUserSelectorIfNecessary();
  initializeTransportControl();
}
