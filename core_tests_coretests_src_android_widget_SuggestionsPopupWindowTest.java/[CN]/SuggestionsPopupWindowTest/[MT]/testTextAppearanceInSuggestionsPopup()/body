{
  final Activity activity=getActivity();
  final String sampleText="abc def ghi";
  final String[] singleWordCandidates={"DEF","Def"};
  final SuggestionSpan singleWordSuggestionSpan=new SuggestionSpan(activity,singleWordCandidates,SuggestionSpan.FLAG_AUTO_CORRECTION);
  final int singleWordSpanStart=4;
  final int singleWordSpanEnd=7;
  final String[] multiWordCandidates={"ABC DEF GHI","Abc Def Ghi"};
  final SuggestionSpan multiWordSuggestionSpan=new SuggestionSpan(activity,multiWordCandidates,SuggestionSpan.FLAG_AUTO_CORRECTION);
  final int multiWordSpanStart=0;
  final int multiWordSpanEnd=11;
  TypedArray array=activity.obtainStyledAttributes(com.android.internal.R.styleable.Theme);
  int id=array.getResourceId(com.android.internal.R.styleable.Theme_textEditSuggestionHighlightStyle,0);
  array.recycle();
  TextAppearanceSpan expectedSpan=new TextAppearanceSpan(activity,id);
  TextPaint tmpTp=new TextPaint();
  expectedSpan.updateDrawState(tmpTp);
  final int expectedHighlightTextColor=tmpTp.getColor();
  final float expectedHighlightTextSize=tmpTp.getTextSize();
  final EditText editText=(EditText)activity.findViewById(R.id.textview);
  final Editor editor=editText.getEditorForTesting();
  assertNotNull(editor);
  Runnable showSuggestionWindowRunner=new Runnable(){
    @Override public void run(){
      SpannableStringBuilder ssb=new SpannableStringBuilder();
      ssb.append(sampleText);
      ssb.setSpan(singleWordSuggestionSpan,singleWordSpanStart,singleWordSpanEnd,Spanned.SPAN_INCLUSIVE_INCLUSIVE);
      ssb.setSpan(multiWordSuggestionSpan,multiWordSpanStart,multiWordSpanEnd,Spanned.SPAN_INCLUSIVE_INCLUSIVE);
      editText.setText(ssb);
      Selection.setSelection(editText.getText(),singleWordSpanStart,singleWordSpanEnd);
      editText.onTextContextMenuItem(TextView.ID_REPLACE);
    }
  }
;
  Runnable popupVaridator=new Runnable(){
    @Override public void run(){
      Editor.SuggestionsPopupWindow popupWindow=editor.getSuggestionsPopupWindowForTesting();
      assertNotNull(popupWindow);
      LinearLayout linearLayout=(LinearLayout)popupWindow.getContentViewForTesting();
      assertNotNull(linearLayout);
      ListView listView=(ListView)linearLayout.findViewById(com.android.internal.R.id.suggestionContainer);
      assertNotNull(listView);
      int childNum=listView.getChildCount();
      assertEquals(singleWordCandidates.length + multiWordCandidates.length,childNum);
      for (int i=0; i < singleWordCandidates.length; ++i) {
        TextView textView=(TextView)listView.getChildAt(i);
        assertNotNull(textView);
        Spanned spanned=(Spanned)textView.getText();
        assertNotNull(spanned);
        String expectedText="abc " + singleWordCandidates[i] + " ghi";
        assertEquals(expectedText,spanned.toString());
        TextAppearanceSpan[] taSpan=spanned.getSpans(singleWordSpanStart,singleWordSpanEnd,TextAppearanceSpan.class);
        assertEquals(1,taSpan.length);
        TextPaint tp=new TextPaint();
        taSpan[0].updateDrawState(tp);
        assertEquals(expectedHighlightTextColor,tp.getColor());
        assertEquals(expectedHighlightTextSize,tp.getTextSize());
        assertEquals(singleWordSpanStart,spanned.getSpanStart(taSpan[0]));
        assertEquals(singleWordSpanEnd,spanned.getSpanEnd(taSpan[0]));
      }
      for (int i=0; i < multiWordCandidates.length; ++i) {
        int indexInListView=singleWordCandidates.length + i;
        TextView textView=(TextView)listView.getChildAt(indexInListView);
        assertNotNull(textView);
        Spanned spanned=(Spanned)textView.getText();
        assertNotNull(spanned);
        assertEquals(multiWordCandidates[i],spanned.toString());
        TextAppearanceSpan[] taSpan=spanned.getSpans(0,multiWordCandidates[i].length(),TextAppearanceSpan.class);
        assertEquals(1,taSpan.length);
        TextPaint tp=new TextPaint();
        taSpan[0].updateDrawState(tp);
        assertEquals(expectedHighlightTextColor,tp.getColor());
        assertEquals(expectedHighlightTextSize,tp.getTextSize());
        assertEquals(multiWordSpanStart,spanned.getSpanStart(taSpan[0]));
        assertEquals(multiWordSpanEnd,spanned.getSpanEnd(taSpan[0]));
      }
      TextView deleteButton=(TextView)linearLayout.findViewById(com.android.internal.R.id.deleteButton);
      assertEquals(View.VISIBLE,deleteButton.getWindowVisibility());
    }
  }
;
  activity.runOnUiThread(showSuggestionWindowRunner);
  getInstrumentation().waitForIdleSync();
  activity.runOnUiThread(popupVaridator);
  activity.runOnUiThread(new Runnable(){
    @Override public void run(){
      editText.setText("");
    }
  }
);
  getInstrumentation().waitForIdleSync();
  activity.runOnUiThread(showSuggestionWindowRunner);
  getInstrumentation().waitForIdleSync();
  activity.runOnUiThread(popupVaridator);
}
