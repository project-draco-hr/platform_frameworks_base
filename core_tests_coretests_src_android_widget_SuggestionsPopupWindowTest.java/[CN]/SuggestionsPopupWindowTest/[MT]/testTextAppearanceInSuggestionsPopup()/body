{
  final String text="abc def ghi";
  final String[] singleWordCandidates={"DEF","Def"};
  final SuggestionSpan suggestionSpan=new SuggestionSpan(getActivity(),singleWordCandidates,SuggestionSpan.FLAG_MISSPELLED);
  final String[] multiWordCandidates={"ABC DEF GHI","Abc Def Ghi"};
  final SuggestionSpan multiWordSuggestionSpan=new SuggestionSpan(getActivity(),multiWordCandidates,SuggestionSpan.FLAG_MISSPELLED);
  final TypedArray array=getActivity().obtainStyledAttributes(com.android.internal.R.styleable.Theme);
  final int id=array.getResourceId(com.android.internal.R.styleable.Theme_textEditSuggestionHighlightStyle,0);
  array.recycle();
  final TextAppearanceSpan expectedSpan=new TextAppearanceSpan(getActivity(),id);
  final TextPaint tmpTp=new TextPaint();
  expectedSpan.updateDrawState(tmpTp);
  final int expectedHighlightTextColor=tmpTp.getColor();
  final float expectedHighlightTextSize=tmpTp.getTextSize();
  final TextView textView=(TextView)getActivity().findViewById(R.id.textview);
  for (int i=0; i < 2; i++) {
    onView(withId(R.id.textview)).perform(click());
    onView(withId(R.id.textview)).perform(replaceText(text));
    setSuggestionSpan(suggestionSpan,text.indexOf('d'),text.indexOf('f') + 1);
    setSuggestionSpan(multiWordSuggestionSpan,0,text.length());
    showSuggestionsPopup();
    assertSuggestionsPopupIsDisplayed();
    assertSuggestionsPopupContainsItem("abc DEF ghi");
    assertSuggestionsPopupContainsItem("abc Def ghi");
    assertSuggestionsPopupContainsItem("ABC DEF GHI");
    assertSuggestionsPopupContainsItem("Abc Def Ghi");
    assertSuggestionsPopupContainsItem(getActivity().getString(com.android.internal.R.string.delete));
    onSuggestionsPopup().check(new ViewAssertion(){
      @Override public void check(      View view,      NoMatchingViewException e){
        final ListView listView=(ListView)view.findViewById(com.android.internal.R.id.suggestionContainer);
        assertNotNull(listView);
        final int childNum=listView.getChildCount();
        assertEquals(singleWordCandidates.length + multiWordCandidates.length,childNum);
        for (int j=0; j < childNum; j++) {
          final TextView suggestion=(TextView)listView.getChildAt(j);
          assertNotNull(suggestion);
          final Spanned spanned=(Spanned)suggestion.getText();
          assertNotNull(spanned);
          final String expectedText;
          if (j < singleWordCandidates.length) {
            expectedText="abc " + singleWordCandidates[j] + " ghi";
          }
 else {
            expectedText=multiWordCandidates[j - singleWordCandidates.length];
          }
          assertEquals(expectedText,spanned.toString());
          final TextAppearanceSpan[] taSpan=spanned.getSpans(text.indexOf('d'),text.indexOf('f') + 1,TextAppearanceSpan.class);
          assertEquals(1,taSpan.length);
          TextPaint tp=new TextPaint();
          taSpan[0].updateDrawState(tp);
          assertEquals(expectedHighlightTextColor,tp.getColor());
          assertEquals(expectedHighlightTextSize,tp.getTextSize());
          final int expectedStart;
          final int expectedEnd;
          if (j < singleWordCandidates.length) {
            expectedStart=text.indexOf('d');
            expectedEnd=text.indexOf('f') + 1;
          }
 else {
            expectedStart=0;
            expectedEnd=text.length();
          }
          assertEquals(expectedStart,spanned.getSpanStart(taSpan[0]));
          assertEquals(expectedEnd,spanned.getSpanEnd(taSpan[0]));
        }
      }
    }
);
    pressBack();
    onView(withId(R.id.textview)).inRoot(withDecorView(is(getActivity().getWindow().getDecorView()))).perform(clearText());
  }
}
