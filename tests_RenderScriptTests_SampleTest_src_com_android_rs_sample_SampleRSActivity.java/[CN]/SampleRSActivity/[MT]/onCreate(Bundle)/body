{
  super.onCreate(savedInstanceState);
  setContentView(R.layout.rs);
  mBitmapTwoByTwo=loadBitmap(R.drawable.twobytwo);
  mBitmapCity=loadBitmap(R.drawable.city);
  mBenchmarkResult=(TextView)findViewById(R.id.benchmarkText);
  mBenchmarkResult.setText("Result: not run");
  mRS=RenderScript.create(this);
  mTwoByTwoAlloc=Allocation.createFromBitmap(mRS,mBitmapTwoByTwo,Allocation.MipmapControl.MIPMAP_NONE,Allocation.USAGE_SCRIPT);
  mCityAlloc=Allocation.createFromBitmap(mRS,mBitmapCity,Allocation.MipmapControl.MIPMAP_NONE,Allocation.USAGE_SCRIPT);
  Type.Builder b=new Type.Builder(mRS,Element.RGBA_8888(mRS));
  int usage=Allocation.USAGE_SCRIPT | Allocation.USAGE_IO_OUTPUT;
  int outX=256;
  int outY=256;
  Allocation outAlloc=Allocation.createTyped(mRS,b.setX(outX).setY(outY).create(),usage);
  TextureViewUpdater updater=new TextureViewUpdater(outAlloc,Sampler.WRAP_LINEAR(mRS));
  TextureView displayView=(TextureView)findViewById(R.id.display);
  displayView.setSurfaceTextureListener(updater);
  outAlloc=Allocation.createTyped(mRS,b.setX(outX).setY(outY).create(),usage);
  updater=new TextureViewUpdater(outAlloc,Sampler.CLAMP_LINEAR(mRS));
  displayView=(TextureView)findViewById(R.id.display2);
  displayView.setSurfaceTextureListener(updater);
  outAlloc=Allocation.createTyped(mRS,b.setX(outX).setY(outY).create(),usage);
  updater=new TextureViewUpdater(outAlloc,Sampler.WRAP_NEAREST(mRS));
  displayView=(TextureView)findViewById(R.id.display3);
  displayView.setSurfaceTextureListener(updater);
  outAlloc=Allocation.createTyped(mRS,b.setX(outX).setY(outY).create(),usage);
  updater=new TextureViewUpdater(outAlloc,Sampler.CLAMP_NEAREST(mRS));
  displayView=(TextureView)findViewById(R.id.display4);
  displayView.setSurfaceTextureListener(updater);
  mScript=new ScriptC_sample(mRS,getResources(),R.raw.sample);
}
