{
  super(context,attrs);
  LayoutInflater.from(context).inflate(R.layout.usage_view,this);
  mUsageGraph=(UsageGraph)findViewById(R.id.usage_graph);
  mLabels=new TextView[]{(TextView)findViewById(R.id.label_bottom),(TextView)findViewById(R.id.label_middle),(TextView)findViewById(R.id.label_top)};
  mBottomLabels=new TextView[]{(TextView)findViewById(R.id.label_start),(TextView)findViewById(R.id.label_end)};
  TypedArray a=context.obtainStyledAttributes(attrs,R.styleable.UsageView,0,0);
  if (a.hasValue(R.styleable.UsageView_sideLabels)) {
    setSideLabels(a.getTextArray(R.styleable.UsageView_sideLabels));
  }
  if (a.hasValue(R.styleable.UsageView_bottomLabels)) {
    setBottomLabels(a.getTextArray(R.styleable.UsageView_bottomLabels));
  }
  if (a.hasValue(R.styleable.UsageView_textColor)) {
    int color=a.getColor(R.styleable.UsageView_textColor,0);
    for (    TextView v : mLabels) {
      v.setTextColor(color);
    }
    for (    TextView v : mBottomLabels) {
      v.setTextColor(color);
    }
  }
  if (a.hasValue(R.styleable.UsageView_android_gravity)) {
    int gravity=a.getInt(R.styleable.UsageView_android_gravity,0);
    if (gravity == Gravity.END) {
      LinearLayout layout=(LinearLayout)findViewById(R.id.graph_label_group);
      LinearLayout labels=(LinearLayout)findViewById(R.id.label_group);
      layout.removeView(labels);
      layout.addView(labels);
      labels.setGravity(Gravity.END);
      LinearLayout bottomLabels=(LinearLayout)findViewById(R.id.bottom_label_group);
      bottomLabels.setPadding(bottomLabels.getPaddingRight(),bottomLabels.getPaddingTop(),bottomLabels.getPaddingLeft(),bottomLabels.getPaddingBottom());
    }
 else     if (gravity != Gravity.START) {
      throw new IllegalArgumentException("Unsupported gravity " + gravity);
    }
  }
  mUsageGraph.setAccentColor(a.getColor(R.styleable.UsageView_android_colorAccent,0));
}
