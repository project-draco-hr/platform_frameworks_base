{
  mRS=rs;
  mRes=res;
  ProgramFragment.Builder pfb=new ProgramFragment.Builder(rs);
  pfb.setPointSpriteTexCoordinateReplacement(true);
  pfb.setTexture(ProgramFragment.Builder.EnvMode.MODULATE,ProgramFragment.Builder.Format.RGBA,0);
  pfb.setVaryingColor(true);
  mPF=pfb.create();
  rs.contextBindProgramFragment(mPF);
  mPF.bindTexture(loadTexture(R.drawable.flares),0);
  mPoints=new ScriptField_Point(mRS,PART_COUNT);
  mArcs=new ScriptField_Point(mRS,PART_COUNT * 2);
  Mesh.AllocationBuilder smb=new Mesh.AllocationBuilder(mRS);
  smb.addVertexAllocation(mPoints.getAllocation());
  smb.addIndexType(Primitive.POINT);
  Mesh smP=smb.create();
  smb=new Mesh.AllocationBuilder(mRS);
  smb.addVertexAllocation(mArcs.getAllocation());
  smb.addIndexType(Primitive.LINE);
  Mesh smA=smb.create();
  mPhysicsScript=new ScriptC_ball_physics(mRS,mRes,R.raw.ball_physics,true);
  mScript=new ScriptC_balls(mRS,mRes,R.raw.balls,true);
  mScript.set_partMesh(smP);
  mScript.set_arcMesh(smA);
  mScript.set_physics_script(mPhysicsScript);
  mScript.bind_point(mPoints);
  mScript.bind_arc(mArcs);
  mScript.bind_balls1(new ScriptField_Ball(mRS,PART_COUNT));
  mScript.bind_balls2(new ScriptField_Ball(mRS,PART_COUNT));
  mScript.set_gPF(mPF);
  createProgramVertex();
  createProgramRaster();
  mPS=ProgramStore.BLEND_ADD_DEPTH_NO_DEPTH(mRS);
  mScript.set_gPS(mPS);
  mPhysicsScript.set_gMinPos(new Float2(5,5));
  mPhysicsScript.set_gMaxPos(new Float2(width - 5,height - 5));
  mScript.invoke_initParts(width,height);
  mRS.contextBindRootScript(mScript);
}
