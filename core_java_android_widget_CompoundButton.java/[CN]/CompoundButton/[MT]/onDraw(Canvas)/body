{
  final Drawable buttonDrawable=mButtonDrawable;
  if (buttonDrawable != null) {
    final int verticalGravity=getGravity() & Gravity.VERTICAL_GRAVITY_MASK;
    final int drawableHeight=buttonDrawable.getIntrinsicHeight();
    final int drawableWidth=buttonDrawable.getIntrinsicWidth();
    final int top;
switch (verticalGravity) {
case Gravity.BOTTOM:
      top=getHeight() - drawableHeight;
    break;
case Gravity.CENTER_VERTICAL:
  top=(getHeight() - drawableHeight) / 2;
break;
default :
top=0;
}
final int bottom=top + drawableHeight;
final int left=isLayoutRtl() ? getWidth() - drawableWidth : 0;
final int right=isLayoutRtl() ? getWidth() : drawableWidth;
buttonDrawable.setBounds(left,top,right,bottom);
final Drawable background=getBackground();
if (background != null) {
background.setHotspotBounds(left,top,right,bottom);
}
}
super.onDraw(canvas);
if (buttonDrawable != null) {
final int scrollX=mScrollX;
final int scrollY=mScrollY;
if (scrollX == 0 && scrollY == 0) {
buttonDrawable.draw(canvas);
}
 else {
canvas.translate(scrollX,scrollY);
buttonDrawable.draw(canvas);
canvas.translate(-scrollX,-scrollY);
}
}
}
