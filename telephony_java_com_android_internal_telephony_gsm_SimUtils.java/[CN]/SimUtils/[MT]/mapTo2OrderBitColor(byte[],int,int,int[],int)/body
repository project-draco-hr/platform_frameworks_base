{
  if (0 != (8 % bits)) {
    Log.e(LOG_TAG,"not event number of color");
    return mapToNon2OrderBitColor(data,valueIndex,length,colorArray,bits);
  }
  int mask=0x01;
switch (bits) {
case 1:
    mask=0x01;
  break;
case 2:
mask=0x03;
break;
case 4:
mask=0x0F;
break;
case 8:
mask=0xFF;
break;
}
int[] resultArray=new int[length];
int resultIndex=0;
int run=8 / bits;
while (resultIndex < length) {
byte tempByte=data[valueIndex++];
for (int runIndex=0; runIndex < run; ++runIndex) {
int offset=run - runIndex - 1;
resultArray[resultIndex++]=colorArray[(tempByte >> (offset * bits)) & mask];
}
}
return resultArray;
}
