{
  super(context);
  mTracingAnimator=ValueAnimator.ofFloat(0,1).setDuration(TRACING_ANIMATION_DURATION);
  mTracingAnimator.addUpdateListener(this);
  mTracingAnimator.setInterpolator(AnimationUtils.loadInterpolator(mContext,android.R.interpolator.fast_out_slow_in));
  mAlphaAnimator=ValueAnimator.ofInt(255,0).setDuration(ALPHA_ANIMATION_DURATION);
  mAlphaAnimator.addUpdateListener(this);
  mAlphaAnimator.setInterpolator(AnimationUtils.loadInterpolator(mContext,android.R.interpolator.fast_out_linear_in));
  mAnimator=new AnimatorSet();
  mAnimator.play(mTracingAnimator).before(mAlphaAnimator);
  mAnimator.addListener(new AnimatorListenerAdapter(){
    boolean mCancelled;
    @Override public void onAnimationStart(    Animator animation){
      mCancelled=false;
    }
    @Override public void onAnimationCancel(    Animator animation){
      mCancelled=true;
    }
    @Override public void onAnimationEnd(    Animator animation){
      if (!mCancelled) {
        hide();
      }
    }
  }
);
  PorterDuffXfermode srcMode=new PorterDuffXfermode(PorterDuff.Mode.SRC);
  mPaint.setColor(Color.WHITE);
  mPaint.setXfermode(srcMode);
  mShadowPaint.setColor(Color.DKGRAY);
  mShadowPaint.setXfermode(srcMode);
  mThickness=getResources().getDimension(R.dimen.assist_disclosure_thickness);
  mShadowThickness=getResources().getDimension(R.dimen.assist_disclosure_shadow_thickness);
}
