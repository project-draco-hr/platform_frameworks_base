{
  if (!mFile.exists()) {
    if (DEBUG) {
      Log.d(TAG,"" + mFile + " doesn't exist");
    }
    return;
  }
  if (DEBUG) {
    Log.d(TAG,"Reading from " + mFile);
  }
  final AtomicFile f=new AtomicFile(mFile);
  InputStream input=null;
  try {
    input=f.openRead();
    final XmlPullParser parser=Xml.newPullParser();
    parser.setInput(input,StandardCharsets.UTF_8.name());
    int type;
    int depth=0;
    while ((type=parser.next()) != XmlPullParser.END_DOCUMENT) {
switch (type) {
case XmlPullParser.START_TAG:
        depth++;
      break;
case XmlPullParser.END_TAG:
    depth--;
default :
  continue;
}
final String tag=parser.getName();
if (depth == 1) {
if (!TAG_ROOT.equals(tag)) {
  Slog.e(TAG,"Invalid root tag: " + tag);
  return;
}
continue;
}
if (!readInner(parser,depth,tag)) {
return;
}
}
}
 catch (XmlPullParserException|IOException e) {
Slog.e(TAG,"Error parsing device-owner file",e);
}
 finally {
IoUtils.closeQuietly(input);
}
}
