{
  if (depth > 2) {
    return true;
  }
switch (tag) {
case TAG_DEVICE_OWNER:
    mDeviceOwner=OwnerInfo.readFromXml(parser);
  mDeviceOwnerUserId=UserHandle.USER_SYSTEM;
break;
case TAG_DEVICE_OWNER_CONTEXT:
{
final String userIdString=parser.getAttributeValue(null,ATTR_USERID);
try {
  mDeviceOwnerUserId=Integer.parseInt(userIdString);
}
 catch (NumberFormatException e) {
  Slog.e(TAG,"Error parsing user-id " + userIdString);
}
break;
}
case TAG_DEVICE_INITIALIZER:
mDeviceInitializer=OwnerInfo.readFromXml(parser);
break;
case TAG_SYSTEM_UPDATE_POLICY:
mSystemUpdatePolicy=SystemUpdatePolicy.restoreFromXml(parser);
break;
default :
Slog.e(TAG,"Unexpected tag: " + tag);
return false;
}
return true;
}
