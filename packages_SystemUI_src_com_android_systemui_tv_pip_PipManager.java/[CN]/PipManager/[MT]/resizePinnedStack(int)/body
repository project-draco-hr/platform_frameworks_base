{
  if (DEBUG)   Log.d(TAG,"resizePinnedStack() state=" + state);
  boolean wasRecentsShown=(mState == STATE_PIP_RECENTS || mState == STATE_PIP_RECENTS_FOCUSED);
  mState=state;
  for (int i=mListeners.size() - 1; i >= 0; --i) {
    mListeners.get(i).onPipResizeAboutToStart();
  }
  if (mSuspendPipResizingReason != 0) {
    if (DEBUG)     Log.d(TAG,"resizePinnedStack() deferring mSuspendPipResizingReason=" + mSuspendPipResizingReason);
    return;
  }
switch (mState) {
case STATE_NO_PIP:
    mCurrentPipBounds=null;
  break;
case STATE_PIP_MENU:
mCurrentPipBounds=mMenuModePipBounds;
break;
case STATE_PIP_OVERLAY:
mCurrentPipBounds=mPipBounds;
break;
case STATE_PIP_RECENTS:
mCurrentPipBounds=mRecentsPipBounds;
break;
case STATE_PIP_RECENTS_FOCUSED:
mCurrentPipBounds=mRecentsFocusedPipBounds;
break;
default :
mCurrentPipBounds=mPipBounds;
break;
}
try {
int animationDurationMs=-1;
if (wasRecentsShown && (mState == STATE_PIP_RECENTS || mState == STATE_PIP_RECENTS_FOCUSED)) {
animationDurationMs=mRecentsFocusChangedAnimationDurationMs;
}
mActivityManager.resizeStack(PINNED_STACK_ID,mCurrentPipBounds,true,true,true,animationDurationMs);
}
 catch (RemoteException e) {
Log.e(TAG,"resizeStack failed",e);
}
}
