{
  StackInfo fullscreenStack=null;
  try {
    fullscreenStack=mActivityManager.getStackInfo(FULLSCREEN_WORKSPACE_STACK_ID);
  }
 catch (  RemoteException e) {
    Log.e(TAG,"getStackInfo failed",e);
  }
  if (fullscreenStack == null) {
    return;
  }
  int fullscreenTopTaskId=fullscreenStack.taskIds[fullscreenStack.taskIds.length - 1];
  List<RunningTaskInfo> tasks=null;
  try {
    tasks=mActivityManager.getTasks(MAX_RUNNING_TASKS_COUNT,0);
  }
 catch (  RemoteException e) {
    Log.e(TAG,"getTasks failed",e);
  }
  if (tasks == null) {
    return;
  }
  boolean wasGrantedInFullscreen=false;
  boolean wasGrantedInPip=false;
  for (int i=tasks.size() - 1; i >= 0; --i) {
    RunningTaskInfo task=tasks.get(i);
    for (int j=packageNames.length - 1; j >= 0; --j) {
      if (task.topActivity.getPackageName().equals(packageNames[j])) {
        if (task.id == fullscreenTopTaskId) {
          wasGrantedInFullscreen=true;
        }
 else         if (task.id == mPipTaskId) {
          wasGrantedInPip=true;
        }
      }
    }
  }
  if (wasGrantedInFullscreen && !wasGrantedInPip) {
    closePip();
  }
}
