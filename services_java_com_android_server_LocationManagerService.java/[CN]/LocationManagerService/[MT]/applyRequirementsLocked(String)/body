{
  LocationProviderInterface p=mProvidersByName.get(provider);
  if (p == null)   return;
  ArrayList<UpdateRecord> records=mRecordsByProvider.get(provider);
  WorkSource worksource=new WorkSource();
  ProviderRequest providerRequest=new ProviderRequest();
  if (records != null) {
    for (    UpdateRecord record : records) {
      if (UserHandle.getUserId(record.mReceiver.mUid) == mCurrentUserId) {
        if (checkLocationAccess(record.mReceiver.mUid,record.mReceiver.mPackageName,record.mReceiver.mAllowedResolutionLevel)) {
          LocationRequest locationRequest=record.mRequest;
          providerRequest.locationRequests.add(locationRequest);
          if (locationRequest.getInterval() < providerRequest.interval) {
            providerRequest.reportLocation=true;
            providerRequest.interval=locationRequest.getInterval();
          }
        }
      }
    }
    if (providerRequest.reportLocation) {
      long thresholdInterval=(providerRequest.interval + 1000) * 3 / 2;
      for (      UpdateRecord record : records) {
        if (UserHandle.getUserId(record.mReceiver.mUid) == mCurrentUserId) {
          LocationRequest locationRequest=record.mRequest;
          if (locationRequest.getInterval() <= thresholdInterval) {
            if (record.mReceiver.mWorkSource != null) {
              worksource.add(record.mReceiver.mWorkSource);
            }
 else {
              worksource.add(record.mReceiver.mUid,record.mReceiver.mPackageName);
            }
          }
        }
      }
    }
  }
  if (D)   Log.d(TAG,"provider request: " + provider + " "+ providerRequest);
  p.setRequest(providerRequest,worksource);
}
