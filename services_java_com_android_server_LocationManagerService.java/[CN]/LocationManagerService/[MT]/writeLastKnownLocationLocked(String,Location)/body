{
  long now=SystemClock.elapsedRealtime();
  Long last=mLastWriteTime.get(provider);
  if ((last != null) && (now - last.longValue() < MIN_LAST_KNOWN_LOCATION_TIME)) {
    return;
  }
  mLastWriteTime.put(provider,now);
  StringBuilder sb=new StringBuilder(100);
  sb.append(location.getTime());
  sb.append(',');
  sb.append(location.getLatitude());
  sb.append(',');
  sb.append(location.getLongitude());
  sb.append(',');
  sb.append(location.getAltitude());
  sb.append(',');
  sb.append(location.getBearing());
  sb.append(',');
  sb.append(location.getSpeed());
  FileWriter writer=null;
  try {
    File d=new File(LocationManager.SYSTEM_DIR);
    if (!d.exists()) {
      if (!d.mkdirs()) {
        Log.w(TAG,"Unable to create directory to write location");
        return;
      }
    }
    File f=new File(LocationManager.SYSTEM_DIR + "/location." + provider);
    writer=new FileWriter(f);
    writer.write(sb.toString());
  }
 catch (  IOException e) {
    Log.w(TAG,"Unable to write location",e);
  }
 finally {
    if (writer != null) {
      try {
        writer.close();
      }
 catch (      IOException e) {
        Log.w(TAG,"Exception closing file",e);
      }
    }
  }
}
