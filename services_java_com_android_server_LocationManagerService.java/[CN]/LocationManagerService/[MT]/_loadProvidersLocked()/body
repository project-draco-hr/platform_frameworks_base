{
  if (GpsLocationProvider.isSupported()) {
    mGpsLocationProvider=new GpsLocationProvider(mContext,this);
    LocationProviderImpl.addProvider(mGpsLocationProvider);
  }
  File f=new File(LocationManager.PROVIDER_DIR);
  if (f.isDirectory()) {
    File[] subdirs=f.listFiles();
    for (int i=0; i < subdirs.length; i++) {
      if (!subdirs[i].isDirectory()) {
        continue;
      }
      String name=subdirs[i].getName();
      if (LOCAL_LOGV) {
        Log.v(TAG,"Found dir " + subdirs[i].getAbsolutePath());
        Log.v(TAG,"name = " + name);
      }
      if (LocationProviderImpl.getProvider(name) == null) {
        LocationProviderImpl provider=null;
        try {
          File classFile=new File(subdirs[i],"class");
          provider=LocationProviderImpl.loadFromClass(classFile);
          if (provider == null) {
            File propertiesFile=new File(subdirs[i],"properties");
            if (propertiesFile.exists()) {
              provider=new TrackProvider(name,this);
              ((TrackProvider)provider).readProperties(propertiesFile);
              File kmlFile=new File(subdirs[i],"kml");
              if (kmlFile.exists()) {
                ((TrackProvider)provider).readKml(kmlFile);
              }
 else {
                File nmeaFile=new File(subdirs[i],"nmea");
                if (nmeaFile.exists()) {
                  ((TrackProvider)provider).readNmea(name,nmeaFile);
                }
 else {
                  File trackFile=new File(subdirs[i],"track");
                  if (trackFile.exists()) {
                    ((TrackProvider)provider).readTrack(trackFile);
                  }
                }
              }
            }
          }
          if (provider != null) {
            LocationProviderImpl.addProvider(provider);
          }
          if (provider instanceof TrackProvider) {
            TrackProvider tp=(TrackProvider)provider;
            mLastKnownLocation.put(tp.getName(),tp.getInitialLocation());
          }
        }
 catch (        Exception e) {
          Log.e(TAG,"Exception loading provder " + name,e);
        }
      }
    }
  }
  updateProvidersLocked();
}
