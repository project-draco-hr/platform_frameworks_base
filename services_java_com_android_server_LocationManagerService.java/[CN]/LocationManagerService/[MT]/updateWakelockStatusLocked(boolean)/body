{
  log("updateWakelockStatus(): " + screenOn);
  boolean needsLock=false;
  long minTime=Integer.MAX_VALUE;
  if (mNetworkLocationProvider != null && mNetworkLocationProvider.isLocationTracking()) {
    needsLock=true;
    minTime=Math.min(mNetworkLocationProvider.getMinTime(),minTime);
  }
  if (mGpsLocationProvider != null && mGpsLocationProvider.isLocationTracking()) {
    needsLock=true;
    minTime=Math.min(mGpsLocationProvider.getMinTime(),minTime);
    if (screenOn) {
      startGpsLocked();
    }
 else     if (mScreenOn && !screenOn) {
      stopGpsLocked();
    }
  }
  mScreenOn=screenOn;
  PendingIntent sender=PendingIntent.getBroadcast(mContext,0,new Intent(ALARM_INTENT),0);
  log("Cancelling existing alarm");
  mAlarmManager.cancel(sender);
  if (needsLock && !mScreenOn) {
    long now=SystemClock.elapsedRealtime();
    mAlarmManager.set(AlarmManager.ELAPSED_REALTIME_WAKEUP,now + minTime,sender);
    mAlarmInterval=minTime;
    log("Creating a new wakelock alarm with minTime = " + minTime);
  }
 else {
    log("No need for alarm");
    mAlarmInterval=-1;
    mLocationHandler.removeMessages(MESSAGE_ACQUIRE_WAKE_LOCK);
    mLocationHandler.removeMessages(MESSAGE_RELEASE_WAKE_LOCK);
    releaseWakeLockLocked();
  }
}
