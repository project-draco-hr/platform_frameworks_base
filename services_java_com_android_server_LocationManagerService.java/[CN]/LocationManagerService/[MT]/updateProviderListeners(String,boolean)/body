{
  int listeners=0;
  LocationProviderImpl p=LocationProviderImpl.getProvider(provider);
  if (p == null) {
    return;
  }
synchronized (mRecordsByProvider) {
    HashSet<UpdateRecord> records=mRecordsByProvider.get(provider);
    if (records != null) {
      for (      UpdateRecord record : records) {
        try {
          if (enabled) {
            record.mListener.mListener.onProviderEnabled(provider);
          }
 else {
            record.mListener.mListener.onProviderDisabled(provider);
          }
        }
 catch (        RemoteException e) {
        }
        listeners++;
      }
    }
  }
  if (enabled) {
    p.enable();
    if (listeners > 0) {
      p.setMinTime(getMinTime(provider));
      p.enableLocationTracking(true);
      updateWakelockStatus(mScreenOn);
    }
  }
 else {
    p.enableLocationTracking(false);
    p.disable();
    updateWakelockStatus(mScreenOn);
  }
  if (enabled && listeners > 0) {
    mLocationHandler.removeMessages(MESSAGE_HEARTBEAT,provider);
    Message m=Message.obtain(mLocationHandler,MESSAGE_HEARTBEAT,provider);
    mLocationHandler.sendMessageAtTime(m,SystemClock.uptimeMillis() + 1000);
  }
 else {
    mLocationHandler.removeMessages(MESSAGE_HEARTBEAT,provider);
  }
}
