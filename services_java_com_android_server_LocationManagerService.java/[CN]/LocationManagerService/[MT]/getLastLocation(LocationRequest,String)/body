{
  if (D)   Log.d(TAG,"getLastLocation: " + request);
  if (request == null)   request=DEFAULT_LOCATION_REQUEST;
  int allowedResolutionLevel=getCallerAllowedResolutionLevel();
  checkPackageName(packageName);
  checkResolutionLevelIsSufficientForProviderUse(allowedResolutionLevel,request.getProvider());
  long identity=Binder.clearCallingIdentity();
  try {
    if (mBlacklist.isBlacklisted(packageName)) {
      if (D)       Log.d(TAG,"not returning last loc for blacklisted app: " + packageName);
      return null;
    }
synchronized (mLock) {
      String name=request.getProvider();
      if (name == null)       name=LocationManager.FUSED_PROVIDER;
      LocationProviderInterface provider=mProvidersByName.get(name);
      if (provider == null)       return null;
      if (!isAllowedBySettingsLocked(name,mCurrentUserId))       return null;
      Location location=mLastLocation.get(name);
      if (location == null) {
        return null;
      }
      if (allowedResolutionLevel < RESOLUTION_LEVEL_FINE) {
        Location noGPSLocation=location.getExtraLocation(Location.EXTRA_NO_GPS_LOCATION);
        if (noGPSLocation != null) {
          return new Location(mLocationFudger.getOrCreate(noGPSLocation));
        }
      }
 else {
        return new Location(location);
      }
    }
    return null;
  }
  finally {
    Binder.restoreCallingIdentity(identity);
  }
}
