{
  Log.i(TAG,"remove " + Integer.toHexString(System.identityHashCode(receiver)));
  if (mReceivers.remove(receiver.mKey) != null && receiver.isListener()) {
    receiver.getListener().asBinder().unlinkToDeath(receiver,0);
synchronized (receiver) {
      if (receiver.mPendingBroadcasts > 0) {
        decrementPendingBroadcasts();
        receiver.mPendingBroadcasts=0;
      }
    }
  }
  HashSet<String> providers=new HashSet<String>();
  HashMap<String,UpdateRecord> oldRecords=receiver.mUpdateRecords;
  if (oldRecords != null) {
    for (    UpdateRecord record : oldRecords.values()) {
      record.disposeLocked(false);
    }
    providers.addAll(oldRecords.keySet());
  }
  for (  String provider : providers) {
    if (!isAllowedBySettingsLocked(provider,mCurrentUserId)) {
      continue;
    }
    applyRequirementsLocked(provider);
  }
}
