{
  try {
    if (msg.what == MESSAGE_LOCATION_CHANGED) {
synchronized (mLocationListeners) {
        Location location=(Location)msg.obj;
        String provider=location.getProvider();
        if (!isAllowedBySettingsLocked(provider)) {
          return;
        }
        if (mScreenOn || (mWakeLockAcquireTime != 0)) {
          handleLocationChangedLocked(location);
        }
        if ((mWakeLockAcquireTime != 0) && (SystemClock.elapsedRealtime() - mWakeLockAcquireTime > MAX_TIME_FOR_WAKE_LOCK)) {
          removeMessages(MESSAGE_ACQUIRE_WAKE_LOCK);
          removeMessages(MESSAGE_RELEASE_WAKE_LOCK);
          log("LocationWorkerHandler: Exceeded max time for wake lock");
          Message m=Message.obtain(this,MESSAGE_RELEASE_WAKE_LOCK);
          sendMessageAtFrontOfQueue(m);
        }
 else         if (mWakeLockAcquireTime != 0 && mWakeLockGpsReceived && mWakeLockNetworkReceived) {
          removeMessages(MESSAGE_ACQUIRE_WAKE_LOCK);
          removeMessages(MESSAGE_RELEASE_WAKE_LOCK);
          log("LocationWorkerHandler: Locations received.");
          mWakeLockAcquireTime=0;
          Message m=Message.obtain(this,MESSAGE_RELEASE_WAKE_LOCK);
          sendMessageDelayed(m,TIME_AFTER_WAKE_LOCK);
        }
      }
    }
 else     if (msg.what == MESSAGE_ACQUIRE_WAKE_LOCK) {
      log("LocationWorkerHandler: Acquire");
synchronized (mLocationListeners) {
        acquireWakeLockLocked();
      }
    }
 else     if (msg.what == MESSAGE_RELEASE_WAKE_LOCK) {
      log("LocationWorkerHandler: Release");
synchronized (mLocationListeners) {
        updateWakelockStatusLocked(mScreenOn);
        releaseWakeLockLocked();
      }
    }
  }
 catch (  Exception e) {
    Log.e(TAG,"Exception in LocationWorkerHandler.handleMessage:",e);
  }
}
