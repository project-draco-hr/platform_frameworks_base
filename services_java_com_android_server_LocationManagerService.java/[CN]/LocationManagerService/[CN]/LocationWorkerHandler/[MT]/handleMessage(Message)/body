{
  try {
    if (msg.what == MESSAGE_HEARTBEAT) {
synchronized (mRecordsByProvider) {
        String provider=(String)msg.obj;
        if (!isAllowedBySettings(provider)) {
          return;
        }
        if (mScreenOn || (mWakeLockAcquireTime != 0)) {
          handleLocationChanged(provider);
        }
        HashSet<UpdateRecord> records=mRecordsByProvider.get(provider);
        if (records != null && records.size() > 0) {
          Message m=Message.obtain(this,MESSAGE_HEARTBEAT,provider);
          sendMessageAtTime(m,SystemClock.uptimeMillis() + 1000);
        }
      }
      if ((mWakeLockAcquireTime != 0) && (SystemClock.elapsedRealtime() - mWakeLockAcquireTime > MAX_TIME_FOR_WAKE_LOCK)) {
        removeMessages(MESSAGE_ACQUIRE_WAKE_LOCK);
        removeMessages(MESSAGE_RELEASE_WAKE_LOCK);
        log("LocationWorkerHandler: Exceeded max time for wake lock");
        Message m=Message.obtain(this,MESSAGE_RELEASE_WAKE_LOCK);
        sendMessageAtFrontOfQueue(m);
      }
 else       if (mWakeLockAcquireTime != 0 && mWakeLockGpsReceived && mWakeLockNetworkReceived) {
        removeMessages(MESSAGE_ACQUIRE_WAKE_LOCK);
        removeMessages(MESSAGE_RELEASE_WAKE_LOCK);
        log("LocationWorkerHandler: Locations received.");
        mWakeLockAcquireTime=0;
        Message m=Message.obtain(this,MESSAGE_RELEASE_WAKE_LOCK);
        sendMessageDelayed(m,TIME_AFTER_WAKE_LOCK);
      }
    }
 else     if (msg.what == MESSAGE_ACQUIRE_WAKE_LOCK) {
      log("LocationWorkerHandler: Acquire");
      acquireWakeLock();
    }
 else     if (msg.what == MESSAGE_RELEASE_WAKE_LOCK) {
      log("LocationWorkerHandler: Release");
      updateWakelockStatus(mScreenOn);
      releaseWakeLock();
    }
 else     if (msg.what == MESSAGE_INSTALL_NETWORK_LOCATION_PROVIDER) {
synchronized (LocationManagerService.class) {
        Log.d(TAG,"installing network location provider");
        INetworkLocationManager.InstallCallback callback=(INetworkLocationManager.InstallCallback)msg.obj;
        callback.installNetworkLocationProvider(mContext,LocationManagerService.this);
      }
    }
  }
 catch (  Exception e) {
    Log.e(TAG,"Exception in LocationWorkerHandler.handleMessage:",e);
  }
}
