{
  try {
    if (msg.what == MESSAGE_LOCATION_CHANGED) {
synchronized (mLock) {
        Location location=(Location)msg.obj;
        String provider=location.getProvider();
        boolean passive=(msg.arg1 == 1);
        if (!passive) {
          for (int i=mProviders.size() - 1; i >= 0; i--) {
            LocationProviderInterface p=mProviders.get(i);
            if (!provider.equals(p.getName())) {
              p.updateLocation(location);
            }
          }
        }
        if (isAllowedBySettingsLocked(provider)) {
          handleLocationChangedLocked(location,passive);
        }
      }
    }
 else     if (msg.what == MESSAGE_PACKAGE_UPDATED) {
      String packageName=(String)msg.obj;
      if (mNetworkLocationProviderPackageName != null && mPackageManager.resolveService(new Intent(LocationProviderProxy.SERVICE_ACTION).setPackage(packageName),0) != null) {
        String bestPackage=findBestPackage(LocationProviderProxy.SERVICE_ACTION,mNetworkLocationProviderPackageName);
        if (packageName.equals(bestPackage)) {
          mNetworkLocationProvider.reconnect(bestPackage);
          mNetworkLocationProviderPackageName=packageName;
        }
      }
      if (mGeocodeProviderPackageName != null && mPackageManager.resolveService(new Intent(GeocoderProxy.SERVICE_ACTION).setPackage(packageName),0) != null) {
        String bestPackage=findBestPackage(GeocoderProxy.SERVICE_ACTION,mGeocodeProviderPackageName);
        if (packageName.equals(bestPackage)) {
          mGeocodeProvider.reconnect(bestPackage);
          mGeocodeProviderPackageName=packageName;
        }
      }
    }
  }
 catch (  Exception e) {
    Slog.e(TAG,"Exception in LocationWorkerHandler.handleMessage:",e);
  }
}
