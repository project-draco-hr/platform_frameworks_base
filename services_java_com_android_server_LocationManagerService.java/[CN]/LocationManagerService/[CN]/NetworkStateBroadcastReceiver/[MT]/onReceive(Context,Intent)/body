{
  String action=intent.getAction();
  if (action.equals(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION)) {
    List<ScanResult> wifiScanResults=mWifiManager.getScanResults();
    if (wifiScanResults == null) {
      return;
    }
    mCollector.updateWifiScanResults(wifiScanResults);
    if (mNetworkLocationProvider != null) {
      mNetworkLocationProvider.updateWifiScanResults(wifiScanResults);
    }
  }
 else   if (action.equals(ConnectivityManager.CONNECTIVITY_ACTION)) {
    int networkState=LocationProvider.TEMPORARILY_UNAVAILABLE;
    boolean noConnectivity=intent.getBooleanExtra(ConnectivityManager.EXTRA_NO_CONNECTIVITY,false);
    if (!noConnectivity) {
      networkState=LocationProvider.AVAILABLE;
    }
    List<LocationProviderImpl> providers=LocationProviderImpl.getProviders();
    for (    LocationProviderImpl provider : providers) {
      if (provider.requiresNetwork()) {
        provider.updateNetworkState(networkState);
      }
    }
  }
 else   if (action.equals(WifiManager.WIFI_STATE_CHANGED_ACTION)) {
    int state=intent.getIntExtra(WifiManager.EXTRA_WIFI_STATE,WifiManager.WIFI_STATE_UNKNOWN);
    boolean enabled;
    if (state == WifiManager.WIFI_STATE_ENABLED) {
      enabled=true;
    }
 else     if (state == WifiManager.WIFI_STATE_DISABLED) {
      enabled=false;
    }
 else {
      return;
    }
    if (mNetworkLocationProvider != null) {
      mNetworkLocationProvider.updateWifiEnabledState(enabled);
    }
  }
 else   if (action.equals(GpsLocationProvider.GPS_ENABLED_CHANGE_ACTION)) {
    final boolean enabled=intent.getBooleanExtra(GpsLocationProvider.EXTRA_ENABLED,false);
    if (!enabled) {
      mWakeLockGpsReceived=true;
    }
  }
}
