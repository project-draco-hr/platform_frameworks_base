{
  super(c);
  mBitmap1=BitmapFactory.decodeResource(c.getResources(),R.drawable.sunset1);
  mBitmap2=BitmapFactory.decodeResource(c.getResources(),R.drawable.sunset2);
  mColorMatrixPaint=new Paint();
  final ColorMatrix colorMatrix=new ColorMatrix();
  colorMatrix.setSaturation(0);
  mColorMatrixPaint.setColorFilter(new ColorMatrixColorFilter(colorMatrix));
  mLightingPaint=new Paint();
  mLightingPaint.setColorFilter(new LightingColorFilter(0,0));
  mBlendPaint=new Paint();
  mBlendPaint.setColorFilter(new PorterDuffColorFilter(0,PorterDuff.Mode.SRC_OVER));
  ObjectAnimator sat=ObjectAnimator.ofFloat(this,"saturation",1.0f);
  sat.setDuration(1000);
  sat.setRepeatCount(ObjectAnimator.INFINITE);
  sat.setRepeatMode(ObjectAnimator.REVERSE);
  sat.start();
  ObjectAnimator light=ObjectAnimator.ofInt(this,"lightAdd",0x00101030);
  light.setEvaluator(new ArgbEvaluator());
  light.setDuration(1000);
  light.setRepeatCount(ObjectAnimator.INFINITE);
  light.setRepeatMode(ObjectAnimator.REVERSE);
  light.start();
  ObjectAnimator mult=ObjectAnimator.ofInt(this,"lightMul",0x0060ffff);
  mult.setEvaluator(new ArgbEvaluator());
  mult.setDuration(1000);
  mult.setRepeatCount(ObjectAnimator.INFINITE);
  mult.setRepeatMode(ObjectAnimator.REVERSE);
  mult.start();
  ObjectAnimator color=ObjectAnimator.ofInt(this,"porterDuffColor",0x7f990040);
  color.setEvaluator(new ArgbEvaluator());
  color.setDuration(1000);
  color.setRepeatCount(ObjectAnimator.INFINITE);
  color.setRepeatMode(ObjectAnimator.REVERSE);
  color.start();
}
