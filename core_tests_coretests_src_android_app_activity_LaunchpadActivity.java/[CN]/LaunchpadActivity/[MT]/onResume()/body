{
  super.onResume();
  if (ActivityTests.DEBUG_LIFECYCLE)   Log.v("test","RESUME lauchpad " + Integer.toHexString(System.identityHashCode(this)) + ": "+ getIntent());
  checkLifecycle(ON_RESUME);
  if (!mStarted) {
    mStarted=true;
    mHandler.postDelayed(mTimeout,5 * 1000);
    String action=getIntent().getAction();
    sCallingTest.startTiming(true);
    if (LAUNCH.equals(action)) {
      Intent intent=getIntent();
      intent.setFlags(0);
      intent.setComponent((ComponentName)intent.getParcelableExtra("component"));
      startActivityForResult(intent,LAUNCHED_RESULT);
    }
 else     if (FORWARD_RESULT.equals(action)) {
      Intent intent=getIntent();
      intent.setFlags(0);
      intent.setClass(this,LocalScreen.class);
      startActivityForResult(intent,FORWARDED_RESULT);
    }
 else     if (BAD_PARCELABLE.equals(action)) {
      mBadParcelable=true;
      Intent intent=getIntent();
      intent.setFlags(0);
      intent.setClass(this,LocalScreen.class);
      startActivityForResult(intent,LAUNCHED_RESULT);
    }
 else     if (BROADCAST_REGISTERED.equals(action)) {
      setExpectedReceivers(new String[]{RECEIVER_REG});
      registerMyReceiver(new IntentFilter(BROADCAST_REGISTERED));
      sCallingTest.addIntermediate("after-register");
      sendBroadcast(makeBroadcastIntent(BROADCAST_REGISTERED));
    }
 else     if (BROADCAST_LOCAL.equals(action)) {
      setExpectedReceivers(new String[]{RECEIVER_LOCAL});
      sendBroadcast(makeBroadcastIntent(BROADCAST_LOCAL));
    }
 else     if (BROADCAST_REMOTE.equals(action)) {
      setExpectedReceivers(new String[]{RECEIVER_REMOTE});
      sendBroadcast(makeBroadcastIntent(BROADCAST_REMOTE));
    }
 else     if (BROADCAST_ALL.equals(action)) {
      setExpectedReceivers(new String[]{RECEIVER_REMOTE,RECEIVER_REG,RECEIVER_LOCAL});
      registerMyReceiver(new IntentFilter(BROADCAST_ALL));
      sCallingTest.addIntermediate("after-register");
      sendOrderedBroadcast(makeBroadcastIntent(BROADCAST_ALL),null);
    }
 else     if (BROADCAST_MULTI.equals(action)) {
      setExpectedReceivers(new String[]{RECEIVER_REMOTE,RECEIVER_REG,RECEIVER_LOCAL,RECEIVER_REMOTE,RECEIVER_REG,RECEIVER_LOCAL,RECEIVER_REMOTE,RECEIVER_REG,RECEIVER_LOCAL,RECEIVER_LOCAL,RECEIVER_REMOTE,RECEIVER_LOCAL,RECEIVER_REMOTE,RECEIVER_REMOTE,RECEIVER_REG,RECEIVER_LOCAL,RECEIVER_REMOTE,RECEIVER_REG,RECEIVER_LOCAL,RECEIVER_REMOTE,RECEIVER_REG,RECEIVER_LOCAL,RECEIVER_REMOTE,RECEIVER_LOCAL,RECEIVER_REMOTE,RECEIVER_LOCAL});
      registerMyReceiver(new IntentFilter(BROADCAST_ALL));
      sCallingTest.addIntermediate("after-register");
      sendOrderedBroadcast(makeBroadcastIntent(BROADCAST_ALL),null);
      sendOrderedBroadcast(makeBroadcastIntent(BROADCAST_ALL),null);
      sendOrderedBroadcast(makeBroadcastIntent(BROADCAST_ALL),null);
      sendOrderedBroadcast(makeBroadcastIntent(BROADCAST_LOCAL),null);
      sendOrderedBroadcast(makeBroadcastIntent(BROADCAST_REMOTE),null);
      sendOrderedBroadcast(makeBroadcastIntent(BROADCAST_LOCAL),null);
      sendOrderedBroadcast(makeBroadcastIntent(BROADCAST_REMOTE),null);
      sendOrderedBroadcast(makeBroadcastIntent(BROADCAST_ALL),null);
      sendOrderedBroadcast(makeBroadcastIntent(BROADCAST_ALL),null);
      sendOrderedBroadcast(makeBroadcastIntent(BROADCAST_ALL),null);
      sendOrderedBroadcast(makeBroadcastIntent(BROADCAST_REPEAT),null);
    }
 else     if (BROADCAST_ABORT.equals(action)) {
      setExpectedReceivers(new String[]{RECEIVER_REMOTE,RECEIVER_ABORT});
      registerMyReceiver(new IntentFilter(BROADCAST_ABORT));
      sCallingTest.addIntermediate("after-register");
      sendOrderedBroadcast(makeBroadcastIntent(BROADCAST_ABORT),null);
    }
 else     if (BROADCAST_STICKY1.equals(action)) {
      setExpectedReceivers(new String[]{RECEIVER_REG});
      setExpectedData(new String[]{DATA_1});
      registerMyReceiver(new IntentFilter(BROADCAST_STICKY1));
      sCallingTest.addIntermediate("after-register");
    }
 else     if (BROADCAST_STICKY2.equals(action)) {
      setExpectedReceivers(new String[]{RECEIVER_REG,RECEIVER_REG});
      setExpectedData(new String[]{DATA_1,DATA_2});
      IntentFilter filter=new IntentFilter(BROADCAST_STICKY1);
      filter.addAction(BROADCAST_STICKY2);
      registerMyReceiver(filter);
      sCallingTest.addIntermediate("after-register");
    }
  }
}
