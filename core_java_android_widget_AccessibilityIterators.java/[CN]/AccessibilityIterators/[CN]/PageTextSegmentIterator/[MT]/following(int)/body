{
  final int textLegth=mText.length();
  if (textLegth <= 0) {
    return null;
  }
  if (offset >= mText.length()) {
    return null;
  }
  if (!mView.getGlobalVisibleRect(mTempRect)) {
    return null;
  }
  final int currentLine=mLayout.getLineForOffset(offset);
  final int currentLineTop=mLayout.getLineTop(currentLine);
  final int pageHeight=mTempRect.height() - mView.getTotalPaddingTop() - mView.getTotalPaddingBottom();
  final int nextPageStartLine;
  final int nextPageEndLine;
  if (offset < 0) {
    nextPageStartLine=currentLine;
    final int nextPageEndY=currentLineTop + pageHeight;
    nextPageEndLine=mLayout.getLineForVertical(nextPageEndY);
  }
 else {
    final int nextPageStartY=currentLineTop + pageHeight;
    nextPageStartLine=mLayout.getLineForVertical(nextPageStartY) + 1;
    if (mLayout.getLineTop(nextPageStartLine) <= nextPageStartY) {
      return null;
    }
    final int nextPageEndY=nextPageStartY + pageHeight;
    nextPageEndLine=mLayout.getLineForVertical(nextPageEndY);
  }
  final int start=getLineEdgeIndex(nextPageStartLine,DIRECTION_START);
  final int end=getLineEdgeIndex(nextPageEndLine,DIRECTION_END) + 1;
  return getRange(start,end);
}
