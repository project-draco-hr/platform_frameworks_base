{
  prepareTexture(texture,mMeshProgram,mMeshParameters);
  GLES20.glBindBuffer(GLES20.GL_ELEMENT_ARRAY_BUFFER,indexBuffer);
  checkError();
  GLES20.glBindBuffer(GLES20.GL_ARRAY_BUFFER,xyBuffer);
  checkError();
  int positionHandle=mMeshParameters[INDEX_POSITION].handle;
  GLES20.glVertexAttribPointer(positionHandle,COORDS_PER_VERTEX,GLES20.GL_FLOAT,false,VERTEX_STRIDE,0);
  checkError();
  GLES20.glBindBuffer(GLES20.GL_ARRAY_BUFFER,uvBuffer);
  checkError();
  int texCoordHandle=mMeshParameters[INDEX_TEXTURE_COORD].handle;
  GLES20.glVertexAttribPointer(texCoordHandle,COORDS_PER_VERTEX,GLES20.GL_FLOAT,false,VERTEX_STRIDE,0);
  checkError();
  GLES20.glBindBuffer(GLES20.GL_ARRAY_BUFFER,0);
  checkError();
  GLES20.glEnableVertexAttribArray(positionHandle);
  checkError();
  GLES20.glEnableVertexAttribArray(texCoordHandle);
  checkError();
  setMatrix(mMeshParameters,x,y,1,1);
  GLES20.glDrawElements(GLES20.GL_TRIANGLE_STRIP,indexCount,GLES20.GL_UNSIGNED_BYTE,0);
  checkError();
  GLES20.glDisableVertexAttribArray(positionHandle);
  checkError();
  GLES20.glDisableVertexAttribArray(texCoordHandle);
  checkError();
  GLES20.glBindBuffer(GLES20.GL_ELEMENT_ARRAY_BUFFER,0);
  checkError();
  mCountDrawMesh++;
}
