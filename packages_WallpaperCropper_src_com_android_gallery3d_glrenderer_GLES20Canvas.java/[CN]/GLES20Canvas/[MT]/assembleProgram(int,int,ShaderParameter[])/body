{
  int program=GLES20.glCreateProgram();
  checkError();
  if (program == 0) {
    throw new RuntimeException("Cannot create GL program: " + GLES20.glGetError());
  }
  GLES20.glAttachShader(program,vertexShader);
  checkError();
  GLES20.glAttachShader(program,fragmentShader);
  checkError();
  GLES20.glLinkProgram(program);
  checkError();
  int[] mLinkStatus=mTempIntArray;
  GLES20.glGetProgramiv(program,GLES20.GL_LINK_STATUS,mLinkStatus,0);
  if (mLinkStatus[0] != GLES20.GL_TRUE) {
    Log.e(TAG,"Could not link program: ");
    Log.e(TAG,GLES20.glGetProgramInfoLog(program));
    GLES20.glDeleteProgram(program);
    program=0;
  }
  for (int i=0; i < params.length; i++) {
    params[i].loadHandle(program);
  }
  return program;
}
