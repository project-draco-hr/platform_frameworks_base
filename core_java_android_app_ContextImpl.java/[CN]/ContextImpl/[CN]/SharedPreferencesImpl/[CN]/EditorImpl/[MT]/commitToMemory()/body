{
  MemoryCommitResult mcr=new MemoryCommitResult();
synchronized (SharedPreferencesImpl.this) {
    if (mDiskWritesInFlight > 0) {
      mMap=new HashMap<String,Object>(mMap);
    }
    mcr.mapToWriteToDisk=mMap;
    mDiskWritesInFlight++;
    boolean hasListeners=mListeners.size() > 0;
    if (hasListeners) {
      mcr.keysModified=new ArrayList<String>();
      mcr.listeners=new HashSet<OnSharedPreferenceChangeListener>(mListeners.keySet());
    }
synchronized (this) {
      if (mClear) {
        if (!mMap.isEmpty()) {
          mcr.changesMade=true;
          mMap.clear();
        }
        mClear=false;
      }
      for (      Entry<String,Object> e : mModified.entrySet()) {
        String k=e.getKey();
        Object v=e.getValue();
        if (v == this) {
          if (!mMap.containsKey(k)) {
            continue;
          }
          mMap.remove(k);
        }
 else {
          boolean isSame=false;
          if (mMap.containsKey(k)) {
            Object existingValue=mMap.get(k);
            if (existingValue != null && existingValue.equals(v)) {
              continue;
            }
          }
          mMap.put(k,v);
        }
        mcr.changesMade=true;
        if (hasListeners) {
          mcr.keysModified.add(k);
        }
      }
      mModified.clear();
    }
  }
  return mcr;
}
