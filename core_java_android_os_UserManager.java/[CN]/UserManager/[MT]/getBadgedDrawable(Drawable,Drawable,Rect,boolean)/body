{
  final int badgedWidth=badgedDrawable.getIntrinsicWidth();
  final int badgedHeight=badgedDrawable.getIntrinsicHeight();
  final boolean canBadgeInPlace=tryBadgeInPlace && (badgedDrawable instanceof BitmapDrawable) && ((BitmapDrawable)badgedDrawable).getBitmap().isMutable();
  final Bitmap bitmap;
  if (canBadgeInPlace) {
    bitmap=((BitmapDrawable)badgedDrawable).getBitmap();
  }
 else {
    bitmap=Bitmap.createBitmap(badgedWidth,badgedHeight,Config.ARGB_8888);
  }
  Canvas canvas=new Canvas(bitmap);
  if (!canBadgeInPlace) {
    badgedDrawable.setBounds(0,0,badgedWidth,badgedHeight);
    badgedDrawable.draw(canvas);
  }
  if (badgeLocation != null) {
    if (badgeLocation.left < 0 || badgeLocation.top < 0 || badgeLocation.right > badgedWidth || badgeLocation.bottom > badgedHeight) {
      throw new IllegalArgumentException("Badge location " + badgeLocation + " not in badged drawable bounds "+ new Rect(0,0,badgedWidth,badgedHeight));
    }
    badgeDrawable.setBounds(0,0,badgeLocation.width(),badgeLocation.height());
    canvas.save();
    canvas.translate(badgeLocation.left,badgeLocation.top);
    badgeDrawable.draw(canvas);
    canvas.restore();
  }
 else {
    badgeDrawable.setBounds(0,0,badgedWidth,badgedHeight);
    badgeDrawable.draw(canvas);
  }
  if (!canBadgeInPlace) {
    BitmapDrawable mergedDrawable=new BitmapDrawable(mContext.getResources(),bitmap);
    if (badgedDrawable instanceof BitmapDrawable) {
      BitmapDrawable bitmapDrawable=(BitmapDrawable)badgedDrawable;
      mergedDrawable.setTargetDensity(bitmapDrawable.getBitmap().getDensity());
    }
    return mergedDrawable;
  }
  return badgedDrawable;
}
