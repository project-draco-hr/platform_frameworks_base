{
  int filterOutCount=mFilter.getNumberOfOutputs();
  if (filterOutCount > 1) {
    throw new RuntimeException("Calling execute on filter " + mFilter + " with multiple "+ "outputs! Use executeMulti() instead!");
  }
  if (!mFilterIsSetup) {
    connectFilterOutputs();
    mFilterIsSetup=true;
  }
  boolean didActivateGLEnv=false;
  GLEnvironment glEnv=mFilterContext.getGLEnvironment();
  if (glEnv != null && !glEnv.isActive()) {
    glEnv.activate();
    didActivateGLEnv=true;
  }
  for (  Entry<String,Object> entry : inputMap.entrySet()) {
    if (entry.getValue() instanceof Frame) {
      mFilter.pushInputFrame(entry.getKey(),(Frame)entry.getValue());
    }
 else {
      mFilter.pushInputValue(entry.getKey(),entry.getValue());
    }
  }
  if (mFilter.getStatus() != Filter.STATUS_PROCESSING) {
    mFilter.openOutputs();
  }
  mFilter.performProcess(mFilterContext);
  Frame result=null;
  if (filterOutCount == 1 && mResultHolders[0].hasFrame()) {
    result=mResultHolders[0].pullFrame();
  }
  if (didActivateGLEnv) {
    glEnv.deactivate();
  }
  return result;
}
