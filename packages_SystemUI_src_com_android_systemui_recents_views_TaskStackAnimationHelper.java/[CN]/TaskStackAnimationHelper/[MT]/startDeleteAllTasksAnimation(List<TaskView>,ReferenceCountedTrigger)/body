{
  Resources res=mStackView.getResources();
  TaskStackLayoutAlgorithm stackLayout=mStackView.getStackAlgorithm();
  int taskViewRemoveAnimDuration=res.getInteger(R.integer.recents_animate_task_views_remove_all_duration);
  int offscreenXOffset=mStackView.getMeasuredWidth() - stackLayout.mTaskRect.left;
  int taskViewCount=taskViews.size();
  int startDelayMax=125;
  for (int i=taskViewCount - 1; i >= 0; i--) {
    TaskView tv=taskViews.get(i);
    int indexFromFront=taskViewCount - i - 1;
    float x=Interpolators.ACCELERATE.getInterpolation((float)indexFromFront / taskViewCount);
    int startDelay=(int)Utilities.mapRange(x,0,startDelayMax);
    tv.setClipViewInStack(false);
    AnimationProps taskAnimation=new AnimationProps(startDelay,taskViewRemoveAnimDuration,Interpolators.FAST_OUT_LINEAR_IN,new AnimatorListenerAdapter(){
      @Override public void onAnimationEnd(      Animator animation){
        postAnimationTrigger.decrement();
        tv.setClipViewInStack(true);
      }
    }
);
    postAnimationTrigger.increment();
    mTmpTransform.fillIn(tv);
    mTmpTransform.rect.offset(offscreenXOffset,0);
    mStackView.updateTaskViewToTransform(tv,mTmpTransform,taskAnimation);
  }
}
