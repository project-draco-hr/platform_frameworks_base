{
  Resources res=mStackView.getResources();
  TaskStackLayoutAlgorithm stackLayout=mStackView.getStackAlgorithm();
  TaskStackViewScroller stackScroller=mStackView.getScroller();
  int offscreenY=stackLayout.mStackRect.bottom;
  int historyTransitionDuration=res.getInteger(R.integer.recents_history_transition_duration);
  int startDelayIncr=16;
  List<TaskView> taskViews=mStackView.getTaskViews();
  int taskViewCount=taskViews.size();
  for (int i=taskViewCount - 1; i >= 0; i--) {
    TaskView tv=taskViews.get(i);
    Task task=tv.getTask();
    TaskViewAnimation taskAnimation=new TaskViewAnimation(startDelayIncr * i,historyTransitionDuration,mFastOutSlowInInterpolator,postAnimationTrigger.decrementOnAnimationEnd());
    postAnimationTrigger.increment();
    stackLayout.getStackTransform(task,stackScroller.getStackScroll(),mTmpTransform,null);
    mTmpTransform.alpha=0f;
    mTmpTransform.rect.offsetTo(mTmpTransform.rect.left,offscreenY);
    mStackView.updateTaskViewToTransform(tv,mTmpTransform,taskAnimation);
  }
}
