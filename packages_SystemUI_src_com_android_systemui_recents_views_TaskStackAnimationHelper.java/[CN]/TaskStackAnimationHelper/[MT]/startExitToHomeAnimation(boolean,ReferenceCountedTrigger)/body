{
  TaskStackLayoutAlgorithm stackLayout=mStackView.getStackAlgorithm();
  TaskStack stack=mStackView.getStack();
  if (stack.getTaskCount() == 0) {
    return;
  }
  int offscreenYOffset=stackLayout.mStackRect.height();
  List<TaskView> taskViews=mStackView.getTaskViews();
  int taskViewCount=taskViews.size();
  for (int i=0; i < taskViewCount; i++) {
    int taskIndexFromFront=taskViewCount - i - 1;
    TaskView tv=taskViews.get(i);
    Task task=tv.getTask();
    if (mStackView.isIgnoredTask(task)) {
      continue;
    }
    AnimationProps taskAnimation;
    if (animated) {
      int delay=Math.min(ENTER_EXIT_NUM_ANIMATING_TASKS,taskIndexFromFront) * DOUBLE_FRAME_OFFSET_MS;
      taskAnimation=new AnimationProps().setStartDelay(AnimationProps.BOUNDS,delay).setDuration(AnimationProps.BOUNDS,EXIT_TO_HOME_TRANSLATION_DURATION).setInterpolator(AnimationProps.BOUNDS,EXIT_TO_HOME_TRANSLATION_INTERPOLATOR).setListener(postAnimationTrigger.decrementOnAnimationEnd());
      postAnimationTrigger.increment();
    }
 else {
      taskAnimation=AnimationProps.IMMEDIATE;
    }
    mTmpTransform.fillIn(tv);
    mTmpTransform.rect.offset(0,offscreenYOffset);
    mStackView.updateTaskViewToTransform(tv,mTmpTransform,taskAnimation);
  }
}
