{
  Resources res=mStackView.getResources();
  TaskStackLayoutAlgorithm stackLayout=mStackView.getStackAlgorithm();
  TaskStackViewScroller stackScroller=mStackView.getScroller();
  int taskViewExitToAppDuration=res.getInteger(R.integer.recents_task_exit_to_app_duration);
  int taskViewAffiliateGroupEnterOffset=res.getDimensionPixelSize(R.dimen.recents_task_view_affiliate_group_enter_offset);
  Task launchingTask=launchingTaskView.getTask();
  List<TaskView> taskViews=mStackView.getTaskViews();
  int taskViewCount=taskViews.size();
  for (int i=0; i < taskViewCount; i++) {
    TaskView tv=taskViews.get(i);
    Task task=tv.getTask();
    boolean currentTaskOccludesLaunchTarget=(launchingTask != null && launchingTask.group.isTaskAboveTask(task,launchingTask));
    if (tv == launchingTaskView) {
      tv.setClipViewInStack(false);
      tv.onStartLaunchTargetLaunchAnimation(taskViewExitToAppDuration,screenPinningRequested,postAnimationTrigger);
    }
 else     if (currentTaskOccludesLaunchTarget) {
      TaskViewAnimation taskAnimation=new TaskViewAnimation(taskViewExitToAppDuration,Interpolators.ALPHA_OUT,postAnimationTrigger.decrementOnAnimationEnd());
      postAnimationTrigger.increment();
      stackLayout.getStackTransform(task,stackScroller.getStackScroll(),mTmpTransform,null);
      mTmpTransform.alpha=0f;
      mTmpTransform.rect.offset(0,taskViewAffiliateGroupEnterOffset);
      mStackView.updateTaskViewToTransform(tv,mTmpTransform,taskAnimation);
    }
  }
}
