{
  if (type == BrowserService.NOW_PLAYING) {
    MatrixCursor matrixCursor=new MatrixCursor(BrowserService.MEDIA_CONTAINER_PROJECTION);
    try {
      List<MusicTrack> musicTracks=retreiveMedia();
      for (      MusicTrack musicTrack : musicTracks) {
        Uri.Builder builder=new Uri.Builder();
        builder.authority(BrowserService.AUTHORITY);
        builder.appendPath(BrowserService.NOW_PLAYING_PATH);
        builder.appendPath(musicTrack.getTitle());
        matrixCursor.addRow(new Object[]{builder.build(),musicTrack.getTitle(),musicTrack.getArtist(),musicTrack.getImage(),PlaybackState.ACTION_PLAY});
        Log.d(TAG,"Uri " + builder.build());
      }
    }
 catch (    JSONException e) {
      Log.e(TAG,"::getRootItemCursor:",e);
    }
    Log.d(TAG,"cursor: " + matrixCursor.getCount());
    return matrixCursor;
  }
 else   if (type == BrowserService.PIANO) {
    MatrixCursor matrixCursor=new MatrixCursor(BrowserService.MEDIA_CONTAINER_PROJECTION);
    try {
      List<MusicTrack> musicTracks=retreiveMedia();
      for (      MusicTrack musicTrack : musicTracks) {
        Uri.Builder builder=new Uri.Builder();
        builder.authority(BrowserService.AUTHORITY);
        builder.appendPath(BrowserService.PIANO_BASE_PATH);
        builder.appendPath(musicTrack.getTitle());
        matrixCursor.addRow(new Object[]{builder.build(),musicTrack.getTitle(),musicTrack.getArtist(),musicTrack.getImage(),PlaybackState.ACTION_PLAY});
        Log.d(TAG,"Uri " + builder.build());
      }
    }
 catch (    JSONException e) {
      Log.e(TAG,"::getRootItemCursor:",e);
    }
    Log.d(TAG,"cursor: " + matrixCursor.getCount());
    return matrixCursor;
  }
 else   if (type == BrowserService.VOICE) {
    MatrixCursor matrixCursor=new MatrixCursor(BrowserService.MEDIA_CONTAINER_PROJECTION);
    try {
      List<MusicTrack> musicTracks=retreiveMedia();
      for (      MusicTrack musicTrack : musicTracks) {
        Uri.Builder builder=new Uri.Builder();
        builder.authority(BrowserService.AUTHORITY);
        builder.appendPath(BrowserService.VOICE_BASE_PATH);
        builder.appendPath(musicTrack.getTitle());
        matrixCursor.addRow(new Object[]{builder.build(),musicTrack.getTitle(),musicTrack.getArtist(),musicTrack.getImage(),PlaybackState.ACTION_PLAY});
        Log.d(TAG,"Uri " + builder.build());
      }
    }
 catch (    JSONException e) {
      Log.e(TAG,"::getRootItemCursor:",e);
    }
    Log.d(TAG,"cursor: " + matrixCursor.getCount());
    return matrixCursor;
  }
  return null;
}
