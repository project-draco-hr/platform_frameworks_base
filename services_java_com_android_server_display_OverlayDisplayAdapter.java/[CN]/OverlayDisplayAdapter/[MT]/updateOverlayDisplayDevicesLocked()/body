{
  String value=Settings.System.getString(getContext().getContentResolver(),Settings.Secure.OVERLAY_DISPLAY_DEVICES);
  if (value == null) {
    value="";
  }
  if (value.equals(mCurrentOverlaySetting)) {
    return;
  }
  mCurrentOverlaySetting=value;
  if (!mOverlays.isEmpty()) {
    Slog.i(TAG,"Dismissing all overlay display devices.");
    for (    OverlayDisplayHandle overlay : mOverlays) {
      overlay.dismissLocked();
    }
    mOverlays.clear();
  }
  int count=0;
  for (  String part : value.split(";")) {
    Matcher matcher=SETTING_PATTERN.matcher(part);
    if (matcher.matches()) {
      if (count >= 4) {
        Slog.w(TAG,"Too many overlay display devices specified: " + value);
        break;
      }
      try {
        int width=Integer.parseInt(matcher.group(1),10);
        int height=Integer.parseInt(matcher.group(2),10);
        int densityDpi=Integer.parseInt(matcher.group(3),10);
        if (width >= MIN_WIDTH && width <= MAX_WIDTH && height >= MIN_HEIGHT && height <= MAX_HEIGHT && densityDpi >= DisplayMetrics.DENSITY_LOW && densityDpi <= DisplayMetrics.DENSITY_XXHIGH) {
          int number=++count;
          String name=getContext().getResources().getString(com.android.internal.R.string.display_manager_overlay_display_name,number);
          int gravity=chooseOverlayGravity(number);
          Slog.i(TAG,"Showing overlay display device #" + number + ": name="+ name+ ", width="+ width+ ", height="+ height+ ", densityDpi="+ densityDpi);
          mOverlays.add(new OverlayDisplayHandle(name,width,height,densityDpi,gravity));
          continue;
        }
      }
 catch (      NumberFormatException ex) {
      }
    }
 else     if (part.isEmpty()) {
      continue;
    }
    Slog.w(TAG,"Malformed overlay display devices setting: " + value);
  }
}
