{
  if (DEBUG) {
    Log.i(TAG,"Saving session.");
  }
  new AsyncTask<Void,Void,Void>(){
    @Override protected Void doInBackground(    Void... params){
      try {
        byte[] b=writeDelimitedProto(currentSession.toProto());
        OutputStream os=new FileOutputStream(mAnalyticsFile,true);
        if (DEBUG) {
          Log.d(TAG,String.format("Serialized size: %d kB.",b.length / 1024));
        }
        try {
          os.write(b);
          os.flush();
        }
  finally {
          try {
            os.close();
          }
 catch (          IOException e) {
            Log.e(TAG,"Exception while closing file",e);
          }
        }
      }
 catch (      IOException e) {
        Log.e(TAG,"Exception while writing file",e);
      }
      return null;
    }
    private byte[] writeDelimitedProto(    MessageNano proto) throws IOException {
      byte[] result=new byte[CodedOutputByteBufferNano.computeMessageSizeNoTag(proto)];
      CodedOutputByteBufferNano ob=CodedOutputByteBufferNano.newInstance(result);
      ob.writeMessageNoTag(proto);
      ob.checkNoSpaceLeft();
      return result;
    }
  }
.executeOnExecutor(AsyncTask.SERIAL_EXECUTOR);
}
