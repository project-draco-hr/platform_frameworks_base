{
  if (!availableRegionContains(centerX,centerY)) {
    return false;
  }
  boolean changed=false;
  final MagnificationSpec currSpec=mCurrentMagnificationSpec;
  if (Float.isNaN(scale)) {
    scale=getScale();
  }
  final float normScale=MathUtils.constrain(scale,MIN_SCALE,MAX_SCALE);
  if (Float.compare(currSpec.scale,normScale) != 0) {
    currSpec.scale=normScale;
    changed=true;
  }
  if (Float.isNaN(centerX)) {
    centerX=getCenterX();
  }
  final float nonNormOffsetX=mMagnifiedBounds.width() / 2.0f - centerX * scale;
  final float offsetX=MathUtils.constrain(nonNormOffsetX,getMinOffsetXLocked(),0);
  if (Float.compare(currSpec.offsetX,offsetX) != 0) {
    currSpec.offsetX=offsetX;
    changed=true;
  }
  if (Float.isNaN(centerY)) {
    centerY=getCenterY();
  }
  final float nonNormOffsetY=mMagnifiedBounds.height() / 2.0f - centerY * scale;
  final float offsetY=MathUtils.constrain(nonNormOffsetY,getMinOffsetYLocked(),0);
  if (Float.compare(currSpec.offsetY,offsetY) != 0) {
    currSpec.offsetY=offsetY;
    changed=true;
  }
  return changed;
}
