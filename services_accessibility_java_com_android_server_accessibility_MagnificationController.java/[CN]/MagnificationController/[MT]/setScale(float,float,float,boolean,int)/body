{
synchronized (mLock) {
    if (!mRegistered) {
      return false;
    }
    scale=MathUtils.constrain(scale,MIN_SCALE,MAX_SCALE);
    final Rect viewport=mTempRect;
    mMagnificationRegion.getBounds(viewport);
    final MagnificationSpec spec=mCurrentMagnificationSpec;
    final float oldScale=spec.scale;
    final float oldCenterX=(viewport.width() / 2.0f - spec.offsetX) / oldScale;
    final float oldCenterY=(viewport.height() / 2.0f - spec.offsetY) / oldScale;
    final float normPivotX=(pivotX - spec.offsetX) / oldScale;
    final float normPivotY=(pivotY - spec.offsetY) / oldScale;
    final float offsetX=(oldCenterX - normPivotX) * (oldScale / scale);
    final float offsetY=(oldCenterY - normPivotY) * (oldScale / scale);
    final float centerX=normPivotX + offsetX;
    final float centerY=normPivotY + offsetY;
    mIdOfLastServiceToMagnify=id;
    return setScaleAndCenterLocked(scale,centerX,centerY,animate,id);
  }
}
