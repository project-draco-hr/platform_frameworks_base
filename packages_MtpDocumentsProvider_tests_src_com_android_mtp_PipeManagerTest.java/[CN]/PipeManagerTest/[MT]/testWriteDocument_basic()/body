{
  TestUtil.addTestDevice(mDatabase);
  TestUtil.addTestStorage(mDatabase,"1");
  final MtpObjectInfo info=new MtpObjectInfo.Builder().setObjectHandle(1).setName("note.txt").build();
  mDatabase.getMapper().startAddingDocuments("2");
  mDatabase.getMapper().putChildDocuments(0,"2",TestUtil.OPERATIONS_SUPPORTED,new MtpObjectInfo[]{info},new long[]{0L});
  mDatabase.getMapper().stopAddingDocuments("2");
  mtpManager.setObjectInfo(0,info);
  final ParcelFileDescriptor descriptor=mPipeManager.writeDocument(getContext(),mtpManager,new Identifier(0,0,1,"2",MtpDatabaseConstants.DOCUMENT_TYPE_OBJECT),TestUtil.OPERATIONS_SUPPORTED);
  final ParcelFileDescriptor.AutoCloseOutputStream outputStream=new ParcelFileDescriptor.AutoCloseOutputStream(descriptor);
  outputStream.write(HELLO_BYTES,0,HELLO_BYTES.length);
  outputStream.close();
  mExecutor.shutdown();
  assertTrue(mExecutor.awaitTermination(1000,TimeUnit.MILLISECONDS));
  try {
    mtpManager.getObjectInfo(0,1);
    fail();
  }
 catch (  IOException e) {
  }
  final MtpObjectInfo targetDocument=mtpManager.getObjectInfo(0,TestMtpManager.CREATED_DOCUMENT_HANDLE);
  assertTrue(targetDocument != null);
  try (final Cursor cursor=mDatabase.queryDocument("2",new String[]{MtpDatabaseConstants.COLUMN_OBJECT_HANDLE})){
    assertEquals(1,cursor.getCount());
    cursor.moveToNext();
    assertEquals(TestMtpManager.CREATED_DOCUMENT_HANDLE,cursor.getInt(0));
  }
   final byte[] uploadedBytes=mtpManager.getImportFileBytes(0,TestMtpManager.CREATED_DOCUMENT_HANDLE);
  assertEquals(HELLO_BYTES.length,uploadedBytes.length);
  for (int i=0; i < HELLO_BYTES.length; i++) {
    assertEquals(HELLO_BYTES[i],uploadedBytes[i]);
  }
}
