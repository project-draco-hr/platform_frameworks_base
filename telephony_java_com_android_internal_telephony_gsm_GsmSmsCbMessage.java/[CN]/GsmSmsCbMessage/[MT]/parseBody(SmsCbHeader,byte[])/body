{
  int encoding;
  String language=null;
  boolean hasLanguageIndicator=false;
  int dataCodingScheme=header.getDataCodingScheme();
switch ((dataCodingScheme & 0xf0) >> 4) {
case 0x00:
    encoding=android.telephony.SmsMessage.ENCODING_7BIT;
  language=LANGUAGE_CODES_GROUP_0[dataCodingScheme & 0x0f];
break;
case 0x01:
hasLanguageIndicator=true;
if ((dataCodingScheme & 0x0f) == 0x01) {
encoding=android.telephony.SmsMessage.ENCODING_16BIT;
}
 else {
encoding=android.telephony.SmsMessage.ENCODING_7BIT;
}
break;
case 0x02:
encoding=android.telephony.SmsMessage.ENCODING_7BIT;
language=LANGUAGE_CODES_GROUP_2[dataCodingScheme & 0x0f];
break;
case 0x03:
encoding=android.telephony.SmsMessage.ENCODING_7BIT;
break;
case 0x04:
case 0x05:
switch ((dataCodingScheme & 0x0c) >> 2) {
case 0x01:
encoding=android.telephony.SmsMessage.ENCODING_8BIT;
break;
case 0x02:
encoding=android.telephony.SmsMessage.ENCODING_16BIT;
break;
case 0x00:
default :
encoding=android.telephony.SmsMessage.ENCODING_7BIT;
break;
}
break;
case 0x06:
case 0x07:
case 0x09:
case 0x0e:
throw new IllegalArgumentException("Unsupported GSM dataCodingScheme " + dataCodingScheme);
case 0x0f:
if (((dataCodingScheme & 0x04) >> 2) == 0x01) {
encoding=android.telephony.SmsMessage.ENCODING_8BIT;
}
 else {
encoding=android.telephony.SmsMessage.ENCODING_7BIT;
}
break;
default :
encoding=android.telephony.SmsMessage.ENCODING_7BIT;
break;
}
if (header.isUmtsFormat()) {
int nrPages=pdu[SmsCbHeader.PDU_HEADER_LENGTH];
if (pdu.length < SmsCbHeader.PDU_HEADER_LENGTH + 1 + (PDU_BODY_PAGE_LENGTH + 1) * nrPages) {
throw new IllegalArgumentException("Pdu length " + pdu.length + " does not match "+ nrPages+ " pages");
}
StringBuilder sb=new StringBuilder();
for (int i=0; i < nrPages; i++) {
int offset=SmsCbHeader.PDU_HEADER_LENGTH + 1 + (PDU_BODY_PAGE_LENGTH + 1) * i;
int length=pdu[offset + PDU_BODY_PAGE_LENGTH];
if (length > PDU_BODY_PAGE_LENGTH) {
throw new IllegalArgumentException("Page length " + length + " exceeds maximum value "+ PDU_BODY_PAGE_LENGTH);
}
Pair<String,String> p=unpackBody(pdu,encoding,offset,length,hasLanguageIndicator,language);
language=p.first;
sb.append(p.second);
}
return new Pair<String,String>(language,sb.toString());
}
 else {
int offset=SmsCbHeader.PDU_HEADER_LENGTH;
int length=pdu.length - offset;
return unpackBody(pdu,encoding,offset,length,hasLanguageIndicator,language);
}
}
