{
  TypeReference<Integer> typeRefInt=new TypeReference<Integer>(){
{
    }
  }
;
  TypeReference<Integer> typeRefInt2=new TypeReference<Integer>(){
{
    }
  }
;
  assertEquals(typeRefInt,typeRefInt2);
  assertEquals("The type ref's captured type should be the Integer class",Integer.class,typeRefInt.getType());
  TypeReference<Float> typeRefFloat=new TypeReference<Float>(){
{
    }
  }
;
  assertFalse("Integer/Float type references must not be equal",typeRefInt.equals(typeRefFloat));
  assertEquals("The type ref's captured type should be the Float class",Float.class,typeRefFloat.getType());
  try {
    TypeReference<Integer> typeRefTypeVar=createTypeRefWithTypeVar();
    fail("Expected a type reference with type variables to fail");
    assertFalse(typeRefTypeVar.equals(typeRefInt));
  }
 catch (  IllegalArgumentException e) {
  }
}
