{
  TypeReference<Integer> intToken=new TypeReference<Integer>(){
{
    }
  }
;
  assertRawTypeEquals(intToken,Integer.class);
  TypeReference<List<Integer>> listToken=new TypeReference<List<Integer>>(){
{
    }
  }
;
  assertRawTypeEquals(listToken,List.class);
  TypeReference<List<List<Integer>>> listListToken=new TypeReference<List<List<Integer>>>(){
{
    }
  }
;
  assertRawTypeEquals(listListToken,List.class);
  TypeReference<int[]> intArrayToken=new TypeReference<int[]>(){
{
    }
  }
;
  assertRawTypeEquals(intArrayToken,int[].class);
  TypeReference<Integer[]> integerArrayToken=new TypeReference<Integer[]>(){
{
    }
  }
;
  assertRawTypeEquals(integerArrayToken,Integer[].class);
  TypeReference<List<Integer>[]> listArrayToken=new TypeReference<List<Integer>[]>(){
{
    }
  }
;
  assertRawTypeEquals(listArrayToken,List[].class);
}
