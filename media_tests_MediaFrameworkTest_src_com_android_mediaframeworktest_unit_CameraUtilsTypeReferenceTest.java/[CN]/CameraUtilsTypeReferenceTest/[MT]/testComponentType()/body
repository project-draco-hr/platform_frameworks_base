{
  TypeReference<Integer> intToken=new TypeReference<Integer>(){
{
    }
  }
;
  assertNull(intToken.getComponentType());
  TypeReference<List<Integer>> listToken=new TypeReference<List<Integer>>(){
{
    }
  }
;
  assertNull(listToken.getComponentType());
  TypeReference<List<List<Integer>>> listListToken=new TypeReference<List<List<Integer>>>(){
{
    }
  }
;
  assertNull(listListToken.getComponentType());
  TypeReference<int[]> intArrayToken=new TypeReference<int[]>(){
{
    }
  }
;
  assertTypeReferenceEquals(intArrayToken.getComponentType(),int.class);
  TypeReference<Integer[]> integerArrayToken=new TypeReference<Integer[]>(){
{
    }
  }
;
  assertTypeReferenceEquals(integerArrayToken.getComponentType(),Integer.class);
  assertEquals(new IntArrayToken1().getComponentType(),new IntArrayToken2().getComponentType());
  assertEquals(new IntListArrayToken1().getComponentType(),new IntListArrayToken2().getComponentType());
  TypeReference<List<Integer>[]> listArrayToken=new TypeReference<List<Integer>[]>(){
{
    }
  }
;
  assertEquals(listToken,listArrayToken.getComponentType());
}
