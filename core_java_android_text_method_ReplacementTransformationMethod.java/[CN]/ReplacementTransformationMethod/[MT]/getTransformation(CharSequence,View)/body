{
  char[] original=getOriginal();
  char[] replacement=getReplacement();
  if (!(source instanceof Editable)) {
    boolean doNothing=true;
    int n=original.length;
    for (int i=0; i < n; i++) {
      if (TextUtils.indexOf(source,original[i]) >= 0) {
        doNothing=false;
        break;
      }
    }
    if (doNothing) {
      return source;
    }
    if (!(source instanceof Spannable)) {
      if (source instanceof Spanned) {
        return new SpannedString(new SpannedReplacementCharSequence((Spanned)source,original,replacement));
      }
 else {
        return new ReplacementCharSequence(source,original,replacement).toString();
      }
    }
  }
  if (source instanceof Spanned) {
    return new SpannedReplacementCharSequence((Spanned)source,original,replacement);
  }
 else {
    return new ReplacementCharSequence(source,original,replacement);
  }
}
