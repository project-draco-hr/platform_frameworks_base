{
  if (mLocation == null) {
    setTwilightState(null);
    return;
  }
  final long now=System.currentTimeMillis();
  mTwilightCalculator.calculateTwilight(now,mLocation.getLatitude(),mLocation.getLongitude());
  final boolean isNight=(mTwilightCalculator.mState == TwilightCalculator.NIGHT);
  final long todaySunrise=mTwilightCalculator.mSunrise;
  final long todaySunset=mTwilightCalculator.mSunset;
  mTwilightCalculator.calculateTwilight(now + DateUtils.DAY_IN_MILLIS,mLocation.getLatitude(),mLocation.getLongitude());
  final long tomorrowSunrise=mTwilightCalculator.mSunrise;
  float amount=0;
  if (isNight) {
    if (todaySunrise == -1 || todaySunset == -1) {
      amount=1;
    }
 else     if (now > todaySunset) {
      amount=Math.min(1,(now - todaySunset) / (float)TWILIGHT_ADJUSTMENT_TIME);
    }
 else {
      amount=Math.max(0,1 - (todaySunrise - now) / (float)TWILIGHT_ADJUSTMENT_TIME);
    }
  }
  TwilightState state=new TwilightState(isNight,amount);
  if (DEBUG) {
    Slog.d(TAG,"Updating twilight state: " + state);
  }
  setTwilightState(state);
  long nextUpdate=0;
  if (todaySunrise == -1 || todaySunset == -1) {
    nextUpdate=now + 12 * DateUtils.HOUR_IN_MILLIS;
  }
 else {
    nextUpdate+=DateUtils.MINUTE_IN_MILLIS;
    if (amount == 1 || amount == 0) {
      if (now > todaySunset) {
        nextUpdate+=tomorrowSunrise;
      }
 else       if (now > todaySunrise) {
        nextUpdate+=todaySunset;
      }
 else {
        nextUpdate+=todaySunrise;
      }
    }
 else {
      nextUpdate+=9 * DateUtils.MINUTE_IN_MILLIS;
    }
  }
  if (DEBUG) {
    Slog.d(TAG,"Next update in " + (nextUpdate - now) + " ms");
  }
  Intent updateIntent=new Intent(ACTION_UPDATE_TWILIGHT_STATE);
  PendingIntent pendingIntent=PendingIntent.getBroadcast(getContext(),0,updateIntent,0);
  mAlarmManager.cancel(pendingIntent);
  mAlarmManager.setExact(AlarmManager.RTC,nextUpdate,pendingIntent);
}
