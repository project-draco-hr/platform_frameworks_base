{
  mDatabase.execSQL("CREATE TABLE pragma_test (" + "i INTEGER DEFAULT 1234, " + "j INTEGER, "+ "s TEXT DEFAULT 'hello', "+ "t TEXT, "+ "'select' TEXT DEFAULT \"hello\")");
  try {
    Cursor cur=mDatabase.rawQuery("PRAGMA table_info(pragma_test)",null);
    Assert.assertEquals(5,cur.getCount());
    Assert.assertTrue(cur.moveToNext());
    Assert.assertEquals("i",cur.getString(TABLE_INFO_PRAGMA_COLUMNNAME_INDEX));
    Assert.assertEquals("1234",cur.getString(TABLE_INFO_PRAGMA_DEFAULT_INDEX));
    Assert.assertTrue(cur.moveToNext());
    Assert.assertEquals("j",cur.getString(TABLE_INFO_PRAGMA_COLUMNNAME_INDEX));
    Assert.assertNull(cur.getString(TABLE_INFO_PRAGMA_DEFAULT_INDEX));
    Assert.assertTrue(cur.moveToNext());
    Assert.assertEquals("s",cur.getString(TABLE_INFO_PRAGMA_COLUMNNAME_INDEX));
    Assert.assertEquals("'hello'",cur.getString(TABLE_INFO_PRAGMA_DEFAULT_INDEX));
    Assert.assertTrue(cur.moveToNext());
    Assert.assertEquals("t",cur.getString(TABLE_INFO_PRAGMA_COLUMNNAME_INDEX));
    Assert.assertNull(cur.getString(TABLE_INFO_PRAGMA_DEFAULT_INDEX));
    Assert.assertTrue(cur.moveToNext());
    Assert.assertEquals("select",cur.getString(TABLE_INFO_PRAGMA_COLUMNNAME_INDEX));
    Assert.assertEquals("\"hello\"",cur.getString(TABLE_INFO_PRAGMA_DEFAULT_INDEX));
    cur.close();
  }
 catch (  Throwable t) {
    throw new RuntimeException("If you see this test fail, it's likely that something about " + "sqlite's PRAGMA table_info(...) command has changed.",t);
  }
}
