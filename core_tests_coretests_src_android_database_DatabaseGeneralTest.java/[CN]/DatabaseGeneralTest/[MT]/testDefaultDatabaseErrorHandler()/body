{
  DefaultDatabaseErrorHandler errorHandler=new DefaultDatabaseErrorHandler();
  File dbfile=new File(mDatabase.getPath());
  mDatabase.close();
  assertFalse(mDatabase.isOpen());
  assertTrue(dbfile.exists());
  try {
    errorHandler.onCorruption(mDatabase);
    assertFalse(dbfile.exists());
  }
 catch (  Exception e) {
    fail("unexpected");
  }
  SQLiteDatabase memoryDb=SQLiteDatabase.openOrCreateDatabase(":memory:",null);
  assertNotNull(memoryDb);
  memoryDb.close();
  assertFalse(memoryDb.isOpen());
  try {
    errorHandler.onCorruption(memoryDb);
  }
 catch (  Exception e) {
    fail("unexpected");
  }
  SQLiteDatabase dbObj=SQLiteDatabase.openOrCreateDatabase(mDatabase.getPath(),null);
  assertTrue(dbfile.exists());
  assertNotNull(dbObj);
  assertTrue(dbObj.isOpen());
  try {
    errorHandler.onCorruption(dbObj);
    assertFalse(dbfile.exists());
  }
 catch (  Exception e) {
    fail("unexpected");
  }
  String attachedDb1File=mDatabase.getPath() + "1";
  dbObj=SQLiteDatabase.openOrCreateDatabase(mDatabase.getPath(),null);
  dbObj.execSQL("ATTACH DATABASE ':memory:' as memoryDb");
  dbObj.execSQL("ATTACH DATABASE '" + attachedDb1File + "' as attachedDb1");
  assertTrue(dbfile.exists());
  assertTrue(new File(attachedDb1File).exists());
  assertNotNull(dbObj);
  assertTrue(dbObj.isOpen());
  List<Pair<String,String>> attachedDbs=dbObj.getAttachedDbs();
  try {
    errorHandler.onCorruption(dbObj);
    assertFalse(dbfile.exists());
    assertFalse(new File(attachedDb1File).exists());
  }
 catch (  Exception e) {
    fail("unexpected");
  }
  int N=5;
  ArrayList<String> attachedDbFiles=new ArrayList<String>(N);
  for (int i=0; i < N; i++) {
    attachedDbFiles.add(mDatabase.getPath() + i);
  }
  dbObj=SQLiteDatabase.openOrCreateDatabase(mDatabase.getPath(),null);
  dbObj.execSQL("ATTACH DATABASE ':memory:' as memoryDb");
  for (int i=0; i < N; i++) {
    dbObj.execSQL("ATTACH DATABASE '" + attachedDbFiles.get(i) + "' as attachedDb"+ i);
  }
  assertTrue(dbfile.exists());
  for (int i=0; i < N; i++) {
    assertTrue(new File(attachedDbFiles.get(i)).exists());
  }
  assertNotNull(dbObj);
  assertTrue(dbObj.isOpen());
  attachedDbs=dbObj.getAttachedDbs();
  try {
    errorHandler.onCorruption(dbObj);
    assertFalse(dbfile.exists());
    for (int i=0; i < N; i++) {
      assertFalse(new File(attachedDbFiles.get(i)).exists());
    }
  }
 catch (  Exception e) {
    fail("unexpected");
  }
}
