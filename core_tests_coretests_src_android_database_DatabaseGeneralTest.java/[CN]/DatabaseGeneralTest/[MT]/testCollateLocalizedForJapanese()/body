{
  final String testName="DatabaseGeneralTest#testCollateLocalizedForJapanese()";
  final Locale[] localeArray=Locale.getAvailableLocales();
  final String japanese=Locale.JAPANESE.getLanguage();
  final String english=Locale.ENGLISH.getLanguage();
  Locale japaneseLocale=null;
  Locale englishLocale=null;
  for (  Locale locale : localeArray) {
    if (locale != null) {
      final String language=locale.getLanguage();
      if (language == null) {
        continue;
      }
 else       if (language.equals(japanese)) {
        japaneseLocale=locale;
      }
 else       if (language.equals(english)) {
        englishLocale=locale;
      }
    }
    if (japaneseLocale != null && englishLocale != null) {
      break;
    }
  }
  if (japaneseLocale == null || englishLocale == null) {
    Log.d(TAG,testName + "n is silently skipped since " + (englishLocale == null ? (japaneseLocale == null ? "Both English and Japanese locales do not exist." : "English locale does not exist.") : (japaneseLocale == null ? "Japanese locale does not exist." : "...why?")));
    return;
  }
  Locale originalLocale=Locale.getDefault();
  try {
    final String dbName="collate_localized_test";
    mDatabase.execSQL("CREATE TABLE " + dbName + " ("+ "_id INTEGER PRIMARY KEY, "+ "s TEXT COLLATE LOCALIZED) ");
    DatabaseUtils.InsertHelper ih=new DatabaseUtils.InsertHelper(mDatabase,dbName);
    ContentValues cv=new ContentValues();
    cv=new ContentValues();
    cv.put("s","\uFF75\uFF77\uFF85\uFF9C");
    ih.insert(cv);
    cv=new ContentValues();
    cv.put("s","\u306B\u307B\u3093");
    ih.insert(cv);
    cv=new ContentValues();
    cv.put("s","\u30A2\u30E1\u30EA\u30AB");
    ih.insert(cv);
    Locale.setDefault(englishLocale);
    Locale.setDefault(japaneseLocale);
    Cursor cur=mDatabase.rawQuery("SELECT * FROM " + dbName + " ORDER BY s",null);
    assertTrue(cur.moveToFirst());
    assertEquals("\u30A2\u30E1\u30EA\u30AB",cur.getString(1));
    assertTrue(cur.moveToNext());
    assertEquals("\uFF75\uFF77\uFF85\uFF9C",cur.getString(1));
    assertTrue(cur.moveToNext());
    assertEquals("\u306B\u307B\u3093",cur.getString(1));
  }
  finally {
    if (originalLocale != null) {
      try {
        Locale.setDefault(originalLocale);
      }
 catch (      Exception e) {
      }
    }
  }
}
