{
  if (duration <= 0) {
    throw new IllegalArgumentException("Duration must be positive");
  }
  if (startTime < 0) {
    throw new IllegalArgumentException("Start time must not be negative");
  }
  RectF bounds=new RectF();
  path.computeBounds(bounds,false);
  if ((bounds.bottom < 0) || (bounds.top < 0) || (bounds.right < 0)|| (bounds.left < 0)) {
    throw new IllegalArgumentException("Path bounds must not be negative");
  }
  if (path.isEmpty()) {
    throw new IllegalArgumentException("Path is empty");
  }
  mPath=new Path(path);
  mPathMeasure=new PathMeasure(path,false);
  if (mPathMeasure.getLength() == 0) {
    Path tempPath=new Path(path);
    tempPath.lineTo(-1,-1);
    mTapLocation=new float[2];
    PathMeasure pathMeasure=new PathMeasure(tempPath,false);
    pathMeasure.getPosTan(0,mTapLocation,null);
  }
  if (mPathMeasure.nextContour()) {
    throw new IllegalArgumentException("Path has more than one contour");
  }
  mPathMeasure.setPath(mPath,false);
  mStartTime=startTime;
  mEndTime=startTime + duration;
  mTimeToLengthConversion=getLength() / duration;
}
