{
  if (hasPerspective()) {
    float[] origin=new float[]{0.f,0.f};
    mapPoints(origin);
    mapPoints(dst,dstIndex,src,srcIndex,ptCount);
    final int count=ptCount * 2;
    for (int i=0; i < count; i+=2) {
      dst[dstIndex + i]=dst[dstIndex + i] - origin[0];
      dst[dstIndex + i + 1]=dst[dstIndex + i + 1] - origin[1];
    }
  }
 else {
    Matrix_Delegate copy=new Matrix_Delegate(mValues);
    setTranslate(copy.mValues,0,0);
    copy.mapPoints(dst,dstIndex,src,srcIndex,ptCount);
  }
}
