{
  final String[] classPathElements=classPath.split(":");
  final InstallerConnection installer=new InstallerConnection();
  installer.waitForConnection();
  final String instructionSet=VMRuntime.getRuntime().vmInstructionSet();
  try {
    String sharedLibraries="";
    for (    String classPathElement : classPathElements) {
      final int dexoptNeeded=DexFile.getDexOptNeeded(classPathElement,instructionSet,"speed",false);
      if (dexoptNeeded != DexFile.NO_DEXOPT_NEEDED) {
        installer.dexopt(classPathElement,Process.SYSTEM_UID,instructionSet,dexoptNeeded,0,"speed",null,sharedLibraries);
      }
      if (!sharedLibraries.isEmpty()) {
        sharedLibraries+=":";
      }
      sharedLibraries+=classPathElement;
    }
  }
 catch (  IOException|InstallerException e) {
    throw new RuntimeException("Error starting system_server",e);
  }
 finally {
    installer.disconnect();
  }
}
