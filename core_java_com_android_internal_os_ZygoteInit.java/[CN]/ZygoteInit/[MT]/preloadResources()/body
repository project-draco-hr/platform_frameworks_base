{
  final VMRuntime runtime=VMRuntime.getRuntime();
  try {
    mResources=Resources.getSystem();
    mResources.startPreloading();
    if (PRELOAD_RESOURCES) {
      Log.i(TAG,"Preloading resources...");
      long startTime=SystemClock.uptimeMillis();
      TypedArray ar=mResources.obtainTypedArray(com.android.internal.R.array.preloaded_drawables);
      int N=preloadDrawables(ar);
      ar.recycle();
      Log.i(TAG,"...preloaded " + N + " resources in "+ (SystemClock.uptimeMillis() - startTime)+ "ms.");
      startTime=SystemClock.uptimeMillis();
      ar=mResources.obtainTypedArray(com.android.internal.R.array.preloaded_color_state_lists);
      N=preloadColorStateLists(ar);
      ar.recycle();
      Log.i(TAG,"...preloaded " + N + " resources in "+ (SystemClock.uptimeMillis() - startTime)+ "ms.");
      if (mResources.getBoolean(com.android.internal.R.bool.config_freeformWindowManagement)) {
        startTime=SystemClock.uptimeMillis();
        ar=mResources.obtainTypedArray(com.android.internal.R.array.preloaded_freeform_multi_window_drawables);
        N=preloadDrawables(ar);
        ar.recycle();
        Log.i(TAG,"...preloaded " + N + " resource in "+ (SystemClock.uptimeMillis() - startTime)+ "ms.");
      }
    }
    mResources.finishPreloading();
  }
 catch (  RuntimeException e) {
    Log.w(TAG,"Failure preloading resources",e);
  }
}
