{
  ZygoteServer zygoteServer=new ZygoteServer();
  ZygoteHooks.startZygoteNoThreadCreation();
  try {
    Os.setpgid(0,0);
  }
 catch (  ErrnoException ex) {
    throw new RuntimeException("Failed to setpgid(0,0)",ex);
  }
  try {
    Trace.traceBegin(Trace.TRACE_TAG_DALVIK,"ZygoteInit");
    RuntimeInit.enableDdms();
    SamplingProfilerIntegration.start();
    boolean startSystemServer=false;
    String socketName="zygote";
    String abiList=null;
    for (int i=1; i < argv.length; i++) {
      if ("start-system-server".equals(argv[i])) {
        startSystemServer=true;
      }
 else       if (argv[i].startsWith(ABI_LIST_ARG)) {
        abiList=argv[i].substring(ABI_LIST_ARG.length());
      }
 else       if (argv[i].startsWith(SOCKET_NAME_ARG)) {
        socketName=argv[i].substring(SOCKET_NAME_ARG.length());
      }
 else {
        throw new RuntimeException("Unknown command line argument: " + argv[i]);
      }
    }
    if (abiList == null) {
      throw new RuntimeException("No ABI list supplied.");
    }
    zygoteServer.registerServerSocket(socketName);
    Trace.traceBegin(Trace.TRACE_TAG_DALVIK,"ZygotePreload");
    EventLog.writeEvent(LOG_BOOT_PROGRESS_PRELOAD_START,SystemClock.uptimeMillis());
    preload();
    EventLog.writeEvent(LOG_BOOT_PROGRESS_PRELOAD_END,SystemClock.uptimeMillis());
    Trace.traceEnd(Trace.TRACE_TAG_DALVIK);
    SamplingProfilerIntegration.writeZygoteSnapshot();
    Trace.traceBegin(Trace.TRACE_TAG_DALVIK,"PostZygoteInitGC");
    gcAndFinalize();
    Trace.traceEnd(Trace.TRACE_TAG_DALVIK);
    Trace.setTracingEnabled(false);
    Zygote.nativeUnmountStorageOnInit();
    ZygoteHooks.stopZygoteNoThreadCreation();
    if (startSystemServer) {
      startSystemServer(abiList,socketName,zygoteServer);
    }
    Log.i(TAG,"Accepting command socket connections");
    zygoteServer.runSelectLoop(abiList);
    zygoteServer.closeServerSocket();
  }
 catch (  Zygote.MethodAndArgsCaller caller) {
    caller.run();
  }
catch (  RuntimeException ex) {
    Log.e(TAG,"System zygote died with exception",ex);
    zygoteServer.closeServerSocket();
    throw ex;
  }
}
