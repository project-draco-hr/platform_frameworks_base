{
  final VMRuntime runtime=VMRuntime.getRuntime();
  InputStream is;
  try {
    is=new FileInputStream(PRELOADED_CLASSES);
  }
 catch (  FileNotFoundException e) {
    Log.e(TAG,"Couldn't find " + PRELOADED_CLASSES + ".");
    return;
  }
  Log.i(TAG,"Preloading classes...");
  long startTime=SystemClock.uptimeMillis();
  try {
    Os.setregid(ROOT_GID,UNPRIVILEGED_GID);
    Os.setreuid(ROOT_UID,UNPRIVILEGED_UID);
  }
 catch (  ErrnoException ex) {
    throw new RuntimeException("Failed to drop root",ex);
  }
  float defaultUtilization=runtime.getTargetHeapUtilization();
  runtime.setTargetHeapUtilization(0.8f);
  try {
    BufferedReader br=new BufferedReader(new InputStreamReader(is),256);
    int count=0;
    String line;
    while ((line=br.readLine()) != null) {
      line=line.trim();
      if (line.startsWith("#") || line.equals("")) {
        continue;
      }
      try {
        if (false) {
          Log.v(TAG,"Preloading " + line + "...");
        }
        Class.forName(line);
        count++;
      }
 catch (      ClassNotFoundException e) {
        Log.w(TAG,"Class not found for preloading: " + line);
      }
catch (      UnsatisfiedLinkError e) {
        Log.w(TAG,"Problem preloading " + line + ": "+ e);
      }
catch (      Throwable t) {
        Log.e(TAG,"Error preloading " + line + ".",t);
        if (t instanceof Error) {
          throw (Error)t;
        }
        if (t instanceof RuntimeException) {
          throw (RuntimeException)t;
        }
        throw new RuntimeException(t);
      }
    }
    Log.i(TAG,"...preloaded " + count + " classes in "+ (SystemClock.uptimeMillis() - startTime)+ "ms.");
  }
 catch (  IOException e) {
    Log.e(TAG,"Error reading " + PRELOADED_CLASSES + ".",e);
  }
 finally {
    IoUtils.closeQuietly(is);
    runtime.setTargetHeapUtilization(defaultUtilization);
    runtime.preloadDexCaches();
    try {
      Os.setreuid(ROOT_UID,ROOT_UID);
      Os.setregid(ROOT_GID,ROOT_GID);
    }
 catch (    ErrnoException ex) {
      throw new RuntimeException("Failed to restore root",ex);
    }
  }
}
