{
  boolean hasTaskViews=(mSv.getTaskViews().size() > 0);
  if (!hasTaskViews) {
    return false;
  }
  mInterceptedBySwipeHelper=mSwipeHelper.onInterceptTouchEvent(ev);
  if (mInterceptedBySwipeHelper) {
    return true;
  }
  TaskStackViewLayoutAlgorithm layoutAlgorithm=mSv.mLayoutAlgorithm;
  boolean wasScrolling=mScroller.isScrolling() || (mScroller.mScrollAnimator != null && mScroller.mScrollAnimator.isRunning());
  int action=ev.getAction();
switch (action & MotionEvent.ACTION_MASK) {
case MotionEvent.ACTION_DOWN:
{
      mInitialMotionX=mLastMotionX=(int)ev.getX();
      mInitialMotionY=mLastMotionY=(int)ev.getY();
      mInitialP=mLastP=layoutAlgorithm.sCurve.xToP(mLastMotionY,layoutAlgorithm.mStackRect);
      mActivePointerId=ev.getPointerId(0);
      mActiveTaskView=findViewAtPoint(mLastMotionX,mLastMotionY);
      mScroller.stopScroller();
      mScroller.stopBoundScrollAnimation();
      initOrResetVelocityTracker();
      mVelocityTracker.addMovement(createMotionEventForStackScroll(ev));
      break;
    }
case MotionEvent.ACTION_POINTER_DOWN:
{
    final int index=ev.getActionIndex();
    mActivePointerId=ev.getPointerId(index);
    mLastMotionX=(int)ev.getX(index);
    mLastMotionY=(int)ev.getY(index);
    mLastP=mSv.mLayoutAlgorithm.screenYToCurveProgress(mLastMotionY);
    break;
  }
case MotionEvent.ACTION_MOVE:
{
  if (mActivePointerId == INACTIVE_POINTER_ID)   break;
  initVelocityTrackerIfNotExists();
  mVelocityTracker.addMovement(createMotionEventForStackScroll(ev));
  int activePointerIndex=ev.findPointerIndex(mActivePointerId);
  int y=(int)ev.getY(activePointerIndex);
  int x=(int)ev.getX(activePointerIndex);
  if (Math.abs(y - mInitialMotionY) > mScrollTouchSlop) {
    mIsScrolling=true;
    final ViewParent parent=mSv.getParent();
    if (parent != null) {
      parent.requestDisallowInterceptTouchEvent(true);
    }
  }
  mLastMotionX=x;
  mLastMotionY=y;
  mLastP=layoutAlgorithm.sCurve.xToP(mLastMotionY,layoutAlgorithm.mStackRect);
  break;
}
case MotionEvent.ACTION_POINTER_UP:
{
int pointerIndex=ev.getActionIndex();
int pointerId=ev.getPointerId(pointerIndex);
if (pointerId == mActivePointerId) {
  final int newPointerIndex=(pointerIndex == 0) ? 1 : 0;
  mActivePointerId=ev.getPointerId(newPointerIndex);
  mLastMotionX=(int)ev.getX(newPointerIndex);
  mLastMotionY=(int)ev.getY(newPointerIndex);
  mLastP=mSv.mLayoutAlgorithm.screenYToCurveProgress(mLastMotionY);
  mVelocityTracker.clear();
}
break;
}
case MotionEvent.ACTION_CANCEL:
case MotionEvent.ACTION_UP:
{
mScroller.animateBoundScroll();
mIsScrolling=false;
mActivePointerId=INACTIVE_POINTER_ID;
mActiveTaskView=null;
mTotalPMotion=0;
recycleVelocityTracker();
break;
}
}
return wasScrolling || mIsScrolling;
}
