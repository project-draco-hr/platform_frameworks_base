{
  if (D.BUG)   Log.d(TAG,"onActiveSessionsUpdatedH n=" + controllers.size());
  final Set<Token> toRemove=new HashSet<Token>(mRecords.keySet());
  for (  MediaController controller : controllers) {
    final Token token=controller.getSessionToken();
    final PlaybackInfo pi=controller.getPlaybackInfo();
    toRemove.remove(token);
    if (!mRecords.containsKey(token)) {
      final MediaControllerRecord r=new MediaControllerRecord(controller);
      r.name=getControllerName(controller);
      mRecords.put(token,r);
      controller.registerCallback(r,mHandler);
    }
    final MediaControllerRecord r=mRecords.get(token);
    final boolean remote=isRemote(pi);
    if (remote) {
      updateRemoteH(token,r.name,pi);
      r.sentRemote=true;
    }
  }
  for (  Token t : toRemove) {
    final MediaControllerRecord r=mRecords.get(t);
    r.controller.unregisterCallback(r);
    mRecords.remove(t);
    if (D.BUG)     Log.d(TAG,"Removing " + r.name + " sentRemote="+ r.sentRemote);
    if (r.sentRemote) {
      mCallbacks.onRemoteRemoved(t);
      r.sentRemote=false;
    }
  }
}
