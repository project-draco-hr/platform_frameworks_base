{
  final int n=mX.length;
  if (Float.isNaN(x)) {
    return x;
  }
  if (x <= mX[0]) {
    return mY[0];
  }
  if (x >= mX[n - 1]) {
    return mY[n - 1];
  }
  int i=0;
  while (x >= mX[i + 1]) {
    i+=1;
    if (x == mX[i]) {
      return mY[i];
    }
  }
  float h=mX[i + 1] - mX[i];
  float t=(x - mX[i]) / h;
  return (mY[i] * (1 + 2 * t) + h * mM[i] * t) * (1 - t) * (1 - t) + (mY[i + 1] * (3 - 2 * t) + h * mM[i + 1] * (t - 1)) * t * t;
}
