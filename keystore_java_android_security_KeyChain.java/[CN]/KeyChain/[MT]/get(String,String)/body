{
  if (alias == null) {
    throw new NullPointerException("alias == null");
  }
  ensureNotOnMainThread();
  String authAlias=(type.equals(Credentials.CA_CERTIFICATE)) ? (alias + CA_SUFFIX) : alias;
  AccountManagerFuture<Bundle> future=mAccountManager.getAuthToken(mAccount,authAlias,false,null,null);
  Bundle bundle;
  try {
    bundle=future.getResult();
  }
 catch (  OperationCanceledException e) {
    throw new AssertionError(e);
  }
catch (  IOException e) {
    throw new AssertionError(e);
  }
catch (  AuthenticatorException e) {
    throw new AssertionError(e);
  }
  Intent intent=bundle.getParcelable(AccountManager.KEY_INTENT);
  if (intent != null) {
    Bundle result=new Bundle();
    intent.setFlags(intent.getFlags() & ~Intent.FLAG_ACTIVITY_NEW_TASK);
    result.putParcelable(KEY_INTENT,intent);
    return result;
  }
  String authToken=bundle.getString(AccountManager.KEY_AUTHTOKEN);
  if (authToken == null) {
    throw new AssertionError("Invalid authtoken");
  }
  byte[] bytes;
  try {
    if (type.equals(Credentials.USER_PRIVATE_KEY)) {
      bytes=mService.getPrivate(alias,authToken);
    }
 else     if (type.equals(Credentials.USER_CERTIFICATE)) {
      bytes=mService.getCertificate(alias,authToken);
    }
 else     if (type.equals(Credentials.CA_CERTIFICATE)) {
      bytes=mService.getCaCertificate(alias,authToken);
    }
 else {
      throw new AssertionError();
    }
  }
 catch (  RemoteException e) {
    throw new AssertionError(e);
  }
  if (bytes == null) {
    throw new AssertionError();
  }
  Bundle result=new Bundle();
  if (type.equals(Credentials.USER_PRIVATE_KEY)) {
    result.putByteArray(KEY_PKCS8,bytes);
  }
 else   if (type.equals(Credentials.USER_CERTIFICATE)) {
    result.putByteArray(KEY_X509,bytes);
  }
 else   if (type.equals(Credentials.CA_CERTIFICATE)) {
    result.putByteArray(KEY_X509,bytes);
  }
 else {
    throw new AssertionError();
  }
  return result;
}
