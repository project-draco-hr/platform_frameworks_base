{
  if (context == null) {
    throw new NullPointerException("context == null");
  }
  ensureNotOnMainThread(context);
  final BlockingQueue<IKeyChainService> q=new LinkedBlockingQueue<IKeyChainService>(1);
  ServiceConnection keyChainServiceConnection=new ServiceConnection(){
    volatile boolean mConnectedAtLeastOnce=false;
    @Override public void onServiceConnected(    ComponentName name,    IBinder service){
      if (!mConnectedAtLeastOnce) {
        mConnectedAtLeastOnce=true;
        try {
          q.put(IKeyChainService.Stub.asInterface(service));
        }
 catch (        InterruptedException e) {
        }
      }
    }
    @Override public void onServiceDisconnected(    ComponentName name){
    }
  }
;
  boolean isBound=context.bindService(new Intent(IKeyChainService.class.getName()),keyChainServiceConnection,Context.BIND_AUTO_CREATE);
  if (!isBound) {
    throw new AssertionError("could not bind to KeyChainService");
  }
  return new KeyChainConnection(context,keyChainServiceConnection,q.take());
}
