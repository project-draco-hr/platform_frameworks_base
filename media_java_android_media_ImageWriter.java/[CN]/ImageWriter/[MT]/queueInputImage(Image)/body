{
  if (image == null) {
    throw new IllegalArgumentException("image shouldn't be null");
  }
  boolean ownedByMe=isImageOwnedByMe(image);
  if (ownedByMe && !(((WriterSurfaceImage)image).mIsImageValid)) {
    throw new IllegalStateException("Image from ImageWriter is invalid");
  }
  if (!ownedByMe) {
    if (!(image.getOwner() instanceof ImageReader)) {
      throw new IllegalArgumentException("Only images from ImageReader can be queued to" + " ImageWriter, other image source is not supported yet!");
    }
    ImageReader prevOwner=(ImageReader)image.getOwner();
    if (image.getFormat() == ImageFormat.PRIVATE) {
      prevOwner.detachImage(image);
      attachAndQueueInputImage(image);
      image.close();
      return;
    }
 else {
      Image inputImage=dequeueInputImage();
      inputImage.setTimestamp(image.getTimestamp());
      inputImage.setCropRect(image.getCropRect());
      ImageUtils.imageCopy(image,inputImage);
      image.close();
      image=inputImage;
      ownedByMe=true;
    }
  }
  Rect crop=image.getCropRect();
  nativeQueueInputImage(mNativeContext,image,image.getTimestamp(),crop.left,crop.top,crop.right,crop.bottom);
  if (ownedByMe) {
    mDequeuedImages.remove(image);
    WriterSurfaceImage wi=(WriterSurfaceImage)image;
    wi.clearSurfacePlanes();
    wi.mIsImageValid=false;
  }
}
