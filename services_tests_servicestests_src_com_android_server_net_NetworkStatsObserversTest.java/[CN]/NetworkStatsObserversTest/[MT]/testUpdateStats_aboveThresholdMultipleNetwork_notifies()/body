{
  NetworkTemplate[] templates=new NetworkTemplate[]{sTemplateImsi1,sTemplateImsi2};
  DataUsageRequest inputRequest=new DataUsageRequest(DataUsageRequest.REQUEST_ID_UNSET,templates,NO_UIDS,THRESHOLD_BYTES);
  DataUsageRequest request=mStatsObservers.register(inputRequest,mMessenger,mockBinder,UID_RED,NetworkStatsAccess.Level.DEVICESUMMARY);
  assertTrue(request.requestId > 0);
  assertTrue(Arrays.deepEquals(templates,request.templates));
  assertNull(request.uids);
  assertEquals(THRESHOLD_BYTES,request.thresholdInBytes);
  NetworkIdentitySet identSet1=new NetworkIdentitySet();
  identSet1.add(new NetworkIdentity(TYPE_MOBILE,TelephonyManager.NETWORK_TYPE_UNKNOWN,IMSI_1,null,false,true));
  mActiveIfaces.put(TEST_IFACE,identSet1);
  NetworkIdentitySet identSet2=new NetworkIdentitySet();
  identSet2.add(new NetworkIdentity(TYPE_MOBILE,TelephonyManager.NETWORK_TYPE_UNKNOWN,IMSI_2,null,false,true));
  mActiveIfaces.put(TEST_IFACE2,identSet2);
  NetworkStats xtSnapshot=new NetworkStats(TEST_START,1).addIfaceValues(TEST_IFACE,BASE_BYTES,8L,BASE_BYTES,16L).addIfaceValues(TEST_IFACE2,BASE_BYTES + 1234L,18L,BASE_BYTES,12L);
  NetworkStats uidSnapshot=null;
  mStatsObservers.updateStats(xtSnapshot,uidSnapshot,mActiveIfaces,mActiveUidIfaces,VPN_INFO,TEST_START);
  xtSnapshot=new NetworkStats(TEST_START + MINUTE_IN_MILLIS,1).addIfaceValues(TEST_IFACE,BASE_BYTES,8L,BASE_BYTES,16L).addIfaceValues(TEST_IFACE2,BASE_BYTES + THRESHOLD_BYTES,22L,BASE_BYTES + THRESHOLD_BYTES,24L);
  mStatsObservers.updateStats(xtSnapshot,uidSnapshot,mActiveIfaces,mActiveUidIfaces,VPN_INFO,TEST_START);
  waitForObserverToIdle();
  assertTrue(mCv.block(WAIT_TIMEOUT));
  assertEquals(NetworkStatsManager.CALLBACK_LIMIT_REACHED,mHandler.mLastMessageType);
}
