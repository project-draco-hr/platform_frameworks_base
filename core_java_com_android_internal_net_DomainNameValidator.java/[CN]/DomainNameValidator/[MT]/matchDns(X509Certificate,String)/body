{
  boolean hasDns=false;
  try {
    Collection subjectAltNames=certificate.getSubjectAlternativeNames();
    if (subjectAltNames != null) {
      Iterator i=subjectAltNames.iterator();
      while (i.hasNext()) {
        List altNameEntry=(List)(i.next());
        if (altNameEntry != null && 2 <= altNameEntry.size()) {
          Integer altNameType=(Integer)(altNameEntry.get(0));
          if (altNameType != null) {
            if (altNameType.intValue() == ALT_DNS_NAME) {
              hasDns=true;
              String altName=(String)(altNameEntry.get(1));
              if (altName != null) {
                if (matchDns(thisDomain,altName)) {
                  return true;
                }
              }
            }
          }
        }
      }
    }
  }
 catch (  CertificateParsingException e) {
    String errorMessage=e.getMessage();
    if (errorMessage == null) {
      errorMessage="failed to parse certificate";
    }
    Log.w(TAG,"DomainNameValidator.matchDns(): " + errorMessage);
    return false;
  }
  if (!hasDns) {
    final String cn=new DNParser(certificate.getSubjectX500Principal()).find("cn");
    if (LOG_ENABLED) {
      Log.v(TAG,"Validating subject: DN:" + certificate.getSubjectX500Principal().getName(X500Principal.CANONICAL) + "  CN:"+ cn);
    }
    if (cn != null) {
      return matchDns(thisDomain,cn);
    }
  }
  return false;
}
