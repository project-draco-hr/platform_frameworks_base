{
  if (eventType == TYPES_ALL_MASK) {
    return "TYPES_ALL_MASK";
  }
  StringBuilder builder=new StringBuilder();
  int eventTypeCount=0;
  while (eventType != 0) {
    final int eventTypeFlag=1 << Integer.numberOfTrailingZeros(eventType);
    eventType&=~eventTypeFlag;
switch (eventTypeFlag) {
case TYPE_VIEW_CLICKED:
{
        if (eventTypeCount > 0) {
          builder.append(", ");
        }
        builder.append("TYPE_VIEW_CLICKED");
        eventTypeCount++;
      }
    break;
case TYPE_VIEW_LONG_CLICKED:
{
    if (eventTypeCount > 0) {
      builder.append(", ");
    }
    builder.append("TYPE_VIEW_LONG_CLICKED");
    eventTypeCount++;
  }
break;
case TYPE_VIEW_SELECTED:
{
if (eventTypeCount > 0) {
  builder.append(", ");
}
builder.append("TYPE_VIEW_SELECTED");
eventTypeCount++;
}
break;
case TYPE_VIEW_FOCUSED:
{
if (eventTypeCount > 0) {
builder.append(", ");
}
builder.append("TYPE_VIEW_FOCUSED");
eventTypeCount++;
}
break;
case TYPE_VIEW_TEXT_CHANGED:
{
if (eventTypeCount > 0) {
builder.append(", ");
}
builder.append("TYPE_VIEW_TEXT_CHANGED");
eventTypeCount++;
}
break;
case TYPE_WINDOW_STATE_CHANGED:
{
if (eventTypeCount > 0) {
builder.append(", ");
}
builder.append("TYPE_WINDOW_STATE_CHANGED");
eventTypeCount++;
}
break;
case TYPE_VIEW_HOVER_ENTER:
{
if (eventTypeCount > 0) {
builder.append(", ");
}
builder.append("TYPE_VIEW_HOVER_ENTER");
eventTypeCount++;
}
break;
case TYPE_VIEW_HOVER_EXIT:
{
if (eventTypeCount > 0) {
builder.append(", ");
}
builder.append("TYPE_VIEW_HOVER_EXIT");
eventTypeCount++;
}
break;
case TYPE_NOTIFICATION_STATE_CHANGED:
{
if (eventTypeCount > 0) {
builder.append(", ");
}
builder.append("TYPE_NOTIFICATION_STATE_CHANGED");
eventTypeCount++;
}
break;
case TYPE_TOUCH_EXPLORATION_GESTURE_START:
{
if (eventTypeCount > 0) {
builder.append(", ");
}
builder.append("TYPE_TOUCH_EXPLORATION_GESTURE_START");
eventTypeCount++;
}
break;
case TYPE_TOUCH_EXPLORATION_GESTURE_END:
{
if (eventTypeCount > 0) {
builder.append(", ");
}
builder.append("TYPE_TOUCH_EXPLORATION_GESTURE_END");
eventTypeCount++;
}
break;
case TYPE_WINDOW_CONTENT_CHANGED:
{
if (eventTypeCount > 0) {
builder.append(", ");
}
builder.append("TYPE_WINDOW_CONTENT_CHANGED");
eventTypeCount++;
}
break;
case TYPE_VIEW_TEXT_SELECTION_CHANGED:
{
if (eventTypeCount > 0) {
builder.append(", ");
}
builder.append("TYPE_VIEW_TEXT_SELECTION_CHANGED");
eventTypeCount++;
}
break;
case TYPE_VIEW_SCROLLED:
{
if (eventTypeCount > 0) {
builder.append(", ");
}
builder.append("TYPE_VIEW_SCROLLED");
eventTypeCount++;
}
break;
case TYPE_ANNOUNCEMENT:
{
if (eventTypeCount > 0) {
builder.append(", ");
}
builder.append("TYPE_ANNOUNCEMENT");
eventTypeCount++;
}
break;
case TYPE_VIEW_ACCESSIBILITY_FOCUSED:
{
if (eventTypeCount > 0) {
builder.append(", ");
}
builder.append("TYPE_VIEW_ACCESSIBILITY_FOCUSED");
eventTypeCount++;
}
break;
case TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED:
{
if (eventTypeCount > 0) {
builder.append(", ");
}
builder.append("TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED");
eventTypeCount++;
}
break;
case TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY:
{
if (eventTypeCount > 0) {
builder.append(", ");
}
builder.append("TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY");
eventTypeCount++;
}
break;
case TYPE_GESTURE_DETECTION_START:
{
if (eventTypeCount > 0) {
builder.append(", ");
}
builder.append("TYPE_GESTURE_DETECTION_START");
eventTypeCount++;
}
break;
case TYPE_GESTURE_DETECTION_END:
{
if (eventTypeCount > 0) {
builder.append(", ");
}
builder.append("TYPE_GESTURE_DETECTION_END");
eventTypeCount++;
}
break;
case TYPE_TOUCH_INTERACTION_START:
{
if (eventTypeCount > 0) {
builder.append(", ");
}
builder.append("TYPE_TOUCH_INTERACTION_START");
eventTypeCount++;
}
break;
case TYPE_TOUCH_INTERACTION_END:
{
if (eventTypeCount > 0) {
builder.append(", ");
}
builder.append("TYPE_TOUCH_INTERACTION_END");
eventTypeCount++;
}
break;
case TYPE_WINDOWS_CHANGED:
{
if (eventTypeCount > 0) {
builder.append(", ");
}
builder.append("TYPE_WINDOWS_CHANGED");
eventTypeCount++;
}
break;
case TYPE_VIEW_STYLUS_BUTTON_PRESSED:
{
if (eventTypeCount > 0) {
builder.append(", ");
}
builder.append("TYPE_VIEW_STYLUS_BUTTON_PRESSED");
eventTypeCount++;
}
break;
}
}
if (eventTypeCount > 1) {
builder.insert(0,'[');
builder.append(']');
}
return builder.toString();
}
