{
  final E[] allSpans=spanned.getSpans(start,limit,type);
  final int length=allSpans.length;
  spans=(E[])Array.newInstance(type,length);
  spanStarts=new int[length];
  spanEnds=new int[length];
  spanFlags=new int[length];
  int count=0;
  for (int i=0; i < length; i++) {
    final E span=allSpans[i];
    final int spanStart=spanned.getSpanStart(span);
    final int spanEnd=spanned.getSpanEnd(span);
    if (spanStart == spanEnd)     continue;
    final int spanFlag=spanned.getSpanFlags(span);
    final int priority=spanFlag & Spanned.SPAN_PRIORITY;
    if (priority != 0 && count != 0) {
      int j;
      for (j=0; j < count; j++) {
        final int otherPriority=spanFlags[j] & Spanned.SPAN_PRIORITY;
        if (priority > otherPriority)         break;
      }
      System.arraycopy(spans,j,spans,j + 1,count - j);
      System.arraycopy(spanStarts,j,spanStarts,j + 1,count - j);
      System.arraycopy(spanEnds,j,spanEnds,j + 1,count - j);
      System.arraycopy(spanFlags,j,spanFlags,j + 1,count - j);
      spans[j]=span;
      spanStarts[j]=spanStart;
      spanEnds[j]=spanEnd;
      spanFlags[j]=spanFlag;
    }
 else {
      spans[i]=span;
      spanStarts[i]=spanStart;
      spanEnds[i]=spanEnd;
      spanFlags[i]=spanFlag;
    }
    count++;
  }
  numberOfSpans=count;
}
