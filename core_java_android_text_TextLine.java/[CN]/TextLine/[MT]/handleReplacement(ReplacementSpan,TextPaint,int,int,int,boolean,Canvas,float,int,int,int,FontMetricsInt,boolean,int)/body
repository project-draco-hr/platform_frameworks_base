{
  float ret=0;
  if (prepFlags != PREP_NONE && limit > start && (runIndex > mPreppedIndex || (runIndex == mPreppedIndex && start >= mPreppedLimit))) {
    char[] chars=mChars;
    chars[start]='\ufffc';
    for (int i=start + 1; i < limit; ++i) {
      chars[i]='\ufeff';
    }
    mPreppedIndex=runIndex;
    mPreppedLimit=limit;
  }
  if (prepFlags != PREP_ONLY) {
    int textStart=mStart + start;
    int textLimit=mStart + limit;
    if (needWidth || (c != null && runIsRtl)) {
      ret=replacement.getSize(wp,mText,textStart,textLimit,fmi);
    }
    if (c != null) {
      if (runIsRtl) {
        x-=ret;
      }
      replacement.draw(c,mText,textStart,textLimit,x,top,y,bottom,wp);
    }
  }
  return runIsRtl ? -ret : ret;
}
