{
  if (fmi != null) {
    expandMetricsFromPaint(fmi,wp);
  }
  int runLen=end - start;
  if (runLen == 0) {
    return 0f;
  }
  float ret=0;
  if (needWidth || (c != null && (wp.bgColor != 0 || wp.underlineColor != 0 || runIsRtl))) {
    if (mCharsValid) {
      ret=wp.getRunAdvance(mChars,start,contextEnd,contextStart,contextEnd,runIsRtl,end);
    }
 else {
      int delta=mStart;
      ret=wp.getRunAdvance(mText,delta + start,delta + contextEnd,delta + contextStart,delta + contextEnd,runIsRtl,delta + end);
    }
  }
  if (c != null) {
    if (runIsRtl) {
      x-=ret;
    }
    if (wp.bgColor != 0) {
      int previousColor=wp.getColor();
      Paint.Style previousStyle=wp.getStyle();
      wp.setColor(wp.bgColor);
      wp.setStyle(Paint.Style.FILL);
      c.drawRect(x,top,x + ret,bottom,wp);
      wp.setStyle(previousStyle);
      wp.setColor(previousColor);
    }
    if (wp.underlineColor != 0) {
      float underlineTop=y + wp.baselineShift + (1.0f / 9.0f) * wp.getTextSize();
      int previousColor=wp.getColor();
      Paint.Style previousStyle=wp.getStyle();
      boolean previousAntiAlias=wp.isAntiAlias();
      wp.setStyle(Paint.Style.FILL);
      wp.setAntiAlias(true);
      wp.setColor(wp.underlineColor);
      c.drawRect(x,underlineTop,x + ret,underlineTop + wp.underlineThickness,wp);
      wp.setStyle(previousStyle);
      wp.setColor(previousColor);
      wp.setAntiAlias(previousAntiAlias);
    }
    drawTextRun(c,wp,start,end,contextStart,contextEnd,runIsRtl,x,y + wp.baselineShift);
  }
  return runIsRtl ? -ret : ret;
}
