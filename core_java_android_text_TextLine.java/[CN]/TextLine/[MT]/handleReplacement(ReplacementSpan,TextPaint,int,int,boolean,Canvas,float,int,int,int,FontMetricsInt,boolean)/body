{
  float ret=0;
  int textStart=mStart + start;
  int textLimit=mStart + limit;
  if (needWidth || (c != null && runIsRtl)) {
    int previousTop=0;
    int previousAscent=0;
    int previousDescent=0;
    int previousBottom=0;
    int previousLeading=0;
    boolean needUpdateMetrics=(fmi != null);
    if (needUpdateMetrics) {
      previousTop=fmi.top;
      previousAscent=fmi.ascent;
      previousDescent=fmi.descent;
      previousBottom=fmi.bottom;
      previousLeading=fmi.leading;
    }
    ret=replacement.getSize(wp,mText,textStart,textLimit,fmi);
    if (needUpdateMetrics) {
      updateMetrics(fmi,previousTop,previousAscent,previousDescent,previousBottom,previousLeading);
    }
  }
  if (c != null) {
    if (runIsRtl) {
      x-=ret;
    }
    replacement.draw(c,mText,textStart,textLimit,x,top,y,bottom,wp);
  }
  return runIsRtl ? -ret : ret;
}
