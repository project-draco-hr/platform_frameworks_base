{
  if (!mHasTabs) {
    if (mDirections == Layout.DIRS_ALL_LEFT_TO_RIGHT) {
      drawRun(c,0,mLen,false,x,top,y,bottom,false);
      return;
    }
    if (mDirections == Layout.DIRS_ALL_RIGHT_TO_LEFT) {
      drawRun(c,0,mLen,true,x,top,y,bottom,false);
      return;
    }
  }
  float h=0;
  int[] runs=mDirections.mDirections;
  RectF emojiRect=null;
  int lastRunIndex=runs.length - 2;
  for (int i=0; i < runs.length; i+=2) {
    int runStart=runs[i];
    int runLimit=runStart + (runs[i + 1] & Layout.RUN_LENGTH_MASK);
    if (runLimit > mLen) {
      runLimit=mLen;
    }
    boolean runIsRtl=(runs[i + 1] & Layout.RUN_RTL_FLAG) != 0;
    int segstart=runStart;
    for (int j=mHasTabs ? runStart : runLimit; j <= runLimit; j++) {
      int codept=0;
      Bitmap bm=null;
      if (mHasTabs && j < runLimit) {
        codept=mChars[j];
        if (codept >= 0xd800 && codept < 0xdc00 && j + 1 < runLimit) {
          codept=Character.codePointAt(mChars,j);
          if (codept >= Layout.MIN_EMOJI && codept <= Layout.MAX_EMOJI) {
            bm=Layout.EMOJI_FACTORY.getBitmapFromAndroidPua(codept);
          }
 else           if (codept > 0xffff) {
            ++j;
            continue;
          }
        }
      }
      if (j == runLimit || codept == '\t' || bm != null) {
        h+=drawRun(c,segstart,j,runIsRtl,x + h,top,y,bottom,i != lastRunIndex || j != mLen);
        if (codept == '\t') {
          h=mDir * nextTab(h * mDir);
        }
 else         if (bm != null) {
          float bmAscent=ascent(j);
          float bitmapHeight=bm.getHeight();
          float scale=-bmAscent / bitmapHeight;
          float width=bm.getWidth() * scale;
          if (emojiRect == null) {
            emojiRect=new RectF();
          }
          emojiRect.set(x + h,y + bmAscent,x + h + width,y);
          c.drawBitmap(bm,null,emojiRect,mPaint);
          h+=width;
          j++;
        }
        segstart=j + 1;
      }
    }
  }
}
