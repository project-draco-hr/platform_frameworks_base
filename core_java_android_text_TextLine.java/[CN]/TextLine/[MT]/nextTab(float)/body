{
  float nh=Float.MAX_VALUE;
  boolean alltabs=false;
  if (mHasTabs && mTabs != null) {
    TabStopSpan[] tabs=mTabs;
    for (int i=0; i < tabs.length && tabs[i] != null; ++i) {
      int where=tabs[i].getTabStop();
      if (where < nh && where > h) {
        nh=where;
      }
    }
    if (nh != Float.MAX_VALUE) {
      return nh;
    }
  }
  return ((int)((h + TAB_INCREMENT) / TAB_INCREMENT)) * TAB_INCREMENT;
}
