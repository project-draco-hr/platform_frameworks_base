{
  int target=trailing ? offset - 1 : offset;
  if (target < 0) {
    return 0;
  }
  float h=0;
  if (!mHasTabs) {
    if (mDirections == Layout.DIRS_ALL_LEFT_TO_RIGHT) {
      return measureRun(0,0,target,mLen,false,fmi);
    }
    if (mDirections == Layout.DIRS_ALL_RIGHT_TO_LEFT) {
      return measureRun(0,0,target,mLen,true,fmi);
    }
  }
  char[] chars=mChars;
  int[] runs=mDirections.mDirections;
  for (int i=0; i < runs.length; i+=2) {
    int runStart=runs[i];
    int runLimit=runStart + (runs[i + 1] & Layout.RUN_LENGTH_MASK);
    if (runLimit > mLen) {
      runLimit=mLen;
    }
    boolean runIsRtl=(runs[i + 1] & Layout.RUN_RTL_FLAG) != 0;
    int segstart=runStart;
    for (int j=mHasTabs ? runStart : runLimit; j <= runLimit; j++) {
      int codept=0;
      Bitmap bm=null;
      if (mHasTabs && j < runLimit) {
        codept=chars[j];
        if (codept >= 0xd800 && codept < 0xdc00 && j + 1 < runLimit) {
          codept=Character.codePointAt(chars,j);
          if (codept >= Layout.MIN_EMOJI && codept <= Layout.MAX_EMOJI) {
            bm=Layout.EMOJI_FACTORY.getBitmapFromAndroidPua(codept);
          }
 else           if (codept > 0xffff) {
            ++j;
            continue;
          }
        }
      }
      if (j == runLimit || codept == '\t' || bm != null) {
        boolean inSegment=target >= segstart && target < j;
        boolean advance=(mDir == Layout.DIR_RIGHT_TO_LEFT) == runIsRtl;
        if (inSegment && advance) {
          return h+=measureRun(i,segstart,offset,j,runIsRtl,fmi);
        }
        float w=measureRun(i,segstart,j,j,runIsRtl,fmi);
        h+=advance ? w : -w;
        if (inSegment) {
          return h+=measureRun(i,segstart,offset,j,runIsRtl,null);
        }
        if (codept == '\t') {
          if (offset == j) {
            return h;
          }
          h=mDir * nextTab(h * mDir);
          if (target == j) {
            return h;
          }
        }
        if (bm != null) {
          float bmAscent=ascent(j);
          float wid=bm.getWidth() * -bmAscent / bm.getHeight();
          h+=mDir * wid;
          j++;
        }
        segstart=j + 1;
      }
    }
  }
  return h;
}
