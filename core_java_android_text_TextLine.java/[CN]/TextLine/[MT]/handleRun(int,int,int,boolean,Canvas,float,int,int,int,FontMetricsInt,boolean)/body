{
  if (start == measureLimit) {
    TextPaint wp=mWorkPaint;
    wp.set(mPaint);
    return handleText(wp,0,0,0,0,runIsRtl,c,x,top,y,bottom,fmi,needWidth);
  }
  float ox=x;
  for (int i=start, inext; i < measureLimit; i=inext) {
    TextPaint wp=mWorkPaint;
    wp.set(mPaint);
    int mlimit;
    if (mSpanned == null) {
      inext=limit;
      mlimit=measureLimit;
    }
 else {
      inext=mSpanned.nextSpanTransition(mStart + i,mStart + limit,MetricAffectingSpan.class) - mStart;
      mlimit=inext < measureLimit ? inext : measureLimit;
      MetricAffectingSpan[] spans=mSpanned.getSpans(mStart + i,mStart + mlimit,MetricAffectingSpan.class);
      spans=TextUtils.removeEmptySpans(spans,mSpanned,MetricAffectingSpan.class);
      if (spans.length > 0) {
        ReplacementSpan replacement=null;
        for (int j=0; j < spans.length; j++) {
          MetricAffectingSpan span=spans[j];
          if (span instanceof ReplacementSpan) {
            replacement=(ReplacementSpan)span;
          }
 else {
            span.updateDrawState(wp);
          }
        }
        if (replacement != null) {
          x+=handleReplacement(replacement,wp,i,mlimit,runIsRtl,c,x,top,y,bottom,fmi,needWidth || mlimit < measureLimit);
          continue;
        }
      }
    }
    if (mSpanned == null || c == null) {
      x+=handleText(wp,i,mlimit,i,inext,runIsRtl,c,x,top,y,bottom,fmi,needWidth || mlimit < measureLimit);
    }
 else {
      for (int j=i, jnext; j < mlimit; j=jnext) {
        jnext=mSpanned.nextSpanTransition(mStart + j,mStart + mlimit,CharacterStyle.class) - mStart;
        CharacterStyle[] spans=mSpanned.getSpans(mStart + j,mStart + jnext,CharacterStyle.class);
        spans=TextUtils.removeEmptySpans(spans,mSpanned,CharacterStyle.class);
        wp.set(mPaint);
        for (int k=0; k < spans.length; k++) {
          CharacterStyle span=spans[k];
          span.updateDrawState(wp);
        }
        x+=handleText(wp,j,jnext,i,inext,runIsRtl,c,x,top,y,bottom,fmi,needWidth || jnext < measureLimit);
      }
    }
  }
  return x - ox;
}
