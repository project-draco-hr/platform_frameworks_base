{
  if (mItemsThemeAttrs == null) {
    return;
  }
  boolean hasUnresolvedAttrs=false;
  final int[][] themeAttrsList=mItemsThemeAttrs;
  final int N=themeAttrsList.length;
  for (int i=0; i < N; i++) {
    if (themeAttrsList[i] != null) {
      final TypedArray a=t.resolveAttributes(themeAttrsList[i],R.styleable.GradientColorItem);
      themeAttrsList[i]=a.extractThemeAttrs(themeAttrsList[i]);
      if (themeAttrsList[i] != null) {
        hasUnresolvedAttrs=true;
      }
      mItemColors[i]=a.getColor(R.styleable.GradientColorItem_color,mItemColors[i]);
      mItemOffsets[i]=a.getFloat(R.styleable.GradientColorItem_offset,mItemOffsets[i]);
      if (DBG_GRADIENT) {
        Log.v(TAG,"applyItemsAttrsTheme Colors[i] " + i + " "+ Integer.toHexString(mItemColors[i]));
        Log.v(TAG,"Offsets[i] " + i + " "+ mItemOffsets[i]);
      }
      mChangingConfigurations|=a.getChangingConfigurations();
      a.recycle();
    }
  }
  if (!hasUnresolvedAttrs) {
    mItemsThemeAttrs=null;
  }
}
