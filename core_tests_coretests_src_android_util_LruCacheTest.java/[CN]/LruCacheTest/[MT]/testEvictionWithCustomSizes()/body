{
  LruCache<String,String> cache=new LruCache<String,String>(4){
    @Override protected int sizeOf(    String key,    String value){
      return value.length();
    }
  }
;
  cache.put("a","AAAA");
  assertSnapshot(cache,"a","AAAA");
  cache.put("b","BBBB");
  assertSnapshot(cache,"b","BBBB");
  cache.put("c","CC");
  assertSnapshot(cache,"c","CC");
  cache.put("d","DD");
  assertSnapshot(cache,"c","CC","d","DD");
  cache.put("e","E");
  assertSnapshot(cache,"d","DD","e","E");
  cache.put("f","F");
  assertSnapshot(cache,"d","DD","e","E","f","F");
  cache.put("g","G");
  assertSnapshot(cache,"e","E","f","F","g","G");
  cache.put("h","H");
  assertSnapshot(cache,"e","E","f","F","g","G","h","H");
  cache.put("i","III");
  assertSnapshot(cache,"h","H","i","III");
  cache.put("j","JJJ");
  assertSnapshot(cache,"j","JJJ");
}
