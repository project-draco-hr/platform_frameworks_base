{
  assertFalse(SettingsState.isBinary(" abc ?????????"));
  for (char ch=0x20; ch < 0xd800; ch++) {
    assertFalse("ch=" + Integer.toString(ch,16),SettingsState.isBinary(String.valueOf(ch)));
  }
  for (char ch=0xe000; ch < 0xfffe; ch++) {
    assertFalse("ch=" + Integer.toString(ch,16),SettingsState.isBinary(String.valueOf(ch)));
  }
  for (char ch=0x0000; ch < 0x20; ch++) {
    assertTrue("ch=" + Integer.toString(ch,16),SettingsState.isBinary(String.valueOf(ch)));
  }
  for (char ch=0xd800; ch < 0xe000; ch++) {
    assertTrue("ch=" + Integer.toString(ch,16),SettingsState.isBinary(String.valueOf(ch)));
  }
  assertTrue(SettingsState.isBinary("\ufffe"));
  assertTrue(SettingsState.isBinary("\uffff"));
  try {
    assertFalse(SettingsState.isBinary(null));
    fail("NullPointerException expected");
  }
 catch (  NullPointerException expected) {
  }
}
