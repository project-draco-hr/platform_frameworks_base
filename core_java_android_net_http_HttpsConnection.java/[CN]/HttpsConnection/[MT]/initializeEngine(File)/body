{
  try {
    SSLClientSessionCache cache=null;
    if (sessionDir != null) {
      Log.d("HttpsConnection","Caching SSL sessions in " + sessionDir + ".");
      cache=FileClientSessionCache.usingDirectory(sessionDir);
    }
    OpenSSLContextImpl sslContext=OpenSSLContextImpl.getPreferred();
    TrustManager[] trustManagers=new TrustManager[]{new X509TrustManager(){
      public X509Certificate[] getAcceptedIssuers(){
        return null;
      }
      public void checkClientTrusted(      X509Certificate[] certs,      String authType){
      }
      public void checkServerTrusted(      X509Certificate[] certs,      String authType){
      }
    }
};
    sslContext.engineInit(null,trustManagers,null);
    sslContext.engineGetClientSessionContext().setPersistentCache(cache);
synchronized (HttpsConnection.class) {
      mSslSocketFactory=sslContext.engineGetSocketFactory();
    }
  }
 catch (  KeyManagementException e) {
    throw new RuntimeException(e);
  }
catch (  IOException e) {
    throw new RuntimeException(e);
  }
}
