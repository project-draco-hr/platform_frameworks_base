{
  int srcX2=srcW - 1;
  int srcY2=srcH - 1;
  int dstX2=dstW - 1;
  int dstY2=dstH - 1;
  if (srcX < 0) {
    width+=srcX;
    srcX=0;
  }
  if (srcY < 0) {
    height+=srcY;
    srcY=0;
  }
  if (dstX < 0) {
    width+=dstX;
    srcX-=dstX;
    dstX=0;
  }
  if (dstY < 0) {
    height+=dstY;
    srcY-=dstY;
    dstY=0;
  }
  if (srcX > srcX2 || srcY > srcY2) {
    return;
  }
  if (dstX > dstX2 || dstY > dstY2) {
    return;
  }
  if (srcX + width > srcX2) {
    width=srcX2 - srcX + 1;
  }
  if (srcY + height > srcY2) {
    height=srcY2 - srcY + 1;
  }
  if (dstX + width > dstX2) {
    width=dstX2 - dstX + 1;
  }
  if (dstY + height > dstY2) {
    height=dstY2 - dstY + 1;
  }
  if (width <= 0 || height <= 0) {
    return;
  }
  int clipRects[];
  if (clip != null) {
    clipRects=clip.rect;
  }
 else {
    clipRects=new int[]{5,0,0,dstW - 1,dstH - 1};
  }
  boolean isAlphaComp=false;
  int rule=0;
  float alpha=0;
  boolean isXORComp=false;
  Color xorcolor=null;
  CompositeContext cont=null;
  if (comp instanceof AlphaComposite) {
    isAlphaComp=true;
    AlphaComposite ac=(AlphaComposite)comp;
    rule=ac.getRule();
    alpha=ac.getAlpha();
  }
 else   if (comp instanceof XORComposite) {
    isXORComp=true;
    XORComposite xcomp=(XORComposite)comp;
    xorcolor=xcomp.getXORColor();
  }
 else {
    cont=comp.createContext(srcCM,dstCM,null);
  }
  for (int i=1; i < clipRects[0]; i+=4) {
    int _sx=srcX;
    int _sy=srcY;
    int _dx=dstX;
    int _dy=dstY;
    int _w=width;
    int _h=height;
    int cx=clipRects[i];
    int cy=clipRects[i + 1];
    int cx2=clipRects[i + 2];
    int cy2=clipRects[i + 3];
    if (_dx > cx2 || _dy > cy2 || dstX2 < cx || dstY2 < cy) {
      continue;
    }
    if (cx > _dx) {
      int shx=cx - _dx;
      _w-=shx;
      _dx=cx;
      _sx+=shx;
    }
    if (cy > _dy) {
      int shy=cy - _dy;
      _h-=shy;
      _dy=cy;
      _sy+=shy;
    }
    if (_dx + _w > cx2 + 1) {
      _w=cx2 - _dx + 1;
    }
    if (_dy + _h > cy2 + 1) {
      _h=cy2 - _dy + 1;
    }
    if (_sx > srcX2 || _sy > srcY2) {
      continue;
    }
    if (isAlphaComp) {
      alphaCompose(_sx,_sy,srcCM,srcRast,_dx,_dy,dstCM,dstRast,_w,_h,rule,alpha,bgcolor);
    }
 else     if (isXORComp) {
      xorCompose(_sx,_sy,srcCM,srcRast,_dx,_dy,dstCM,dstRast,_w,_h,xorcolor);
    }
 else {
      Raster sr=srcRast.createChild(_sx,_sy,_w,_h,0,0,null);
      WritableRaster dr=dstRast.createWritableChild(_dx,_dy,_w,_h,0,0,null);
      cont.compose(sr,dr,dr);
    }
  }
}
