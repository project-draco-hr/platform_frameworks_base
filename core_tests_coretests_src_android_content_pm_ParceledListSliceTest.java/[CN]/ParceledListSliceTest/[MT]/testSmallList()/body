{
  final int objectCount=100;
  List<SmallObject> list=new ArrayList<SmallObject>();
  for (int i=0; i < objectCount; i++) {
    list.add(new SmallObject(i * 2,(i * 2) + 1));
  }
  ParceledListSlice<SmallObject> slice;
  Parcel parcel=Parcel.obtain();
  try {
    parcel.writeParcelable(new ParceledListSlice<SmallObject>(list),0);
    parcel.setDataPosition(0);
    slice=parcel.readParcelable(getClass().getClassLoader());
  }
  finally {
    parcel.recycle();
  }
  assertNotNull(slice);
  assertNotNull(slice.getList());
  assertEquals(objectCount,slice.getList().size());
  for (int i=0; i < objectCount; i++) {
    assertEquals(i * 2,slice.getList().get(i).mFieldA);
    assertEquals((i * 2) + 1,slice.getList().get(i).mFieldB);
  }
}
