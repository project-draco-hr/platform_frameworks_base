{
  int N1=mNum;
  int[] uids1=mUids;
  final int N2=other.mNum;
  final int[] uids2=other.mUids;
  boolean changed=false;
  int i1=0, i2=0;
  if (DEBUG)   Log.d(TAG,"Update " + this + " with "+ other+ " set="+ set+ " returnNewbs="+ returnNewbs);
  while (i1 < N1 || i2 < N2) {
    if (DEBUG)     Log.d(TAG,"Step: target @ " + i1 + " of "+ N1+ ", other @ "+ i2+ " of "+ N2);
    if (i1 >= N1 || (i2 < N2 && uids2[i2] < uids1[i1])) {
      if (DEBUG)       Log.d(TAG,"i1=" + i1 + " i2="+ i2+ " N1="+ N1+ ": insert "+ uids2[i2]);
      changed=true;
      if (uids1 == null) {
        uids1=new int[4];
        uids1[0]=uids2[i2];
      }
 else       if (N1 >= uids1.length) {
        int[] newuids=new int[(uids1.length * 3) / 2];
        if (i1 > 0)         System.arraycopy(uids1,0,newuids,0,i1);
        if (i1 < N1)         System.arraycopy(uids1,i1,newuids,i1 + 1,N1 - i1);
        uids1=newuids;
        uids1[i1]=uids2[i2];
      }
 else {
        if (i1 < N1)         System.arraycopy(uids1,i1,uids1,i1 + 1,N1 - i1);
        uids1[i1]=uids2[i2];
      }
      if (returnNewbs) {
        sNewbWork=addWork(sNewbWork,uids2[i2]);
      }
      N1++;
      i1++;
      i2++;
    }
 else {
      if (!set) {
        if (DEBUG)         Log.d(TAG,"i1=" + i1 + " i2="+ i2+ " N1="+ N1+ ": skip");
        if (i2 < N2 && uids2[i2] == uids1[i1]) {
          i2++;
        }
        i1++;
      }
 else {
        int start=i1;
        while (i1 < N1 && (i2 >= N2 || uids2[i2] > uids1[i1])) {
          if (DEBUG)           Log.d(TAG,"i1=" + i1 + " i2="+ i2+ ": remove "+ uids1[i1]);
          sGoneWork=addWork(sGoneWork,uids1[i1]);
          i1++;
        }
        if (start < i1) {
          System.arraycopy(uids1,i1,uids1,start,N1 - i1);
          N1-=i1 - start;
          i1=start;
        }
        if (i1 < N1 && i2 < N2 && uids2[i2] == uids1[i1]) {
          if (DEBUG)           Log.d(TAG,"i1=" + i1 + " i2="+ i2+ " N1="+ N1+ ": skip");
          i1++;
          i2++;
        }
      }
    }
  }
  mNum=N1;
  mUids=uids1;
  return changed;
}
