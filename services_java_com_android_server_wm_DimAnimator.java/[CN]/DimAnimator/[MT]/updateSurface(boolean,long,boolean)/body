{
  if (!dimming) {
    if (mDimTargetAlpha != 0) {
      mLastDimAnimTime=currentTime;
      mDimTargetAlpha=0;
      mDimDeltaPerMs=(-mDimCurrentAlpha) / WindowManagerService.DEFAULT_DIM_DURATION;
    }
  }
  boolean animating=false;
  if (mLastDimAnimTime != 0) {
    mDimCurrentAlpha+=mDimDeltaPerMs * (currentTime - mLastDimAnimTime);
    boolean more=true;
    if (displayFrozen) {
      more=false;
    }
 else     if (mDimDeltaPerMs > 0) {
      if (mDimCurrentAlpha > mDimTargetAlpha) {
        more=false;
      }
    }
 else     if (mDimDeltaPerMs < 0) {
      if (mDimCurrentAlpha < mDimTargetAlpha) {
        more=false;
      }
    }
 else {
      more=false;
    }
    if (more) {
      if (WindowManagerService.SHOW_TRANSACTIONS)       Slog.i(WindowManagerService.TAG,"  DIM " + mDimSurface + ": alpha="+ mDimCurrentAlpha);
      mLastDimAnimTime=currentTime;
      mDimSurface.setAlpha(mDimCurrentAlpha);
      animating=true;
    }
 else {
      mDimCurrentAlpha=mDimTargetAlpha;
      mLastDimAnimTime=0;
      if (WindowManagerService.SHOW_TRANSACTIONS)       Slog.i(WindowManagerService.TAG,"  DIM " + mDimSurface + ": final alpha="+ mDimCurrentAlpha);
      mDimSurface.setAlpha(mDimCurrentAlpha);
      if (!dimming) {
        if (WindowManagerService.SHOW_TRANSACTIONS)         Slog.i(WindowManagerService.TAG,"  DIM " + mDimSurface + ": HIDE");
        try {
          mDimSurface.hide();
        }
 catch (        RuntimeException e) {
          Slog.w(WindowManagerService.TAG,"Illegal argument exception hiding dim surface");
        }
        mDimShown=false;
      }
    }
  }
  return animating;
}
