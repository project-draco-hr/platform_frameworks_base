{
  if (mDimSurface == null) {
    Slog.e(TAG,"updateParameters: no Surface");
    return;
  }
  final int dw=(int)(params.mDimWidth * 1.5);
  final int dh=(int)(params.mDimHeight * 1.5);
  final WindowStateAnimator winAnimator=params.mDimWinAnimator;
  final float target=params.mDimTarget;
  if (!mDimShown) {
    if (WindowManagerService.SHOW_TRANSACTIONS)     Slog.i(WindowManagerService.TAG,"  DIM " + mDimSurface + ": SHOW pos=(0,0) ("+ dw+ "x"+ dh+ ")");
    mDimShown=true;
    try {
      mLastDimWidth=dw;
      mLastDimHeight=dh;
      mDimSurface.setPosition(-1 * dw / 6,-1 * dh / 6);
      mDimSurface.setSize(dw,dh);
      mDimSurface.show();
    }
 catch (    RuntimeException e) {
      Slog.w(WindowManagerService.TAG,"Failure showing dim surface",e);
    }
  }
 else   if (mLastDimWidth != dw || mLastDimHeight != dh) {
    mLastDimWidth=dw;
    mLastDimHeight=dh;
    mDimSurface.setSize(dw,dh);
    mDimSurface.setPosition(-1 * dw / 6,-1 * dh / 6);
  }
  mDimSurface.setLayer(winAnimator.mAnimLayer - WindowManagerService.LAYER_OFFSET_DIM);
  if (WindowManagerService.SHOW_TRANSACTIONS)   Slog.i(WindowManagerService.TAG,"  DIM " + mDimSurface + ": layer="+ (winAnimator.mAnimLayer - 1)+ " target="+ target);
  if (mDimTargetAlpha != target) {
    mLastDimAnimTime=currentTime;
    long duration=(winAnimator.mAnimating && winAnimator.mAnimation != null) ? winAnimator.mAnimation.computeDurationHint() : WindowManagerService.DEFAULT_DIM_DURATION;
    if (target > mDimTargetAlpha) {
      TypedValue tv=new TypedValue();
      res.getValue(com.android.internal.R.fraction.config_dimBehindFadeDuration,tv,true);
      if (tv.type == TypedValue.TYPE_FRACTION) {
        duration=(long)tv.getFraction(duration,duration);
      }
 else       if (tv.type >= TypedValue.TYPE_FIRST_INT && tv.type <= TypedValue.TYPE_LAST_INT) {
        duration=tv.data;
      }
    }
    if (duration < 1) {
      duration=1;
    }
    mDimTargetAlpha=target;
    mDimDeltaPerMs=(mDimTargetAlpha - mDimCurrentAlpha) / duration;
  }
}
