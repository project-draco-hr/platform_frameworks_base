{
  final boolean hadErrors=hasErrors();
  String text=editable.toString();
  if (TextUtils.isEmpty(text)) {
    mPageRangeEditText.setError("");
    updateOptionsUi();
    return;
  }
  String escapedText=PATTERN_ESCAPE_SPECIAL_CHARS.matcher(text).replaceAll("////");
  if (!PATTERN_PAGE_RANGE.matcher(escapedText).matches()) {
    mPageRangeEditText.setError("");
    updateOptionsUi();
    return;
  }
  PrintDocumentInfo info=mPrintedDocument.getDocumentInfo().info;
  final int pageCount=(info != null) ? info.getPageCount() : 0;
  Matcher matcher=PATTERN_DIGITS.matcher(text);
  while (matcher.find()) {
    String numericString=text.substring(matcher.start(),matcher.end()).trim();
    if (TextUtils.isEmpty(numericString)) {
      continue;
    }
    final int pageIndex=Integer.parseInt(numericString);
    if (pageIndex < 1 || pageIndex > pageCount) {
      mPageRangeEditText.setError("");
      updateOptionsUi();
      return;
    }
  }
  mRequestedPages=computeRequestedPages();
  mPageRangeEditText.setError(null);
  mPrintButton.setEnabled(true);
  updateOptionsUi();
  if (hadErrors && !hasErrors()) {
    updateOptionsUi();
  }
}
