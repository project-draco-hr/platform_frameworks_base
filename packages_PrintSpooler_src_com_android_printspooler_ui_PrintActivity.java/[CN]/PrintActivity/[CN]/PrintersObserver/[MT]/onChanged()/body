{
  PrinterInfo oldPrinterState=mCurrentPrinter;
  if (oldPrinterState == null) {
    return;
  }
  PrinterHolder printerHolder=mDestinationSpinnerAdapter.getPrinterHolder(oldPrinterState.getId());
  if (printerHolder == null) {
    return;
  }
  PrinterInfo newPrinterState=printerHolder.printer;
  if (!printerHolder.removed) {
    mDestinationSpinnerAdapter.pruneRemovedPrinters();
  }
 else {
    onPrinterUnavailable(newPrinterState);
  }
  if (oldPrinterState.equals(newPrinterState)) {
    return;
  }
  PrinterCapabilitiesInfo oldCapab=oldPrinterState.getCapabilities();
  PrinterCapabilitiesInfo newCapab=newPrinterState.getCapabilities();
  final boolean hasCapab=newCapab != null;
  final boolean gotCapab=oldCapab == null && newCapab != null;
  final boolean lostCapab=oldCapab != null && newCapab == null;
  final boolean capabChanged=capabilitiesChanged(oldCapab,newCapab);
  final int oldStatus=oldPrinterState.getStatus();
  final int newStatus=newPrinterState.getStatus();
  final boolean isActive=newStatus != PrinterInfo.STATUS_UNAVAILABLE;
  final boolean becameActive=(oldStatus == PrinterInfo.STATUS_UNAVAILABLE && oldStatus != newStatus);
  final boolean becameInactive=(newStatus == PrinterInfo.STATUS_UNAVAILABLE && oldStatus != newStatus);
  mPrinterAvailabilityDetector.updatePrinter(newPrinterState);
  oldPrinterState.copyFrom(newPrinterState);
  if ((isActive && gotCapab) || (becameActive && hasCapab)) {
    if (hasCapab && capabChanged) {
      updatePrintAttributesFromCapabilities(newCapab);
    }
    onPrinterAvailable(newPrinterState);
  }
 else   if ((becameInactive && hasCapab) || (isActive && lostCapab)) {
    onPrinterUnavailable(newPrinterState);
  }
  final boolean updateNeeded=((capabChanged && hasCapab && isActive) || (becameActive && hasCapab) || (isActive && gotCapab));
  if (updateNeeded && canUpdateDocument()) {
    updateDocument(true,false);
  }
  updateOptionsUi();
}
