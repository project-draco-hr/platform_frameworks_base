{
  if (spinner == mDestinationSpinner) {
    if (position == AdapterView.INVALID_POSITION) {
      return;
    }
    if (id == DEST_ADAPTER_ITEM_ID_MORE) {
      startSelectPrinterActivity();
      return;
    }
    PrinterHolder currentItem=(PrinterHolder)mDestinationSpinner.getSelectedItem();
    PrinterInfo currentPrinter=(currentItem != null) ? currentItem.printer : null;
    if (mCurrentPrinter == currentPrinter) {
      return;
    }
    PrinterId oldId=null;
    if (mCurrentPrinter != null) {
      oldId=mCurrentPrinter.getId();
    }
    mCurrentPrinter=currentPrinter;
    if (oldId != null) {
      boolean printerRemoved=mDestinationSpinnerAdapter.pruneRemovedPrinter(oldId);
      if (printerRemoved) {
        mDestinationSpinnerAdapter.notifyDataSetChanged();
        return;
      }
    }
    PrinterHolder printerHolder=mDestinationSpinnerAdapter.getPrinterHolder(currentPrinter.getId());
    if (!printerHolder.removed) {
      setState(STATE_CONFIGURING);
      ensurePreviewUiShown();
    }
    mPrintJob.setPrinterId(currentPrinter.getId());
    mPrintJob.setPrinterName(currentPrinter.getName());
    mPrinterRegistry.setTrackedPrinter(currentPrinter.getId());
    PrinterCapabilitiesInfo capabilities=currentPrinter.getCapabilities();
    if (capabilities != null) {
      updatePrintAttributesFromCapabilities(capabilities);
    }
    mPrinterAvailabilityDetector.updatePrinter(currentPrinter);
    getLoaderManager().getLoader(LOADER_ID_ENABLED_PRINT_SERVICES).forceLoad();
  }
 else   if (spinner == mMediaSizeSpinner) {
    SpinnerItem<MediaSize> mediaItem=mMediaSizeSpinnerAdapter.getItem(position);
    PrintAttributes attributes=mPrintJob.getAttributes();
    if (mOrientationSpinner.getSelectedItemPosition() == 0) {
      attributes.setMediaSize(mediaItem.value.asPortrait());
    }
 else {
      attributes.setMediaSize(mediaItem.value.asLandscape());
    }
  }
 else   if (spinner == mColorModeSpinner) {
    SpinnerItem<Integer> colorModeItem=mColorModeSpinnerAdapter.getItem(position);
    mPrintJob.getAttributes().setColorMode(colorModeItem.value);
  }
 else   if (spinner == mDuplexModeSpinner) {
    SpinnerItem<Integer> duplexModeItem=mDuplexModeSpinnerAdapter.getItem(position);
    mPrintJob.getAttributes().setDuplexMode(duplexModeItem.value);
  }
 else   if (spinner == mOrientationSpinner) {
    SpinnerItem<Integer> orientationItem=mOrientationSpinnerAdapter.getItem(position);
    PrintAttributes attributes=mPrintJob.getAttributes();
    if (mMediaSizeSpinner.getSelectedItem() != null) {
      if (orientationItem.value == ORIENTATION_PORTRAIT) {
        attributes.copyFrom(attributes.asPortrait());
      }
 else {
        attributes.copyFrom(attributes.asLandscape());
      }
    }
  }
 else   if (spinner == mRangeOptionsSpinner) {
    if (mRangeOptionsSpinner.getSelectedItemPosition() == 0) {
      mPageRangeEditText.setText("");
    }
 else     if (TextUtils.isEmpty(mPageRangeEditText.getText())) {
      mPageRangeEditText.setError("");
    }
  }
  if (canUpdateDocument()) {
    updateDocument(false);
  }
  updateOptionsUi();
}
