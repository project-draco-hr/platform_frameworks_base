{
  mSummaryCopies=(TextView)findViewById(R.id.copies_count_summary);
  mSummaryPaperSize=(TextView)findViewById(R.id.paper_size_summary);
  mOptionsContent=(ContentView)findViewById(R.id.options_content);
  mOptionsContent.setOptionsStateChangeListener(new OptionsStateChangeListener(){
    @Override public void onOptionsOpened(){
    }
    @Override public void onOptionsClosed(){
    }
  }
);
  OnItemSelectedListener itemSelectedListener=new MyOnItemSelectedListener();
  OnClickListener clickListener=new MyClickListener();
  mCopiesEditText=(EditText)findViewById(R.id.copies_edittext);
  mCopiesEditText.setOnFocusChangeListener(mSelectAllOnFocusListener);
  mCopiesEditText.setText(MIN_COPIES_STRING);
  mCopiesEditText.setSelection(mCopiesEditText.getText().length());
  mCopiesEditText.addTextChangedListener(new EditTextWatcher());
  mDestinationSpinnerAdapter.registerDataSetObserver(new PrintersObserver());
  mDestinationSpinner=(Spinner)findViewById(R.id.destination_spinner);
  mDestinationSpinner.setAdapter(mDestinationSpinnerAdapter);
  mDestinationSpinner.setOnItemSelectedListener(itemSelectedListener);
  mDestinationSpinner.setSelection(0);
  mMediaSizeSpinnerAdapter=new ArrayAdapter<>(this,R.layout.spinner_dropdown_item,R.id.title);
  mMediaSizeSpinner=(Spinner)findViewById(R.id.paper_size_spinner);
  mMediaSizeSpinner.setAdapter(mMediaSizeSpinnerAdapter);
  mMediaSizeSpinner.setOnItemSelectedListener(itemSelectedListener);
  mColorModeSpinnerAdapter=new ArrayAdapter<>(this,R.layout.spinner_dropdown_item,R.id.title);
  mColorModeSpinner=(Spinner)findViewById(R.id.color_spinner);
  mColorModeSpinner.setAdapter(mColorModeSpinnerAdapter);
  mColorModeSpinner.setOnItemSelectedListener(itemSelectedListener);
  mOrientationSpinnerAdapter=new ArrayAdapter<>(this,R.layout.spinner_dropdown_item,R.id.title);
  String[] orientationLabels=getResources().getStringArray(R.array.orientation_labels);
  mOrientationSpinnerAdapter.add(new SpinnerItem<>(ORIENTATION_PORTRAIT,orientationLabels[0]));
  mOrientationSpinnerAdapter.add(new SpinnerItem<>(ORIENTATION_LANDSCAPE,orientationLabels[1]));
  mOrientationSpinner=(Spinner)findViewById(R.id.orientation_spinner);
  mOrientationSpinner.setAdapter(mOrientationSpinnerAdapter);
  mOrientationSpinner.setOnItemSelectedListener(itemSelectedListener);
  ArrayAdapter<SpinnerItem<Integer>> rangeOptionsSpinnerAdapter=new ArrayAdapter<>(this,R.layout.spinner_dropdown_item,R.id.title);
  final int[] rangeOptionsValues=getResources().getIntArray(R.array.page_options_values);
  String[] rangeOptionsLabels=getResources().getStringArray(R.array.page_options_labels);
  final int rangeOptionsCount=rangeOptionsLabels.length;
  for (int i=0; i < rangeOptionsCount; i++) {
    rangeOptionsSpinnerAdapter.add(new SpinnerItem<>(rangeOptionsValues[i],rangeOptionsLabels[i]));
  }
  mPageRangeOptionsTitle=(TextView)findViewById(R.id.range_options_title);
  mRangeOptionsSpinner=(Spinner)findViewById(R.id.range_options_spinner);
  mRangeOptionsSpinner.setAdapter(rangeOptionsSpinnerAdapter);
  mRangeOptionsSpinner.setOnItemSelectedListener(itemSelectedListener);
  mPageRangeTitle=(TextView)findViewById(R.id.page_range_title);
  mPageRangeEditText=(EditText)findViewById(R.id.page_range_edittext);
  mPageRangeEditText.setOnFocusChangeListener(mSelectAllOnFocusListener);
  mPageRangeEditText.addTextChangedListener(new RangeTextWatcher());
  mAdvancedPrintOptionsContainer=findViewById(R.id.more_options_container);
  mMoreOptionsButton=(Button)findViewById(R.id.more_options_button);
  mMoreOptionsButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      PrinterInfo currentPrinter=getCurrentPrinter();
      if (currentPrinter != null) {
        startAdvancedPrintOptionsActivity(currentPrinter);
      }
    }
  }
);
  mPrintButton=(ImageView)findViewById(R.id.print_button);
  mPrintButton.setOnClickListener(clickListener);
}
