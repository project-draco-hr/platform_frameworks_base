{
  ComponentName newAdvancedPrintOptionsActivity=null;
  if (mCurrentPrinter != null && services != null) {
    final int numServices=services.size();
    for (int i=0; i < numServices; i++) {
      PrintServiceInfo service=services.get(i);
      if (service.getComponentName().equals(mCurrentPrinter.getId().getServiceName())) {
        String advancedOptionsActivityName=service.getAdvancedOptionsActivityName();
        if (!TextUtils.isEmpty(advancedOptionsActivityName)) {
          newAdvancedPrintOptionsActivity=new ComponentName(service.getComponentName().getPackageName(),advancedOptionsActivityName);
          break;
        }
      }
    }
  }
  if (!Objects.equals(newAdvancedPrintOptionsActivity,mAdvancedPrintOptionsActivity)) {
    mAdvancedPrintOptionsActivity=newAdvancedPrintOptionsActivity;
    updateOptionsUi();
  }
  boolean newArePrintServicesEnabled=services != null && !services.isEmpty();
  if (mArePrintServicesEnabled != newArePrintServicesEnabled) {
    mArePrintServicesEnabled=newArePrintServicesEnabled;
    if (mDestinationSpinnerAdapter != null) {
      mDestinationSpinnerAdapter.notifyDataSetChanged();
    }
  }
}
