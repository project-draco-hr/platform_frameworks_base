{
  super.onCreate(savedInstanceState);
  Bundle extras=getIntent().getExtras();
  mPrintJob=extras.getParcelable(PrintManager.EXTRA_PRINT_JOB);
  if (mPrintJob == null) {
    throw new IllegalArgumentException(PrintManager.EXTRA_PRINT_JOB + " cannot be null");
  }
  if (mPrintJob.getAttributes() == null) {
    mPrintJob.setAttributes(new PrintAttributes.Builder().build());
  }
  final IBinder adapter=extras.getBinder(PrintManager.EXTRA_PRINT_DOCUMENT_ADAPTER);
  if (adapter == null) {
    throw new IllegalArgumentException(PrintManager.EXTRA_PRINT_DOCUMENT_ADAPTER + " cannot be null");
  }
  mCallingPackageName=extras.getString(DocumentsContract.EXTRA_PACKAGE_NAME);
  mSpoolerProvider=new PrintSpoolerProvider(this,new Runnable(){
    @Override public void run(){
      if (isFinishing() || isDestroyed()) {
        mSpoolerProvider.getSpooler().setPrintJobState(mPrintJob.getId(),PrintJobInfo.STATE_CANCELED,null);
      }
 else {
        onConnectedToPrintSpooler(adapter);
      }
    }
  }
);
  getLoaderManager().initLoader(LOADER_ID_ENABLED_PRINT_SERVICES,null,this);
}
