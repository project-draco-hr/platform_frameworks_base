{
  PrintAttributes defaults=capabilities.getDefaults();
  List<MediaSize> sortedMediaSizes=new ArrayList<>(capabilities.getMediaSizes());
  Collections.sort(sortedMediaSizes,mMediaSizeComparator);
  PrintAttributes attributes=mPrintJob.getAttributes();
  MediaSize currMediaSize=attributes.getMediaSize();
  if (currMediaSize == null) {
    attributes.setMediaSize(defaults.getMediaSize());
  }
 else {
    MediaSize newMediaSize=null;
    boolean isPortrait=currMediaSize.isPortrait();
    MediaSize currMediaSizePortrait=currMediaSize.asPortrait();
    final int mediaSizeCount=sortedMediaSizes.size();
    for (int i=0; i < mediaSizeCount; i++) {
      MediaSize mediaSize=sortedMediaSizes.get(i);
      if (currMediaSizePortrait.equals(mediaSize.asPortrait())) {
        newMediaSize=mediaSize;
        break;
      }
    }
    if (newMediaSize == null) {
      newMediaSize=defaults.getMediaSize();
    }
    if (newMediaSize != null) {
      if (isPortrait) {
        attributes.setMediaSize(newMediaSize.asPortrait());
      }
 else {
        attributes.setMediaSize(newMediaSize.asLandscape());
      }
    }
  }
  final int colorMode=attributes.getColorMode();
  if ((capabilities.getColorModes() & colorMode) == 0) {
    attributes.setColorMode(defaults.getColorMode());
  }
  final int duplexMode=attributes.getDuplexMode();
  if ((capabilities.getDuplexModes() & duplexMode) == 0) {
    attributes.setDuplexMode(defaults.getDuplexMode());
  }
  Resolution resolution=attributes.getResolution();
  if (resolution == null || !capabilities.getResolutions().contains(resolution)) {
    attributes.setResolution(defaults.getResolution());
  }
  attributes.setMinMargins(defaults.getMinMargins());
}
