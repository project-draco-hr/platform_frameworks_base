{
  setTitle(R.string.print_dialog);
  setContentView(R.layout.print_activity);
  try {
    mFileProvider=new MutexFileProvider(PrintSpoolerService.generateFileForPrintJob(PrintActivity.this,mPrintJob.getId()));
  }
 catch (  IOException ioe) {
    throw new IllegalStateException("Cannot create print job file",ioe);
  }
  mPrintPreviewController=new PrintPreviewController(PrintActivity.this,mFileProvider);
  mPrintedDocument=new RemotePrintDocument(PrintActivity.this,IPrintDocumentAdapter.Stub.asInterface(documentAdapter),mFileProvider,new RemotePrintDocument.RemoteAdapterDeathObserver(){
    @Override public void onDied(){
      if (isFinishing() || (isFinalState(mState) && !mPrintedDocument.isUpdating())) {
        return;
      }
      if (mPrintedDocument.isUpdating()) {
        mPrintedDocument.cancel();
      }
      setState(STATE_PRINT_CANCELED);
      doFinish();
    }
  }
,PrintActivity.this);
  mProgressMessageController=new ProgressMessageController(PrintActivity.this);
  mMediaSizeComparator=new MediaSizeComparator(PrintActivity.this);
  mDestinationSpinnerAdapter=new DestinationAdapter();
  bindUi();
  updateOptionsUi();
  mOptionsContent.setVisibility(View.VISIBLE);
  mSelectedPages=computeSelectedPages();
  mPrintedDocument.start();
  ensurePreviewUiShown();
  setState(STATE_CONFIGURING);
}
