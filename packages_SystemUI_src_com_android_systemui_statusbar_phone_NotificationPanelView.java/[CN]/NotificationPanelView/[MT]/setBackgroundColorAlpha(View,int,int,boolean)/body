{
  int currentAlpha=getBackgroundAlpha(target);
  if (currentAlpha == targetAlpha) {
    return;
  }
  final int r=Color.red(rgb);
  final int g=Color.green(rgb);
  final int b=Color.blue(rgb);
  Object runningAnim=target.getTag(TAG_KEY_ANIM);
  if (runningAnim instanceof ValueAnimator) {
    ((ValueAnimator)runningAnim).cancel();
  }
  if (!animate) {
    target.setBackgroundColor(Color.argb(targetAlpha,r,g,b));
    return;
  }
  ValueAnimator anim=ValueAnimator.ofInt(currentAlpha,targetAlpha);
  anim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){
    @Override public void onAnimationUpdate(    ValueAnimator animation){
      int value=(int)animation.getAnimatedValue();
      target.setBackgroundColor(Color.argb(value,r,g,b));
    }
  }
);
  anim.setDuration(DOZE_BACKGROUND_ANIM_DURATION);
  anim.addListener(new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator animation){
      target.setTag(TAG_KEY_ANIM,null);
    }
  }
);
  anim.start();
  target.setTag(TAG_KEY_ANIM,anim);
}
