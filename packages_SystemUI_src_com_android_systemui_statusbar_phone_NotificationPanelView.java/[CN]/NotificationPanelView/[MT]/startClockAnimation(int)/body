{
  if (mClockAnimationTarget == y) {
    return;
  }
  mClockAnimationTarget=y;
  getViewTreeObserver().addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener(){
    @Override public boolean onPreDraw(){
      getViewTreeObserver().removeOnPreDrawListener(this);
      if (mClockAnimator != null) {
        mClockAnimator.removeAllListeners();
        mClockAnimator.cancel();
      }
      mClockAnimator=ObjectAnimator.ofFloat(mKeyguardStatusView,View.Y,mClockAnimationTarget);
      mClockAnimator.setInterpolator(Interpolators.FAST_OUT_SLOW_IN);
      mClockAnimator.setDuration(StackStateAnimator.ANIMATION_DURATION_STANDARD);
      mClockAnimator.addListener(new AnimatorListenerAdapter(){
        @Override public void onAnimationEnd(        Animator animation){
          mClockAnimator=null;
          mClockAnimationTarget=-1;
        }
      }
);
      mClockAnimator.start();
      return true;
    }
  }
);
}
