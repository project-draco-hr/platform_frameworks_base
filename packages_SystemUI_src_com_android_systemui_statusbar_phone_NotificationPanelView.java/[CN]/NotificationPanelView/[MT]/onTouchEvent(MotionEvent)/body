{
  if (mTracking) {
    int pointerIndex=event.findPointerIndex(mTrackingPointer);
    if (pointerIndex < 0) {
      pointerIndex=0;
      mTrackingPointer=event.getPointerId(pointerIndex);
    }
    final float y=event.getY(pointerIndex);
    final float x=event.getX(pointerIndex);
switch (event.getActionMasked()) {
case MotionEvent.ACTION_DOWN:
      mTracking=true;
    mInitialTouchY=y;
  mInitialTouchX=x;
onQsExpansionStarted();
mInitialHeightOnTouch=mQsExpansionHeight;
initVelocityTracker();
trackMovement(event);
break;
case MotionEvent.ACTION_POINTER_UP:
final int upPointer=event.getPointerId(event.getActionIndex());
if (mTrackingPointer == upPointer) {
final int newIndex=event.getPointerId(0) != upPointer ? 0 : 1;
final float newY=event.getY(newIndex);
final float newX=event.getX(newIndex);
mTrackingPointer=event.getPointerId(newIndex);
mInitialHeightOnTouch=mQsExpansionHeight;
mInitialTouchY=newY;
mInitialTouchX=newX;
}
break;
case MotionEvent.ACTION_MOVE:
final float h=y - mInitialTouchY;
setQsExpansion(h + mInitialHeightOnTouch);
trackMovement(event);
break;
case MotionEvent.ACTION_UP:
case MotionEvent.ACTION_CANCEL:
mTracking=false;
mTrackingPointer=-1;
trackMovement(event);
flingWithCurrentVelocity();
if (mVelocityTracker != null) {
mVelocityTracker.recycle();
mVelocityTracker=null;
}
break;
}
return true;
}
return mQsExpanded || super.onTouchEvent(event);
}
