{
  boolean start=getLayoutDirection() == LAYOUT_DIRECTION_RTL ? rightPage : !rightPage;
  mIsLaunchTransitionRunning=true;
  mLaunchAnimationEndRunnable=null;
  float displayDensity=mStatusBar.getDisplayDensity();
  int lengthDp=Math.abs((int)(translation / displayDensity));
  int velocityDp=Math.abs((int)(vel / displayDensity));
  if (start) {
    EventLogTags.writeSysuiLockscreenGesture(EventLogConstants.SYSUI_LOCKSCREEN_GESTURE_SWIPE_DIALER,lengthDp,velocityDp);
    mFalsingManager.onLeftAffordanceOn();
    if (mFalsingManager.shouldEnforceBouncer()) {
      mStatusBar.executeRunnableDismissingKeyguard(new Runnable(){
        @Override public void run(){
          mKeyguardBottomArea.launchLeftAffordance();
        }
      }
,null,true,false);
    }
 else {
      mKeyguardBottomArea.launchLeftAffordance();
    }
  }
 else {
    if (KeyguardBottomAreaView.CAMERA_LAUNCH_SOURCE_AFFORDANCE.equals(mLastCameraLaunchSource)) {
      EventLogTags.writeSysuiLockscreenGesture(EventLogConstants.SYSUI_LOCKSCREEN_GESTURE_SWIPE_CAMERA,lengthDp,velocityDp);
    }
    mFalsingManager.onCameraOn();
    if (mFalsingManager.shouldEnforceBouncer()) {
      mStatusBar.executeRunnableDismissingKeyguard(new Runnable(){
        @Override public void run(){
          mKeyguardBottomArea.launchCamera(mLastCameraLaunchSource);
        }
      }
,null,true,false);
    }
 else {
      mKeyguardBottomArea.launchCamera(mLastCameraLaunchSource);
    }
  }
  mStatusBar.startLaunchTransitionTimeout();
  mBlockTouches=true;
}
