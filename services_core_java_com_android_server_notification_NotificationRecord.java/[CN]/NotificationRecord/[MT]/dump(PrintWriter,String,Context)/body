{
  final Notification notification=sbn.getNotification();
  pw.println(prefix + this);
  pw.println(prefix + "  uid=" + sbn.getUid()+ " userId="+ sbn.getUserId());
  pw.println(prefix + "  icon=0x" + Integer.toHexString(notification.icon)+ " / "+ idDebugString(baseContext,sbn.getPackageName(),notification.icon));
  pw.println(prefix + "  pri=" + notification.priority+ " score="+ sbn.getScore());
  pw.println(prefix + "  key=" + sbn.getKey());
  pw.println(prefix + "  groupKey=" + getGroupKey());
  pw.println(prefix + "  contentIntent=" + notification.contentIntent);
  pw.println(prefix + "  deleteIntent=" + notification.deleteIntent);
  pw.println(prefix + "  tickerText=" + notification.tickerText);
  pw.println(prefix + "  contentView=" + notification.contentView);
  pw.println(prefix + String.format("  defaults=0x%08x flags=0x%08x",notification.defaults,notification.flags));
  pw.println(prefix + "  sound=" + notification.sound);
  pw.println(prefix + "  audioStreamType=" + notification.audioStreamType);
  pw.println(prefix + "  audioAttributes=" + notification.audioAttributes);
  pw.println(prefix + String.format("  color=0x%08x",notification.color));
  pw.println(prefix + "  vibrate=" + Arrays.toString(notification.vibrate));
  pw.println(prefix + String.format("  led=0x%08x onMs=%d offMs=%d",notification.ledARGB,notification.ledOnMS,notification.ledOffMS));
  if (notification.actions != null && notification.actions.length > 0) {
    pw.println(prefix + "  actions={");
    final int N=notification.actions.length;
    for (int i=0; i < N; i++) {
      final Notification.Action action=notification.actions[i];
      pw.println(String.format("%s    [%d] \"%s\" -> %s",prefix,i,action.title,action.actionIntent.toString()));
    }
    pw.println(prefix + "  }");
  }
  if (notification.extras != null && notification.extras.size() > 0) {
    pw.println(prefix + "  extras={");
    for (    String key : notification.extras.keySet()) {
      pw.print(prefix + "    " + key+ "=");
      Object val=notification.extras.get(key);
      if (val == null) {
        pw.println("null");
      }
 else {
        pw.print(val.getClass().getSimpleName());
        if (val instanceof CharSequence || val instanceof String) {
        }
 else         if (val instanceof Bitmap) {
          pw.print(String.format(" (%dx%d)",((Bitmap)val).getWidth(),((Bitmap)val).getHeight()));
        }
 else         if (val.getClass().isArray()) {
          final int N=Array.getLength(val);
          pw.println(" (" + N + ")");
        }
 else {
          pw.print(" (" + String.valueOf(val) + ")");
        }
        pw.println();
      }
    }
    pw.println(prefix + "  }");
  }
  pw.println(prefix + "  stats=" + stats.toString());
  pw.println(prefix + "  mContactAffinity=" + mContactAffinity);
  pw.println(prefix + "  mRecentlyIntrusive=" + mRecentlyIntrusive);
  pw.println(prefix + "  mPackagePriority=" + mPackagePriority);
  pw.println(prefix + "  mPackageVisibility=" + mPackageVisibility);
  pw.println(prefix + "  mIntercept=" + mIntercept);
  pw.println(prefix + "  mGlobalSortKey=" + mGlobalSortKey);
  pw.println(prefix + "  mRankingTimeMs=" + mRankingTimeMs);
  pw.println(prefix + "  mCreationTimeMs=" + mCreationTimeMs);
}
