{
  double ca=(c1 >> 24) & 0xFF;
  double cr=(c1 >> 16) & 0xFF;
  double cg=(c1 >> 8) & 0xFF;
  double cb=c1 & 0xFF;
  double k=1.0 / LOOKUP_SIZE;
  double da=(((c2 >> 24) & 0xFF) - ca) * k;
  double dr=(((c2 >> 16) & 0xFF) - cr) * k;
  double dg=(((c2 >> 8) & 0xFF) - cg) * k;
  double db=((c2 & 0xFF) - cb) * k;
  table=new int[cyclic ? LOOKUP_SIZE + LOOKUP_SIZE : LOOKUP_SIZE];
  for (int i=0; i < LOOKUP_SIZE; i++) {
    table[i]=(int)ca << 24 | (int)cr << 16 | (int)cg << 8 | (int)cb;
    ca+=da;
    cr+=dr;
    cg+=dg;
    cb+=db;
  }
  if (cyclic) {
    for (int i=0; i < LOOKUP_SIZE; i++) {
      table[LOOKUP_SIZE + LOOKUP_SIZE - 1 - i]=table[i];
    }
  }
}
