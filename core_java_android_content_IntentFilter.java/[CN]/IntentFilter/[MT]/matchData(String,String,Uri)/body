{
  final ArrayList<String> types=mDataTypes;
  final ArrayList<String> schemes=mDataSchemes;
  int match=MATCH_CATEGORY_EMPTY;
  if (types == null && schemes == null) {
    return ((type == null && data == null) ? (MATCH_CATEGORY_EMPTY + MATCH_ADJUSTMENT_NORMAL) : NO_MATCH_DATA);
  }
  if (schemes != null) {
    if (schemes.contains(scheme != null ? scheme : "")) {
      match=MATCH_CATEGORY_SCHEME;
    }
 else {
      return NO_MATCH_DATA;
    }
    final ArrayList<PatternMatcher> schemeSpecificParts=mDataSchemeSpecificParts;
    if (schemeSpecificParts != null) {
      match=hasDataSchemeSpecificPart(data.getSchemeSpecificPart()) ? MATCH_CATEGORY_SCHEME_SPECIFIC_PART : NO_MATCH_DATA;
    }
    if (match != MATCH_CATEGORY_SCHEME_SPECIFIC_PART) {
      final ArrayList<AuthorityEntry> authorities=mDataAuthorities;
      if (authorities != null) {
        int authMatch=matchDataAuthority(data);
        if (authMatch >= 0) {
          final ArrayList<PatternMatcher> paths=mDataPaths;
          if (paths == null) {
            match=authMatch;
          }
 else           if (hasDataPath(data.getPath())) {
            match=MATCH_CATEGORY_PATH;
          }
 else {
            return NO_MATCH_DATA;
          }
        }
 else {
          return NO_MATCH_DATA;
        }
      }
    }
    if (match == NO_MATCH_DATA) {
      return NO_MATCH_DATA;
    }
  }
 else {
    if (scheme != null && !"".equals(scheme) && !"content".equals(scheme) && !"file".equals(scheme)) {
      return NO_MATCH_DATA;
    }
  }
  if (types != null) {
    if (findMimeType(type)) {
      match=MATCH_CATEGORY_TYPE;
    }
 else {
      return NO_MATCH_TYPE;
    }
  }
 else {
    if (type != null) {
      return NO_MATCH_TYPE;
    }
  }
  return match + MATCH_ADJUSTMENT_NORMAL;
}
