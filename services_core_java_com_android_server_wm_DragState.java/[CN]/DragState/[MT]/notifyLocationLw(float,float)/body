{
  WindowState touchedWin=mService.getTouchableWinAtPointLocked(mDisplay,x,y);
  if (touchedWin == null) {
    if (DEBUG_DRAG)     Slog.d(TAG_WM,"No touched win at x=" + x + " y="+ y);
    return;
  }
  if (!isWindowNotified(touchedWin)) {
    touchedWin=null;
  }
  try {
    final int myPid=Process.myPid();
    if ((touchedWin != mTargetWindow) && (mTargetWindow != null)) {
      if (DEBUG_DRAG) {
        Slog.d(TAG_WM,"sending DRAG_EXITED to " + mTargetWindow);
      }
      DragEvent evt=obtainDragEvent(mTargetWindow,DragEvent.ACTION_DRAG_EXITED,0,0,null,null,null,null,false);
      mTargetWindow.mClient.dispatchDragEvent(evt);
      if (myPid != mTargetWindow.mSession.mPid) {
        evt.recycle();
      }
    }
    if (touchedWin != null) {
      if (false && DEBUG_DRAG) {
        Slog.d(TAG_WM,"sending DRAG_LOCATION to " + touchedWin);
      }
      DragEvent evt=obtainDragEvent(touchedWin,DragEvent.ACTION_DRAG_LOCATION,x,y,null,null,null,null,false);
      touchedWin.mClient.dispatchDragEvent(evt);
      if (myPid != touchedWin.mSession.mPid) {
        evt.recycle();
      }
    }
  }
 catch (  RemoteException e) {
    Slog.w(TAG_WM,"can't send drag notification to windows");
  }
  mTargetWindow=touchedWin;
}
