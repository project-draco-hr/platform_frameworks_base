{
  if (mAnimation != null) {
    return;
  }
  mCurrentX=x;
  mCurrentY=y;
  final int myPid=Process.myPid();
  if (WindowManagerService.SHOW_LIGHT_TRANSACTIONS)   Slog.i(WindowManagerService.TAG,">>> OPEN TRANSACTION notifyMoveLw");
  SurfaceControl.openTransaction();
  try {
    mSurfaceControl.setPosition(x - mThumbOffsetX,y - mThumbOffsetY);
    if (WindowManagerService.SHOW_TRANSACTIONS)     Slog.i(WindowManagerService.TAG,"  DRAG " + mSurfaceControl + ": pos=("+ (int)(x - mThumbOffsetX)+ ","+ (int)(y - mThumbOffsetY)+ ")");
  }
  finally {
    SurfaceControl.closeTransaction();
    if (WindowManagerService.SHOW_LIGHT_TRANSACTIONS)     Slog.i(WindowManagerService.TAG,"<<< CLOSE TRANSACTION notifyMoveLw");
  }
  WindowState touchedWin=getTouchedWinAtPointLw(x,y);
  if (touchedWin == null) {
    if (WindowManagerService.DEBUG_DRAG)     Slog.d(WindowManagerService.TAG,"No touched win at x=" + x + " y="+ y);
    return;
  }
  if ((mFlags & View.DRAG_FLAG_GLOBAL) == 0) {
    final IBinder touchedBinder=touchedWin.mClient.asBinder();
    if (touchedBinder != mLocalWin) {
      touchedWin=null;
    }
  }
  try {
    if ((touchedWin != mTargetWindow) && (mTargetWindow != null)) {
      if (WindowManagerService.DEBUG_DRAG) {
        Slog.d(WindowManagerService.TAG,"sending DRAG_EXITED to " + mTargetWindow);
      }
      DragEvent evt=obtainDragEvent(mTargetWindow,DragEvent.ACTION_DRAG_EXITED,x,y,null,null,null,null,false);
      mTargetWindow.mClient.dispatchDragEvent(evt);
      if (myPid != mTargetWindow.mSession.mPid) {
        evt.recycle();
      }
    }
    if (touchedWin != null) {
      if (false && WindowManagerService.DEBUG_DRAG) {
        Slog.d(WindowManagerService.TAG,"sending DRAG_LOCATION to " + touchedWin);
      }
      DragEvent evt=obtainDragEvent(touchedWin,DragEvent.ACTION_DRAG_LOCATION,x,y,null,null,null,null,false);
      touchedWin.mClient.dispatchDragEvent(evt);
      if (myPid != touchedWin.mSession.mPid) {
        evt.recycle();
      }
    }
  }
 catch (  RemoteException e) {
    Slog.w(WindowManagerService.TAG,"can't send drag notification to windows");
  }
  mTargetWindow=touchedWin;
}
