{
  if (DEBUG) {
    Slog.d(TAG,"selectAudioCard() card:" + card + " isCardUsb(): "+ mCardsParser.isCardUsb(card));
  }
  if (!mCardsParser.isCardUsb(card)) {
    return null;
  }
  mDevicesParser.scan();
  int device=mDevicesParser.getDefaultDeviceNum(card);
  boolean hasPlayback=mDevicesParser.hasPlaybackDevices(card);
  boolean hasCapture=mDevicesParser.hasCaptureDevices(card);
  if (DEBUG) {
    Slog.d(TAG,"usb: hasPlayback:" + hasPlayback + " hasCapture:"+ hasCapture);
  }
  int deviceClass=(mCardsParser.isCardUsb(card) ? UsbAudioDevice.kAudioDeviceClass_External : UsbAudioDevice.kAudioDeviceClass_Internal) | UsbAudioDevice.kAudioDeviceMeta_Alsa;
  if (hasPlayback && (waitForAlsaDevice(card,device,AlsaDevice.TYPE_PLAYBACK) == null)) {
    return null;
  }
  if (hasCapture && (waitForAlsaDevice(card,device,AlsaDevice.TYPE_CAPTURE) == null)) {
    return null;
  }
  UsbAudioDevice audioDevice=new UsbAudioDevice(card,device,hasPlayback,hasCapture,deviceClass);
  AlsaCardsParser.AlsaCardRecord cardRecord=mCardsParser.getCardRecordFor(card);
  audioDevice.mDeviceName=cardRecord.mCardName;
  audioDevice.mDeviceDescription=cardRecord.mCardDescription;
  notifyDeviceState(audioDevice,true);
  return audioDevice;
}
