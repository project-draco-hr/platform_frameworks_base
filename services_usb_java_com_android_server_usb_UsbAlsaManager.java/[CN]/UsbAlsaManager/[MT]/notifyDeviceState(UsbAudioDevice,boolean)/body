{
  if (DEBUG) {
    Slog.d(TAG,"notifyDeviceState " + enabled + " "+ audioDevice);
  }
  if (mAudioService == null) {
    Slog.e(TAG,"no AudioService");
    return;
  }
  int isDisabled=Settings.Secure.getInt(mContext.getContentResolver(),Settings.Secure.USB_AUDIO_AUTOMATIC_ROUTING_DISABLED,0);
  if (isDisabled != 0) {
    return;
  }
  int state=(enabled ? 1 : 0);
  int alsaCard=audioDevice.mCard;
  int alsaDevice=audioDevice.mDevice;
  if (alsaCard < 0 || alsaDevice < 0) {
    Slog.e(TAG,"Invalid alsa card or device alsaCard: " + alsaCard + " alsaDevice: "+ alsaDevice);
    return;
  }
  String address=AudioService.makeAlsaAddressString(alsaCard,alsaDevice);
  try {
    if (audioDevice.mHasPlayback) {
      int device=(audioDevice == mAccessoryAudioDevice ? AudioSystem.DEVICE_OUT_USB_ACCESSORY : AudioSystem.DEVICE_OUT_USB_DEVICE);
      if (DEBUG) {
        Slog.i(TAG,"pre-call device:0x" + Integer.toHexString(device) + " addr:"+ address+ " name:"+ audioDevice.mDeviceName);
      }
      mAudioService.setWiredDeviceConnectionState(device,state,address,audioDevice.mDeviceName,TAG);
    }
    if (audioDevice.mHasCapture) {
      int device=(audioDevice == mAccessoryAudioDevice ? AudioSystem.DEVICE_IN_USB_ACCESSORY : AudioSystem.DEVICE_IN_USB_DEVICE);
      mAudioService.setWiredDeviceConnectionState(device,state,address,audioDevice.mDeviceName,TAG);
    }
  }
 catch (  RemoteException e) {
    Slog.e(TAG,"RemoteException in setWiredDeviceConnectionState");
  }
}
