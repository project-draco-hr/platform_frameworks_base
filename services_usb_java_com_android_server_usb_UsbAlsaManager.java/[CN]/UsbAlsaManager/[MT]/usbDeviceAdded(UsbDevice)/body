{
  if (DEBUG) {
    Slog.d(TAG,"deviceAdded(): " + usbDevice.getManufacturerName() + " nm:"+ usbDevice.getProductName());
  }
  boolean isAudioDevice=false;
  int interfaceCount=usbDevice.getInterfaceCount();
  for (int ntrfaceIndex=0; !isAudioDevice && ntrfaceIndex < interfaceCount; ntrfaceIndex++) {
    UsbInterface ntrface=usbDevice.getInterface(ntrfaceIndex);
    if (ntrface.getInterfaceClass() == UsbConstants.USB_CLASS_AUDIO) {
      isAudioDevice=true;
    }
  }
  if (DEBUG) {
    Slog.d(TAG,"  isAudioDevice: " + isAudioDevice);
  }
  if (!isAudioDevice) {
    return;
  }
  int addedCard=mCardsParser.getDefaultUsbCard();
  if (DEBUG) {
    Slog.d(TAG,"  mCardsParser.isCardUsb(" + addedCard + ") = "+ mCardsParser.isCardUsb(addedCard));
  }
  if (mCardsParser.isCardUsb(addedCard)) {
    UsbAudioDevice audioDevice=selectAudioCard(addedCard);
    if (audioDevice != null) {
      mAudioDevices.put(usbDevice,audioDevice);
      Slog.i(TAG,"USB Audio Device Added: " + audioDevice);
    }
    boolean hasMidi=mDevicesParser.hasMIDIDevices(addedCard);
    if (hasMidi && mHasMidiFeature) {
      int device=mDevicesParser.getDefaultDeviceNum(addedCard);
      AlsaDevice alsaDevice=waitForAlsaDevice(addedCard,device,AlsaDevice.TYPE_MIDI);
      if (alsaDevice != null) {
        Bundle properties=new Bundle();
        String manufacturer=usbDevice.getManufacturerName();
        String product=usbDevice.getProductName();
        String version=usbDevice.getVersion();
        String name;
        if (manufacturer == null || manufacturer.isEmpty()) {
          name=product;
        }
 else         if (product == null || product.isEmpty()) {
          name=manufacturer;
        }
 else {
          name=manufacturer + " " + product;
        }
        properties.putString(MidiDeviceInfo.PROPERTY_NAME,name);
        properties.putString(MidiDeviceInfo.PROPERTY_MANUFACTURER,manufacturer);
        properties.putString(MidiDeviceInfo.PROPERTY_PRODUCT,product);
        properties.putString(MidiDeviceInfo.PROPERTY_VERSION,version);
        properties.putString(MidiDeviceInfo.PROPERTY_SERIAL_NUMBER,usbDevice.getSerialNumber());
        properties.putInt(MidiDeviceInfo.PROPERTY_ALSA_CARD,alsaDevice.mCard);
        properties.putInt(MidiDeviceInfo.PROPERTY_ALSA_DEVICE,alsaDevice.mDevice);
        properties.putParcelable(MidiDeviceInfo.PROPERTY_USB_DEVICE,usbDevice);
        UsbMidiDevice usbMidiDevice=UsbMidiDevice.create(mContext,properties,alsaDevice.mCard,alsaDevice.mDevice);
        if (usbMidiDevice != null) {
          mMidiDevices.put(usbDevice,usbMidiDevice);
        }
      }
    }
  }
  if (DEBUG) {
    Slog.d(TAG,"deviceAdded() - done");
  }
}
