{
  if (DEBUG) {
    Slog.d(TAG,"selectCard() card:" + card);
  }
  if (!mCardsParser.isCardUsb(card)) {
    return false;
  }
  if (mSelectedAudioDevice != null) {
    if (mSelectedAudioDevice.mCard == card) {
      return false;
    }
    sendDeviceNotification(mSelectedAudioDevice,false);
    mSelectedAudioDevice=null;
  }
  mDevicesParser.scan();
  int device=mDevicesParser.getDefaultDeviceNum(card);
  boolean hasPlayback=mDevicesParser.hasPlaybackDevices(card);
  boolean hasCapture=mDevicesParser.hasCaptureDevices(card);
  boolean hasMidi=mDevicesParser.hasMIDIDevices(card);
  int deviceClass=(mCardsParser.isCardUsb(card) ? UsbAudioDevice.kAudioDeviceClass_External : UsbAudioDevice.kAudioDeviceClass_Internal) | UsbAudioDevice.kAudioDeviceMeta_Alsa;
  if (hasPlayback && (waitForAlsaDevice(card,device,AlsaDevice.TYPE_PLAYBACK) == null)) {
    return false;
  }
  if (hasCapture && (waitForAlsaDevice(card,device,AlsaDevice.TYPE_CAPTURE) == null)) {
    return false;
  }
  AlsaDevice midiDevice=null;
  if (hasMidi) {
    midiDevice=waitForAlsaDevice(card,device,AlsaDevice.TYPE_MIDI);
  }
  if (DEBUG) {
    Slog.d(TAG,"usb: hasPlayback:" + hasPlayback + " hasCapture:"+ hasCapture);
  }
  mSelectedAudioDevice=new UsbAudioDevice(card,device,hasPlayback,hasCapture,hasMidi,deviceClass);
  mSelectedAudioDevice.mDeviceName=mCardsParser.getCardRecordFor(card).mCardName;
  mSelectedAudioDevice.mDeviceDescription=mCardsParser.getCardRecordFor(card).mCardDescription;
  sendDeviceNotification(mSelectedAudioDevice,true);
  return true;
}
