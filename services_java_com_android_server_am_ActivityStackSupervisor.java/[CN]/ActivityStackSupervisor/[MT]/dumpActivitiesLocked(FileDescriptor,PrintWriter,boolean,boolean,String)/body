{
  final int numStacks=mStacks.size();
  for (int stackNdx=0; stackNdx < numStacks; ++stackNdx) {
    final ActivityStack stack=mStacks.get(stackNdx);
    if (stackNdx != 0) {
      pw.println();
    }
    pw.print("  Stack #");
    pw.print(mStacks.indexOf(stack));
    pw.println(":");
    stack.dumpActivitiesLocked(fd,pw,dumpAll,dumpClient,dumpPackage,false);
    dumpHistoryList(fd,pw,stack.mLRUActivities,"    ","Run",false,!dumpAll,false,dumpPackage,true,"    Running activities (most recent first):");
    boolean needSep=true;
    needSep=printThisActivity(pw,stack.mPausingActivity,dumpPackage,needSep,"    mPausingActivity: ");
    needSep=printThisActivity(pw,stack.mResumedActivity,dumpPackage,needSep,"    mResumedActivity: ");
    if (dumpAll) {
      printThisActivity(pw,stack.mLastPausedActivity,dumpPackage,needSep,"    mLastPausedActivity: ");
    }
  }
  dumpHistoryList(fd,pw,mFinishingActivities,"  ","Fin",false,!dumpAll,false,dumpPackage,true,"  Activities waiting to finish:");
  dumpHistoryList(fd,pw,mStoppingActivities,"  ","Stop",false,!dumpAll,false,dumpPackage,true,"  Activities waiting to stop:");
  dumpHistoryList(fd,pw,mWaitingVisibleActivities,"  ","Wait",false,!dumpAll,false,dumpPackage,true,"  Activities waiting for another to become visible:");
  dumpHistoryList(fd,pw,mGoingToSleepActivities,"  ","Sleep",false,!dumpAll,false,dumpPackage,true,"  Activities waiting to sleep:");
  dumpHistoryList(fd,pw,mGoingToSleepActivities,"  ","Sleep",false,!dumpAll,false,dumpPackage,true,"  Activities waiting to sleep:");
  if (dumpPackage == null) {
    pw.println();
    pw.print("  mStackState=");
    pw.println(stackStateToString(mStackState));
    if (dumpAll) {
      pw.println("  mSleepTimeout: " + mSleepTimeout);
    }
    if (dumpAll) {
      pw.println("  mCurTaskId: " + mCurTaskId);
    }
  }
  return true;
}
