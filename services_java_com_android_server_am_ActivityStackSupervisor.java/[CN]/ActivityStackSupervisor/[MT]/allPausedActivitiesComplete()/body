{
  final boolean homeInBack=!homeIsInFront();
  for (int stackNdx=mStacks.size() - 1; stackNdx >= 0; --stackNdx) {
    final ActivityStack stack=mStacks.get(stackNdx);
    if (stack.isHomeStack() ^ homeInBack) {
      final ActivityRecord r=stack.mLastPausedActivity;
      if (r != null && r.state != ActivityState.PAUSED && r.state != ActivityState.STOPPED && r.state != ActivityState.STOPPING) {
        return false;
      }
    }
  }
switch (mStackState) {
case STACK_STATE_HOME_TO_BACK:
    mStackState=STACK_STATE_HOME_IN_BACK;
  break;
case STACK_STATE_HOME_TO_FRONT:
mStackState=STACK_STATE_HOME_IN_FRONT;
break;
}
return true;
}
