{
  boolean isStatic=(access & Opcodes.ACC_STATIC) != 0;
  boolean isNative=(access & Opcodes.ACC_NATIVE) != 0;
  boolean useDelegate=(isNative && mDelegateMethods.contains(ALL_NATIVES)) || mDelegateMethods.contains(name);
  if (useDelegate) {
    access=access & ~Opcodes.ACC_NATIVE;
  }
  MethodVisitor mw=super.visitMethod(access,name,desc,signature,exceptions);
  if (useDelegate) {
    DelegateMethodAdapter a=new DelegateMethodAdapter(mLog,mw,mClassName,name,desc,isStatic);
    if (isNative) {
      a.generateCode();
    }
 else {
      return a;
    }
  }
  return mw;
}
