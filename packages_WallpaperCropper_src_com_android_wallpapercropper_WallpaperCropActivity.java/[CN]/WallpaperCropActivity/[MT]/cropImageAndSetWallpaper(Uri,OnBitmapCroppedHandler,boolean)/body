{
  Point inSize=mCropView.getSourceDimensions();
  Point minDims=new Point();
  Point maxDims=new Point();
  Display d=getWindowManager().getDefaultDisplay();
  d.getCurrentSizeRange(minDims,maxDims);
  Point displaySize=new Point();
  d.getSize(displaySize);
  int maxDim=Math.max(maxDims.x,maxDims.y);
  final int minDim=Math.min(minDims.x,minDims.y);
  int defaultWidth;
  if (isScreenLarge(getResources())) {
    defaultWidth=(int)(maxDim * wallpaperTravelToScreenWidthRatio(maxDim,minDim));
  }
 else {
    defaultWidth=Math.max((int)(minDim * WALLPAPER_SCREENS_SPAN),maxDim);
  }
  boolean isPortrait=displaySize.x < displaySize.y;
  int portraitHeight;
  if (isPortrait) {
    portraitHeight=mCropView.getHeight();
  }
 else {
    portraitHeight=Math.max(maxDims.x,maxDims.y);
  }
  if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.JELLY_BEAN_MR1) {
    Point realSize=new Point();
    d.getRealSize(realSize);
    portraitHeight=Math.max(realSize.x,realSize.y);
  }
  RectF cropRect=mCropView.getCrop();
  float cropScale=mCropView.getWidth() / (float)cropRect.width();
  float extraSpaceToRight=inSize.x - cropRect.right;
  float maxExtraSpace=defaultWidth / cropScale - cropRect.width();
  extraSpaceToRight=Math.min(extraSpaceToRight,maxExtraSpace);
  cropRect.right+=extraSpaceToRight;
  if (isPortrait) {
    cropRect.bottom=cropRect.top + portraitHeight / cropScale;
  }
 else {
    float extraPortraitHeight=portraitHeight / cropScale - cropRect.height();
    float expandHeight=Math.min(Math.min(inSize.y - cropRect.bottom,cropRect.top),extraPortraitHeight / 2);
    cropRect.top-=expandHeight;
    cropRect.bottom+=expandHeight;
  }
  final int outWidth=(int)Math.round(cropRect.width() * cropScale);
  final int outHeight=(int)Math.round(cropRect.height() * cropScale);
  Runnable onEndCrop=new Runnable(){
    public void run(){
      updateWallpaperDimensions(outWidth,outHeight);
      if (finishActivityWhenDone) {
        setResult(Activity.RESULT_OK);
        finish();
      }
    }
  }
;
  BitmapCropTask cropTask=new BitmapCropTask(uri,cropRect,outWidth,outHeight,true,false,onEndCrop);
  if (onBitmapCroppedHandler != null) {
    cropTask.setOnBitmapCropped(onBitmapCroppedHandler);
  }
  cropTask.execute();
}
