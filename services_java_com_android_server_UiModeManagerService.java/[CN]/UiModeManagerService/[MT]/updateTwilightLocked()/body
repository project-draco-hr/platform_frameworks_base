{
  if (mLocation == null) {
    return;
  }
  final long currentTime=System.currentTimeMillis();
  boolean nightMode;
  TwilightCalculator tw=new TwilightCalculator();
  tw.calculateTwilight(currentTime,mLocation.getLatitude(),mLocation.getLongitude());
  if (tw.mState == TwilightCalculator.DAY) {
    nightMode=false;
  }
 else {
    nightMode=true;
  }
  long nextUpdate=0;
  if (tw.mSunrise == -1 || tw.mSunset == -1) {
    nextUpdate=currentTime + 12 * DateUtils.HOUR_IN_MILLIS;
  }
 else {
    final int mLastTwilightState=tw.mState;
    nextUpdate+=DateUtils.MINUTE_IN_MILLIS;
    if (currentTime > tw.mSunset) {
      tw.calculateTwilight(currentTime + DateUtils.DAY_IN_MILLIS,mLocation.getLatitude(),mLocation.getLongitude());
    }
    if (mLastTwilightState == TwilightCalculator.NIGHT) {
      nextUpdate+=tw.mSunrise;
    }
 else {
      nextUpdate+=tw.mSunset;
    }
  }
  Intent updateIntent=new Intent(ACTION_UPDATE_NIGHT_MODE);
  PendingIntent pendingIntent=PendingIntent.getBroadcast(mContext,0,updateIntent,0);
  mAlarmManager.cancel(pendingIntent);
  mAlarmManager.set(AlarmManager.RTC_WAKEUP,nextUpdate,pendingIntent);
  mComputedNightMode=nightMode;
}
