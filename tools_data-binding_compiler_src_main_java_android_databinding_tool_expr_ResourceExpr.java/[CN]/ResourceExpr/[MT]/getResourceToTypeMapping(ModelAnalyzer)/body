{
  if (mResourceToTypeMapping == null) {
    final Map<String,String> imports=getModel().getImports();
    mResourceToTypeMapping=ImmutableMap.<String,ModelClass>builder().put("anim",modelAnalyzer.findClass("android.view.animation.Animation",imports)).put("animator",modelAnalyzer.findClass("android.animation.Animator",imports)).put("colorStateList",modelAnalyzer.findClass("android.content.res.ColorStateList",imports)).put("drawable",modelAnalyzer.findClass("android.graphics.drawable.Drawable",imports)).put("stateListAnimator",modelAnalyzer.findClass("android.animation.StateListAnimator",imports)).put("transition",modelAnalyzer.findClass("android.transition.Transition",imports)).put("typedArray",modelAnalyzer.findClass("android.content.res.TypedArray",imports)).put("interpolator",modelAnalyzer.findClass("android.view.animation.Interpolator",imports)).put("bool",modelAnalyzer.findClass(boolean.class)).put("color",modelAnalyzer.findClass(int.class)).put("dimenOffset",modelAnalyzer.findClass(int.class)).put("dimenSize",modelAnalyzer.findClass(int.class)).put("id",modelAnalyzer.findClass(int.class)).put("integer",modelAnalyzer.findClass(int.class)).put("layout",modelAnalyzer.findClass(int.class)).put("dimen",modelAnalyzer.findClass(float.class)).put("fraction",modelAnalyzer.findClass(float.class)).put("intArray",modelAnalyzer.findClass(int[].class)).put("string",modelAnalyzer.findClass(String.class)).put("stringArray",modelAnalyzer.findClass(String[].class)).build();
  }
  return mResourceToTypeMapping;
}
