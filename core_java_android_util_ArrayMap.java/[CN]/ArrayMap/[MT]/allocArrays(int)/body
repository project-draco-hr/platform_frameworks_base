{
  if (mHashes == EMPTY_IMMUTABLE_INTS) {
    throw new UnsupportedOperationException("ArrayMap is immutable");
  }
  if (size == (BASE_SIZE * 2)) {
synchronized (ArrayMap.class) {
      if (mTwiceBaseCache != null) {
        final Object[] array=mTwiceBaseCache;
        mArray=array;
        mTwiceBaseCache=(Object[])array[0];
        mHashes=(int[])array[1];
        array[0]=array[1]=null;
        mTwiceBaseCacheSize--;
        if (DEBUG)         Log.d(TAG,"Retrieving 2x cache " + mHashes + " now have "+ mTwiceBaseCacheSize+ " entries");
        return;
      }
    }
  }
 else   if (size == BASE_SIZE) {
synchronized (ArrayMap.class) {
      if (mBaseCache != null) {
        final Object[] array=mBaseCache;
        mArray=array;
        mBaseCache=(Object[])array[0];
        mHashes=(int[])array[1];
        array[0]=array[1]=null;
        mBaseCacheSize--;
        if (DEBUG)         Log.d(TAG,"Retrieving 1x cache " + mHashes + " now have "+ mBaseCacheSize+ " entries");
        return;
      }
    }
  }
  mHashes=new int[size];
  mArray=new Object[size << 1];
}
