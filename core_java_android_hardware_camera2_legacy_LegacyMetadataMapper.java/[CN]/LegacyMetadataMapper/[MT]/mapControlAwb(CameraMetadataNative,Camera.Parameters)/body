{
{
    List<String> wbModes=p.getSupportedWhiteBalance();
    String[] wbModeStrings=new String[]{Camera.Parameters.WHITE_BALANCE_AUTO,Camera.Parameters.WHITE_BALANCE_INCANDESCENT,Camera.Parameters.WHITE_BALANCE_FLUORESCENT,Camera.Parameters.WHITE_BALANCE_WARM_FLUORESCENT,Camera.Parameters.WHITE_BALANCE_DAYLIGHT,Camera.Parameters.WHITE_BALANCE_CLOUDY_DAYLIGHT,Camera.Parameters.WHITE_BALANCE_TWILIGHT,Camera.Parameters.WHITE_BALANCE_SHADE};
    int[] wbModeInts=new int[]{CONTROL_AWB_MODE_AUTO,CONTROL_AWB_MODE_INCANDESCENT,CONTROL_AWB_MODE_FLUORESCENT,CONTROL_AWB_MODE_WARM_FLUORESCENT,CONTROL_AWB_MODE_DAYLIGHT,CONTROL_AWB_MODE_CLOUDY_DAYLIGHT,CONTROL_AWB_MODE_TWILIGHT,CONTROL_AWB_MODE_SHADE};
    List<Integer> awbAvail=ArrayUtils.convertStringListToIntList(wbModes,wbModeStrings,wbModeInts);
    if (awbAvail == null || awbAvail.size() == 0) {
      Log.w(TAG,"No AWB modes supported (HAL bug); defaulting to AWB_MODE_AUTO only");
      awbAvail=new ArrayList<Integer>(1);
      awbAvail.add(CONTROL_AWB_MODE_AUTO);
    }
    m.set(CONTROL_AWB_AVAILABLE_MODES,ArrayUtils.toIntArray(awbAvail));
    if (DEBUG) {
      Log.v(TAG,"mapControlAwb - control.awbAvailableModes set to " + ListUtils.listToString(awbAvail));
    }
{
      boolean awbLockAvailable=p.isAutoWhiteBalanceLockSupported();
      m.set(CONTROL_AWB_LOCK_AVAILABLE,awbLockAvailable);
    }
  }
}
