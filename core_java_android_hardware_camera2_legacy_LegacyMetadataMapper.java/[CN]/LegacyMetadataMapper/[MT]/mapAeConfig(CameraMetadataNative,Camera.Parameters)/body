{
  List<int[]> fpsRanges=p.getSupportedPreviewFpsRange();
  if (fpsRanges == null) {
    throw new AssertionError("Supported FPS ranges cannot be null.");
  }
  int rangesSize=fpsRanges.size();
  if (rangesSize <= 0) {
    throw new AssertionError("At least one FPS range must be supported.");
  }
  Range<Integer>[] ranges=new Range[rangesSize];
  int i=0;
  for (  int[] r : fpsRanges) {
    ranges[i++]=Range.create(r[Camera.Parameters.PREVIEW_FPS_MIN_INDEX],r[Camera.Parameters.PREVIEW_FPS_MAX_INDEX]);
  }
  m.set(CONTROL_AE_AVAILABLE_TARGET_FPS_RANGES,ranges);
  List<String> antiBandingModes=p.getSupportedAntibanding();
  int antiBandingModesSize=antiBandingModes.size();
  if (antiBandingModesSize > 0) {
    int[] modes=new int[antiBandingModesSize];
    int j=0;
    for (    String mode : antiBandingModes) {
      int convertedMode=convertAntiBandingMode(mode);
      if (convertedMode == -1) {
        Log.w(TAG,"Antibanding mode " + ((mode == null) ? "NULL" : mode) + " not supported, skipping...");
      }
 else {
        modes[j++]=convertedMode;
      }
    }
    m.set(CONTROL_AE_AVAILABLE_ANTIBANDING_MODES,Arrays.copyOf(modes,j));
  }
}
