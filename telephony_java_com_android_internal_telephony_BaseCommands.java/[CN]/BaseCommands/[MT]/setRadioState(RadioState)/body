{
  RadioState oldState;
synchronized (mStateMonitor) {
    if (false) {
      Log.v(LOG_TAG,"setRadioState old: " + mState + " new "+ newState);
    }
    oldState=mState;
    mState=newState;
    if (oldState == mState) {
      return;
    }
    if (mState.getType() == 0) {
      mSimState=mState;
      mRuimState=mState;
      mNvState=mState;
    }
 else     if (mState.getType() == 1) {
      mSimState=mState;
    }
 else     if (mState.getType() == 2) {
      mRuimState=mState;
    }
 else     if (mState.getType() == 3) {
      mNvState=mState;
    }
    mRadioStateChangedRegistrants.notifyRegistrants();
    if (mState.isAvailable() && !oldState.isAvailable()) {
      Log.d(LOG_TAG,"Notifying: radio available");
      mAvailRegistrants.notifyRegistrants();
      onRadioAvailable();
    }
    if (!mState.isAvailable() && oldState.isAvailable()) {
      Log.d(LOG_TAG,"Notifying: radio not available");
      mNotAvailRegistrants.notifyRegistrants();
    }
    if (mState.isSIMReady() && !oldState.isSIMReady()) {
      Log.d(LOG_TAG,"Notifying: SIM ready");
      mSIMReadyRegistrants.notifyRegistrants();
    }
    if (mState == RadioState.SIM_LOCKED_OR_ABSENT) {
      Log.d(LOG_TAG,"Notifying: SIM locked or absent");
      mSIMLockedRegistrants.notifyRegistrants();
    }
    if (mState.isRUIMReady() && !oldState.isRUIMReady()) {
      Log.d(LOG_TAG,"Notifying: RUIM ready");
      mRUIMReadyRegistrants.notifyRegistrants();
    }
    if (mState == RadioState.RUIM_LOCKED_OR_ABSENT) {
      Log.d(LOG_TAG,"Notifying: RUIM locked or absent");
      mRUIMLockedRegistrants.notifyRegistrants();
    }
    if (mState.isNVReady() && !oldState.isNVReady()) {
      Log.d(LOG_TAG,"Notifying: NV ready");
      mNVReadyRegistrants.notifyRegistrants();
    }
    if (mState.isOn() && !oldState.isOn()) {
      Log.d(LOG_TAG,"Notifying: Radio On");
      mOnRegistrants.notifyRegistrants();
    }
    if ((!mState.isOn() || !mState.isAvailable()) && !((!oldState.isOn() || !oldState.isAvailable()))) {
      Log.d(LOG_TAG,"Notifying: radio off or not available");
      mOffOrNotAvailRegistrants.notifyRegistrants();
    }
    if (mState.isGsm() && oldState.isCdma()) {
      Log.d(LOG_TAG,"Notifying: radio technology change CDMA to GSM");
      mRadioTechnologyChangedRegistrants.notifyRegistrants();
    }
    if (mState.isGsm() && !oldState.isOn() && (mPhoneType == Phone.PHONE_TYPE_CDMA)) {
      Log.d(LOG_TAG,"Notifying: radio technology change CDMA OFF to GSM");
      mRadioTechnologyChangedRegistrants.notifyRegistrants();
    }
    if (mState.isCdma() && oldState.isGsm()) {
      Log.d(LOG_TAG,"Notifying: radio technology change GSM to CDMA");
      mRadioTechnologyChangedRegistrants.notifyRegistrants();
    }
    if (mState.isCdma() && !oldState.isOn() && (mPhoneType == Phone.PHONE_TYPE_GSM)) {
      Log.d(LOG_TAG,"Notifying: radio technology change GSM OFF to CDMA");
      mRadioTechnologyChangedRegistrants.notifyRegistrants();
    }
  }
}
