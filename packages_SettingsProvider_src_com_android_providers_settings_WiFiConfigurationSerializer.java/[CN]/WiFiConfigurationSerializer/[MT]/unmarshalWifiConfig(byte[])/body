{
  if (data == null || data.length == 0) {
    return null;
  }
  DataInputStream in=new DataInputStream(new ByteArrayInputStream(data));
  WifiConfiguration config=new WifiConfiguration();
  try {
    int version=in.readInt();
    config.networkId=in.readInt();
    config.status=in.readInt();
    readNetworkSelectionStatusFromByteArray(in,config,version);
    config.SSID=readString(in,version);
    config.BSSID=readString(in,version);
    config.apBand=in.readInt();
    config.apChannel=in.readInt();
    config.FQDN=readString(in,version);
    config.providerFriendlyName=readString(in,version);
    int numRoamingConsortiumIds=in.readInt();
    config.roamingConsortiumIds=new long[numRoamingConsortiumIds];
    for (int i=0; i < numRoamingConsortiumIds; i++) {
      config.roamingConsortiumIds[i]=in.readLong();
    }
    config.preSharedKey=readString(in,version);
    for (int i=0; i < config.wepKeys.length; i++) {
      config.wepKeys[i]=readString(in,version);
    }
    config.wepTxKeyIndex=in.readInt();
    config.priority=in.readInt();
    config.hiddenSSID=in.readInt() != 0;
    config.requirePMF=in.readInt() != 0;
    config.updateIdentifier=readString(in,version);
    config.allowedKeyManagement=readBitSet(in,version);
    config.allowedProtocols=readBitSet(in,version);
    config.allowedAuthAlgorithms=readBitSet(in,version);
    config.allowedPairwiseCiphers=readBitSet(in,version);
    config.allowedGroupCiphers=readBitSet(in,version);
    config.setIpConfiguration(readIpConfiguration(in,version));
    config.dhcpServer=readString(in,version);
    config.defaultGwMacAddress=readString(in,version);
    config.selfAdded=in.readInt() != 0;
    config.didSelfAdd=in.readInt() != 0;
    config.validatedInternetAccess=in.readInt() != 0;
    config.ephemeral=in.readInt() != 0;
    config.creatorUid=in.readInt();
    config.lastConnectUid=in.readInt();
    config.lastUpdateUid=in.readInt();
    config.creatorName=readString(in,version);
    config.lastUpdateName=readString(in,version);
    config.lastConnectionFailure=in.readLong();
    config.lastRoamingFailure=in.readLong();
    config.lastRoamingFailureReason=in.readInt();
    config.roamingFailureBlackListTimeMilli=in.readLong();
    config.numScorerOverride=in.readInt();
    config.numScorerOverrideAndSwitchedNetwork=in.readInt();
    config.numAssociation=in.readInt();
    config.numUserTriggeredWifiDisableLowRSSI=in.readInt();
    config.numUserTriggeredWifiDisableBadRSSI=in.readInt();
    config.numUserTriggeredWifiDisableNotHighRSSI=in.readInt();
    config.numTicksAtLowRSSI=in.readInt();
    config.numTicksAtBadRSSI=in.readInt();
    config.numTicksAtNotHighRSSI=in.readInt();
    config.numUserTriggeredJoinAttempts=in.readInt();
    config.userApproved=in.readInt();
    config.numNoInternetAccessReports=in.readInt();
    config.noInternetAccessExpected=in.readInt() != 0;
  }
 catch (  IOException ioe) {
    Log.e(TAG,"Failed to convert byte array to WifiConfiguration object",ioe);
    return null;
  }
  return config;
}
