{
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  if (wifiConfig != null) {
    DataOutputStream out=new DataOutputStream(baos);
    try {
      out.writeInt(STATE_VERSION);
      out.writeInt(wifiConfig.networkId);
      out.writeInt(wifiConfig.status);
      writeNetworkSelectionStatus(wifiConfig,out);
      writeString(out,wifiConfig.SSID);
      writeString(out,wifiConfig.BSSID);
      out.writeInt(wifiConfig.apBand);
      out.writeInt(wifiConfig.apChannel);
      writeString(out,wifiConfig.FQDN);
      writeString(out,wifiConfig.providerFriendlyName);
      out.writeInt(wifiConfig.roamingConsortiumIds.length);
      for (      long id : wifiConfig.roamingConsortiumIds) {
        out.writeLong(id);
      }
      writeString(out,wifiConfig.preSharedKey);
      for (      String wepKey : wifiConfig.wepKeys) {
        writeString(out,wepKey);
      }
      out.writeInt(wifiConfig.wepTxKeyIndex);
      out.writeInt(wifiConfig.priority);
      out.writeInt(wifiConfig.hiddenSSID ? 1 : 0);
      out.writeInt(wifiConfig.requirePMF ? 1 : 0);
      writeString(out,wifiConfig.updateIdentifier);
      writeBitSet(out,wifiConfig.allowedKeyManagement);
      writeBitSet(out,wifiConfig.allowedProtocols);
      writeBitSet(out,wifiConfig.allowedAuthAlgorithms);
      writeBitSet(out,wifiConfig.allowedPairwiseCiphers);
      writeBitSet(out,wifiConfig.allowedGroupCiphers);
      writeIpConfiguration(out,wifiConfig.getIpConfiguration());
      writeString(out,wifiConfig.dhcpServer);
      writeString(out,wifiConfig.defaultGwMacAddress);
      out.writeInt(wifiConfig.selfAdded ? 1 : 0);
      out.writeInt(wifiConfig.didSelfAdd ? 1 : 0);
      out.writeInt(wifiConfig.validatedInternetAccess ? 1 : 0);
      out.writeInt(wifiConfig.ephemeral ? 1 : 0);
      out.writeInt(wifiConfig.creatorUid);
      out.writeInt(wifiConfig.lastConnectUid);
      out.writeInt(wifiConfig.lastUpdateUid);
      writeString(out,wifiConfig.creatorName);
      writeString(out,wifiConfig.lastUpdateName);
      out.writeLong(wifiConfig.lastConnectionFailure);
      out.writeLong(wifiConfig.lastRoamingFailure);
      out.writeInt(wifiConfig.lastRoamingFailureReason);
      out.writeInt(wifiConfig.numScorerOverride);
      out.writeInt(wifiConfig.numScorerOverrideAndSwitchedNetwork);
      out.writeInt(wifiConfig.numAssociation);
      out.writeInt(wifiConfig.numUserTriggeredWifiDisableLowRSSI);
      out.writeInt(wifiConfig.numUserTriggeredWifiDisableBadRSSI);
      out.writeInt(wifiConfig.numUserTriggeredWifiDisableNotHighRSSI);
      out.writeInt(wifiConfig.numTicksAtLowRSSI);
      out.writeInt(wifiConfig.numTicksAtBadRSSI);
      out.writeInt(wifiConfig.numTicksAtNotHighRSSI);
      out.writeInt(wifiConfig.numUserTriggeredJoinAttempts);
      out.writeInt(wifiConfig.userApproved);
      out.writeInt(wifiConfig.numNoInternetAccessReports);
      out.writeInt(wifiConfig.noInternetAccessExpected ? 1 : 0);
    }
 catch (    IOException ioe) {
      Log.e(TAG,"Failed to Convert WifiConfiguration to byte array",ioe);
      baos.reset();
    }
  }
  return baos.toByteArray();
}
