{
  boolean isVoid=jfunc.getType().isVoid();
  boolean isPointerFunc=jfunc.getName().endsWith("Pointer") && jfunc.getCFunc().hasPointerArg();
  if (!isVoid) {
    out.println(iii + jfunc.getType() + " _returnValue;");
  }
  out.println(iii + (isVoid ? "" : "_returnValue = ") + jfunc.getName()+ (isPointerFunc ? "Bounds" : "")+ "(");
  int numArgs=jfunc.getNumArgs();
  for (int i=0; i < numArgs; i++) {
    String argName=jfunc.getArgName(i);
    JType argType=jfunc.getArgType(i);
    if (grabArray && argType.isTypedBuffer()) {
      String typeName=argType.getBaseType();
      typeName=typeName.substring(9,typeName.length() - 6);
      out.println(iii + indent + "get"+ typeName+ "Array("+ argName+ "),");
      out.print(iii + indent + "getOffset("+ argName+ ")");
    }
 else {
      out.print(iii + indent + argName);
    }
    if (i == numArgs - 1) {
      if (isPointerFunc) {
        out.println(",");
        out.println(iii + indent + argName+ ".remaining()");
      }
 else {
        out.println();
      }
    }
 else {
      out.println(",");
    }
  }
  out.println(iii + ");");
}
