{
  boolean isPointerFunc=isPointerFunc(jfunc);
  if (!nativeDecl && !interfaceDecl && !isPointerFunc) {
    return;
  }
  String maybeStatic=mUseStaticMethods ? "static " : "";
  if (isPointerFunc) {
    out.println(indent + (nativeDecl ? "private " + maybeStatic + "native " : (interfaceDecl ? "" : "public ") + maybeStatic) + jfunc.getType()+ " "+ jfunc.getName()+ (nativeDecl ? "Bounds" : "")+ "(");
  }
 else {
    out.println(indent + (nativeDecl ? "public " + maybeStatic + "native " : (interfaceDecl ? "" : "public ") + maybeStatic) + jfunc.getType()+ " "+ jfunc.getName()+ "(");
  }
  int numArgs=jfunc.getNumArgs();
  for (int i=0; i < numArgs; i++) {
    String argName=jfunc.getArgName(i);
    JType argType=jfunc.getArgType(i);
    out.print(indent + indent + argType+ " "+ argName);
    if (i == numArgs - 1) {
      if (isPointerFunc && nativeDecl) {
        out.println(",");
        out.println(indent + indent + "int remaining");
      }
 else {
        out.println();
      }
    }
 else {
      out.println(",");
    }
  }
  if (nativeDecl || interfaceDecl) {
    out.println(indent + ");");
  }
 else {
    out.println(indent + ") {");
    String iii=indent + indent;
    emitFunctionCall(jfunc,out,iii,false);
    String fname=jfunc.getName();
    if (isPointerFunc) {
      if (fname.equals("glColorPointer")) {
        out.println(iii + "if ((size == 4) &&");
        out.println(iii + "    ((type == GL_FLOAT) ||");
        out.println(iii + "     (type == GL_UNSIGNED_BYTE) ||");
        out.println(iii + "     (type == GL_FIXED)) &&");
        out.println(iii + "    (stride >= 0)) {");
        out.println(iii + indent + "_colorPointer = pointer;");
        out.println(iii + "}");
      }
 else       if (fname.equals("glNormalPointer")) {
        out.println(iii + "if (((type == GL_FLOAT) ||");
        out.println(iii + "     (type == GL_BYTE) ||");
        out.println(iii + "     (type == GL_SHORT) ||");
        out.println(iii + "     (type == GL_FIXED)) &&");
        out.println(iii + "    (stride >= 0)) {");
        out.println(iii + indent + "_normalPointer = pointer;");
        out.println(iii + "}");
      }
 else       if (fname.equals("glTexCoordPointer")) {
        out.println(iii + "if (((size == 2) ||");
        out.println(iii + "     (size == 3) ||");
        out.println(iii + "     (size == 4)) &&");
        out.println(iii + "    ((type == GL_FLOAT) ||");
        out.println(iii + "     (type == GL_BYTE) ||");
        out.println(iii + "     (type == GL_SHORT) ||");
        out.println(iii + "     (type == GL_FIXED)) &&");
        out.println(iii + "    (stride >= 0)) {");
        out.println(iii + indent + "_texCoordPointer = pointer;");
        out.println(iii + "}");
      }
 else       if (fname.equals("glVertexPointer")) {
        out.println(iii + "if (((size == 2) ||");
        out.println(iii + "     (size == 3) ||");
        out.println(iii + "     (size == 4)) &&");
        out.println(iii + "    ((type == GL_FLOAT) ||");
        out.println(iii + "     (type == GL_BYTE) ||");
        out.println(iii + "     (type == GL_SHORT) ||");
        out.println(iii + "     (type == GL_FIXED)) &&");
        out.println(iii + "    (stride >= 0)) {");
        out.println(iii + indent + "_vertexPointer = pointer;");
        out.println(iii + "}");
      }
 else       if (fname.equals("glPointSizePointerOES")) {
        out.println(iii + "if (((type == GL_FLOAT) ||");
        out.println(iii + "     (type == GL_FIXED)) &&");
        out.println(iii + "    (stride >= 0)) {");
        out.println(iii + indent + "_pointSizePointerOES = pointer;");
        out.println(iii + "}");
      }
 else       if (fname.equals("glMatrixIndexPointerOES")) {
        out.println(iii + "if (((size == 2) ||");
        out.println(iii + "     (size == 3) ||");
        out.println(iii + "     (size == 4)) &&");
        out.println(iii + "    ((type == GL_FLOAT) ||");
        out.println(iii + "     (type == GL_BYTE) ||");
        out.println(iii + "     (type == GL_SHORT) ||");
        out.println(iii + "     (type == GL_FIXED)) &&");
        out.println(iii + "    (stride >= 0)) {");
        out.println(iii + indent + "_matrixIndexPointerOES = pointer;");
        out.println(iii + "}");
      }
 else       if (fname.equals("glWeightPointer")) {
        out.println(iii + "if (((size == 2) ||");
        out.println(iii + "     (size == 3) ||");
        out.println(iii + "     (size == 4)) &&");
        out.println(iii + "    ((type == GL_FLOAT) ||");
        out.println(iii + "     (type == GL_BYTE) ||");
        out.println(iii + "     (type == GL_SHORT) ||");
        out.println(iii + "     (type == GL_FIXED)) &&");
        out.println(iii + "    (stride >= 0)) {");
        out.println(iii + indent + "_weightPointerOES = pointer;");
        out.println(iii + "}");
      }
    }
    boolean isVoid=jfunc.getType().isVoid();
    if (!isVoid) {
      out.println(indent + indent + "return _returnValue;");
    }
    out.println(indent + "}");
  }
  out.println();
}
