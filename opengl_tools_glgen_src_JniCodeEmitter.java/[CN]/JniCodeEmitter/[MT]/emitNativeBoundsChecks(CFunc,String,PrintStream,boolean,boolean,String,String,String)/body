{
  String[] checks=mChecker.getChecks(cfunc.getName());
  boolean lastWasIfcheck=false;
  int index=1;
  if (checks != null) {
    while (index < checks.length) {
      if (checks[index].startsWith("check")) {
        if (lastWasIfcheck) {
          printIfcheckPostamble(out,isBuffer,emitExceptionCheck,offset,remaining,iii);
        }
        lastWasIfcheck=false;
        if (cname != null && !cname.equals(checks[index + 1])) {
          index+=3;
          continue;
        }
        out.println(iii + "if (" + remaining+ " < "+ checks[index + 2]+ ") {");
        if (emitExceptionCheck) {
          out.println(iii + indent + "_exception = 1;");
        }
        String exceptionClassName="java/lang/IllegalArgumentException";
        int underscore=checks[index].indexOf('_');
        if (underscore >= 0) {
          String abbr=checks[index].substring(underscore + 1);
          if (abbr.equals("AIOOBE")) {
            exceptionClassName="java/lang/ArrayIndexOutOfBoundsException";
          }
 else {
            throw new RuntimeException("unknown exception abbreviation: " + abbr);
          }
        }
        out.println(iii + indent + "jniThrowException(_env, "+ "\""+ exceptionClassName+ "\", "+ "\""+ (isBuffer ? "remaining()" : "length - " + offset)+ " < "+ checks[index + 2]+ "\");");
        out.println(iii + indent + "goto exit;");
        needsExit=true;
        out.println(iii + "}");
        index+=3;
      }
 else       if (checks[index].equals("ifcheck")) {
        String[] matches=checks[index + 4].split(",");
        if (!lastWasIfcheck) {
          out.println(iii + "int _needed;");
          out.println(iii + "switch (" + checks[index + 3]+ ") {");
        }
        for (int i=0; i < matches.length; i++) {
          out.println("#if defined(" + matches[i] + ")");
          out.println(iii + "    case " + matches[i]+ ":");
          out.println("#endif // defined(" + matches[i] + ")");
        }
        out.println(iii + "        _needed = " + checks[index + 2]+ ";");
        out.println(iii + "        break;");
        lastWasIfcheck=true;
        index+=5;
      }
 else       if (checks[index].equals("return")) {
        index+=2;
      }
 else       if (checks[index].equals("unsupported")) {
        index+=1;
      }
 else       if (checks[index].equals("requires")) {
        index+=2;
      }
 else       if (checks[index].equals("nullAllowed")) {
        index+=1;
      }
 else {
        System.out.println("Error: unknown keyword \"" + checks[index] + "\"");
        System.exit(0);
      }
    }
  }
  if (lastWasIfcheck) {
    printIfcheckPostamble(out,isBuffer,emitExceptionCheck,iii);
  }
}
