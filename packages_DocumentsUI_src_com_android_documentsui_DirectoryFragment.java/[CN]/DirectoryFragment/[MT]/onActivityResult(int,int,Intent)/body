{
  final Context context=getActivity();
  final Resources res=context.getResources();
  if (requestCode != REQUEST_COPY_DESTINATION) {
    return;
  }
  if (resultCode == Activity.RESULT_CANCELED || data == null) {
    return;
  }
  final Uri destinationTree=data.getData();
  final Uri destination=DocumentsContract.buildDocumentUriUsingTree(destinationTree,DocumentsContract.getTreeDocumentId(destinationTree));
  List<DocumentInfo> docs=mSelectedDocumentsForCopy;
  Intent copyIntent=new Intent(context,CopyService.class);
  copyIntent.putParcelableArrayListExtra(CopyService.EXTRA_SRC_LIST,new ArrayList<DocumentInfo>(docs));
  copyIntent.setData(destination);
  Toast.makeText(context,res.getQuantityString(R.plurals.copy_begin,docs.size(),docs.size()),Toast.LENGTH_SHORT).show();
  context.startService(copyIntent);
}
