{
  final Context context=parent.getContext();
  final DisplayState state=getDisplayState(DirectoryFragment.this);
  if (convertView == null) {
    final LayoutInflater inflater=LayoutInflater.from(context);
    if (state.mode == DisplayState.MODE_LIST) {
      convertView=inflater.inflate(R.layout.item_doc_list,parent,false);
    }
 else     if (state.mode == DisplayState.MODE_GRID) {
      convertView=inflater.inflate(R.layout.item_doc_grid,parent,false);
    }
 else {
      throw new IllegalStateException();
    }
  }
  final Document doc=getItem(position);
  final ImageView icon=(ImageView)convertView.findViewById(android.R.id.icon);
  final TextView title=(TextView)convertView.findViewById(android.R.id.title);
  final View summaryGrid=convertView.findViewById(R.id.summary_grid);
  final ImageView icon1=(ImageView)convertView.findViewById(android.R.id.icon1);
  final TextView summary=(TextView)convertView.findViewById(android.R.id.summary);
  final TextView date=(TextView)convertView.findViewById(R.id.date);
  final TextView size=(TextView)convertView.findViewById(R.id.size);
  final ThumbnailAsyncTask oldTask=(ThumbnailAsyncTask)icon.getTag();
  if (oldTask != null) {
    oldTask.cancel(false);
  }
  if (doc.isThumbnailSupported()) {
    final Bitmap cachedResult=ThumbnailCache.get(context).get(doc.uri);
    if (cachedResult != null) {
      icon.setImageBitmap(cachedResult);
    }
 else {
      final ThumbnailAsyncTask task=new ThumbnailAsyncTask(icon,mThumbSize);
      icon.setImageBitmap(null);
      icon.setTag(task);
      task.execute(doc.uri);
    }
  }
 else {
    icon.setImageDrawable(RootsCache.resolveDocumentIcon(context,doc.uri.getAuthority(),doc.mimeType));
  }
  title.setText(doc.displayName);
  if (mType == TYPE_NORMAL || mType == TYPE_SEARCH) {
    icon1.setVisibility(View.GONE);
    if (doc.summary != null) {
      summary.setText(doc.summary);
      summary.setVisibility(View.VISIBLE);
    }
 else {
      summary.setVisibility(View.INVISIBLE);
    }
  }
 else   if (mType == TYPE_RECENT_OPEN) {
    final Root root=RootsCache.findRoot(context,doc);
    icon1.setVisibility(View.VISIBLE);
    icon1.setImageDrawable(root.icon);
    summary.setText(root.getDirectoryString());
    summary.setVisibility(View.VISIBLE);
  }
  if (summaryGrid != null) {
    summaryGrid.setVisibility((summary.getVisibility() == View.VISIBLE) ? View.VISIBLE : View.GONE);
  }
  if (doc.lastModified == -1) {
    date.setText(null);
  }
 else {
    date.setText(formatTime(context,doc.lastModified));
  }
  if (state.showSize) {
    size.setVisibility(View.VISIBLE);
    if (doc.isDirectory() || doc.size == -1) {
      size.setText(null);
    }
 else {
      size.setText(Formatter.formatFileSize(context,doc.size));
    }
  }
 else {
    size.setVisibility(View.GONE);
  }
  return convertView;
}
