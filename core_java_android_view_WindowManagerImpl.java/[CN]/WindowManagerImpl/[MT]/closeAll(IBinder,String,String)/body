{
synchronized (this) {
    if (mViews == null)     return;
    int count=mViews.length;
    for (int i=0; i < count; i++) {
      if (token == null || mParams[i].token == token) {
        ViewAncestor root=mRoots[i];
        root.mAddNesting=1;
        if (who != null) {
          WindowLeaked leak=new WindowLeaked(what + " " + who+ " has leaked window "+ root.getView()+ " that was originally added here");
          leak.setStackTrace(root.getLocation().getStackTrace());
          Log.e("WindowManager",leak.getMessage(),leak);
        }
        removeViewLocked(i);
        i--;
        count--;
      }
    }
  }
}
