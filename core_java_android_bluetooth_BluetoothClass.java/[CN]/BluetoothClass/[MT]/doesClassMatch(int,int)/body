{
  if (profile == PROFILE_A2DP) {
    if (BluetoothClass.Service.hasService(btClass,BluetoothClass.Service.RENDER)) {
      return true;
    }
switch (BluetoothClass.Device.getDevice(btClass)) {
case BluetoothClass.Device.AUDIO_VIDEO_HIFI_AUDIO:
case BluetoothClass.Device.AUDIO_VIDEO_HEADPHONES:
case BluetoothClass.Device.AUDIO_VIDEO_LOUDSPEAKER:
case BluetoothClass.Device.AUDIO_VIDEO_CAR_AUDIO:
      return true;
default :
    return false;
}
}
 else if (profile == PROFILE_HEADSET) {
if (BluetoothClass.Service.hasService(btClass,BluetoothClass.Service.RENDER)) {
  return true;
}
switch (BluetoothClass.Device.getDevice(btClass)) {
case BluetoothClass.Device.AUDIO_VIDEO_HANDSFREE:
case BluetoothClass.Device.AUDIO_VIDEO_WEARABLE_HEADSET:
case BluetoothClass.Device.AUDIO_VIDEO_CAR_AUDIO:
  return true;
default :
return false;
}
}
 else if (profile == PROFILE_OPP) {
if (BluetoothClass.Service.hasService(btClass,BluetoothClass.Service.OBJECT_TRANSFER)) {
return true;
}
switch (BluetoothClass.Device.getDevice(btClass)) {
case BluetoothClass.Device.COMPUTER_UNCATEGORIZED:
case BluetoothClass.Device.COMPUTER_DESKTOP:
case BluetoothClass.Device.COMPUTER_SERVER:
case BluetoothClass.Device.COMPUTER_LAPTOP:
case BluetoothClass.Device.COMPUTER_HANDHELD_PC_PDA:
case BluetoothClass.Device.COMPUTER_PALM_SIZE_PC_PDA:
case BluetoothClass.Device.COMPUTER_WEARABLE:
case BluetoothClass.Device.PHONE_UNCATEGORIZED:
case BluetoothClass.Device.PHONE_CELLULAR:
case BluetoothClass.Device.PHONE_CORDLESS:
case BluetoothClass.Device.PHONE_SMART:
case BluetoothClass.Device.PHONE_MODEM_OR_GATEWAY:
case BluetoothClass.Device.PHONE_ISDN:
return true;
default :
return false;
}
}
 else {
return false;
}
}
