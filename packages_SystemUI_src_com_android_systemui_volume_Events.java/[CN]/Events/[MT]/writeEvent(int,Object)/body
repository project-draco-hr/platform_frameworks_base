{
  final long time=System.currentTimeMillis();
  final StringBuilder sb=new StringBuilder("writeEvent ").append(EVENT_TAGS[tag]);
  if (list != null && list.length > 0) {
    sb.append(" ");
switch (tag) {
case EVENT_SHOW_DIALOG:
      sb.append(SHOW_REASONS[(Integer)list[0]]).append(" keyguard=").append(list[1]);
    break;
case EVENT_EXPAND:
  sb.append(list[0]);
break;
case EVENT_DISMISS_DIALOG:
sb.append(DISMISS_REASONS[(Integer)list[0]]);
break;
case EVENT_ACTIVE_STREAM_CHANGED:
sb.append(AudioSystem.streamToString((Integer)list[0]));
break;
case EVENT_ICON_CLICK:
sb.append(AudioSystem.streamToString((Integer)list[0])).append(' ').append(iconStateToString((Integer)list[1]));
break;
case EVENT_TOUCH_LEVEL_CHANGED:
case EVENT_LEVEL_CHANGED:
case EVENT_MUTE_CHANGED:
sb.append(AudioSystem.streamToString((Integer)list[0])).append(' ').append(list[1]);
break;
case EVENT_INTERNAL_RINGER_MODE_CHANGED:
case EVENT_EXTERNAL_RINGER_MODE_CHANGED:
sb.append(ringerModeToString((Integer)list[0]));
break;
case EVENT_ZEN_MODE_CHANGED:
sb.append(zenModeToString((Integer)list[0]));
break;
case EVENT_SUPPRESSOR_CHANGED:
sb.append(list[0]).append(' ').append(list[1]);
break;
default :
sb.append(Arrays.asList(list));
break;
}
}
Log.i(TAG,sb.toString());
if (sCallback != null) {
sCallback.writeEvent(time,tag,list);
}
}
