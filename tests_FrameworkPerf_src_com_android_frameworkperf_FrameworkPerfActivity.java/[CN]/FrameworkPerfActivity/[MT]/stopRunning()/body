{
  if (mStarted) {
    disconnect();
    mStarted=false;
    mStartButton.setEnabled(true);
    mStopButton.setEnabled(false);
    mLocalCheckBox.setEnabled(true);
    mTestTime.setEnabled(true);
    mFgSpinner.setEnabled(true);
    mBgSpinner.setEnabled(true);
    mLimitSpinner.setEnabled(true);
    updateWakeLock();
    stopService(new Intent(this,SchedulerService.class));
synchronized (mResults) {
      Log.i("PerfRes","\tTEST\tFgOps\tFgMsPerOp\tFgTime\tFgName\tBgOps\tBgMsPerOp\t" + "BgTime\tBgName");
      for (int i=0; i < mResults.size(); i++) {
        RunResult result=mResults.get(i);
        float fgMsPerOp=result.getFgMsPerOp();
        float bgMsPerOp=result.getBgMsPerOp();
        String fgMsPerOpStr=fgMsPerOp != 0 ? Float.toString(fgMsPerOp) : "";
        String bgMsPerOpStr=bgMsPerOp != 0 ? Float.toString(bgMsPerOp) : "";
        Log.i("PerfRes","\t" + result.name + "\t"+ result.fgOps+ "\t"+ result.getFgMsPerOp()+ "\t"+ result.fgTime+ "\t"+ result.fgLongName+ "\t"+ result.bgOps+ "\t"+ result.getBgMsPerOp()+ "\t"+ result.bgTime+ "\t"+ result.bgLongName);
      }
    }
synchronized (mResultNotifier) {
      mResultNotifier.notifyAll();
    }
  }
}
