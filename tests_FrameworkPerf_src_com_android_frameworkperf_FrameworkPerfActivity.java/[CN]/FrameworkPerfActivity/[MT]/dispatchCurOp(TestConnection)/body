{
  if (mCurConnection != conn) {
    Log.w(TAG,"Dispatching on invalid connection: " + conn);
    return;
  }
  TestArgs args=new TestArgs();
  if (mLimitIsIterations) {
    args.maxOps=mMaxRunTime;
  }
 else {
    args.maxTime=mMaxRunTime;
  }
  if (mFgTestIndex == 0 && mBgTestIndex == 0) {
    args.combOp=mCurOpIndex;
  }
 else   if (mFgTestIndex != 0 && mBgTestIndex != 0) {
    args.fgOp=mFgTestIndex;
    args.bgOp=mBgTestIndex;
  }
 else {
    if (mCurOpIndex == 0) {
      mCurOpIndex=1;
    }
    if (mFgTestIndex != 0) {
      args.fgOp=mFgTestIndex;
      args.bgOp=mCurOpIndex;
    }
 else {
      args.fgOp=mCurOpIndex;
      args.bgOp=mFgTestIndex;
    }
  }
  Bundle bundle=new Bundle();
  bundle.putParcelable("args",args);
  Message msg=Message.obtain(null,TestService.CMD_START_TEST,bundle);
  msg.replyTo=mMessenger;
  try {
    conn.mService.send(msg);
  }
 catch (  RemoteException e) {
    Log.w(TAG,"Failure communicating with service",e);
  }
}
