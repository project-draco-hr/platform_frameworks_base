{
  final float finalAlpha=active ? mActiveAlpha : mInactiveAlpha;
  final float initAlpha=active ? mInactiveAlpha : mActiveAlpha;
  final float finalScale=active ? 1f : 1f / mActiveScale;
  final float initScale=mFramed.getScale();
  final int finalTextAlpha=active ? (int)(mActiveTextAlpha * 255) : (int)(mInactiveTextAlpha * 255);
  final int initTextAlpha=active ? (int)(mInactiveTextAlpha * 255) : (int)(mActiveTextAlpha * 255);
  int textColor=mTextColor;
  mUserName.setTextColor(textColor);
  if (animate && mTouched) {
    ValueAnimator va=ValueAnimator.ofFloat(0f,1f);
    va.addUpdateListener(new AnimatorUpdateListener(){
      @Override public void onAnimationUpdate(      ValueAnimator animation){
        float r=animation.getAnimatedFraction();
        float scale=(1 - r) * initScale + r * finalScale;
        float alpha=(1 - r) * initAlpha + r * finalAlpha;
        int textAlpha=(int)((1 - r) * initTextAlpha + r * finalTextAlpha);
        mFramed.setScale(scale);
        mUserImage.setAlpha(alpha);
        mUserName.setTextColor(Color.argb(textAlpha,255,255,255));
        mUserImage.invalidate();
      }
    }
);
    va.addListener(new AnimatorListenerAdapter(){
      @Override public void onAnimationEnd(      Animator animation){
        if (onComplete != null) {
          onComplete.run();
        }
      }
    }
);
    va.setDuration(duration);
    va.start();
  }
 else {
    mFramed.setScale(finalScale);
    mUserImage.setAlpha(finalAlpha);
    mUserName.setTextColor(Color.argb(finalTextAlpha,255,255,255));
    if (onComplete != null) {
      post(onComplete);
    }
  }
  mTouched=true;
}
