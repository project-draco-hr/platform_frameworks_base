{
  final int numColumns=getVirtualChildCount();
  if (mColumnWidths == null || numColumns != mColumnWidths.length) {
    mColumnWidths=new int[numColumns];
  }
  final int[] columnWidths=mColumnWidths;
  for (int i=0; i < numColumns; i++) {
    final View child=getVirtualChildAt(i);
    if (child != null && child.getVisibility() != GONE) {
      final LayoutParams layoutParams=(LayoutParams)child.getLayoutParams();
      if (layoutParams.span == 1) {
        int spec;
switch (layoutParams.width) {
case LayoutParams.WRAP_CONTENT:
          spec=getChildMeasureSpec(widthMeasureSpec,0,LayoutParams.WRAP_CONTENT);
        break;
case LayoutParams.MATCH_PARENT:
      spec=MeasureSpec.makeMeasureSpec(0,MeasureSpec.UNSPECIFIED);
    break;
default :
  spec=MeasureSpec.makeMeasureSpec(layoutParams.width,MeasureSpec.EXACTLY);
}
child.measure(spec,spec);
final int width=child.getMeasuredWidth() + layoutParams.leftMargin + layoutParams.rightMargin;
columnWidths[i]=width;
}
 else {
columnWidths[i]=0;
}
}
 else {
columnWidths[i]=0;
}
}
return columnWidths;
}
