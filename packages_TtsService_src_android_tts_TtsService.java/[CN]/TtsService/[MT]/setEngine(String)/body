{
  String soFilename="";
  if (isDefaultEnforced()) {
    enginePackageName=getDefaultEngine();
  }
  if (!enginePackageName.equals(DEFAULT_SYNTH)) {
    String[] enabledEngines=android.provider.Settings.Secure.getString(mResolver,android.provider.Settings.Secure.TTS_ENABLED_PLUGINS).split(" ");
    boolean isEnabled=false;
    for (int i=0; i < enabledEngines.length; i++) {
      if (enabledEngines[i].equals(enginePackageName)) {
        isEnabled=true;
        break;
      }
    }
    if (!isEnabled) {
      enginePackageName=DEFAULT_SYNTH;
    }
  }
  if (enginePackageName.equals(DEFAULT_SYNTH)) {
    soFilename="/system/lib/libttspico.so";
  }
 else {
    Intent intent=new Intent("android.intent.action.START_TTS_ENGINE");
    intent.setPackage(enginePackageName);
    ResolveInfo[] enginesArray=new ResolveInfo[0];
    PackageManager pm=getPackageManager();
    List<ResolveInfo> resolveInfos=pm.queryIntentActivities(intent,0);
    if ((resolveInfos == null) || resolveInfos.isEmpty()) {
      Log.e(SERVICE_TAG,"Invalid TTS Engine Package: " + enginePackageName);
      return TextToSpeech.ERROR;
    }
    enginesArray=resolveInfos.toArray(enginesArray);
    ActivityInfo aInfo=enginesArray[0].activityInfo;
    soFilename=aInfo.name.replace(aInfo.packageName + ".","") + ".so";
    soFilename=soFilename.toLowerCase();
    soFilename="/data/data/" + aInfo.packageName + "/lib/libtts"+ soFilename;
  }
  if (currentSpeechEngineSOFile.equals(soFilename)) {
    return TextToSpeech.SUCCESS;
  }
  File f=new File(soFilename);
  if (!f.exists()) {
    Log.e(SERVICE_TAG,"Invalid TTS Binary: " + soFilename);
    return TextToSpeech.ERROR;
  }
  if (sNativeSynth != null) {
    sNativeSynth.stopSync();
    sNativeSynth.shutdown();
    sNativeSynth=null;
  }
  sNativeSynth=new SynthProxy(soFilename,"");
  currentSpeechEngineSOFile=soFilename;
  return TextToSpeech.SUCCESS;
}
