{
  if (DEBUG_AUDIO) {
    Slog.d(TAG,"usb:UsbHostManager.beginUsbDeviceAdded(" + deviceName + ")");
    Slog.d(TAG,"usb:UsbHostManager.usbDeviceAdded()");
    Slog.d(TAG,"usb: nm:" + deviceName + " vnd:"+ vendorID+ " prd:"+ productID+ " cls:"+ deviceClass+ " sub:"+ deviceSubclass+ " proto:"+ deviceProtocol);
  }
  if (!isBuiltInUsbDevice(deviceName)) {
    com.android.alsascan.AlsaDevicesParser devicesParser=new com.android.alsascan.AlsaDevicesParser();
    devicesParser.scan();
    boolean hasPlaybackDevices=devicesParser.hasPlaybackDevices();
    boolean hasCaptureDevices=devicesParser.hasCaptureDevices();
    boolean hasMIDI=devicesParser.hasMIDIDevices();
    if (DEBUG_AUDIO) {
      Slog.d(TAG,"usb: hasPlayback:" + hasPlaybackDevices + " hasCapture:"+ hasCaptureDevices);
    }
    int cardNum=1;
    int deviceNum=0;
    sendDeviceNotification(cardNum,deviceNum,true,hasPlaybackDevices,hasCaptureDevices,hasMIDI);
  }
  if (isBlackListed(deviceName) || isBlackListed(deviceClass,deviceSubclass,deviceProtocol)) {
    return false;
  }
synchronized (mLock) {
    if (mDevices.get(deviceName) != null) {
      Slog.w(TAG,"device already on mDevices list: " + deviceName);
      return false;
    }
    if (mNewDevice != null) {
      Slog.e(TAG,"mNewDevice is not null in endUsbDeviceAdded");
      return false;
    }
    mNewDevice=new UsbDevice(deviceName,vendorID,productID,deviceClass,deviceSubclass,deviceProtocol,manufacturerName,productName,serialNumber);
    mNewConfigurations=new ArrayList<UsbConfiguration>();
    mNewInterfaces=new ArrayList<UsbInterface>();
    mNewEndpoints=new ArrayList<UsbEndpoint>();
  }
  return true;
}
