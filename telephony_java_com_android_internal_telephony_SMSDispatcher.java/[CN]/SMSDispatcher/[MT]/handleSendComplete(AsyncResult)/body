{
  SmsTracker tracker=(SmsTracker)ar.userObj;
  PendingIntent sentIntent=tracker.mSentIntent;
  if (ar.exception == null) {
    if (Config.LOGD) {
      Log.d(TAG,"SMS send complete. Broadcasting " + "intent: " + sentIntent);
    }
    if (tracker.mDeliveryIntent != null) {
      int messageRef=((SmsResponse)ar.result).messageRef;
      tracker.mMessageRef=messageRef;
      deliveryPendingList.add(tracker);
    }
    if (sentIntent != null) {
      try {
        sentIntent.send(Activity.RESULT_OK);
      }
 catch (      CanceledException ex) {
      }
    }
  }
 else {
    if (Config.LOGD) {
      Log.d(TAG,"SMS send failed");
    }
    int ss=mPhone.getServiceState().getState();
    if (ss != ServiceState.STATE_IN_SERVICE) {
      handleNotInService(ss,tracker);
    }
 else     if ((((CommandException)(ar.exception)).getCommandError() == CommandException.Error.SMS_FAIL_RETRY) && tracker.mRetryCount < MAX_SEND_RETRIES) {
      tracker.mRetryCount++;
      Message retryMsg=obtainMessage(EVENT_SEND_RETRY,tracker);
      sendMessageDelayed(retryMsg,SEND_RETRY_DELAY);
    }
 else     if (tracker.mSentIntent != null) {
      try {
        Intent fillIn=new Intent();
        if (ar.result != null) {
          fillIn.putExtra("errorCode",((SmsResponse)ar.result).errorCode);
        }
        tracker.mSentIntent.send(mContext,RESULT_ERROR_GENERIC_FAILURE,fillIn);
      }
 catch (      CanceledException ex) {
      }
    }
  }
}
