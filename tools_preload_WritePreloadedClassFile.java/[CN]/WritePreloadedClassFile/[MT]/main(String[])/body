{
  if (args.length != 1) {
    System.err.println("Usage: WritePreloadedClassFile [compiled log]");
    System.exit(-1);
  }
  String rootFile=args[0];
  Root root=Root.fromFile(rootFile);
  for (  LoadedClass loadedClass : root.loadedClasses.values()) {
    loadedClass.preloaded=false;
  }
  Writer out=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(Policy.getPreloadedClassFileName()),Charset.forName("US-ASCII")));
  out.write("# Classes which are preloaded by com.android.internal.os.ZygoteInit.\n");
  out.write("# Automatically generated by /frameworks/base/tools/preload.\n");
  out.write("# percent=" + Proc.PERCENTAGE_TO_PRELOAD + ", weight="+ ClassRank.SEQUENCE_WEIGHT+ ", bucket_size="+ ClassRank.BUCKET_SIZE+ "\n");
  Set<LoadedClass> toPreload=new TreeSet<LoadedClass>();
  for (  LoadedClass loadedClass : root.loadedClasses.values()) {
    if (!loadedClass.isPreloadable()) {
      continue;
    }
    Set<String> appNames=loadedClass.applicationNames();
    if (appNames.size() > 3) {
      toPreload.add(loadedClass);
    }
  }
  for (  Proc proc : root.processes.values()) {
    toPreload.addAll(proc.highestRankedClasses());
  }
  System.out.println(toPreload.size() + " classes will be preloaded.");
  addAllClassesFor("zygote",root,toPreload);
  for (  LoadedClass loadedClass : toPreload) {
    out.write(loadedClass.name);
    out.write('\n');
  }
  out.close();
  for (  LoadedClass loadedClass : toPreload) {
    loadedClass.preloaded=true;
  }
  root.toFile(rootFile);
}
