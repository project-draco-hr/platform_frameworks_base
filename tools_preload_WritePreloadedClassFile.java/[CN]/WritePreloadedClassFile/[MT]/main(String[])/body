{
  List<String> wiredProcesses=new ArrayList<String>();
  String inputFileName=null;
  int argOffset=0;
  try {
    while ("--preload-all-process".equals(args[argOffset])) {
      argOffset++;
      wiredProcesses.add(args[argOffset++]);
    }
    inputFileName=args[argOffset++];
  }
 catch (  RuntimeException e) {
    System.err.println("Usage: WritePreloadedClassFile " + "[--preload-all-process process-name] " + "[compiled log file]");
    System.exit(0);
  }
  Root root=Root.fromFile(inputFileName);
  for (  LoadedClass loadedClass : root.loadedClasses.values()) {
    loadedClass.preloaded=false;
  }
  Writer out=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(Policy.getPreloadedClassFileName()),Charset.forName("US-ASCII")));
  out.write("# Classes which are preloaded by com.android.internal.os.ZygoteInit.\n");
  out.write("# Automatically generated by /frameworks/base/tools/preload.\n");
  out.write("# percent=" + Proc.PERCENTAGE_TO_PRELOAD + ", weight="+ ClassRank.SEQUENCE_WEIGHT+ ", bucket_size="+ ClassRank.BUCKET_SIZE+ "\n");
  for (  String wiredProcess : wiredProcesses) {
    out.write("# forcing classes loaded by: " + wiredProcess + "\n");
  }
  Set<LoadedClass> highestRanked=new TreeSet<LoadedClass>();
  for (  Proc proc : root.processes.values()) {
    boolean isWired=wiredProcesses.contains(proc.name);
    List<LoadedClass> highestForProc=proc.highestRankedClasses(isWired);
    System.out.println(proc.name + ": " + highestForProc.size());
    for (    LoadedClass loadedClass : highestForProc) {
      loadedClass.preloaded=true;
    }
    highestRanked.addAll(highestForProc);
  }
  for (  LoadedClass loadedClass : highestRanked) {
    out.write(loadedClass.name);
    out.write('\n');
  }
  out.close();
  System.out.println(highestRanked.size() + " classes will be preloaded.");
  root.toFile(inputFileName);
}
