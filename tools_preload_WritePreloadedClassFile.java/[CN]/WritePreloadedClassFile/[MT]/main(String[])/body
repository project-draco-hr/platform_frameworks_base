{
  if (args.length != 1) {
    System.err.println("Usage: WritePreloadedClassFile [compiled log]");
    System.exit(-1);
  }
  String rootFile=args[0];
  Root root=Root.fromFile(rootFile);
  for (  LoadedClass loadedClass : root.loadedClasses.values()) {
    loadedClass.preloaded=false;
  }
  Writer out=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(Policy.PRELOADED_CLASS_FILE),Charset.forName("US-ASCII")));
  out.write("# Classes which are preloaded by" + " com.android.internal.os.ZygoteInit.\n");
  out.write("# Automatically generated by frameworks/base/tools/preload/" + WritePreloadedClassFile.class.getSimpleName() + ".java.\n");
  out.write("# MIN_LOAD_TIME_MICROS=" + MIN_LOAD_TIME_MICROS + "\n");
  Set<LoadedClass> toPreload=new TreeSet<LoadedClass>();
  for (  LoadedClass loadedClass : root.loadedClasses.values()) {
    Set<String> names=loadedClass.processNames();
    if (shouldPreload(loadedClass) && names.size() > 1) {
      toPreload.add(loadedClass);
    }
  }
  int initialSize=toPreload.size();
  System.out.println(initialSize + " classses were loaded by more than one app.");
  for (  Proc proc : root.processes.values()) {
    if (proc.fromZygote() && !Policy.isService(proc.name)) {
      for (      Operation operation : proc.operations) {
        LoadedClass loadedClass=operation.loadedClass;
        if (shouldPreload(loadedClass)) {
          toPreload.add(loadedClass);
        }
      }
    }
  }
  System.out.println("Added " + (toPreload.size() - initialSize) + " more to speed up applications.");
  System.out.println(toPreload.size() + " total classes will be preloaded.");
  addAllClassesFrom("zygote",root,toPreload);
  for (  LoadedClass loadedClass : toPreload) {
    out.write(loadedClass.name + "\n");
  }
  out.close();
  for (  LoadedClass loadedClass : toPreload) {
    loadedClass.preloaded=true;
  }
  root.toFile(rootFile);
}
