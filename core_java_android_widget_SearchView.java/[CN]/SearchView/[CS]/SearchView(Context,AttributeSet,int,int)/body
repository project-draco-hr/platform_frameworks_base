{
  super(context,attrs,defStyleAttr,defStyleRes);
  final TypedArray a=context.obtainStyledAttributes(attrs,R.styleable.SearchView,defStyleAttr,defStyleRes);
  final LayoutInflater inflater=(LayoutInflater)context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
  final int layoutResId=a.getResourceId(R.styleable.SearchView_layout,R.layout.search_view);
  inflater.inflate(layoutResId,this,true);
  mSearchSrcTextView=(SearchAutoComplete)findViewById(R.id.search_src_text);
  mSearchSrcTextView.setSearchView(this);
  mSearchEditFrame=findViewById(R.id.search_edit_frame);
  mSearchPlate=findViewById(R.id.search_plate);
  mSubmitArea=findViewById(R.id.submit_area);
  mSearchButton=(ImageView)findViewById(R.id.search_button);
  mGoButton=(ImageView)findViewById(R.id.search_go_btn);
  mCloseButton=(ImageView)findViewById(R.id.search_close_btn);
  mVoiceButton=(ImageView)findViewById(R.id.search_voice_btn);
  mCollapsedIcon=(ImageView)findViewById(R.id.search_mag_icon);
  mSearchPlate.setBackground(a.getDrawable(R.styleable.SearchView_queryBackground));
  mSubmitArea.setBackground(a.getDrawable(R.styleable.SearchView_submitBackground));
  mSearchButton.setImageDrawable(a.getDrawable(R.styleable.SearchView_searchIcon));
  mGoButton.setImageDrawable(a.getDrawable(R.styleable.SearchView_goIcon));
  mCloseButton.setImageDrawable(a.getDrawable(R.styleable.SearchView_closeIcon));
  mVoiceButton.setImageDrawable(a.getDrawable(R.styleable.SearchView_voiceIcon));
  mCollapsedIcon.setImageDrawable(a.getDrawable(R.styleable.SearchView_searchIcon));
  if (a.hasValueOrEmpty(R.styleable.SearchView_searchHintIcon)) {
    mSearchHintIcon=a.getDrawable(R.styleable.SearchView_searchHintIcon);
  }
 else {
    mSearchHintIcon=a.getDrawable(R.styleable.SearchView_searchIcon);
  }
  mSuggestionRowLayout=a.getResourceId(R.styleable.SearchView_suggestionRowLayout,R.layout.search_dropdown_item_icons_2line);
  mSuggestionCommitIconResId=a.getResourceId(R.styleable.SearchView_commitIcon,0);
  mSearchButton.setOnClickListener(mOnClickListener);
  mCloseButton.setOnClickListener(mOnClickListener);
  mGoButton.setOnClickListener(mOnClickListener);
  mVoiceButton.setOnClickListener(mOnClickListener);
  mSearchSrcTextView.setOnClickListener(mOnClickListener);
  mSearchSrcTextView.addTextChangedListener(mTextWatcher);
  mSearchSrcTextView.setOnEditorActionListener(mOnEditorActionListener);
  mSearchSrcTextView.setOnItemClickListener(mOnItemClickListener);
  mSearchSrcTextView.setOnItemSelectedListener(mOnItemSelectedListener);
  mSearchSrcTextView.setOnKeyListener(mTextKeyListener);
  mSearchSrcTextView.setOnFocusChangeListener(new OnFocusChangeListener(){
    public void onFocusChange(    View v,    boolean hasFocus){
      if (mOnQueryTextFocusChangeListener != null) {
        mOnQueryTextFocusChangeListener.onFocusChange(SearchView.this,hasFocus);
      }
    }
  }
);
  setIconifiedByDefault(a.getBoolean(R.styleable.SearchView_iconifiedByDefault,true));
  final int maxWidth=a.getDimensionPixelSize(R.styleable.SearchView_maxWidth,-1);
  if (maxWidth != -1) {
    setMaxWidth(maxWidth);
  }
  mDefaultQueryHint=a.getText(R.styleable.SearchView_defaultQueryHint);
  mQueryHint=a.getText(R.styleable.SearchView_queryHint);
  final int imeOptions=a.getInt(R.styleable.SearchView_imeOptions,-1);
  if (imeOptions != -1) {
    setImeOptions(imeOptions);
  }
  final int inputType=a.getInt(R.styleable.SearchView_inputType,-1);
  if (inputType != -1) {
    setInputType(inputType);
  }
  boolean focusable=true;
  focusable=a.getBoolean(R.styleable.SearchView_focusable,focusable);
  setFocusable(focusable);
  a.recycle();
  mVoiceWebSearchIntent=new Intent(RecognizerIntent.ACTION_WEB_SEARCH);
  mVoiceWebSearchIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
  mVoiceWebSearchIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,RecognizerIntent.LANGUAGE_MODEL_WEB_SEARCH);
  mVoiceAppSearchIntent=new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
  mVoiceAppSearchIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
  mDropDownAnchor=findViewById(mSearchSrcTextView.getDropDownAnchor());
  if (mDropDownAnchor != null) {
    mDropDownAnchor.addOnLayoutChangeListener(new OnLayoutChangeListener(){
      @Override public void onLayoutChange(      View v,      int left,      int top,      int right,      int bottom,      int oldLeft,      int oldTop,      int oldRight,      int oldBottom){
        adjustDropDownSizeAndPosition();
      }
    }
);
  }
  updateViewsVisibility(mIconifiedByDefault);
  updateQueryHint();
}
