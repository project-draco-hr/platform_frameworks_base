{
  for (  PropertyNode propertyNode : vnode.propList) {
    String propName=propertyNode.propName;
    List<PropertyNode> nodes=mPropertyNodeMap.get(propName);
    if (nodes == null) {
      fail("Unexpected propName \"" + propName + "\" exists.");
    }
    boolean successful=false;
    int size=nodes.size();
    for (int i=0; i < size; i++) {
      PropertyNode expectedNode=nodes.get(i);
      if (expectedNode.propName.equals(propName)) {
        if (expectedNode.equals(propertyNode)) {
          successful=true;
          nodes.remove(i);
          if (nodes.size() == 0) {
            mPropertyNodeMap.remove(propName);
          }
          break;
        }
 else {
          fail("Property \"" + propName + "\" has wrong value.\n"+ "expected: "+ expectedNode.toString()+ "\n  actual: "+ propertyNode.toString());
        }
      }
    }
    if (!successful) {
      fail("Unexpected property \"" + propName + "\" exists.");
    }
  }
  if (mPropertyNodeMap.size() != 0) {
    List<String> expectedProps=new ArrayList<String>();
    for (    List<PropertyNode> nodes : mPropertyNodeMap.values()) {
      for (      PropertyNode node : nodes) {
        expectedProps.add(node.propName);
      }
    }
    fail("expected props " + Arrays.toString(expectedProps.toArray()) + " was not found");
  }
}
