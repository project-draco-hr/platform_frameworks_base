{
  if (mContext.checkCallingOrSelfPermission(android.Manifest.permission.DUMP) != PackageManager.PERMISSION_GRANTED) {
    pw.println("Permission Denial: can't dump UserManager from from pid=" + Binder.getCallingPid() + ", uid="+ Binder.getCallingUid()+ " without permission "+ android.Manifest.permission.DUMP);
    return;
  }
  long now=System.currentTimeMillis();
  StringBuilder sb=new StringBuilder();
synchronized (mPackagesLock) {
    pw.println("Users:");
    for (int i=0; i < mUsers.size(); i++) {
      UserInfo user=mUsers.valueAt(i);
      if (user == null)       continue;
      pw.print("  ");
      pw.print(user);
      pw.print(" serialNo=");
      pw.print(user.serialNumber);
      if (mRemovingUserIds.contains(mUsers.keyAt(i)))       pw.print(" <removing> ");
      if (user.partial)       pw.print(" <partial>");
      pw.println();
      pw.print("    Created: ");
      if (user.creationTime == 0) {
        pw.println("<unknown>");
      }
 else {
        sb.setLength(0);
        TimeUtils.formatDuration(now - user.creationTime,sb);
        sb.append(" ago");
        pw.println(sb);
      }
      pw.print("    Last logged in: ");
      if (user.lastLoggedInTime == 0) {
        pw.println("<unknown>");
      }
 else {
        sb.setLength(0);
        TimeUtils.formatDuration(now - user.lastLoggedInTime,sb);
        sb.append(" ago");
        pw.println(sb);
      }
    }
  }
}
