{
  FileOutputStream fos=null;
  AtomicFile restrictionsFile=new AtomicFile(new File(Environment.getUserSystemDirectory(userId),RESTRICTIONS_FILE_PREFIX + packageName + ".xml"));
  try {
    fos=restrictionsFile.startWrite();
    final BufferedOutputStream bos=new BufferedOutputStream(fos);
    final XmlSerializer serializer=new FastXmlSerializer();
    serializer.setOutput(bos,"utf-8");
    serializer.startDocument(null,true);
    serializer.setFeature("http://xmlpull.org/v1/doc/features.html#indent-output",true);
    serializer.startTag(null,TAG_RESTRICTIONS);
    for (    RestrictionEntry entry : entries) {
      serializer.startTag(null,TAG_ENTRY);
      serializer.attribute(null,ATTR_KEY,entry.key);
      if (entry.getStringValue() != null || entry.getMultipleValues() == null) {
        String value=entry.getStringValue();
        serializer.text(value != null ? value : "");
      }
 else {
        String[] values=entry.getMultipleValues();
        serializer.attribute(null,ATTR_MULTIPLE,Integer.toString(values.length));
        for (        String value : values) {
          serializer.startTag(null,TAG_VALUE);
          serializer.text(value != null ? value : "");
          serializer.endTag(null,TAG_VALUE);
        }
      }
      serializer.endTag(null,TAG_ENTRY);
    }
    serializer.endTag(null,TAG_RESTRICTIONS);
    serializer.endDocument();
    restrictionsFile.finishWrite(fos);
  }
 catch (  Exception e) {
    restrictionsFile.failWrite(fos);
    Slog.e(LOG_TAG,"Error writing application restrictions list");
  }
}
