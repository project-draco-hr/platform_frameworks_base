{
  super.onCreate(savedInstanceState);
  Intent intentReceived=getIntent();
  String className=intentReceived.getComponent().getClassName();
  final UserHandle userDest;
  if (className.equals(FORWARD_INTENT_TO_USER_OWNER)) {
    userDest=UserHandle.OWNER;
  }
 else   if (className.equals(FORWARD_INTENT_TO_MANAGED_PROFILE)) {
    userDest=getManagedProfile();
  }
 else {
    Slog.wtf(TAG,IntentForwarderActivity.class.getName() + " cannot be called directly");
    userDest=null;
  }
  if (userDest == null) {
    finish();
    return;
  }
  Intent newIntent=new Intent(intentReceived);
  newIntent.setComponent(null);
  newIntent.addFlags(Intent.FLAG_ACTIVITY_FORWARD_RESULT | Intent.FLAG_ACTIVITY_PREVIOUS_IS_TOP);
  int callingUserId=getUserId();
  IPackageManager ipm=AppGlobals.getPackageManager();
  String resolvedType=newIntent.resolveTypeIfNeeded(getContentResolver());
  boolean canForward=false;
  try {
    canForward=ipm.canForwardTo(newIntent,resolvedType,callingUserId,userDest.getIdentifier());
  }
 catch (  RemoteException e) {
    Slog.e(TAG,"PackageManagerService is dead?");
  }
  if (canForward) {
    newIntent.prepareToLeaveUser(callingUserId);
    startActivityAsUser(newIntent,userDest);
  }
 else {
    Slog.wtf(TAG,"the intent: " + newIntent + "cannot be forwarded from user "+ callingUserId+ " to user "+ userDest.getIdentifier());
  }
  finish();
}
