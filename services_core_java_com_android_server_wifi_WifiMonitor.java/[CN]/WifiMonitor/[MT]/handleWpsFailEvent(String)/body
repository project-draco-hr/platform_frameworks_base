{
  final Pattern p=Pattern.compile(WPS_FAIL_PATTERN);
  Matcher match=p.matcher(dataString);
  if (match.find()) {
    String cfgErr=match.group(1);
    String reason=match.group(2);
    if (reason != null) {
switch (Integer.parseInt(reason)) {
case REASON_TKIP_ONLY_PROHIBITED:
        mStateMachine.sendMessage(mStateMachine.obtainMessage(WPS_FAIL_EVENT,WifiManager.WPS_TKIP_ONLY_PROHIBITED,0));
      return;
case REASON_WEP_PROHIBITED:
    mStateMachine.sendMessage(mStateMachine.obtainMessage(WPS_FAIL_EVENT,WifiManager.WPS_WEP_PROHIBITED,0));
  return;
}
}
if (cfgErr != null) {
switch (Integer.parseInt(cfgErr)) {
case CONFIG_AUTH_FAILURE:
mStateMachine.sendMessage(mStateMachine.obtainMessage(WPS_FAIL_EVENT,WifiManager.WPS_AUTH_FAILURE,0));
return;
case CONFIG_MULTIPLE_PBC_DETECTED:
mStateMachine.sendMessage(mStateMachine.obtainMessage(WPS_FAIL_EVENT,WifiManager.WPS_OVERLAP_ERROR,0));
return;
}
}
}
mStateMachine.sendMessage(mStateMachine.obtainMessage(WPS_FAIL_EVENT,WifiManager.ERROR,0));
}
