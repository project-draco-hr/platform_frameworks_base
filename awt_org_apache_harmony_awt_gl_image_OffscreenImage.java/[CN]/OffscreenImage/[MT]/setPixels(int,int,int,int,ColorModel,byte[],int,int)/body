{
  if (raster == null) {
    if (cm == null) {
      if (model == null) {
        throw new NullPointerException(Messages.getString("awt.3A"));
      }
      cm=model;
    }
    createRaster();
  }
  if (model == null) {
    model=cm;
  }
  if (model != cm) {
    forceToIntARGB();
  }
  if (isIntRGB) {
    int buff[]=new int[w];
    IndexColorModel icm=(IndexColorModel)model;
    int colorMap[]=new int[icm.getMapSize()];
    icm.getRGBs(colorMap);
    DataBufferInt dbi=(DataBufferInt)raster.getDataBuffer();
    int data[]=dbi.getData();
    int scanline=raster.getWidth();
    int rof=dbi.getOffset() + y * scanline + x;
    if (model instanceof IndexColorModel) {
      for (int sy=y, sOff=off; sy < y + h; sy++, sOff+=scansize, rof+=scanline) {
        for (int sx=x, idx=0; sx < x + w; sx++, idx++) {
          buff[idx]=colorMap[pixels[sOff + idx] & 0xff];
        }
        System.arraycopy(buff,0,data,rof,w);
      }
    }
 else {
      for (int sy=y, sOff=off; sy < y + h; sy++, sOff+=scansize, rof+=scanline) {
        for (int sx=x, idx=0; sx < x + w; sx++, idx++) {
          buff[idx]=model.getRGB(pixels[sOff + idx] & 0xff);
        }
        System.arraycopy(buff,0,data,rof,w);
      }
    }
  }
 else   if (model == cm && model.getTransferType() == DataBuffer.TYPE_BYTE && raster.getNumDataElements() == 1) {
    DataBufferByte dbb=(DataBufferByte)raster.getDataBuffer();
    byte data[]=dbb.getData();
    int scanline=raster.getWidth();
    int rof=dbb.getOffset() + y * scanline + x;
    for (int lineOff=off, line=y; line < y + h; line++, lineOff+=scansize, rof+=scanline) {
      System.arraycopy(pixels,lineOff,data,rof,w);
    }
  }
 else   if (model == cm && model.getTransferType() == DataBuffer.TYPE_BYTE && cm instanceof ComponentColorModel) {
    int nc=cm.getNumComponents();
    byte stride[]=new byte[scansize];
    for (int sy=y, sOff=off; sy < y + h; sy++, sOff+=scansize) {
      System.arraycopy(pixels,sOff,stride,0,scansize);
      raster.setDataElements(x,sy,w,1,stride);
    }
  }
 else {
    for (int sy=y, sOff=off; sy < y + h; sy++, sOff+=scansize) {
      for (int sx=x, idx=0; sx < x + w; sx++, idx++) {
        int rgb=model.getRGB(pixels[sOff + idx] & 0xff);
        raster.setDataElements(sx,sy,cm.getDataElements(rgb,null));
      }
    }
  }
  if (imageSurf != null) {
    imageSurf.invalidate();
  }
  imageUpdate(this,ImageObserver.SOMEBITS,0,0,width,height);
}
