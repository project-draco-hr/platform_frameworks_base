{
  int w=raster.getWidth();
  int h=raster.getHeight();
  WritableRaster destRaster=rgbCM.createCompatibleWritableRaster(w,h);
  Object obj=null;
  int pixels[]=new int[w];
  if (cm instanceof IndexColorModel) {
    IndexColorModel icm=(IndexColorModel)cm;
    int colorMap[]=new int[icm.getMapSize()];
    icm.getRGBs(colorMap);
    for (int y=0; y < h; y++) {
      obj=raster.getDataElements(0,y,w,1,obj);
      byte ba[]=(byte[])obj;
      for (int x=0; x < ba.length; x++) {
        pixels[x]=colorMap[ba[x] & 0xff];
      }
      destRaster.setDataElements(0,y,w,1,pixels);
    }
  }
 else {
    for (int y=0; y < h; y++) {
      for (int x=0; x < w; x++) {
        obj=raster.getDataElements(x,y,obj);
        pixels[x]=cm.getRGB(obj);
      }
      destRaster.setDataElements(0,y,w,1,pixels);
    }
  }
synchronized (this) {
    if (imageSurf != null) {
      imageSurf.dispose();
      imageSurf=null;
    }
    if (image != null) {
      image.flush();
      image=null;
    }
    cm=rgbCM;
    raster=destRaster;
    isIntRGB=true;
  }
}
