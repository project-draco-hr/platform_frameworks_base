{
  boolean done=false;
  if (mPlayingState == STOPPED) {
    mPlayingState=RUNNING;
    mStartTime=currentTime;
  }
switch (mPlayingState) {
case RUNNING:
    float fraction=(float)(currentTime - mStartTime) / mDuration;
  if (fraction >= 1f) {
    if (mCurrentIteration < mRepeatCount || mRepeatCount == INFINITE) {
      if (mListeners != null) {
        for (        AnimatableListener listener : mListeners) {
          listener.onAnimationRepeat(this);
        }
      }
      ++mCurrentIteration;
      if (mRepeatMode == REVERSE) {
        mPlayingBackwards=mPlayingBackwards ? false : true;
      }
      fraction=fraction - 1f;
      mStartTime+=mDuration;
    }
 else {
      done=true;
      fraction=Math.min(fraction,1.0f);
    }
  }
if (mPlayingBackwards) {
  fraction=1f - fraction;
}
animateValue(fraction);
break;
case ENDED:
if (mRepeatCount > 0 && (mRepeatCount & 0x01) == 1) {
animateValue(0f);
}
 else {
animateValue(1f);
}
case CANCELED:
done=true;
break;
}
return done;
}
