{
  int initialScrollX=-1;
  int initialScrollY=-1;
  final int action=event.getAction();
  final boolean isMouse=event.isFromSource(InputDevice.SOURCE_MOUSE);
  if (action == MotionEvent.ACTION_UP) {
    initialScrollX=Touch.getInitialScrollX(widget,buffer);
    initialScrollY=Touch.getInitialScrollY(widget,buffer);
  }
  boolean wasTouchSelecting=isTouchSelecting(isMouse,buffer);
  boolean handled=Touch.onTouchEvent(widget,buffer,event);
  if (widget.didTouchFocusSelect() && !isMouse) {
    return handled;
  }
  if (action == MotionEvent.ACTION_DOWN) {
    if (isMouse || isTouchSelecting(isMouse,buffer)) {
      if (!widget.isFocused()) {
        if (!widget.requestFocus()) {
          return handled;
        }
      }
      int offset=widget.getOffsetForPosition(event.getX(),event.getY());
      buffer.setSpan(LAST_TAP_DOWN,offset,offset,Spannable.SPAN_POINT_POINT);
      widget.getParent().requestDisallowInterceptTouchEvent(true);
    }
  }
 else   if (widget.isFocused()) {
    if (action == MotionEvent.ACTION_MOVE) {
      final int startOffset=buffer.getSpanStart(LAST_TAP_DOWN);
      if (isMouse && Touch.isSelectionStarted(buffer)) {
        Selection.setSelection(buffer,startOffset);
      }
      if (isTouchSelecting(isMouse,buffer) && handled) {
        widget.cancelLongPress();
        final int offset=widget.getOffsetForPosition(event.getX(),event.getY());
        Selection.setSelection(buffer,Math.min(startOffset,offset),Math.max(startOffset,offset));
        return true;
      }
    }
 else     if (action == MotionEvent.ACTION_UP) {
      if ((initialScrollY >= 0 && initialScrollY != widget.getScrollY()) || (initialScrollX >= 0 && initialScrollX != widget.getScrollX())) {
        widget.moveCursorToVisibleOffset();
        return true;
      }
      if (wasTouchSelecting) {
        final int startOffset=buffer.getSpanStart(LAST_TAP_DOWN);
        final int endOffset=widget.getOffsetForPosition(event.getX(),event.getY());
        Selection.setSelection(buffer,Math.min(startOffset,endOffset),Math.max(startOffset,endOffset));
        buffer.removeSpan(LAST_TAP_DOWN);
      }
      MetaKeyKeyListener.adjustMetaAfterKeypress(buffer);
      MetaKeyKeyListener.resetLockedMeta(buffer);
      return true;
    }
  }
  return handled;
}
