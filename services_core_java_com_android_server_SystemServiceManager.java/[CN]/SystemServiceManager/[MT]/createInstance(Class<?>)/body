{
  if (!SystemService.class.isAssignableFrom(clazz)) {
    reportWtf("Class " + clazz.getName() + " does not extend "+ SystemService.class.getName());
  }
  try {
    return (SystemService)clazz.newInstance();
  }
 catch (  InstantiationException e) {
    reportWtf("Class " + clazz.getName() + " is abstract",e);
  }
catch (  IllegalAccessException e) {
    reportWtf("Class " + clazz.getName() + " must have a public no-arg constructor",e);
  }
  return null;
}
