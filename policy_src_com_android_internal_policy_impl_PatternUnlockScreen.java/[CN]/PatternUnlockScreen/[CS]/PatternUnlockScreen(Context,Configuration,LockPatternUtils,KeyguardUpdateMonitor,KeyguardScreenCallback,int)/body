{
  super(context);
  mLockPatternUtils=lockPatternUtils;
  mUpdateMonitor=updateMonitor;
  mCallback=callback;
  mTotalFailedPatternAttempts=totalFailedAttempts;
  mFailedPatternAttemptsSinceLastTimeout=totalFailedAttempts % LockPatternUtils.FAILED_ATTEMPTS_BEFORE_TIMEOUT;
  if (DEBUG)   Log.d(TAG,"UnlockScreen() ctor: totalFailedAttempts=" + totalFailedAttempts + ", mFailedPat...="+ mFailedPatternAttemptsSinceLastTimeout);
  mCreationOrientation=configuration.orientation;
  LayoutInflater inflater=LayoutInflater.from(context);
  if (mCreationOrientation != Configuration.ORIENTATION_LANDSCAPE) {
    Log.d(TAG,"portrait mode");
    inflater.inflate(R.layout.keyguard_screen_unlock_portrait,this,true);
  }
 else {
    Log.d(TAG,"landscape mode");
    inflater.inflate(R.layout.keyguard_screen_unlock_landscape,this,true);
  }
  mKeyguardStatusViewManager=new KeyguardStatusViewManager(this,mUpdateMonitor,mLockPatternUtils,mCallback);
  mLockPatternView=(LockPatternView)findViewById(R.id.lockPattern);
  mForgotPatternButton=(Button)findViewById(R.id.forgotPatternButton);
  mForgotPatternButton.setText(R.string.lockscreen_forgot_pattern_button_text);
  mForgotPatternButton.setOnClickListener(mForgotPatternClick);
  setDefaultTouchRecepient(mLockPatternView);
  mLockPatternView.setSaveEnabled(false);
  mLockPatternView.setFocusable(false);
  mLockPatternView.setOnPatternListener(new UnlockPatternListener());
  mLockPatternView.setInStealthMode(!mLockPatternUtils.isVisiblePatternEnabled());
  mLockPatternView.setTactileFeedbackEnabled(mLockPatternUtils.isTactileFeedbackEnabled());
  updateFooter(FooterMode.Normal);
  setFocusableInTouchMode(true);
}
