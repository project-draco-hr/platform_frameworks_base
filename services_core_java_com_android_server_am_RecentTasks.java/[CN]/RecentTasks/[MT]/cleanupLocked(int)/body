{
  int recentsCount=size();
  if (recentsCount == 0) {
    return;
  }
  final IPackageManager pm=AppGlobals.getPackageManager();
  for (int i=recentsCount - 1; i >= 0; i--) {
    final TaskRecord task=get(i);
    if (userId != UserHandle.USER_ALL && task.userId != userId) {
      continue;
    }
    if (task.autoRemoveRecents && task.getTopActivity() == null) {
      remove(i);
      task.removedFromRecents();
      Slog.w(TAG,"Removing auto-remove without activity: " + task);
      continue;
    }
    if (task.realActivity != null) {
      ActivityInfo ai=mTmpAvailActCache.get(task.realActivity);
      if (ai == null) {
        try {
          ai=pm.getActivityInfo(task.realActivity,PackageManager.MATCH_DEBUG_TRIAGED_MISSING,userId);
        }
 catch (        RemoteException e) {
          continue;
        }
        if (ai == null) {
          ai=mTmpActivityInfo;
        }
        mTmpAvailActCache.put(task.realActivity,ai);
      }
      if (ai == mTmpActivityInfo) {
        ApplicationInfo app=mTmpAvailAppCache.get(task.realActivity.getPackageName());
        if (app == null) {
          try {
            app=pm.getApplicationInfo(task.realActivity.getPackageName(),PackageManager.MATCH_UNINSTALLED_PACKAGES,userId);
          }
 catch (          RemoteException e) {
            continue;
          }
          if (app == null) {
            app=mTmpAppInfo;
          }
          mTmpAvailAppCache.put(task.realActivity.getPackageName(),app);
        }
        if (app == mTmpAppInfo || (app.flags & ApplicationInfo.FLAG_INSTALLED) == 0) {
          remove(i);
          task.removedFromRecents();
          Slog.w(TAG,"Removing no longer valid recent: " + task);
          continue;
        }
 else {
          if (DEBUG_RECENTS && task.isAvailable)           Slog.d(TAG_RECENTS,"Making recent unavailable: " + task);
          task.isAvailable=false;
        }
      }
 else {
        if (!ai.enabled || !ai.applicationInfo.enabled || (ai.applicationInfo.flags & ApplicationInfo.FLAG_INSTALLED) == 0) {
          if (DEBUG_RECENTS && task.isAvailable)           Slog.d(TAG_RECENTS,"Making recent unavailable: " + task + " (enabled="+ ai.enabled+ "/"+ ai.applicationInfo.enabled+ " flags="+ Integer.toHexString(ai.applicationInfo.flags)+ ")");
          task.isAvailable=false;
        }
 else {
          if (DEBUG_RECENTS && !task.isAvailable)           Slog.d(TAG_RECENTS,"Making recent available: " + task);
          task.isAvailable=true;
        }
      }
    }
  }
  int i=0;
  recentsCount=size();
  while (i < recentsCount) {
    i=processNextAffiliateChainLocked(i);
  }
}
