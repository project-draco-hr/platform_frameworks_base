{
  int recentsCount=size();
  if (recentsCount == 0) {
    return;
  }
  final IPackageManager pm=AppGlobals.getPackageManager();
  final int[] users=(userId == UserHandle.USER_ALL) ? mService.mUserController.getUsers() : new int[]{userId};
  for (int userIdx=0; userIdx < users.length; userIdx++) {
    final int user=users[userIdx];
    recentsCount=size() - 1;
    for (int i=recentsCount; i >= 0; i--) {
      TaskRecord task=get(i);
      if (task.userId != user) {
        continue;
      }
      if (task.autoRemoveRecents && task.getTopActivity() == null) {
        remove(i);
        task.removedFromRecents();
        Slog.w(TAG,"Removing auto-remove without activity: " + task);
        continue;
      }
      if (task.realActivity != null) {
        ActivityInfo ai=tmpAvailActCache.get(task.realActivity);
        if (ai == null) {
          try {
            ai=pm.getActivityInfo(task.realActivity,PackageManager.MATCH_DEBUG_TRIAGED_MISSING,user);
          }
 catch (          RemoteException e) {
            continue;
          }
          if (ai == null) {
            ai=tmpActivityInfo;
          }
          tmpAvailActCache.put(task.realActivity,ai);
        }
        if (ai == tmpActivityInfo) {
          ApplicationInfo app=tmpAvailAppCache.get(task.realActivity.getPackageName());
          if (app == null) {
            try {
              app=pm.getApplicationInfo(task.realActivity.getPackageName(),PackageManager.MATCH_UNINSTALLED_PACKAGES,user);
            }
 catch (            RemoteException e) {
              continue;
            }
            if (app == null) {
              app=tmpAppInfo;
            }
            tmpAvailAppCache.put(task.realActivity.getPackageName(),app);
          }
          if (app == tmpAppInfo || (app.flags & ApplicationInfo.FLAG_INSTALLED) == 0) {
            remove(i);
            task.removedFromRecents();
            Slog.w(TAG,"Removing no longer valid recent: " + task);
            continue;
          }
 else {
            if (DEBUG_RECENTS && task.isAvailable)             Slog.d(TAG_RECENTS,"Making recent unavailable: " + task);
            task.isAvailable=false;
          }
        }
 else {
          if (!ai.enabled || !ai.applicationInfo.enabled || (ai.applicationInfo.flags & ApplicationInfo.FLAG_INSTALLED) == 0) {
            if (DEBUG_RECENTS && task.isAvailable)             Slog.d(TAG_RECENTS,"Making recent unavailable: " + task + " (enabled="+ ai.enabled+ "/"+ ai.applicationInfo.enabled+ " flags="+ Integer.toHexString(ai.applicationInfo.flags)+ ")");
            task.isAvailable=false;
          }
 else {
            if (DEBUG_RECENTS && !task.isAvailable)             Slog.d(TAG_RECENTS,"Making recent available: " + task);
            task.isAvailable=true;
          }
        }
      }
    }
  }
  int i=0;
  recentsCount=size();
  while (i < recentsCount) {
    i=processNextAffiliateChainLocked(i);
  }
}
