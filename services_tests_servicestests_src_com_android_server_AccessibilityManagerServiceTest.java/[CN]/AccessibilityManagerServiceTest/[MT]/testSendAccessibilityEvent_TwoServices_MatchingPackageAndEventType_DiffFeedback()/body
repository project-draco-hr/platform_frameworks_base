{
  ensureAccessibilityEnabled(mContext,true);
  ensureOnlyMockServicesEnabled(mContext,true,true);
  MockAccessibilityService firstService=MyFirstMockAccessibilityService.sInstance;
  AccessibilityServiceInfo firstInfo=MockAccessibilityService.createDefaultInfo();
  firstInfo.feedbackType=AccessibilityServiceInfo.FEEDBACK_AUDIBLE;
  firstService.setServiceInfo(firstInfo);
  MockAccessibilityService secondService=MySecondMockAccessibilityService.sInstance;
  AccessibilityServiceInfo secondInfo=MockAccessibilityService.createDefaultInfo();
  secondInfo.feedbackType=AccessibilityServiceInfo.FEEDBACK_HAPTIC;
  secondService.setServiceInfo(secondInfo);
  Thread.sleep(TIMEOUT_BINDER_CALL);
  AccessibilityEvent sentEvent=AccessibilityEvent.obtain();
  fullyPopulateDefaultAccessibilityEvent(sentEvent);
  firstService.expectEvent(sentEvent);
  firstService.replay();
  secondService.expectEvent(sentEvent);
  secondService.replay();
  mManagerService.sendAccessibilityEvent(sentEvent);
  assertMockServiceVerifiedWithinTimeout(firstService);
  assertMockServiceVerifiedWithinTimeout(secondService);
}
