{
  while (mPendingAnimations.size() > 0) {
    ArrayList<ValueAnimator> pendingCopy=(ArrayList<ValueAnimator>)mPendingAnimations.clone();
    mPendingAnimations.clear();
    int count=pendingCopy.size();
    for (int i=0; i < count; ++i) {
      ValueAnimator anim=pendingCopy.get(i);
      if (anim.mStartDelay == 0) {
        anim.startAnimation(this);
      }
 else {
        mDelayedAnims.add(anim);
      }
    }
  }
  int numDelayedAnims=mDelayedAnims.size();
  for (int i=0; i < numDelayedAnims; ++i) {
    ValueAnimator anim=mDelayedAnims.get(i);
    if (anim.delayedAnimationFrame(frameTime)) {
      mReadyAnims.add(anim);
    }
  }
  int numReadyAnims=mReadyAnims.size();
  if (numReadyAnims > 0) {
    for (int i=0; i < numReadyAnims; ++i) {
      ValueAnimator anim=mReadyAnims.get(i);
      anim.startAnimation(this);
      anim.mRunning=true;
      mDelayedAnims.remove(anim);
    }
    mReadyAnims.clear();
  }
  int numAnims=mAnimations.size();
  for (int i=0; i < numAnims; ++i) {
    mTmpAnimations.add(mAnimations.get(i));
  }
  for (int i=0; i < numAnims; ++i) {
    ValueAnimator anim=mTmpAnimations.get(i);
    if (mAnimations.contains(anim) && anim.doAnimationFrame(frameTime)) {
      mEndingAnims.add(anim);
    }
  }
  mTmpAnimations.clear();
  if (mEndingAnims.size() > 0) {
    for (int i=0; i < mEndingAnims.size(); ++i) {
      mEndingAnims.get(i).endAnimation(this);
    }
    mEndingAnims.clear();
  }
  if (!mAnimations.isEmpty() || !mDelayedAnims.isEmpty()) {
    scheduleAnimation();
  }
}
