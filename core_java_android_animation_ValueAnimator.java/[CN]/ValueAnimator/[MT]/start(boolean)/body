{
  if (Looper.myLooper() == null) {
    throw new AndroidRuntimeException("Animators may only be run on Looper threads");
  }
  mReversing=playBackwards;
  if (playBackwards && mSeekFraction != -1 && mSeekFraction != 0) {
    if (mRepeatCount == INFINITE) {
      float fraction=(float)(mSeekFraction - Math.floor(mSeekFraction));
      mSeekFraction=1 - fraction;
    }
 else {
      mSeekFraction=1 + mRepeatCount - mSeekFraction;
    }
  }
  mStarted=true;
  mPaused=false;
  mRunning=false;
  mAnimationEndRequested=false;
  AnimationHandler animationHandler=AnimationHandler.getInstance();
  animationHandler.addAnimationFrameCallback(this,(long)(mStartDelay * sDurationScale));
  if (mStartDelay == 0) {
    startAnimation();
    setCurrentFraction(mSeekFraction == -1 ? 0 : mSeekFraction);
  }
}
