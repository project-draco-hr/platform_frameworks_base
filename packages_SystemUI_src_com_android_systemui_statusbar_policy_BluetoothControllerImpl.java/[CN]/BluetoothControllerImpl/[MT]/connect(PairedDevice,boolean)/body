{
  if (mAdapter == null || pd == null || pd.tag == null)   return;
  final BluetoothDevice device=(BluetoothDevice)pd.tag;
  final DeviceInfo info=mDeviceInfo.get(device);
  final String action=connect ? "connect" : "disconnect";
  if (DEBUG)   Log.d(TAG,action + " " + deviceToString(device));
  final ParcelUuid[] uuids=device.getUuids();
  if (uuids == null) {
    Log.w(TAG,"No uuids returned, aborting " + action + " for "+ deviceToString(device));
    return;
  }
  SparseArray<Boolean> profiles=new SparseArray<>();
  if (connect) {
    for (    ParcelUuid uuid : uuids) {
      final int profile=uuidToProfile(uuid);
      if (profile == 0) {
        Log.w(TAG,"Device " + deviceToString(device) + " has an unsupported uuid: "+ uuidToString(uuid));
        continue;
      }
      final boolean connected=info.connectedProfiles.get(profile,false);
      if (!connected) {
        profiles.put(profile,true);
      }
    }
  }
 else {
    profiles=info.connectedProfiles;
  }
  for (int i=0; i < profiles.size(); i++) {
    final int profile=profiles.keyAt(i);
    if (mProfiles.indexOfKey(profile) >= 0) {
      final Profile p=BluetoothUtil.getProfile(mProfiles.get(profile));
      final boolean ok=connect ? p.connect(device) : p.disconnect(device);
      if (DEBUG)       Log.d(TAG,action + " " + profileToString(profile)+ " "+ (ok ? "succeeded" : "failed"));
    }
 else {
      Log.w(TAG,"Unable get get Profile for " + profileToString(profile));
    }
  }
}
