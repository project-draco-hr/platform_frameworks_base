{
  if (mAdapter == null)   return;
  final Set<BluetoothDevice> bondedDevices=mAdapter.getBondedDevices();
  for (  DeviceInfo info : mDeviceInfo.values()) {
    info.bonded=false;
    info.connectionState=ERROR;
    info.connectedProfiles.clear();
  }
  int bondedCount=0;
  BluetoothDevice lastBonded=null;
  if (bondedDevices != null) {
    for (    BluetoothDevice bondedDevice : bondedDevices) {
      final boolean bonded=bondedDevice.getBondState() != BluetoothDevice.BOND_NONE;
      updateInfo(bondedDevice).bonded=bonded;
      if (bonded) {
        bondedCount++;
        lastBonded=bondedDevice;
      }
    }
  }
  final int N=mProfiles.size();
  final int[] connectionType=new int[1];
  for (int i=0; i < CONNECTION_STATES.length; i++) {
    connectionType[0]=CONNECTION_STATES[i];
    for (int j=0; j < N; j++) {
      int profile=mProfiles.keyAt(j);
      List<BluetoothDevice> devices=mProfiles.get(profile).getDevicesMatchingConnectionStates(connectionType);
      for (int k=0; k < devices.size(); k++) {
        DeviceInfo info=mDeviceInfo.get(devices.get(k));
        if (info != null) {
          info.connectionState=CONNECTION_STATES[i];
          if (CONNECTION_STATES[i] == BluetoothProfile.STATE_CONNECTED) {
            info.connectedProfiles.put(profile,true);
          }
        }
      }
    }
  }
  if (mLastDevice == null && bondedCount == 1) {
    mLastDevice=lastBonded;
  }
  if (mLastDevice != null && mDeviceInfo.get(mLastDevice).connectionState != BluetoothProfile.STATE_CONNECTED) {
    mLastDevice=null;
    final int size=mDeviceInfo.size();
    for (int i=0; i < size; i++) {
      BluetoothDevice device=mDeviceInfo.keyAt(i);
      DeviceInfo info=mDeviceInfo.valueAt(i);
      if (info.connectionState == BluetoothProfile.STATE_CONNECTED) {
        mLastDevice=device;
        break;
      }
    }
  }
  firePairedDevicesChanged();
}
