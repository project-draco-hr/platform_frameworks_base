{
  float[] intermediateOutput=compute(mHiddenLayer,vector);
  float[] output=compute(mOutputLayer,intermediateOutput);
  ArrayList<Prediction> predictions=new ArrayList<Prediction>();
  double sum=0;
  int count=mClasses.length;
  for (int i=0; i < count; i++) {
    String name=mClasses[i];
    double score=output[i];
    sum+=score;
    predictions.add(new Prediction(name,score));
  }
  for (int i=0; i < count; i++) {
    Prediction name=predictions.get(i);
    name.score/=sum;
  }
  Collections.sort(predictions,new Comparator<Prediction>(){
    public int compare(    Prediction object1,    Prediction object2){
      double score1=object1.score;
      double score2=object2.score;
      if (score1 > score2) {
        return -1;
      }
 else       if (score1 < score2) {
        return 1;
      }
 else {
        return 0;
      }
    }
  }
);
  return predictions;
}
