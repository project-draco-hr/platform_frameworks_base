{
  Resources resources=context.getResources();
  InputStream stream=resources.openRawResource(resourceID);
  try {
    BufferedReader reader=new BufferedReader(new InputStreamReader(stream));
    String line=reader.readLine();
    int startIndex=0;
    int endIndex=-1;
    endIndex=line.indexOf(" ",startIndex);
    int iCount=Integer.parseInt(line.substring(startIndex,endIndex));
    startIndex=endIndex + 1;
    endIndex=line.indexOf(" ",startIndex);
    int hCount=Integer.parseInt(line.substring(startIndex,endIndex));
    startIndex=endIndex + 1;
    endIndex=line.length();
    int oCount=Integer.parseInt(line.substring(startIndex,endIndex));
    String[] classes=new String[oCount];
    line=reader.readLine();
    startIndex=0;
    endIndex=-1;
    for (int i=0; i < oCount; i++) {
      endIndex=line.indexOf(" ",startIndex);
      classes[i]=line.substring(startIndex,endIndex);
      startIndex=endIndex + 1;
    }
    LetterRecognizer classifier=new LetterRecognizer(iCount,hCount,classes);
    SigmoidUnit[] hiddenLayer=new SigmoidUnit[hCount];
    SigmoidUnit[] outputLayer=new SigmoidUnit[oCount];
    for (int i=0; i < hCount; i++) {
      float[] weights=new float[iCount];
      line=reader.readLine();
      startIndex=0;
      for (int j=0; j < iCount; j++) {
        endIndex=line.indexOf(" ",startIndex);
        weights[j]=Float.parseFloat(line.substring(startIndex,endIndex));
        startIndex=endIndex + 1;
      }
      hiddenLayer[i]=classifier.new SigmoidUnit(weights);
    }
    for (int i=0; i < oCount; i++) {
      float[] weights=new float[hCount];
      line=reader.readLine();
      startIndex=0;
      for (int j=0; j < hCount; j++) {
        endIndex=line.indexOf(" ",startIndex);
        weights[j]=Float.parseFloat(line.substring(startIndex,endIndex));
        startIndex=endIndex + 1;
      }
      outputLayer[i]=classifier.new SigmoidUnit(weights);
    }
    reader.close();
    classifier.mHiddenLayer=hiddenLayer;
    classifier.mOutputLayer=outputLayer;
    return classifier;
  }
 catch (  IOException ex) {
    Log.d(LOGTAG,"Failed to save gestures:",ex);
  }
  return null;
}
