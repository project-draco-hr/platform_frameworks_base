{
  mService.mInnerFields.mWallpaperMayChange=false;
  final WindowList windows=mService.getDefaultWindowListLocked();
  findWallpaperTarget(windows,mFindResults);
  final boolean targetChanged=updateWallpaperWindowsTarget(windows,mFindResults);
  final boolean visible=updateWallpaperWindowsTargetByLayer(windows,mFindResults);
  WindowState wallpaperTarget=mFindResults.wallpaperTarget;
  int wallpaperTargetIndex=mFindResults.wallpaperTargetIndex;
  if (wallpaperTarget == null && mFindResults.topWallpaper != null) {
    wallpaperTarget=mFindResults.topWallpaper;
    wallpaperTargetIndex=mFindResults.topWallpaperIndex + 1;
  }
 else {
    wallpaperTarget=wallpaperTargetIndex > 0 ? windows.get(wallpaperTargetIndex - 1) : null;
  }
  if (visible) {
    if (mWallpaperTarget.mWallpaperX >= 0) {
      mLastWallpaperX=mWallpaperTarget.mWallpaperX;
      mLastWallpaperXStep=mWallpaperTarget.mWallpaperXStep;
    }
    if (mWallpaperTarget.mWallpaperY >= 0) {
      mLastWallpaperY=mWallpaperTarget.mWallpaperY;
      mLastWallpaperYStep=mWallpaperTarget.mWallpaperYStep;
    }
    if (mWallpaperTarget.mWallpaperDisplayOffsetX != Integer.MIN_VALUE) {
      mLastWallpaperDisplayOffsetX=mWallpaperTarget.mWallpaperDisplayOffsetX;
    }
    if (mWallpaperTarget.mWallpaperDisplayOffsetY != Integer.MIN_VALUE) {
      mLastWallpaperDisplayOffsetY=mWallpaperTarget.mWallpaperDisplayOffsetY;
    }
  }
  final boolean changed=updateWallpaperWindowsPlacement(windows,wallpaperTarget,wallpaperTargetIndex,visible);
  if (targetChanged && DEBUG_WALLPAPER_LIGHT)   Slog.d(TAG,"New wallpaper: target=" + mWallpaperTarget + " lower="+ mLowerWallpaperTarget+ " upper="+ mUpperWallpaperTarget);
  return changed;
}
