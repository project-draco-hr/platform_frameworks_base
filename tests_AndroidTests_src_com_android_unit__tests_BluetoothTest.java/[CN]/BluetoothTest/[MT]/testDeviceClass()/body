{
  int deviceClass;
  HashSet<Integer> serviceClasses;
  deviceClass=BluetoothClass.ERROR;
  serviceClasses=new HashSet<Integer>();
  assertOnlyTheseServiceClassesAreSupported(deviceClass,serviceClasses);
  Assert.assertEquals(BluetoothClass.ERROR,BluetoothClass.Device.Major.getDeviceMajor(deviceClass));
  Assert.assertEquals(BluetoothClass.ERROR,BluetoothClass.Device.getDevice(deviceClass));
  deviceClass=0x10210C;
  serviceClasses=new HashSet<Integer>();
  serviceClasses.add(BluetoothClass.Service.OBJECT_TRANSFER);
  serviceClasses.add(BluetoothClass.Service.LIMITED_DISCOVERABILITY);
  assertOnlyTheseServiceClassesAreSupported(deviceClass,serviceClasses);
  Assert.assertEquals(BluetoothClass.Device.Major.COMPUTER,BluetoothClass.Device.Major.getDeviceMajor(deviceClass));
  Assert.assertEquals(0x10C,BluetoothClass.Device.getDevice(deviceClass));
  deviceClass=0xFF10210F;
  serviceClasses=new HashSet<Integer>();
  serviceClasses.add(BluetoothClass.Service.OBJECT_TRANSFER);
  serviceClasses.add(BluetoothClass.Service.LIMITED_DISCOVERABILITY);
  assertOnlyTheseServiceClassesAreSupported(deviceClass,serviceClasses);
  Assert.assertEquals(BluetoothClass.Device.Major.COMPUTER,BluetoothClass.Device.Major.getDeviceMajor(deviceClass));
  Assert.assertEquals(0x10C,BluetoothClass.Device.getDevice(deviceClass));
  deviceClass=0x3E0100;
  serviceClasses=new HashSet<Integer>();
  serviceClasses.add(BluetoothClass.Service.AUDIO);
  serviceClasses.add(BluetoothClass.Service.OBJECT_TRANSFER);
  serviceClasses.add(BluetoothClass.Service.CAPTURE);
  serviceClasses.add(BluetoothClass.Service.RENDER);
  serviceClasses.add(BluetoothClass.Service.NETWORKING);
  assertOnlyTheseServiceClassesAreSupported(deviceClass,serviceClasses);
  Assert.assertEquals(BluetoothClass.Device.Major.COMPUTER,BluetoothClass.Device.Major.getDeviceMajor(deviceClass));
  Assert.assertEquals(0x100,BluetoothClass.Device.getDevice(deviceClass));
  deviceClass=0x40020C;
  serviceClasses=new HashSet<Integer>();
  serviceClasses.add(BluetoothClass.Service.TELEPHONY);
  assertOnlyTheseServiceClassesAreSupported(deviceClass,serviceClasses);
  Assert.assertEquals(BluetoothClass.Device.Major.PHONE,BluetoothClass.Device.Major.getDeviceMajor(deviceClass));
  Assert.assertEquals(0x20C,BluetoothClass.Device.getDevice(deviceClass));
  deviceClass=0x200404;
  serviceClasses=new HashSet<Integer>();
  serviceClasses.add(BluetoothClass.Service.AUDIO);
  assertOnlyTheseServiceClassesAreSupported(deviceClass,serviceClasses);
  Assert.assertEquals(BluetoothClass.Device.Major.AUDIO_VIDEO,BluetoothClass.Device.Major.getDeviceMajor(deviceClass));
  Assert.assertEquals(BluetoothClass.Device.AUDIO_VIDEO_WEARABLE_HEADSET,BluetoothClass.Device.getDevice(deviceClass));
  deviceClass=0x200408;
  serviceClasses=new HashSet<Integer>();
  serviceClasses.add(BluetoothClass.Service.AUDIO);
  assertOnlyTheseServiceClassesAreSupported(deviceClass,serviceClasses);
  Assert.assertEquals(BluetoothClass.Device.Major.AUDIO_VIDEO,BluetoothClass.Device.Major.getDeviceMajor(deviceClass));
  Assert.assertEquals(BluetoothClass.Device.AUDIO_VIDEO_HANDSFREE,BluetoothClass.Device.getDevice(deviceClass));
}
