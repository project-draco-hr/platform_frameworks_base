{
  BluetoothDevice device=(BluetoothDevice)getContext().getSystemService(Context.BLUETOOTH_SERVICE);
  if (device == null) {
    Log.i(TAG,"Device not Bluetooth capable, skipping test");
    return;
  }
  if (device.isEnabled()) {
    IntentFilter filter=new IntentFilter(BluetoothIntent.ENABLED_ACTION);
    filter.addAction(BluetoothIntent.ENABLED_ACTION);
    filter.addAction(BluetoothIntent.DISABLED_ACTION);
    filter.addAction(BluetoothIntent.NAME_CHANGED_ACTION);
    filter.addAction(BluetoothIntent.MODE_CHANGED_ACTION);
    filter.addAction(BluetoothIntent.DISCOVERY_STARTED_ACTION);
    filter.addAction(BluetoothIntent.DISCOVERY_COMPLETED_ACTION);
    filter.addAction(BluetoothIntent.PAIRING_REQUEST_ACTION);
    filter.addAction(BluetoothIntent.PAIRING_CANCEL_ACTION);
    filter.addAction(BluetoothIntent.REMOTE_DEVICE_FOUND_ACTION);
    filter.addAction(BluetoothIntent.REMOTE_DEVICE_DISAPPEARED_ACTION);
    filter.addAction(BluetoothIntent.REMOTE_DEVICE_CLASS_UPDATED_ACTION);
    filter.addAction(BluetoothIntent.REMOTE_DEVICE_CONNECTED_ACTION);
    filter.addAction(BluetoothIntent.REMOTE_DEVICE_DISCONNECT_REQUESTED_ACTION);
    filter.addAction(BluetoothIntent.REMOTE_DEVICE_DISCONNECTED_ACTION);
    filter.addAction(BluetoothIntent.REMOTE_NAME_UPDATED_ACTION);
    filter.addAction(BluetoothIntent.REMOTE_NAME_FAILED_ACTION);
    filter.addAction(BluetoothIntent.REMOTE_ALIAS_CHANGED_ACTION);
    filter.addAction(BluetoothIntent.REMOTE_ALIAS_CLEARED_ACTION);
    filter.addAction(BluetoothIntent.BOND_STATE_CHANGED_ACTION);
    filter.addAction(BluetoothIntent.HEADSET_STATE_CHANGED_ACTION);
    getContext().registerReceiver((BroadcastReceiver)new BluetoothIntentReceiver(),filter);
    Log.i(TAG,"Listening for BLUETOOTH INTENTS....");
  }
 else {
    Log.e(TAG,"BT not enabled");
  }
}
