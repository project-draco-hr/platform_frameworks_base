{
  final TypedArray a=r.obtainAttributes(attrs,R.styleable.AnimatedRotateDrawable);
  super.inflateWithAttributes(r,parser,a,R.styleable.AnimatedRotateDrawable_visible);
  TypedValue tv=a.peekValue(R.styleable.AnimatedRotateDrawable_pivotX);
  final boolean pivotXRel=tv.type == TypedValue.TYPE_FRACTION;
  final float pivotX=pivotXRel ? tv.getFraction(1.0f,1.0f) : tv.getFloat();
  tv=a.peekValue(R.styleable.AnimatedRotateDrawable_pivotY);
  final boolean pivotYRel=tv.type == TypedValue.TYPE_FRACTION;
  final float pivotY=pivotYRel ? tv.getFraction(1.0f,1.0f) : tv.getFloat();
  setFramesCount(a.getInt(R.styleable.AnimatedRotateDrawable_framesCount,12));
  setFramesDuration(a.getInt(R.styleable.AnimatedRotateDrawable_frameDuration,150));
  final int res=a.getResourceId(R.styleable.AnimatedRotateDrawable_drawable,0);
  Drawable drawable=null;
  if (res > 0) {
    drawable=r.getDrawable(res);
  }
  a.recycle();
  int outerDepth=parser.getDepth();
  int type;
  while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && (type != XmlPullParser.END_TAG || parser.getDepth() > outerDepth)) {
    if (type != XmlPullParser.START_TAG) {
      continue;
    }
    if ((drawable=Drawable.createFromXmlInner(r,parser,attrs)) == null) {
      Log.w("drawable","Bad element under <animated-rotate>: " + parser.getName());
    }
  }
  if (drawable == null) {
    Log.w("drawable","No drawable specified for <animated-rotate>");
  }
  final AnimatedRotateState rotateState=mState;
  rotateState.mDrawable=drawable;
  rotateState.mPivotXRel=pivotXRel;
  rotateState.mPivotX=pivotX;
  rotateState.mPivotYRel=pivotYRel;
  rotateState.mPivotY=pivotY;
  init();
  if (drawable != null) {
    drawable.setCallback(this);
  }
}
