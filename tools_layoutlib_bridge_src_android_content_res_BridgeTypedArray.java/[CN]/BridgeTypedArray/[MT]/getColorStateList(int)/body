{
  if (!hasValue(index)) {
    return null;
  }
  ResourceValue resValue=mResourceData[index];
  String value=resValue.getValue();
  if (value == null) {
    return null;
  }
  try {
    XmlPullParser parser=null;
    Boolean psiParserSupport=mContext.getLayoutlibCallback().getFlag(RenderParamsFlags.FLAG_KEY_XML_FILE_PARSER_SUPPORT);
    if (psiParserSupport != null && psiParserSupport) {
      parser=mContext.getLayoutlibCallback().getXmlFileParser(value);
    }
    if (parser == null) {
      File f=new File(value);
      if (f.isFile()) {
        parser=ParserFactory.create(f);
      }
    }
    if (parser != null) {
      BridgeXmlBlockParser blockParser=new BridgeXmlBlockParser(parser,mContext,resValue.isFramework());
      try {
        return ColorStateList.createFromXml(mContext.getResources(),blockParser,mContext.getTheme());
      }
  finally {
        blockParser.ensurePopped();
      }
    }
  }
 catch (  XmlPullParserException e) {
    Bridge.getLog().error(LayoutLog.TAG_BROKEN,"Failed to configure parser for " + value,e,null);
    return null;
  }
catch (  Exception e) {
    Bridge.getLog().error(LayoutLog.TAG_RESOURCES_READ,"Failed to parse file " + value,e,null);
    return null;
  }
  try {
    int color=ResourceHelper.getColor(value);
    return ColorStateList.valueOf(color);
  }
 catch (  NumberFormatException e) {
    Bridge.getLog().error(LayoutLog.TAG_RESOURCES_FORMAT,e.getMessage(),e,null);
  }
  return null;
}
