{
synchronized (this) {
    if (mState != STATE_LOADING) {
      return;
    }
    if (mPosition == 0) {
      try {
        mDatabase.getMapper().startAddingDocuments(mIdentifier.mDocumentId);
      }
 catch (      FileNotFoundException error) {
        mError=error;
        mState=STATE_ERROR;
        return;
      }
    }
  }
  final ArrayList<MtpObjectInfo> infoList=new ArrayList<>();
  for (int chunkEnd=mPosition + count; mPosition < mObjectHandles.length && mPosition < chunkEnd; mPosition++) {
    try {
      infoList.add(mManager.getObjectInfo(mIdentifier.mDeviceId,mObjectHandles[mPosition]));
    }
 catch (    IOException error) {
      Log.e(MtpDocumentsProvider.TAG,"Failed to load object info",error);
    }
  }
synchronized (this) {
    try {
      mDatabase.getMapper().putChildDocuments(mIdentifier.mDeviceId,mIdentifier.mDocumentId,mOperationsSupported,infoList.toArray(new MtpObjectInfo[infoList.size()]));
    }
 catch (    FileNotFoundException error) {
      mError=error;
      mState=STATE_ERROR;
      return;
    }
    if (mPosition >= mObjectHandles.length) {
      try {
        mDatabase.getMapper().stopAddingDocuments(mIdentifier.mDocumentId);
        mState=STATE_COMPLETED;
      }
 catch (      FileNotFoundException error) {
        mError=error;
        mState=STATE_ERROR;
        return;
      }
    }
  }
}
