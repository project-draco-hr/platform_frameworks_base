{
  Process.setThreadPriority(Process.THREAD_PRIORITY_BACKGROUND);
  while (true) {
    LoaderTask task;
    int deviceId;
    int[] handles;
synchronized (DocumentLoader.this) {
      task=findUncompletedTask();
      if (task == null) {
        mHasBackgroundThread=false;
        return;
      }
      deviceId=task.mIdentifier.mDeviceId;
      handles=task.getUnloadedObjectHandles(NUM_LOADING_ENTRIES);
    }
    MtpDocument[] documents;
    try {
      documents=loadDocuments(mMtpManager,deviceId,handles);
    }
 catch (    IOException exception) {
      documents=null;
      Log.d(MtpDocumentsProvider.TAG,exception.getMessage());
    }
synchronized (DocumentLoader.this) {
      if (documents != null) {
        task.fillDocuments(documents);
        final boolean shouldNotify=task.mLastNotified.getTime() < new Date().getTime() - NOTIFY_PERIOD_MS || task.completed();
        if (shouldNotify) {
          task.notify(mResolver);
        }
      }
 else {
        mTasks.remove(task);
      }
    }
  }
}
