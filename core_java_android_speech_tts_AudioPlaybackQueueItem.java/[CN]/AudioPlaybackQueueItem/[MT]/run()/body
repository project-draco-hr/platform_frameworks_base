{
  final UtteranceProgressDispatcher dispatcher=getDispatcher();
  dispatcher.dispatchOnStart();
  mPlayer=MediaPlayer.create(mContext,mUri);
  if (mPlayer == null) {
    dispatcher.dispatchOnError(TextToSpeech.ERROR_OUTPUT);
    return;
  }
  try {
    mPlayer.setOnErrorListener(new MediaPlayer.OnErrorListener(){
      @Override public boolean onError(      MediaPlayer mp,      int what,      int extra){
        Log.w(TAG,"Audio playback error: " + what + ", "+ extra);
        mDone.open();
        return true;
      }
    }
);
    mPlayer.setOnCompletionListener(new MediaPlayer.OnCompletionListener(){
      @Override public void onCompletion(      MediaPlayer mp){
        mFinished=true;
        mDone.open();
      }
    }
);
    mPlayer.setAudioStreamType(mAudioParams.mStreamType);
    setupVolume(mPlayer,mAudioParams.mVolume,mAudioParams.mPan);
    if (mAudioParams.mSessionId != AudioSystem.AUDIO_SESSION_ALLOCATE) {
      mPlayer.setAudioSessionId(mAudioParams.mSessionId);
    }
    mPlayer.start();
    mDone.block();
    finish();
  }
 catch (  IllegalArgumentException ex) {
    Log.w(TAG,"MediaPlayer failed",ex);
    mDone.open();
  }
  if (mFinished) {
    dispatcher.dispatchOnSuccess();
  }
 else {
    dispatcher.dispatchOnStop();
  }
}
