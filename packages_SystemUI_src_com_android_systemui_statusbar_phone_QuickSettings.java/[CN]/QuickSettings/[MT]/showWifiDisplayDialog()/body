{
  mDisplayManager.scanWifiDisplays();
  updateWifiDisplayStatus();
  Dialog dialog=new Dialog(mContext);
  dialog.setContentView(R.layout.wifi_display_dialog);
  dialog.setCanceledOnTouchOutside(true);
  dialog.setTitle(R.string.wifi_display_dialog_title);
  Button scanButton=(Button)dialog.findViewById(R.id.scan);
  scanButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      mDisplayManager.scanWifiDisplays();
    }
  }
);
  Button disconnectButton=(Button)dialog.findViewById(R.id.disconnect);
  disconnectButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      mDisplayManager.disconnectWifiDisplay();
    }
  }
);
  ListView list=(ListView)dialog.findViewById(R.id.list);
  list.setAdapter(mWifiDisplayListAdapter);
  list.setOnItemClickListener(new AdapterView.OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> parent,    View view,    int position,    long id){
      WifiDisplay display=mWifiDisplayListAdapter.getItem(position);
      mDisplayManager.connectWifiDisplay(display.getDeviceAddress());
    }
  }
);
  dialog.getWindow().setType(WindowManager.LayoutParams.TYPE_SYSTEM_ALERT);
  dialog.show();
}
