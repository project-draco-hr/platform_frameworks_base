{
  QuickSettingsTileView userTile=(QuickSettingsTileView)inflater.inflate(R.layout.quick_settings_tile,parent,false);
  userTile.setContent(R.layout.quick_settings_tile_user,inflater);
  userTile.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      mBar.collapseAllPanels(true);
      final UserManager um=(UserManager)mContext.getSystemService(Context.USER_SERVICE);
      if (um.getUsers(true).size() > 1) {
        try {
          WindowManagerGlobal.getWindowManagerService().lockNow(LockPatternUtils.USER_SWITCH_LOCK_OPTIONS);
        }
 catch (        RemoteException e) {
          Log.e(TAG,"Couldn't show user switcher",e);
        }
      }
 else {
        Intent intent=ContactsContract.QuickContact.composeQuickContactsIntent(mContext,v,ContactsContract.Profile.CONTENT_URI,ContactsContract.QuickContact.MODE_LARGE,null);
        mContext.startActivityAsUser(intent,new UserHandle(UserHandle.USER_CURRENT));
      }
    }
  }
);
  mModel.addUserTile(userTile,new QuickSettingsModel.RefreshCallback(){
    @Override public void refreshView(    QuickSettingsTileView view,    State state){
      UserState us=(UserState)state;
      ImageView iv=(ImageView)view.findViewById(R.id.user_imageview);
      TextView tv=(TextView)view.findViewById(R.id.user_textview);
      tv.setText(state.label);
      iv.setImageDrawable(us.avatar);
      view.setContentDescription(mContext.getString(R.string.accessibility_quick_settings_user,state.label));
    }
  }
);
  parent.addView(userTile);
  mDynamicSpannedTiles.add(userTile);
  QuickSettingsTileView brightnessTile=(QuickSettingsTileView)inflater.inflate(R.layout.quick_settings_tile,parent,false);
  brightnessTile.setContent(R.layout.quick_settings_tile_brightness,inflater);
  brightnessTile.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      mBar.collapseAllPanels(true);
      showBrightnessDialog();
    }
  }
);
  mModel.addBrightnessTile(brightnessTile,new QuickSettingsModel.RefreshCallback(){
    @Override public void refreshView(    QuickSettingsTileView view,    State state){
      TextView tv=(TextView)view.findViewById(R.id.brightness_textview);
      tv.setCompoundDrawablesWithIntrinsicBounds(0,state.iconId,0,0);
      tv.setText(state.label);
      dismissBrightnessDialog(mBrightnessDialogShortTimeout);
    }
  }
);
  parent.addView(brightnessTile);
  mDynamicSpannedTiles.add(brightnessTile);
  QuickSettingsTileView settingsTile=(QuickSettingsTileView)inflater.inflate(R.layout.quick_settings_tile,parent,false);
  settingsTile.setContent(R.layout.quick_settings_tile_settings,inflater);
  settingsTile.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      startSettingsActivity(android.provider.Settings.ACTION_SETTINGS);
    }
  }
);
  mModel.addSettingsTile(settingsTile,new QuickSettingsModel.RefreshCallback(){
    @Override public void refreshView(    QuickSettingsTileView view,    State state){
      TextView tv=(TextView)view.findViewById(R.id.settings_tileview);
      tv.setText(state.label);
    }
  }
);
  parent.addView(settingsTile);
  mDynamicSpannedTiles.add(settingsTile);
}
