{
  final QuickSettingsBasicTile alarmTile=new QuickSettingsBasicTile(mContext);
  alarmTile.setImageResource(R.drawable.ic_qs_alarm_on);
  alarmTile.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      startSettingsActivity(AlarmClock.ACTION_SHOW_ALARMS);
    }
  }
);
  mModel.addAlarmTile(alarmTile,new QuickSettingsModel.RefreshCallback(){
    @Override public void refreshView(    QuickSettingsTileView unused,    State alarmState){
      alarmTile.setText(alarmState.label);
      alarmTile.setVisibility(alarmState.enabled ? View.VISIBLE : View.GONE);
      alarmTile.setContentDescription(mContext.getString(R.string.accessibility_quick_settings_alarm,alarmState.label));
    }
  }
);
  parent.addView(alarmTile);
  QuickSettingsBasicTile remoteDisplayTile=new QuickSettingsBasicTile(mContext);
  remoteDisplayTile.setImageResource(R.drawable.ic_qs_remote_display);
  remoteDisplayTile.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      startSettingsActivity(android.provider.Settings.ACTION_WIFI_DISPLAY_SETTINGS);
    }
  }
);
  mModel.addRemoteDisplayTile(remoteDisplayTile,new QuickSettingsModel.BasicRefreshCallback(remoteDisplayTile).setShowWhenEnabled(true));
  parent.addView(remoteDisplayTile);
  if (SHOW_IME_TILE || DEBUG_GONE_TILES) {
    final QuickSettingsBasicTile imeTile=new QuickSettingsBasicTile(mContext);
    imeTile.setImageResource(R.drawable.ic_qs_ime);
    imeTile.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        try {
          collapsePanels();
          Intent intent=new Intent(Settings.ACTION_SHOW_INPUT_METHOD_PICKER);
          PendingIntent pendingIntent=PendingIntent.getBroadcast(mContext,0,intent,0);
          pendingIntent.send();
        }
 catch (        Exception e) {
        }
      }
    }
);
    mModel.addImeTile(imeTile,new QuickSettingsModel.BasicRefreshCallback(imeTile).setShowWhenEnabled(true));
    parent.addView(imeTile);
  }
  final QuickSettingsBasicTile bugreportTile=new QuickSettingsBasicTile(mContext);
  bugreportTile.setImageResource(com.android.internal.R.drawable.stat_sys_adb);
  bugreportTile.setTextResource(com.android.internal.R.string.bugreport_title);
  bugreportTile.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      collapsePanels();
      showBugreportDialog();
    }
  }
);
  mModel.addBugreportTile(bugreportTile,new QuickSettingsModel.RefreshCallback(){
    @Override public void refreshView(    QuickSettingsTileView view,    State state){
      view.setVisibility(state.enabled ? View.VISIBLE : View.GONE);
    }
  }
);
  parent.addView(bugreportTile);
  final QuickSettingsBasicTile sslCaCertWarningTile=new QuickSettingsBasicTile(mContext,null,R.layout.quick_settings_tile_monitoring);
  sslCaCertWarningTile.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      collapsePanels();
      startSettingsActivity(Settings.ACTION_MONITORING_CERT_INFO);
    }
  }
);
  sslCaCertWarningTile.setImageResource(com.android.internal.R.drawable.indicator_input_error);
  sslCaCertWarningTile.setTextResource(R.string.ssl_ca_cert_warning);
  mModel.addSslCaCertWarningTile(sslCaCertWarningTile,new QuickSettingsModel.BasicRefreshCallback(sslCaCertWarningTile).setShowWhenEnabled(true));
  parent.addView(sslCaCertWarningTile);
}
