{
  QuickSettingsTileView alarmTile=(QuickSettingsTileView)inflater.inflate(R.layout.quick_settings_tile,parent,false);
  alarmTile.setContent(R.layout.quick_settings_tile_alarm,inflater);
  alarmTile.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      Intent intent=new Intent();
      intent.setComponent(new ComponentName("com.google.android.deskclock","com.android.deskclock.AlarmClock"));
      startSettingsActivity(intent);
    }
  }
);
  mModel.addAlarmTile(alarmTile,new QuickSettingsModel.RefreshCallback(){
    @Override public void refreshView(    QuickSettingsTileView view,    State alarmState){
      TextView tv=(TextView)view.findViewById(R.id.alarm_textview);
      tv.setText(alarmState.label);
      view.setVisibility(alarmState.enabled ? View.VISIBLE : View.GONE);
      view.setContentDescription(mContext.getString(R.string.accessibility_quick_settings_alarm,alarmState.label));
    }
  }
);
  parent.addView(alarmTile);
  QuickSettingsTileView locationTile=(QuickSettingsTileView)inflater.inflate(R.layout.quick_settings_tile,parent,false);
  locationTile.setContent(R.layout.quick_settings_tile_location,inflater);
  locationTile.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      startSettingsActivity(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS);
    }
  }
);
  mModel.addLocationTile(locationTile,new QuickSettingsModel.RefreshCallback(){
    @Override public void refreshView(    QuickSettingsTileView view,    State state){
      TextView tv=(TextView)view.findViewById(R.id.location_textview);
      tv.setText(state.label);
      view.setVisibility(state.enabled ? View.VISIBLE : View.GONE);
    }
  }
);
  parent.addView(locationTile);
  QuickSettingsTileView wifiDisplayTile=(QuickSettingsTileView)inflater.inflate(R.layout.quick_settings_tile,parent,false);
  wifiDisplayTile.setContent(R.layout.quick_settings_tile_wifi_display,inflater);
  wifiDisplayTile.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      startSettingsActivity(android.provider.Settings.ACTION_WIFI_DISPLAY_SETTINGS);
    }
  }
);
  mModel.addWifiDisplayTile(wifiDisplayTile,new QuickSettingsModel.RefreshCallback(){
    @Override public void refreshView(    QuickSettingsTileView view,    State state){
      TextView tv=(TextView)view.findViewById(R.id.wifi_display_textview);
      tv.setText(state.label);
      tv.setCompoundDrawablesWithIntrinsicBounds(0,state.iconId,0,0);
      view.setVisibility(state.enabled ? View.VISIBLE : View.GONE);
    }
  }
);
  parent.addView(wifiDisplayTile);
  if (SHOW_IME_TILE) {
    QuickSettingsTileView imeTile=(QuickSettingsTileView)inflater.inflate(R.layout.quick_settings_tile,parent,false);
    imeTile.setContent(R.layout.quick_settings_tile_ime,inflater);
    imeTile.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        try {
          mBar.collapseAllPanels(true);
          Intent intent=new Intent(Settings.ACTION_SHOW_INPUT_METHOD_PICKER);
          PendingIntent pendingIntent=PendingIntent.getBroadcast(mContext,0,intent,0);
          pendingIntent.send();
        }
 catch (        Exception e) {
        }
      }
    }
);
    mModel.addImeTile(imeTile,new QuickSettingsModel.RefreshCallback(){
      @Override public void refreshView(      QuickSettingsTileView view,      State state){
        TextView tv=(TextView)view.findViewById(R.id.ime_textview);
        if (state.label != null) {
          tv.setText(state.label);
        }
        view.setVisibility(state.enabled ? View.VISIBLE : View.GONE);
      }
    }
);
    parent.addView(imeTile);
  }
  QuickSettingsTileView bugreportTile=(QuickSettingsTileView)inflater.inflate(R.layout.quick_settings_tile,parent,false);
  bugreportTile.setContent(R.layout.quick_settings_tile_bugreport,inflater);
  bugreportTile.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      mBar.collapseAllPanels(true);
      showBugreportDialog();
    }
  }
);
  mModel.addBugreportTile(bugreportTile,new QuickSettingsModel.RefreshCallback(){
    @Override public void refreshView(    QuickSettingsTileView view,    State state){
      view.setVisibility(state.enabled ? View.VISIBLE : View.GONE);
    }
  }
);
  parent.addView(bugreportTile);
}
