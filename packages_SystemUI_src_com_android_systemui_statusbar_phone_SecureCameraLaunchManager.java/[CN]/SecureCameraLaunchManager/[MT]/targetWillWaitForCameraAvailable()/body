{
  Intent intent=new Intent(MediaStore.INTENT_ACTION_STILL_IMAGE_CAMERA_SECURE).addFlags(Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS);
  PackageManager packageManager=mContext.getPackageManager();
  final List<ResolveInfo> appList=packageManager.queryIntentActivitiesAsUser(intent,PackageManager.MATCH_DEFAULT_ONLY,KeyguardUpdateMonitor.getCurrentUser());
  if (appList.size() == 0) {
    if (DEBUG)     Log.d(TAG,"No targets found for secure camera intent");
    return false;
  }
  ResolveInfo resolved=packageManager.resolveActivityAsUser(intent,PackageManager.MATCH_DEFAULT_ONLY | PackageManager.GET_META_DATA,KeyguardUpdateMonitor.getCurrentUser());
  if (resolved == null || resolved.activityInfo == null) {
    return false;
  }
  if (wouldLaunchResolverActivity(resolved,appList)) {
    if (DEBUG)     Log.d(TAG,"Secure camera intent would launch resolver");
    return false;
  }
  if (resolved.activityInfo.metaData == null || resolved.activityInfo.metaData.isEmpty()) {
    if (DEBUG)     Log.d(TAG,"No meta-data found for secure camera application");
    return false;
  }
  boolean willWaitForCameraAvailability=resolved.activityInfo.metaData.getBoolean(META_DATA_WILL_WAIT_FOR_CAMERA_AVAILABLE);
  if (DEBUG)   Log.d(TAG,"Target will wait for camera: " + willWaitForCameraAvailability);
  return willWaitForCameraAvailability;
}
