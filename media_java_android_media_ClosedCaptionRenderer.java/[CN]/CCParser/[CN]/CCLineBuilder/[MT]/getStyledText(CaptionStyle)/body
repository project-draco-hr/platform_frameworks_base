{
  SpannableStringBuilder styledText=new SpannableStringBuilder(mDisplayChars);
  int start=-1, next=0;
  int styleStart=-1;
  StyleCode curStyle=null;
  while (next < mDisplayChars.length()) {
    StyleCode newStyle=null;
    if (mMidRowStyles[next] != null) {
      newStyle=mMidRowStyles[next];
    }
 else     if (mPACStyles[next] != null && (styleStart < 0 || start < 0)) {
      newStyle=mPACStyles[next];
    }
    if (newStyle != null) {
      curStyle=newStyle;
      if (styleStart >= 0 && start >= 0) {
        applyStyleSpan(styledText,newStyle,styleStart,next);
      }
      styleStart=next;
    }
    if (mDisplayChars.charAt(next) != TS) {
      if (start < 0) {
        start=next;
      }
    }
 else     if (start >= 0) {
      int expandedStart=mDisplayChars.charAt(start) == ' ' ? start : start - 1;
      int expandedEnd=mDisplayChars.charAt(next - 1) == ' ' ? next : next + 1;
      styledText.setSpan(new MutableBackgroundColorSpan(captionStyle.backgroundColor),expandedStart,expandedEnd,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
      if (styleStart >= 0) {
        applyStyleSpan(styledText,curStyle,styleStart,expandedEnd);
      }
      start=-1;
    }
    next++;
  }
  return styledText;
}
