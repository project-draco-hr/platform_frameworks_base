{
  if (chars == null) {
    throw new NullPointerException();
  }
  long[] keys=getEvents_native(mPointer,chars);
  if (keys == null) {
    return null;
  }
  int len=keys.length * 2;
  int N=keys.length;
  for (int i=0; i < N; i++) {
    int mods=(int)(keys[i] >> 32);
    if ((mods & KeyEvent.META_ALT_ON) != 0) {
      len+=2;
    }
    if ((mods & KeyEvent.META_SHIFT_ON) != 0) {
      len+=2;
    }
    if ((mods & KeyEvent.META_SYM_ON) != 0) {
      len+=2;
    }
  }
  KeyEvent[] rv=new KeyEvent[len];
  int index=0;
  long now=SystemClock.uptimeMillis();
  int device=mKeyboardDevice;
  for (int i=0; i < N; i++) {
    int mods=(int)(keys[i] >> 32);
    int meta=0;
    if ((mods & KeyEvent.META_ALT_ON) != 0) {
      meta|=KeyEvent.META_ALT_ON;
      rv[index]=new KeyEvent(now,now,KeyEvent.ACTION_DOWN,KeyEvent.KEYCODE_ALT_LEFT,0,meta,device,0);
      index++;
    }
    if ((mods & KeyEvent.META_SHIFT_ON) != 0) {
      meta|=KeyEvent.META_SHIFT_ON;
      rv[index]=new KeyEvent(now,now,KeyEvent.ACTION_DOWN,KeyEvent.KEYCODE_SHIFT_LEFT,0,meta,device,0);
      index++;
    }
    if ((mods & KeyEvent.META_SYM_ON) != 0) {
      meta|=KeyEvent.META_SYM_ON;
      rv[index]=new KeyEvent(now,now,KeyEvent.ACTION_DOWN,KeyEvent.KEYCODE_SYM,0,meta,device,0);
      index++;
    }
    int key=(int)(keys[i]);
    rv[index]=new KeyEvent(now,now,KeyEvent.ACTION_DOWN,key,0,meta,device,0);
    index++;
    rv[index]=new KeyEvent(now,now,KeyEvent.ACTION_UP,key,0,meta,device,0);
    index++;
    if ((mods & KeyEvent.META_ALT_ON) != 0) {
      meta&=~KeyEvent.META_ALT_ON;
      rv[index]=new KeyEvent(now,now,KeyEvent.ACTION_UP,KeyEvent.KEYCODE_ALT_LEFT,0,meta,device,0);
      index++;
    }
    if ((mods & KeyEvent.META_SHIFT_ON) != 0) {
      meta&=~KeyEvent.META_SHIFT_ON;
      rv[index]=new KeyEvent(now,now,KeyEvent.ACTION_UP,KeyEvent.KEYCODE_SHIFT_LEFT,0,meta,device,0);
      index++;
    }
    if ((mods & KeyEvent.META_SYM_ON) != 0) {
      meta&=~KeyEvent.META_SYM_ON;
      rv[index]=new KeyEvent(now,now,KeyEvent.ACTION_UP,KeyEvent.KEYCODE_SYM,0,meta,device,0);
      index++;
    }
  }
  return rv;
}
