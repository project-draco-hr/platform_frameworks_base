{
  mPrivateFlags|=PFLAG_DRAWN | PFLAG_DRAWING_CACHE_VALID;
  mPrivateFlags&=~PFLAG_DIRTY_MASK;
  if (mLayer == null) {
    if (mAttachInfo == null || mAttachInfo.mHardwareRenderer == null) {
      return null;
    }
    mLayer=mAttachInfo.mHardwareRenderer.createHardwareLayer(mOpaque);
    if (!mUpdateSurface) {
      mSurface=mAttachInfo.mHardwareRenderer.createSurfaceTexture(mLayer);
    }
    mSurface.setDefaultBufferSize(getWidth(),getHeight());
    nCreateNativeWindow(mSurface);
    mUpdateListener=new SurfaceTexture.OnFrameAvailableListener(){
      @Override public void onFrameAvailable(      SurfaceTexture surfaceTexture){
        updateLayer();
        if (Looper.myLooper() == Looper.getMainLooper()) {
          invalidate();
        }
 else {
          postInvalidate();
        }
      }
    }
;
    mSurface.setOnFrameAvailableListener(mUpdateListener);
    if (mListener != null && !mUpdateSurface) {
      mListener.onSurfaceTextureAvailable(mSurface,getWidth(),getHeight());
    }
    mLayer.setLayerPaint(mLayerPaint);
  }
  if (mUpdateSurface) {
    mUpdateSurface=false;
    updateLayer();
    mMatrixChanged=true;
    mAttachInfo.mHardwareRenderer.setSurfaceTexture(mLayer,mSurface);
    mSurface.setDefaultBufferSize(getWidth(),getHeight());
  }
  applyUpdate();
  applyTransformMatrix();
  return mLayer;
}
