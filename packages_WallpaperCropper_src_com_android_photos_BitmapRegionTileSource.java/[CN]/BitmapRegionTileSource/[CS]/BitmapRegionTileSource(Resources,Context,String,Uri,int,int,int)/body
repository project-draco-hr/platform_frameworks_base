{
  mTileSize=TiledImageRenderer.suggestedTileSize(context);
  mRotation=rotation;
  try {
    if (path != null) {
      mDecoder=BitmapRegionDecoder.newInstance(path,true);
    }
 else     if (uri != null) {
      InputStream is=context.getContentResolver().openInputStream(uri);
      BufferedInputStream bis=new BufferedInputStream(is);
      mDecoder=BitmapRegionDecoder.newInstance(bis,true);
    }
 else {
      InputStream is=res.openRawResource(resId);
      BufferedInputStream bis=new BufferedInputStream(is);
      mDecoder=BitmapRegionDecoder.newInstance(bis,true);
    }
    mWidth=mDecoder.getWidth();
    mHeight=mDecoder.getHeight();
  }
 catch (  IOException e) {
    Log.w("BitmapRegionTileSource","ctor failed",e);
  }
  mOptions=new BitmapFactory.Options();
  mOptions.inPreferredConfig=Bitmap.Config.ARGB_8888;
  mOptions.inPreferQualityOverSpeed=true;
  mOptions.inTempStorage=new byte[16 * 1024];
  if (previewSize != 0) {
    previewSize=Math.min(previewSize,MAX_PREVIEW_SIZE);
    Bitmap preview=decodePreview(res,context,path,uri,resId,previewSize);
    if (preview.getWidth() <= GL_SIZE_LIMIT && preview.getHeight() <= GL_SIZE_LIMIT) {
      mPreview=new BitmapTexture(preview);
    }
 else {
      Log.w(TAG,String.format("Failed to create preview of apropriate size! " + " in: %dx%d, out: %dx%d",mWidth,mHeight,preview.getWidth(),preview.getHeight()));
    }
  }
}
