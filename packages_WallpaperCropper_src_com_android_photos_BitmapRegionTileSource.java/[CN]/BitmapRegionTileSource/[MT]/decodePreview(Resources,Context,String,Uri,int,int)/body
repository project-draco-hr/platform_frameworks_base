{
  float scale=(float)targetSize / Math.max(mWidth,mHeight);
  mOptions.inSampleSize=BitmapUtils.computeSampleSizeLarger(scale);
  mOptions.inJustDecodeBounds=false;
  Bitmap result=null;
  if (file != null) {
    result=BitmapFactory.decodeFile(file,mOptions);
  }
 else   if (uri != null) {
    try {
      InputStream is=context.getContentResolver().openInputStream(uri);
      BufferedInputStream bis=new BufferedInputStream(is);
      result=BitmapFactory.decodeStream(bis,null,mOptions);
    }
 catch (    IOException e) {
      Log.w("BitmapRegionTileSource","getting preview failed",e);
    }
  }
 else {
    result=BitmapFactory.decodeResource(res,resId,mOptions);
  }
  if (result == null) {
    return null;
  }
  scale=(float)targetSize / (float)(Math.max(result.getWidth(),result.getHeight()));
  if (scale <= 0.5) {
    result=BitmapUtils.resizeBitmapByScale(result,scale,true);
  }
  return ensureGLCompatibleBitmap(result);
}
