{
  if (DEBUG_SERVICE)   Slog.v(TAG,"<<< DONE EXECUTING " + r + ": nesting="+ r.executeNesting+ ", inDestroying="+ inDestroying+ ", app="+ r.app);
 else   if (DEBUG_SERVICE_EXECUTING)   Slog.v(TAG,"<<< DONE EXECUTING " + r.shortName);
  r.executeNesting--;
  if (r.executeNesting <= 0) {
    if (r.app != null) {
      if (DEBUG_SERVICE)       Slog.v(TAG,"Nesting at 0 of " + r.shortName);
      r.app.execServicesFg=false;
      r.app.executingServices.remove(r);
      if (r.app.executingServices.size() == 0) {
        if (DEBUG_SERVICE || DEBUG_SERVICE_EXECUTING)         Slog.v(TAG,"No more executingServices of " + r.shortName);
        mAm.mHandler.removeMessages(ActivityManagerService.SERVICE_TIMEOUT_MSG,r.app);
      }
 else       if (r.executeFg) {
        for (int i=r.app.executingServices.size() - 1; i >= 0; i--) {
          if (r.app.executingServices.valueAt(i).executeFg) {
            r.app.execServicesFg=true;
            break;
          }
        }
      }
      if (inDestroying) {
        if (DEBUG_SERVICE)         Slog.v(TAG,"doneExecuting remove destroying " + r);
        mDestroyingServices.remove(r);
        r.bindings.clear();
      }
      mAm.updateOomAdjLocked(r.app);
    }
    r.executeFg=false;
    if (r.tracker != null) {
      r.tracker.setExecuting(false,mAm.mProcessStats.getMemFactorLocked(),SystemClock.uptimeMillis());
      if (finishing) {
        r.tracker.clearCurrentOwner(r,false);
        r.tracker=null;
      }
    }
    if (finishing) {
      if (r.app != null) {
        r.app.services.remove(r);
      }
      r.app=null;
    }
  }
}
