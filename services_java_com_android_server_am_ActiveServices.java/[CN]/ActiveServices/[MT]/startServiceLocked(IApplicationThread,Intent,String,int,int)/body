{
  if (DEBUG_SERVICE)   Slog.v(TAG,"startService: " + service + " type="+ resolvedType+ " args="+ service.getExtras());
  if (caller != null) {
    final ProcessRecord callerApp=mAm.getRecordForAppLocked(caller);
    if (callerApp == null) {
      throw new SecurityException("Unable to find app for caller " + caller + " (pid="+ Binder.getCallingPid()+ ") when starting service "+ service);
    }
  }
  ServiceLookupResult res=retrieveServiceLocked(service,resolvedType,callingPid,callingUid,UserHandle.getUserId(callingUid),true);
  if (res == null) {
    return null;
  }
  if (res.record == null) {
    return new ComponentName("!",res.permission != null ? res.permission : "private to package");
  }
  ServiceRecord r=res.record;
  NeededUriGrants neededGrants=mAm.checkGrantUriPermissionFromIntentLocked(callingUid,r.packageName,service,service.getFlags(),null);
  if (unscheduleServiceRestartLocked(r)) {
    if (DEBUG_SERVICE)     Slog.v(TAG,"START SERVICE WHILE RESTART PENDING: " + r);
  }
  r.startRequested=true;
  r.callStart=false;
  r.pendingStarts.add(new ServiceRecord.StartItem(r,false,r.makeNextStartId(),service,neededGrants));
  r.lastActivity=SystemClock.uptimeMillis();
synchronized (r.stats.getBatteryStats()) {
    r.stats.startRunningLocked();
  }
  if (!bringUpServiceLocked(r,service.getFlags(),false)) {
    return new ComponentName("!","Service process is bad");
  }
  return r.name;
}
