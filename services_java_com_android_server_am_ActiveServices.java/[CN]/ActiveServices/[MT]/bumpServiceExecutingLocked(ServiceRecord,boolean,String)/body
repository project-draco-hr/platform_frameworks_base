{
  if (DEBUG_SERVICE)   Log.v(TAG,">>> EXECUTING " + why + " of "+ r+ " in app "+ r.app);
 else   if (DEBUG_SERVICE_EXECUTING)   Log.v(TAG,">>> EXECUTING " + why + " of "+ r.shortName);
  long now=SystemClock.uptimeMillis();
  if (r.executeNesting == 0) {
    r.executeFg=fg;
    ProcessTracker.ServiceState stracker=r.getTracker();
    if (stracker != null) {
      stracker.setExecuting(true,mAm.mProcessTracker.getMemFactorLocked(),now);
    }
    if (r.app != null) {
      if (r.app.executingServices.size() == 0) {
        Message msg=mAm.mHandler.obtainMessage(ActivityManagerService.SERVICE_TIMEOUT_MSG);
        msg.obj=r.app;
        mAm.mHandler.sendMessageAtTime(msg,fg ? (now + SERVICE_TIMEOUT) : (now + SERVICE_BACKGROUND_TIMEOUT));
      }
      r.app.executingServices.add(r);
      r.app.execServicesFg|=fg;
    }
  }
 else   if (r.app != null && fg && !r.app.execServicesFg) {
    mAm.mHandler.removeMessages(ActivityManagerService.SERVICE_TIMEOUT_MSG);
    Message msg=mAm.mHandler.obtainMessage(ActivityManagerService.SERVICE_TIMEOUT_MSG);
    msg.obj=r.app;
    mAm.mHandler.sendMessageAtTime(msg,now + SERVICE_TIMEOUT);
    r.app.execServicesFg=true;
  }
  r.executeFg|=fg;
  r.executeNesting++;
  r.executingStart=now;
}
