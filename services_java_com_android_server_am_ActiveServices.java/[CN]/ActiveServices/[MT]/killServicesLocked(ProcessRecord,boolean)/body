{
  if (false) {
    if (app.services.size() > 0) {
      Iterator<ServiceRecord> it=app.services.iterator();
      while (it.hasNext()) {
        ServiceRecord r=it.next();
        for (int conni=r.connections.size() - 1; conni >= 0; conni--) {
          ArrayList<ConnectionRecord> cl=r.connections.valueAt(conni);
          for (int i=0; i < cl.size(); i++) {
            ConnectionRecord c=cl.get(i);
            if (c.binding.client != app) {
              try {
              }
 catch (              Exception e) {
                Slog.w(TAG,"Exception thrown disconnected servce " + r.shortName + " from app "+ app.processName,e);
              }
            }
          }
        }
      }
    }
  }
  if (app.connections.size() > 0) {
    Iterator<ConnectionRecord> it=app.connections.iterator();
    while (it.hasNext()) {
      ConnectionRecord r=it.next();
      removeConnectionLocked(r,app,null);
    }
  }
  app.connections.clear();
  if (app.services.size() != 0) {
    Iterator<ServiceRecord> it=app.services.iterator();
    while (it.hasNext()) {
      ServiceRecord sr=it.next();
synchronized (sr.stats.getBatteryStats()) {
        sr.stats.stopLaunchedLocked();
      }
      sr.app=null;
      sr.isolatedProc=null;
      sr.executeNesting=0;
      if (mStoppingServices.remove(sr)) {
        if (DEBUG_SERVICE)         Slog.v(TAG,"killServices remove stopping " + sr);
      }
      final int numClients=sr.bindings.size();
      for (int bindingi=numClients - 1; bindingi >= 0; bindingi--) {
        IntentBindRecord b=sr.bindings.valueAt(bindingi);
        if (DEBUG_SERVICE)         Slog.v(TAG,"Killing binding " + b + ": shouldUnbind="+ b.hasBound);
        b.binder=null;
        b.requested=b.received=b.hasBound=false;
      }
      if (sr.crashCount >= 2 && (sr.serviceInfo.applicationInfo.flags & ApplicationInfo.FLAG_PERSISTENT) == 0) {
        Slog.w(TAG,"Service crashed " + sr.crashCount + " times, stopping: "+ sr);
        EventLog.writeEvent(EventLogTags.AM_SERVICE_CRASHED_TOO_MUCH,sr.userId,sr.crashCount,sr.shortName,app.pid);
        bringDownServiceLocked(sr,true);
      }
 else       if (!allowRestart) {
        bringDownServiceLocked(sr,true);
      }
 else {
        boolean canceled=scheduleServiceRestartLocked(sr,true);
        if (sr.startRequested && (sr.stopIfKilled || canceled)) {
          if (sr.pendingStarts.size() == 0) {
            sr.startRequested=false;
            if (numClients > 0) {
              bringDownServiceLocked(sr,true);
            }
          }
        }
      }
    }
    if (!allowRestart) {
      app.services.clear();
    }
  }
  int i=mStoppingServices.size();
  while (i > 0) {
    i--;
    ServiceRecord sr=mStoppingServices.get(i);
    if (sr.app == app) {
      mStoppingServices.remove(i);
      if (DEBUG_SERVICE)       Slog.v(TAG,"killServices remove stopping " + sr);
    }
  }
  app.executingServices.clear();
}
