{
  final int mLoopSleepTimeMs=5;
  final int messageA=1;
  TestLooper mockLooper=new TestLooper();
class TestHandler extends Handler {
    public volatile boolean handledMessage=false;
    TestHandler(    Looper looper){
      super(looper);
    }
    @Override public void handleMessage(    Message msg){
      if (msg.what == messageA) {
        handledMessage=true;
      }
    }
  }
  TestHandler testHandler=new TestHandler(mockLooper.getLooper());
  mockLooper.startAutoDispatch();
  testHandler.sendMessage(testHandler.obtainMessage(messageA));
  while (!testHandler.handledMessage) {
    try {
      Thread.sleep(mLoopSleepTimeMs);
    }
 catch (    InterruptedException e) {
    }
  }
  mockLooper.stopAutoDispatch();
  assertTrue("TestHandler should have received messageA",testHandler.handledMessage);
}
