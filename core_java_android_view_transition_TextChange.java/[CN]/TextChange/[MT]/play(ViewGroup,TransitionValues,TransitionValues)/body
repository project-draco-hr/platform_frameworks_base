{
  if (startValues == null || endValues == null || !(endValues.view instanceof TextView)) {
    return null;
  }
  final TextView view=(TextView)endValues.view;
  Map<String,Object> startVals=startValues.values;
  Map<String,Object> endVals=endValues.values;
  String startText=(String)startVals.get(PROPNAME_TEXT);
  final String endText=(String)endVals.get(PROPNAME_TEXT);
  if (!startText.equals(endText)) {
    view.setText(startText);
    Animator anim;
    if (mChangeBehavior == CHANGE_BEHAVIOR_KEEP) {
      anim=ValueAnimator.ofFloat(0,1);
      anim.addListener(new AnimatorListenerAdapter(){
        @Override public void onAnimationEnd(        Animator animation){
          view.setText(endText);
        }
      }
);
    }
 else {
      final int startColor=(Integer)startVals.get(PROPNAME_TEXT_COLOR);
      final int endColor=(Integer)endVals.get(PROPNAME_TEXT_COLOR);
      ValueAnimator outAnim=null, inAnim=null;
      if (mChangeBehavior == CHANGE_BEHAVIOR_OUT_IN || mChangeBehavior == CHANGE_BEHAVIOR_OUT) {
        outAnim=ValueAnimator.ofInt(255,0);
        outAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){
          @Override public void onAnimationUpdate(          ValueAnimator animation){
            int currAlpha=(Integer)animation.getAnimatedValue();
            view.setTextColor(currAlpha << 24 | Color.red(startColor) << 16 | Color.green(startColor) << 8 | Color.red(startColor));
          }
        }
);
        outAnim.addListener(new AnimatorListenerAdapter(){
          @Override public void onAnimationEnd(          Animator animation){
            view.setText(endText);
          }
        }
);
      }
      if (mChangeBehavior == CHANGE_BEHAVIOR_OUT_IN || mChangeBehavior == CHANGE_BEHAVIOR_IN) {
        inAnim=ValueAnimator.ofInt(0,255);
        inAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){
          @Override public void onAnimationUpdate(          ValueAnimator animation){
            int currAlpha=(Integer)animation.getAnimatedValue();
            view.setTextColor(currAlpha << 24 | Color.red(endColor) << 16 | Color.green(endColor) << 8 | Color.red(endColor));
          }
        }
);
      }
      if (outAnim != null && inAnim != null) {
        anim=new AnimatorSet();
        ((AnimatorSet)anim).playSequentially(outAnim,inAnim);
      }
 else       if (outAnim != null) {
        anim=outAnim;
      }
 else {
        anim=inAnim;
      }
    }
    return anim;
  }
  return null;
}
