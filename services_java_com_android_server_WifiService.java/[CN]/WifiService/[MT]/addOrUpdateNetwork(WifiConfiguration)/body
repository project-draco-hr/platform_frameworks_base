{
  enforceChangePermission();
  int netId=config.networkId;
  boolean newNetwork=netId == -1;
  boolean doReconfig;
  int currentPriority;
  if (newNetwork) {
    netId=WifiNative.addNetworkCommand();
    if (netId < 0) {
      if (DBG) {
        Log.d(TAG,"Failed to add a network!");
      }
      return -1;
    }
    doReconfig=true;
  }
 else {
    String priorityVal=WifiNative.getNetworkVariableCommand(netId,WifiConfiguration.priorityVarName);
    currentPriority=-1;
    if (!TextUtils.isEmpty(priorityVal)) {
      try {
        currentPriority=Integer.parseInt(priorityVal);
      }
 catch (      NumberFormatException ignore) {
      }
    }
    doReconfig=currentPriority != config.priority;
  }
  mNeedReconfig=mNeedReconfig || doReconfig;
  if (config.hiddenSSID) {
    addOrUpdateHiddenNetwork(netId,config.status != WifiConfiguration.Status.DISABLED);
  }
  setVariables: {
    if (config.SSID != null && !WifiNative.setNetworkVariableCommand(netId,WifiConfiguration.ssidVarName,config.SSID)) {
      if (DBG) {
        Log.d(TAG,"failed to set SSID: " + config.SSID);
      }
      break setVariables;
    }
    if (config.BSSID != null && !WifiNative.setNetworkVariableCommand(netId,WifiConfiguration.bssidVarName,config.BSSID)) {
      if (DBG) {
        Log.d(TAG,"failed to set BSSID: " + config.BSSID);
      }
      break setVariables;
    }
    String allowedKeyManagementString=makeString(config.allowedKeyManagement,WifiConfiguration.KeyMgmt.strings);
    if (config.allowedKeyManagement.cardinality() != 0 && !WifiNative.setNetworkVariableCommand(netId,WifiConfiguration.KeyMgmt.varName,allowedKeyManagementString)) {
      if (DBG) {
        Log.d(TAG,"failed to set key_mgmt: " + allowedKeyManagementString);
      }
      break setVariables;
    }
    String allowedProtocolsString=makeString(config.allowedProtocols,WifiConfiguration.Protocol.strings);
    if (config.allowedProtocols.cardinality() != 0 && !WifiNative.setNetworkVariableCommand(netId,WifiConfiguration.Protocol.varName,allowedProtocolsString)) {
      if (DBG) {
        Log.d(TAG,"failed to set proto: " + allowedProtocolsString);
      }
      break setVariables;
    }
    String allowedAuthAlgorithmsString=makeString(config.allowedAuthAlgorithms,WifiConfiguration.AuthAlgorithm.strings);
    if (config.allowedAuthAlgorithms.cardinality() != 0 && !WifiNative.setNetworkVariableCommand(netId,WifiConfiguration.AuthAlgorithm.varName,allowedAuthAlgorithmsString)) {
      if (DBG) {
        Log.d(TAG,"failed to set auth_alg: " + allowedAuthAlgorithmsString);
      }
      break setVariables;
    }
    String allowedPairwiseCiphersString=makeString(config.allowedPairwiseCiphers,WifiConfiguration.PairwiseCipher.strings);
    if (config.allowedPairwiseCiphers.cardinality() != 0 && !WifiNative.setNetworkVariableCommand(netId,WifiConfiguration.PairwiseCipher.varName,allowedPairwiseCiphersString)) {
      if (DBG) {
        Log.d(TAG,"failed to set pairwise: " + allowedPairwiseCiphersString);
      }
      break setVariables;
    }
    String allowedGroupCiphersString=makeString(config.allowedGroupCiphers,WifiConfiguration.GroupCipher.strings);
    if (config.allowedGroupCiphers.cardinality() != 0 && !WifiNative.setNetworkVariableCommand(netId,WifiConfiguration.GroupCipher.varName,allowedGroupCiphersString)) {
      if (DBG) {
        Log.d(TAG,"failed to set group: " + allowedGroupCiphersString);
      }
      break setVariables;
    }
    if (config.preSharedKey != null && !config.preSharedKey.equals("*") && !WifiNative.setNetworkVariableCommand(netId,WifiConfiguration.pskVarName,config.preSharedKey)) {
      if (DBG) {
        Log.d(TAG,"failed to set psk: " + config.preSharedKey);
      }
      break setVariables;
    }
    boolean hasSetKey=false;
    if (config.wepKeys != null) {
      for (int i=0; i < config.wepKeys.length; i++) {
        if (config.wepKeys[i] != null && !config.wepKeys[i].equals("*")) {
          if (!WifiNative.setNetworkVariableCommand(netId,WifiConfiguration.wepKeyVarNames[i],config.wepKeys[i])) {
            if (DBG) {
              Log.d(TAG,"failed to set wep_key" + i + ": "+ config.wepKeys[i]);
            }
            break setVariables;
          }
          hasSetKey=true;
        }
      }
    }
    if (hasSetKey) {
      if (!WifiNative.setNetworkVariableCommand(netId,WifiConfiguration.wepTxKeyIdxVarName,Integer.toString(config.wepTxKeyIndex))) {
        if (DBG) {
          Log.d(TAG,"failed to set wep_tx_keyidx: " + config.wepTxKeyIndex);
        }
        break setVariables;
      }
    }
    if (!WifiNative.setNetworkVariableCommand(netId,WifiConfiguration.priorityVarName,Integer.toString(config.priority))) {
      if (DBG) {
        Log.d(TAG,config.SSID + ": failed to set priority: " + config.priority);
      }
      break setVariables;
    }
    if (config.hiddenSSID && !WifiNative.setNetworkVariableCommand(netId,WifiConfiguration.hiddenSSIDVarName,Integer.toString(config.hiddenSSID ? 1 : 0))) {
      if (DBG) {
        Log.d(TAG,config.SSID + ": failed to set hiddenSSID: " + config.hiddenSSID);
      }
      break setVariables;
    }
    return netId;
  }
  if (newNetwork) {
    removeNetwork(netId);
    if (DBG) {
      Log.d(TAG,"Failed to set a network variable, removed network: " + netId);
    }
  }
  return -1;
}
