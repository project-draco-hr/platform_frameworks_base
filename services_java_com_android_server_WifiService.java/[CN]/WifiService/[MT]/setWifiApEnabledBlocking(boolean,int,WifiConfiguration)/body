{
  final int eventualWifiApState=enable ? WIFI_AP_STATE_ENABLED : WIFI_AP_STATE_DISABLED;
  if (mWifiApState == eventualWifiApState) {
    if (enable && (wifiConfig != null)) {
      try {
        persistApConfiguration(wifiConfig);
        nwService.setAccessPoint(wifiConfig,mWifiStateTracker.getInterfaceName(),SOFTAP_IFACE);
        return true;
      }
 catch (      Exception e) {
        Slog.e(TAG,"Exception in nwService during AP restart");
        try {
          nwService.stopAccessPoint();
        }
 catch (        Exception ee) {
          Slog.e(TAG,"Could not stop AP, :" + ee);
        }
        setWifiApEnabledState(WIFI_AP_STATE_FAILED,uid,DriverAction.DRIVER_UNLOAD);
        return false;
      }
    }
 else {
      return true;
    }
  }
  if ((mWifiStateTracker.getWifiState() == WIFI_STATE_ENABLED) && enable) {
    setWifiApEnabledState(WIFI_AP_STATE_FAILED,uid,DriverAction.NO_DRIVER_UNLOAD);
    return false;
  }
  setWifiApEnabledState(enable ? WIFI_AP_STATE_ENABLING : WIFI_AP_STATE_DISABLING,uid,DriverAction.NO_DRIVER_UNLOAD);
  if (enable) {
    if (wifiConfig == null && ((wifiConfig=getWifiApConfiguration()) == null)) {
      wifiConfig=new WifiConfiguration();
      wifiConfig.SSID=mContext.getString(R.string.wifi_tether_configure_ssid_default);
      wifiConfig.allowedKeyManagement.set(KeyMgmt.NONE);
    }
    persistApConfiguration(wifiConfig);
    if (!mWifiStateTracker.loadDriver()) {
      Slog.e(TAG,"Failed to load Wi-Fi driver for AP mode");
      setWifiApEnabledState(WIFI_AP_STATE_FAILED,uid,DriverAction.NO_DRIVER_UNLOAD);
      return false;
    }
    try {
      nwService.startAccessPoint(wifiConfig,mWifiStateTracker.getInterfaceName(),SOFTAP_IFACE);
    }
 catch (    Exception e) {
      Slog.e(TAG,"Exception in startAccessPoint()");
      setWifiApEnabledState(WIFI_AP_STATE_FAILED,uid,DriverAction.DRIVER_UNLOAD);
      return false;
    }
  }
 else {
    try {
      nwService.stopAccessPoint();
    }
 catch (    Exception e) {
      Slog.e(TAG,"Exception in stopAccessPoint()");
      setWifiApEnabledState(WIFI_AP_STATE_FAILED,uid,DriverAction.DRIVER_UNLOAD);
      return false;
    }
    if (!mWifiStateTracker.unloadDriver()) {
      Slog.e(TAG,"Failed to unload Wi-Fi driver for AP mode");
      setWifiApEnabledState(WIFI_AP_STATE_FAILED,uid,DriverAction.NO_DRIVER_UNLOAD);
      return false;
    }
  }
  setWifiApEnabledState(eventualWifiApState,uid,DriverAction.NO_DRIVER_UNLOAD);
  return true;
}
