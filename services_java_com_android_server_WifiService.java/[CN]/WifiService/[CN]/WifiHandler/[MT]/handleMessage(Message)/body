{
switch (msg.what) {
case MESSAGE_ENABLE_WIFI:
    setWifiEnabledBlocking(true,msg.arg1 == 1,msg.arg2);
  if (mWifiWatchdogService == null) {
    mWifiWatchdogService=new WifiWatchdogService(mContext,mWifiStateTracker);
  }
sWakeLock.release();
break;
case MESSAGE_START_WIFI:
mWifiStateTracker.setScanOnlyMode(msg.arg1 != 0);
mWifiStateTracker.restart();
sWakeLock.release();
break;
case MESSAGE_UPDATE_STATE:
doUpdateWifiState();
break;
case MESSAGE_DISABLE_WIFI:
setWifiEnabledBlocking(false,msg.arg1 == 1,msg.arg2);
mWifiWatchdogService=null;
sWakeLock.release();
break;
case MESSAGE_STOP_WIFI:
mWifiStateTracker.disconnectAndStop();
break;
case MESSAGE_START_ACCESS_POINT:
setWifiApEnabledBlocking(true,msg.arg1,(WifiConfiguration)msg.obj);
sWakeLock.release();
break;
case MESSAGE_STOP_ACCESS_POINT:
setWifiApEnabledBlocking(false,msg.arg1,(WifiConfiguration)msg.obj);
sWakeLock.release();
break;
case MESSAGE_SET_CHANNELS:
setNumAllowedChannelsBlocking(msg.arg1,msg.arg2 == 1);
break;
}
}
