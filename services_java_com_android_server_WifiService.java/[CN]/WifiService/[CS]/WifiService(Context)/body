{
  mContext=context;
  mWifiStateMachine=new WifiStateMachine(mContext);
  mWifiStateMachine.enableRssiPolling(true);
  mBatteryStats=BatteryStatsService.getService();
  mAlarmManager=(AlarmManager)mContext.getSystemService(Context.ALARM_SERVICE);
  Intent idleIntent=new Intent(ACTION_DEVICE_IDLE,null);
  mIdleIntent=PendingIntent.getBroadcast(mContext,IDLE_REQUEST,idleIntent,0);
  Intent scanIntent=new Intent(ACTION_START_SCAN,null);
  mScanIntent=PendingIntent.getBroadcast(mContext,SCAN_REQUEST,scanIntent,0);
  HandlerThread wifiThread=new HandlerThread("WifiService");
  wifiThread.start();
  mContext.registerReceiver(new BroadcastReceiver(){
    @Override public void onReceive(    Context context,    Intent intent){
      mAirplaneModeOverwridden.set(false);
      if (!isAirplaneModeOn() && testAndClearWifiSavedState()) {
        persistWifiEnabled(true);
      }
      updateWifiState();
    }
  }
,new IntentFilter(Intent.ACTION_AIRPLANE_MODE_CHANGED));
  mContext.registerReceiver(new BroadcastReceiver(){
    @Override public void onReceive(    Context context,    Intent intent){
      ArrayList<String> available=intent.getStringArrayListExtra(ConnectivityManager.EXTRA_AVAILABLE_TETHER);
      ArrayList<String> active=intent.getStringArrayListExtra(ConnectivityManager.EXTRA_ACTIVE_TETHER);
      updateTetherState(available,active);
    }
  }
,new IntentFilter(ConnectivityManager.ACTION_TETHER_STATE_CHANGED));
  IntentFilter filter=new IntentFilter();
  filter.addAction(WifiManager.WIFI_STATE_CHANGED_ACTION);
  filter.addAction(WifiManager.NETWORK_STATE_CHANGED_ACTION);
  filter.addAction(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION);
  mContext.registerReceiver(new BroadcastReceiver(){
    @Override public void onReceive(    Context context,    Intent intent){
      if (intent.getAction().equals(WifiManager.WIFI_STATE_CHANGED_ACTION)) {
        resetNotification();
      }
 else       if (intent.getAction().equals(WifiManager.NETWORK_STATE_CHANGED_ACTION)) {
        mNetworkInfo=(NetworkInfo)intent.getParcelableExtra(WifiManager.EXTRA_NETWORK_INFO);
switch (mNetworkInfo.getDetailedState()) {
case CONNECTED:
case DISCONNECTED:
          resetNotification();
        break;
    }
  }
 else   if (intent.getAction().equals(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION)) {
    checkAndSetNotification();
  }
}
}
,filter);
NOTIFICATION_REPEAT_DELAY_MS=Settings.Secure.getInt(context.getContentResolver(),Settings.Secure.WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY,900) * 1000l;
mNotificationEnabledSettingObserver=new NotificationEnabledSettingObserver(new Handler());
mNotificationEnabledSettingObserver.register();
}
