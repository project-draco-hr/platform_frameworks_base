{
  if (mIsPowered && mLowPowerModeSetting) {
    if (DEBUG_SPEW) {
      Slog.d(TAG,"updateLowPowerModeLocked: powered, turning setting off");
    }
    Settings.Global.putInt(mContext.getContentResolver(),Settings.Global.LOW_POWER_MODE,0);
    mLowPowerModeSetting=false;
  }
 else   if (!mIsPowered && mAutoLowPowerModeEnabled && !mAutoLowPowerModeSnoozing&& mBatteryLevelLow&& !mLowPowerModeSetting) {
    if (DEBUG_SPEW) {
      Slog.d(TAG,"updateLowPowerModeLocked: trigger level reached, turning setting on");
    }
    Settings.Global.putInt(mContext.getContentResolver(),Settings.Global.LOW_POWER_MODE,1);
    mLowPowerModeSetting=true;
  }
  final boolean lowPowerModeEnabled=mLowPowerModeSetting;
  if (mLowPowerModeEnabled != lowPowerModeEnabled) {
    mLowPowerModeEnabled=lowPowerModeEnabled;
    powerHintInternal(POWER_HINT_LOW_POWER_MODE,lowPowerModeEnabled ? 1 : 0);
    setSurfaceFlingerLowPowerMode(lowPowerModeEnabled ? 1 : 0);
    mLowPowerModeEnabled=lowPowerModeEnabled;
    BackgroundThread.getHandler().post(new Runnable(){
      @Override public void run(){
        Intent intent=new Intent(PowerManager.ACTION_POWER_SAVE_MODE_CHANGING).putExtra(PowerManager.EXTRA_POWER_SAVE_MODE,mLowPowerModeEnabled).addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY);
        mContext.sendBroadcast(intent);
        ArrayList<PowerManagerInternal.LowPowerModeListener> listeners;
synchronized (mLock) {
          listeners=new ArrayList<PowerManagerInternal.LowPowerModeListener>(mLowPowerModeListeners);
        }
        for (int i=0; i < listeners.size(); i++) {
          listeners.get(i).onLowPowerModeChanged(lowPowerModeEnabled);
        }
        intent=new Intent(PowerManager.ACTION_POWER_SAVE_MODE_CHANGED);
        intent.addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY);
        mContext.sendBroadcast(intent);
      }
    }
);
  }
}
