{
  if ((dirty & (DIRTY_WAKE_LOCKS | DIRTY_WAKEFULNESS)) != 0) {
    mWakeLockSummary=0;
    final int numWakeLocks=mWakeLocks.size();
    for (int i=0; i < numWakeLocks; i++) {
      final WakeLock wakeLock=mWakeLocks.get(i);
switch (wakeLock.mFlags & PowerManager.WAKE_LOCK_LEVEL_MASK) {
case PowerManager.PARTIAL_WAKE_LOCK:
        mWakeLockSummary|=WAKE_LOCK_CPU;
      break;
case PowerManager.FULL_WAKE_LOCK:
    mWakeLockSummary|=WAKE_LOCK_SCREEN_BRIGHT | WAKE_LOCK_BUTTON_BRIGHT;
  break;
case PowerManager.SCREEN_BRIGHT_WAKE_LOCK:
mWakeLockSummary|=WAKE_LOCK_SCREEN_BRIGHT;
break;
case PowerManager.SCREEN_DIM_WAKE_LOCK:
mWakeLockSummary|=WAKE_LOCK_SCREEN_DIM;
break;
case PowerManager.PROXIMITY_SCREEN_OFF_WAKE_LOCK:
mWakeLockSummary|=WAKE_LOCK_PROXIMITY_SCREEN_OFF;
break;
case PowerManager.DOZE_WAKE_LOCK:
mWakeLockSummary|=WAKE_LOCK_DOZE;
break;
case PowerManager.DRAW_WAKE_LOCK:
mWakeLockSummary|=WAKE_LOCK_DRAW;
break;
}
}
if (mWakefulness != WAKEFULNESS_DOZING) {
mWakeLockSummary&=~(WAKE_LOCK_DOZE | WAKE_LOCK_DRAW);
}
if (mWakefulness == WAKEFULNESS_ASLEEP || (mWakeLockSummary & WAKE_LOCK_DOZE) != 0) {
mWakeLockSummary&=~(WAKE_LOCK_SCREEN_BRIGHT | WAKE_LOCK_SCREEN_DIM | WAKE_LOCK_BUTTON_BRIGHT);
if (mWakefulness == WAKEFULNESS_ASLEEP) {
mWakeLockSummary&=~WAKE_LOCK_PROXIMITY_SCREEN_OFF;
}
}
if ((mWakeLockSummary & (WAKE_LOCK_SCREEN_BRIGHT | WAKE_LOCK_SCREEN_DIM)) != 0) {
if (mWakefulness == WAKEFULNESS_AWAKE) {
mWakeLockSummary|=WAKE_LOCK_CPU | WAKE_LOCK_STAY_AWAKE;
}
 else if (mWakefulness == WAKEFULNESS_DREAMING) {
mWakeLockSummary|=WAKE_LOCK_CPU;
}
}
if ((mWakeLockSummary & WAKE_LOCK_DRAW) != 0) {
mWakeLockSummary|=WAKE_LOCK_CPU;
}
if (DEBUG_SPEW) {
Slog.d(TAG,"updateWakeLockSummaryLocked: mWakefulness=" + PowerManagerInternal.wakefulnessToString(mWakefulness) + ", mWakeLockSummary=0x"+ Integer.toHexString(mWakeLockSummary));
}
}
}
