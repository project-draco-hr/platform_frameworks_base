{
  if ((dirty & (DIRTY_WAKE_LOCKS | DIRTY_USER_ACTIVITY | DIRTY_WAKEFULNESS| DIRTY_SETTINGS)) != 0) {
    mHandler.removeMessages(MSG_USER_ACTIVITY_TIMEOUT);
    long nextTimeout=0;
    if (mWakefulness == WAKEFULNESS_AWAKE || mWakefulness == WAKEFULNESS_DREAMING || mWakefulness == WAKEFULNESS_DOZING) {
      final int screenOffTimeout=getScreenOffTimeoutLocked();
      final int screenDimDuration=getScreenDimDurationLocked(screenOffTimeout);
      mUserActivitySummary=0;
      if (mLastUserActivityTime >= mLastWakeTime) {
        nextTimeout=mLastUserActivityTime + screenOffTimeout - screenDimDuration;
        if (now < nextTimeout) {
          mUserActivitySummary|=USER_ACTIVITY_SCREEN_BRIGHT;
        }
 else {
          nextTimeout=mLastUserActivityTime + screenOffTimeout;
          if (now < nextTimeout) {
            mUserActivitySummary|=USER_ACTIVITY_SCREEN_DIM;
          }
        }
      }
      if (mUserActivitySummary == 0 && mLastUserActivityTimeNoChangeLights >= mLastWakeTime) {
        nextTimeout=mLastUserActivityTimeNoChangeLights + screenOffTimeout;
        if (now < nextTimeout && mDisplayPowerRequest.wantScreenOnNormal()) {
          mUserActivitySummary=mDisplayPowerRequest.screenState == DisplayPowerRequest.SCREEN_STATE_BRIGHT ? USER_ACTIVITY_SCREEN_BRIGHT : USER_ACTIVITY_SCREEN_DIM;
        }
      }
      if (mUserActivitySummary != 0) {
        Message msg=mHandler.obtainMessage(MSG_USER_ACTIVITY_TIMEOUT);
        msg.setAsynchronous(true);
        mHandler.sendMessageAtTime(msg,nextTimeout);
      }
    }
 else {
      mUserActivitySummary=0;
    }
    if (DEBUG_SPEW) {
      Slog.d(TAG,"updateUserActivitySummaryLocked: mWakefulness=" + wakefulnessToString(mWakefulness) + ", mUserActivitySummary=0x"+ Integer.toHexString(mUserActivitySummary)+ ", nextTimeout="+ TimeUtils.formatUptime(nextTimeout));
    }
  }
}
