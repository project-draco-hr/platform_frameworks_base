{
  File dataDir=Environment.getDataDirectory();
  @SuppressWarnings("deprecation") long lowThreshold=StorageManager.from(mContext).getStorageLowBytes(dataDir);
  if (lowThreshold == 0) {
    throw new IllegalStateException("Invalid low memory threshold");
  }
  long usableSpace=dataDir.getUsableSpace();
  if (usableSpace < lowThreshold) {
    Log.w(TAG,"Not running dexopt on " + nextPackage.packageName + " due to low memory: "+ usableSpace);
    return false;
  }
  RecordingInstallerConnection collectingConnection=new RecordingInstallerConnection();
  Installer collectingInstaller=new Installer(mContext,collectingConnection);
  PackageDexOptimizer optimizer=new OTADexoptPackageDexOptimizer(collectingInstaller,mPackageManagerService.mInstallLock,mContext);
  int compilationReason=nextPackage.coreApp ? PackageManagerService.REASON_CORE_APP : PackageManagerService.REASON_AB_OTA;
  optimizer.performDexOpt(nextPackage,nextPackage.usesLibraryFiles,null,false,getCompilerFilterForReason(compilationReason));
  mCommandsForCurrentPackage=collectingConnection.commands;
  if (mCommandsForCurrentPackage.isEmpty()) {
    mCommandsForCurrentPackage=null;
  }
  return true;
}
