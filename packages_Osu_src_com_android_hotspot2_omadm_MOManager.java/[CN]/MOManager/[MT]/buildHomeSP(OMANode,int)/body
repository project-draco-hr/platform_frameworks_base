{
  OMANode spRoot=ppsRoot.getChild(TAG_HomeSP);
  String fqdn=spRoot.getScalarValue(Arrays.asList(TAG_FQDN).iterator());
  String friendlyName=spRoot.getScalarValue(Arrays.asList(TAG_FriendlyName).iterator());
  String iconURL=spRoot.getScalarValue(Arrays.asList(TAG_IconURL).iterator());
  HashSet<Long> roamingConsortiums=new HashSet<>();
  String oiString=spRoot.getScalarValue(Arrays.asList(TAG_RoamingConsortiumOI).iterator());
  if (oiString != null) {
    for (    String oi : oiString.split(",")) {
      roamingConsortiums.add(Long.parseLong(oi.trim(),16));
    }
  }
  Map<String,Long> ssids=new HashMap<>();
  OMANode ssidListNode=spRoot.getListValue(Arrays.asList(TAG_NetworkID).iterator());
  if (ssidListNode != null) {
    for (    OMANode ssidRoot : ssidListNode.getChildren()) {
      OMANode hessidNode=ssidRoot.getChild(TAG_HESSID);
      ssids.put(ssidRoot.getChild(TAG_SSID).getValue(),getMac(hessidNode));
    }
  }
  Set<Long> matchAnyOIs=new HashSet<>();
  List<Long> matchAllOIs=new ArrayList<>();
  OMANode homeOIListNode=spRoot.getListValue(Arrays.asList(TAG_HomeOIList).iterator());
  if (homeOIListNode != null) {
    for (    OMANode homeOIRoot : homeOIListNode.getChildren()) {
      String homeOI=homeOIRoot.getChild(TAG_HomeOI).getValue();
      if (Boolean.parseBoolean(homeOIRoot.getChild(TAG_HomeOIRequired).getValue())) {
        matchAllOIs.add(Long.parseLong(homeOI,16));
      }
 else {
        matchAnyOIs.add(Long.parseLong(homeOI,16));
      }
    }
  }
  Set<String> otherHomePartners=new HashSet<>();
  OMANode otherListNode=spRoot.getListValue(Arrays.asList(TAG_OtherHomePartners).iterator());
  if (otherListNode != null) {
    for (    OMANode fqdnNode : otherListNode.getChildren()) {
      otherHomePartners.add(fqdnNode.getChild(TAG_FQDN).getValue());
    }
  }
  Credential credential=buildCredential(ppsRoot.getChild(TAG_Credential));
  OMANode policyNode=ppsRoot.getChild(TAG_Policy);
  Policy policy=policyNode != null ? new Policy(policyNode) : null;
  Map<String,String> aaaTrustRoots;
  OMANode aaaRootNode=ppsRoot.getChild(TAG_AAAServerTrustRoot);
  if (aaaRootNode == null) {
    aaaTrustRoots=null;
  }
 else {
    aaaTrustRoots=new HashMap<>(aaaRootNode.getChildren().size());
    for (    OMANode child : aaaRootNode.getChildren()) {
      aaaTrustRoots.put(getString(child,TAG_CertURL),getString(child,TAG_CertSHA256Fingerprint));
    }
  }
  OMANode updateNode=ppsRoot.getChild(TAG_SubscriptionUpdate);
  UpdateInfo subscriptionUpdate=updateNode != null ? new UpdateInfo(updateNode) : null;
  OMANode subNode=ppsRoot.getChild(TAG_SubscriptionParameters);
  SubscriptionParameters subscriptionParameters=subNode != null ? new SubscriptionParameters(subNode) : null;
  return new HomeSP(ssids,fqdn,roamingConsortiums,otherHomePartners,matchAnyOIs,matchAllOIs,friendlyName,iconURL,credential,policy,getInteger(ppsRoot.getChild(TAG_CredentialPriority),0),aaaTrustRoots,subscriptionUpdate,subscriptionParameters,updateIdentifier);
}
