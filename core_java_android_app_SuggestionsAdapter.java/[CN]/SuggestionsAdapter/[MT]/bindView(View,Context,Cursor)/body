{
  ChildViewCache views=(ChildViewCache)view.getTag();
  final int pos=cursor.getPosition();
  if (pos > mMaxDisplayed) {
    mMaxDisplayed=pos;
  }
  if (mGlobalSearchMode && mDisplayNotifyPos != NONE && pos == mDisplayNotifyPos) {
    final Bundle request=new Bundle();
    request.putInt(DialogCursorProtocol.METHOD,DialogCursorProtocol.THRESH_HIT);
    mCursor.respond(request);
    mDisplayNotifyPos=NONE;
  }
  int backgroundColor=0;
  if (mBackgroundColorCol != -1) {
    backgroundColor=cursor.getInt(mBackgroundColorCol);
  }
  ((SuggestionItemView)view).setColor(backgroundColor);
  final boolean isHtml=mFormatCol > 0 && "html".equals(cursor.getString(mFormatCol));
  String text1=null;
  if (mText1Col >= 0) {
    text1=cursor.getString(mText1Col);
  }
  String text2=null;
  if (mText2Col >= 0) {
    text2=cursor.getString(mText2Col);
  }
  ((SuggestionItemView)view).setTextStrings(text1,text2,isHtml,mProviderContext);
  setViewIcon(cursor,views.mIcon1,mIconName1Col);
  setViewIcon(cursor,views.mIcon2,mIconName2Col);
}
