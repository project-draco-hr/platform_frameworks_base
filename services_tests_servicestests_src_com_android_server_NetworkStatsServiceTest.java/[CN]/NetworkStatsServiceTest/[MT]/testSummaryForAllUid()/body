{
  long elapsedRealtime=0;
  expectTime(TEST_START + elapsedRealtime);
  expectDefaultSettings();
  expectNetworkState(buildWifiState());
  expectNetworkStatsSummary(buildEmptyStats(elapsedRealtime));
  replay();
  mServiceContext.sendBroadcast(new Intent(CONNECTIVITY_ACTION));
  verifyAndReset();
  elapsedRealtime+=HOUR_IN_MILLIS;
  expectTime(TEST_START + elapsedRealtime);
  expectDefaultSettings();
  expectNetworkStatsSummary(buildEmptyStats(elapsedRealtime));
  expectNetworkStatsDetail(new NetworkStats(elapsedRealtime,1).addValues(TEST_IFACE,UID_RED,TAG_NONE,50L,5L,50L,5L).addValues(TEST_IFACE,UID_RED,0xF00D,10L,1L,10L,1L).addValues(TEST_IFACE,UID_BLUE,TAG_NONE,1024L,8L,512L,4L));
  replay();
  mServiceContext.sendBroadcast(new Intent(ACTION_NETWORK_STATS_POLL));
  assertUidTotal(sTemplateWifi,UID_RED,50L,50L);
  assertUidTotal(sTemplateWifi,UID_BLUE,1024L,512L);
  verifyAndReset();
  elapsedRealtime+=HOUR_IN_MILLIS;
  expectTime(TEST_START + elapsedRealtime);
  expectDefaultSettings();
  expectNetworkStatsSummary(buildEmptyStats(elapsedRealtime));
  expectNetworkStatsDetail(new NetworkStats(elapsedRealtime,1).addValues(TEST_IFACE,UID_BLUE,TAG_NONE,2048L,16L,1024L,8L));
  replay();
  mServiceContext.sendBroadcast(new Intent(ACTION_NETWORK_STATS_POLL));
  NetworkStats stats=mService.getSummaryForAllUid(sTemplateWifi,Long.MIN_VALUE,Long.MAX_VALUE,true);
  assertEquals(3,stats.size());
  assertEntry(stats,0,IFACE_ALL,UID_RED,TAG_NONE,50L,5L,50L,5L);
  assertEntry(stats,1,IFACE_ALL,UID_RED,0xF00D,10L,1L,10L,1L);
  assertEntry(stats,2,IFACE_ALL,UID_BLUE,TAG_NONE,2048L,16L,1024L,8L);
  final long currentTime=TEST_START + elapsedRealtime;
  stats=mService.getSummaryForAllUid(sTemplateWifi,currentTime - HOUR_IN_MILLIS,currentTime,true);
  assertEquals(1,stats.size());
  assertEntry(stats,0,IFACE_ALL,UID_BLUE,TAG_NONE,1024L,8L,512L,4L);
  verifyAndReset();
}
