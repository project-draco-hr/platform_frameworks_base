{
  super.setUp();
  mServiceContext=new BroadcastInterceptingContext(getContext());
  mStatsDir=getContext().getFilesDir();
  if (mStatsDir.exists()) {
    IoUtils.deleteContents(mStatsDir);
  }
  mNetManager=createMock(INetworkManagementService.class);
  mAlarmManager=createMock(IAlarmManager.class);
  mTime=createMock(TrustedTime.class);
  mSettings=createMock(NetworkStatsSettings.class);
  mConnManager=createMock(IConnectivityManager.class);
  mService=new NetworkStatsService(mServiceContext,mNetManager,mAlarmManager,mTime,mStatsDir,mSettings);
  mService.bindConnectivityManager(mConnManager);
  mSession=mService.openSession();
  mElapsedRealtime=0L;
  expectCurrentTime();
  expectDefaultSettings();
  expectNetworkStatsSummary(buildEmptyStats());
  expectNetworkStatsUidDetail(buildEmptyStats());
  expectSystemReady();
  final Capture<INetworkManagementEventObserver> networkObserver=new Capture<INetworkManagementEventObserver>();
  mNetManager.registerObserver(capture(networkObserver));
  expectLastCall().atLeastOnce();
  replay();
  mService.systemReady();
  verifyAndReset();
  mNetworkObserver=networkObserver.getValue();
}
