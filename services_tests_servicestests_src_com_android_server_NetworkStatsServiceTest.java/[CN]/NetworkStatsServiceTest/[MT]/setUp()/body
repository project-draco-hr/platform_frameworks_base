{
  super.setUp();
  mServiceContext=new BroadcastInterceptingContext(getContext());
  mStatsDir=getContext().getFilesDir();
  if (mStatsDir.exists()) {
    IoUtils.deleteContents(mStatsDir);
  }
  mNetManager=createMock(INetworkManagementService.class);
  mAlarmManager=createMock(IAlarmManager.class);
  mTime=createMock(TrustedTime.class);
  mSettings=createMock(NetworkStatsSettings.class);
  mConnManager=createMock(IConnectivityManager.class);
  mService=new NetworkStatsService(mServiceContext,mNetManager,mAlarmManager,mTime,mStatsDir,mSettings);
  mService.bindConnectivityManager(mConnManager);
  mElapsedRealtime=0L;
  expectCurrentTime();
  expectDefaultSettings();
  expectNetworkStatsSummary(buildEmptyStats());
  expectNetworkStatsUidDetail(buildEmptyStats());
  final Future<?> firstPoll=expectSystemReady();
  replay();
  mService.systemReady();
  firstPoll.get();
  verifyAndReset();
}
