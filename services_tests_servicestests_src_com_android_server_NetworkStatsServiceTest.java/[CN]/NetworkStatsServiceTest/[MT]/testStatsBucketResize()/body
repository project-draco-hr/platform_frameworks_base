{
  long elapsedRealtime=0;
  NetworkStatsHistory history=null;
  assertStatsFilesExist(false);
  expectTime(TEST_START + elapsedRealtime);
  expectSettings(0L,HOUR_IN_MILLIS,WEEK_IN_MILLIS);
  expectNetworkState(buildWifiState());
  expectNetworkStatsSummary(buildEmptyStats(elapsedRealtime));
  replay();
  mServiceContext.sendBroadcast(new Intent(CONNECTIVITY_ACTION));
  verifyAndReset();
  elapsedRealtime+=2 * HOUR_IN_MILLIS;
  expectTime(TEST_START + elapsedRealtime);
  expectSettings(0L,HOUR_IN_MILLIS,WEEK_IN_MILLIS);
  expectNetworkStatsSummary(new NetworkStats(elapsedRealtime,1).addValues(TEST_IFACE,UID_ALL,TAG_NONE,512L,4L,512L,4L));
  expectNetworkStatsDetail(buildEmptyStats(elapsedRealtime));
  replay();
  mServiceContext.sendBroadcast(new Intent(ACTION_NETWORK_STATS_POLL));
  history=mService.getHistoryForNetwork(sTemplateWifi);
  assertValues(history,Long.MIN_VALUE,Long.MAX_VALUE,512L,512L);
  assertEquals(HOUR_IN_MILLIS,history.getBucketDuration());
  assertEquals(2,history.size());
  verifyAndReset();
  expectTime(TEST_START + elapsedRealtime);
  expectSettings(0L,30 * MINUTE_IN_MILLIS,WEEK_IN_MILLIS);
  expectNetworkStatsSummary(buildEmptyStats(elapsedRealtime));
  expectNetworkStatsDetail(buildEmptyStats(elapsedRealtime));
  replay();
  mServiceContext.sendBroadcast(new Intent(ACTION_NETWORK_STATS_POLL));
  history=mService.getHistoryForNetwork(sTemplateWifi);
  assertValues(history,Long.MIN_VALUE,Long.MAX_VALUE,512L,512L);
  assertEquals(30 * MINUTE_IN_MILLIS,history.getBucketDuration());
  assertEquals(4,history.size());
  verifyAndReset();
}
