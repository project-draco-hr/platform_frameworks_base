{
  expectCurrentTime();
  expectDefaultSettings();
  expectNetworkState(buildWifiState());
  expectNetworkStatsSummary(buildEmptyStats());
  replay();
  mServiceContext.sendBroadcast(new Intent(CONNECTIVITY_ACTION));
  verifyAndReset();
  incrementCurrentTime(HOUR_IN_MILLIS);
  expectCurrentTime();
  expectDefaultSettings();
  expectNetworkStatsSummary(buildEmptyStats());
  expectNetworkStatsUidDetail(new NetworkStats(getElapsedRealtime(),1).addValues(TEST_IFACE,UID_RED,SET_DEFAULT,TAG_NONE,128L,2L,128L,2L,0L).addValues(TEST_IFACE,UID_RED,SET_DEFAULT,0xF00D,64L,1L,64L,1L,0L));
  mService.incrementOperationCount(UID_RED,0xF00D,1);
  replay();
  mServiceContext.sendBroadcast(new Intent(ACTION_NETWORK_STATS_POLL));
  assertUidTotal(sTemplateWifi,UID_RED,128L,2L,128L,2L,1);
  verifyAndReset();
  incrementCurrentTime(HOUR_IN_MILLIS);
  expectCurrentTime();
  expectDefaultSettings();
  expectNetworkStatsSummary(buildEmptyStats());
  expectNetworkStatsUidDetail(new NetworkStats(getElapsedRealtime(),1).addValues(TEST_IFACE,UID_RED,SET_DEFAULT,TAG_NONE,128L,2L,128L,2L,0L).addValues(TEST_IFACE,UID_RED,SET_DEFAULT,0xF00D,64L,1L,64L,1L,0L).addValues(TEST_IFACE,UID_RED,SET_FOREGROUND,TAG_NONE,32L,2L,32L,2L,0L).addValues(TEST_IFACE,UID_RED,SET_FOREGROUND,0xFAAD,1L,1L,1L,1L,0L));
  mService.setUidForeground(UID_RED,true);
  mService.incrementOperationCount(UID_RED,0xFAAD,1);
  replay();
  mServiceContext.sendBroadcast(new Intent(ACTION_NETWORK_STATS_POLL));
  assertUidTotal(sTemplateWifi,UID_RED,160L,4L,160L,4L,2);
  final NetworkStats stats=mService.getSummaryForAllUid(sTemplateWifi,Long.MIN_VALUE,Long.MAX_VALUE,true);
  assertEquals(4,stats.size());
  assertValues(stats,IFACE_ALL,UID_RED,SET_DEFAULT,TAG_NONE,128L,2L,128L,2L,1);
  assertValues(stats,IFACE_ALL,UID_RED,SET_DEFAULT,0xF00D,64L,1L,64L,1L,1);
  assertValues(stats,IFACE_ALL,UID_RED,SET_FOREGROUND,TAG_NONE,32L,2L,32L,2L,1);
  assertValues(stats,IFACE_ALL,UID_RED,SET_FOREGROUND,0xFAAD,1L,1L,1L,1L,1);
  verifyAndReset();
}
