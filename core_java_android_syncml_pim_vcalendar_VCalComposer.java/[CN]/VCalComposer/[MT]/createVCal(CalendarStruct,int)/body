{
  StringBuilder returnStr=new StringBuilder();
  if (vcalversion != 1 && vcalversion != 2)   throw new VCalException("version not match 1.0 or 2.0.");
  if (vcalversion == 1)   mVersion=VERSION_VCALENDAR10;
 else   mVersion=VERSION_VCALENDAR20;
  returnStr.append("BEGIN:VCALENDAR").append(mNewLine);
  if (vcalversion == VERSION_VCAL10_INT)   returnStr.append("VERSION:1.0").append(mNewLine);
 else   returnStr.append("VERSION:2.0").append(mNewLine);
  returnStr.append("PRODID:vCal ID default").append(mNewLine);
  if (!isNull(struct.timezone)) {
    if (vcalversion == VERSION_VCAL10_INT)     returnStr.append("TZ:").append(struct.timezone).append(mNewLine);
 else     returnStr.append("BEGIN:VTIMEZONE").append(mNewLine).append("TZID:vCal default").append(mNewLine).append("BEGIN:STANDARD").append(mNewLine).append("DTSTART:16010101T000000").append(mNewLine).append("TZOFFSETFROM:").append(struct.timezone).append(mNewLine).append("TZOFFSETTO:").append(struct.timezone).append(mNewLine).append("END:STANDARD").append(mNewLine).append("END:VTIMEZONE").append(mNewLine);
  }
  for (int i=0; i < struct.eventList.size(); i++) {
    String str=buildEventStr(struct.eventList.get(i));
    returnStr.append(str);
  }
  returnStr.append("END:VCALENDAR").append(mNewLine).append(mNewLine);
  return returnStr.toString();
}
