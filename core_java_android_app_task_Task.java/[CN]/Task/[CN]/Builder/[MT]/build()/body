{
  try {
    for (    String key : extras.keySet()) {
      Object value=extras.get(key);
      if (value == null)       continue;
      if (value instanceof Long)       continue;
      if (value instanceof Integer)       continue;
      if (value instanceof Boolean)       continue;
      if (value instanceof Float)       continue;
      if (value instanceof Double)       continue;
      if (value instanceof String)       continue;
      throw new IllegalArgumentException("Unexpected value type: " + value.getClass().getName());
    }
  }
 catch (  IllegalArgumentException e) {
    throw e;
  }
catch (  RuntimeException exc) {
    throw new IllegalArgumentException("error unparcelling Bundle",exc);
  }
  if (mIsPeriodic && (mMaxExecutionDelayMillis != 0L)) {
    throw new IllegalArgumentException("Can't call setOverrideDeadline() on a " + "periodic task.");
  }
  if (mIsPeriodic && (mMinLatencyMillis != 0L)) {
    throw new IllegalArgumentException("Can't call setMinimumLatency() on a " + "periodic task");
  }
  if (mBackoffPolicySet && mRequiresDeviceIdle) {
    throw new IllegalArgumentException("An idle mode task will not respect any" + " back-off policy, so calling setBackoffCriteria with" + " setRequiresDeviceIdle is an error.");
  }
  return new Task(this);
}
