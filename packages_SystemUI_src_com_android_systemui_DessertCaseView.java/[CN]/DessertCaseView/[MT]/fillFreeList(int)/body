{
  final Context ctx=getContext();
  final FrameLayout.LayoutParams lp=new FrameLayout.LayoutParams(mCellSize,mCellSize);
  while (!mFreeList.isEmpty()) {
    Point pt=mFreeList.iterator().next();
    mFreeList.remove(pt);
    final int i=pt.x;
    final int j=pt.y;
    if (mCells[j * mColumns + i] != null)     continue;
    final ImageView v=new ImageView(ctx);
    v.setOnClickListener(new OnClickListener(){
      @Override public void onClick(      View view){
        place(v,true);
        postDelayed(new Runnable(){
          public void run(){
            fillFreeList();
          }
        }
,DURATION / 2);
      }
    }
);
    final int c=random_color();
    v.setBackgroundColor(c);
    final float which=frand();
    final Drawable d;
    if (which < 0.001f) {
      d=mDrawables.get(pick(XXRARE_PASTRIES));
    }
 else     if (which < 0.01f) {
      d=mDrawables.get(pick(XRARE_PASTRIES));
    }
 else     if (which < 0.5f) {
      d=mDrawables.get(pick(RARE_PASTRIES));
    }
 else     if (which < 0.7f) {
      d=mDrawables.get(pick(PASTRIES));
    }
 else {
      d=null;
    }
    if (d != null) {
      v.getOverlay().add(d);
    }
    final Paint paint=new Paint();
    v.setLayerType(View.LAYER_TYPE_HARDWARE,paint);
    lp.width=lp.height=mCellSize;
    addView(v,lp);
    place(v,pt,false);
    if (animationLen > 0) {
      final float s=(Integer)v.getTag(TAG_SPAN);
      v.setScaleX(0.5f * s);
      v.setScaleY(0.5f * s);
      v.setAlpha(0f);
      v.animate().scaleX(s).scaleY(s).alpha(1f).setDuration(animationLen);
    }
  }
}
