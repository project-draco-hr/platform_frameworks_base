{
  float scaledX=x;
  float scaledY=y;
  float temp;
  float scaledPressure=1.0f;
  float scaledSize=0;
  int edgeFlags=0;
  int action;
  if (down != lastDown) {
    if (isAbs) {
      final AbsoluteInfo absX=device.absX;
      final AbsoluteInfo absY=device.absY;
      if (down && absX != null && absY != null) {
        if (scaledX < absX.minValue || scaledX > absX.maxValue || scaledY < absY.minValue || scaledY > absY.maxValue) {
          if (false)           Log.v("InputDevice","Rejecting (" + scaledX + ","+ scaledY+ "): outside of ("+ absX.minValue+ ","+ absY.minValue+ ")-("+ absX.maxValue+ ","+ absY.maxValue+ ")");
          return null;
        }
      }
    }
 else {
      x=y=0;
    }
    lastDown=down;
    if (down) {
      action=MotionEvent.ACTION_DOWN;
      downTime=curTime;
    }
 else {
      action=MotionEvent.ACTION_UP;
    }
    currentMove=null;
  }
 else {
    action=MotionEvent.ACTION_MOVE;
  }
  if (isAbs) {
    final int dispW=display.getWidth() - 1;
    final int dispH=display.getHeight() - 1;
    int w=dispW;
    int h=dispH;
    if (orientation == Surface.ROTATION_90 || orientation == Surface.ROTATION_270) {
      int tmp=w;
      w=h;
      h=tmp;
    }
    if (device.absX != null) {
      scaledX=((scaledX - device.absX.minValue) / device.absX.range) * w;
    }
    if (device.absY != null) {
      scaledY=((scaledY - device.absY.minValue) / device.absY.range) * h;
    }
    if (device.absPressure != null) {
      scaledPressure=((pressure - device.absPressure.minValue) / (float)device.absPressure.range);
    }
    if (device.absSize != null) {
      scaledSize=((size - device.absSize.minValue) / (float)device.absSize.range);
    }
switch (orientation) {
case Surface.ROTATION_90:
      temp=scaledX;
    scaledX=scaledY;
  scaledY=w - temp;
break;
case Surface.ROTATION_180:
scaledX=w - scaledX;
scaledY=h - scaledY;
break;
case Surface.ROTATION_270:
temp=scaledX;
scaledX=h - scaledY;
scaledY=temp;
break;
}
if (action != MotionEvent.ACTION_DOWN) {
if (scaledX <= 0) {
edgeFlags+=MotionEvent.EDGE_LEFT;
}
 else if (scaledX >= dispW) {
edgeFlags+=MotionEvent.EDGE_RIGHT;
}
if (scaledY <= 0) {
edgeFlags+=MotionEvent.EDGE_TOP;
}
 else if (scaledY >= dispH) {
edgeFlags+=MotionEvent.EDGE_BOTTOM;
}
}
}
 else {
scaledX*=xMoveScale;
scaledY*=yMoveScale;
switch (orientation) {
case Surface.ROTATION_90:
temp=scaledX;
scaledX=scaledY;
scaledY=-temp;
break;
case Surface.ROTATION_180:
scaledX=-scaledX;
scaledY=-scaledY;
break;
case Surface.ROTATION_270:
temp=scaledX;
scaledX=-scaledY;
scaledY=temp;
break;
}
}
if (currentMove != null) {
if (false) Log.i("InputDevice","Adding batch x=" + scaledX + " y="+ scaledY+ " to "+ currentMove);
currentMove.addBatch(curTime,scaledX,scaledY,scaledPressure,scaledSize,metaState);
if (WindowManagerPolicy.WATCH_POINTER) {
Log.i("KeyInputQueue","Updating: " + currentMove);
}
return null;
}
MotionEvent me=MotionEvent.obtainNano(downTime,curTime,curTimeNano,action,scaledX,scaledY,scaledPressure,scaledSize,metaState,xPrecision,yPrecision,device.id,edgeFlags);
if (action == MotionEvent.ACTION_MOVE) {
currentMove=me;
}
return me;
}
