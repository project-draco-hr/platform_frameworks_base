{
  final float[] scaled=mReportData;
  scaled[MotionEvent.SAMPLE_X]=mNextData[MotionEvent.SAMPLE_X];
  scaled[MotionEvent.SAMPLE_Y]=mNextData[MotionEvent.SAMPLE_Y];
  scaled[MotionEvent.SAMPLE_PRESSURE]=1.0f;
  scaled[MotionEvent.SAMPLE_SIZE]=0;
  int edgeFlags=0;
  int action;
  if (mNextNumPointers != mLastNumPointers) {
    mNextData[MotionEvent.SAMPLE_X]=mNextData[MotionEvent.SAMPLE_Y]=0;
    if (mNextNumPointers > 0 && mLastNumPointers == 0) {
      action=MotionEvent.ACTION_DOWN;
      mDownTime=curTime;
    }
 else     if (mNextNumPointers == 0) {
      action=MotionEvent.ACTION_UP;
    }
 else {
      action=MotionEvent.ACTION_MOVE;
    }
    mLastNumPointers=mNextNumPointers;
    currentMove=null;
  }
 else {
    action=MotionEvent.ACTION_MOVE;
  }
  scaled[MotionEvent.SAMPLE_X]*=xMoveScale;
  scaled[MotionEvent.SAMPLE_Y]*=yMoveScale;
switch (orientation) {
case Surface.ROTATION_90:
{
      final float temp=scaled[MotionEvent.SAMPLE_X];
      scaled[MotionEvent.SAMPLE_X]=scaled[MotionEvent.SAMPLE_Y];
      scaled[MotionEvent.SAMPLE_Y]=-temp;
      break;
    }
case Surface.ROTATION_180:
{
    scaled[MotionEvent.SAMPLE_X]=-scaled[MotionEvent.SAMPLE_X];
    scaled[MotionEvent.SAMPLE_Y]=-scaled[MotionEvent.SAMPLE_Y];
    break;
  }
case Surface.ROTATION_270:
{
  final float temp=scaled[MotionEvent.SAMPLE_X];
  scaled[MotionEvent.SAMPLE_X]=-scaled[MotionEvent.SAMPLE_Y];
  scaled[MotionEvent.SAMPLE_Y]=temp;
  break;
}
}
if (currentMove != null) {
if (false) Log.i("InputDevice","Adding batch x=" + scaled[MotionEvent.SAMPLE_X] + " y="+ scaled[MotionEvent.SAMPLE_Y]+ " to "+ currentMove);
currentMove.addBatch(curTime,scaled,metaState);
if (WindowManagerPolicy.WATCH_POINTER) {
Log.i("KeyInputQueue","Updating: " + currentMove);
}
return null;
}
MotionEvent me=MotionEvent.obtainNano(mDownTime,curTime,curTimeNano,action,1,mPointerIds,scaled,metaState,xPrecision,yPrecision,device.id,edgeFlags);
if (action == MotionEvent.ACTION_MOVE) {
currentMove=me;
}
return me;
}
