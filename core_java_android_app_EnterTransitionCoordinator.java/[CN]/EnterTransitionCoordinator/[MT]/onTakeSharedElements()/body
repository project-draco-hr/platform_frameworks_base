{
  if (!mIsReadyForTransition || mSharedElementsBundle == null) {
    return;
  }
  final Bundle sharedElementState=mSharedElementsBundle;
  mSharedElementsBundle=null;
  OnSharedElementsReadyListener listener=new OnSharedElementsReadyListener(){
    @Override public void onSharedElementsReady(){
      final View decorView=getDecor();
      if (decorView != null) {
        decorView.getViewTreeObserver().addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener(){
          @Override public boolean onPreDraw(){
            decorView.getViewTreeObserver().removeOnPreDrawListener(this);
            startTransition(new Runnable(){
              @Override public void run(){
                startSharedElementTransition(sharedElementState);
              }
            }
);
            return false;
          }
        }
);
        decorView.invalidate();
      }
    }
  }
;
  if (mListener == null) {
    listener.onSharedElementsReady();
  }
 else {
    mListener.onSharedElementsArrived(mSharedElementNames,mSharedElements,listener);
  }
}
