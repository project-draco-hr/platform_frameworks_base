{
  boolean allReady;
  if (allowOverlappingTransitions()) {
    allReady=false;
  }
 else {
    allReady=!getDecor().isLayoutRequested();
    if (allReady) {
      for (int i=0; i < mSharedElements.size(); i++) {
        if (mSharedElements.get(i).isLayoutRequested()) {
          allReady=false;
          break;
        }
      }
    }
  }
  if (allReady) {
    Bundle state=captureSharedElementState();
    setSharedElementMatrices();
    moveSharedElementsToOverlay();
    mResultReceiver.send(MSG_SHARED_ELEMENT_DESTINATION,state);
  }
 else {
    getDecor().getViewTreeObserver().addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener(){
      @Override public boolean onPreDraw(){
        getDecor().getViewTreeObserver().removeOnPreDrawListener(this);
        if (mResultReceiver != null) {
          Bundle state=captureSharedElementState();
          setSharedElementMatrices();
          moveSharedElementsToOverlay();
          mResultReceiver.send(MSG_SHARED_ELEMENT_DESTINATION,state);
        }
        return true;
      }
    }
);
  }
  if (allowOverlappingTransitions()) {
    startEnterTransitionOnly();
  }
}
