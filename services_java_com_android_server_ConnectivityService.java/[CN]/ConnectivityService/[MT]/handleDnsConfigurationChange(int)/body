{
  NetworkStateTracker nt=mNetTrackers[netType];
  if (nt != null && nt.getNetworkInfo().isConnected() && !nt.isTeardownRequested()) {
    LinkProperties p=nt.getLinkProperties();
    if (p == null)     return;
    Collection<InetAddress> dnses=p.getDnses();
    if (mNetConfigs[netType].isDefault()) {
      String network=nt.getNetworkInfo().getTypeName();
synchronized (mDnsLock) {
        if (!mDnsOverridden) {
          updateDnsLocked(network,p.getInterfaceName(),dnses,p.getDomains(),true);
        }
      }
    }
 else {
      try {
        mNetd.setDnsServersForInterface(p.getInterfaceName(),NetworkUtils.makeStrings(dnses),p.getDomains());
      }
 catch (      Exception e) {
        if (DBG)         loge("exception setting dns servers: " + e);
      }
      List<Integer> pids=mNetRequestersPids[netType];
      for (      Integer pid : pids) {
        try {
          mNetd.setDnsInterfaceForPid(p.getInterfaceName(),pid);
        }
 catch (        Exception e) {
          Slog.e(TAG,"exception setting interface for pid: " + e);
        }
      }
    }
    flushVmDnsCache();
  }
}
