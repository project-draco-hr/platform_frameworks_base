{
  NetworkStateTracker nt=mNetTrackers[netType];
  if (nt != null && nt.getNetworkInfo().isConnected() && !nt.isTeardownRequested()) {
    LinkProperties p=nt.getLinkProperties();
    if (p == null)     return;
    Collection<InetAddress> dnses=p.getDnses();
    try {
      mNetd.setDnsServersForInterface(p.getInterfaceName(),NetworkUtils.makeStrings(dnses));
    }
 catch (    Exception e) {
      Slog.e(TAG,"exception setting dns servers: " + e);
    }
    boolean changed=false;
    if (mNetConfigs[netType].isDefault()) {
      try {
        mNetd.setDefaultInterfaceForDns(p.getInterfaceName());
      }
 catch (      Exception e) {
        Slog.e(TAG,"exception setting default dns interface: " + e);
      }
      int j=1;
      if (dnses.size() == 0 && mDefaultDns != null) {
        String dnsString=mDefaultDns.getHostAddress();
        if (!dnsString.equals(SystemProperties.get("net.dns1"))) {
          if (DBG) {
            log("no dns provided - using " + dnsString);
          }
          changed=true;
          SystemProperties.set("net.dns1",dnsString);
        }
        j++;
      }
 else {
        for (        InetAddress dns : dnses) {
          String dnsString=dns.getHostAddress();
          if (!changed && dnsString.equals(SystemProperties.get("net.dns" + j))) {
            j++;
            continue;
          }
          if (DBG) {
            log("adding dns " + dns + " for "+ nt.getNetworkInfo().getTypeName());
          }
          changed=true;
          SystemProperties.set("net.dns" + j++,dnsString);
        }
      }
      for (int k=j; k < mNumDnsEntries; k++) {
        if (changed || !TextUtils.isEmpty(SystemProperties.get("net.dns" + k))) {
          if (DBG)           log("erasing net.dns" + k);
          changed=true;
          SystemProperties.set("net.dns" + k,"");
        }
      }
      mNumDnsEntries=j;
    }
 else {
      List pids=mNetRequestersPids[netType];
      for (int y=0; y < pids.size(); y++) {
        Integer pid=(Integer)pids.get(y);
        changed=writePidDns(dnses,pid.intValue());
      }
    }
    if (changed)     bumpDns();
  }
}
