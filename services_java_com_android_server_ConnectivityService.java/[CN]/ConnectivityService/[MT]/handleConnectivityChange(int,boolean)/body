{
  int resetMask=doReset ? NetworkUtils.RESET_ALL_ADDRESSES : 0;
  handleDnsConfigurationChange(netType);
  if (mNetTrackers[netType].getNetworkInfo().isConnected()) {
    LinkProperties newLp=mNetTrackers[netType].getLinkProperties();
    LinkProperties curLp=mCurrentLinkProperties[netType];
    mCurrentLinkProperties[netType]=newLp;
    if (VDBG) {
      log("handleConnectivityChange: changed linkProperty[" + netType + "]:"+ " doReset="+ doReset+ " resetMask="+ resetMask+ "\n   curLp="+ curLp+ "\n   newLp="+ newLp);
    }
    if (curLp.isIdenticalInterfaceName(newLp)) {
      CompareAddressesResult car=curLp.compareAddresses(newLp);
      if ((car.removed.size() != 0) || (car.added.size() != 0)) {
        for (        LinkAddress linkAddr : car.removed) {
          if (linkAddr.getAddress() instanceof Inet4Address) {
            resetMask|=NetworkUtils.RESET_IPV4_ADDRESSES;
          }
          if (linkAddr.getAddress() instanceof Inet6Address) {
            resetMask|=NetworkUtils.RESET_IPV6_ADDRESSES;
          }
        }
        if (DBG) {
          log("handleConnectivityChange: addresses changed" + " linkProperty[" + netType + "]:"+ " resetMask="+ resetMask+ "\n   car="+ car);
        }
      }
 else {
        if (DBG) {
          log("handleConnectivityChange: address are the same reset per doReset" + " linkProperty[" + netType + "]:"+ " resetMask="+ resetMask);
        }
      }
    }
 else {
      resetMask=NetworkUtils.RESET_ALL_ADDRESSES;
      log("handleConnectivityChange: interface not not equivalent reset both" + " linkProperty[" + netType + "]:"+ " resetMask="+ resetMask);
    }
    if (mNetConfigs[netType].isDefault()) {
      handleApplyDefaultProxy(netType);
      addDefaultRoute(mNetTrackers[netType]);
    }
 else {
      if (mActiveDefaultNetwork != -1) {
        LinkProperties defaultLinkProperties=mNetTrackers[mActiveDefaultNetwork].getLinkProperties();
        LinkProperties newLinkProperties=mNetTrackers[netType].getLinkProperties();
        String defaultIface=defaultLinkProperties.getInterfaceName();
        if (defaultIface != null && !defaultIface.equals(newLinkProperties.getInterfaceName())) {
          removeDefaultRoute(mNetTrackers[netType]);
        }
      }
      addPrivateDnsRoutes(mNetTrackers[netType]);
    }
  }
 else {
    if (mNetConfigs[netType].isDefault()) {
      removeDefaultRoute(mNetTrackers[netType]);
    }
 else {
      removePrivateDnsRoutes(mNetTrackers[netType]);
    }
  }
  if (doReset || resetMask != 0) {
    LinkProperties linkProperties=mNetTrackers[netType].getLinkProperties();
    if (linkProperties != null) {
      String iface=linkProperties.getInterfaceName();
      if (TextUtils.isEmpty(iface) == false) {
        if (DBG)         log("resetConnections(" + iface + ", "+ resetMask+ ")");
        NetworkUtils.resetConnections(iface,resetMask);
      }
    }
  }
  if (TextUtils.equals(mNetTrackers[netType].getNetworkInfo().getReason(),Phone.REASON_LINK_PROPERTIES_CHANGED)) {
    if (isTetheringSupported()) {
      mTethering.handleTetherIfaceChange();
    }
  }
}
