{
  if ((ifaceName == null) || (lp == null) || (r == null))   return false;
  if (cycleCount > MAX_HOSTROUTE_CYCLE_COUNT) {
    loge("Error adding route - too much recursion");
    return false;
  }
  if (r.isHostRoute() == false) {
    RouteInfo bestRoute=RouteInfo.selectBestRoute(lp.getRoutes(),r.getGateway());
    if (bestRoute != null) {
      if (bestRoute.getGateway().equals(r.getGateway())) {
        bestRoute=RouteInfo.makeHostRoute(r.getGateway());
      }
 else {
        bestRoute=RouteInfo.makeHostRoute(r.getGateway(),bestRoute.getGateway());
      }
      modifyRoute(ifaceName,lp,bestRoute,cycleCount + 1,doAdd);
    }
  }
  if (doAdd) {
    if (DBG)     log("Adding " + r + " for interface "+ ifaceName);
    mAddedRoutes.add(r);
    try {
      mNetd.addRoute(ifaceName,r);
    }
 catch (    Exception e) {
      loge("Exception trying to add a route: " + e);
      return false;
    }
  }
 else {
    mAddedRoutes.remove(r);
    if (mAddedRoutes.contains(r) == false) {
      if (DBG)       log("Removing " + r + " for interface "+ ifaceName);
      try {
        mNetd.removeRoute(ifaceName,r);
      }
 catch (      Exception e) {
        loge("Exception trying to remove a route: " + e);
        return false;
      }
    }
 else {
      if (DBG)       log("not removing " + r + " as it's still in use");
    }
  }
  return true;
}
