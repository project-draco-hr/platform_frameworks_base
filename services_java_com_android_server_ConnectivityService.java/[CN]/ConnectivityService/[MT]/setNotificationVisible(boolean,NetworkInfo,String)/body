{
  log("setNotificationVisible: E visible=" + visible + " ni="+ networkInfo+ " url="+ url);
  Resources r=Resources.getSystem();
  NotificationManager notificationManager=(NotificationManager)mContext.getSystemService(Context.NOTIFICATION_SERVICE);
  if (visible) {
    CharSequence title;
    CharSequence details;
    int icon;
switch (networkInfo.getType()) {
case ConnectivityManager.TYPE_WIFI:
      log("setNotificationVisible: TYPE_WIFI");
    title=r.getString(R.string.wifi_available_sign_in,0);
  details=r.getString(R.string.network_available_sign_in_detailed,networkInfo.getExtraInfo());
icon=R.drawable.stat_notify_wifi_in_range;
break;
case ConnectivityManager.TYPE_MOBILE:
case ConnectivityManager.TYPE_MOBILE_HIPRI:
log("setNotificationVisible: TYPE_MOBILE|HIPRI");
title=r.getString(R.string.network_available_sign_in,0);
details=mTelephonyManager.getNetworkOperatorName();
icon=R.drawable.stat_notify_rssi_in_range;
break;
default :
log("setNotificationVisible: other type=" + networkInfo.getType());
title=r.getString(R.string.network_available_sign_in,0);
details=r.getString(R.string.network_available_sign_in_detailed,networkInfo.getExtraInfo());
icon=R.drawable.stat_notify_rssi_in_range;
break;
}
Notification notification=new Notification();
notification.when=0;
notification.icon=icon;
notification.flags=Notification.FLAG_AUTO_CANCEL;
Intent intent=new Intent(Intent.ACTION_VIEW,Uri.parse(url));
intent.setFlags(Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT | Intent.FLAG_ACTIVITY_NEW_TASK);
notification.contentIntent=PendingIntent.getActivity(mContext,0,intent,0);
notification.tickerText=title;
notification.setLatestEventInfo(mContext,title,details,notification.contentIntent);
log("setNotificaitionVisible: notify notificaiton=" + notification);
notificationManager.notify(NOTIFICATION_ID,1,notification);
}
 else {
log("setNotificaitionVisible: cancel");
notificationManager.cancel(NOTIFICATION_ID,1);
}
log("setNotificationVisible: X visible=" + visible + " ni="+ networkInfo+ " url="+ url);
}
