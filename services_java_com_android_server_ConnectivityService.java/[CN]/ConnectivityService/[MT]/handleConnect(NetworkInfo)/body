{
  if (DBG)   Log.v(TAG,"Handle CONNECT for " + info.getTypeName());
  boolean isFailover=info.isFailover();
  NetworkStateTracker thisNet=mNetTrackers[info.getType()];
  NetworkStateTracker deadnet=null;
  NetworkStateTracker otherNet;
  if (info.getType() == ConnectivityManager.TYPE_MOBILE) {
    otherNet=mWifiStateTracker;
  }
 else {
    otherNet=mMobileDataStateTracker;
  }
  NetworkInfo wifiInfo=mWifiStateTracker.getNetworkInfo();
  NetworkInfo mobileInfo=mMobileDataStateTracker.getNetworkInfo();
  if (wifiInfo.isConnected() && mobileInfo.isConnected()) {
    if (mNetworkPreference == ConnectivityManager.TYPE_WIFI)     deadnet=mMobileDataStateTracker;
 else     deadnet=mWifiStateTracker;
  }
  boolean toredown=false;
  thisNet.setTeardownRequested(false);
  if (!mTestMode && deadnet != null) {
    if (DBG)     Log.v(TAG,"Policy requires " + deadnet.getNetworkInfo().getTypeName() + " teardown");
    toredown=teardown(deadnet);
    if (DBG && !toredown) {
      Log.d(TAG,"Network declined teardown request");
    }
  }
  if (!toredown || deadnet.getNetworkInfo().getType() != info.getType()) {
    mActiveNetwork=thisNet;
    if (DBG)     Log.v(TAG,"Sending CONNECT bcast for " + info.getTypeName());
    thisNet.updateNetworkSettings();
    sendConnectedBroadcast(info);
    if (isFailover) {
      otherNet.releaseWakeLock();
    }
  }
 else {
    if (DBG)     Log.v(TAG,"Not broadcasting CONNECT_ACTION to torn " + "down network " + info.getTypeName());
  }
}
