{
  log("checkMobileProvisioning: E sendNotification=" + sendNotification + " suggestedTimeOutMs="+ suggestedTimeOutMs+ " resultReceiver="+ resultReceiver);
  enforceChangePermission();
  int timeOutMs=suggestedTimeOutMs;
  if (suggestedTimeOutMs > CheckMp.MAX_TIMEOUT_MS) {
    timeOutMs=CheckMp.MAX_TIMEOUT_MS;
  }
  if (!isNetworkSupported(ConnectivityManager.TYPE_MOBILE) || !isNetworkSupported(ConnectivityManager.TYPE_MOBILE_HIPRI)) {
    log("checkMobileProvisioning: X no mobile network");
    if (resultReceiver != null) {
      resultReceiver.send(ConnectivityManager.CMP_RESULT_CODE_NO_CONNECTION,null);
    }
    return timeOutMs;
  }
  final long token=Binder.clearCallingIdentity();
  try {
    CheckMp checkMp=new CheckMp(mContext,this);
    CheckMp.CallBack cb=new CheckMp.CallBack(){
      @Override void onComplete(      Integer result){
        log("CheckMp.onComplete: result=" + result);
        if (resultReceiver != null) {
          log("CheckMp.onComplete: send result");
          resultReceiver.send(result,null);
        }
        NetworkInfo ni=mNetTrackers[ConnectivityManager.TYPE_MOBILE_HIPRI].getNetworkInfo();
switch (result) {
case ConnectivityManager.CMP_RESULT_CODE_CONNECTABLE:
case ConnectivityManager.CMP_RESULT_CODE_NO_CONNECTION:
{
            log("CheckMp.onComplete: ignore, connected or no connection");
            break;
          }
case ConnectivityManager.CMP_RESULT_CODE_REDIRECTED:
{
          log("CheckMp.onComplete: warm sim");
          String url=getProvisioningUrl();
          if (TextUtils.isEmpty(url)) {
            url=mContext.getResources().getString(R.string.mobile_redirected_provisioning_url);
          }
          if (TextUtils.isEmpty(url) == false) {
            log("CheckMp.onComplete: warm sim (redirected), url=" + url);
            setNotificationVisible(true,ni,url);
          }
 else {
            log("CheckMp.onComplete: warm sim (redirected), no url");
          }
          break;
        }
case ConnectivityManager.CMP_RESULT_CODE_NO_DNS:
case ConnectivityManager.CMP_RESULT_CODE_NO_TCP_CONNECTION:
{
        String url=getProvisioningUrl();
        if (TextUtils.isEmpty(url) == false) {
          log("CheckMp.onComplete: warm sim (no dns/tcp), url=" + url);
          setNotificationVisible(true,ni,url);
        }
 else {
          log("CheckMp.onComplete: warm sim (no dns/tcp), no url");
        }
        break;
      }
default :
{
      loge("CheckMp.onComplete: ignore unexpected result=" + result);
      break;
    }
}
}
}
;
CheckMp.Params params=new CheckMp.Params(checkMp.getDefaultUrl(),timeOutMs,cb);
log("checkMobileProvisioning: params=" + params);
setNotificationVisible(false,null,null);
checkMp.execute(params);
}
  finally {
Binder.restoreCallingIdentity(token);
log("checkMobileProvisioning: X");
}
return timeOutMs;
}
