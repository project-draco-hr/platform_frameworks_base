{
  NetworkInfo info;
switch (msg.what) {
case NetworkStateTracker.EVENT_STATE_CHANGED:
    info=(NetworkInfo)msg.obj;
  int type=info.getType();
NetworkInfo.State state=info.getState();
if (VDBG || (state == NetworkInfo.State.CONNECTED) || (state == NetworkInfo.State.DISCONNECTED)) {
log("ConnectivityChange for " + info.getTypeName() + ": "+ state+ "/"+ info.getDetailedState());
}
int eventLogParam=(info.getType() & 0xf) | ((info.getDetailedState().ordinal() & 0x3f) << 4) | (info.getSubtype() << 10);
EventLog.writeEvent(EventLogTags.CONNECTIVITY_STATE_CHANGED,eventLogParam);
if (info.getDetailedState() == NetworkInfo.DetailedState.FAILED) {
handleConnectionFailure(info);
}
 else if (info.getDetailedState() == DetailedState.CAPTIVE_PORTAL_CHECK) {
handleCaptivePortalTrackerCheck(info);
}
 else if (state == NetworkInfo.State.DISCONNECTED) {
handleDisconnect(info);
}
 else if (state == NetworkInfo.State.SUSPENDED) {
handleDisconnect(info);
}
 else if (state == NetworkInfo.State.CONNECTED) {
handleConnect(info);
}
if (mLockdownTracker != null) {
mLockdownTracker.onNetworkInfoChanged(info);
}
break;
case NetworkStateTracker.EVENT_CONFIGURATION_CHANGED:
info=(NetworkInfo)msg.obj;
handleConnectivityChange(info.getType(),false);
break;
case NetworkStateTracker.EVENT_NETWORK_SUBTYPE_CHANGED:
info=(NetworkInfo)msg.obj;
type=info.getType();
updateNetworkSettings(mNetTrackers[type]);
break;
}
}
