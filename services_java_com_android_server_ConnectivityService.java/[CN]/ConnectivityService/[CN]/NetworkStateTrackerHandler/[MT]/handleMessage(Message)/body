{
  NetworkInfo info;
switch (msg.what) {
case NetworkStateTracker.EVENT_STATE_CHANGED:
    info=(NetworkInfo)msg.obj;
  int type=info.getType();
NetworkInfo.State state=info.getState();
if (VDBG || (state == NetworkInfo.State.CONNECTED) || (state == NetworkInfo.State.DISCONNECTED)) {
log("ConnectivityChange for " + info.getTypeName() + ": "+ state+ "/"+ info.getDetailedState());
}
if (!mFirstProvisioningCheckStarted && (0 != Settings.Global.getInt(mContext.getContentResolver(),Settings.Global.DEVICE_PROVISIONED,0)) && (state == NetworkInfo.State.CONNECTED)) {
log("check provisioning after booting");
mFirstProvisioningCheckStarted=true;
checkMobileProvisioning(true,CheckMp.MAX_TIMEOUT_MS,null);
}
EventLogTags.writeConnectivityStateChanged(info.getType(),info.getSubtype(),info.getDetailedState().ordinal());
if (info.getDetailedState() == NetworkInfo.DetailedState.FAILED) {
handleConnectionFailure(info);
}
 else if (info.getDetailedState() == DetailedState.CAPTIVE_PORTAL_CHECK) {
handleCaptivePortalTrackerCheck(info);
}
 else if (state == NetworkInfo.State.DISCONNECTED) {
handleDisconnect(info);
}
 else if (state == NetworkInfo.State.SUSPENDED) {
handleDisconnect(info);
}
 else if (state == NetworkInfo.State.CONNECTED) {
handleConnect(info);
}
if (mLockdownTracker != null) {
mLockdownTracker.onNetworkInfoChanged(info);
}
break;
case NetworkStateTracker.EVENT_CONFIGURATION_CHANGED:
info=(NetworkInfo)msg.obj;
handleConnectivityChange(info.getType(),false);
break;
case NetworkStateTracker.EVENT_NETWORK_SUBTYPE_CHANGED:
info=(NetworkInfo)msg.obj;
type=info.getType();
updateNetworkSettings(mNetTrackers[type]);
break;
}
}
