{
  mNanManager=new WeakReference<>(mgr);
  mLooper=looper;
  mBinder=binder;
  if (VDBG)   Log.v(TAG,"WifiNanEventCallbackProxy ctor: looper=" + looper);
  mHandler=new Handler(looper){
    @Override public void handleMessage(    Message msg){
      if (DBG) {
        Log.d(TAG,"WifiNanEventCallbackProxy: What=" + msg.what + ", msg="+ msg);
      }
      WifiNanManager mgr=mNanManager.get();
      if (mgr == null) {
        Log.w(TAG,"WifiNanEventCallbackProxy: handleMessage post GC");
        return;
      }
switch (msg.what) {
case CALLBACK_CONNECT_SUCCESS:
        attachCallback.onAttached(new WifiNanSession(mgr,mBinder,mLooper,msg.arg1));
      break;
case CALLBACK_CONNECT_FAIL:
    mNanManager.clear();
  attachCallback.onAttachFailed(msg.arg1);
break;
case CALLBACK_IDENTITY_CHANGED:
identityChangedListener.onIdentityChanged((byte[])msg.obj);
break;
case CALLBACK_RANGING_SUCCESS:
{
RttManager.RttListener listener=getAndRemoveRangingListener(msg.arg1);
if (listener == null) {
Log.e(TAG,"CALLBACK_RANGING_SUCCESS rangingId=" + msg.arg1 + ": no listener registered (anymore)");
}
 else {
listener.onSuccess(((RttManager.ParcelableRttResults)msg.obj).mResults);
}
break;
}
case CALLBACK_RANGING_FAILURE:
{
RttManager.RttListener listener=getAndRemoveRangingListener(msg.arg1);
if (listener == null) {
Log.e(TAG,"CALLBACK_RANGING_SUCCESS rangingId=" + msg.arg1 + ": no listener registered (anymore)");
}
 else {
listener.onFailure(msg.arg2,(String)msg.obj);
}
break;
}
case CALLBACK_RANGING_ABORTED:
{
RttManager.RttListener listener=getAndRemoveRangingListener(msg.arg1);
if (listener == null) {
Log.e(TAG,"CALLBACK_RANGING_SUCCESS rangingId=" + msg.arg1 + ": no listener registered (anymore)");
}
 else {
listener.onAborted();
}
break;
}
}
}
}
;
}
