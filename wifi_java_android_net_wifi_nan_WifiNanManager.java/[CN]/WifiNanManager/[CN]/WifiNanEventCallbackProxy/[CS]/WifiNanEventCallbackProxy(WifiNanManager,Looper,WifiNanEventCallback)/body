{
  final WeakReference<WifiNanManager> nanManager=new WeakReference<WifiNanManager>(mgr);
  if (VDBG)   Log.v(TAG,"WifiNanEventCallbackProxy ctor: looper=" + looper);
  mHandler=new Handler(looper){
    @Override public void handleMessage(    Message msg){
      if (DBG) {
        Log.d(TAG,"WifiNanEventCallbackProxy: What=" + msg.what + ", msg="+ msg);
      }
      WifiNanManager mgr=nanManager.get();
      if (mgr == null) {
        Log.w(TAG,"WifiNanEventCallbackProxy: handleMessage post GC");
        return;
      }
switch (msg.what) {
case CALLBACK_CONNECT_SUCCESS:
        originalCallback.onConnectSuccess();
      break;
case CALLBACK_CONNECT_FAIL:
synchronized (mgr.mLock) {
      mgr.mLooper=null;
      mgr.mClientId=INVALID_CLIENT_ID;
    }
  nanManager.clear();
originalCallback.onConnectFail(msg.arg1);
break;
case CALLBACK_IDENTITY_CHANGED:
originalCallback.onIdentityChanged();
break;
}
}
}
;
}
