{
  if (DEBUG_WINDOW_TRANSITIONS) {
    Slog.i(LOG_TAG,"Window transition: " + AppTransition.appTransitionToString(transition) + " displayId: "+ windowState.getDisplayId());
  }
  final boolean magnifying=mMagnifedViewport.isMagnifyingLocked();
  final int type=windowState.mAttrs.type;
switch (transition) {
case WindowManagerPolicy.TRANSIT_ENTER:
case WindowManagerPolicy.TRANSIT_SHOW:
{
      if (!magnifying) {
        break;
      }
switch (type) {
case WindowManager.LayoutParams.TYPE_APPLICATION:
case WindowManager.LayoutParams.TYPE_APPLICATION_PANEL:
case WindowManager.LayoutParams.TYPE_APPLICATION_MEDIA:
case WindowManager.LayoutParams.TYPE_APPLICATION_SUB_PANEL:
case WindowManager.LayoutParams.TYPE_APPLICATION_ATTACHED_DIALOG:
case WindowManager.LayoutParams.TYPE_SEARCH_BAR:
case WindowManager.LayoutParams.TYPE_PHONE:
case WindowManager.LayoutParams.TYPE_SYSTEM_ALERT:
case WindowManager.LayoutParams.TYPE_TOAST:
case WindowManager.LayoutParams.TYPE_SYSTEM_OVERLAY:
case WindowManager.LayoutParams.TYPE_PRIORITY_PHONE:
case WindowManager.LayoutParams.TYPE_SYSTEM_DIALOG:
case WindowManager.LayoutParams.TYPE_KEYGUARD_DIALOG:
case WindowManager.LayoutParams.TYPE_SYSTEM_ERROR:
case WindowManager.LayoutParams.TYPE_VOLUME_OVERLAY:
case WindowManager.LayoutParams.TYPE_NAVIGATION_BAR_PANEL:
case WindowManager.LayoutParams.TYPE_RECENTS_OVERLAY:
{
          Rect magnifiedRegionBounds=mTempRect2;
          mMagnifedViewport.getMagnifiedFrameInContentCoordsLocked(magnifiedRegionBounds);
          Rect touchableRegionBounds=mTempRect1;
          windowState.getTouchableRegion(mTempRegion1);
          mTempRegion1.getBounds(touchableRegionBounds);
          if (!magnifiedRegionBounds.intersect(touchableRegionBounds)) {
            try {
              mCallbacks.onRectangleOnScreenRequested(touchableRegionBounds.left,touchableRegionBounds.top,touchableRegionBounds.right,touchableRegionBounds.bottom);
            }
 catch (            RemoteException re) {
            }
          }
        }
      break;
  }
  break;
}
}
}
