{
  StringBuilder builder=new StringBuilder();
  builder.append("curl ");
  builder.append("-X ");
  builder.append(request.getMethod());
  builder.append(" ");
  for (  Header header : request.getAllHeaders()) {
    if (!logAuthToken && (header.getName().equals("Authorization") || header.getName().equals("Cookie"))) {
      continue;
    }
    builder.append("--header \"");
    builder.append(header.toString().trim());
    builder.append("\" ");
  }
  URI uri=request.getURI();
  if (request instanceof RequestWrapper) {
    HttpRequest original=((RequestWrapper)request).getOriginal();
    if (original instanceof HttpUriRequest) {
      uri=((HttpUriRequest)original).getURI();
    }
  }
  builder.append("\"");
  builder.append(uri);
  builder.append("\"");
  if (request instanceof HttpEntityEnclosingRequest) {
    HttpEntityEnclosingRequest entityRequest=(HttpEntityEnclosingRequest)request;
    HttpEntity entity=entityRequest.getEntity();
    if (entity != null && entity.isRepeatable()) {
      if (entity.getContentLength() < 1024) {
        ByteArrayOutputStream stream=new ByteArrayOutputStream();
        entity.writeTo(stream);
        if (isBinaryContent(request)) {
          String base64=Base64.encodeToString(stream.toByteArray(),Base64.NO_WRAP);
          builder.insert(0,"echo '" + base64 + "' | base64 -d > /tmp/$$.bin; ");
          builder.append(" --data-binary @/tmp/$$.bin");
        }
 else {
          String entityString=stream.toString();
          builder.append(" --data-ascii \"").append(entityString).append("\"");
        }
      }
 else {
        builder.append(" [TOO MUCH DATA TO INCLUDE]");
      }
    }
  }
  return builder.toString();
}
