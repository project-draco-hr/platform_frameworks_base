{
  try {
    int dockSide=mWindowManagerService.getDockedStackSide();
    if (dockSide == WindowManager.DOCKED_INVALID) {
      Recents recents=getComponent(Recents.class);
      int dockMode=(shortcutCode == SC_DOCK_LEFT) ? ActivityManager.DOCKED_STACK_CREATE_MODE_TOP_OR_LEFT : ActivityManager.DOCKED_STACK_CREATE_MODE_BOTTOM_OR_RIGHT;
      recents.dockTopTask(NavigationBarGestureHelper.DRAG_MODE_NONE,dockMode,null);
      MetricsLogger.action(mContext,MetricsEvent.WINDOW_DOCK_SHORTCUTS);
    }
 else {
      DividerView dividerView=getComponent(Divider.class).getView();
      DividerSnapAlgorithm snapAlgorithm=dividerView.getSnapAlgorithm();
      int dividerPosition=dividerView.getCurrentPosition();
      DividerSnapAlgorithm.SnapTarget currentTarget=snapAlgorithm.calculateNonDismissingSnapTarget(dividerPosition);
      int increment=(shortcutCode == SC_DOCK_LEFT) ? -1 : 1;
      DividerSnapAlgorithm.SnapTarget target=snapAlgorithm.cycleNonDismissTarget(currentTarget,increment);
      dividerView.startDragging(true,false);
      dividerView.stopDragging(target.position,0f,true);
    }
  }
 catch (  RemoteException e) {
    Log.e(TAG,"handleDockKey() failed.");
  }
}
