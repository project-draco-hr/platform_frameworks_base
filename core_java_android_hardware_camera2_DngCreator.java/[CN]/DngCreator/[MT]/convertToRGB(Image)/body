{
  int width=yuvImage.getWidth();
  int height=yuvImage.getHeight();
  ByteBuffer buf=ByteBuffer.allocateDirect(BYTES_PER_RGB_PIX * width * height);
  Image.Plane yPlane=yuvImage.getPlanes()[0];
  Image.Plane uPlane=yuvImage.getPlanes()[1];
  Image.Plane vPlane=yuvImage.getPlanes()[2];
  ByteBuffer yBuf=yPlane.getBuffer();
  ByteBuffer uBuf=uPlane.getBuffer();
  ByteBuffer vBuf=vPlane.getBuffer();
  yBuf.rewind();
  uBuf.rewind();
  vBuf.rewind();
  int yRowStride=yPlane.getRowStride();
  int vRowStride=vPlane.getRowStride();
  int uRowStride=uPlane.getRowStride();
  int yPixStride=yPlane.getPixelStride();
  int vPixStride=vPlane.getPixelStride();
  int uPixStride=uPlane.getPixelStride();
  byte[] yuvPixel={0,0,0};
  byte[] yFullRow=new byte[yPixStride * (width - 1) + 1];
  byte[] uFullRow=new byte[uPixStride * (width / 2 - 1) + 1];
  byte[] vFullRow=new byte[vPixStride * (width / 2 - 1) + 1];
  byte[] finalRow=new byte[BYTES_PER_RGB_PIX * width];
  for (int i=0; i < height; i++) {
    int halfH=i / 2;
    yBuf.position(yRowStride * i);
    yBuf.get(yFullRow);
    uBuf.position(uRowStride * halfH);
    uBuf.get(uFullRow);
    vBuf.position(vRowStride * halfH);
    vBuf.get(vFullRow);
    for (int j=0; j < width; j++) {
      int halfW=j / 2;
      yuvPixel[0]=yFullRow[yPixStride * j];
      yuvPixel[1]=uFullRow[uPixStride * halfW];
      yuvPixel[2]=vFullRow[vPixStride * halfW];
      yuvToRgb(yuvPixel,j * BYTES_PER_RGB_PIX,finalRow);
    }
    buf.put(finalRow);
  }
  yBuf.rewind();
  uBuf.rewind();
  vBuf.rewind();
  buf.rewind();
  return buf;
}
