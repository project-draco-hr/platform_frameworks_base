{
  SubtitleTrack bestTrack=null;
  int bestScore=-1;
  Locale selectedLocale=mCaptioningManager.getLocale();
  Locale locale=selectedLocale;
  if (locale == null) {
    locale=Locale.getDefault();
  }
  boolean selectForced=!mCaptioningManager.isEnabled();
synchronized (mTracks) {
    for (    SubtitleTrack track : mTracks) {
      MediaFormat format=track.getFormat();
      String language=format.getString(MediaFormat.KEY_LANGUAGE);
      boolean forced=format.getInteger(MediaFormat.KEY_IS_FORCED_SUBTITLE,0) != 0;
      boolean autoselect=format.getInteger(MediaFormat.KEY_IS_AUTOSELECT,1) != 0;
      boolean is_default=format.getInteger(MediaFormat.KEY_IS_DEFAULT,0) != 0;
      boolean languageMatches=(locale == null || locale.getLanguage().equals("") || locale.getISO3Language().equals(language) || locale.getLanguage().equals(language));
      int score=(forced ? 0 : 8) + (((selectedLocale == null) && is_default) ? 4 : 0) + (autoselect ? 0 : 2)+ (languageMatches ? 1 : 0);
      if (selectForced && !forced) {
        continue;
      }
      if ((selectedLocale == null && is_default) || (languageMatches && (autoselect || forced || selectedLocale != null))) {
        if (score > bestScore) {
          bestScore=score;
          bestTrack=track;
        }
      }
    }
  }
  return bestTrack;
}
