{
  if (mThumbnailLoader != null) {
    mThumbnailLoader.cancel(false);
    mThumbnailLoader=null;
  }
  mActivityDescriptions=getRecentTasks();
  for (  ActivityDescription ad : mActivityDescriptions) {
    ad.setThumbnail(mAppThumbnailBackground);
  }
  mListAdapter.notifyDataSetInvalidated();
  if (mActivityDescriptions.size() > 0) {
    if (DEBUG)     Log.v(TAG,"Showing " + mActivityDescriptions.size() + " apps");
    updateUiElements(getResources().getConfiguration());
    final ArrayList<ActivityDescription> descriptions=mActivityDescriptions;
    loadActivityDescription(descriptions.get(0),0);
    applyActivityDescription(descriptions.get(0),0,false);
    if (descriptions.size() > 1) {
      mThumbnailLoader=new AsyncTask<Void,Integer,Void>(){
        @Override protected void onProgressUpdate(        Integer... values){
          final ActivityDescription ad=descriptions.get(values[0]);
          if (!isCancelled()) {
            applyActivityDescription(ad,values[0],true);
          }
          mHandler.post(new Runnable(){
            @Override public void run(){
synchronized (ad) {
                ad.notifyAll();
              }
            }
          }
);
        }
        @Override protected Void doInBackground(        Void... params){
          final int origPri=Process.getThreadPriority(Process.myTid());
          Process.setThreadPriority(Process.THREAD_GROUP_BG_NONINTERACTIVE);
          long nextTime=SystemClock.uptimeMillis();
          for (int i=1; i < descriptions.size(); i++) {
            ActivityDescription ad=descriptions.get(i);
            loadActivityDescription(ad,i);
            long now=SystemClock.uptimeMillis();
            nextTime+=150;
            if (nextTime > now) {
              try {
                Thread.sleep(nextTime - now);
              }
 catch (              InterruptedException e) {
              }
            }
            if (isCancelled()) {
              break;
            }
synchronized (ad) {
              publishProgress(i);
              try {
                ad.wait(500);
              }
 catch (              InterruptedException e) {
              }
            }
          }
          Process.setThreadPriority(origPri);
          return null;
        }
      }
;
      mThumbnailLoader.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
    }
  }
 else {
    if (DEBUG)     Log.v(TAG,"Nothing to show");
    hide(false);
  }
}
