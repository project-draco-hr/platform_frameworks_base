{
  byte[] data=new byte[200 * 1024];
  mRandom.nextBytes(data);
  KeyphraseRecognitionExtra[] kpExtra=new KeyphraseRecognitionExtra[4];
  ConfidenceLevel cl1=new ConfidenceLevel(1,90);
  ConfidenceLevel cl2=new ConfidenceLevel(2,30);
  kpExtra[0]=new KeyphraseRecognitionExtra(1,SoundTrigger.RECOGNITION_MODE_USER_IDENTIFICATION,new ConfidenceLevel[]{cl1,cl2});
  kpExtra[1]=new KeyphraseRecognitionExtra(1,SoundTrigger.RECOGNITION_MODE_VOICE_TRIGGER,new ConfidenceLevel[]{cl2});
  kpExtra[2]=new KeyphraseRecognitionExtra(1,SoundTrigger.RECOGNITION_MODE_VOICE_TRIGGER,null);
  kpExtra[3]=new KeyphraseRecognitionExtra(1,SoundTrigger.RECOGNITION_MODE_VOICE_TRIGGER,new ConfidenceLevel[0]);
  KeyphraseRecognitionEvent re=new KeyphraseRecognitionEvent(SoundTrigger.RECOGNITION_STATUS_FAILURE,1,true,2,3,4,data,false,kpExtra);
  Parcel parcel=Parcel.obtain();
  re.writeToParcel(parcel,0);
  parcel.setDataPosition(0);
  KeyphraseRecognitionEvent unparceled=KeyphraseRecognitionEvent.CREATOR.createFromParcel(parcel);
  assertEquals(re,unparceled);
}
