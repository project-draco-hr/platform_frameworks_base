{
  final Resources r=a.getResources();
  final BitmapState state=mBitmapState;
  final int[] themeAttrs=a.extractThemeAttrs();
  state.mThemeAttrs=themeAttrs;
  if (themeAttrs == null || themeAttrs[R.styleable.BitmapDrawable_src] == 0) {
    final int id=a.getResourceId(R.styleable.BitmapDrawable_src,0);
    if (id == 0) {
      throw new XmlPullParserException(a.getPositionDescription() + ": <bitmap> requires a valid src attribute");
    }
    final Bitmap bitmap=BitmapFactory.decodeResource(r,id);
    if (bitmap == null) {
      throw new XmlPullParserException(a.getPositionDescription() + ": <bitmap> requires a valid src attribute");
    }
    state.mBitmap=bitmap;
    setBitmap(bitmap);
  }
  setTargetDensity(r.getDisplayMetrics());
  if (themeAttrs == null || themeAttrs[R.styleable.BitmapDrawable_mipMap] == 0) {
    final boolean defMipMap=state.mBitmap != null ? state.mBitmap.hasMipMap() : false;
    final boolean mipMap=a.getBoolean(R.styleable.BitmapDrawable_mipMap,defMipMap);
    setMipMap(mipMap);
  }
  if (themeAttrs == null || themeAttrs[R.styleable.BitmapDrawable_autoMirrored] == 0) {
    final boolean autoMirrored=a.getBoolean(R.styleable.BitmapDrawable_autoMirrored,false);
    setAutoMirrored(autoMirrored);
  }
  if (themeAttrs == null || themeAttrs[R.styleable.BitmapDrawable_tintMode] == 0) {
    final int tintModeValue=a.getInt(R.styleable.BitmapDrawable_tintMode,-1);
    state.mTintMode=Drawable.parseTintMode(tintModeValue,Mode.SRC_IN);
  }
  if (themeAttrs == null || themeAttrs[R.styleable.BitmapDrawable_tint] == 0) {
    state.mTint=a.getColorStateList(R.styleable.BitmapDrawable_tint);
    if (state.mTint != null) {
      final int color=state.mTint.getColorForState(getState(),0);
      mTintFilter=new PorterDuffColorFilter(color,mBitmapState.mTintMode);
    }
  }
  final Paint paint=mBitmapState.mPaint;
  if (themeAttrs == null || themeAttrs[R.styleable.BitmapDrawable_antialias] == 0) {
    final boolean antiAlias=a.getBoolean(R.styleable.BitmapDrawable_antialias,paint.isAntiAlias());
    paint.setAntiAlias(antiAlias);
  }
  if (themeAttrs == null || themeAttrs[R.styleable.BitmapDrawable_filter] == 0) {
    final boolean filter=a.getBoolean(R.styleable.BitmapDrawable_filter,paint.isFilterBitmap());
    paint.setFilterBitmap(filter);
  }
  if (themeAttrs == null || themeAttrs[R.styleable.BitmapDrawable_dither] == 0) {
    final boolean dither=a.getBoolean(R.styleable.BitmapDrawable_dither,paint.isDither());
    paint.setDither(dither);
  }
  if (themeAttrs == null || themeAttrs[R.styleable.BitmapDrawable_gravity] == 0) {
    final int gravity=a.getInt(R.styleable.BitmapDrawable_gravity,Gravity.FILL);
    setGravity(gravity);
  }
  if (themeAttrs == null || themeAttrs[R.styleable.BitmapDrawable_tileMode] == 0) {
    final int tileMode=a.getInt(R.styleable.BitmapDrawable_tileMode,-1);
    setTileModeInternal(tileMode);
  }
}
