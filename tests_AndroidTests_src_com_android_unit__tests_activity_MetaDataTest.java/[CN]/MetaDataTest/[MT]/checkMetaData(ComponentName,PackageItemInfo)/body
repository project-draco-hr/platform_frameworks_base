{
  assertNotNull("Unable to find component " + cn,ci);
  Bundle md=ci.metaData;
  assertNotNull("No meta data found",md);
  assertEquals("foo",md.getString("com.android.unit_tests.string"));
  assertTrue(md.getBoolean("com.android.unit_tests.boolean"));
  assertEquals(100,md.getInt("com.android.unit_tests.integer"));
  assertEquals(0xff000000,md.getInt("com.android.unit_tests.color"));
  assertEquals((double)1001,Math.floor(md.getFloat("com.android.unit_tests.float") * 10 + .5));
  assertEquals(R.xml.metadata,md.getInt("com.android.unit_tests.reference"));
  XmlResourceParser xml=ci.loadXmlMetaData(mContext.getPackageManager(),"com.android.unit_tests.reference");
  assertNotNull(xml);
  int type;
  while ((type=xml.next()) != XmlPullParser.START_TAG && type != XmlPullParser.END_DOCUMENT) {
  }
  assertEquals(XmlPullParser.START_TAG,type);
  assertEquals("thedata",xml.getName());
  final String rawAttr=xml.getAttributeValue(null,"rawText");
  assertEquals("some raw text",rawAttr);
  final int rawColorIntAttr=xml.getAttributeIntValue(null,"rawColor",0);
  assertEquals(0xffffff00,rawColorIntAttr);
  final String rawColorStrAttr=xml.getAttributeValue(null,"rawColor");
  assertEquals("#ffffff00",rawColorStrAttr);
  final String nameSpace="http://schemas.android.com/apk/res/android";
  final int colorIntAttr=xml.getAttributeIntValue(nameSpace,"color",0);
  assertEquals(0xffff0000,colorIntAttr);
  final String colorStrAttr=xml.getAttributeValue(nameSpace,"color");
  assertEquals("#ffff0000",colorStrAttr);
  TypedArray a=mContext.obtainStyledAttributes(xml,android.R.styleable.TextView);
  String styledAttr=a.getString(android.R.styleable.TextView_text);
  assertEquals("text",styledAttr);
  a.recycle();
  xml.close();
}
