{
  XmlResourceParser parser=null;
  try {
    parser=si.loadXmlMetaData(pm,TextToSpeech.Engine.SERVICE_META_DATA);
    if (parser == null) {
      Log.w(TAG,"No meta-data found for :" + si);
      return null;
    }
    final Resources res=pm.getResourcesForApplication(si.applicationInfo);
    int type;
    while ((type=parser.next()) != XmlResourceParser.END_DOCUMENT) {
      if (type == XmlResourceParser.START_TAG) {
        if (!XML_TAG_NAME.equals(parser.getName())) {
          Log.w(TAG,"Package " + si + " uses unknown tag :"+ parser.getName());
          return null;
        }
        final AttributeSet attrs=Xml.asAttributeSet(parser);
        final TypedArray array=res.obtainAttributes(attrs,com.android.internal.R.styleable.TextToSpeechEngine);
        final String settings=array.getString(com.android.internal.R.styleable.TextToSpeechEngine_settingsActivity);
        array.recycle();
        return settings;
      }
    }
    return null;
  }
 catch (  NameNotFoundException e) {
    Log.w(TAG,"Could not load resources for : " + si);
    return null;
  }
catch (  XmlPullParserException e) {
    Log.w(TAG,"Error parsing metadata for " + si + ":"+ e);
    return null;
  }
catch (  IOException e) {
    Log.w(TAG,"Error parsing metadata for " + si + ":"+ e);
    return null;
  }
 finally {
    if (parser != null) {
      parser.close();
    }
  }
}
