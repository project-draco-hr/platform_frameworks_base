{
  FileInputStream fis=null;
  try {
    AtomicFile appIdleFile=new AtomicFile(getUserFile(userId));
    fis=appIdleFile.openRead();
    XmlPullParser parser=Xml.newPullParser();
    parser.setInput(fis,StandardCharsets.UTF_8.name());
    int type;
    while ((type=parser.next()) != XmlPullParser.START_TAG && type != XmlPullParser.END_DOCUMENT) {
    }
    if (type != XmlPullParser.START_TAG) {
      Slog.e(TAG,"Unable to read app idle file for user " + userId);
      return;
    }
    if (!parser.getName().equals(TAG_PACKAGES)) {
      return;
    }
    while ((type=parser.next()) != XmlPullParser.END_DOCUMENT) {
      if (type == XmlPullParser.START_TAG) {
        final String name=parser.getName();
        if (name.equals(TAG_PACKAGE)) {
          final String packageName=parser.getAttributeValue(null,ATTR_NAME);
          PackageHistory packageHistory=new PackageHistory();
          packageHistory.lastUsedElapsedTime=Long.parseLong(parser.getAttributeValue(null,ATTR_ELAPSED_IDLE));
          packageHistory.lastUsedScreenTime=Long.parseLong(parser.getAttributeValue(null,ATTR_SCREEN_IDLE));
          userHistory.put(packageName,packageHistory);
        }
      }
    }
  }
 catch (  IOException|XmlPullParserException e) {
    Slog.e(TAG,"Unable to read app idle file for user " + userId);
  }
 finally {
    IoUtils.closeQuietly(fis);
  }
}
