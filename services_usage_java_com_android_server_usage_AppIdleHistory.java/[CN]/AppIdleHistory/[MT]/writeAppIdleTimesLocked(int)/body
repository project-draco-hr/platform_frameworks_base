{
  FileOutputStream fos=null;
  AtomicFile appIdleFile=new AtomicFile(getUserFile(userId));
  try {
    fos=appIdleFile.startWrite();
    final BufferedOutputStream bos=new BufferedOutputStream(fos);
    FastXmlSerializer xml=new FastXmlSerializer();
    xml.setOutput(bos,StandardCharsets.UTF_8.name());
    xml.startDocument(null,true);
    xml.setFeature("http://xmlpull.org/v1/doc/features.html#indent-output",true);
    xml.startTag(null,TAG_PACKAGES);
    ArrayMap<String,PackageHistory> userHistory=getUserHistoryLocked(userId);
    final int N=userHistory.size();
    for (int i=0; i < N; i++) {
      String packageName=userHistory.keyAt(i);
      PackageHistory history=userHistory.valueAt(i);
      xml.startTag(null,TAG_PACKAGE);
      xml.attribute(null,ATTR_NAME,packageName);
      xml.attribute(null,ATTR_ELAPSED_IDLE,Long.toString(history.lastUsedElapsedTime));
      xml.attribute(null,ATTR_SCREEN_IDLE,Long.toString(history.lastUsedScreenTime));
      xml.endTag(null,TAG_PACKAGE);
    }
    xml.endTag(null,TAG_PACKAGES);
    xml.endDocument();
    appIdleFile.finishWrite(fos);
  }
 catch (  Exception e) {
    appIdleFile.failWrite(fos);
    Slog.e(TAG,"Error writing app idle file for user " + userId);
  }
}
