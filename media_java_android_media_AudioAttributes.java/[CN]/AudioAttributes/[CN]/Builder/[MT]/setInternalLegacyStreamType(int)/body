{
switch (streamType) {
case AudioSystem.STREAM_VOICE_CALL:
    mContentType=CONTENT_TYPE_SPEECH;
  mUsage=USAGE_VOICE_COMMUNICATION;
break;
case AudioSystem.STREAM_SYSTEM_ENFORCED:
mFlags|=FLAG_AUDIBILITY_ENFORCED;
case AudioSystem.STREAM_SYSTEM:
mContentType=CONTENT_TYPE_SONIFICATION;
mUsage=USAGE_ASSISTANCE_SONIFICATION;
break;
case AudioSystem.STREAM_RING:
mContentType=CONTENT_TYPE_SONIFICATION;
mUsage=USAGE_NOTIFICATION_TELEPHONY_RINGTONE;
break;
case AudioSystem.STREAM_MUSIC:
mContentType=CONTENT_TYPE_MUSIC;
mUsage=USAGE_MEDIA;
break;
case AudioSystem.STREAM_ALARM:
mContentType=CONTENT_TYPE_SONIFICATION;
mUsage=USAGE_ALARM;
break;
case AudioSystem.STREAM_NOTIFICATION:
mContentType=CONTENT_TYPE_SONIFICATION;
mUsage=USAGE_NOTIFICATION;
break;
case AudioSystem.STREAM_BLUETOOTH_SCO:
mContentType=CONTENT_TYPE_SPEECH;
mUsage=USAGE_VOICE_COMMUNICATION;
mFlags|=FLAG_SCO;
break;
case AudioSystem.STREAM_DTMF:
mContentType=CONTENT_TYPE_SONIFICATION;
mUsage=USAGE_VOICE_COMMUNICATION_SIGNALLING;
break;
case AudioSystem.STREAM_TTS:
mContentType=CONTENT_TYPE_SPEECH;
mUsage=USAGE_ASSISTANCE_ACCESSIBILITY;
break;
default :
Log.e(TAG,"Invalid stream type " + streamType + " in for AudioAttributes");
}
return this;
}
