{
  MidiDevice device=null;
  try {
    IMidiDeviceServer server=mService.openDevice(mToken,deviceInfo);
    if (server == null) {
      ServiceInfo serviceInfo=(ServiceInfo)deviceInfo.getProperties().getParcelable(MidiDeviceInfo.PROPERTY_SERVICE_INFO);
      if (serviceInfo == null) {
        Log.e(TAG,"no ServiceInfo for " + deviceInfo);
      }
 else {
        Intent intent=new Intent(MidiDeviceService.SERVICE_INTERFACE);
        intent.setComponent(new ComponentName(serviceInfo.packageName,serviceInfo.name));
        final MidiDeviceInfo deviceInfoF=deviceInfo;
        final DeviceOpenCallback callbackF=callback;
        final Handler handlerF=handler;
        if (mContext.bindService(intent,new ServiceConnection(){
          @Override public void onServiceConnected(          ComponentName name,          IBinder binder){
            IMidiDeviceServer server=IMidiDeviceServer.Stub.asInterface(binder);
            MidiDevice device=new MidiDevice(deviceInfoF,server);
            sendOpenDeviceResponse(deviceInfoF,device,callbackF,handlerF);
          }
          @Override public void onServiceDisconnected(          ComponentName name){
          }
        }
,Context.BIND_AUTO_CREATE)) {
          return;
        }
 else {
          Log.e(TAG,"Unable to bind  service: " + intent);
        }
      }
    }
 else {
      device=new MidiDevice(deviceInfo,server);
    }
  }
 catch (  RemoteException e) {
    Log.e(TAG,"RemoteException in openDevice");
  }
  sendOpenDeviceResponse(deviceInfo,device,callback,handler);
}
