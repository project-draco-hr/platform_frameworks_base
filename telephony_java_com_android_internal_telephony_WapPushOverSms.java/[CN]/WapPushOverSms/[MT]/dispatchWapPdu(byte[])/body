{
  if (Config.DEBUG)   Log.d(LOG_TAG,"Rx: " + IccUtils.bytesToHexString(pdu));
  int index=0;
  int transactionId=pdu[index++] & 0xFF;
  int pduType=pdu[index++] & 0xFF;
  int headerLength=0;
  if ((pduType != WspTypeDecoder.PDU_TYPE_PUSH) && (pduType != WspTypeDecoder.PDU_TYPE_CONFIRMED_PUSH)) {
    if (Config.DEBUG)     Log.w(LOG_TAG,"Received non-PUSH WAP PDU. Type = " + pduType);
    return Intents.RESULT_SMS_HANDLED;
  }
  pduDecoder=new WspTypeDecoder(pdu);
  if (pduDecoder.decodeUintvarInteger(index) == false) {
    if (Config.DEBUG)     Log.w(LOG_TAG,"Received PDU. Header Length error.");
    return Intents.RESULT_SMS_GENERIC_ERROR;
  }
  headerLength=(int)pduDecoder.getValue32();
  index+=pduDecoder.getDecodedDataLength();
  int headerStartIndex=index;
  if (pduDecoder.decodeContentType(index) == false) {
    if (Config.DEBUG)     Log.w(LOG_TAG,"Received PDU. Header Content-Type error.");
    return Intents.RESULT_SMS_GENERIC_ERROR;
  }
  String mimeType=pduDecoder.getValueString();
  index+=pduDecoder.getDecodedDataLength();
  byte[] header=new byte[headerLength];
  System.arraycopy(pdu,headerStartIndex,header,0,header.length);
  byte[] intentData;
  String permission;
  if (mimeType.equals(WspTypeDecoder.CONTENT_TYPE_B_PUSH_CO)) {
    intentData=pdu;
  }
 else {
    int dataIndex=headerStartIndex + headerLength;
    intentData=new byte[pdu.length - dataIndex];
    System.arraycopy(pdu,dataIndex,intentData,0,intentData.length);
  }
  if (mimeType.equals(WspTypeDecoder.CONTENT_TYPE_B_MMS)) {
    permission="android.permission.RECEIVE_MMS";
  }
 else {
    permission="android.permission.RECEIVE_WAP_PUSH";
  }
  Intent intent=new Intent(Intents.WAP_PUSH_RECEIVED_ACTION);
  intent.setType(mimeType);
  intent.putExtra("transactionId",transactionId);
  intent.putExtra("pduType",pduType);
  intent.putExtra("header",header);
  intent.putExtra("data",intentData);
  intent.putExtra("contentTypeParameters",pduDecoder.getContentParameters());
  mSmsDispatcher.dispatch(intent,permission);
  return Activity.RESULT_OK;
}
