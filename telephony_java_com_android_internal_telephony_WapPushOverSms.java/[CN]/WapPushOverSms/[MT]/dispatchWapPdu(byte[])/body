{
  if (Config.LOGD)   Log.d(LOG_TAG,"Rx: " + IccUtils.bytesToHexString(pdu));
  int index=0;
  int transactionId=pdu[index++] & 0xFF;
  int pduType=pdu[index++] & 0xFF;
  int headerLength=0;
  if ((pduType != WspTypeDecoder.PDU_TYPE_PUSH) && (pduType != WspTypeDecoder.PDU_TYPE_CONFIRMED_PUSH)) {
    if (Config.LOGD)     Log.w(LOG_TAG,"Received non-PUSH WAP PDU. Type = " + pduType);
    return Intents.RESULT_SMS_HANDLED;
  }
  pduDecoder=new WspTypeDecoder(pdu);
  if (pduDecoder.decodeUintvarInteger(index) == false) {
    if (Config.LOGD)     Log.w(LOG_TAG,"Received PDU. Header Length error.");
    return Intents.RESULT_SMS_GENERIC_ERROR;
  }
  headerLength=(int)pduDecoder.getValue32();
  index+=pduDecoder.getDecodedDataLength();
  int headerStartIndex=index;
  if (pduDecoder.decodeContentType(index) == false) {
    if (Config.LOGD)     Log.w(LOG_TAG,"Received PDU. Header Content-Type error.");
    return Intents.RESULT_SMS_GENERIC_ERROR;
  }
  int binaryContentType;
  String mimeType=pduDecoder.getValueString();
  if (mimeType == null) {
    binaryContentType=(int)pduDecoder.getValue32();
switch (binaryContentType) {
case WspTypeDecoder.CONTENT_TYPE_B_DRM_RIGHTS_XML:
      mimeType=WspTypeDecoder.CONTENT_MIME_TYPE_B_DRM_RIGHTS_XML;
    break;
case WspTypeDecoder.CONTENT_TYPE_B_DRM_RIGHTS_WBXML:
  mimeType=WspTypeDecoder.CONTENT_MIME_TYPE_B_DRM_RIGHTS_WBXML;
break;
case WspTypeDecoder.CONTENT_TYPE_B_PUSH_SI:
mimeType=WspTypeDecoder.CONTENT_MIME_TYPE_B_PUSH_SI;
break;
case WspTypeDecoder.CONTENT_TYPE_B_PUSH_SL:
mimeType=WspTypeDecoder.CONTENT_MIME_TYPE_B_PUSH_SL;
break;
case WspTypeDecoder.CONTENT_TYPE_B_PUSH_CO:
mimeType=WspTypeDecoder.CONTENT_MIME_TYPE_B_PUSH_CO;
break;
case WspTypeDecoder.CONTENT_TYPE_B_MMS:
mimeType=WspTypeDecoder.CONTENT_MIME_TYPE_B_MMS;
break;
case WspTypeDecoder.CONTENT_TYPE_B_VND_DOCOMO_PF:
mimeType=WspTypeDecoder.CONTENT_MIME_TYPE_B_VND_DOCOMO_PF;
break;
default :
if (Config.LOGD) {
Log.w(LOG_TAG,"Received PDU. Unsupported Content-Type = " + binaryContentType);
}
return Intents.RESULT_SMS_HANDLED;
}
}
 else {
if (mimeType.equals(WspTypeDecoder.CONTENT_MIME_TYPE_B_DRM_RIGHTS_XML)) {
binaryContentType=WspTypeDecoder.CONTENT_TYPE_B_DRM_RIGHTS_XML;
}
 else if (mimeType.equals(WspTypeDecoder.CONTENT_MIME_TYPE_B_DRM_RIGHTS_WBXML)) {
binaryContentType=WspTypeDecoder.CONTENT_TYPE_B_DRM_RIGHTS_WBXML;
}
 else if (mimeType.equals(WspTypeDecoder.CONTENT_MIME_TYPE_B_PUSH_SI)) {
binaryContentType=WspTypeDecoder.CONTENT_TYPE_B_PUSH_SI;
}
 else if (mimeType.equals(WspTypeDecoder.CONTENT_MIME_TYPE_B_PUSH_SL)) {
binaryContentType=WspTypeDecoder.CONTENT_TYPE_B_PUSH_SL;
}
 else if (mimeType.equals(WspTypeDecoder.CONTENT_MIME_TYPE_B_PUSH_CO)) {
binaryContentType=WspTypeDecoder.CONTENT_TYPE_B_PUSH_CO;
}
 else if (mimeType.equals(WspTypeDecoder.CONTENT_MIME_TYPE_B_MMS)) {
binaryContentType=WspTypeDecoder.CONTENT_TYPE_B_MMS;
}
 else if (mimeType.equals(WspTypeDecoder.CONTENT_MIME_TYPE_B_VND_DOCOMO_PF)) {
binaryContentType=WspTypeDecoder.CONTENT_TYPE_B_VND_DOCOMO_PF;
}
 else {
if (Config.LOGD) Log.w(LOG_TAG,"Received PDU. Unknown Content-Type = " + mimeType);
return Intents.RESULT_SMS_HANDLED;
}
}
index+=pduDecoder.getDecodedDataLength();
int dataIndex=headerStartIndex + headerLength;
boolean dispatchedByApplication=false;
switch (binaryContentType) {
case WspTypeDecoder.CONTENT_TYPE_B_PUSH_CO:
dispatchWapPdu_PushCO(pdu,transactionId,pduType);
dispatchedByApplication=true;
break;
case WspTypeDecoder.CONTENT_TYPE_B_MMS:
dispatchWapPdu_MMS(pdu,transactionId,pduType,dataIndex);
dispatchedByApplication=true;
break;
default :
break;
}
if (dispatchedByApplication == false) {
dispatchWapPdu_default(pdu,transactionId,pduType,mimeType,dataIndex);
}
return Activity.RESULT_OK;
}
