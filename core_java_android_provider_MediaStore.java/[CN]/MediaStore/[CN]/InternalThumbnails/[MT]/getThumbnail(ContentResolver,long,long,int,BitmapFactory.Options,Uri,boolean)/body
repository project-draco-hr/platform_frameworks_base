{
  Bitmap bitmap=null;
  String filePath=null;
  MiniThumbFile thumbFile=new MiniThumbFile(isVideo ? Video.Media.EXTERNAL_CONTENT_URI : Images.Media.EXTERNAL_CONTENT_URI);
  Cursor c=null;
  try {
    long magic=thumbFile.getMagic(origId);
    if (magic != 0) {
      if (kind == MICRO_KIND) {
synchronized (sThumbBufLock) {
          if (sThumbBuf == null) {
            sThumbBuf=new byte[MiniThumbFile.BYTES_PER_MINTHUMB];
          }
          if (thumbFile.getMiniThumbFromFile(origId,sThumbBuf) != null) {
            bitmap=BitmapFactory.decodeByteArray(sThumbBuf,0,sThumbBuf.length);
            if (bitmap == null) {
              Log.w(TAG,"couldn't decode byte array.");
            }
          }
        }
        return bitmap;
      }
 else       if (kind == MINI_KIND) {
        String column=isVideo ? "video_id=" : "image_id=";
        c=cr.query(baseUri,PROJECTION,column + origId,null,null);
        if (c != null && c.moveToFirst()) {
          bitmap=getMiniThumbFromFile(c,baseUri,cr,options);
          if (bitmap != null) {
            return bitmap;
          }
        }
      }
    }
    Uri blockingUri=baseUri.buildUpon().appendQueryParameter("blocking","1").appendQueryParameter("orig_id",String.valueOf(origId)).appendQueryParameter("group_id",String.valueOf(groupId)).build();
    if (c != null)     c.close();
    c=cr.query(blockingUri,PROJECTION,null,null,null);
    if (c == null)     return null;
    if (kind == MICRO_KIND) {
synchronized (sThumbBufLock) {
        if (sThumbBuf == null) {
          sThumbBuf=new byte[MiniThumbFile.BYTES_PER_MINTHUMB];
        }
        Arrays.fill(sThumbBuf,(byte)0);
        if (thumbFile.getMiniThumbFromFile(origId,sThumbBuf) != null) {
          bitmap=BitmapFactory.decodeByteArray(sThumbBuf,0,sThumbBuf.length);
          if (bitmap == null) {
            Log.w(TAG,"couldn't decode byte array.");
          }
        }
      }
    }
 else     if (kind == MINI_KIND) {
      if (c.moveToFirst()) {
        bitmap=getMiniThumbFromFile(c,baseUri,cr,options);
      }
    }
 else {
      throw new IllegalArgumentException("Unsupported kind: " + kind);
    }
    if (bitmap == null) {
      Log.v(TAG,"Create the thumbnail in memory: origId=" + origId + ", kind="+ kind+ ", isVideo="+ isVideo);
      Uri uri=Uri.parse(baseUri.buildUpon().appendPath(String.valueOf(origId)).toString().replaceFirst("thumbnails","media"));
      if (filePath == null) {
        if (c != null)         c.close();
        c=cr.query(uri,PROJECTION,null,null,null);
        if (c == null || !c.moveToFirst()) {
          return null;
        }
        filePath=c.getString(1);
      }
      if (isVideo) {
        bitmap=ThumbnailUtils.createVideoThumbnail(filePath,kind);
      }
 else {
        bitmap=ThumbnailUtils.createImageThumbnail(filePath,kind);
      }
    }
  }
 catch (  SQLiteException ex) {
    Log.w(TAG,ex);
  }
 finally {
    if (c != null)     c.close();
    thumbFile.deactivate();
    thumbFile=null;
  }
  return bitmap;
}
