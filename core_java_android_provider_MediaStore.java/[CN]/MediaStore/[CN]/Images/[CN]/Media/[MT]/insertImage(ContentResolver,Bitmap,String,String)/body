{
  ContentValues values=new ContentValues();
  values.put(Images.Media.TITLE,title);
  values.put(Images.Media.DESCRIPTION,description);
  values.put(Images.Media.MIME_TYPE,"image/jpeg");
  Uri url=null;
  String stringUrl=null;
  try {
    url=cr.insert(EXTERNAL_CONTENT_URI,values);
    if (source != null) {
      OutputStream imageOut=cr.openOutputStream(url);
      try {
        source.compress(Bitmap.CompressFormat.JPEG,50,imageOut);
      }
  finally {
        imageOut.close();
      }
      long id=ContentUris.parseId(url);
      Bitmap miniThumb=StoreThumbnail(cr,source,id,320F,240F,Images.Thumbnails.MINI_KIND);
      Bitmap microThumb=StoreThumbnail(cr,miniThumb,id,50F,50F,Images.Thumbnails.MICRO_KIND);
    }
 else {
      Log.e(TAG,"Failed to create thumbnail, removing original");
      cr.delete(url,null,null);
      url=null;
    }
  }
 catch (  Exception e) {
    Log.e(TAG,"Failed to insert image",e);
    if (url != null) {
      cr.delete(url,null,null);
      url=null;
    }
  }
  if (url != null) {
    stringUrl=url.toString();
  }
  return stringUrl;
}
