{
  if (mSurface == null) {
    return false;
  }
  if (mStarted) {
    return true;
  }
  mStarted=true;
  boolean firstStart=false;
  int delta=deltaRotation(mCurRotation,mOriginalRotation);
  if (mFinishExitAnimation == null && (!dismissing || delta != Surface.ROTATION_0)) {
    if (DEBUG_STATE)     Slog.v(TAG,"Creating start and finish animations");
    firstStart=true;
    mStartExitAnimation=AnimationUtils.loadAnimation(mContext,com.android.internal.R.anim.screen_rotate_start_exit);
    mStartEnterAnimation=AnimationUtils.loadAnimation(mContext,com.android.internal.R.anim.screen_rotate_start_enter);
    mFinishExitAnimation=AnimationUtils.loadAnimation(mContext,com.android.internal.R.anim.screen_rotate_finish_exit);
    mFinishEnterAnimation=AnimationUtils.loadAnimation(mContext,com.android.internal.R.anim.screen_rotate_finish_enter);
  }
  if (DEBUG_STATE)   Slog.v(TAG,"Rotation delta: " + delta + " finalWidth="+ finalWidth+ " finalHeight="+ finalHeight+ " origWidth="+ mOriginalWidth+ " origHeight="+ mOriginalHeight);
switch (delta) {
case Surface.ROTATION_0:
    mRotateExitAnimation=AnimationUtils.loadAnimation(mContext,com.android.internal.R.anim.screen_rotate_0_exit);
  mRotateEnterAnimation=AnimationUtils.loadAnimation(mContext,com.android.internal.R.anim.screen_rotate_0_enter);
break;
case Surface.ROTATION_90:
mRotateExitAnimation=AnimationUtils.loadAnimation(mContext,com.android.internal.R.anim.screen_rotate_plus_90_exit);
mRotateEnterAnimation=AnimationUtils.loadAnimation(mContext,com.android.internal.R.anim.screen_rotate_plus_90_enter);
break;
case Surface.ROTATION_180:
mRotateExitAnimation=AnimationUtils.loadAnimation(mContext,com.android.internal.R.anim.screen_rotate_180_exit);
mRotateEnterAnimation=AnimationUtils.loadAnimation(mContext,com.android.internal.R.anim.screen_rotate_180_enter);
break;
case Surface.ROTATION_270:
mRotateExitAnimation=AnimationUtils.loadAnimation(mContext,com.android.internal.R.anim.screen_rotate_minus_90_exit);
mRotateEnterAnimation=AnimationUtils.loadAnimation(mContext,com.android.internal.R.anim.screen_rotate_minus_90_enter);
break;
}
if (firstStart) {
if (DEBUG_STATE) Slog.v(TAG,"Initializing start and finish animations");
mStartEnterAnimation.initialize(finalWidth,finalHeight,mOriginalWidth,mOriginalHeight);
mStartExitAnimation.initialize(finalWidth,finalHeight,mOriginalWidth,mOriginalHeight);
mFinishEnterAnimation.initialize(finalWidth,finalHeight,mOriginalWidth,mOriginalHeight);
mFinishExitAnimation.initialize(finalWidth,finalHeight,mOriginalWidth,mOriginalHeight);
}
mRotateEnterAnimation.initialize(finalWidth,finalHeight,mOriginalWidth,mOriginalHeight);
mRotateExitAnimation.initialize(finalWidth,finalHeight,mOriginalWidth,mOriginalHeight);
mAnimRunning=false;
mFinishAnimReady=false;
mFinishAnimStartTime=-1;
if (firstStart) {
mStartExitAnimation.restrictDuration(maxAnimationDuration);
mStartExitAnimation.scaleCurrentDuration(animationScale);
mStartEnterAnimation.restrictDuration(maxAnimationDuration);
mStartEnterAnimation.scaleCurrentDuration(animationScale);
mFinishExitAnimation.restrictDuration(maxAnimationDuration);
mFinishExitAnimation.scaleCurrentDuration(animationScale);
mFinishEnterAnimation.restrictDuration(maxAnimationDuration);
mFinishEnterAnimation.scaleCurrentDuration(animationScale);
}
mRotateExitAnimation.restrictDuration(maxAnimationDuration);
mRotateExitAnimation.scaleCurrentDuration(animationScale);
mRotateEnterAnimation.restrictDuration(maxAnimationDuration);
mRotateEnterAnimation.scaleCurrentDuration(animationScale);
if (mBlackFrame == null) {
if (WindowManagerService.SHOW_LIGHT_TRANSACTIONS || DEBUG_STATE) Slog.i(WindowManagerService.TAG,">>> OPEN TRANSACTION ScreenRotationAnimation.startAnimation");
Surface.openTransaction();
try {
Rect outer=new Rect(-finalWidth * 1,-finalHeight * 1,finalWidth * 2,finalHeight * 2);
Rect inner=new Rect(0,0,finalWidth,finalHeight);
mBlackFrame=new BlackFrame(session,outer,inner,FREEZE_LAYER);
}
 catch (Surface.OutOfResourcesException e) {
Slog.w(TAG,"Unable to allocate black surface",e);
}
 finally {
Surface.closeTransaction();
if (WindowManagerService.SHOW_LIGHT_TRANSACTIONS || DEBUG_STATE) Slog.i(WindowManagerService.TAG,"<<< CLOSE TRANSACTION ScreenRotationAnimation.startAnimation");
}
}
return true;
}
