{
  if (!isAnimating()) {
    if (DEBUG_STATE)     Slog.v(TAG,"Step: no animations running");
    return false;
  }
  if (!mAnimRunning) {
    if (DEBUG_STATE)     Slog.v(TAG,"Step: starting start, finish, rotate");
    if (mStartEnterAnimation != null) {
      mStartEnterAnimation.setStartTime(now);
    }
    if (mStartExitAnimation != null) {
      mStartExitAnimation.setStartTime(now);
    }
    if (mFinishEnterAnimation != null) {
      mFinishEnterAnimation.setStartTime(0);
    }
    if (mFinishExitAnimation != null) {
      mFinishExitAnimation.setStartTime(0);
    }
    if (mRotateEnterAnimation != null) {
      mRotateEnterAnimation.setStartTime(now);
    }
    if (mRotateExitAnimation != null) {
      mRotateExitAnimation.setStartTime(now);
    }
    mAnimRunning=true;
  }
  if (mFinishAnimReady && mFinishAnimStartTime < 0) {
    if (DEBUG_STATE)     Slog.v(TAG,"Step: finish anim now ready");
    mFinishAnimStartTime=now;
  }
  boolean moreStartExit=false;
  if (mStartExitAnimation != null) {
    mStartExitTransformation.clear();
    moreStartExit=mStartExitAnimation.getTransformation(now,mStartExitTransformation);
    if (DEBUG_TRANSFORMS)     Slog.v(TAG,"Stepped start exit: " + mStartExitTransformation);
    if (!moreStartExit) {
      if (DEBUG_STATE)       Slog.v(TAG,"Start exit animation done!");
      mStartExitAnimation.cancel();
      mStartExitAnimation=null;
    }
  }
  boolean moreStartEnter=false;
  if (mStartEnterAnimation != null) {
    mStartEnterTransformation.clear();
    moreStartEnter=mStartEnterAnimation.getTransformation(now,mStartEnterTransformation);
    if (DEBUG_TRANSFORMS)     Slog.v(TAG,"Stepped start enter: " + mStartEnterTransformation);
    if (!moreStartEnter) {
      if (DEBUG_STATE)       Slog.v(TAG,"Start enter animation done!");
      mStartEnterAnimation.cancel();
      mStartEnterAnimation=null;
    }
  }
  long finishNow=mFinishAnimReady ? (now - mFinishAnimStartTime) : 0;
  if (DEBUG_STATE)   Slog.v(TAG,"Step: finishNow=" + finishNow);
  mFinishExitTransformation.clear();
  boolean moreFinishExit=false;
  if (mFinishExitAnimation != null) {
    moreFinishExit=mFinishExitAnimation.getTransformation(finishNow,mFinishExitTransformation);
    if (DEBUG_TRANSFORMS)     Slog.v(TAG,"Stepped finish exit: " + mFinishExitTransformation);
    if (!moreStartExit && !moreFinishExit) {
      if (DEBUG_STATE)       Slog.v(TAG,"Finish exit animation done, clearing start/finish anims!");
      mStartExitTransformation.clear();
      mFinishExitAnimation.cancel();
      mFinishExitAnimation=null;
      mFinishExitTransformation.clear();
    }
  }
  mFinishEnterTransformation.clear();
  boolean moreFinishEnter=false;
  if (mFinishEnterAnimation != null) {
    moreFinishEnter=mFinishEnterAnimation.getTransformation(finishNow,mFinishEnterTransformation);
    if (DEBUG_TRANSFORMS)     Slog.v(TAG,"Stepped finish enter: " + mFinishEnterTransformation);
    if (!moreStartEnter && !moreFinishEnter) {
      if (DEBUG_STATE)       Slog.v(TAG,"Finish enter animation done, clearing start/finish anims!");
      mStartEnterTransformation.clear();
      mFinishEnterAnimation.cancel();
      mFinishEnterAnimation=null;
      mFinishEnterTransformation.clear();
    }
  }
  mRotateExitTransformation.clear();
  boolean moreRotateExit=false;
  if (mRotateExitAnimation != null) {
    moreRotateExit=mRotateExitAnimation.getTransformation(now,mRotateExitTransformation);
    if (DEBUG_TRANSFORMS)     Slog.v(TAG,"Stepped rotate exit: " + mRotateExitTransformation);
  }
  if (!moreFinishExit && !moreRotateExit) {
    if (DEBUG_STATE)     Slog.v(TAG,"Rotate exit animation done!");
    mRotateExitAnimation.cancel();
    mRotateExitAnimation=null;
    mRotateExitTransformation.clear();
  }
  mRotateEnterTransformation.clear();
  boolean moreRotateEnter=false;
  if (mRotateEnterAnimation != null) {
    moreRotateEnter=mRotateEnterAnimation.getTransformation(now,mRotateEnterTransformation);
    if (DEBUG_TRANSFORMS)     Slog.v(TAG,"Stepped rotate enter: " + mRotateEnterTransformation);
  }
  if (!moreFinishEnter && !moreRotateEnter) {
    if (DEBUG_STATE)     Slog.v(TAG,"Rotate enter animation done!");
    mRotateEnterAnimation.cancel();
    mRotateEnterAnimation=null;
    mRotateEnterTransformation.clear();
  }
  mExitTransformation.set(mRotateExitTransformation);
  mExitTransformation.compose(mStartExitTransformation);
  mExitTransformation.compose(mFinishExitTransformation);
  mEnterTransformation.set(mRotateEnterTransformation);
  mEnterTransformation.compose(mStartEnterTransformation);
  mEnterTransformation.compose(mFinishEnterTransformation);
  if (DEBUG_TRANSFORMS)   Slog.v(TAG,"Final exit: " + mExitTransformation);
  if (DEBUG_TRANSFORMS)   Slog.v(TAG,"Final enter: " + mEnterTransformation);
  if (!moreStartExit && !moreFinishExit && !moreRotateExit) {
    if (mSurface != null) {
      if (DEBUG_STATE)       Slog.v(TAG,"Exit animations done, hiding screenshot surface");
      mSurface.hide();
    }
  }
  if (!moreStartEnter && !moreFinishEnter && !moreRotateEnter) {
    if (mBlackFrame != null) {
      if (DEBUG_STATE)       Slog.v(TAG,"Enter animations done, hiding black frame");
      mBlackFrame.hide();
    }
  }
 else {
    if (mBlackFrame != null) {
      mBlackFrame.setMatrix(mEnterTransformation.getMatrix());
    }
  }
  mSnapshotFinalMatrix.setConcat(mExitTransformation.getMatrix(),mSnapshotInitialMatrix);
  setSnapshotTransform(mSnapshotFinalMatrix,mExitTransformation.getAlpha());
  final boolean more=moreStartEnter || moreStartExit || moreFinishEnter|| moreFinishExit|| moreRotateEnter|| moreRotateExit|| !mFinishAnimReady;
  if (DEBUG_STATE)   Slog.v(TAG,"Step: more=" + more);
  return more;
}
