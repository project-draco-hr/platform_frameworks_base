{
  final View handle=mHandle;
  if (mVertical) {
    if (position == EXPANDED_FULL_OPEN) {
      handle.offsetTopAndBottom(mTopOffset - handle.getTop());
      invalidate();
    }
 else     if (position == COLLAPSED_FULL_CLOSED) {
      handle.offsetTopAndBottom(mBottomOffset + mBottom - mTop - mHandleHeight - handle.getTop());
      invalidate();
    }
 else {
      final int top=handle.getTop();
      int deltaY=position - top;
      if (position < mTopOffset) {
        deltaY=mTopOffset - top;
      }
 else       if (deltaY > mBottomOffset + mBottom - mTop - mHandleHeight - top) {
        deltaY=mBottomOffset + mBottom - mTop - mHandleHeight - top;
      }
      handle.offsetTopAndBottom(deltaY);
      final Rect frame=mFrame;
      final Rect region=mInvalidate;
      handle.getHitRect(frame);
      region.set(frame);
      region.union(frame.left,frame.top - deltaY,frame.right,frame.bottom - deltaY);
      region.union(0,frame.bottom - deltaY,getWidth(),frame.bottom - deltaY + mContent.getHeight());
      invalidate(region);
    }
  }
 else {
    if (position == EXPANDED_FULL_OPEN) {
      handle.offsetLeftAndRight(mTopOffset - handle.getLeft());
      invalidate();
    }
 else     if (position == COLLAPSED_FULL_CLOSED) {
      handle.offsetLeftAndRight(mBottomOffset + mRight - mLeft - mHandleWidth - handle.getLeft());
      invalidate();
    }
 else {
      final int left=handle.getLeft();
      int deltaX=position - left;
      if (position < mTopOffset) {
        deltaX=mTopOffset - left;
      }
 else       if (deltaX > mBottomOffset + mRight - mLeft - mHandleWidth - left) {
        deltaX=mBottomOffset + mRight - mLeft - mHandleWidth - left;
      }
      handle.offsetLeftAndRight(deltaX);
      final Rect frame=mFrame;
      final Rect region=mInvalidate;
      handle.getHitRect(frame);
      region.set(frame);
      region.union(frame.left - deltaX,frame.top,frame.right - deltaX,frame.bottom);
      region.union(frame.right - deltaX,0,frame.right - deltaX + mContent.getWidth(),getHeight());
      invalidate(region);
    }
  }
}
