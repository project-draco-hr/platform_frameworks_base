{
  if (start < 0) {
    throw new IndexOutOfBoundsException(Messages.getString("awt.95",start));
  }
  if (end > chars.length) {
    throw new IndexOutOfBoundsException(Messages.getString("awt.96",end));
  }
  if (start > end) {
    throw new IndexOutOfBoundsException(Messages.getString("awt.97",(end - start)));
  }
  if (frc == null) {
    throw new NullPointerException(Messages.getString("awt.00"));
  }
  FontPeerImpl peer=(FontPeerImpl)this.getPeer();
  final int TRANSFORM_MASK=AffineTransform.TYPE_GENERAL_ROTATION | AffineTransform.TYPE_GENERAL_TRANSFORM;
  Rectangle2D bounds;
  AffineTransform transform=getTransform();
  if ((transform.getType() & TRANSFORM_MASK) == 0) {
    int width=0;
    for (int i=start; i < end; i++) {
      width+=peer.charWidth(chars[i]);
    }
    LineMetrics nlm=getLineMetrics(chars,start,end,frc);
    bounds=transform.createTransformedShape(new Rectangle2D.Float(0,-nlm.getAscent(),width,nlm.getHeight())).getBounds2D();
  }
 else {
    int len=end - start;
    char[] subChars=new char[len];
    System.arraycopy(chars,start,subChars,0,len);
    bounds=createGlyphVector(frc,subChars).getLogicalBounds();
  }
  return bounds;
}
