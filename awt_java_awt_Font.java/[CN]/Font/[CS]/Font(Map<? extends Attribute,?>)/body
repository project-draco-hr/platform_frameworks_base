{
  Object currAttr;
  this.name="default";
  this.size=12;
  this.pointSize=12;
  this.style=Font.PLAIN;
  if (attributes != null) {
    fRequestedAttributes=new Hashtable<Attribute,Object>(attributes);
    currAttr=attributes.get(TextAttribute.SIZE);
    if (currAttr != null) {
      this.pointSize=((Float)currAttr).floatValue();
      this.size=(int)Math.ceil(this.pointSize);
    }
    currAttr=attributes.get(TextAttribute.POSTURE);
    if (currAttr != null && currAttr.equals(TextAttribute.POSTURE_OBLIQUE)) {
      this.style|=Font.ITALIC;
    }
    currAttr=attributes.get(TextAttribute.WEIGHT);
    if ((currAttr != null) && (((Float)currAttr).floatValue() >= (TextAttribute.WEIGHT_BOLD).floatValue())) {
      this.style|=Font.BOLD;
    }
    currAttr=attributes.get(TextAttribute.FAMILY);
    if (currAttr != null) {
      this.name=(String)currAttr;
    }
    currAttr=attributes.get(TextAttribute.TRANSFORM);
    if (currAttr != null) {
      if (currAttr instanceof TransformAttribute) {
        this.transformed=!((TransformAttribute)currAttr).getTransform().isIdentity();
      }
 else       if (currAttr instanceof AffineTransform) {
        this.transformed=!((AffineTransform)currAttr).isIdentity();
      }
    }
  }
 else {
    fRequestedAttributes=new Hashtable<Attribute,Object>(5);
    fRequestedAttributes.put(TextAttribute.TRANSFORM,IDENTITY_TRANSFORM);
    this.transformed=false;
    fRequestedAttributes.put(TextAttribute.FAMILY,name);
    fRequestedAttributes.put(TextAttribute.SIZE,new Float(this.size));
    if ((this.style & Font.BOLD) != 0) {
      fRequestedAttributes.put(TextAttribute.WEIGHT,TextAttribute.WEIGHT_BOLD);
    }
 else {
      fRequestedAttributes.put(TextAttribute.WEIGHT,TextAttribute.WEIGHT_REGULAR);
    }
    if ((this.style & Font.ITALIC) != 0) {
      fRequestedAttributes.put(TextAttribute.POSTURE,TextAttribute.POSTURE_OBLIQUE);
    }
 else {
      fRequestedAttributes.put(TextAttribute.POSTURE,TextAttribute.POSTURE_REGULAR);
    }
  }
}
