{
  String primaryPackage="primary";
  String fallbackPackage="fallback";
  WebViewProviderInfo[] packages=new WebViewProviderInfo[]{new WebViewProviderInfo(primaryPackage,"",true,false,null),new WebViewProviderInfo(fallbackPackage,"",true,true,null)};
  setupWithPackages(packages,true);
  setEnabledAndValidPackageInfos(packages);
  mWebViewUpdateServiceImpl.prepareWebViewInSystemServer();
  Mockito.verify(mTestSystemImpl).enablePackageForUser(Mockito.eq(fallbackPackage),Mockito.eq(false),Matchers.anyInt());
  mTestSystemImpl.setPackageInfo(createPackageInfo(primaryPackage,false,true));
  mWebViewUpdateServiceImpl.packageStateChanged(primaryPackage,WebViewUpdateService.PACKAGE_CHANGED);
  Mockito.verify(mTestSystemImpl).enablePackageForUser(Mockito.eq(fallbackPackage),Mockito.eq(true),Matchers.anyInt());
  mTestSystemImpl.setPackageInfo(createPackageInfo(primaryPackage,true,true));
  mWebViewUpdateServiceImpl.packageStateChanged(primaryPackage,WebViewUpdateService.PACKAGE_CHANGED);
  Mockito.verify(mTestSystemImpl,Mockito.times(2)).enablePackageForUser(Mockito.eq(fallbackPackage),Mockito.eq(false),Matchers.anyInt());
}
