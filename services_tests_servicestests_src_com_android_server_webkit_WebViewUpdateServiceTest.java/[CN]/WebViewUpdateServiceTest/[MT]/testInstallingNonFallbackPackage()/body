{
  String primaryPackage="primary";
  String fallbackPackage="fallback";
  WebViewProviderInfo[] packages=new WebViewProviderInfo[]{new WebViewProviderInfo(primaryPackage,"",true,false,null),new WebViewProviderInfo(fallbackPackage,"",true,true,null)};
  setupWithPackages(packages,true);
  mTestSystemImpl.setPackageInfo(createPackageInfo(fallbackPackage,true,true));
  mWebViewUpdateServiceImpl.prepareWebViewInSystemServer();
  Mockito.verify(mTestSystemImpl,Mockito.never()).uninstallAndDisablePackageForAllUsers(Matchers.anyObject(),Matchers.anyObject());
  checkPreparationPhasesForPackage(fallbackPackage,1);
  mTestSystemImpl.setPackageInfo(createPackageInfo(primaryPackage,true,true));
  mWebViewUpdateServiceImpl.packageStateChanged(primaryPackage,WebViewUpdateService.PACKAGE_ADDED);
  Mockito.verify(mTestSystemImpl).uninstallAndDisablePackageForAllUsers(Matchers.anyObject(),Mockito.eq(fallbackPackage));
  checkPreparationPhasesForPackage(primaryPackage,1);
  Mockito.verify(mTestSystemImpl).killPackageDependents(Mockito.eq(fallbackPackage));
}
