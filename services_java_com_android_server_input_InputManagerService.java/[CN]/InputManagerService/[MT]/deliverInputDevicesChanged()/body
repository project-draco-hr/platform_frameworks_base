{
  mTempInputDevicesChangedListenersToNotify.clear();
  final int numListeners;
  final int[] deviceIdAndGeneration;
synchronized (mInputDevicesLock) {
    if (!mInputDevicesChangedPending) {
      return;
    }
    mInputDevicesChangedPending=false;
    numListeners=mInputDevicesChangedListeners.size();
    for (int i=0; i < numListeners; i++) {
      mTempInputDevicesChangedListenersToNotify.add(mInputDevicesChangedListeners.valueAt(i));
    }
    final int numDevices=mInputDevices.length;
    deviceIdAndGeneration=new int[numDevices * 2];
    for (int i=0; i < numDevices; i++) {
      final InputDevice inputDevice=mInputDevices[i];
      deviceIdAndGeneration[i * 2]=inputDevice.getId();
      deviceIdAndGeneration[i * 2 + 1]=inputDevice.getGeneration();
    }
  }
  for (int i=0; i < numListeners; i++) {
    mTempInputDevicesChangedListenersToNotify.get(i).notifyInputDevicesChanged(deviceIdAndGeneration);
  }
}
