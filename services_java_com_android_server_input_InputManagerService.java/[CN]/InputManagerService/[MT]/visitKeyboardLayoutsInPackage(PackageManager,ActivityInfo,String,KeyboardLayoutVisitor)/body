{
  Bundle metaData=receiver.metaData;
  if (metaData == null) {
    return;
  }
  int configResId=metaData.getInt(InputManager.META_DATA_KEYBOARD_LAYOUTS);
  if (configResId == 0) {
    Log.w(TAG,"Missing meta-data '" + InputManager.META_DATA_KEYBOARD_LAYOUTS + "' on receiver "+ receiver.packageName+ "/"+ receiver.name);
    return;
  }
  try {
    Resources resources=pm.getResourcesForApplication(receiver.applicationInfo);
    XmlResourceParser parser=resources.getXml(configResId);
    try {
      XmlUtils.beginDocument(parser,"keyboard-layouts");
      for (; ; ) {
        XmlUtils.nextElement(parser);
        String element=parser.getName();
        if (element == null) {
          break;
        }
        if (element.equals("keyboard-layout")) {
          TypedArray a=resources.obtainAttributes(parser,com.android.internal.R.styleable.KeyboardLayout);
          try {
            String name=a.getString(com.android.internal.R.styleable.KeyboardLayout_name);
            String label=a.getString(com.android.internal.R.styleable.KeyboardLayout_label);
            int kcmResId=a.getResourceId(com.android.internal.R.styleable.KeyboardLayout_kcm,0);
            if (name == null || label == null || kcmResId == 0) {
              Log.w(TAG,"Missing required 'name', 'label' or 'kcm' " + "attributes in keyboard layout " + "resource from receiver " + receiver.packageName + "/"+ receiver.name);
            }
 else {
              String descriptor=KeyboardLayoutDescriptor.format(receiver.packageName,receiver.name,name);
              if (keyboardName == null || name.equals(keyboardName)) {
                visitor.visitKeyboardLayout(resources,descriptor,label,kcmResId);
              }
            }
          }
  finally {
            a.recycle();
          }
        }
 else {
          Log.w(TAG,"Skipping unrecognized element '" + element + "' in keyboard layout resource from receiver "+ receiver.packageName+ "/"+ receiver.name);
        }
      }
    }
  finally {
      parser.close();
    }
  }
 catch (  Exception ex) {
    Log.w(TAG,"Could not parse keyboard layout resource from receiver " + receiver.packageName + "/"+ receiver.name,ex);
  }
}
