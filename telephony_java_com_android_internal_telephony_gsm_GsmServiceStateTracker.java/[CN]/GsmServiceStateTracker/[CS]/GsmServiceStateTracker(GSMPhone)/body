{
  super();
  this.phone=phone;
  cm=phone.mCM;
  ss=new ServiceState();
  newSS=new ServiceState();
  cellLoc=new GsmCellLocation();
  newCellLoc=new GsmCellLocation();
  mSignalStrength=new SignalStrength();
  PowerManager powerManager=(PowerManager)phone.getContext().getSystemService(Context.POWER_SERVICE);
  mWakeLock=powerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,WAKELOCK_TAG);
  cm.registerForAvailable(this,EVENT_RADIO_AVAILABLE,null);
  cm.registerForRadioStateChanged(this,EVENT_RADIO_STATE_CHANGED,null);
  cm.registerForVoiceNetworkStateChanged(this,EVENT_NETWORK_STATE_CHANGED,null);
  cm.setOnNITZTime(this,EVENT_NITZ_TIME,null);
  cm.setOnSignalStrengthUpdate(this,EVENT_SIGNAL_STRENGTH_UPDATE,null);
  cm.setOnRestrictedStateChanged(this,EVENT_RESTRICTED_STATE_CHANGED,null);
  cm.registerForSIMReady(this,EVENT_SIM_READY,null);
  int airplaneMode=Settings.System.getInt(phone.getContext().getContentResolver(),Settings.System.AIRPLANE_MODE_ON,0);
  mDesiredPowerState=!(airplaneMode > 0);
  cr=phone.getContext().getContentResolver();
  cr.registerContentObserver(Settings.System.getUriFor(Settings.System.AUTO_TIME),true,mAutoTimeObserver);
  cr.registerContentObserver(Settings.System.getUriFor(Settings.System.AUTO_TIME_ZONE),true,mAutoTimeZoneObserver);
  setSignalStrengthDefaultValues();
  mNeedToRegForSimLoaded=true;
  IntentFilter filter=new IntentFilter();
  filter.addAction(Intent.ACTION_LOCALE_CHANGED);
  phone.getContext().registerReceiver(mIntentReceiver,filter);
  phone.notifyOtaspChanged(OTASP_NOT_NEEDED);
}
