{
  super(TAG);
  mContext=context;
  mController=controller;
  mIfaceName=iface;
  addState(mStoppedState);
  addState(mDhcpState);
  addState(mDhcpInitState,mDhcpState);
  addState(mWaitBeforeStartState,mDhcpState);
  addState(mDhcpSelectingState,mDhcpState);
  addState(mDhcpRequestingState,mDhcpState);
  addState(mDhcpHaveAddressState,mDhcpState);
  addState(mDhcpBoundState,mDhcpHaveAddressState);
  addState(mWaitBeforeRenewalState,mDhcpHaveAddressState);
  addState(mDhcpRenewingState,mDhcpHaveAddressState);
  addState(mDhcpRebindingState,mDhcpHaveAddressState);
  addState(mDhcpInitRebootState,mDhcpState);
  addState(mDhcpRebootingState,mDhcpState);
  setInitialState(mStoppedState);
  mAlarmManager=(AlarmManager)mContext.getSystemService(Context.ALARM_SERVICE);
  IBinder b=ServiceManager.getService(Context.NETWORKMANAGEMENT_SERVICE);
  mNMService=INetworkManagementService.Stub.asInterface(b);
  mRandom=new Random();
  mKickAlarm=new AlarmListener("KICK",CMD_KICK);
  mTimeoutAlarm=new AlarmListener("TIMEOUT",CMD_TIMEOUT);
  mRenewAlarm=new AlarmListener("RENEW",DhcpStateMachine.CMD_RENEW_DHCP);
  mOneshotTimeoutAlarm=new AlarmListener("ONESHOT_TIMEOUT",CMD_ONESHOT_TIMEOUT);
}
