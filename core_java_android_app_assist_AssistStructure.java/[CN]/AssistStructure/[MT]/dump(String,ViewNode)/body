{
  Log.i(TAG,prefix + "View [" + node.getLeft()+ ","+ node.getTop()+ " "+ node.getWidth()+ "x"+ node.getHeight()+ "]"+ " "+ node.getClassName());
  int id=node.getId();
  if (id != 0) {
    StringBuilder sb=new StringBuilder();
    sb.append(prefix);
    sb.append("  ID: #");
    sb.append(Integer.toHexString(id));
    String entry=node.getIdEntry();
    if (entry != null) {
      String type=node.getIdType();
      String pkg=node.getIdPackage();
      sb.append(" ");
      sb.append(pkg);
      sb.append(":");
      sb.append(type);
      sb.append("/");
      sb.append(entry);
    }
    Log.i(TAG,sb.toString());
  }
  int scrollX=node.getScrollX();
  int scrollY=node.getScrollY();
  if (scrollX != 0 || scrollY != 0) {
    Log.i(TAG,prefix + "  Scroll: " + scrollX+ ","+ scrollY);
  }
  Matrix matrix=node.getTransformation();
  if (matrix != null) {
    Log.i(TAG,prefix + "  Transformation: " + matrix);
  }
  float elevation=node.getElevation();
  if (elevation != 0) {
    Log.i(TAG,prefix + "  Elevation: " + elevation);
  }
  float alpha=node.getAlpha();
  if (alpha != 0) {
    Log.i(TAG,prefix + "  Alpha: " + elevation);
  }
  CharSequence contentDescription=node.getContentDescription();
  if (contentDescription != null) {
    Log.i(TAG,prefix + "  Content description: " + contentDescription);
  }
  CharSequence text=node.getText();
  if (text != null) {
    Log.i(TAG,prefix + "  Text (sel " + node.getTextSelectionStart()+ "-"+ node.getTextSelectionEnd()+ "): "+ text);
    Log.i(TAG,prefix + "  Text size: " + node.getTextSize()+ " , style: #"+ node.getTextStyle());
    Log.i(TAG,prefix + "  Text color fg: #" + Integer.toHexString(node.getTextColor())+ ", bg: #"+ Integer.toHexString(node.getTextBackgroundColor()));
  }
  String hint=node.getHint();
  if (hint != null) {
    Log.i(TAG,prefix + "  Hint: " + hint);
  }
  Bundle extras=node.getExtras();
  if (extras != null) {
    Log.i(TAG,prefix + "  Extras: " + extras);
  }
  final int NCHILDREN=node.getChildCount();
  if (NCHILDREN > 0) {
    Log.i(TAG,prefix + "  Children:");
    String cprefix=prefix + "    ";
    for (int i=0; i < NCHILDREN; i++) {
      ViewNode cnode=node.getChildAt(i);
      dump(cprefix,cnode);
    }
  }
}
