{
  boolean skipStructure=false;
synchronized (this) {
    long endTime=SystemClock.uptimeMillis() + 5000;
    long now;
    while (mPendingAsyncChildren.size() > 0 && (now=SystemClock.uptimeMillis()) < endTime) {
      try {
        wait(endTime - now);
      }
 catch (      InterruptedException e) {
      }
    }
    if (mPendingAsyncChildren.size() > 0) {
      Log.w(TAG,"Skipping assist structure, waiting too long for async children (have " + mPendingAsyncChildren.size() + " remaining");
      skipStructure=true;
    }
  }
  int start=out.dataPosition();
  PooledStringWriter pwriter=new PooledStringWriter(out);
  float[] tmpMatrix=new float[9];
  ComponentName.writeToParcel(mActivityComponent,out);
  final int N=skipStructure ? 0 : mWindowNodes.size();
  out.writeInt(N);
  int NV=0;
  for (int i=0; i < N; i++) {
    NV+=mWindowNodes.get(i).writeToParcel(out,pwriter,tmpMatrix);
  }
  pwriter.finish();
  Log.i(TAG,"Flattened assist data: " + (out.dataPosition() - start) + " bytes, containing "+ N+ " windows, "+ NV+ " views");
}
