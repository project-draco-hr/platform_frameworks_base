{
  int flags=mFlags & ~FLAGS_ALL_CONTROL;
  if (mId != View.NO_ID) {
    flags|=FLAGS_HAS_ID;
  }
  if ((mX & ~0x7fff) != 0 || (mY & ~0x7fff) != 0 || (mWidth & ~0x7fff) != 0 | (mHeight & ~0x7fff) != 0) {
    flags|=FLAGS_HAS_LARGE_COORDS;
  }
  if (mScrollX != 0 || mScrollY != 0) {
    flags|=FLAGS_HAS_SCROLL;
  }
  if (mMatrix != null) {
    flags|=FLAGS_HAS_MATRIX;
  }
  if (mElevation != 0) {
    flags|=FLAGS_HAS_ELEVATION;
  }
  if (mAlpha != 1.0f) {
    flags|=FLAGS_HAS_ALPHA;
  }
  if (mContentDescription != null) {
    flags|=FLAGS_HAS_CONTENT_DESCRIPTION;
  }
  if (mText != null) {
    flags|=FLAGS_HAS_TEXT;
    if (!mText.isSimple()) {
      flags|=FLAGS_HAS_COMPLEX_TEXT;
    }
  }
  if (mExtras != null) {
    flags|=FLAGS_HAS_EXTRAS;
  }
  if (mChildren != null) {
    flags|=FLAGS_HAS_CHILDREN;
  }
  pwriter.writeString(mClassName);
  out.writeInt(flags);
  if ((flags & FLAGS_HAS_ID) != 0) {
    out.writeInt(mId);
    if (mId != 0) {
      pwriter.writeString(mIdEntry);
      if (mIdEntry != null) {
        pwriter.writeString(mIdType);
        pwriter.writeString(mIdPackage);
      }
    }
  }
  if ((flags & FLAGS_HAS_LARGE_COORDS) != 0) {
    out.writeInt(mX);
    out.writeInt(mY);
    out.writeInt(mWidth);
    out.writeInt(mHeight);
  }
 else {
    out.writeInt((mY << 16) | mX);
    out.writeInt((mHeight << 16) | mWidth);
  }
  if ((flags & FLAGS_HAS_SCROLL) != 0) {
    out.writeInt(mScrollX);
    out.writeInt(mScrollY);
  }
  if ((flags & FLAGS_HAS_MATRIX) != 0) {
    mMatrix.getValues(tmpMatrix);
    out.writeFloatArray(tmpMatrix);
  }
  if ((flags & FLAGS_HAS_ELEVATION) != 0) {
    out.writeFloat(mElevation);
  }
  if ((flags & FLAGS_HAS_ALPHA) != 0) {
    out.writeFloat(mAlpha);
  }
  if ((flags & FLAGS_HAS_CONTENT_DESCRIPTION) != 0) {
    TextUtils.writeToParcel(mContentDescription,out,0);
  }
  if ((flags & FLAGS_HAS_TEXT) != 0) {
    mText.writeToParcel(out,(flags & FLAGS_HAS_COMPLEX_TEXT) == 0);
  }
  if ((flags & FLAGS_HAS_EXTRAS) != 0) {
    out.writeBundle(mExtras);
  }
  return flags;
}
