{
  handleHide();
  String text;
  final int iconRes;
switch (zen) {
case ZEN_MODE_NO_INTERRUPTIONS:
    text=mContext.getString(R.string.zen_no_interruptions);
  iconRes=R.drawable.ic_zen_none;
break;
case ZEN_MODE_IMPORTANT_INTERRUPTIONS:
text=mContext.getString(R.string.zen_important_interruptions);
iconRes=R.drawable.ic_zen_important;
break;
default :
return;
}
if (overrideText != null) {
text=overrideText;
}
final Resources res=mContext.getResources();
final WindowManager.LayoutParams params=new WindowManager.LayoutParams();
params.height=WindowManager.LayoutParams.WRAP_CONTENT;
params.width=res.getDimensionPixelSize(R.dimen.zen_toast_width);
params.format=PixelFormat.TRANSLUCENT;
params.windowAnimations=R.style.ZenToastAnimations;
params.type=WindowManager.LayoutParams.TYPE_STATUS_BAR_PANEL;
params.setTitle(getClass().getSimpleName());
params.flags=WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON | WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE | WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE;
params.gravity=Gravity.CENTER;
params.packageName=mContext.getPackageName();
mZenToast=LayoutInflater.from(mContext).inflate(R.layout.zen_toast,null);
final TextView message=(TextView)mZenToast.findViewById(android.R.id.message);
message.setText(text);
final ImageView icon=(ImageView)mZenToast.findViewById(android.R.id.icon);
icon.setImageResource(iconRes);
mZenToast.addOnAttachStateChangeListener(new OnAttachStateChangeListener(){
@Override public void onViewDetachedFromWindow(View v){
}
@Override public void onViewAttachedToWindow(View v){
mZenToast.announceForAccessibility(message.getText());
}
}
);
mWindowManager.addView(mZenToast,params);
final int animDuration=res.getInteger(R.integer.zen_toast_animation_duration);
final int visibleDuration=res.getInteger(R.integer.zen_toast_visible_duration);
mHandler.sendEmptyMessageDelayed(MSG_HIDE,animDuration + visibleDuration);
}
