{
  TaskStack stack=RecentsTaskLoader.getShallowTaskStack(mSystemServicesProxy,Integer.MAX_VALUE,mContext.getResources());
  if (stack.getTaskCount() == 0)   return;
  ActivityManager.RunningTaskInfo runningTask=getTopMostTask();
  if (mSystemServicesProxy.isInHomeStack(runningTask.id))   return;
  ArrayList<Task> tasks=stack.getTasks();
  Task toTask=null;
  ActivityOptions launchOpts=null;
  int taskCount=tasks.size();
  for (int i=0; i < taskCount; i++) {
    Task task=tasks.get(i);
    if (task.key.id == runningTask.id) {
      TaskGrouping group=task.group;
      Task.TaskKey toTaskKey;
      if (showNextTask) {
        toTaskKey=group.getNextTaskInGroup(task);
      }
 else {
        toTaskKey=group.getPrevTaskInGroup(task);
      }
      if (toTaskKey != null) {
        toTask=stack.findTaskWithId(toTaskKey.id);
      }
      break;
    }
  }
  if (toTask == null) {
    return;
  }
  if (toTask.isActive) {
    mSystemServicesProxy.moveTaskToFront(toTask.key.id,launchOpts);
  }
 else {
    boolean isDocument=Utilities.isDocument(toTask.key.baseIntent);
    Intent intent=new Intent(toTask.key.baseIntent);
    intent.addFlags(Intent.FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY | Intent.FLAG_ACTIVITY_TASK_ON_HOME);
    if (!isDocument) {
      intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    }
    try {
      mSystemServicesProxy.startActivityFromRecents(toTask.key.id,launchOpts);
    }
 catch (    ActivityNotFoundException anfe) {
    }
    RecentsTaskLoader.getInstance().getSystemServicesProxy().removeTask(toTask.key.id,isDocument);
  }
}
