{
  if (System.currentTimeMillis() - mLastToggleTime < sMinToggleDelay) {
    return;
  }
  SystemServicesProxy ssp=mSystemServicesProxy;
  List<ActivityManager.RunningTaskInfo> tasks=ssp.getRunningTasks(1);
  boolean isTopTaskHome=false;
  if (!tasks.isEmpty()) {
    ActivityManager.RunningTaskInfo topTask=tasks.get(0);
    ComponentName topActivity=topTask.topActivity;
    if (topActivity.getPackageName().equals(sRecentsPackage) && topActivity.getClassName().equals(sRecentsActivity)) {
      try {
        Bundle data=new Bundle();
        Message msg=Message.obtain(null,MSG_TOGGLE_RECENTS,0,0);
        msg.setData(data);
        mService.send(msg);
        Console.logTraceTime(Constants.Log.App.TimeRecentsStartup,Constants.Log.App.TimeRecentsStartupKey,"sendToggleRecents");
        Console.logTraceTime(Constants.Log.App.TimeRecentsLaunchTask,Constants.Log.App.TimeRecentsLaunchKey,"sendToggleRecents");
      }
 catch (      RemoteException re) {
        re.printStackTrace();
      }
      mLastToggleTime=System.currentTimeMillis();
      return;
    }
    isTopTaskHome=ssp.isInHomeStack(topTask.id);
  }
  List<ActivityManager.RecentTaskInfo> recentTasks=ssp.getRecentTasks(4,UserHandle.CURRENT.getIdentifier());
  Rect taskRect=hasMultipleRecentsTask(recentTasks) ? mMultipleCountFirstTaskRect : mSingleCountFirstTaskRect;
  boolean isTaskExcludedFromRecents=isTopTaskExcludeFromRecents(recentTasks);
  boolean useThumbnailTransition=!isTopTaskHome && !isTaskExcludedFromRecents && hasValidTaskRects();
  if (useThumbnailTransition) {
    ActivityOptions opts=getThumbnailTransitionActivityOptions(taskRect);
    if (opts != null) {
      startAlternateRecentsActivity(opts,true);
    }
 else {
      useThumbnailTransition=false;
    }
  }
  if (!useThumbnailTransition) {
    ActivityOptions opts=ActivityOptions.makeCustomAnimation(mContext,R.anim.recents_from_launcher_enter,R.anim.recents_from_launcher_exit);
    startAlternateRecentsActivity(opts,false);
  }
  Console.logTraceTime(Constants.Log.App.TimeRecentsStartup,Constants.Log.App.TimeRecentsStartupKey,"startRecentsActivity");
  mLastToggleTime=System.currentTimeMillis();
}
