{
  try {
    freeMem();
    Log.v(LOGTAG,"Dumping memory information.");
    FileOutputStream out=new FileOutputStream(LOAD_TEST_RESULT,true);
    PrintStream ps=new PrintStream(out);
    ps.print("\n\n\n");
    ps.println("** MEMINFO in pid " + Process.myPid() + " [com.android.dumprendertree] **");
    String formatString="%17s %8s %8s %8s %8s";
    long nativeMax=Debug.getNativeHeapSize() / 1024;
    long nativeAllocated=Debug.getNativeHeapAllocatedSize() / 1024;
    long nativeFree=Debug.getNativeHeapFreeSize() / 1024;
    Runtime runtime=Runtime.getRuntime();
    long dalvikMax=runtime.totalMemory() / 1024;
    long dalvikFree=runtime.freeMemory() / 1024;
    long dalvikAllocated=dalvikMax - dalvikFree;
    Debug.MemoryInfo memInfo=new Debug.MemoryInfo();
    Debug.getMemoryInfo(memInfo);
    final int nativeShared=memInfo.nativeSharedDirty;
    final int dalvikShared=memInfo.dalvikSharedDirty;
    final int otherShared=memInfo.otherSharedDirty;
    final int nativePrivate=memInfo.nativePrivateDirty;
    final int dalvikPrivate=memInfo.dalvikPrivateDirty;
    final int otherPrivate=memInfo.otherPrivateDirty;
    printRow(ps,formatString,"","native","dalvik","other","total");
    printRow(ps,formatString,"size:",nativeMax,dalvikMax,"N/A",nativeMax + dalvikMax);
    printRow(ps,formatString,"allocated:",nativeAllocated,dalvikAllocated,"N/A",nativeAllocated + dalvikAllocated);
    printRow(ps,formatString,"free:",nativeFree,dalvikFree,"N/A",nativeFree + dalvikFree);
    printRow(ps,formatString,"(Pss):",memInfo.nativePss,memInfo.dalvikPss,memInfo.otherPss,memInfo.nativePss + memInfo.dalvikPss + memInfo.otherPss);
    printRow(ps,formatString,"(shared dirty):",nativeShared,dalvikShared,otherShared,nativeShared + dalvikShared + otherShared);
    printRow(ps,formatString,"(priv dirty):",nativePrivate,dalvikPrivate,otherPrivate,nativePrivate + dalvikPrivate + otherPrivate);
    ps.print("\n\n\n");
    ps.flush();
    ps.close();
    out.flush();
    out.close();
  }
 catch (  IOException e) {
    Log.e(LOGTAG,e.getMessage());
  }
}
