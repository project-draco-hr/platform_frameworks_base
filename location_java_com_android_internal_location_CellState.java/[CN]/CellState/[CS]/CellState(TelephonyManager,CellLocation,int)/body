{
  if (location instanceof GsmCellLocation) {
    GsmCellLocation loc=(GsmCellLocation)location;
    mLac=loc.getLac();
    mCid=loc.getCid();
  }
  mTime=System.currentTimeMillis();
  int radioType=telephonyManager.getNetworkType();
  if (radioType == TelephonyManager.NETWORK_TYPE_GPRS || radioType == TelephonyManager.NETWORK_TYPE_EDGE) {
    mRadioType=RADIO_TYPE_GPRS;
  }
 else   if (radioType == TelephonyManager.NETWORK_TYPE_UMTS) {
    mRadioType=RADIO_TYPE_WCDMA;
  }
 else   if (radioType == TelephonyManager.NETWORK_TYPE_CDMA || radioType == TelephonyManager.NETWORK_TYPE_EVDO_0 || radioType == TelephonyManager.NETWORK_TYPE_EVDO_A || radioType == TelephonyManager.NETWORK_TYPE_1xRTT) {
    mRadioType=RADIO_TYPE_CDMA;
  }
  mNeighbors=new ArrayList<NeighborCell>();
  List<NeighboringCellInfo> neighboringCells=telephonyManager.getNeighboringCellInfo();
  if (neighboringCells != null) {
    for (    NeighboringCellInfo n : neighboringCells) {
      if (n.getCid() == NeighboringCellInfo.UNKNOWN_CID) {
        continue;
      }
      if (mRadioType == RADIO_TYPE_WCDMA) {
        mNeighbors.add(new NeighborCell(-1,-1,n.getCid(),n.getRssi()));
      }
 else       if (mRadioType == RADIO_TYPE_GPRS) {
        try {
          String hexCidLac=Integer.toHexString(n.getCid());
          int l=hexCidLac.length();
          if (l > 8) {
            Log.w(TAG,"Unable to parse 2G Cell \"" + hexCidLac + "\"");
            continue;
          }
          if (l < 8) {
            for (int i=0; i < (8 - l); i++) {
              hexCidLac="0" + hexCidLac;
            }
          }
          int lac=Integer.valueOf(hexCidLac.substring(0,4),16);
          int cid=Integer.valueOf(hexCidLac.substring(4),16);
          mNeighbors.add(new NeighborCell(cid,lac,-1,n.getRssi()));
        }
 catch (        Exception e) {
          Log.e(TAG,"Error parsing 2G Cell \"" + n.getCid() + "\"",e);
        }
      }
    }
  }
  String operator=telephonyManager.getNetworkOperator();
  if (operator != null && !operator.equals("")) {
    try {
      String mcc=operator.substring(0,3);
      String mnc=operator.substring(3);
      int mccTmp=Integer.parseInt(mcc);
      int mncTmp=Integer.parseInt(mnc);
      mMcc=mccTmp;
      mMnc=mncTmp;
    }
 catch (    Exception e) {
      Log.e(TAG,"Error parsing MCC/MNC from operator \"" + operator + "\"",e);
    }
  }
  String homeOperator=telephonyManager.getSimOperator();
  if (homeOperator != null && !homeOperator.equals("")) {
    try {
      String mcc=homeOperator.substring(0,3);
      String mnc=homeOperator.substring(3);
      int mccTmp=Integer.parseInt(mcc);
      int mncTmp=Integer.parseInt(mnc);
      mHomeMcc=mccTmp;
      mHomeMnc=mncTmp;
    }
 catch (    Exception e) {
      Log.e(TAG,"Error parsing MCC/MNC from home operator \"" + homeOperator + "\"",e);
    }
  }
  String carrier=telephonyManager.getNetworkOperatorName();
  if (carrier != null && !carrier.equals("")) {
    mCarrier=carrier;
  }
  mSignalStrength=signalStrength;
  if (Log.isLoggable(TAG,Log.VERBOSE)) {
    String neighbors="[";
    for (    NeighborCell n : mNeighbors) {
      neighbors+=n.toString() + ",";
    }
    neighbors+="]";
    Log.d(TAG,"CellState(): " + mLac + ","+ mCid+ ","+ mMnc+ ","+ mMcc+ ","+ mHomeMcc+ ","+ mHomeMnc+ ","+ mCarrier+ ","+ mRadioType+ ","+ mSignalStrength+ ","+ neighbors);
  }
}
