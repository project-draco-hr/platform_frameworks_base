{
  String entry=mPasswordEntry.getText();
  if (entry.length() < 4) {
    mSecurityMessageDisplay.setMessage(R.string.kg_invalid_sim_pin_hint,true);
    resetPasswordText(true);
    mCallback.userActivity();
    return;
  }
  getSimUnlockProgressDialog().show();
  if (mCheckSimPinThread == null) {
    mCheckSimPinThread=new CheckSimPin(mPasswordEntry.getText()){
      void onSimCheckResponse(      final int result,      final int attemptsRemaining){
        post(new Runnable(){
          public void run(){
            if (mSimUnlockProgressDialog != null) {
              mSimUnlockProgressDialog.hide();
            }
            if (result == PhoneConstants.PIN_RESULT_SUCCESS) {
              KeyguardUpdateMonitor.getInstance(getContext()).reportSimUnlocked();
              mCallback.dismiss(true);
            }
 else {
              if (result == PhoneConstants.PIN_PASSWORD_INCORRECT) {
                if (attemptsRemaining <= 2) {
                  getSimRemainingAttemptsDialog(attemptsRemaining).show();
                }
 else {
                  mSecurityMessageDisplay.setMessage(getPinPasswordErrorMessage(attemptsRemaining),true);
                }
              }
 else {
                mSecurityMessageDisplay.setMessage(getContext().getString(R.string.kg_password_pin_failed),true);
              }
              if (DEBUG)               Log.d(LOG_TAG,"verifyPasswordAndUnlock " + " CheckSimPin.onSimCheckResponse: " + result + " attemptsRemaining="+ attemptsRemaining);
              resetPasswordText(true);
            }
            mCallback.userActivity();
            mCheckSimPinThread=null;
          }
        }
);
      }
    }
;
    mCheckSimPinThread.start();
  }
}
