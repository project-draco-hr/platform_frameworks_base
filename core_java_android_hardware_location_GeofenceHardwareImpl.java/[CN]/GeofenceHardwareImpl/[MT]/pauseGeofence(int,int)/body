{
  if (DEBUG)   Log.d(TAG,"Pause Geofence: GeofenceId: " + geofenceId);
  boolean result;
synchronized (mGeofences) {
    if (mGeofences.get(geofenceId) == null) {
      throw new IllegalArgumentException("Geofence " + geofenceId + " not registered.");
    }
  }
switch (monitoringType) {
case GeofenceHardware.MONITORING_TYPE_GPS_HARDWARE:
    if (mGpsService == null)     return false;
  try {
    result=mGpsService.pauseHardwareGeofence(geofenceId);
  }
 catch (  RemoteException e) {
    Log.e(TAG,"PauseGeofence: Remote Exception calling LocationManagerService");
    result=false;
  }
break;
case GeofenceHardware.MONITORING_TYPE_FUSED_HARDWARE:
if (mFusedService == null) {
return false;
}
try {
mFusedService.pauseMonitoringGeofence(geofenceId);
result=true;
}
 catch (RemoteException e) {
Log.e(TAG,"PauseGeofence: RemoteException calling LocationManagerService");
result=false;
}
break;
default :
result=false;
}
if (DEBUG) Log.d(TAG,"pauseGeofence: Result is: " + result);
return result;
}
