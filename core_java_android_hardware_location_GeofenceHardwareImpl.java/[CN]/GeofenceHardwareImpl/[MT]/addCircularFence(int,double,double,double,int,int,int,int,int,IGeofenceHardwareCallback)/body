{
  if (DEBUG) {
    Log.d(TAG,"addCircularFence: GeofenceId: " + geofenceId + "Latitude: "+ latitude+ "Longitude: "+ longitude+ "Radius: "+ radius+ "LastTransition: "+ lastTransition+ "MonitorTransition: "+ monitorTransitions+ "NotificationResponsiveness: "+ notificationResponsivenes+ "UnKnown Timer: "+ unknownTimer+ "MonitoringType: "+ monitoringType);
  }
  boolean result;
  Message m=mGeofenceHandler.obtainMessage(ADD_GEOFENCE,callback);
  m.arg1=geofenceId;
  mGeofenceHandler.sendMessage(m);
switch (monitoringType) {
case GeofenceHardware.MONITORING_TYPE_GPS_HARDWARE:
    if (mGpsService == null)     return false;
  try {
    result=mGpsService.addCircularHardwareGeofence(geofenceId,latitude,longitude,radius,lastTransition,monitorTransitions,notificationResponsivenes,unknownTimer);
  }
 catch (  RemoteException e) {
    Log.e(TAG,"AddGeofence: Remote Exception calling LocationManagerService");
    result=false;
  }
break;
default :
result=false;
}
if (!result) {
m=mGeofenceHandler.obtainMessage(REMOVE_GEOFENCE);
m.arg1=geofenceId;
mGeofenceHandler.sendMessage(m);
}
if (DEBUG) Log.d(TAG,"addCircularFence: Result is: " + result);
return result;
}
