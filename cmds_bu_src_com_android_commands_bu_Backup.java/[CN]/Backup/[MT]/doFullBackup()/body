{
  ArrayList<String> packages=new ArrayList<String>();
  boolean saveApks=false;
  boolean saveShared=false;
  boolean doEverything=false;
  String arg;
  while ((arg=nextArg()) != null) {
    if (arg.startsWith("-")) {
      if ("-apk".equals(arg)) {
        saveApks=true;
      }
 else       if ("-noapk".equals(arg)) {
        saveApks=false;
      }
 else       if ("-shared".equals(arg)) {
        saveShared=true;
      }
 else       if ("-noshared".equals(arg)) {
        saveShared=false;
      }
 else       if ("-all".equals(arg)) {
        doEverything=true;
      }
 else {
        System.err.println("WARNING: unknown backup flag " + arg);
        Log.w(TAG,"Unknown backup flag " + arg);
        continue;
      }
    }
 else {
      packages.add(arg);
    }
  }
  if (doEverything && packages.size() > 0) {
    System.err.println("WARNING: -all used with explicit backup package set");
    Log.w(TAG,"-all passed for backup along with specific package names");
  }
  if (!doEverything && !saveShared && packages.size() == 0) {
    System.err.println("ERROR: no packages supplied for backup and neither -shared nor -all given");
    Log.e(TAG,"no backup packages supplied and neither -shared nor -all given");
    return;
  }
  try {
    ParcelFileDescriptor fd=ParcelFileDescriptor.dup(FileDescriptor.out);
    String[] packArray=new String[packages.size()];
    mBackupManager.fullBackup(fd,saveApks,saveShared,doEverything,packages.toArray(packArray));
  }
 catch (  IOException e) {
    System.err.println("ERROR: cannot dup System.out");
  }
catch (  RemoteException e) {
    System.err.println("ERROR: unable to invoke backup manager service");
  }
}
