{
  if (move.packageName != null) {
    mNotificationManager.cancelAsUser(move.packageName,MOVE_ID,UserHandle.ALL);
    return;
  }
  final VolumeInfo privateVol=mContext.getPackageManager().getPrimaryStorageCurrentVolume();
  final String descrip=mStorageManager.getBestVolumeDescription(privateVol);
  final CharSequence title;
  final CharSequence text;
  if (status == PackageManager.MOVE_SUCCEEDED) {
    title=mContext.getString(R.string.ext_media_move_success_title);
    text=mContext.getString(R.string.ext_media_move_success_message,descrip);
  }
 else {
    title=mContext.getString(R.string.ext_media_move_failure_title);
    text=mContext.getString(R.string.ext_media_move_failure_message);
  }
  final PendingIntent intent;
  if (privateVol != null && privateVol.getDisk() != null) {
    intent=buildWizardReadyPendingIntent(privateVol.getDisk());
  }
 else {
    intent=buildVolumeSettingsPendingIntent(privateVol);
  }
  final Notification notif=new Notification.Builder(mContext).setSmallIcon(R.drawable.stat_notify_sdcard).setColor(mContext.getColor(R.color.system_notification_accent_color)).setContentTitle(title).setContentText(text).setContentIntent(intent).setStyle(new Notification.BigTextStyle().bigText(text)).setVisibility(Notification.VISIBILITY_PUBLIC).setLocalOnly(true).setCategory(Notification.CATEGORY_SYSTEM).setPriority(Notification.PRIORITY_LOW).setAutoCancel(true).build();
  mNotificationManager.notifyAsUser(move.packageName,MOVE_ID,notif,UserHandle.ALL);
}
