{
  final boolean enabled=condition == null || condition.state == Condition.STATE_TRUE;
  final View row;
  if (convertView == null) {
    row=mInflater.inflate(R.layout.zen_mode_condition,this,false);
    if (DEBUG)     Log.d(mTag,"Adding new condition view for: " + condition);
    mZenConditions.addView(row);
  }
 else {
    row=convertView;
  }
  final ConditionTag tag=row.getTag() != null ? (ConditionTag)row.getTag() : new ConditionTag();
  row.setTag(tag);
  if (tag.rb == null) {
    tag.rb=(RadioButton)row.findViewById(android.R.id.checkbox);
  }
  tag.condition=condition;
  tag.rb.setEnabled(enabled);
  if (mSessionExitCondition != null && sameConditionId(mSessionExitCondition,tag.condition)) {
    tag.rb.setChecked(true);
  }
  tag.rb.setOnCheckedChangeListener(new OnCheckedChangeListener(){
    @Override public void onCheckedChanged(    CompoundButton buttonView,    boolean isChecked){
      if (mExpanded && isChecked) {
        if (DEBUG)         Log.d(mTag,"onCheckedChanged " + tag.condition);
        final int N=mZenConditions.getChildCount();
        for (int i=0; i < N; i++) {
          ConditionTag childTag=getConditionTagAt(i);
          if (childTag == tag)           continue;
          childTag.rb.setChecked(false);
        }
        select(tag.condition);
        announceConditionSelection(tag);
      }
    }
  }
);
  if (tag.lines == null) {
    tag.lines=row.findViewById(android.R.id.content);
  }
  if (tag.line1 == null) {
    tag.line1=(TextView)row.findViewById(android.R.id.text1);
  }
  if (tag.line2 == null) {
    tag.line2=(TextView)row.findViewById(android.R.id.text2);
  }
  final String line1, line2;
  if (condition == null) {
    line1=mContext.getString(com.android.internal.R.string.zen_mode_forever);
    line2=null;
  }
 else {
    line1=!TextUtils.isEmpty(condition.line1) ? condition.line1 : condition.summary;
    line2=condition.line2;
  }
  tag.line1.setText(line1);
  if (TextUtils.isEmpty(line2)) {
    tag.line2.setVisibility(GONE);
  }
 else {
    tag.line2.setVisibility(VISIBLE);
    tag.line2.setText(line2);
  }
  tag.lines.setEnabled(enabled);
  tag.lines.setAlpha(enabled ? 1 : .4f);
  final ImageView button1=(ImageView)row.findViewById(android.R.id.button1);
  button1.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      onClickTimeButton(row,tag,false);
    }
  }
);
  final ImageView button2=(ImageView)row.findViewById(android.R.id.button2);
  button2.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      onClickTimeButton(row,tag,true);
    }
  }
);
  tag.lines.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      tag.rb.setChecked(true);
    }
  }
);
  final long time=ZenModeConfig.tryParseCountdownConditionId(getConditionId(tag.condition));
  if (time > 0) {
    if (mBucketIndex > -1) {
      button1.setEnabled(mBucketIndex > 0);
      button2.setEnabled(mBucketIndex < MINUTE_BUCKETS.length - 1);
    }
 else {
      final long span=time - System.currentTimeMillis();
      button1.setEnabled(span > MIN_BUCKET_MINUTES * MINUTES_MS);
      final Condition maxCondition=ZenModeConfig.toTimeCondition(mContext,MAX_BUCKET_MINUTES,ActivityManager.getCurrentUser());
      button2.setEnabled(!Objects.equals(condition.summary,maxCondition.summary));
    }
    button1.setAlpha(button1.isEnabled() ? 1f : .5f);
    button2.setAlpha(button2.isEnabled() ? 1f : .5f);
  }
 else {
    button1.setVisibility(View.GONE);
    button2.setVisibility(View.GONE);
  }
  if (convertView == null) {
    Interaction.register(tag.rb,mInteractionCallback);
    Interaction.register(tag.lines,mInteractionCallback);
    Interaction.register(button1,mInteractionCallback);
    Interaction.register(button2,mInteractionCallback);
  }
}
