{
  final boolean enabled=condition == null || condition.state == Condition.STATE_TRUE;
  final View row;
  if (convertView == null) {
    row=mInflater.inflate(R.layout.zen_mode_condition,this,false);
    if (DEBUG)     Log.d(mTag,"Adding new condition view for: " + condition);
    mConditions.addView(row);
  }
 else {
    row=convertView;
  }
  final ConditionTag tag=row.getTag() != null ? (ConditionTag)row.getTag() : new ConditionTag();
  row.setTag(tag);
  if (tag.rb == null) {
    tag.rb=(RadioButton)row.findViewById(android.R.id.checkbox);
  }
  tag.conditionId=condition != null ? condition.id : null;
  tag.rb.setEnabled(enabled);
  tag.rb.setOnCheckedChangeListener(new OnCheckedChangeListener(){
    @Override public void onCheckedChanged(    CompoundButton buttonView,    boolean isChecked){
      if (mShowing && isChecked) {
        if (DEBUG)         Log.d(mTag,"onCheckedChanged " + tag.conditionId);
        final int N=mConditions.getChildCount();
        for (int i=0; i < N; i++) {
          ConditionTag childTag=getConditionTagAt(i);
          if (childTag == tag)           continue;
          childTag.rb.setChecked(false);
        }
        select(tag.conditionId);
        fireInteraction();
      }
    }
  }
);
  final TextView title=(TextView)row.findViewById(android.R.id.title);
  if (condition == null) {
    title.setText(R.string.zen_mode_forever);
  }
 else {
    title.setText(condition.summary);
  }
  title.setEnabled(enabled);
  title.setAlpha(enabled ? 1 : .5f);
  final ImageView button1=(ImageView)row.findViewById(android.R.id.button1);
  button1.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      onClickTimeButton(row,tag,false);
    }
  }
);
  final ImageView button2=(ImageView)row.findViewById(android.R.id.button2);
  button2.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      onClickTimeButton(row,tag,true);
    }
  }
);
  title.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      tag.rb.setChecked(true);
      fireInteraction();
    }
  }
);
  final long time=ZenModeConfig.tryParseCountdownConditionId(tag.conditionId);
  if (time > 0) {
    if (mBucketIndex > -1) {
      button1.setEnabled(mBucketIndex > 0);
      button2.setEnabled(mBucketIndex < MINUTE_BUCKETS.length - 1);
    }
 else {
      final long span=time - System.currentTimeMillis();
      button1.setEnabled(span > MIN_BUCKET_MINUTES * MINUTES_MS);
      final Condition maxCondition=newTimeCondition(MAX_BUCKET_MINUTES);
      button2.setEnabled(!Objects.equals(condition.summary,maxCondition.summary));
    }
    button1.setAlpha(button1.isEnabled() ? 1f : .5f);
    button2.setAlpha(button2.isEnabled() ? 1f : .5f);
  }
 else {
    button1.setVisibility(View.GONE);
    button2.setVisibility(View.GONE);
  }
  if (mExitConditionId != null && mExitConditionId.equals(tag.conditionId)) {
    if (DEBUG)     Log.d(mTag,"Auto-selecting row with mExitConditionId=" + mExitConditionId);
    tag.rb.setChecked(true);
  }
}
