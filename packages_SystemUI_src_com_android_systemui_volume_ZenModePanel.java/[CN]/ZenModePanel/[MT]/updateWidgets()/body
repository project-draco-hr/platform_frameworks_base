{
  final int zen=getSelectedZen(Global.ZEN_MODE_OFF);
  final boolean zenOff=zen == Global.ZEN_MODE_OFF;
  final boolean zenImportant=zen == Global.ZEN_MODE_IMPORTANT_INTERRUPTIONS;
  final boolean zenNone=zen == Global.ZEN_MODE_NO_INTERRUPTIONS;
  final boolean foreverSelected=mExitConditionId == null;
  final boolean hasNextAlarm=mNextAlarm != 0;
  mZenSubhead.setVisibility(!zenOff && (mExpanded || !foreverSelected) ? VISIBLE : GONE);
  mZenSubheadExpanded.setVisibility(mExpanded ? VISIBLE : GONE);
  mZenSubheadCollapsed.setVisibility(!mExpanded ? VISIBLE : GONE);
  mMoreSettings.setVisibility(zenImportant && mExpanded ? VISIBLE : GONE);
  mZenConditions.setVisibility(!zenOff && mExpanded ? VISIBLE : GONE);
  mAlarmWarning.setVisibility(zenNone && mExpanded && hasNextAlarm ? VISIBLE : GONE);
  if (zenNone && mExpanded && hasNextAlarm) {
    final long exitTime=ZenModeConfig.tryParseCountdownConditionId(mExitConditionId);
    final long now=System.currentTimeMillis();
    final boolean alarmToday=time(mNextAlarm).yearDay == time(now).yearDay;
    final String skeleton=(alarmToday ? "" : "E") + (DateFormat.is24HourFormat(mContext) ? "Hm" : "hma");
    final String pattern=DateFormat.getBestDateTimePattern(Locale.getDefault(),skeleton);
    final String alarm=new SimpleDateFormat(pattern).format(new Date(mNextAlarm));
    final boolean isWarning=exitTime > 0 && mNextAlarm > now && mNextAlarm < exitTime;
    if (isWarning) {
      mAlarmWarning.setText(mContext.getString(R.string.zen_alarm_warning,alarm));
      mAlarmWarning.setTextColor(mAccentColor);
    }
 else {
      mAlarmWarning.setText(mContext.getString(alarmToday ? R.string.zen_alarm_information_time : R.string.zen_alarm_information_day_time,alarm));
      mAlarmWarning.setTextColor(mTextColor);
    }
  }
  if (zenNone) {
    mZenSubheadExpanded.setText(R.string.zen_no_interruptions_with_warning);
    mZenSubheadCollapsed.setText(mExitConditionText);
  }
 else   if (zenImportant) {
    mZenSubheadExpanded.setText(R.string.zen_important_interruptions);
    mZenSubheadCollapsed.setText(mExitConditionText);
  }
}
