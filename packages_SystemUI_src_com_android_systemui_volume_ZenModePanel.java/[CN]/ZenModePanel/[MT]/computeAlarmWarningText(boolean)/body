{
  if (!zenNone) {
    return null;
  }
  final long now=System.currentTimeMillis();
  final long nextAlarm=mController.getNextAlarm();
  if (nextAlarm < now) {
    return null;
  }
  int warningRes=0;
  if (mSessionExitCondition == null || isForever(mSessionExitCondition)) {
    warningRes=R.string.zen_alarm_warning_indef;
  }
 else {
    final long time=ZenModeConfig.tryParseCountdownConditionId(mSessionExitCondition.id);
    if (time > now && nextAlarm < time) {
      warningRes=R.string.zen_alarm_warning;
    }
  }
  if (warningRes == 0) {
    return null;
  }
  final boolean soon=(nextAlarm - now) < 24 * 60 * 60* 1000;
  final boolean is24=DateFormat.is24HourFormat(mContext,ActivityManager.getCurrentUser());
  final String skeleton=soon ? (is24 ? "Hm" : "hma") : (is24 ? "EEEHm" : "EEEhma");
  final String pattern=DateFormat.getBestDateTimePattern(Locale.getDefault(),skeleton);
  final CharSequence formattedTime=DateFormat.format(pattern,nextAlarm);
  final int templateRes=soon ? R.string.alarm_template : R.string.alarm_template_far;
  final String template=getResources().getString(templateRes,formattedTime);
  return getResources().getString(warningRes,template);
}
