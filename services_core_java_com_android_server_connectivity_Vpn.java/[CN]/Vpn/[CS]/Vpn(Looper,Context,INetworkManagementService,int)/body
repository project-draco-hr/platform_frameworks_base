{
  mContext=context;
  mNetd=netService;
  mUserHandle=userHandle;
  mLooper=looper;
  mPackage=VpnConfig.LEGACY_VPN;
  mOwnerUID=getAppUid(mPackage,mUserHandle);
  try {
    netService.registerObserver(mObserver);
  }
 catch (  RemoteException e) {
    Log.wtf(TAG,"Problem registering observer",e);
  }
  if (userHandle == UserHandle.USER_OWNER) {
    mUserIntentReceiver=new BroadcastReceiver(){
      @Override public void onReceive(      Context context,      Intent intent){
        final String action=intent.getAction();
        final int userHandle=intent.getIntExtra(Intent.EXTRA_USER_HANDLE,UserHandle.USER_NULL);
        if (userHandle == UserHandle.USER_NULL)         return;
        if (Intent.ACTION_USER_ADDED.equals(action)) {
          onUserAdded(userHandle);
        }
 else         if (Intent.ACTION_USER_REMOVED.equals(action)) {
          onUserRemoved(userHandle);
        }
      }
    }
;
    IntentFilter intentFilter=new IntentFilter();
    intentFilter.addAction(Intent.ACTION_USER_ADDED);
    intentFilter.addAction(Intent.ACTION_USER_REMOVED);
    mContext.registerReceiverAsUser(mUserIntentReceiver,UserHandle.ALL,intentFilter,null,null);
  }
  mNetworkInfo=new NetworkInfo(ConnectivityManager.TYPE_VPN,0,NETWORKTYPE,"");
  mNetworkCapabilities=new NetworkCapabilities();
  mNetworkCapabilities.addTransportType(NetworkCapabilities.TRANSPORT_VPN);
  mNetworkCapabilities.removeCapability(NetworkCapabilities.NET_CAPABILITY_NOT_VPN);
}
