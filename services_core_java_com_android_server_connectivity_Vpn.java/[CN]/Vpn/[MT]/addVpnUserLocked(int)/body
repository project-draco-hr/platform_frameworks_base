{
  if (!isRunningLocked()) {
    throw new IllegalStateException("VPN is not active");
  }
  mVpnUsers.add(UidRange.createForUser(user));
  if (!mPackage.equals(VpnConfig.LEGACY_VPN)) {
    PackageManager pm=mContext.getPackageManager();
    ApplicationInfo app=null;
    final long token=Binder.clearCallingIdentity();
    try {
      app=AppGlobals.getPackageManager().getApplicationInfo(mPackage,0,mUserId);
    }
 catch (    RemoteException e) {
      throw new IllegalStateException("Invalid application");
    }
 finally {
      Binder.restoreCallingIdentity(token);
    }
    String label=app.loadLabel(pm).toString();
    Drawable icon=app.loadIcon(pm);
    Bitmap bitmap=null;
    if (icon.getIntrinsicWidth() > 0 && icon.getIntrinsicHeight() > 0) {
      int width=mContext.getResources().getDimensionPixelSize(android.R.dimen.notification_large_icon_width);
      int height=mContext.getResources().getDimensionPixelSize(android.R.dimen.notification_large_icon_height);
      icon.setBounds(0,0,width,height);
      bitmap=Bitmap.createBitmap(width,height,Bitmap.Config.ARGB_8888);
      Canvas c=new Canvas(bitmap);
      icon.draw(c);
      c.setBitmap(null);
    }
    showNotification(label,bitmap,user);
  }
 else {
    showNotification(null,null,user);
  }
}
