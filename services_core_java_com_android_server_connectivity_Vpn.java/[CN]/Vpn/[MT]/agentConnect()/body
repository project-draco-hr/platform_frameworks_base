{
  LinkProperties lp=makeLinkProperties();
  if (lp.hasIPv4DefaultRoute() || lp.hasIPv6DefaultRoute()) {
    mNetworkCapabilities.addCapability(NetworkCapabilities.NET_CAPABILITY_INTERNET);
  }
 else {
    mNetworkCapabilities.removeCapability(NetworkCapabilities.NET_CAPABILITY_INTERNET);
  }
  mNetworkInfo.setDetailedState(DetailedState.CONNECTING,null,null);
  NetworkMisc networkMisc=new NetworkMisc();
  networkMisc.allowBypass=mConfig.allowBypass;
  long token=Binder.clearCallingIdentity();
  try {
    mNetworkAgent=new NetworkAgent(mLooper,mContext,NETWORKTYPE,mNetworkInfo,mNetworkCapabilities,lp,0,networkMisc){
      @Override public void unwanted(){
      }
    }
;
  }
  finally {
    Binder.restoreCallingIdentity(token);
  }
  mVpnUsers=createUserAndRestrictedProfilesRanges(mUserHandle,mConfig.allowedApplications,mConfig.disallowedApplications);
  mNetworkAgent.addUidRanges(mVpnUsers.toArray(new UidRange[mVpnUsers.size()]));
  mNetworkInfo.setIsAvailable(true);
  updateState(DetailedState.CONNECTED,"agentConnect");
}
