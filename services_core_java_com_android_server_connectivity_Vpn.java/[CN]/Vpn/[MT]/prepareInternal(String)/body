{
  long token=Binder.clearCallingIdentity();
  try {
    if (mInterface != null) {
      mStatusIntent=null;
      agentDisconnect();
      jniReset(mInterface);
      mInterface=null;
      mVpnUsers=null;
    }
    if (mConnection != null) {
      try {
        mConnection.mService.transact(IBinder.LAST_CALL_TRANSACTION,Parcel.obtain(),null,IBinder.FLAG_ONEWAY);
      }
 catch (      Exception e) {
      }
      mContext.unbindService(mConnection);
      mConnection=null;
    }
 else     if (mLegacyVpnRunner != null) {
      mLegacyVpnRunner.exit();
      mLegacyVpnRunner=null;
    }
    try {
      mNetd.denyProtect(mOwnerUID);
    }
 catch (    Exception e) {
      Log.wtf(TAG,"Failed to disallow UID " + mOwnerUID + " to call protect() "+ e);
    }
    Log.i(TAG,"Switched from " + mPackage + " to "+ newPackage);
    mPackage=newPackage;
    mOwnerUID=getAppUid(newPackage,mUserHandle);
    try {
      mNetd.allowProtect(mOwnerUID);
    }
 catch (    Exception e) {
      Log.wtf(TAG,"Failed to allow UID " + mOwnerUID + " to call protect() "+ e);
    }
    mConfig=null;
    updateState(DetailedState.IDLE,"prepare");
  }
  finally {
    Binder.restoreCallingIdentity(token);
  }
}
