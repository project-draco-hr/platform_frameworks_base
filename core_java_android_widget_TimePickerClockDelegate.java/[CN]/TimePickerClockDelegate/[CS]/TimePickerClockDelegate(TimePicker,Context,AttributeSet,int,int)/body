{
  super(delegator,context);
  final TypedArray a=mContext.obtainStyledAttributes(attrs,R.styleable.TimePicker,defStyleAttr,defStyleRes);
  final LayoutInflater inflater=(LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
  final Resources res=mContext.getResources();
  mSelectHours=res.getString(R.string.select_hours);
  mSelectMinutes=res.getString(R.string.select_minutes);
  String[] amPmStrings=TimePickerSpinnerDelegate.getAmPmStrings(context);
  mAmText=amPmStrings[0];
  mPmText=amPmStrings[1];
  final int layoutResourceId=a.getResourceId(R.styleable.TimePicker_internalLayout,R.layout.time_picker_material);
  final View mainView=inflater.inflate(layoutResourceId,delegator);
  mHeaderView=mainView.findViewById(R.id.time_header);
  mHeaderView.setBackground(a.getDrawable(R.styleable.TimePicker_headerBackground));
  mHourView=(TextView)mainView.findViewById(R.id.hours);
  mHourView.setOnClickListener(mClickListener);
  mHourView.setAccessibilityDelegate(new ClickActionDelegate(context,R.string.select_hours));
  mSeparatorView=(TextView)mainView.findViewById(R.id.separator);
  mMinuteView=(TextView)mainView.findViewById(R.id.minutes);
  mMinuteView.setOnClickListener(mClickListener);
  mMinuteView.setAccessibilityDelegate(new ClickActionDelegate(context,R.string.select_minutes));
  final int headerTimeTextAppearance=a.getResourceId(R.styleable.TimePicker_headerTimeTextAppearance,0);
  if (headerTimeTextAppearance != 0) {
    mHourView.setTextAppearance(context,headerTimeTextAppearance);
    mSeparatorView.setTextAppearance(context,headerTimeTextAppearance);
    mMinuteView.setTextAppearance(context,headerTimeTextAppearance);
  }
  mHourView.setMinWidth(computeStableWidth(mHourView,24));
  mMinuteView.setMinWidth(computeStableWidth(mMinuteView,60));
  mAmPmLayout=mainView.findViewById(R.id.ampm_layout);
  mAmLabel=(CheckedTextView)mAmPmLayout.findViewById(R.id.am_label);
  mAmLabel.setText(amPmStrings[0]);
  mAmLabel.setOnClickListener(mClickListener);
  mPmLabel=(CheckedTextView)mAmPmLayout.findViewById(R.id.pm_label);
  mPmLabel.setText(amPmStrings[1]);
  mPmLabel.setOnClickListener(mClickListener);
  final int headerAmPmTextAppearance=a.getResourceId(R.styleable.TimePicker_headerAmPmTextAppearance,0);
  if (headerAmPmTextAppearance != 0) {
    mAmLabel.setTextAppearance(context,headerAmPmTextAppearance);
    mPmLabel.setTextAppearance(context,headerAmPmTextAppearance);
  }
  a.recycle();
  final TypedValue outValue=new TypedValue();
  context.getTheme().resolveAttribute(android.R.attr.disabledAlpha,outValue,true);
  mDisabledAlpha=outValue.getFloat();
  mRadialTimePickerView=(RadialTimePickerView)mainView.findViewById(R.id.radial_picker);
  setupListeners();
  mAllowAutoAdvance=true;
  mDoublePlaceholderText=res.getString(R.string.time_placeholder);
  mDeletedKeyFormat=res.getString(R.string.deleted_key);
  mPlaceholderText=mDoublePlaceholderText.charAt(0);
  mAmKeyCode=mPmKeyCode=-1;
  generateLegalTimesTree();
  final Calendar calendar=Calendar.getInstance(mCurrentLocale);
  final int currentHour=calendar.get(Calendar.HOUR_OF_DAY);
  final int currentMinute=calendar.get(Calendar.MINUTE);
  initialize(currentHour,currentMinute,false,HOUR_INDEX);
}
