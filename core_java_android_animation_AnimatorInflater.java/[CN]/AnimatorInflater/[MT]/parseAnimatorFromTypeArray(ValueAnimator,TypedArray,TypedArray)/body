{
  long duration=arrayAnimator.getInt(R.styleable.Animator_duration,300);
  long startDelay=arrayAnimator.getInt(R.styleable.Animator_startOffset,0);
  int valueType=arrayAnimator.getInt(R.styleable.Animator_valueType,VALUE_TYPE_FLOAT);
  if (anim == null) {
    anim=new ValueAnimator();
  }
  TypeEvaluator evaluator=null;
  int valueFromIndex=R.styleable.Animator_valueFrom;
  int valueToIndex=R.styleable.Animator_valueTo;
  boolean getFloats=(valueType == VALUE_TYPE_FLOAT);
  TypedValue tvFrom=arrayAnimator.peekValue(valueFromIndex);
  boolean hasFrom=(tvFrom != null);
  int fromType=hasFrom ? tvFrom.type : 0;
  TypedValue tvTo=arrayAnimator.peekValue(valueToIndex);
  boolean hasTo=(tvTo != null);
  int toType=hasTo ? tvTo.type : 0;
  if ((hasFrom && (fromType >= TypedValue.TYPE_FIRST_COLOR_INT) && (fromType <= TypedValue.TYPE_LAST_COLOR_INT)) || (hasTo && (toType >= TypedValue.TYPE_FIRST_COLOR_INT) && (toType <= TypedValue.TYPE_LAST_COLOR_INT))) {
    getFloats=false;
    evaluator=ArgbEvaluator.getInstance();
  }
  if (getFloats) {
    float valueFrom;
    float valueTo;
    if (hasFrom) {
      if (fromType == TypedValue.TYPE_DIMENSION) {
        valueFrom=arrayAnimator.getDimension(valueFromIndex,0f);
      }
 else {
        valueFrom=arrayAnimator.getFloat(valueFromIndex,0f);
      }
      if (hasTo) {
        if (toType == TypedValue.TYPE_DIMENSION) {
          valueTo=arrayAnimator.getDimension(valueToIndex,0f);
        }
 else {
          valueTo=arrayAnimator.getFloat(valueToIndex,0f);
        }
        anim.setFloatValues(valueFrom,valueTo);
      }
 else {
        anim.setFloatValues(valueFrom);
      }
    }
 else {
      if (toType == TypedValue.TYPE_DIMENSION) {
        valueTo=arrayAnimator.getDimension(valueToIndex,0f);
      }
 else {
        valueTo=arrayAnimator.getFloat(valueToIndex,0f);
      }
      anim.setFloatValues(valueTo);
    }
  }
 else {
    int valueFrom;
    int valueTo;
    if (hasFrom) {
      if (fromType == TypedValue.TYPE_DIMENSION) {
        valueFrom=(int)arrayAnimator.getDimension(valueFromIndex,0f);
      }
 else       if ((fromType >= TypedValue.TYPE_FIRST_COLOR_INT) && (fromType <= TypedValue.TYPE_LAST_COLOR_INT)) {
        valueFrom=arrayAnimator.getColor(valueFromIndex,0);
      }
 else {
        valueFrom=arrayAnimator.getInt(valueFromIndex,0);
      }
      if (hasTo) {
        if (toType == TypedValue.TYPE_DIMENSION) {
          valueTo=(int)arrayAnimator.getDimension(valueToIndex,0f);
        }
 else         if ((toType >= TypedValue.TYPE_FIRST_COLOR_INT) && (toType <= TypedValue.TYPE_LAST_COLOR_INT)) {
          valueTo=arrayAnimator.getColor(valueToIndex,0);
        }
 else {
          valueTo=arrayAnimator.getInt(valueToIndex,0);
        }
        anim.setIntValues(valueFrom,valueTo);
      }
 else {
        anim.setIntValues(valueFrom);
      }
    }
 else {
      if (hasTo) {
        if (toType == TypedValue.TYPE_DIMENSION) {
          valueTo=(int)arrayAnimator.getDimension(valueToIndex,0f);
        }
 else         if ((toType >= TypedValue.TYPE_FIRST_COLOR_INT) && (toType <= TypedValue.TYPE_LAST_COLOR_INT)) {
          valueTo=arrayAnimator.getColor(valueToIndex,0);
        }
 else {
          valueTo=arrayAnimator.getInt(valueToIndex,0);
        }
        anim.setIntValues(valueTo);
      }
    }
  }
  anim.setDuration(duration);
  anim.setStartDelay(startDelay);
  if (arrayAnimator.hasValue(R.styleable.Animator_repeatCount)) {
    anim.setRepeatCount(arrayAnimator.getInt(R.styleable.Animator_repeatCount,0));
  }
  if (arrayAnimator.hasValue(R.styleable.Animator_repeatMode)) {
    anim.setRepeatMode(arrayAnimator.getInt(R.styleable.Animator_repeatMode,ValueAnimator.RESTART));
  }
  if (evaluator != null) {
    anim.setEvaluator(evaluator);
  }
  if (arrayObjectAnimator != null) {
    ObjectAnimator oa=(ObjectAnimator)anim;
    String pathData=arrayObjectAnimator.getString(R.styleable.PropertyAnimator_pathData);
    if (pathData != null) {
      String propertyXName=arrayObjectAnimator.getString(R.styleable.PropertyAnimator_propertyXName);
      String propertyYName=arrayObjectAnimator.getString(R.styleable.PropertyAnimator_propertyYName);
      if (propertyXName == null && propertyYName == null) {
        throw new IllegalArgumentException("propertyXName or propertyYName" + " is needed for PathData in Object Animator");
      }
 else {
        Path path=PathParser.createPathFromPathData(pathData);
        Keyframe[][] keyframes=PropertyValuesHolder.createKeyframes(path,!getFloats);
        PropertyValuesHolder x=null;
        PropertyValuesHolder y=null;
        if (propertyXName != null) {
          x=PropertyValuesHolder.ofKeyframe(propertyXName,keyframes[0]);
        }
        if (propertyYName != null) {
          y=PropertyValuesHolder.ofKeyframe(propertyYName,keyframes[1]);
        }
        if (x == null) {
          oa.setValues(y);
        }
 else         if (y == null) {
          oa.setValues(x);
        }
 else {
          oa.setValues(x,y);
        }
      }
    }
 else {
      String propertyName=arrayObjectAnimator.getString(R.styleable.PropertyAnimator_propertyName);
      oa.setPropertyName(propertyName);
    }
  }
}
