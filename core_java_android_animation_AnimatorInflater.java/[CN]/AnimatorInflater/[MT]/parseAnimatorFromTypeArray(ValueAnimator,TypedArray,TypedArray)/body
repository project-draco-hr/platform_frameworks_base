{
  long duration=arrayAnimator.getInt(R.styleable.Animator_duration,300);
  long startDelay=arrayAnimator.getInt(R.styleable.Animator_startOffset,0);
  int valueType=arrayAnimator.getInt(R.styleable.Animator_valueType,VALUE_TYPE_FLOAT);
  if (anim == null) {
    anim=new ValueAnimator();
  }
  TypeEvaluator evaluator=null;
  boolean getFloats=(valueType == VALUE_TYPE_FLOAT);
  TypedValue tvFrom=arrayAnimator.peekValue(R.styleable.Animator_valueFrom);
  boolean hasFrom=(tvFrom != null);
  int fromType=hasFrom ? tvFrom.type : 0;
  TypedValue tvTo=arrayAnimator.peekValue(R.styleable.Animator_valueTo);
  boolean hasTo=(tvTo != null);
  int toType=hasTo ? tvTo.type : 0;
  if (valueType == VALUE_TYPE_PATH) {
    evaluator=setupAnimatorForPath(anim,arrayAnimator);
  }
 else {
    if ((hasFrom && (fromType >= TypedValue.TYPE_FIRST_COLOR_INT) && (fromType <= TypedValue.TYPE_LAST_COLOR_INT)) || (hasTo && (toType >= TypedValue.TYPE_FIRST_COLOR_INT) && (toType <= TypedValue.TYPE_LAST_COLOR_INT))) {
      getFloats=false;
      evaluator=ArgbEvaluator.getInstance();
    }
    setupValues(anim,arrayAnimator,getFloats,hasFrom,fromType,hasTo,toType);
  }
  anim.setDuration(duration);
  anim.setStartDelay(startDelay);
  if (arrayAnimator.hasValue(R.styleable.Animator_repeatCount)) {
    anim.setRepeatCount(arrayAnimator.getInt(R.styleable.Animator_repeatCount,0));
  }
  if (arrayAnimator.hasValue(R.styleable.Animator_repeatMode)) {
    anim.setRepeatMode(arrayAnimator.getInt(R.styleable.Animator_repeatMode,ValueAnimator.RESTART));
  }
  if (evaluator != null) {
    anim.setEvaluator(evaluator);
  }
  if (arrayObjectAnimator != null) {
    setupObjectAnimator(anim,arrayObjectAnimator,getFloats);
  }
}
