{
  TypedArray a=context.obtainStyledAttributes(attrs,com.android.internal.R.styleable.Animator);
  long duration=a.getInt(com.android.internal.R.styleable.Animator_duration,0);
  long startDelay=a.getInt(com.android.internal.R.styleable.Animator_startOffset,0);
  int valueType=a.getInt(com.android.internal.R.styleable.Animator_valueType,VALUE_TYPE_FLOAT);
  if (anim == null) {
    anim=new ValueAnimator();
  }
  TypeEvaluator evaluator=null;
  boolean hasFrom=a.hasValue(com.android.internal.R.styleable.Animator_valueFrom);
  boolean hasTo=a.hasValue(com.android.internal.R.styleable.Animator_valueTo);
switch (valueType) {
case VALUE_TYPE_FLOAT:
{
      float valueFrom;
      float valueTo;
      if (hasFrom) {
        valueFrom=a.getFloat(com.android.internal.R.styleable.Animator_valueFrom,0f);
        if (hasTo) {
          valueTo=a.getFloat(com.android.internal.R.styleable.Animator_valueTo,0f);
          anim.setFloatValues(valueFrom,valueTo);
        }
 else {
          anim.setFloatValues(valueFrom);
        }
      }
 else {
        valueTo=a.getFloat(com.android.internal.R.styleable.Animator_valueTo,0f);
        anim.setFloatValues(valueTo);
      }
    }
  break;
case VALUE_TYPE_COLOR:
evaluator=new RGBEvaluator();
anim.setEvaluator(evaluator);
case VALUE_TYPE_INT:
{
int valueFrom;
int valueTo;
if (hasFrom) {
valueFrom=a.getInteger(com.android.internal.R.styleable.Animator_valueFrom,0);
if (hasTo) {
  valueTo=a.getInteger(com.android.internal.R.styleable.Animator_valueTo,0);
  anim.setIntValues(valueFrom,valueTo);
}
 else {
  anim.setIntValues(valueFrom);
}
}
 else {
valueTo=a.getInteger(com.android.internal.R.styleable.Animator_valueTo,0);
anim.setIntValues(valueTo);
}
}
break;
case VALUE_TYPE_LONG:
{
int valueFrom;
int valueTo;
if (hasFrom) {
valueFrom=a.getInteger(com.android.internal.R.styleable.Animator_valueFrom,0);
if (hasTo) {
valueTo=a.getInteger(com.android.internal.R.styleable.Animator_valueTo,0);
anim.setLongValues(valueFrom,valueTo);
}
 else {
anim.setLongValues(valueFrom);
}
}
 else {
valueTo=a.getInteger(com.android.internal.R.styleable.Animator_valueTo,0);
anim.setLongValues(valueTo);
}
}
break;
case VALUE_TYPE_DOUBLE:
{
double valueFrom;
double valueTo;
if (hasFrom) {
valueFrom=a.getFloat(com.android.internal.R.styleable.Animator_valueFrom,0f);
if (hasTo) {
valueTo=a.getFloat(com.android.internal.R.styleable.Animator_valueTo,0f);
anim.setDoubleValues(valueFrom,valueTo);
}
 else {
anim.setDoubleValues(valueFrom);
}
}
 else {
valueTo=a.getFloat(com.android.internal.R.styleable.Animator_valueTo,0f);
anim.setDoubleValues(valueTo);
}
}
break;
case VALUE_TYPE_CUSTOM:
{
float valueFrom;
float valueTo;
if (hasFrom) {
valueFrom=a.getFloat(com.android.internal.R.styleable.Animator_valueFrom,0f);
if (hasTo) {
valueTo=a.getFloat(com.android.internal.R.styleable.Animator_valueTo,0f);
anim.setFloatValues(valueFrom,valueTo);
}
 else {
anim.setFloatValues(valueFrom);
}
}
 else {
valueTo=a.getFloat(com.android.internal.R.styleable.Animator_valueTo,0f);
anim.setFloatValues(valueTo);
}
}
break;
}
anim.setDuration(duration);
anim.setStartDelay(startDelay);
if (a.hasValue(com.android.internal.R.styleable.Animator_repeatCount)) {
anim.setRepeatCount(a.getInt(com.android.internal.R.styleable.Animator_repeatCount,0));
}
if (a.hasValue(com.android.internal.R.styleable.Animator_repeatMode)) {
anim.setRepeatMode(a.getInt(com.android.internal.R.styleable.Animator_repeatMode,ValueAnimator.RESTART));
}
if (evaluator != null) {
anim.setEvaluator(evaluator);
}
final int resID=a.getResourceId(com.android.internal.R.styleable.Animator_interpolator,0);
if (resID > 0) {
anim.setInterpolator(AnimationUtils.loadInterpolator(context,resID));
}
a.recycle();
return anim;
}
