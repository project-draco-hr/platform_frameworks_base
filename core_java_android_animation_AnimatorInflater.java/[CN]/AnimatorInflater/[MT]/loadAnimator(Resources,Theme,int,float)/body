{
  final ConfigurationBoundResourceCache<Animator> animatorCache=resources.getAnimatorCache();
  Animator animator=animatorCache.get(id,theme);
  if (animator != null) {
    if (DBG_ANIMATOR_INFLATER) {
      Log.d(TAG,"loaded animator from cache, " + resources.getResourceName(id));
    }
    return animator;
  }
 else   if (DBG_ANIMATOR_INFLATER) {
    Log.d(TAG,"cache miss for animator " + resources.getResourceName(id));
  }
  XmlResourceParser parser=null;
  try {
    parser=resources.getAnimation(id);
    animator=createAnimatorFromXml(resources,theme,parser,pathErrorScale);
    if (animator != null) {
      animator.appendChangingConfigurations(getChangingConfigs(resources,id));
      final ConstantState<Animator> constantState=animator.createConstantState();
      if (constantState != null) {
        if (DBG_ANIMATOR_INFLATER) {
          Log.d(TAG,"caching animator for res " + resources.getResourceName(id));
        }
        animatorCache.put(id,theme,constantState);
        animator=constantState.newInstance(resources,theme);
      }
    }
    return animator;
  }
 catch (  XmlPullParserException ex) {
    Resources.NotFoundException rnf=new Resources.NotFoundException("Can't load animation resource ID #0x" + Integer.toHexString(id));
    rnf.initCause(ex);
    throw rnf;
  }
catch (  IOException ex) {
    Resources.NotFoundException rnf=new Resources.NotFoundException("Can't load animation resource ID #0x" + Integer.toHexString(id));
    rnf.initCause(ex);
    throw rnf;
  }
 finally {
    if (parser != null)     parser.close();
  }
}
