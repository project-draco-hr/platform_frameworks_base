{
  final boolean reportRegistrationLeaks=StrictMode.vmRegistrationLeaksEnabled();
synchronized (mReceivers) {
    ArrayMap<BroadcastReceiver,LoadedApk.ReceiverDispatcher> rmap=mReceivers.remove(context);
    if (rmap != null) {
      for (int i=0; i < rmap.size(); i++) {
        LoadedApk.ReceiverDispatcher rd=rmap.valueAt(i);
        IntentReceiverLeaked leak=new IntentReceiverLeaked(what + " " + who+ " has leaked IntentReceiver "+ rd.getIntentReceiver()+ " that was "+ "originally registered here. Are you missing a "+ "call to unregisterReceiver()?");
        leak.setStackTrace(rd.getLocation().getStackTrace());
        Slog.e(ActivityThread.TAG,leak.getMessage(),leak);
        if (reportRegistrationLeaks) {
          StrictMode.onIntentReceiverLeaked(leak);
        }
        try {
          ActivityManagerNative.getDefault().unregisterReceiver(rd.getIIntentReceiver());
        }
 catch (        RemoteException e) {
          throw e.rethrowFromSystemServer();
        }
      }
    }
    mUnregisteredReceivers.remove(context);
  }
synchronized (mServices) {
    ArrayMap<ServiceConnection,LoadedApk.ServiceDispatcher> smap=mServices.remove(context);
    if (smap != null) {
      for (int i=0; i < smap.size(); i++) {
        LoadedApk.ServiceDispatcher sd=smap.valueAt(i);
        ServiceConnectionLeaked leak=new ServiceConnectionLeaked(what + " " + who+ " has leaked ServiceConnection "+ sd.getServiceConnection()+ " that was originally bound here");
        leak.setStackTrace(sd.getLocation().getStackTrace());
        Slog.e(ActivityThread.TAG,leak.getMessage(),leak);
        if (reportRegistrationLeaks) {
          StrictMode.onServiceConnectionLeaked(leak);
        }
        try {
          ActivityManagerNative.getDefault().unbindService(sd.getIServiceConnection());
        }
 catch (        RemoteException e) {
          throw e.rethrowFromSystemServer();
        }
        sd.doForget();
      }
    }
    mUnboundServices.remove(context);
  }
}
