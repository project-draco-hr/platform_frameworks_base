{
  mActivityThread=activityThread;
  mApplicationInfo=aInfo;
  mPackageName=aInfo.packageName;
  mAppDir=aInfo.sourceDir;
  final int myUid=Process.myUid();
  mResDir=aInfo.uid == myUid ? aInfo.sourceDir : aInfo.publicSourceDir;
  mOverlayDirs=aInfo.resourceDirs;
  if (!UserHandle.isSameUser(aInfo.uid,myUid) && !Process.isIsolated()) {
    aInfo.dataDir=PackageManager.getDataDirForUser(UserHandle.getUserId(myUid),mPackageName);
  }
  mSharedLibraries=aInfo.sharedLibraryFiles;
  mDataDir=aInfo.dataDir;
  mDataDirFile=mDataDir != null ? new File(mDataDir) : null;
  mLibDir=aInfo.nativeLibraryDir;
  mBaseClassLoader=baseLoader;
  mSecurityViolation=securityViolation;
  mIncludeCode=includeCode;
  mDisplayAdjustments.setCompatibilityInfo(compatInfo);
  if (mAppDir == null) {
    if (ActivityThread.mSystemContext == null) {
      ActivityThread.mSystemContext=ContextImpl.createSystemContext(mainThread);
      ResourcesManager resourcesManager=ResourcesManager.getInstance();
      ActivityThread.mSystemContext.getResources().updateConfiguration(resourcesManager.getConfiguration(),resourcesManager.getDisplayMetricsLocked(Display.DEFAULT_DISPLAY,mDisplayAdjustments),compatInfo);
    }
    mClassLoader=ActivityThread.mSystemContext.getClassLoader();
    mResources=ActivityThread.mSystemContext.getResources();
  }
}
