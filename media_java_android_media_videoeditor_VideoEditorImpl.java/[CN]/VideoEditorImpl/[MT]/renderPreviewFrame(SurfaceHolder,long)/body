{
  long result=0;
  int surfaceWidth=0;
  int surfaceHeight=0;
  Rect frame;
  if (surfaceHolder == null) {
    throw new IllegalArgumentException("Surface Holder is null");
  }
  if (timeMs < 0) {
    throw new IllegalArgumentException("requested time not correct");
  }
 else   if (timeMs > mDurationMs) {
    throw new IllegalArgumentException("requested time more than duration");
  }
  if (mMANativeHelper != null) {
    if (mMANativeHelper.mInvalidatePreviewArray) {
      return -1;
    }
  }
 else {
    return -1;
  }
  boolean semAcquireDone=false;
  try {
    mPreviewSemaphore.acquire();
    semAcquireDone=true;
    Surface surface=surfaceHolder.getSurface();
    frame=surfaceHolder.getSurfaceFrame();
    surfaceWidth=frame.width();
    surfaceHeight=frame.height();
    if (surface == null) {
      throw new RuntimeException("Surface could not be retrieved from Surface holder");
    }
    if (!mMANativeHelper.mInvalidatePreviewArray) {
      if (mMediaItems.size() > 0) {
        result=mMANativeHelper.renderPreviewFrame(surface,timeMs,surfaceWidth,surfaceHeight);
      }
 else {
        result=0;
      }
    }
 else {
      result=-1;
    }
  }
 catch (  InterruptedException ex) {
    Log.e("VideoEditorImpl","Sem acquire NOT successful in renderPreviewFrame");
  }
 finally {
    if (semAcquireDone) {
      mPreviewSemaphore.release();
    }
  }
  return result;
}
