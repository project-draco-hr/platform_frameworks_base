{
  final String mediaItemId=parser.getAttributeValue("",ATTR_ID);
  final String type=parser.getAttributeValue("",ATTR_TYPE);
  final String filename=parser.getAttributeValue("",ATTR_FILENAME);
  final int renderingMode=Integer.parseInt(parser.getAttributeValue("",ATTR_RENDERING_MODE));
  final MediaItem currentMediaItem;
  if (MediaImageItem.class.getSimpleName().equals(type)) {
    final long durationMs=Long.parseLong(parser.getAttributeValue("",ATTR_DURATION));
    currentMediaItem=new MediaImageItem(this,mediaItemId,filename,durationMs,renderingMode);
  }
 else   if (MediaVideoItem.class.getSimpleName().equals(type)) {
    final long beginMs=Long.parseLong(parser.getAttributeValue("",ATTR_BEGIN_TIME));
    final long endMs=Long.parseLong(parser.getAttributeValue("",ATTR_END_TIME));
    final int volume=Integer.parseInt(parser.getAttributeValue("",ATTR_VOLUME));
    final boolean muted=Boolean.parseBoolean(parser.getAttributeValue("",ATTR_MUTED));
    final String audioWaveformFilename=parser.getAttributeValue("",ATTR_AUDIO_WAVEFORM_FILENAME);
    currentMediaItem=new MediaVideoItem(this,mediaItemId,filename,renderingMode,beginMs,endMs,volume,muted,audioWaveformFilename);
    final long beginTimeMs=Long.parseLong(parser.getAttributeValue("",ATTR_BEGIN_TIME));
    final long endTimeMs=Long.parseLong(parser.getAttributeValue("",ATTR_END_TIME));
    ((MediaVideoItem)currentMediaItem).setExtractBoundaries(beginTimeMs,endTimeMs);
    final int volumePercent=Integer.parseInt(parser.getAttributeValue("",ATTR_VOLUME));
    ((MediaVideoItem)currentMediaItem).setVolume(volumePercent);
  }
 else {
    throw new IllegalArgumentException("Unknown media item type: " + type);
  }
  return currentMediaItem;
}
