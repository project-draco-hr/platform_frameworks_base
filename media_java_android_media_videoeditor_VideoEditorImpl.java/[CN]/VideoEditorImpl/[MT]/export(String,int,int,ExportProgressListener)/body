{
  if (filename == null) {
    throw new IllegalArgumentException("export: filename is null");
  }
  File tempPathFile=new File(filename);
  if (tempPathFile == null) {
    throw new IOException(filename + "can not be created");
  }
  if (mMediaItems.size() == 0) {
    throw new IllegalStateException("No MediaItems added");
  }
switch (height) {
case MediaProperties.HEIGHT_144:
    break;
case MediaProperties.HEIGHT_360:
  break;
case MediaProperties.HEIGHT_480:
break;
case MediaProperties.HEIGHT_720:
break;
default :
throw new IllegalArgumentException("Argument Height incorrect");
}
switch (bitrate) {
case MediaProperties.BITRATE_28K:
break;
case MediaProperties.BITRATE_40K:
break;
case MediaProperties.BITRATE_64K:
break;
case MediaProperties.BITRATE_96K:
break;
case MediaProperties.BITRATE_128K:
break;
case MediaProperties.BITRATE_192K:
break;
case MediaProperties.BITRATE_256K:
break;
case MediaProperties.BITRATE_384K:
break;
case MediaProperties.BITRATE_512K:
break;
case MediaProperties.BITRATE_800K:
break;
case MediaProperties.BITRATE_2M:
break;
case MediaProperties.BITRATE_5M:
break;
case MediaProperties.BITRATE_8M:
break;
default :
throw new IllegalArgumentException("Argument Bitrate incorrect");
}
mMANativeHelper.export(filename,mProjectPath,height,bitrate,mMediaItems,mTransitions,mAudioTracks,listener);
}
