{
  if (surfaceHolder == null) {
    throw new IllegalArgumentException();
  }
  final Surface surface=surfaceHolder.getSurface();
  if (surface == null) {
    throw new IllegalArgumentException("Surface could not be retrieved from surface holder");
  }
  if (listener == null) {
    throw new IllegalArgumentException();
  }
  if (fromMs >= mDurationMs) {
    throw new IllegalArgumentException("Requested time not correct");
  }
  if (fromMs < 0) {
    throw new IllegalArgumentException("Requested time not correct");
  }
  boolean semAcquireDone=false;
  try {
    mMANativeHelper.lock();
    semAcquireDone=true;
    if (mMediaItems.size() > 0) {
      mMANativeHelper.previewStoryBoard(mMediaItems,mTransitions,mAudioTracks,null);
      mMANativeHelper.doPreview(surface,fromMs,toMs,loop,callbackAfterFrameCount,listener);
      mPreviewInProgress=true;
    }
  }
 catch (  InterruptedException ex) {
    Log.e(TAG,"Sem acquire NOT successful in startPreview");
  }
catch (  IllegalArgumentException ex) {
    Log.e(TAG,"Illegal Argument exception in do preview");
    throw ex;
  }
catch (  IllegalStateException ex) {
    Log.e(TAG,"Illegal State exception in do preview");
    throw ex;
  }
catch (  RuntimeException ex) {
    Log.e(TAG,"Runtime exception in do preview");
    throw ex;
  }
 finally {
    if (semAcquireDone) {
      mMANativeHelper.unlock();
    }
  }
}
