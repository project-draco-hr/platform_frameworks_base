{
  if (surfaceHolder == null) {
    throw new IllegalArgumentException();
  }
  if (listener == null) {
    throw new IllegalArgumentException();
  }
  if (fromMs >= mDurationMs) {
    throw new IllegalArgumentException("requested time not correct");
  }
  if (fromMs < 0) {
    throw new IllegalArgumentException("requested time not correct");
  }
  boolean semAcquireDone=false;
  try {
    mPreviewSemaphore.acquire();
    semAcquireDone=true;
  }
 catch (  InterruptedException ex) {
    Log.e(TAG,"Sem acquire NOT successful in startPreview");
  }
  if (semAcquireDone) {
    Surface mSurface=surfaceHolder.getSurface();
    if (mSurface == null) {
      throw new RuntimeException("Surface could not be retrieved from surface holder");
    }
    if (mMediaItems.size() > 0) {
      try {
        mMANativeHelper.previewStoryBoard(mMediaItems,mTransitions,mAudioTracks,null);
        mMANativeHelper.doPreview(mSurface,fromMs,toMs,loop,callbackAfterFrameCount,listener);
        mPreviewInProgress=true;
      }
 catch (      IllegalArgumentException ex) {
        mPreviewSemaphore.release();
        Log.e(TAG,"Illegal Argument exception in do preview");
        throw ex;
      }
catch (      IllegalStateException ex) {
        mPreviewSemaphore.release();
        Log.e(TAG,"Illegal State exception in do preview");
        throw ex;
      }
catch (      RuntimeException ex) {
        mPreviewSemaphore.release();
        Log.e(TAG,"Runtime exception in do preview");
        throw ex;
      }
    }
  }
}
