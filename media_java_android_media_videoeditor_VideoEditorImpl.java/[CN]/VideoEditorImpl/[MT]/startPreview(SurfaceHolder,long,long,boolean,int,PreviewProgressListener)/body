{
  if (surfaceHolder == null) {
    throw new IllegalArgumentException();
  }
  final Surface surface=surfaceHolder.getSurface();
  if (surface == null) {
    throw new IllegalArgumentException("Surface could not be retrieved from surface holder");
  }
  if (surface.isValid() == false) {
    throw new IllegalStateException("Surface is not valid");
  }
  if (listener == null) {
    throw new IllegalArgumentException();
  }
  if (fromMs >= mDurationMs) {
    throw new IllegalArgumentException("Requested time not correct");
  }
  if (fromMs < 0) {
    throw new IllegalArgumentException("Requested time not correct");
  }
  boolean semAcquireDone=false;
  if (!mPreviewInProgress) {
    try {
      semAcquireDone=lock(ENGINE_ACCESS_MAX_TIMEOUT_MS);
      if (semAcquireDone == false) {
        throw new IllegalStateException("Timeout waiting for semaphore");
      }
      if (mMANativeHelper == null) {
        throw new IllegalStateException("The video editor is not initialized");
      }
      if (mMediaItems.size() > 0) {
        mPreviewInProgress=true;
        mMANativeHelper.previewStoryBoard(mMediaItems,mTransitions,mAudioTracks,null);
        mMANativeHelper.doPreview(surface,fromMs,toMs,loop,callbackAfterFrameCount,listener);
      }
    }
 catch (    InterruptedException ex) {
      Log.w(TAG,"The thread was interrupted",new Throwable());
      throw new IllegalStateException("The thread was interrupted");
    }
  }
 else {
    throw new IllegalStateException("Preview already in progress");
  }
}
