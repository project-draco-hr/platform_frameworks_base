{
  super.onCreate(savedInstanceState);
  setContentView(R.layout.choose_account);
  Set<String> setOfAllowableAccountTypes=null;
  ArrayList<String> validAccountTypes=getIntent().getStringArrayListExtra(ChooseTypeAndAccountActivity.EXTRA_ALLOWABLE_ACCOUNT_TYPES_ARRAYLIST);
  if (validAccountTypes != null) {
    setOfAllowableAccountTypes=new HashSet<String>(validAccountTypes.size());
    for (    String type : validAccountTypes) {
      setOfAllowableAccountTypes.add(type);
    }
  }
  buildTypeToAuthDescriptionMap();
  mAuthenticatorInfosToDisplay=new ArrayList<AuthInfo>(mTypeToAuthenticatorInfo.size());
  for (  Map.Entry<String,AuthInfo> entry : mTypeToAuthenticatorInfo.entrySet()) {
    final String type=entry.getKey();
    final AuthInfo info=entry.getValue();
    if (setOfAllowableAccountTypes != null && !setOfAllowableAccountTypes.contains(type)) {
      continue;
    }
    mAuthenticatorInfosToDisplay.add(info);
  }
  if (mAuthenticatorInfosToDisplay.isEmpty()) {
    Bundle bundle=new Bundle();
    bundle.putString(AccountManager.KEY_ERROR_MESSAGE,"no allowable account types");
    setResult(Activity.RESULT_OK,new Intent().putExtras(bundle));
    finish();
    return;
  }
  if (mAuthenticatorInfosToDisplay.size() == 1) {
    runAddAccountForAuthenticator(mAuthenticatorInfosToDisplay.get(0));
    return;
  }
  ListView list=(ListView)findViewById(android.R.id.list);
  list.setAdapter(new AccountArrayAdapter(this,android.R.layout.simple_list_item_1,mAuthenticatorInfosToDisplay));
  list.setChoiceMode(ListView.CHOICE_MODE_NONE);
  list.setTextFilterEnabled(false);
  list.setOnItemClickListener(new AdapterView.OnItemClickListener(){
    public void onItemClick(    AdapterView<?> parent,    View v,    int position,    long id){
      runAddAccountForAuthenticator(mAuthenticatorInfosToDisplay.get(position));
    }
  }
);
}
