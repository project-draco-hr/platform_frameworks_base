{
  int type=request.type;
  if (type == CHUNK_VUGL) {
    return handleOpenGlTrace(request);
  }
 else   if (type == CHUNK_VULW) {
    return listWindows();
  }
  ByteBuffer in=wrapChunk(request);
  int op=in.getInt();
  View rootView=getRootView(in);
  if (rootView == null) {
    return createFailChunk(ERR_INVALID_PARAM,"Invalid View Root");
  }
  if (type == CHUNK_VURT) {
    if (op == VURT_DUMP_HIERARCHY)     return dumpHierarchy(rootView,in);
 else     if (op == VURT_CAPTURE_LAYERS)     return captureLayers(rootView);
 else     return createFailChunk(ERR_INVALID_OP,"Unknown view root operation: " + op);
  }
  final View targetView=getTargetView(rootView,in);
  if (targetView == null) {
    return createFailChunk(ERR_INVALID_PARAM,"Invalid target view");
  }
  if (type == CHUNK_VUOP) {
switch (op) {
case VUOP_CAPTURE_VIEW:
      return captureView(rootView,targetView);
case VUOP_DUMP_DISPLAYLIST:
    return dumpDisplayLists(rootView,targetView);
case VUOP_PROFILE_VIEW:
  return profileView(rootView,targetView);
case VUOP_INVOKE_VIEW_METHOD:
return invokeViewMethod(rootView,targetView,in);
case VUOP_SET_LAYOUT_PARAMETER:
return setLayoutParameter(rootView,targetView,in);
default :
return createFailChunk(ERR_INVALID_OP,"Unknown view operation: " + op);
}
}
 else {
throw new RuntimeException("Unknown packet " + ChunkHandler.name(type));
}
}
