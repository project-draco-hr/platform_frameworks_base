{
  if (fileIs == null) {
    return null;
  }
  final MessageDigest md;
  try {
    md=MessageDigest.getInstance(DIGEST_ALGORITHM);
  }
 catch (  NoSuchAlgorithmException e) {
    throw new RuntimeException(DIGEST_ALGORITHM + " must be available",e);
  }
  final DigestInputStream dis=new DigestInputStream(new BufferedInputStream(fileIs),md);
  try {
    byte[] readBuffer=new byte[8192];
    while (dis.read(readBuffer,0,readBuffer.length) != -1) {
    }
  }
 catch (  IOException e) {
    Slog.w(TAG,"Could not read manifest");
    return null;
  }
 finally {
    IoUtils.closeQuietly(dis);
  }
  final byte[] digest=md.digest();
  return new ManifestDigest(digest);
}
