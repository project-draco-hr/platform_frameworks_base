{
  if (enterTransition != null) {
    final ArrayList<View> enteringViews=new ArrayList<View>();
    final View nonExistentView=state.nonExistentView;
    enterTransition.addTarget(state.nonExistentView);
    enterTransition.addListener(new Transition.TransitionListenerAdapter(){
      @Override public void onTransitionStart(      Transition transition){
        transition.removeListener(this);
        transition.removeTarget(nonExistentView);
        int numViews=enteringViews.size();
        for (int i=0; i < numViews; i++) {
          transition.removeTarget(enteringViews.get(i));
        }
      }
    }
);
    container.getViewTreeObserver().addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener(){
      @Override public boolean onPreDraw(){
        container.getViewTreeObserver().removeOnPreDrawListener(this);
        View view=inFragment.getView();
        if (view != null) {
          view.captureTransitioningViews(enteringViews);
          addTransitioningViews(enterTransition,enteringViews);
        }
        return true;
      }
    }
);
    setSharedElementEpicenter(enterTransition,state);
  }
}
