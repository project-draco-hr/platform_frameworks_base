{
  if (FragmentManagerImpl.DEBUG) {
    Log.v(TAG,"popFromBackStack: " + this);
    LogWriter logw=new LogWriter(Log.VERBOSE,TAG);
    PrintWriter pw=new FastPrintWriter(logw,false,1024);
    dump("  ",null,pw,null);
    pw.flush();
  }
  if (state == null) {
    if (firstOutFragments.size() != 0 || lastInFragments.size() != 0) {
      state=beginTransition(firstOutFragments,lastInFragments,true);
    }
  }
 else   if (!doStateMove) {
    setNameOverrides(state,mSharedElementTargetNames,mSharedElementSourceNames);
  }
  bumpBackStackNesting(-1);
  Op op=mTail;
  while (op != null) {
switch (op.cmd) {
case OP_ADD:
{
        Fragment f=op.fragment;
        f.mNextAnim=op.popExitAnim;
        mManager.removeFragment(f,FragmentManagerImpl.reverseTransit(mTransition),mTransitionStyle);
      }
    break;
case OP_REPLACE:
{
    Fragment f=op.fragment;
    if (f != null) {
      f.mNextAnim=op.popExitAnim;
      mManager.removeFragment(f,FragmentManagerImpl.reverseTransit(mTransition),mTransitionStyle);
    }
    if (op.removed != null) {
      for (int i=0; i < op.removed.size(); i++) {
        Fragment old=op.removed.get(i);
        old.mNextAnim=op.popEnterAnim;
        mManager.addFragment(old,false);
      }
    }
  }
break;
case OP_REMOVE:
{
Fragment f=op.fragment;
f.mNextAnim=op.popEnterAnim;
mManager.addFragment(f,false);
}
break;
case OP_HIDE:
{
Fragment f=op.fragment;
f.mNextAnim=op.popEnterAnim;
mManager.showFragment(f,FragmentManagerImpl.reverseTransit(mTransition),mTransitionStyle);
}
break;
case OP_SHOW:
{
Fragment f=op.fragment;
f.mNextAnim=op.popExitAnim;
mManager.hideFragment(f,FragmentManagerImpl.reverseTransit(mTransition),mTransitionStyle);
}
break;
case OP_DETACH:
{
Fragment f=op.fragment;
f.mNextAnim=op.popEnterAnim;
mManager.attachFragment(f,FragmentManagerImpl.reverseTransit(mTransition),mTransitionStyle);
}
break;
case OP_ATTACH:
{
Fragment f=op.fragment;
f.mNextAnim=op.popExitAnim;
mManager.detachFragment(f,FragmentManagerImpl.reverseTransit(mTransition),mTransitionStyle);
}
break;
default :
{
throw new IllegalArgumentException("Unknown cmd: " + op.cmd);
}
}
op=op.prev;
}
if (doStateMove) {
mManager.moveToState(mManager.mCurState,FragmentManagerImpl.reverseTransit(mTransition),mTransitionStyle,true);
state=null;
}
if (mIndex >= 0) {
mManager.freeBackStackIndex(mIndex);
mIndex=-1;
}
return state;
}
