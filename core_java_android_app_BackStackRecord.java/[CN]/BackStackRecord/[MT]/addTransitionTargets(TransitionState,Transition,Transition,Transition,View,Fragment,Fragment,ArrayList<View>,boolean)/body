{
  if (enterTransition == null && sharedElementTransition == null && overallTransition == null) {
    return null;
  }
  final ArrayList<View> enteringViews=new ArrayList<View>();
  container.getViewTreeObserver().addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener(){
    @Override public boolean onPreDraw(){
      container.getViewTreeObserver().removeOnPreDrawListener(this);
      excludeHiddenFragments(hiddenFragmentViews,inFragment.mContainerId,overallTransition);
      if (sharedElementTransition != null) {
        ArrayMap<String,View> namedViews=mapSharedElementsIn(state,isBack,inFragment);
        setEpicenterIn(namedViews,state);
        callSharedElementEnd(state,inFragment,outFragment,isBack,namedViews);
      }
      if (enterTransition != null) {
        View view=inFragment.getView();
        if (view != null) {
          view.captureTransitioningViews(enteringViews);
          addTargets(enterTransition,enteringViews);
        }
        setSharedElementEpicenter(enterTransition,state);
      }
      return true;
    }
  }
);
  return enteringViews;
}
