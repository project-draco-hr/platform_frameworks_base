{
  boolean overlap=true;
  if (enterTransition != null && exitTransition != null && inFragment != null) {
    overlap=isBack ? inFragment.getAllowReturnTransitionOverlap() : inFragment.getAllowEnterTransitionOverlap();
  }
  Transition transition;
  if (overlap) {
    TransitionSet transitionSet=new TransitionSet();
    if (enterTransition != null) {
      transitionSet.addTransition(enterTransition);
    }
    if (exitTransition != null) {
      transitionSet.addTransition(exitTransition);
    }
    if (sharedElementTransition != null) {
      transitionSet.addTransition(sharedElementTransition);
    }
    transition=transitionSet;
  }
 else {
    Transition staggered=null;
    if (exitTransition != null && enterTransition != null) {
      staggered=new TransitionSet().addTransition(exitTransition).addTransition(enterTransition).setOrdering(TransitionSet.ORDERING_SEQUENTIAL);
    }
 else     if (exitTransition != null) {
      staggered=exitTransition;
    }
 else     if (enterTransition != null) {
      staggered=enterTransition;
    }
    if (sharedElementTransition != null) {
      TransitionSet together=new TransitionSet();
      if (staggered != null) {
        together.addTransition(staggered);
      }
      together.addTransition(sharedElementTransition);
      transition=together;
    }
 else {
      transition=staggered;
    }
  }
  return transition;
}
