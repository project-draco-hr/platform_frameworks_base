{
  checkImage(image,width,height,format);
  if (VERBOSE)   Log.v(TAG,"validating Image");
  byte[] data=getDataFromImage(image);
  assertTrue("Invalid image data",data != null && data.length > 0);
switch (format) {
case ImageFormat.JPEG:
    validateJpegData(data,width,height,filePath);
  break;
case ImageFormat.YUV_420_888:
case ImageFormat.YV12:
validateYuvData(data,width,height,format,image.getTimestamp(),filePath);
break;
case ImageFormat.RAW_SENSOR:
validateRaw16Data(data,width,height,format,image.getTimestamp(),filePath);
break;
case ImageFormat.DEPTH16:
validateDepth16Data(data,width,height,format,image.getTimestamp(),filePath);
break;
case ImageFormat.DEPTH_POINT_CLOUD:
validateDepthPointCloudData(data,width,height,format,image.getTimestamp(),filePath);
break;
case ImageFormat.RAW_PRIVATE:
validateRawPrivateData(data,width,height,image.getTimestamp(),filePath);
break;
default :
throw new UnsupportedOperationException("Unsupported format for validation: " + format);
}
}
