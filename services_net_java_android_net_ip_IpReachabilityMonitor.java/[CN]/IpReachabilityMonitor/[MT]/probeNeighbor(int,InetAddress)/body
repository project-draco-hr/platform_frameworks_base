{
  final long IO_TIMEOUT=300L;
  final String msgSnippet="probing ip=" + ip.getHostAddress() + "%"+ ifIndex;
  if (DBG) {
    Log.d(TAG,msgSnippet);
  }
  final byte[] msg=RtNetlinkNeighborMessage.newNewNeighborMessage(1,ip,StructNdMsg.NUD_PROBE,ifIndex,null);
  boolean returnValue=false;
  try (NetlinkSocket nlSocket=new NetlinkSocket(OsConstants.NETLINK_ROUTE)){
    nlSocket.connectToKernel();
    nlSocket.sendMessage(msg,0,msg.length,IO_TIMEOUT);
    final ByteBuffer bytes=nlSocket.recvMessage(IO_TIMEOUT);
    final NetlinkMessage response=NetlinkMessage.parse(bytes);
    if (response != null && response instanceof NetlinkErrorMessage && (((NetlinkErrorMessage)response).getNlMsgError() != null) && (((NetlinkErrorMessage)response).getNlMsgError().error == 0)) {
      returnValue=true;
    }
 else {
      String errmsg;
      if (bytes == null) {
        errmsg="null recvMessage";
      }
 else       if (response == null) {
        bytes.position(0);
        errmsg="raw bytes: " + NetlinkConstants.hexify(bytes);
      }
 else {
        errmsg=response.toString();
      }
      Log.e(TAG,"Error " + msgSnippet + ", errmsg="+ errmsg);
    }
  }
 catch (  ErrnoException|InterruptedIOException|SocketException e) {
    Log.d(TAG,"Error " + msgSnippet,e);
  }
  IpReachabilityMonitorProbeEvent.logEvent("ifindex-" + ifIndex,ip.getHostAddress(),returnValue);
  return returnValue;
}
