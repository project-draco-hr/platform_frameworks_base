{
  while (byteBuffer.remaining() > 0) {
    final int position=byteBuffer.position();
    final NetlinkMessage nlMsg=NetlinkMessage.parse(byteBuffer);
    if (nlMsg == null || nlMsg.getHeader() == null) {
      byteBuffer.position(position);
      Log.e(TAG,"unparsable netlink msg: " + NetlinkConstants.hexify(byteBuffer));
      break;
    }
    final int srcPortId=nlMsg.getHeader().nlmsg_pid;
    if (srcPortId != 0) {
      Log.e(TAG,"non-kernel source portId: " + ((long)(srcPortId & 0xffffffff)));
      break;
    }
    if (nlMsg instanceof NetlinkErrorMessage) {
      Log.e(TAG,"netlink error: " + nlMsg);
      continue;
    }
 else     if (!(nlMsg instanceof RtNetlinkNeighborMessage)) {
      if (DBG) {
        Log.d(TAG,"non-rtnetlink neighbor msg: " + nlMsg);
      }
      continue;
    }
    evaluateRtNetlinkNeighborMessage((RtNetlinkNeighborMessage)nlMsg,whenMs);
  }
}
