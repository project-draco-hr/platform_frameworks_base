{
  super.onCreate(savedInstanceState);
  Thread.setDefaultUncaughtExceptionHandler(new UncaughtExceptionHandler(){
    @Override public void uncaughtException(    Thread thread,    Throwable e){
      Log.w(LOG_TAG,"onTestCrashed(): " + mCurrentTestRelativePath + " thread="+ thread,e);
      try {
        Message serviceMsg=Message.obtain(null,ManagerService.MSG_CURRENT_TEST_CRASHED);
        mManagerServiceMessenger.send(serviceMsg);
      }
 catch (      RemoteException e2) {
        Log.e(LOG_TAG,"mCurrentTestRelativePath=" + mCurrentTestRelativePath,e2);
      }
      Process.killProcess(Process.myPid());
    }
  }
);
  requestWindowFeature(Window.FEATURE_PROGRESS);
  Intent intent=getIntent();
  mTestsList=FsUtils.loadTestListFromStorage(intent.getStringExtra(EXTRA_TESTS_FILE));
  mCurrentTestIndex=intent.getIntExtra(EXTRA_TEST_INDEX,-1);
  mTotalTestCount=mCurrentTestIndex + mTestsList.size();
  PowerManager pm=(PowerManager)getSystemService(Context.POWER_SERVICE);
  mScreenDimLock=pm.newWakeLock(PowerManager.SCREEN_DIM_WAKE_LOCK | PowerManager.ON_AFTER_RELEASE,"WakeLock in LayoutTester");
  mScreenDimLock.acquire();
  bindService(new Intent(this,ManagerService.class),mServiceConnection,Context.BIND_AUTO_CREATE);
}
