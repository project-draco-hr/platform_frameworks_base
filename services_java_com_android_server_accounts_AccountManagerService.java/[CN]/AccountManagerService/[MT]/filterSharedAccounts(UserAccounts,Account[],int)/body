{
  if (getUserManager() == null || userAccounts == null || userAccounts.userId < 0 || callingUid == android.os.Process.myUid()) {
    return unfiltered;
  }
  if (mUserManager.getUserInfo(userAccounts.userId).isRestricted()) {
    String[] packages=mPackageManager.getPackagesForUid(callingUid);
    String whiteList=mContext.getResources().getString(com.android.internal.R.string.config_appsAuthorizedForSharedAccounts);
    for (    String packageName : packages) {
      if (whiteList.contains(";" + packageName + ";")) {
        return unfiltered;
      }
    }
    ArrayList<Account> allowed=new ArrayList<Account>();
    Account[] sharedAccounts=getSharedAccountsAsUser(userAccounts.userId);
    if (sharedAccounts == null || sharedAccounts.length == 0)     return unfiltered;
    for (    Account account : unfiltered) {
      boolean found=false;
      for (      Account shared : sharedAccounts) {
        if (shared.equals(account)) {
          found=true;
          break;
        }
      }
      if (!found) {
        allowed.add(account);
      }
    }
    Account[] filtered=new Account[allowed.size()];
    allowed.toArray(filtered);
    return filtered;
  }
 else {
    return unfiltered;
  }
}
