{
  int len=s.length();
  if (len < 9) {
    return false;
  }
  if (s.charAt(len - 3) == '*') {
    s=s.substring(0,len - 3);
  }
  String[] tokens=s.split(",");
  String sentenceId=tokens[0].substring(3,6);
  int idx=1;
  try {
    if (sentenceId.equals("GGA")) {
      String time=tokens[idx++];
      String latitude=tokens[idx++];
      String latitudeHemi=tokens[idx++];
      String longitude=tokens[idx++];
      String longitudeHemi=tokens[idx++];
      String fixQuality=tokens[idx++];
      String numSatellites=tokens[idx++];
      String horizontalDilutionOfPrecision=tokens[idx++];
      String altitude=tokens[idx++];
      String altitudeUnits=tokens[idx++];
      String heightOfGeoid=tokens[idx++];
      String heightOfGeoidUnits=tokens[idx++];
      String timeSinceLastDgpsUpdate=tokens[idx++];
      updateTime(time);
      updateLatLon(latitude,latitudeHemi,longitude,longitudeHemi);
      updateAltitude(altitude);
      updateIntExtra("numSatellites",numSatellites);
      updateFloatExtra("hdop",horizontalDilutionOfPrecision);
      if (mNewWaypoint) {
        mNewWaypoint=false;
        return true;
      }
    }
 else     if (sentenceId.equals("GSA")) {
      String selectionMode=tokens[idx++];
      String mode=tokens[idx++];
      for (int i=0; i < 12; i++) {
        String id=tokens[idx++];
      }
      String pdop=tokens[idx++];
      String hdop=tokens[idx++];
      String vdop=tokens[idx++];
      updateFloatExtra("pdop",pdop);
      updateFloatExtra("hdop",hdop);
      updateFloatExtra("vdop",vdop);
    }
 else     if (sentenceId.equals("GSV")) {
      String numMessages=tokens[idx++];
      String messageNum=tokens[idx++];
      String svsInView=tokens[idx++];
      for (int i=0; i < 4; i++) {
        if (idx + 2 < tokens.length) {
          String prnNumber=tokens[idx++];
          String elevation=tokens[idx++];
          String azimuth=tokens[idx++];
          if (idx < tokens.length) {
            String snr=tokens[idx++];
          }
        }
      }
    }
 else     if (sentenceId.equals("RMC")) {
      String time=tokens[idx++];
      String fixStatus=tokens[idx++];
      String latitude=tokens[idx++];
      String latitudeHemi=tokens[idx++];
      String longitude=tokens[idx++];
      String longitudeHemi=tokens[idx++];
      String speed=tokens[idx++];
      String bearing=tokens[idx++];
      String utcDate=tokens[idx++];
      String magneticVariation=tokens[idx++];
      String magneticVariationDir=tokens[idx++];
      String mode=tokens[idx++];
      if (fixStatus.charAt(0) == 'A') {
        updateTime(time,utcDate);
        updateLatLon(latitude,latitudeHemi,longitude,longitudeHemi);
        updateBearing(bearing);
        updateSpeed(speed);
      }
      if (mNewWaypoint) {
        return true;
      }
    }
 else {
      Log.e(TAG,"Unknown sentence: " + s);
    }
  }
 catch (  ArrayIndexOutOfBoundsException e) {
    Log.e(TAG,"AIOOBE",e);
    for (int i=0; i < tokens.length; i++) {
      Log.e(TAG,"Got token #" + i + " = "+ tokens[i]);
    }
  }
  return false;
}
