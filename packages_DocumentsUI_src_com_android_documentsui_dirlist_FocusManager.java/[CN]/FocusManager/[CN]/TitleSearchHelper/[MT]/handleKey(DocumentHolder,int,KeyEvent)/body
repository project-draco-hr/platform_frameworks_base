{
switch (keyCode) {
case KeyEvent.KEYCODE_ESCAPE:
case KeyEvent.KEYCODE_ENTER:
    if (mActive) {
      deactivate();
      return true;
    }
 else {
      return false;
    }
case KeyEvent.KEYCODE_SPACE:
  if (!mActive) {
    return false;
  }
}
if (Events.isNavigationKeyCode(keyCode)) {
deactivate();
return false;
}
boolean handled=mTextListener.onKeyDown(doc.itemView,mSearchString,keyCode,event);
if (handled || keyCode == KeyEvent.KEYCODE_DEL) {
String searchString=mSearchString.toString();
if (searchString.length() == 0) {
  return false;
}
activate();
for (int pos=0; pos < mIndex.size(); pos++) {
  String title=mIndex.get(pos);
  if (title != null && title.startsWith(searchString)) {
    focusItem(pos);
    break;
  }
}
}
return handled;
}
