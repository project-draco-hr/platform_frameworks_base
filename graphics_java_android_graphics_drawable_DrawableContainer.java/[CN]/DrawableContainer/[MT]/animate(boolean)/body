{
  mHasAlpha=true;
  final long now=SystemClock.uptimeMillis();
  boolean animating=false;
  if (mCurrDrawable != null) {
    if (mEnterAnimationEnd != 0) {
      if (mEnterAnimationEnd <= now) {
        mCurrDrawable.mutate().setAlpha(mAlpha);
        mEnterAnimationEnd=0;
      }
 else {
        int animAlpha=(int)((mEnterAnimationEnd - now) * 255) / mDrawableContainerState.mEnterFadeDuration;
        if (DEBUG)         android.util.Log.i(TAG,toString() + " cur alpha " + animAlpha);
        mCurrDrawable.mutate().setAlpha(((255 - animAlpha) * mAlpha) / 255);
        animating=true;
      }
    }
  }
 else {
    mEnterAnimationEnd=0;
  }
  if (mLastDrawable != null) {
    if (mExitAnimationEnd != 0) {
      if (mExitAnimationEnd <= now) {
        mLastDrawable.setVisible(false,false);
        mLastDrawable=null;
        mLastIndex=-1;
        mExitAnimationEnd=0;
      }
 else {
        int animAlpha=(int)((mExitAnimationEnd - now) * 255) / mDrawableContainerState.mExitFadeDuration;
        if (DEBUG)         android.util.Log.i(TAG,toString() + " last alpha " + animAlpha);
        mLastDrawable.mutate().setAlpha((animAlpha * mAlpha) / 255);
        animating=true;
      }
    }
  }
 else {
    mExitAnimationEnd=0;
  }
  if (schedule && animating) {
    scheduleSelf(mAnimationRunnable,now + 1000 / 60);
  }
}
