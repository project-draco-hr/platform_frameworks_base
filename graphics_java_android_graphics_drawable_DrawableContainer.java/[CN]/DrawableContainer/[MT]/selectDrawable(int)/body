{
  if (idx == mCurIndex) {
    return false;
  }
  final long now=SystemClock.uptimeMillis();
  if (DEBUG)   android.util.Log.i(TAG,toString() + " from " + mCurIndex+ " to "+ idx+ ": exit="+ mDrawableContainerState.mExitFadeDuration+ " enter="+ mDrawableContainerState.mEnterFadeDuration);
  if (mDrawableContainerState.mExitFadeDuration > 0) {
    if (mLastDrawable != null) {
      mLastDrawable.setVisible(false,false);
    }
    if (mCurrDrawable != null) {
      mLastDrawable=mCurrDrawable;
      mExitAnimationEnd=now + mDrawableContainerState.mExitFadeDuration;
    }
 else {
      mLastDrawable=null;
      mExitAnimationEnd=0;
    }
  }
 else   if (mCurrDrawable != null) {
    mCurrDrawable.setVisible(false,false);
  }
  if (idx >= 0 && idx < mDrawableContainerState.mNumChildren) {
    final Drawable d=mDrawableContainerState.getChild(idx);
    mCurrDrawable=d;
    mCurIndex=idx;
    if (d != null) {
      d.mutate();
      if (mDrawableContainerState.mEnterFadeDuration > 0) {
        mEnterAnimationEnd=now + mDrawableContainerState.mEnterFadeDuration;
      }
 else       if (mHasAlpha) {
        d.setAlpha(mAlpha);
      }
      if (mDrawableContainerState.mHasColorFilter) {
        d.setColorFilter(mDrawableContainerState.mColorFilter);
      }
 else       if (mDrawableContainerState.mHasTint) {
        d.setTint(mDrawableContainerState.mTint,mDrawableContainerState.mTintMode);
      }
      d.setVisible(isVisible(),true);
      d.setDither(mDrawableContainerState.mDither);
      d.setState(getState());
      d.setLevel(getLevel());
      d.setBounds(getBounds());
      d.setLayoutDirection(getLayoutDirection());
      d.setAutoMirrored(mDrawableContainerState.mAutoMirrored);
    }
  }
 else {
    mCurrDrawable=null;
    mCurIndex=-1;
  }
  if (mEnterAnimationEnd != 0 || mExitAnimationEnd != 0) {
    if (mAnimationRunnable == null) {
      mAnimationRunnable=new Runnable(){
        @Override public void run(){
          animate(true);
          invalidateSelf();
        }
      }
;
    }
 else {
      unscheduleSelf(mAnimationRunnable);
    }
    animate(true);
  }
  invalidateSelf();
  return true;
}
