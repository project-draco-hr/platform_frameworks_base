{
  mOwner=owner;
  mRes=res != null ? res : orig != null ? orig.mRes : null;
  if (orig != null) {
    mChangingConfigurations=orig.mChangingConfigurations;
    mChildrenChangingConfigurations=orig.mChildrenChangingConfigurations;
    mCheckedConstantState=true;
    mCanConstantState=true;
    mVariablePadding=orig.mVariablePadding;
    mConstantSize=orig.mConstantSize;
    mDither=orig.mDither;
    mMutated=orig.mMutated;
    mLayoutDirection=orig.mLayoutDirection;
    mEnterFadeDuration=orig.mEnterFadeDuration;
    mExitFadeDuration=orig.mExitFadeDuration;
    mAutoMirrored=orig.mAutoMirrored;
    mColorFilter=orig.mColorFilter;
    mHasColorFilter=orig.mHasColorFilter;
    mTintList=orig.mTintList;
    mTintMode=orig.mTintMode;
    mHasTintList=orig.mHasTintList;
    mHasTintMode=orig.mHasTintMode;
    mConstantPadding=orig.getConstantPadding();
    mPaddingChecked=true;
    mConstantWidth=orig.getConstantWidth();
    mConstantHeight=orig.getConstantHeight();
    mConstantMinimumWidth=orig.getConstantMinimumWidth();
    mConstantMinimumHeight=orig.getConstantMinimumHeight();
    mComputedConstantSize=true;
    mOpacity=orig.getOpacity();
    mCheckedOpacity=true;
    mStateful=orig.isStateful();
    mCheckedStateful=true;
    final Drawable[] origDr=orig.mDrawables;
    mDrawables=new Drawable[origDr.length];
    mNumChildren=orig.mNumChildren;
    final SparseArray<ConstantStateFuture> origDf=orig.mDrawableFutures;
    if (origDf != null) {
      mDrawableFutures=origDf.clone();
    }
 else {
      mDrawableFutures=new SparseArray<ConstantStateFuture>(mNumChildren);
    }
    final int N=mNumChildren;
    for (int i=0; i < N; i++) {
      if (origDr[i] != null) {
        if (origDr[i].getConstantState() != null) {
          mDrawableFutures.put(i,new ConstantStateFuture(origDr[i]));
        }
 else {
          mDrawables[i]=origDr[i];
        }
      }
    }
  }
 else {
    mDrawables=new Drawable[10];
    mNumChildren=0;
  }
}
