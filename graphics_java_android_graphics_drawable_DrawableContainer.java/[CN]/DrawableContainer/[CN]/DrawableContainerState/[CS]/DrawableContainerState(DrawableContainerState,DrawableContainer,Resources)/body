{
  mOwner=owner;
  mSourceRes=res != null ? res : (orig != null ? orig.mSourceRes : null);
  mDensity=Drawable.resolveDensity(res,orig != null ? orig.mDensity : 0);
  if (orig != null) {
    mChangingConfigurations=orig.mChangingConfigurations;
    mChildrenChangingConfigurations=orig.mChildrenChangingConfigurations;
    mCheckedConstantState=true;
    mCanConstantState=true;
    mVariablePadding=orig.mVariablePadding;
    mConstantSize=orig.mConstantSize;
    mDither=orig.mDither;
    mMutated=orig.mMutated;
    mLayoutDirection=orig.mLayoutDirection;
    mEnterFadeDuration=orig.mEnterFadeDuration;
    mExitFadeDuration=orig.mExitFadeDuration;
    mAutoMirrored=orig.mAutoMirrored;
    mColorFilter=orig.mColorFilter;
    mHasColorFilter=orig.mHasColorFilter;
    mTintList=orig.mTintList;
    mTintMode=orig.mTintMode;
    mHasTintList=orig.mHasTintList;
    mHasTintMode=orig.mHasTintMode;
    if (orig.mDensity == mDensity) {
      if (orig.mCheckedPadding) {
        mConstantPadding=new Rect(orig.mConstantPadding);
        mCheckedPadding=true;
      }
      if (orig.mCheckedConstantSize) {
        mConstantWidth=orig.mConstantWidth;
        mConstantHeight=orig.mConstantHeight;
        mConstantMinimumWidth=orig.mConstantMinimumWidth;
        mConstantMinimumHeight=orig.mConstantMinimumHeight;
        mCheckedConstantSize=true;
      }
    }
    if (orig.mCheckedOpacity) {
      mOpacity=orig.mOpacity;
      mCheckedOpacity=true;
    }
    if (orig.mCheckedStateful) {
      mStateful=orig.mStateful;
      mCheckedStateful=true;
    }
    final Drawable[] origDr=orig.mDrawables;
    mDrawables=new Drawable[origDr.length];
    mNumChildren=orig.mNumChildren;
    final SparseArray<ConstantState> origDf=orig.mDrawableFutures;
    if (origDf != null) {
      mDrawableFutures=origDf.clone();
    }
 else {
      mDrawableFutures=new SparseArray<>(mNumChildren);
    }
    final int N=mNumChildren;
    for (int i=0; i < N; i++) {
      if (origDr[i] != null) {
        final ConstantState cs=origDr[i].getConstantState();
        if (cs != null) {
          mDrawableFutures.put(i,cs);
        }
 else {
          mDrawables[i]=origDr[i];
        }
      }
    }
  }
 else {
    mDrawables=new Drawable[10];
    mNumChildren=0;
  }
}
