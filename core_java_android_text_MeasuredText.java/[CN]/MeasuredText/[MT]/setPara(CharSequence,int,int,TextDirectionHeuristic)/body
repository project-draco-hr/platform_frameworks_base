{
  mText=text;
  mTextStart=start;
  int len=end - start;
  mLen=len;
  mPos=0;
  if (mWidths == null || mWidths.length < len) {
    mWidths=ArrayUtils.newUnpaddedFloatArray(len);
  }
  if (mChars == null || mChars.length < len) {
    mChars=ArrayUtils.newUnpaddedCharArray(len);
  }
  TextUtils.getChars(text,start,end,mChars,0);
  if (text instanceof Spanned) {
    Spanned spanned=(Spanned)text;
    ReplacementSpan[] spans=spanned.getSpans(start,end,ReplacementSpan.class);
    for (int i=0; i < spans.length; i++) {
      int startInPara=spanned.getSpanStart(spans[i]) - start;
      int endInPara=spanned.getSpanEnd(spans[i]) - start;
      if (startInPara < 0)       startInPara=0;
      if (endInPara > len)       endInPara=len;
      for (int j=startInPara; j < endInPara; j++) {
        mChars[j]='\uFFFC';
      }
    }
  }
  if ((textDir == TextDirectionHeuristics.LTR || textDir == TextDirectionHeuristics.FIRSTSTRONG_LTR || textDir == TextDirectionHeuristics.ANYRTL_LTR) && TextUtils.doesNotNeedBidi(mChars,0,len)) {
    mDir=Layout.DIR_LEFT_TO_RIGHT;
    mEasy=true;
  }
 else {
    if (mLevels == null || mLevels.length < len) {
      mLevels=ArrayUtils.newUnpaddedByteArray(len);
    }
    int bidiRequest;
    if (textDir == TextDirectionHeuristics.LTR) {
      bidiRequest=Layout.DIR_REQUEST_LTR;
    }
 else     if (textDir == TextDirectionHeuristics.RTL) {
      bidiRequest=Layout.DIR_REQUEST_RTL;
    }
 else     if (textDir == TextDirectionHeuristics.FIRSTSTRONG_LTR) {
      bidiRequest=Layout.DIR_REQUEST_DEFAULT_LTR;
    }
 else     if (textDir == TextDirectionHeuristics.FIRSTSTRONG_RTL) {
      bidiRequest=Layout.DIR_REQUEST_DEFAULT_RTL;
    }
 else {
      boolean isRtl=textDir.isRtl(mChars,0,len);
      bidiRequest=isRtl ? Layout.DIR_REQUEST_RTL : Layout.DIR_REQUEST_LTR;
    }
    mDir=AndroidBidi.bidi(bidiRequest,mChars,mLevels,len,false);
    mEasy=false;
  }
}
