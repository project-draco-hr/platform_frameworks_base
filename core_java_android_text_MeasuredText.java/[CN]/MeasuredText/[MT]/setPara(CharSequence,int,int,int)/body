{
  mText=text;
  mTextStart=start;
  int len=end - start;
  mLen=len;
  mPos=0;
  if (mWidths == null || mWidths.length < len) {
    mWidths=new float[ArrayUtils.idealFloatArraySize(len)];
    mWorkWidths=new float[mWidths.length];
  }
  if (mChars == null || mChars.length < len) {
    mChars=new char[ArrayUtils.idealCharArraySize(len)];
  }
  TextUtils.getChars(text,start,end,mChars,0);
  if (text instanceof Spanned) {
    Spanned spanned=(Spanned)text;
    ReplacementSpan[] spans=spanned.getSpans(start,end,ReplacementSpan.class);
    for (int i=0; i < spans.length; i++) {
      int startInPara=spanned.getSpanStart(spans[i]) - start;
      int endInPara=spanned.getSpanEnd(spans[i]) - start;
      for (int j=startInPara; j < endInPara; j++) {
        mChars[j]='\uFFFC';
      }
    }
  }
  if (TextUtils.doesNotNeedBidi(mChars,0,len)) {
    mDir=1;
    mEasy=true;
  }
 else {
    if (mLevels == null || mLevels.length < len) {
      mLevels=new byte[ArrayUtils.idealByteArraySize(len)];
    }
    mDir=AndroidBidi.bidi(bidiRequest,mChars,mLevels,len,false);
    mEasy=false;
    if (mLen > 0) {
      byte[] levels=mLevels;
      char[] chars=mChars;
      byte level=levels[0];
      int pi=0;
      for (int i=1, e=mLen; ; ++i) {
        if (i == e || levels[i] != level) {
          if ((level & 0x1) != 0) {
            AndroidCharacter.mirror(chars,pi,i - pi);
            ArabicShaping.SHAPER.shape(chars,pi,i - pi);
          }
          if (i == e) {
            break;
          }
          pi=i;
          level=levels[i];
        }
      }
    }
  }
}
