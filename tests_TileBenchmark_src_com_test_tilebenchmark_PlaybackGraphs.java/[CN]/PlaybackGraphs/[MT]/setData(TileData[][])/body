{
  mShapes.clear();
  double metricValues[]=new double[tileProfilingData.length];
  if (tileProfilingData.length == 0) {
    return;
  }
  for (int metricIndex=0; metricIndex < Metrics.length; metricIndex++) {
    int lastBar=0;
    for (int frameIndex=0; frameIndex < tileProfilingData.length; frameIndex++) {
      TileData frame[]=tileProfilingData[frameIndex];
      int newBar=(frame[0].y + frame[1].y) / 2;
      MetricGen s=Metrics[metricIndex];
      double absoluteValue=s.getValue(frame);
      double relativeValue=absoluteValue / s.getMax();
      int rightPos=(int)(-BAR_WIDTH * metricIndex);
      int leftPos=(int)(-BAR_WIDTH * (metricIndex + relativeValue));
      ShapeDrawable graphBar=new ShapeDrawable();
      graphBar.getPaint().setColor(Color.BLUE);
      graphBar.setBounds(leftPos,lastBar,rightPos,newBar);
      mShapes.add(graphBar);
      metricValues[frameIndex]=absoluteValue;
      lastBar=newBar;
    }
    Arrays.sort(metricValues);
    for (int statIndex=0; statIndex < Stats.length; statIndex++) {
      mStats[metricIndex][statIndex]=Stats[statIndex].getValue(metricValues);
    }
  }
}
