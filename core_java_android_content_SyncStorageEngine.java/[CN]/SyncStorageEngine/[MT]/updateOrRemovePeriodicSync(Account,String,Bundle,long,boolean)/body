{
  if (period <= 0) {
    period=0;
  }
  if (extras == null) {
    extras=new Bundle();
  }
  if (Log.isLoggable(TAG,Log.VERBOSE)) {
    Log.v(TAG,"addOrRemovePeriodicSync: " + account + ", provider "+ providerName+ " -> period "+ period+ ", extras "+ extras);
  }
synchronized (mAuthorities) {
    try {
      AuthorityInfo authority=getOrCreateAuthorityLocked(account,providerName,-1,false);
      if (add) {
        boolean alreadyPresent=false;
        for (int i=0, N=authority.periodicSyncs.size(); i < N; i++) {
          Pair<Bundle,Long> syncInfo=authority.periodicSyncs.get(i);
          final Bundle existingExtras=syncInfo.first;
          if (equals(existingExtras,extras)) {
            if (syncInfo.second == period) {
              return;
            }
            authority.periodicSyncs.set(i,Pair.create(extras,period));
            alreadyPresent=true;
            break;
          }
        }
        if (!alreadyPresent) {
          authority.periodicSyncs.add(Pair.create(extras,period));
          SyncStatusInfo status=getOrCreateSyncStatusLocked(authority.ident);
          status.setPeriodicSyncTime(authority.periodicSyncs.size() - 1,0);
        }
      }
 else {
        SyncStatusInfo status=mSyncStatus.get(authority.ident);
        boolean changed=false;
        Iterator<Pair<Bundle,Long>> iterator=authority.periodicSyncs.iterator();
        int i=0;
        while (iterator.hasNext()) {
          Pair<Bundle,Long> syncInfo=iterator.next();
          if (equals(syncInfo.first,extras)) {
            iterator.remove();
            changed=true;
            if (status != null) {
              status.removePeriodicSyncTime(i);
            }
          }
 else {
            i++;
          }
        }
        if (!changed) {
          return;
        }
      }
    }
  finally {
      writeAccountInfoLocked();
      writeStatusLocked();
    }
  }
  reportChange(ContentResolver.SYNC_OBSERVER_TYPE_SETTINGS);
}
