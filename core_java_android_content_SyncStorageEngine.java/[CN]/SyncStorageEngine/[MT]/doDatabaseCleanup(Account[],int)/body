{
synchronized (mAuthorities) {
    if (Log.isLoggable(TAG,Log.VERBOSE))     Log.w(TAG,"Updating for new accounts...");
    SparseArray<AuthorityInfo> removing=new SparseArray<AuthorityInfo>();
    Iterator<AccountInfo> accIt=mAccounts.values().iterator();
    while (accIt.hasNext()) {
      AccountInfo acc=accIt.next();
      if (!ArrayUtils.contains(accounts,acc.accountAndUser.account) && acc.accountAndUser.userId == userId) {
        if (Log.isLoggable(TAG,Log.VERBOSE)) {
          Log.w(TAG,"Account removed: " + acc.accountAndUser);
        }
        for (        AuthorityInfo auth : acc.authorities.values()) {
          removing.put(auth.ident,auth);
        }
        accIt.remove();
      }
    }
    int i=removing.size();
    if (i > 0) {
      while (i > 0) {
        i--;
        int ident=removing.keyAt(i);
        mAuthorities.remove(ident);
        int j=mSyncStatus.size();
        while (j > 0) {
          j--;
          if (mSyncStatus.keyAt(j) == ident) {
            mSyncStatus.remove(mSyncStatus.keyAt(j));
          }
        }
        j=mSyncHistory.size();
        while (j > 0) {
          j--;
          if (mSyncHistory.get(j).authorityId == ident) {
            mSyncHistory.remove(j);
          }
        }
      }
      writeAccountInfoLocked();
      writeStatusLocked();
      writePendingOperationsLocked();
      writeStatisticsLocked();
    }
  }
}
