{
  int highestAuthorityId=-1;
  FileInputStream fis=null;
  try {
    fis=mAccountInfoFile.openRead();
    if (DEBUG_FILE)     Log.v(TAG,"Reading " + mAccountInfoFile.getBaseFile());
    XmlPullParser parser=Xml.newPullParser();
    parser.setInput(fis,null);
    int eventType=parser.getEventType();
    while (eventType != XmlPullParser.START_TAG) {
      eventType=parser.next();
    }
    String tagName=parser.getName();
    if ("accounts".equals(tagName)) {
      String listen=parser.getAttributeValue(null,"listen-for-tickles");
      String versionString=parser.getAttributeValue(null,"version");
      int version;
      try {
        version=(versionString == null) ? 0 : Integer.parseInt(versionString);
      }
 catch (      NumberFormatException e) {
        version=0;
      }
      String nextIdString=parser.getAttributeValue(null,"nextAuthorityId");
      try {
        int id=(nextIdString == null) ? 0 : Integer.parseInt(nextIdString);
        mNextAuthorityId=Math.max(mNextAuthorityId,id);
      }
 catch (      NumberFormatException e) {
      }
      mMasterSyncAutomatically=listen == null || Boolean.parseBoolean(listen);
      eventType=parser.next();
      AuthorityInfo authority=null;
      Pair<Bundle,Long> periodicSync=null;
      do {
        if (eventType == XmlPullParser.START_TAG) {
          tagName=parser.getName();
          if (parser.getDepth() == 2) {
            if ("authority".equals(tagName)) {
              authority=parseAuthority(parser,version);
              periodicSync=null;
              if (authority.ident > highestAuthorityId) {
                highestAuthorityId=authority.ident;
              }
            }
          }
 else           if (parser.getDepth() == 3) {
            if ("periodicSync".equals(tagName) && authority != null) {
              periodicSync=parsePeriodicSync(parser,authority);
            }
          }
 else           if (parser.getDepth() == 4 && periodicSync != null) {
            if ("extra".equals(tagName)) {
              parseExtra(parser,periodicSync);
            }
          }
        }
        eventType=parser.next();
      }
 while (eventType != XmlPullParser.END_DOCUMENT);
    }
  }
 catch (  XmlPullParserException e) {
    Log.w(TAG,"Error reading accounts",e);
    return;
  }
catch (  java.io.IOException e) {
    if (fis == null)     Log.i(TAG,"No initial accounts");
 else     Log.w(TAG,"Error reading accounts",e);
    return;
  }
 finally {
    mNextAuthorityId=Math.max(highestAuthorityId + 1,mNextAuthorityId);
    if (fis != null) {
      try {
        fis.close();
      }
 catch (      java.io.IOException e1) {
      }
    }
  }
  maybeMigrateSettingsForRenamedAuthorities();
}
