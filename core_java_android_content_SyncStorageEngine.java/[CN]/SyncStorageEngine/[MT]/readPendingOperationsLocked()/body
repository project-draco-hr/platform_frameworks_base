{
  if (DEBUG_FILE)   Log.v(TAG,"Reading " + mPendingFile.getBaseFile());
  try {
    byte[] data=mPendingFile.readFully();
    Parcel in=Parcel.obtain();
    in.unmarshall(data,0,data.length);
    in.setDataPosition(0);
    final int SIZE=in.dataSize();
    while (in.dataPosition() < SIZE) {
      int version=in.readInt();
      if (version != PENDING_OPERATION_VERSION) {
        Log.w(TAG,"Unknown pending operation version " + version + "; dropping all ops");
        break;
      }
      int authorityId=in.readInt();
      int syncSource=in.readInt();
      byte[] flatExtras=in.createByteArray();
      AuthorityInfo authority=mAuthorities.get(authorityId);
      if (authority != null) {
        Bundle extras=null;
        if (flatExtras != null) {
          extras=unflattenBundle(flatExtras);
        }
        PendingOperation op=new PendingOperation(authority.account,syncSource,authority.authority,extras);
        op.authorityId=authorityId;
        op.flatExtras=flatExtras;
        if (DEBUG_FILE)         Log.v(TAG,"Adding pending op: account=" + op.account + " auth="+ op.authority+ " src="+ op.syncSource+ " extras="+ op.extras);
        mPendingOperations.add(op);
      }
    }
  }
 catch (  java.io.IOException e) {
    Log.i(TAG,"No initial pending operations");
  }
}
