{
  super.onCreate(savedInstanceState);
  setContentView(R.layout.demo);
  mRecognizer=new GestureLib("/sdcard/gestureentry");
  mRecognizer.load();
  mResult=(Spinner)findViewById(R.id.spinner);
  mResult.setOnItemSelectedListener(new OnItemSelectedListener(){
    public void onItemSelected(    AdapterView<?> parent,    View view,    int position,    long id){
      if (mChangedByRecognizer == false) {
        mRecognizer.addGesture(parent.getSelectedItem().toString(),mView.getCurrentGesture());
      }
 else {
        mChangedByRecognizer=false;
      }
    }
    public void onNothingSelected(    AdapterView<?> parent){
    }
  }
);
  mView=(GesturePad)this.findViewById(R.id.drawingpad);
  mView.cacheGesture(false);
  mView.setFadingOut(false);
  mView.addGestureListener(new GestureListener(){
    public void onFinishGesture(    GesturePad patch,    MotionEvent event){
      recognize(patch.getCurrentGesture());
    }
    public void onGesture(    GesturePad patch,    MotionEvent event){
    }
    public void onStartGesture(    GesturePad patch,    MotionEvent event){
    }
  }
);
  if (savedInstanceState != null) {
    mView.setCurrentGesture((Gesture)savedInstanceState.getParcelable("gesture"));
  }
}
