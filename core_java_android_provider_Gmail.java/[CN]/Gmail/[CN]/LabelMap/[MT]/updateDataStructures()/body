{
  mSortedUserLabels.clear();
  mCanonicalNameToId.clear();
  for (  Map.Entry<String,ContentValues> row : mQueryMap.getRows().entrySet()) {
    long labelId=Long.valueOf(row.getKey());
    String canonicalName=row.getValue().getAsString(LabelColumns.CANONICAL_NAME);
    if (isLabelUserDefined(canonicalName)) {
      mSortedUserLabels.add(canonicalName);
    }
    mCanonicalNameToId.put(canonicalName,labelId);
    if (LABEL_SENT.equals(canonicalName)) {
      mLabelIdSent=labelId;
    }
 else     if (LABEL_INBOX.equals(canonicalName)) {
      mLabelIdInbox=labelId;
    }
 else     if (LABEL_DRAFT.equals(canonicalName)) {
      mLabelIdDraft=labelId;
    }
 else     if (LABEL_UNREAD.equals(canonicalName)) {
      mLabelIdUnread=labelId;
    }
 else     if (LABEL_TRASH.equals(canonicalName)) {
      mLabelIdTrash=labelId;
    }
 else     if (LABEL_SPAM.equals(canonicalName)) {
      mLabelIdSpam=labelId;
    }
 else     if (LABEL_STARRED.equals(canonicalName)) {
      mLabelIdStarred=labelId;
    }
 else     if (LABEL_CHAT.equals(canonicalName)) {
      mLabelIdChat=labelId;
    }
 else     if (LABEL_VOICEMAIL.equals(canonicalName)) {
      mLabelIdVoicemail=labelId;
    }
 else     if (LABEL_VOICEMAIL_INBOX.equals(canonicalName)) {
      mLabelIdVoicemailInbox=labelId;
    }
 else     if (LABEL_CACHED.equals(canonicalName)) {
      mLabelIdCached=labelId;
    }
 else     if (LABEL_OUTBOX.equals(canonicalName)) {
      mLabelIdOutbox=labelId;
    }
    mLabelsSynced=mLabelIdSent != 0 && mLabelIdInbox != 0 && mLabelIdDraft != 0 && mLabelIdUnread != 0 && mLabelIdTrash != 0 && mLabelIdSpam != 0 && mLabelIdStarred != 0 && mLabelIdChat != 0 && mLabelIdVoicemail != 0;
  }
}
