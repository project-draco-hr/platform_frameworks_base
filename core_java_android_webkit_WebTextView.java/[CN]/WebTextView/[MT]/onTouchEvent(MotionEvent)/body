{
switch (event.getAction()) {
case MotionEvent.ACTION_DOWN:
    super.onTouchEvent(event);
  mDragStartX=event.getX();
mDragStartY=event.getY();
mDragStartTime=event.getEventTime();
mDragSent=false;
mScrolled=false;
mGotTouchDown=true;
break;
case MotionEvent.ACTION_MOVE:
int slop=ViewConfiguration.get(mContext).getScaledTouchSlop();
Spannable buffer=getText();
int initialScrollX=Touch.getInitialScrollX(this,buffer);
int initialScrollY=Touch.getInitialScrollY(this,buffer);
super.onTouchEvent(event);
int dx=Math.abs(mScrollX - initialScrollX);
int dy=Math.abs(mScrollY - initialScrollY);
int smallerSlop=slop / 2;
if (dx > smallerSlop || dy > smallerSlop) {
if (mWebView != null) {
mWebView.scrollFocusedTextInput(mScrollX,mScrollY);
}
mScrolled=true;
return true;
}
if (Math.abs((int)event.getX() - mDragStartX) < slop && Math.abs((int)event.getY() - mDragStartY) < slop) {
return true;
}
if (mWebView != null) {
if (!mDragSent) {
mWebView.initiateTextFieldDrag(mDragStartX,mDragStartY,mDragStartTime);
mDragSent=true;
}
boolean scrolled=mWebView.textFieldDrag(event);
if (scrolled) {
mScrolled=true;
cancelLongPress();
return true;
}
}
return false;
case MotionEvent.ACTION_UP:
case MotionEvent.ACTION_CANCEL:
if (!mScrolled) {
cancelLongPress();
if (mGotTouchDown && mWebView != null) {
mWebView.touchUpOnTextField(event);
}
}
if (mWebView != null && mDragSent) {
mWebView.onTouchEvent(event);
}
mGotTouchDown=false;
break;
default :
break;
}
return true;
}
