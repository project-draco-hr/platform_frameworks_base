{
  Tracer.trace(packageName,timeout);
  if (packageName != null) {
    if (!packageName.equals(getCurrentPackageName())) {
      return false;
    }
  }
  Runnable emptyRunnable=new Runnable(){
    @Override public void run(){
    }
  }
;
  AccessibilityEventFilter checkWindowUpdate=new AccessibilityEventFilter(){
    @Override public boolean accept(    AccessibilityEvent t){
      if (t.getEventType() == AccessibilityEvent.TYPE_WINDOW_CONTENT_CHANGED) {
        return packageName == null || packageName.equals(t.getPackageName());
      }
      return false;
    }
  }
;
  try {
    getAutomatorBridge().executeCommandAndWaitForAccessibilityEvent(emptyRunnable,checkWindowUpdate,timeout);
  }
 catch (  TimeoutException e) {
    return false;
  }
catch (  Exception e) {
    Log.e(LOG_TAG,"waitForWindowUpdate: general exception from bridge",e);
    return false;
  }
  return true;
}
