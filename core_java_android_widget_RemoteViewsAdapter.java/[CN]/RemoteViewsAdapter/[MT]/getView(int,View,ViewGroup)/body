{
synchronized (mCache) {
    boolean isInCache=mCache.containsRemoteViewAt(position);
    boolean isConnected=mServiceConnection.isConnected();
    boolean hasNewItems=false;
    if (!isInCache && !isConnected) {
      requestBindService();
    }
 else {
      hasNewItems=mCache.queuePositionsToBePreloadedFromRequestedPosition(position);
    }
    if (isInCache) {
      View convertViewChild=null;
      int convertViewTypeId=0;
      RemoteViewsFrameLayout layout=null;
      if (convertView instanceof RemoteViewsFrameLayout) {
        layout=(RemoteViewsFrameLayout)convertView;
        convertViewChild=layout.getChildAt(0);
        convertViewTypeId=getConvertViewTypeId(convertViewChild);
      }
      Context context=parent.getContext();
      RemoteViews rv=mCache.getRemoteViewsAt(position);
      RemoteViewsIndexMetaData indexMetaData=mCache.getMetaDataAt(position);
      indexMetaData.isRequested=true;
      int typeId=indexMetaData.typeId;
      try {
        if (layout != null) {
          if (convertViewTypeId == typeId) {
            rv.reapply(context,convertViewChild);
            return layout;
          }
          layout.removeAllViews();
        }
 else {
          layout=new RemoteViewsFrameLayout(context);
        }
        View newView=rv.apply(context,parent);
        newView.setTagInternal(com.android.internal.R.id.rowTypeId,new Integer(typeId));
        layout.addView(newView);
        return layout;
      }
 catch (      Exception e) {
        Log.w(TAG,"Error inflating RemoteViews at position: " + position + ", using"+ "loading view instead"+ e);
        RemoteViewsFrameLayout loadingView=null;
        final RemoteViewsMetaData metaData=mCache.getMetaData();
synchronized (metaData) {
          loadingView=metaData.createLoadingView(position,convertView,parent,mCache,mLayoutInflater);
        }
        return loadingView;
      }
 finally {
        if (hasNewItems)         loadNextIndexInBackground();
      }
    }
 else {
      RemoteViewsFrameLayout loadingView=null;
      final RemoteViewsMetaData metaData=mCache.getMetaData();
synchronized (metaData) {
        loadingView=metaData.createLoadingView(position,convertView,parent,mCache,mLayoutInflater);
      }
      mRequestedViews.add(position,loadingView);
      mCache.queueRequestedPositionToLoad(position);
      loadNextIndexInBackground();
      return loadingView;
    }
  }
}
