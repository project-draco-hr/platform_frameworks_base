{
  mContext=context;
  mIntent=intent;
  mAppWidgetId=intent.getIntExtra(RemoteViews.EXTRA_REMOTEADAPTER_APPWIDGET_ID,-1);
  mLayoutInflater=LayoutInflater.from(context);
  if (mIntent == null) {
    throw new IllegalArgumentException("Non-null Intent must be specified.");
  }
  mRequestedViews=new RemoteViewsFrameLayoutRefSet();
  if (Process.myUid() == Process.SYSTEM_UID) {
    mUserId=new LockPatternUtils(context).getCurrentUser();
  }
 else {
    mUserId=UserHandle.myUserId();
  }
  if (intent.hasExtra(RemoteViews.EXTRA_REMOTEADAPTER_APPWIDGET_ID)) {
    intent.removeExtra(RemoteViews.EXTRA_REMOTEADAPTER_APPWIDGET_ID);
  }
  mWorkerThread=new HandlerThread("RemoteViewsCache-loader");
  mWorkerThread.start();
  mWorkerQueue=new Handler(mWorkerThread.getLooper());
  mMainQueue=new Handler(Looper.myLooper(),this);
  if (sCacheRemovalThread == null) {
    sCacheRemovalThread=new HandlerThread("RemoteViewsAdapter-cachePruner");
    sCacheRemovalThread.start();
    sCacheRemovalQueue=new Handler(sCacheRemovalThread.getLooper());
  }
  mCallback=new WeakReference<RemoteAdapterConnectionCallback>(callback);
  mServiceConnection=new RemoteViewsAdapterServiceConnection(this);
  Pair<Intent.FilterComparison,Integer> key=new Pair<Intent.FilterComparison,Integer>(new Intent.FilterComparison(mIntent),mAppWidgetId);
synchronized (sCachedRemoteViewsCaches) {
    if (sCachedRemoteViewsCaches.containsKey(key)) {
      mCache=sCachedRemoteViewsCaches.get(key);
synchronized (mCache.mMetaData) {
        if (mCache.mMetaData.count > 0) {
          mDataReady=true;
        }
      }
    }
 else {
      mCache=new FixedSizeRemoteViewsCache(sDefaultCacheSize);
    }
    if (!mDataReady) {
      requestBindService();
    }
  }
}
