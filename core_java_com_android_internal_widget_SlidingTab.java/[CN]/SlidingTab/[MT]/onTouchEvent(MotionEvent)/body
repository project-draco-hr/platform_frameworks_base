{
  if (mTracking) {
    final int action=event.getAction();
    final float x=event.getX();
    final float y=event.getY();
    final View handle=mCurrentSlider.tab;
switch (action) {
case MotionEvent.ACTION_MOVE:
      moveHandle(x,y);
    float position=isHorizontal() ? x : y;
  float target=mThreshold * (isHorizontal() ? getWidth() : getHeight());
boolean thresholdReached;
if (isHorizontal()) {
thresholdReached=mCurrentSlider == mLeftSlider ? position > target : position < target;
}
 else {
thresholdReached=mCurrentSlider == mLeftSlider ? position < target : position > target;
}
if (!mTriggered && thresholdReached) {
mTriggered=true;
mTracking=false;
mCurrentSlider.setState(Slider.STATE_ACTIVE);
dispatchTriggerEvent(mCurrentSlider == mLeftSlider ? OnTriggerListener.LEFT_HANDLE : OnTriggerListener.RIGHT_HANDLE);
setGrabbedState(OnTriggerListener.NO_HANDLE);
mAnimating=true;
mHandler.postDelayed(new Runnable(){
public void run(){
  resetView();
  mAnimating=false;
}
}
,ANIMATION_DURATION);
}
if (isHorizontal() && (y <= handle.getBottom() && y >= handle.getTop()) || !isHorizontal() && (x >= handle.getLeft() && x <= handle.getRight())) {
break;
}
case MotionEvent.ACTION_UP:
case MotionEvent.ACTION_CANCEL:
mTracking=false;
mTriggered=false;
resetView();
setGrabbedState(OnTriggerListener.NO_HANDLE);
break;
}
}
return mTracking || super.onTouchEvent(event);
}
