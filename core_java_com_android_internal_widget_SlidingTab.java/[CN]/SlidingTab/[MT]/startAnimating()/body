{
  mAnimating=true;
  final Animation appear=new AlphaAnimation(0.5f,1.0f);
  appear.setDuration(ANIM_DURATION);
  final Animation trans;
  Slider slider=mCurrentSlider;
  int dx;
  int dy;
  if (isHorizontal()) {
    int right=slider.tab.getRight();
    int width=slider.tab.getWidth();
    int left=slider.tab.getLeft();
    int viewWidth=getWidth();
    dx=slider == mRightSlider ? -(right + viewWidth - width) : (viewWidth - left) + viewWidth - width;
    dy=0;
  }
 else {
    int top=slider.tab.getTop();
    int bottom=slider.tab.getBottom();
    int height=slider.tab.getHeight();
    int viewHeight=getHeight();
    dx=0;
    dy=slider == mRightSlider ? (top + viewHeight - height) : -((viewHeight - bottom) + viewHeight - height);
  }
  trans=new TranslateAnimation(0,dx,0,dy);
  trans.setDuration(ANIM_DURATION);
  trans.setInterpolator(new LinearInterpolator());
  trans.setAnimationListener(new AnimationListener(){
    public void onAnimationEnd(    Animation animation){
      resetView();
      mLeftSlider.startAnimation(appear);
      mRightSlider.startAnimation(appear);
      mAnimating=false;
    }
    public void onAnimationRepeat(    Animation animation){
    }
    public void onAnimationStart(    Animation animation){
    }
  }
);
  slider.startAnimation(trans);
}
