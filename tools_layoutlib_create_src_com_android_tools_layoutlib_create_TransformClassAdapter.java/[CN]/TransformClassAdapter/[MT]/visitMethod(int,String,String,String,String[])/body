{
  if (mDeleteReturns != null) {
    Type t=Type.getReturnType(desc);
    if (t.getSort() == Type.OBJECT) {
      String returnType=t.getInternalName();
      if (returnType != null) {
        if (mDeleteReturns.contains(returnType)) {
          return null;
        }
      }
    }
  }
  String methodSignature=mClassName.replace('/','.') + "#" + name;
  access&=~(Opcodes.ACC_PROTECTED | Opcodes.ACC_PRIVATE);
  access|=Opcodes.ACC_PUBLIC;
  access=access & ~Opcodes.ACC_FINAL;
  if (!mIsInterface && ((access & (Opcodes.ACC_ABSTRACT | Opcodes.ACC_NATIVE)) != Opcodes.ACC_ABSTRACT) && (mStubAll || (access & Opcodes.ACC_NATIVE) != 0) || mStubMethods.contains(methodSignature)) {
    access=access & ~(Opcodes.ACC_ABSTRACT | Opcodes.ACC_FINAL | Opcodes.ACC_NATIVE);
    boolean isStatic=(access & Opcodes.ACC_STATIC) != 0;
    String invokeSignature=methodSignature + desc;
    mLog.debug("  Stub: %s",invokeSignature);
    MethodVisitor mw=super.visitMethod(access,name,desc,signature,exceptions);
    return new StubMethodAdapter(mw,name,returnType(desc),invokeSignature,isStatic);
  }
 else {
    mLog.debug("  Keep: %s %s",name,desc);
    return super.visitMethod(access,name,desc,signature,exceptions);
  }
}
