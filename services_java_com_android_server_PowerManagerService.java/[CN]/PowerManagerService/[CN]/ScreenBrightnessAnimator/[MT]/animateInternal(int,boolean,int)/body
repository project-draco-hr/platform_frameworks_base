{
synchronized (this) {
    if (currentValue != endValue) {
      final long now=SystemClock.elapsedRealtime();
      final int elapsed=(int)(now - startTimeMillis);
      int newValue;
      if (elapsed < duration) {
        int delta=endValue - startValue;
        newValue=startValue + delta * elapsed / duration;
        newValue=Math.max(PowerManager.BRIGHTNESS_OFF,newValue);
        newValue=Math.min(PowerManager.BRIGHTNESS_ON,newValue);
      }
 else {
        newValue=endValue;
        mInitialAnimation=false;
      }
      if (mDebugLightAnimation) {
        Log.v(TAG,"Animating light: " + "start:" + startValue + ", end:"+ endValue+ ", elapsed:"+ elapsed+ ", duration:"+ duration+ ", current:"+ currentValue+ ", delay:"+ delay);
      }
      if (turningOff && !mHeadless && !mAnimateScreenLights) {
        int mode=mScreenOffReason == OFF_BECAUSE_OF_PROX_SENSOR ? 0 : mAnimationSetting;
        if (mDebugLightAnimation)         Log.v(TAG,"Doing power-off anim, mode=" + mode);
        mScreenBrightnessHandler.obtainMessage(ANIMATE_POWER_OFF,mode,0).sendToTarget();
      }
      Message msg=mScreenBrightnessHandler.obtainMessage(ANIMATE_LIGHTS,mask,newValue);
      mScreenBrightnessHandler.sendMessageDelayed(msg,delay);
    }
  }
}
