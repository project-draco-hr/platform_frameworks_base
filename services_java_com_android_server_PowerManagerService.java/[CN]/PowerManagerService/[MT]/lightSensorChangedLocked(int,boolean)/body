{
  if (mDebugLightSensor) {
    Slog.d(TAG,"lightSensorChangedLocked value=" + value + " immediate="+ immediate);
  }
  if ((mPowerState & SCREEN_ON_BIT) == 0) {
    if (mDebugLightSensor) {
      Slog.d(TAG,"dropping lightSensorChangedLocked because screen is off");
    }
    return;
  }
  final int stepsToTargetLevel;
  if (mHighestLightSensorValue <= value) {
    stepsToTargetLevel=AUTOBRIGHTNESS_ANIM_STEPS;
  }
 else {
    stepsToTargetLevel=AUTODIMNESS_ANIM_STEPS;
  }
  if (mLightSensorValue != value) {
    mLightSensorValue=value;
    if ((mPowerState & BATTERY_LOW_BIT) == 0) {
      int lcdValue=getAutoBrightnessValue(value,mLcdBacklightValues);
      int buttonValue=getAutoBrightnessValue(value,mButtonBacklightValues);
      int keyboardValue;
      if (mKeyboardVisible) {
        keyboardValue=getAutoBrightnessValue(value,mKeyboardBacklightValues);
      }
 else {
        keyboardValue=0;
      }
      mLightSensorScreenBrightness=lcdValue;
      mLightSensorButtonBrightness=buttonValue;
      mLightSensorKeyboardBrightness=keyboardValue;
      if (mDebugLightSensor) {
        Slog.d(TAG,"lcdValue " + lcdValue);
        Slog.d(TAG,"buttonValue " + buttonValue);
        Slog.d(TAG,"keyboardValue " + keyboardValue);
      }
      if (mAutoBrightessEnabled && mScreenBrightnessOverride < 0) {
        if (!mSkippedScreenOn && !mInitialAnimation) {
          int steps=immediate ? IMMEDIATE_ANIM_STEPS : stepsToTargetLevel;
          mScreenBrightnessAnimator.animateTo(lcdValue,value,SCREEN_BRIGHT_BIT,steps * NOMINAL_FRAME_TIME_MS);
        }
      }
      if (mButtonBrightnessOverride < 0) {
        mButtonLight.setBrightness(buttonValue);
      }
      if (mButtonBrightnessOverride < 0 || !mKeyboardVisible) {
        mKeyboardLight.setBrightness(keyboardValue);
      }
    }
  }
}
