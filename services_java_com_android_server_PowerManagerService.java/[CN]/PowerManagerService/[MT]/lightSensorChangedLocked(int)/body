{
  if (mDebugLightSensor) {
    Log.d(TAG,"lightSensorChangedLocked " + value);
  }
  if (mLightSensorValue != value) {
    mLightSensorValue=value;
    if ((mPowerState & BATTERY_LOW_BIT) == 0) {
      int lcdValue=getAutoBrightnessValue(value,mLcdBacklightValues);
      int buttonValue=getAutoBrightnessValue(value,mButtonBacklightValues);
      int keyboardValue;
      if (mKeyboardVisible) {
        keyboardValue=getAutoBrightnessValue(value,mKeyboardBacklightValues);
      }
 else {
        keyboardValue=0;
      }
      mLightSensorBrightness=lcdValue;
      if (mDebugLightSensor) {
        Log.d(TAG,"lcdValue " + lcdValue);
        Log.d(TAG,"buttonValue " + buttonValue);
        Log.d(TAG,"keyboardValue " + keyboardValue);
      }
      boolean startAnimation=false;
      if (mAutoBrightessEnabled && mScreenBrightnessOverride < 0) {
        if (ANIMATE_SCREEN_LIGHTS) {
          if (mScreenBrightness.setTargetLocked(lcdValue,AUTOBRIGHTNESS_ANIM_STEPS,INITIAL_SCREEN_BRIGHTNESS,(int)mScreenBrightness.curValue)) {
            startAnimation=true;
          }
        }
 else {
          mHardware.setLightBrightness_UNCHECKED(HardwareService.LIGHT_ID_BACKLIGHT,lcdValue);
        }
      }
      if (ANIMATE_BUTTON_LIGHTS) {
        if (mButtonBrightness.setTargetLocked(buttonValue,AUTOBRIGHTNESS_ANIM_STEPS,INITIAL_BUTTON_BRIGHTNESS,(int)mButtonBrightness.curValue)) {
          startAnimation=true;
        }
      }
 else {
        mHardware.setLightBrightness_UNCHECKED(HardwareService.LIGHT_ID_BUTTONS,buttonValue);
      }
      if (ANIMATE_KEYBOARD_LIGHTS) {
        if (mKeyboardBrightness.setTargetLocked(keyboardValue,AUTOBRIGHTNESS_ANIM_STEPS,INITIAL_BUTTON_BRIGHTNESS,(int)mKeyboardBrightness.curValue)) {
          startAnimation=true;
        }
      }
 else {
        mHardware.setLightBrightness_UNCHECKED(HardwareService.LIGHT_ID_KEYBOARD,keyboardValue);
      }
      if (startAnimation) {
        if (mDebugLightSensor) {
          Log.i(TAG,"lightSensorChangedLocked scheduling light animator");
        }
        mHandler.removeCallbacks(mLightAnimator);
        mHandler.post(mLightAnimator);
      }
    }
  }
}
