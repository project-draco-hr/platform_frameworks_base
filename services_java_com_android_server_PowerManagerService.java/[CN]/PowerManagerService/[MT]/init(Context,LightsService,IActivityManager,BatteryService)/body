{
  mLightsService=lights;
  mContext=context;
  mActivityService=activity;
  mBatteryStats=BatteryStatsService.getService();
  mBatteryService=battery;
  mLcdLight=lights.getLight(LightsService.LIGHT_ID_BACKLIGHT);
  mButtonLight=lights.getLight(LightsService.LIGHT_ID_BUTTONS);
  mKeyboardLight=lights.getLight(LightsService.LIGHT_ID_KEYBOARD);
  mAttentionLight=lights.getLight(LightsService.LIGHT_ID_ATTENTION);
  nativeInit();
synchronized (mLocks) {
    updateNativePowerStateLocked();
  }
  mInitComplete=false;
  mScreenOffThread=new HandlerThread("PowerManagerService.mScreenOffThread"){
    @Override protected void onLooperPrepared(){
      mScreenOffHandler=new Handler();
synchronized (mScreenOffThread) {
        mInitComplete=true;
        mScreenOffThread.notifyAll();
      }
    }
  }
;
  mScreenOffThread.start();
synchronized (mScreenOffThread) {
    while (!mInitComplete) {
      try {
        mScreenOffThread.wait();
      }
 catch (      InterruptedException e) {
      }
    }
  }
  mInitComplete=false;
  mHandlerThread=new HandlerThread("PowerManagerService"){
    @Override protected void onLooperPrepared(){
      super.onLooperPrepared();
      initInThread();
    }
  }
;
  mHandlerThread.start();
synchronized (mHandlerThread) {
    while (!mInitComplete) {
      try {
        mHandlerThread.wait();
      }
 catch (      InterruptedException e) {
      }
    }
  }
  nativeInit();
synchronized (mLocks) {
    updateNativePowerStateLocked();
  }
}
