{
  mHandler=new Handler();
  mBroadcastWakeLock=new UnsynchronizedWakeLock(PowerManager.PARTIAL_WAKE_LOCK,"sleep_broadcast",true);
  mStayOnWhilePluggedInScreenDimLock=new UnsynchronizedWakeLock(PowerManager.SCREEN_DIM_WAKE_LOCK,"StayOnWhilePluggedIn Screen Dim",false);
  mStayOnWhilePluggedInPartialLock=new UnsynchronizedWakeLock(PowerManager.PARTIAL_WAKE_LOCK,"StayOnWhilePluggedIn Partial",false);
  mPreventScreenOnPartialLock=new UnsynchronizedWakeLock(PowerManager.PARTIAL_WAKE_LOCK,"PreventScreenOn Partial",false);
  mProximityPartialLock=new UnsynchronizedWakeLock(PowerManager.PARTIAL_WAKE_LOCK,"Proximity Partial",false);
  mScreenOnIntent=new Intent(Intent.ACTION_SCREEN_ON);
  mScreenOnIntent.addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY);
  mScreenOffIntent=new Intent(Intent.ACTION_SCREEN_OFF);
  mScreenOffIntent.addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY);
  Resources resources=mContext.getResources();
  mAnimateScreenLights=resources.getBoolean(com.android.internal.R.bool.config_animateScreenLights);
  mUnplugTurnsOnScreen=resources.getBoolean(com.android.internal.R.bool.config_unplugTurnsOnScreen);
  mUseSoftwareAutoBrightness=resources.getBoolean(com.android.internal.R.bool.config_automatic_brightness_available);
  if (mUseSoftwareAutoBrightness) {
    mAutoBrightnessLevels=resources.getIntArray(com.android.internal.R.array.config_autoBrightnessLevels);
    mLcdBacklightValues=resources.getIntArray(com.android.internal.R.array.config_autoBrightnessLcdBacklightValues);
    mButtonBacklightValues=resources.getIntArray(com.android.internal.R.array.config_autoBrightnessButtonBacklightValues);
    mKeyboardBacklightValues=resources.getIntArray(com.android.internal.R.array.config_autoBrightnessKeyboardBacklightValues);
    mLightSensorWarmupTime=resources.getInteger(com.android.internal.R.integer.config_lightSensorWarmupTime);
  }
  ContentResolver resolver=mContext.getContentResolver();
  Cursor settingsCursor=resolver.query(Settings.System.CONTENT_URI,null,"(" + Settings.System.NAME + "=?) or ("+ Settings.System.NAME+ "=?) or ("+ Settings.System.NAME+ "=?) or ("+ Settings.System.NAME+ "=?) or ("+ Settings.System.NAME+ "=?) or ("+ Settings.System.NAME+ "=?)",new String[]{STAY_ON_WHILE_PLUGGED_IN,SCREEN_OFF_TIMEOUT,DIM_SCREEN,SCREEN_BRIGHTNESS_MODE,WINDOW_ANIMATION_SCALE,TRANSITION_ANIMATION_SCALE},null);
  mSettings=new ContentQueryMap(settingsCursor,Settings.System.NAME,true,mHandler);
  SettingsObserver settingsObserver=new SettingsObserver();
  mSettings.addObserver(settingsObserver);
  settingsObserver.update(mSettings,null);
  IntentFilter filter=new IntentFilter();
  filter.addAction(Intent.ACTION_BATTERY_CHANGED);
  mContext.registerReceiver(new BatteryReceiver(),filter);
  filter=new IntentFilter();
  filter.addAction(Intent.ACTION_BOOT_COMPLETED);
  mContext.registerReceiver(new BootCompletedReceiver(),filter);
  filter=new IntentFilter();
  filter.addAction(Intent.ACTION_DOCK_EVENT);
  mContext.registerReceiver(new DockReceiver(),filter);
  mContext.getContentResolver().registerContentObserver(Settings.Secure.CONTENT_URI,true,new ContentObserver(new Handler()){
    public void onChange(    boolean selfChange){
      updateSettingsValues();
    }
  }
);
  updateSettingsValues();
synchronized (mHandlerThread) {
    mInitComplete=true;
    mHandlerThread.notifyAll();
  }
}
