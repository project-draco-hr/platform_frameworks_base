{
  mContext.enforceCallingOrSelfPermission(android.Manifest.permission.DEVICE_POWER,null);
synchronized (mLocks) {
    if (prevent) {
      mPreventScreenOnPartialLock.acquire();
      mHandler.removeCallbacks(mForceReenableScreenTask);
      mHandler.postDelayed(mForceReenableScreenTask,5000);
      mPreventScreenOn=true;
    }
 else {
      mPreventScreenOn=false;
      mHandler.removeCallbacks(mForceReenableScreenTask);
      if ((mPowerState & SCREEN_ON_BIT) != 0) {
        if (mSpew) {
          Log.d(TAG,"preventScreenOn: turning on after a prior preventScreenOn(true)!");
        }
        int err=Power.setScreenState(true);
        if (err != 0) {
          Log.w(TAG,"preventScreenOn: error from Power.setScreenState(): " + err);
        }
      }
      mPreventScreenOnPartialLock.release();
    }
  }
}
