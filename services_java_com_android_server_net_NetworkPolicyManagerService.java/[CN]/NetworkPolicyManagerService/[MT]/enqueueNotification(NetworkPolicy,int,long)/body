{
  final String tag=buildNotificationTag(policy,type);
  final Notification.Builder builder=new Notification.Builder(mContext);
  builder.setOnlyAlertOnce(true);
  builder.setOngoing(true);
  final Resources res=mContext.getResources();
switch (type) {
case TYPE_WARNING:
{
      final CharSequence title=res.getText(R.string.data_usage_warning_title);
      final CharSequence body=res.getString(R.string.data_usage_warning_body);
      builder.setSmallIcon(R.drawable.stat_notify_error);
      builder.setTicker(title);
      builder.setContentTitle(title);
      builder.setContentText(body);
      final Intent intent=buildViewDataUsageIntent(policy.template);
      builder.setContentIntent(PendingIntent.getActivity(mContext,0,intent,PendingIntent.FLAG_UPDATE_CURRENT));
      break;
    }
case TYPE_LIMIT:
{
    final CharSequence body=res.getText(R.string.data_usage_limit_body);
    final CharSequence title;
switch (policy.template.getMatchRule()) {
case MATCH_MOBILE_3G_LOWER:
      title=res.getText(R.string.data_usage_3g_limit_title);
    break;
case MATCH_MOBILE_4G:
  title=res.getText(R.string.data_usage_4g_limit_title);
break;
case MATCH_MOBILE_ALL:
title=res.getText(R.string.data_usage_mobile_limit_title);
break;
case MATCH_WIFI:
title=res.getText(R.string.data_usage_wifi_limit_title);
break;
default :
title=null;
break;
}
builder.setSmallIcon(R.drawable.stat_notify_disabled);
builder.setTicker(title);
builder.setContentTitle(title);
builder.setContentText(body);
final Intent intent=buildNetworkOverLimitIntent(policy.template);
builder.setContentIntent(PendingIntent.getActivity(mContext,0,intent,PendingIntent.FLAG_UPDATE_CURRENT));
break;
}
case TYPE_LIMIT_SNOOZED:
{
final long overBytes=totalBytes - policy.limitBytes;
final CharSequence body=res.getString(R.string.data_usage_limit_snoozed_body,Formatter.formatFileSize(mContext,overBytes));
final CharSequence title;
switch (policy.template.getMatchRule()) {
case MATCH_MOBILE_3G_LOWER:
title=res.getText(R.string.data_usage_3g_limit_snoozed_title);
break;
case MATCH_MOBILE_4G:
title=res.getText(R.string.data_usage_4g_limit_snoozed_title);
break;
case MATCH_MOBILE_ALL:
title=res.getText(R.string.data_usage_mobile_limit_snoozed_title);
break;
case MATCH_WIFI:
title=res.getText(R.string.data_usage_wifi_limit_snoozed_title);
break;
default :
title=null;
break;
}
builder.setSmallIcon(R.drawable.stat_notify_error);
builder.setTicker(title);
builder.setContentTitle(title);
builder.setContentText(body);
final Intent intent=buildViewDataUsageIntent(policy.template);
builder.setContentIntent(PendingIntent.getActivity(mContext,0,intent,PendingIntent.FLAG_UPDATE_CURRENT));
break;
}
}
try {
final String packageName=mContext.getPackageName();
final int[] idReceived=new int[1];
mNotifManager.enqueueNotificationWithTag(packageName,tag,0x0,builder.getNotification(),idReceived);
mActiveNotifs.add(tag);
}
 catch (RemoteException e) {
}
}
