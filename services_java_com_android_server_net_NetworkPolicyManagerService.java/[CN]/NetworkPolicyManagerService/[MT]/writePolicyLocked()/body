{
  if (LOGD)   Slog.v(TAG,"writePolicyLocked()");
  FileOutputStream fos=null;
  try {
    fos=mPolicyFile.startWrite();
    XmlSerializer out=new FastXmlSerializer();
    out.setOutput(fos,"utf-8");
    out.startDocument(null,true);
    out.startTag(null,TAG_POLICY_LIST);
    writeIntAttribute(out,ATTR_VERSION,VERSION_CURRENT);
    for (    StrongTemplate template : mTemplatePolicy.keySet()) {
      final NetworkPolicy policy=mTemplatePolicy.get(template);
      out.startTag(null,TAG_NETWORK_POLICY);
      writeIntAttribute(out,ATTR_NETWORK_TEMPLATE,template.networkTemplate);
      if (template.subscriberId != null) {
        out.attribute(null,ATTR_SUBSCRIBER_ID,template.subscriberId);
      }
      writeIntAttribute(out,ATTR_CYCLE_DAY,policy.cycleDay);
      writeLongAttribute(out,ATTR_WARNING_BYTES,policy.warningBytes);
      writeLongAttribute(out,ATTR_LIMIT_BYTES,policy.limitBytes);
      out.endTag(null,TAG_NETWORK_POLICY);
    }
    for (int i=0; i < mUidPolicy.size(); i++) {
      final int uid=mUidPolicy.keyAt(i);
      final int policy=mUidPolicy.valueAt(i);
      out.startTag(null,TAG_UID_POLICY);
      writeIntAttribute(out,ATTR_UID,uid);
      writeIntAttribute(out,ATTR_POLICY,policy);
      out.endTag(null,TAG_UID_POLICY);
    }
    out.endTag(null,TAG_POLICY_LIST);
    out.endDocument();
    mPolicyFile.finishWrite(fos);
  }
 catch (  IOException e) {
    if (fos != null) {
      mPolicyFile.failWrite(fos);
    }
  }
}
