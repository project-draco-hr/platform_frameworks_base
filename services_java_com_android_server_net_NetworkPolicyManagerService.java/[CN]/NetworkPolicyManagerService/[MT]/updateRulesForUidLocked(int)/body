{
  if (!isUidValidForPolicy(mContext,uid))   return;
  final int uidPolicy=getUidPolicy(uid);
  final boolean uidForeground=isUidForeground(uid);
  int uidRules=RULE_ALLOW_ALL;
  if (!uidForeground && (uidPolicy & POLICY_REJECT_METERED_BACKGROUND) != 0) {
    uidRules=RULE_REJECT_METERED;
  }
  mUidRules.put(uid,uidRules);
  final boolean rejectMetered=(uidRules & RULE_REJECT_METERED) != 0;
  final int length=mListeners.beginBroadcast();
  for (int i=0; i < length; i++) {
    final INetworkPolicyListener listener=mListeners.getBroadcastItem(i);
    if (listener != null) {
      try {
        listener.onUidRulesChanged(uid,uidRules);
      }
 catch (      RemoteException e) {
      }
    }
  }
  mListeners.finishBroadcast();
}
