{
  if (LOGV)   Slog.v(TAG,"updateNotificationsLocked()");
  if (mTime.getCacheAge() > TIME_CACHE_MAX_AGE) {
    mTime.forceRefresh();
  }
  final long currentTime=mTime.hasCache() ? mTime.currentTimeMillis() : System.currentTimeMillis();
  for (  NetworkPolicy policy : mNetworkRules.keySet()) {
    final long start=computeLastCycleBoundary(currentTime,policy);
    final long end=currentTime;
    final long totalBytes;
    try {
      final NetworkStats stats=mNetworkStats.getSummaryForNetwork(policy.template,start,end);
      final NetworkStats.Entry entry=stats.getValues(0,null);
      totalBytes=entry.rxBytes + entry.txBytes;
    }
 catch (    RemoteException e) {
      Slog.w(TAG,"problem reading summary for template " + policy.template);
      continue;
    }
    if (policy.limitBytes != LIMIT_DISABLED && totalBytes >= policy.limitBytes) {
      cancelNotification(policy,TYPE_WARNING);
      if (policy.lastSnooze >= start) {
        cancelNotification(policy,TYPE_LIMIT);
        enqueueNotification(policy,TYPE_LIMIT_SNOOZED,totalBytes);
      }
 else {
        cancelNotification(policy,TYPE_LIMIT_SNOOZED);
        enqueueNotification(policy,TYPE_LIMIT,totalBytes);
        notifyOverLimitLocked(policy.template);
      }
    }
 else {
      cancelNotification(policy,TYPE_LIMIT);
      cancelNotification(policy,TYPE_LIMIT_SNOOZED);
      notifyUnderLimitLocked(policy.template);
      if (policy.warningBytes != WARNING_DISABLED && totalBytes >= policy.warningBytes) {
        enqueueNotification(policy,TYPE_WARNING,totalBytes);
      }
 else {
        cancelNotification(policy,TYPE_WARNING);
      }
    }
  }
  for (  NetworkPolicy policy : mNetworkPolicy.values()) {
    if (!mNetworkRules.containsKey(policy)) {
      cancelNotification(policy,TYPE_WARNING);
      cancelNotification(policy,TYPE_LIMIT);
      cancelNotification(policy,TYPE_LIMIT_SNOOZED);
      notifyUnderLimitLocked(policy.template);
    }
  }
}
