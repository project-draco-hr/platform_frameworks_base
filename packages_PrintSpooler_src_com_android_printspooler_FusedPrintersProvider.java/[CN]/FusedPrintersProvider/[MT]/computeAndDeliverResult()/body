{
  if (!isStarted()) {
    return;
  }
  List<PrinterInfo> printers=new ArrayList<PrinterInfo>();
  final int favoriteCount=Math.min(mFavoritePrinters.size(),MAX_FAVORITE_PRINTER_COUNT);
  for (int i=0; i < favoriteCount; i++) {
    printers.add(mFavoritePrinters.get(i));
  }
  final int printerCount=mPrinters.size();
  for (int i=0; i < printerCount; i++) {
    PrinterInfo discoveredPrinter=mPrinters.get(i);
    boolean printerHandled=false;
    for (int j=0; j < favoriteCount; j++) {
      PrinterInfo favoritePrinter=printers.get(j);
      if (favoritePrinter.getId().equals(discoveredPrinter.getId())) {
        printers.set(j,discoveredPrinter);
        printerHandled=true;
        break;
      }
    }
    if (!printerHandled) {
      printers.add(discoveredPrinter);
    }
  }
  deliverResult(printers);
}
