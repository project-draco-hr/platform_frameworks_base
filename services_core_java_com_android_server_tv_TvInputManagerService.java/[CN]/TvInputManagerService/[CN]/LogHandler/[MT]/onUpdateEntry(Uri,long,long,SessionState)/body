{
  String[] projection={TvContract.WatchedPrograms.COLUMN_WATCH_START_TIME_UTC_MILLIS,TvContract.WatchedPrograms.COLUMN_WATCH_END_TIME_UTC_MILLIS,TvContract.WatchedPrograms.COLUMN_TITLE,TvContract.WatchedPrograms.COLUMN_START_TIME_UTC_MILLIS,TvContract.WatchedPrograms.COLUMN_END_TIME_UTC_MILLIS,TvContract.WatchedPrograms.COLUMN_DESCRIPTION};
  Cursor cursor=null;
  try {
    cursor=mContentResolver.query(uri,projection,null,null,null);
    if (cursor != null && cursor.moveToNext()) {
      long watchStartTime=cursor.getLong(0);
      long watchEndTime=cursor.getLong(1);
      String title=cursor.getString(2);
      long startTime=cursor.getLong(3);
      long endTime=cursor.getLong(4);
      String description=cursor.getString(5);
      if (watchEndTime > 0) {
        return;
      }
      ContentValues values=new ContentValues();
      values.put(TvContract.WatchedPrograms.COLUMN_WATCH_START_TIME_UTC_MILLIS,watchStartTime);
      values.put(TvContract.WatchedPrograms.COLUMN_WATCH_END_TIME_UTC_MILLIS,time);
      values.put(TvContract.WatchedPrograms.COLUMN_CHANNEL_ID,channelId);
      values.put(TvContract.WatchedPrograms.COLUMN_TITLE,title);
      values.put(TvContract.WatchedPrograms.COLUMN_START_TIME_UTC_MILLIS,startTime);
      values.put(TvContract.WatchedPrograms.COLUMN_END_TIME_UTC_MILLIS,endTime);
      values.put(TvContract.WatchedPrograms.COLUMN_DESCRIPTION,description);
      mContentResolver.insert(TvContract.WatchedPrograms.CONTENT_URI,values);
    }
  }
  finally {
    if (cursor != null) {
      cursor.close();
    }
  }
  onOpenEntry(uri,channelId,time,sessionState);
}
