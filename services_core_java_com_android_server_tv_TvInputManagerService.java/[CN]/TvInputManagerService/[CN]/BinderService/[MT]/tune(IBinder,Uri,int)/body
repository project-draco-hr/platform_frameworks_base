{
  final int callingUid=Binder.getCallingUid();
  final int resolvedUserId=resolveCallingUserId(Binder.getCallingPid(),callingUid,userId,"tune");
  final long identity=Binder.clearCallingIdentity();
  try {
synchronized (mLock) {
      try {
        getSessionLocked(sessionToken,callingUid,resolvedUserId).tune(channelUri);
        long currentTime=System.currentTimeMillis();
        long channelId=ContentUris.parseId(channelUri);
        UserState userState=getUserStateLocked(resolvedUserId);
        SessionState sessionState=userState.sessionStateMap.get(sessionToken);
        if (sessionState.mLogUri != null) {
          SomeArgs args=SomeArgs.obtain();
          args.arg1=sessionState.mLogUri;
          args.arg2=currentTime;
          mLogHandler.obtainMessage(LogHandler.MSG_CLOSE_ENTRY,args).sendToTarget();
        }
        ContentValues values=new ContentValues();
        values.put(TvContract.WatchedPrograms.COLUMN_WATCH_START_TIME_UTC_MILLIS,currentTime);
        values.put(TvContract.WatchedPrograms.COLUMN_WATCH_END_TIME_UTC_MILLIS,0);
        values.put(TvContract.WatchedPrograms.COLUMN_CHANNEL_ID,channelId);
        sessionState.mLogUri=mContentResolver.insert(TvContract.WatchedPrograms.CONTENT_URI,values);
        SomeArgs args=SomeArgs.obtain();
        args.arg1=sessionState.mLogUri;
        args.arg2=ContentUris.parseId(channelUri);
        args.arg3=currentTime;
        mLogHandler.obtainMessage(LogHandler.MSG_OPEN_ENTRY,args).sendToTarget();
      }
 catch (      RemoteException e) {
        Slog.e(TAG,"error in tune",e);
        return;
      }
    }
  }
  finally {
    Binder.restoreCallingIdentity(identity);
  }
}
