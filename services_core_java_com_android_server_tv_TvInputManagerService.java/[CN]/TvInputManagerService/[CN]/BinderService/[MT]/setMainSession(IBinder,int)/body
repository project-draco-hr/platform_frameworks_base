{
  final int callingUid=Binder.getCallingUid();
  final int resolvedUserId=resolveCallingUserId(Binder.getCallingPid(),callingUid,userId,"setMainSession");
  final long identity=Binder.clearCallingIdentity();
  try {
synchronized (mLock) {
      UserState userState=getUserStateLocked(resolvedUserId);
      if (userState.mainSessionToken == sessionToken) {
        return;
      }
      SessionState newMainSessionState=getSessionStateLocked(sessionToken,callingUid,resolvedUserId);
      if (newMainSessionState.mHardwareSessionToken != null) {
        newMainSessionState=getSessionStateLocked(newMainSessionState.mHardwareSessionToken,Process.SYSTEM_UID,resolvedUserId);
      }
      ServiceState newMainServiceState=getServiceStateLocked(newMainSessionState.mInfo.getComponent(),resolvedUserId);
      ITvInputSession newMainSession=getSessionLocked(newMainSessionState);
      ServiceState oldMainServiceState=null;
      ITvInputSession oldMainSession=null;
      if (userState.mainSessionToken != null) {
        SessionState oldMainSessionState=getSessionStateLocked(userState.mainSessionToken,Process.SYSTEM_UID,resolvedUserId);
        if (oldMainSessionState.mHardwareSessionToken != null) {
          oldMainSessionState=getSessionStateLocked(oldMainSessionState.mHardwareSessionToken,Process.SYSTEM_UID,resolvedUserId);
        }
        oldMainServiceState=getServiceStateLocked(oldMainSessionState.mInfo.getComponent(),resolvedUserId);
        oldMainSession=getSessionLocked(oldMainSessionState);
      }
      userState.mainSessionToken=sessionToken;
      if (newMainServiceState.mIsHardware) {
        try {
          newMainSession.setMainSession(true);
        }
 catch (        RemoteException e) {
          Slog.e(TAG,"error in setMainSession",e);
        }
      }
      if (oldMainSession != null && oldMainServiceState.mIsHardware) {
        try {
          oldMainSession.setMainSession(false);
        }
 catch (        RemoteException e) {
          Slog.e(TAG,"error in setMainSession",e);
        }
      }
    }
  }
  finally {
    Binder.restoreCallingIdentity(identity);
  }
}
