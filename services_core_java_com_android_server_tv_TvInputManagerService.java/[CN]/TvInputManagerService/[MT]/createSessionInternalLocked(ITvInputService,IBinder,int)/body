{
  UserState userState=getOrCreateUserStateLocked(userId);
  SessionState sessionState=userState.sessionStateMap.get(sessionToken);
  if (DEBUG) {
    Slog.d(TAG,"createSessionInternalLocked(inputId=" + sessionState.info.getId() + ")");
  }
  InputChannel[] channels=InputChannel.openInputChannelPair(sessionToken.toString());
  ITvInputSessionCallback callback=new SessionCallback(sessionState,channels);
  try {
    if (sessionState.isRecordingSession) {
      service.createRecordingSession(callback,sessionState.info.getId());
    }
 else {
      service.createSession(channels[1],callback,sessionState.info.getId());
    }
  }
 catch (  RemoteException e) {
    Slog.e(TAG,"error in createSession",e);
    removeSessionStateLocked(sessionToken,userId);
    sendSessionTokenToClientLocked(sessionState.client,sessionState.info.getId(),null,null,sessionState.seq);
  }
  channels[1].dispose();
}
