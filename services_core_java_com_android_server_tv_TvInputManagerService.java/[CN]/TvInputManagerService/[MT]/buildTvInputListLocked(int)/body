{
  UserState userState=getUserStateLocked(userId);
  Map<String,TvInputState> oldInputMap=userState.inputMap;
  userState.inputMap=new HashMap<String,TvInputState>();
  userState.packageSet.clear();
  if (DEBUG)   Slog.d(TAG,"buildTvInputList");
  PackageManager pm=mContext.getPackageManager();
  List<ResolveInfo> services=pm.queryIntentServices(new Intent(TvInputService.SERVICE_INTERFACE),PackageManager.GET_SERVICES | PackageManager.GET_META_DATA);
  List<TvInputInfo> infoList=new ArrayList<TvInputInfo>();
  for (  ResolveInfo ri : services) {
    ServiceInfo si=ri.serviceInfo;
    if (!android.Manifest.permission.BIND_TV_INPUT.equals(si.permission)) {
      Slog.w(TAG,"Skipping TV input " + si.name + ": it does not require the permission "+ android.Manifest.permission.BIND_TV_INPUT);
      continue;
    }
    try {
      infoList.clear();
      ComponentName service=new ComponentName(si.packageName,si.name);
      if (hasHardwarePermission(pm,service)) {
        ServiceState serviceState=userState.serviceStateMap.get(service);
        if (serviceState == null) {
          serviceState=new ServiceState(service,userId);
          userState.serviceStateMap.put(service,serviceState);
        }
 else {
          infoList.addAll(serviceState.mInputList);
        }
      }
 else {
        infoList.add(TvInputInfo.createTvInputInfo(mContext,ri));
      }
      for (      TvInputInfo info : infoList) {
        if (DEBUG)         Slog.d(TAG,"add " + info.getId());
        TvInputState state=oldInputMap.get(info.getId());
        if (state == null) {
          state=new TvInputState();
        }
        userState.inputMap.put(info.getId(),state);
        state.mInfo=info;
      }
      updateServiceConnectionLocked(service,userId);
      userState.packageSet.add(si.packageName);
    }
 catch (    IOException|XmlPullParserException e) {
      Slog.e(TAG,"Can't load TV input " + si.name,e);
    }
  }
  oldInputMap.clear();
}
