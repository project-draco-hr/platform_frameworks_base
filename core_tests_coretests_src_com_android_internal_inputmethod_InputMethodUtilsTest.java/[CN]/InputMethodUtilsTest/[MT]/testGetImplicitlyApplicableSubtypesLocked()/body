{
  final InputMethodSubtype nonAutoEnUS=createDummyInputMethodSubtype("en_US",SUBTYPE_MODE_KEYBOARD,!IS_AUX,!IS_OVERRIDES_IMPLICITLY_ENABLED_SUBTYPE,IS_ASCII_CAPABLE,!IS_ENABLED_WHEN_DEFAULT_IS_NOT_ASCII_CAPABLE);
  final InputMethodSubtype nonAutoEnGB=createDummyInputMethodSubtype("en_GB",SUBTYPE_MODE_KEYBOARD,!IS_AUX,!IS_OVERRIDES_IMPLICITLY_ENABLED_SUBTYPE,IS_ASCII_CAPABLE,IS_ENABLED_WHEN_DEFAULT_IS_NOT_ASCII_CAPABLE);
  final InputMethodSubtype nonAutoFrCA=createDummyInputMethodSubtype("fr_CA",SUBTYPE_MODE_KEYBOARD,!IS_AUX,!IS_OVERRIDES_IMPLICITLY_ENABLED_SUBTYPE,IS_ASCII_CAPABLE,IS_ENABLED_WHEN_DEFAULT_IS_NOT_ASCII_CAPABLE);
  final InputMethodSubtype nonAutoFr=createDummyInputMethodSubtype("fr_CA",SUBTYPE_MODE_KEYBOARD,!IS_AUX,!IS_OVERRIDES_IMPLICITLY_ENABLED_SUBTYPE,IS_ASCII_CAPABLE,IS_ENABLED_WHEN_DEFAULT_IS_NOT_ASCII_CAPABLE);
  final InputMethodSubtype nonAutoFil=createDummyInputMethodSubtype("fil",SUBTYPE_MODE_KEYBOARD,!IS_AUX,!IS_OVERRIDES_IMPLICITLY_ENABLED_SUBTYPE,IS_ASCII_CAPABLE,!IS_ENABLED_WHEN_DEFAULT_IS_NOT_ASCII_CAPABLE);
  final InputMethodSubtype nonAutoIn=createDummyInputMethodSubtype("in",SUBTYPE_MODE_KEYBOARD,!IS_AUX,!IS_OVERRIDES_IMPLICITLY_ENABLED_SUBTYPE,IS_ASCII_CAPABLE,IS_ENABLED_WHEN_DEFAULT_IS_NOT_ASCII_CAPABLE);
  final InputMethodSubtype nonAutoId=createDummyInputMethodSubtype("id",SUBTYPE_MODE_KEYBOARD,!IS_AUX,!IS_OVERRIDES_IMPLICITLY_ENABLED_SUBTYPE,IS_ASCII_CAPABLE,IS_ENABLED_WHEN_DEFAULT_IS_NOT_ASCII_CAPABLE);
  final InputMethodSubtype autoSubtype=createDummyInputMethodSubtype("auto",SUBTYPE_MODE_KEYBOARD,!IS_AUX,IS_OVERRIDES_IMPLICITLY_ENABLED_SUBTYPE,IS_ASCII_CAPABLE,!IS_ENABLED_WHEN_DEFAULT_IS_NOT_ASCII_CAPABLE);
  final InputMethodSubtype nonAutoJa=createDummyInputMethodSubtype("ja",SUBTYPE_MODE_KEYBOARD,!IS_AUX,!IS_OVERRIDES_IMPLICITLY_ENABLED_SUBTYPE,!IS_ASCII_CAPABLE,!IS_ENABLED_WHEN_DEFAULT_IS_NOT_ASCII_CAPABLE);
  final InputMethodSubtype nonAutoEnabledWhenDefaultIsNotAsciiCalableSubtype=createDummyInputMethodSubtype("zz",SUBTYPE_MODE_KEYBOARD,!IS_AUX,!IS_OVERRIDES_IMPLICITLY_ENABLED_SUBTYPE,!IS_ASCII_CAPABLE,IS_ENABLED_WHEN_DEFAULT_IS_NOT_ASCII_CAPABLE);
  final InputMethodSubtype nonAutoEnabledWhenDefaultIsNotAsciiCalableSubtype2=createDummyInputMethodSubtype("zz",SUBTYPE_MODE_KEYBOARD,!IS_AUX,!IS_OVERRIDES_IMPLICITLY_ENABLED_SUBTYPE,!IS_ASCII_CAPABLE,IS_ENABLED_WHEN_DEFAULT_IS_NOT_ASCII_CAPABLE);
{
    final ArrayList<InputMethodSubtype> subtypes=new ArrayList<InputMethodSubtype>();
    subtypes.add(nonAutoEnUS);
    subtypes.add(nonAutoEnGB);
    subtypes.add(nonAutoJa);
    subtypes.add(nonAutoFil);
    subtypes.add(autoSubtype);
    subtypes.add(nonAutoEnabledWhenDefaultIsNotAsciiCalableSubtype);
    subtypes.add(nonAutoEnabledWhenDefaultIsNotAsciiCalableSubtype2);
    final InputMethodInfo imi=createDummyInputMethodInfo("com.android.apps.inputmethod.latin","com.android.apps.inputmethod.latin","DummyLatinIme",!IS_AUX,IS_DEFAULT,subtypes);
    final ArrayList<InputMethodSubtype> result=InputMethodUtils.getImplicitlyApplicableSubtypesLocked(createTargetContextWithLocales(new LocaleList(LOCALE_EN_US)).getResources(),imi);
    assertEquals(1,result.size());
    verifyEquality(autoSubtype,result.get(0));
  }
{
    final ArrayList<InputMethodSubtype> subtypes=new ArrayList<InputMethodSubtype>();
    subtypes.add(nonAutoEnUS);
    subtypes.add(nonAutoEnGB);
    subtypes.add(nonAutoJa);
    subtypes.add(nonAutoFil);
    subtypes.add(nonAutoEnabledWhenDefaultIsNotAsciiCalableSubtype);
    subtypes.add(nonAutoEnabledWhenDefaultIsNotAsciiCalableSubtype2);
    final InputMethodInfo imi=createDummyInputMethodInfo("com.android.apps.inputmethod.latin","com.android.apps.inputmethod.latin","DummyLatinIme",!IS_AUX,IS_DEFAULT,subtypes);
    final ArrayList<InputMethodSubtype> result=InputMethodUtils.getImplicitlyApplicableSubtypesLocked(createTargetContextWithLocales(new LocaleList(LOCALE_EN_US)).getResources(),imi);
    verifyEquality(nonAutoEnUS,result.get(0));
  }
{
    final ArrayList<InputMethodSubtype> subtypes=new ArrayList<InputMethodSubtype>();
    subtypes.add(nonAutoEnUS);
    subtypes.add(nonAutoEnGB);
    subtypes.add(nonAutoJa);
    subtypes.add(nonAutoFil);
    subtypes.add(nonAutoEnabledWhenDefaultIsNotAsciiCalableSubtype);
    final InputMethodInfo imi=createDummyInputMethodInfo("com.android.apps.inputmethod.latin","com.android.apps.inputmethod.latin","DummyLatinIme",!IS_AUX,IS_DEFAULT,subtypes);
    final ArrayList<InputMethodSubtype> result=InputMethodUtils.getImplicitlyApplicableSubtypesLocked(createTargetContextWithLocales(new LocaleList(LOCALE_EN_GB)).getResources(),imi);
    assertEquals(1,result.size());
    verifyEquality(nonAutoEnGB,result.get(0));
  }
{
    final ArrayList<InputMethodSubtype> subtypes=new ArrayList<InputMethodSubtype>();
    subtypes.add(nonAutoFrCA);
    subtypes.add(nonAutoJa);
    subtypes.add(nonAutoFil);
    subtypes.add(nonAutoEnabledWhenDefaultIsNotAsciiCalableSubtype);
    subtypes.add(nonAutoEnabledWhenDefaultIsNotAsciiCalableSubtype2);
    final InputMethodInfo imi=createDummyInputMethodInfo("com.android.apps.inputmethod.latin","com.android.apps.inputmethod.latin","DummyLatinIme",!IS_AUX,IS_DEFAULT,subtypes);
    final ArrayList<InputMethodSubtype> result=InputMethodUtils.getImplicitlyApplicableSubtypesLocked(createTargetContextWithLocales(new LocaleList(LOCALE_FR)).getResources(),imi);
    assertEquals(1,result.size());
    verifyEquality(nonAutoFrCA,result.get(0));
  }
{
    final ArrayList<InputMethodSubtype> subtypes=new ArrayList<InputMethodSubtype>();
    subtypes.add(nonAutoFr);
    subtypes.add(nonAutoJa);
    subtypes.add(nonAutoFil);
    subtypes.add(nonAutoEnabledWhenDefaultIsNotAsciiCalableSubtype);
    subtypes.add(nonAutoEnabledWhenDefaultIsNotAsciiCalableSubtype2);
    final InputMethodInfo imi=createDummyInputMethodInfo("com.android.apps.inputmethod.latin","com.android.apps.inputmethod.latin","DummyLatinIme",!IS_AUX,IS_DEFAULT,subtypes);
    final ArrayList<InputMethodSubtype> result=InputMethodUtils.getImplicitlyApplicableSubtypesLocked(createTargetContextWithLocales(new LocaleList(LOCALE_FR_CA)).getResources(),imi);
    assertEquals(1,result.size());
    verifyEquality(nonAutoFrCA,result.get(0));
  }
{
    final ArrayList<InputMethodSubtype> subtypes=new ArrayList<InputMethodSubtype>();
    subtypes.add(nonAutoEnUS);
    subtypes.add(nonAutoJa);
    subtypes.add(nonAutoEnabledWhenDefaultIsNotAsciiCalableSubtype);
    subtypes.add(nonAutoEnabledWhenDefaultIsNotAsciiCalableSubtype2);
    final InputMethodInfo imi=createDummyInputMethodInfo("com.android.apps.inputmethod.latin","com.android.apps.inputmethod.latin","DummyLatinIme",!IS_AUX,IS_DEFAULT,subtypes);
    final ArrayList<InputMethodSubtype> result=InputMethodUtils.getImplicitlyApplicableSubtypesLocked(createTargetContextWithLocales(new LocaleList(LOCALE_JA_JP)).getResources(),imi);
    assertEquals(3,result.size());
    verifyEquality(nonAutoJa,result.get(0));
    verifyEquality(nonAutoEnabledWhenDefaultIsNotAsciiCalableSubtype,result.get(1));
    verifyEquality(nonAutoEnabledWhenDefaultIsNotAsciiCalableSubtype2,result.get(2));
  }
{
    final ArrayList<InputMethodSubtype> subtypes=new ArrayList<InputMethodSubtype>();
    subtypes.add(nonAutoEnUS);
    subtypes.add(nonAutoFil);
    final InputMethodInfo imi=createDummyInputMethodInfo("com.android.apps.inputmethod.latin","com.android.apps.inputmethod.latin","DummyLatinIme",!IS_AUX,IS_DEFAULT,subtypes);
    final ArrayList<InputMethodSubtype> result=InputMethodUtils.getImplicitlyApplicableSubtypesLocked(createTargetContextWithLocales(new LocaleList(LOCALE_FIL_PH)).getResources(),imi);
    assertEquals(1,result.size());
    verifyEquality(nonAutoFil,result.get(0));
  }
{
    final ArrayList<InputMethodSubtype> subtypes=new ArrayList<InputMethodSubtype>();
    subtypes.add(nonAutoJa);
    subtypes.add(nonAutoEnUS);
    subtypes.add(nonAutoFil);
    final InputMethodInfo imi=createDummyInputMethodInfo("com.android.apps.inputmethod.latin","com.android.apps.inputmethod.latin","DummyLatinIme",!IS_AUX,IS_DEFAULT,subtypes);
    final ArrayList<InputMethodSubtype> result=InputMethodUtils.getImplicitlyApplicableSubtypesLocked(createTargetContextWithLocales(new LocaleList(LOCALE_FI)).getResources(),imi);
    assertEquals(1,result.size());
    verifyEquality(nonAutoJa,result.get(0));
  }
{
    final ArrayList<InputMethodSubtype> subtypes=new ArrayList<InputMethodSubtype>();
    subtypes.add(nonAutoIn);
    subtypes.add(nonAutoEnUS);
    final InputMethodInfo imi=createDummyInputMethodInfo("com.android.apps.inputmethod.latin","com.android.apps.inputmethod.latin","DummyLatinIme",!IS_AUX,IS_DEFAULT,subtypes);
    final ArrayList<InputMethodSubtype> result=InputMethodUtils.getImplicitlyApplicableSubtypesLocked(createTargetContextWithLocales(new LocaleList(LOCALE_IN)).getResources(),imi);
    assertEquals(1,result.size());
    verifyEquality(nonAutoIn,result.get(0));
  }
{
    final ArrayList<InputMethodSubtype> subtypes=new ArrayList<InputMethodSubtype>();
    subtypes.add(nonAutoIn);
    subtypes.add(nonAutoEnUS);
    final InputMethodInfo imi=createDummyInputMethodInfo("com.android.apps.inputmethod.latin","com.android.apps.inputmethod.latin","DummyLatinIme",!IS_AUX,IS_DEFAULT,subtypes);
    final ArrayList<InputMethodSubtype> result=InputMethodUtils.getImplicitlyApplicableSubtypesLocked(createTargetContextWithLocales(new LocaleList(LOCALE_ID)).getResources(),imi);
    assertEquals(1,result.size());
    verifyEquality(nonAutoIn,result.get(0));
  }
{
    final ArrayList<InputMethodSubtype> subtypes=new ArrayList<InputMethodSubtype>();
    subtypes.add(nonAutoId);
    subtypes.add(nonAutoEnUS);
    final InputMethodInfo imi=createDummyInputMethodInfo("com.android.apps.inputmethod.latin","com.android.apps.inputmethod.latin","DummyLatinIme",!IS_AUX,IS_DEFAULT,subtypes);
    final ArrayList<InputMethodSubtype> result=InputMethodUtils.getImplicitlyApplicableSubtypesLocked(createTargetContextWithLocales(new LocaleList(LOCALE_IN)).getResources(),imi);
    assertEquals(1,result.size());
    verifyEquality(nonAutoId,result.get(0));
  }
{
    final ArrayList<InputMethodSubtype> subtypes=new ArrayList<InputMethodSubtype>();
    subtypes.add(nonAutoId);
    subtypes.add(nonAutoEnUS);
    final InputMethodInfo imi=createDummyInputMethodInfo("com.android.apps.inputmethod.latin","com.android.apps.inputmethod.latin","DummyLatinIme",!IS_AUX,IS_DEFAULT,subtypes);
    final ArrayList<InputMethodSubtype> result=InputMethodUtils.getImplicitlyApplicableSubtypesLocked(createTargetContextWithLocales(new LocaleList(LOCALE_ID)).getResources(),imi);
    assertEquals(1,result.size());
    verifyEquality(nonAutoId,result.get(0));
  }
}
