{
  mId=view.getId();
  if (mId > 0 && (mId & 0xff000000) != 0 && (mId & 0x00ff0000) != 0 && (mId & 0x0000ffff) != 0) {
    String pkg, type, entry;
    try {
      Resources res=view.getResources();
      entry=res.getResourceEntryName(mId);
      type=res.getResourceTypeName(mId);
      pkg=res.getResourcePackageName(mId);
    }
 catch (    Resources.NotFoundException e) {
      entry=type=pkg=null;
    }
    mIdPackage=pkg;
    mIdType=type;
    mIdEntry=entry;
  }
 else {
    mIdPackage=mIdType=mIdEntry=null;
  }
  mX=view.getLeft();
  mY=view.getTop();
  mScrollX=view.getScrollX();
  mScrollY=view.getScrollY();
  mWidth=view.getWidth();
  mHeight=view.getHeight();
  int flags=view.getVisibility();
  if (!view.isEnabled()) {
    flags|=FLAGS_DISABLED;
  }
  if (!view.isClickable()) {
    flags|=FLAGS_CLICKABLE;
  }
  if (!view.isFocusable()) {
    flags|=FLAGS_FOCUSABLE;
  }
  if (!view.isFocused()) {
    flags|=FLAGS_FOCUSED;
  }
  if (!view.isAccessibilityFocused()) {
    flags|=FLAGS_ACCESSIBILITY_FOCUSED;
  }
  if (!view.isSelected()) {
    flags|=FLAGS_SELECTED;
  }
  if (!view.isActivated()) {
    flags|=FLAGS_ACTIVATED;
  }
  if (!view.isLongClickable()) {
    flags|=FLAGS_LONG_CLICKABLE;
  }
  if (view instanceof Checkable) {
    flags|=FLAGS_CHECKABLE;
    if (((Checkable)view).isChecked()) {
      flags|=FLAGS_CHECKED;
    }
  }
  mFlags=flags;
  mClassName=view.getAccessibilityClassName().toString();
  mContentDescription=view.getContentDescription();
  final ViewAssistStructureImpl viewData=assistStructure.mTmpViewAssistStructureImpl;
  final Bundle extras=assistStructure.mTmpExtras;
  view.onProvideAssistStructure(viewData,extras);
  if (viewData.mText != null || viewData.mHint != null) {
    mText=new ViewNodeTextImpl(viewData);
    assistStructure.mTmpViewAssistStructureImpl=new ViewAssistStructureImpl();
  }
 else {
    mText=null;
  }
  if (!extras.isEmpty()) {
    mExtras=extras;
    assistStructure.mTmpExtras=new Bundle();
  }
 else {
    mExtras=null;
  }
  if (view instanceof ViewGroup) {
    ViewGroup vg=(ViewGroup)view;
    final int NCHILDREN=vg.getChildCount();
    if (NCHILDREN > 0) {
      mChildren=new ViewNode[NCHILDREN];
      for (int i=0; i < NCHILDREN; i++) {
        mChildren[i]=new ViewNode(assistStructure,vg.getChildAt(i));
      }
    }
 else {
      mChildren=null;
    }
  }
 else {
    mChildren=null;
  }
}
