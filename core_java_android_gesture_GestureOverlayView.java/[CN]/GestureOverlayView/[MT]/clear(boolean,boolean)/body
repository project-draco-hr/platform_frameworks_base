{
  setPaintAlpha(255);
  removeCallbacks(mFadingOut);
  mResetGesture=false;
  mFadingOut.fireActionPerformed=fireActionPerformed;
  mFadingOut.resetMultipleStrokes=false;
  if (animated && mCurrentGesture != null) {
    mFadingAlpha=1.0f;
    mIsFadingOut=true;
    mFadingHasStarted=false;
    mFadingStart=AnimationUtils.currentAnimationTimeMillis() + mFadeOffset;
    postDelayed(mFadingOut,mFadeOffset);
  }
 else {
    mFadingAlpha=1.0f;
    mIsFadingOut=false;
    mFadingHasStarted=false;
    if (fireActionPerformed) {
      postDelayed(mFadingOut,mFadeOffset);
    }
 else     if (mHandleGestureActions) {
      mCurrentGesture=null;
      mPath.rewind();
      invalidate();
    }
 else     if (mGestureStrokeType == GESTURE_STROKE_TYPE_MULTIPLE) {
      mFadingOut.resetMultipleStrokes=true;
      postDelayed(mFadingOut,mFadeOffset);
    }
  }
}
