{
  Log.v(LOGTAG,"  Processing result: " + test_path);
  String short_file=test_path.substring(0,test_path.lastIndexOf('.'));
  if (timeout) {
    failedCase(test_path,"TIMEDOUT");
    return;
  }
  String dumpFile=short_file + "-results.txt";
  File f=new File(dumpFile);
  if (f.exists()) {
    try {
      FileInputStream fr=new FileInputStream(short_file + "-results.txt");
      FileInputStream fe=new FileInputStream(short_file + "-expected.txt");
      int diff=fe.available() - fr.available();
      if (diff > 1 || diff < 0) {
        failedCase(test_path," different length");
        fr.close();
        fe.close();
        return;
      }
      byte[] br=new byte[fr.available()];
      byte[] be=new byte[fe.available()];
      fr.read(br);
      fe.read(be);
      boolean fail=false;
      for (int i=0; i < br.length; i++) {
        if (br[i] != be[i]) {
          failedCase(test_path,"  @offset: " + i);
          fr.close();
          fe.close();
          return;
        }
      }
      if (br.length != be.length && be[be.length - 1] == '\n') {
        Log.d(LOGTAG,"Extra new line being ignore:" + test_path);
      }
      fr.close();
      fe.close();
      passedCase(test_path);
    }
 catch (    FileNotFoundException ex) {
    }
catch (    IOException ex) {
    }
    return;
  }
  File nontext_result=new File(short_file + "-android-results.txt");
  if (nontext_result.exists())   mResultRecorder.nontext(test_path);
}
