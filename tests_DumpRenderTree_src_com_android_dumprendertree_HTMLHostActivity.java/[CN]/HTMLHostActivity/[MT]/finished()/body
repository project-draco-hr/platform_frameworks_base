{
  int passed=0;
  while (!mFinishedStack.empty()) {
    Log.v(LOGTAG,"Comparing dump and reference");
    String file=(String)mFinishedStack.pop();
    String dumpFile=file + "-results.txt";
    File f=new File(dumpFile);
    if (f.exists()) {
      try {
        FileInputStream fr=new FileInputStream(file + "-results.txt");
        FileInputStream fe=new FileInputStream(file + "-expected.txt");
        mResultRecorder.started(file);
        int diff=fe.available() - fr.available();
        if (diff > 1 || diff < 0) {
          failedCase(file," different length");
          fr.close();
          fe.close();
          mResultRecorder.finished(file);
          continue;
        }
        byte[] br=new byte[fr.available()];
        byte[] be=new byte[fe.available()];
        fr.read(br);
        fe.read(be);
        boolean fail=false;
        for (int i=0; i < br.length; i++) {
          if (br[i] != be[i]) {
            failedCase(file,"  @offset: " + i);
            fail=true;
            break;
          }
        }
        if (br.length != be.length && be[be.length - 1] == '\n') {
          Log.d(LOGTAG,"Extra new line being ignore:" + file);
        }
        fr.close();
        fe.close();
        if (!fail) {
          passed++;
          passedCase(file);
        }
      }
 catch (      FileNotFoundException ex) {
      }
catch (      IOException ex) {
      }
      mResultRecorder.finished(file);
    }
  }
  if (mCallback != null) {
    mCallback.waitForFinish();
  }
  finish();
}
