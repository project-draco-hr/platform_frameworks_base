{
  if (mContext.checkCallingOrSelfPermission(android.Manifest.permission.DUMP) != PackageManager.PERMISSION_GRANTED) {
    pw.println("Permission Denial: Can't dump DropBoxManagerService");
    return;
  }
  try {
    init();
  }
 catch (  IOException e) {
    pw.println("Can't initialize: " + e);
    Log.e(TAG,"Can't init",e);
    return;
  }
  if (PROFILE_DUMP)   Debug.startMethodTracing("/data/trace/dropbox.dump");
  Formatter out=new Formatter();
  boolean doPrint=false, doFile=false;
  ArrayList<String> searchArgs=new ArrayList<String>();
  for (int i=0; args != null && i < args.length; i++) {
    if (args[i].equals("-p") || args[i].equals("--print")) {
      doPrint=true;
    }
 else     if (args[i].equals("-f") || args[i].equals("--file")) {
      doFile=true;
    }
 else     if (args[i].startsWith("-")) {
      out.format("Unknown argument: %s\n",args[i]);
    }
 else {
      searchArgs.add(args[i]);
    }
  }
  out.format("Drop box contents: %d entries\n",mAllFiles.contents.size());
  if (!searchArgs.isEmpty()) {
    out.format("Searching for:");
    for (    String a : searchArgs)     out.format(" %s",a);
    out.format("\n");
  }
  int numFound=0, numArgs=searchArgs.size();
  Time time=new Time();
  out.format("\n");
  for (  EntryFile entry : mAllFiles.contents) {
    time.set(entry.timestampMillis);
    String date=time.format("%Y-%m-%d %H:%M:%S");
    boolean match=true;
    for (int i=0; i < numArgs && match; i++) {
      String arg=searchArgs.get(i);
      match=(date.contains(arg) || arg.equals(entry.tag));
    }
    if (!match)     continue;
    numFound++;
    out.format("%s.%03d %s",date,entry.timestampMillis % 1000,entry.tag == null ? "(no tag)" : entry.tag);
    if (entry.file == null) {
      out.format(" (no file)\n");
      continue;
    }
 else     if ((entry.flags & DropBoxManager.IS_EMPTY) != 0) {
      out.format(" (contents lost)\n");
      continue;
    }
 else {
      out.format(" (%s%s, %d bytes)\n",(entry.flags & DropBoxManager.IS_GZIPPED) != 0 ? "compressed " : "",(entry.flags & DropBoxManager.IS_TEXT) != 0 ? "text" : "data",entry.file.length());
    }
    if (doFile || (doPrint && (entry.flags & DropBoxManager.IS_TEXT) == 0)) {
      out.format("%s%s\n",(doPrint ? "" : "    "),entry.file.getPath());
    }
    if ((entry.flags & DropBoxManager.IS_TEXT) != 0 && (doPrint || !doFile)) {
      DropBoxManager.Entry dbe=null;
      try {
        dbe=new DropBoxManager.Entry(entry.tag,entry.timestampMillis,entry.file,entry.flags);
        if (doPrint) {
          InputStreamReader r=new InputStreamReader(dbe.getInputStream());
          char[] buf=new char[4096];
          boolean newline=false;
          for (; ; ) {
            int n=r.read(buf);
            if (n <= 0)             break;
            out.format("%s",new String(buf,0,n));
            newline=(buf[n - 1] == '\n');
          }
          if (!newline)           out.format("\n");
        }
 else {
          String text=dbe.getText(70);
          boolean truncated=(text.length() == 70);
          out.format("    %s%s\n",text.trim().replace('\n','/'),truncated ? " ..." : "");
        }
      }
 catch (      IOException e) {
        out.format("*** %s\n",e.toString());
        Log.e(TAG,"Can't read: " + entry.file,e);
      }
 finally {
        if (dbe != null)         dbe.close();
      }
    }
    if (doPrint)     out.format("\n");
  }
  if (numFound == 0)   out.format("(No entries found.)\n");
  if (args == null || args.length == 0) {
    if (!doPrint)     out.format("\n");
    out.format("Usage: dumpsys dropbox [--print|--file] [YYYY-mm-dd] [HH:MM:SS] [tag]\n");
  }
  pw.write(out.toString());
  if (PROFILE_DUMP)   Debug.stopMethodTracing();
}
