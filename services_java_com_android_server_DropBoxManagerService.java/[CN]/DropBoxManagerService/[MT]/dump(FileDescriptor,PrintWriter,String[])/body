{
  if (mContext.checkCallingOrSelfPermission(android.Manifest.permission.DUMP) != PackageManager.PERMISSION_GRANTED) {
    pw.println("Permission Denial: Can't dump DropBoxManagerService");
    return;
  }
  try {
    init();
  }
 catch (  IOException e) {
    pw.println("Can't initialize: " + e);
    Slog.e(TAG,"Can't init",e);
    return;
  }
  if (PROFILE_DUMP)   Debug.startMethodTracing("/data/trace/dropbox.dump");
  StringBuilder out=new StringBuilder();
  boolean doPrint=false, doFile=false;
  ArrayList<String> searchArgs=new ArrayList<String>();
  for (int i=0; args != null && i < args.length; i++) {
    if (args[i].equals("-p") || args[i].equals("--print")) {
      doPrint=true;
    }
 else     if (args[i].equals("-f") || args[i].equals("--file")) {
      doFile=true;
    }
 else     if (args[i].startsWith("-")) {
      out.append("Unknown argument: ").append(args[i]).append("\n");
    }
 else {
      searchArgs.add(args[i]);
    }
  }
  out.append("Drop box contents: ").append(mAllFiles.contents.size()).append(" entries\n");
  if (!searchArgs.isEmpty()) {
    out.append("Searching for:");
    for (    String a : searchArgs)     out.append(" ").append(a);
    out.append("\n");
  }
  int numFound=0, numArgs=searchArgs.size();
  Time time=new Time();
  out.append("\n");
  for (  EntryFile entry : mAllFiles.contents) {
    time.set(entry.timestampMillis);
    String date=time.format("%Y-%m-%d %H:%M:%S");
    boolean match=true;
    for (int i=0; i < numArgs && match; i++) {
      String arg=searchArgs.get(i);
      match=(date.contains(arg) || arg.equals(entry.tag));
    }
    if (!match)     continue;
    numFound++;
    if (doPrint)     out.append("========================================\n");
    out.append(date).append(" ").append(entry.tag == null ? "(no tag)" : entry.tag);
    if (entry.file == null) {
      out.append(" (no file)\n");
      continue;
    }
 else     if ((entry.flags & DropBoxManager.IS_EMPTY) != 0) {
      out.append(" (contents lost)\n");
      continue;
    }
 else {
      out.append(" (");
      if ((entry.flags & DropBoxManager.IS_GZIPPED) != 0)       out.append("compressed ");
      out.append((entry.flags & DropBoxManager.IS_TEXT) != 0 ? "text" : "data");
      out.append(", ").append(entry.file.length()).append(" bytes)\n");
    }
    if (doFile || (doPrint && (entry.flags & DropBoxManager.IS_TEXT) == 0)) {
      if (!doPrint)       out.append("    ");
      out.append(entry.file.getPath()).append("\n");
    }
    if ((entry.flags & DropBoxManager.IS_TEXT) != 0 && (doPrint || !doFile)) {
      DropBoxManager.Entry dbe=null;
      InputStreamReader isr=null;
      try {
        dbe=new DropBoxManager.Entry(entry.tag,entry.timestampMillis,entry.file,entry.flags);
        if (doPrint) {
          isr=new InputStreamReader(dbe.getInputStream());
          char[] buf=new char[4096];
          boolean newline=false;
          for (; ; ) {
            int n=isr.read(buf);
            if (n <= 0)             break;
            out.append(buf,0,n);
            newline=(buf[n - 1] == '\n');
            if (out.length() > 65536) {
              pw.write(out.toString());
              out.setLength(0);
            }
          }
          if (!newline)           out.append("\n");
        }
 else {
          String text=dbe.getText(70);
          boolean truncated=(text.length() == 70);
          out.append("    ").append(text.trim().replace('\n','/'));
          if (truncated)           out.append(" ...");
          out.append("\n");
        }
      }
 catch (      IOException e) {
        out.append("*** ").append(e.toString()).append("\n");
        Slog.e(TAG,"Can't read: " + entry.file,e);
      }
 finally {
        if (dbe != null)         dbe.close();
        if (isr != null) {
          try {
            isr.close();
          }
 catch (          IOException unused) {
          }
        }
      }
    }
    if (doPrint)     out.append("\n");
  }
  if (numFound == 0)   out.append("(No entries found.)\n");
  if (args == null || args.length == 0) {
    if (!doPrint)     out.append("\n");
    out.append("Usage: dumpsys dropbox [--print|--file] [YYYY-mm-dd] [HH:MM:SS] [tag]\n");
  }
  pw.write(out.toString());
  if (PROFILE_DUMP)   Debug.stopMethodTracing();
}
