{
  if (mStatFs == null) {
    if (!mDropBoxDir.isDirectory() && !mDropBoxDir.mkdirs()) {
      throw new IOException("Can't mkdir: " + mDropBoxDir);
    }
    try {
      mStatFs=new StatFs(mDropBoxDir.getPath());
      mBlockSize=mStatFs.getBlockSize();
    }
 catch (    IllegalArgumentException e) {
      throw new IOException("Can't statfs: " + mDropBoxDir);
    }
  }
  if (mAllFiles == null) {
    File[] files=mDropBoxDir.listFiles();
    if (files == null)     throw new IOException("Can't list files: " + mDropBoxDir);
    mAllFiles=new FileList();
    mFilesByTag=new HashMap<String,FileList>();
    for (    File file : files) {
      if (file.getName().endsWith(".tmp")) {
        Log.i(TAG,"Cleaning temp file: " + file);
        file.delete();
        continue;
      }
      EntryFile entry=new EntryFile(file,mBlockSize);
      if (entry.tag == null) {
        Log.w(TAG,"Unrecognized file: " + file);
        continue;
      }
 else       if (entry.timestampMillis == 0) {
        Log.w(TAG,"Invalid filename: " + file);
        file.delete();
        continue;
      }
      enrollEntry(entry);
    }
  }
}
