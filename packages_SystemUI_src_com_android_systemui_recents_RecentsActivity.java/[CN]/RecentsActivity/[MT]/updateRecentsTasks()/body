{
  RecentsTaskLoader loader=RecentsTaskLoader.getInstance();
  RecentsTaskLoadPlan plan=Recents.consumeInstanceLoadPlan();
  if (plan == null) {
    plan=loader.createLoadPlan(this);
  }
  if (!plan.hasTasks()) {
    loader.preloadTasks(plan,mConfig.launchedFromHome);
  }
  RecentsTaskLoadPlan.Options loadOpts=new RecentsTaskLoadPlan.Options();
  loadOpts.runningTaskId=mConfig.launchedToTaskId;
  loadOpts.numVisibleTasks=mConfig.launchedNumVisibleTasks;
  loadOpts.numVisibleTaskThumbnails=mConfig.launchedNumVisibleThumbnails;
  loader.loadTasks(this,plan,loadOpts);
  TaskStack stack=plan.getTaskStack();
  mConfig.launchedWithNoRecentTasks=!plan.hasTasks();
  if (!mConfig.launchedWithNoRecentTasks) {
    mRecentsView.setTaskStack(stack);
  }
  Intent homeIntent=new Intent(Intent.ACTION_MAIN,null);
  homeIntent.addCategory(Intent.CATEGORY_HOME);
  homeIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED);
  mFinishLaunchHomeRunnable=new FinishRecentsRunnable(homeIntent,ActivityOptions.makeCustomAnimation(this,mConfig.launchedFromSearchHome ? R.anim.recents_to_search_launcher_enter : R.anim.recents_to_launcher_enter,mConfig.launchedFromSearchHome ? R.anim.recents_to_search_launcher_exit : R.anim.recents_to_launcher_exit));
  int launchTaskIndexInStack=0;
  if (mConfig.launchedToTaskId != -1) {
    ArrayList<Task> tasks=stack.getTasks();
    int taskCount=tasks.size();
    for (int j=0; j < taskCount; j++) {
      Task t=tasks.get(j);
      if (t.key.id == mConfig.launchedToTaskId) {
        t.isLaunchTarget=true;
        launchTaskIndexInStack=tasks.size() - j - 1;
        break;
      }
    }
  }
  if (mConfig.launchedWithNoRecentTasks) {
    if (mEmptyView == null) {
      mEmptyView=mEmptyViewStub.inflate();
    }
    mEmptyView.setVisibility(View.VISIBLE);
    mRecentsView.setSearchBarVisibility(View.GONE);
  }
 else {
    if (mEmptyView != null) {
      mEmptyView.setVisibility(View.GONE);
    }
    if (mRecentsView.hasValidSearchBar()) {
      mRecentsView.setSearchBarVisibility(View.VISIBLE);
    }
 else {
      refreshSearchWidgetView();
    }
  }
  mScrimViews.prepareEnterRecentsAnimation();
  if (mConfig.launchedWithAltTab) {
    MetricsLogger.count(this,"overview_trigger_alttab",1);
  }
 else {
    MetricsLogger.count(this,"overview_trigger_nav_btn",1);
  }
  if (mConfig.launchedFromAppWithThumbnail) {
    MetricsLogger.count(this,"overview_source_app",1);
    MetricsLogger.histogram(this,"overview_source_app_index",launchTaskIndexInStack);
  }
 else {
    MetricsLogger.count(this,"overview_source_home",1);
  }
  int taskCount=stack.getTaskCount();
  MetricsLogger.histogram(this,"overview_task_count",taskCount);
}
