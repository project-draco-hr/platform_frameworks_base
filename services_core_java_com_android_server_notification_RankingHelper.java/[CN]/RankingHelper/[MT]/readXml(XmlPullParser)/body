{
  int type=parser.getEventType();
  if (type != XmlPullParser.START_TAG)   return;
  String tag=parser.getName();
  if (!TAG_RANKING.equals(tag))   return;
  mRecords.clear();
  while ((type=parser.next()) != XmlPullParser.END_DOCUMENT) {
    tag=parser.getName();
    if (type == XmlPullParser.END_TAG && TAG_RANKING.equals(tag)) {
      return;
    }
    if (type == XmlPullParser.START_TAG) {
      if (TAG_PACKAGE.equals(tag)) {
        int uid=safeInt(parser,ATT_UID,UserHandle.USER_ALL);
        int priority=safeInt(parser,ATT_PRIORITY,DEFAULT_PRIORITY);
        boolean peekable=safeBool(parser,ATT_PEEKABLE,DEFAULT_PEEKABLE);
        int vis=safeInt(parser,ATT_VISIBILITY,DEFAULT_VISIBILITY);
        String name=parser.getAttributeValue(null,ATT_NAME);
        if (!TextUtils.isEmpty(name)) {
          if (priority != DEFAULT_PRIORITY) {
            getOrCreateRecord(name,uid).priority=priority;
          }
          if (peekable != DEFAULT_PEEKABLE) {
            getOrCreateRecord(name,uid).peekable=peekable;
          }
          if (vis != DEFAULT_VISIBILITY) {
            getOrCreateRecord(name,uid).visibility=vis;
          }
        }
      }
    }
  }
  throw new IllegalStateException("Failed to reach END_DOCUMENT");
}
