{
  final int N=notificationList.size();
  for (int i=N - 1; i >= 0; i--) {
    notificationList.get(i).setGlobalSortKey(null);
  }
  Collections.sort(notificationList,mPreliminaryComparator);
synchronized (mProxyByGroupTmp) {
    for (int i=N - 1; i >= 0; i--) {
      final NotificationRecord record=notificationList.get(i);
      record.setAuthoritativeRank(i);
      final String groupKey=record.getGroupKey();
      boolean isGroupSummary=record.getNotification().isGroupSummary();
      if (isGroupSummary || !mProxyByGroupTmp.containsKey(groupKey)) {
        mProxyByGroupTmp.put(groupKey,record);
      }
    }
    for (int i=0; i < N; i++) {
      final NotificationRecord record=notificationList.get(i);
      NotificationRecord groupProxy=mProxyByGroupTmp.get(record.getGroupKey());
      String groupSortKey=record.getNotification().getSortKey();
      String groupSortKeyPortion;
      if (groupSortKey == null) {
        groupSortKeyPortion="nsk";
      }
 else       if (groupSortKey.equals("")) {
        groupSortKeyPortion="esk";
      }
 else {
        groupSortKeyPortion="gsk=" + groupSortKey;
      }
      boolean isGroupSummary=record.getNotification().isGroupSummary();
      record.setGlobalSortKey(String.format("intrsv=%c:grnk=0x%04x:gsmry=%c:%s:rnk=0x%04x",record.isRecentlyIntrusive() ? '0' : '1',groupProxy.getAuthoritativeRank(),isGroupSummary ? '0' : '1',groupSortKeyPortion,record.getAuthoritativeRank()));
    }
    mProxyByGroupTmp.clear();
  }
  Collections.sort(notificationList,mFinalComparator);
}
