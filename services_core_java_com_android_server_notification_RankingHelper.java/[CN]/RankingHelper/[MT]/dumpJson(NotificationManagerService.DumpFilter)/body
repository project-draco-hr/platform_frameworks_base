{
  JSONObject ranking=new JSONObject();
  JSONArray records=new JSONArray();
  try {
    ranking.put("noUid",mRestoredWithoutUids.size());
  }
 catch (  JSONException e) {
  }
  final int N=mRecords.size();
  for (int i=0; i < N; i++) {
    final Record r=mRecords.valueAt(i);
    if (filter == null || filter.matches(r.pkg)) {
      JSONObject record=new JSONObject();
      try {
        record.put("userId",UserHandle.getUserId(r.uid));
        record.put("packageName",r.pkg);
        if (r.importance != DEFAULT_IMPORTANCE) {
          record.put("importance",Ranking.importanceToString(r.importance));
        }
        if (r.priority != DEFAULT_PRIORITY) {
          record.put("priority",Notification.priorityToString(r.priority));
        }
        if (r.visibility != DEFAULT_VISIBILITY) {
          record.put("visibility",Notification.visibilityToString(r.visibility));
        }
      }
 catch (      JSONException e) {
      }
      records.put(record);
    }
  }
  try {
    ranking.put("records",records);
  }
 catch (  JSONException e) {
  }
  return ranking;
}
