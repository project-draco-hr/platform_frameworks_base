{
  final String selection;
  final String[] args;
  if (parentId != null) {
    selection=COLUMN_PARENT_DOCUMENT_ID + " = ?";
    args=strings(parentId);
  }
 else {
    selection=COLUMN_PARENT_DOCUMENT_ID + " IS NULL";
    args=EMPTY_ARGS;
  }
  final SQLiteDatabase database=mDatabase.getSQLiteDatabase();
  database.beginTransaction();
  try {
    final Identifier parentIdentifier=getParentOrHaltMapping(parentId);
    Preconditions.checkState(mInMappingIds.contains(parentId));
    mInMappingIds.remove(parentId);
    boolean changed=false;
    final boolean keepUnmatchedDocument=parentIdentifier == null || parentIdentifier.mDocumentType == DOCUMENT_TYPE_DEVICE;
    if (keepUnmatchedDocument) {
      if (mDatabase.disconnectDocumentsRecursively(COLUMN_ROW_STATE + " = ? AND " + selection,DatabaseUtils.appendSelectionArgs(strings(ROW_STATE_INVALIDATED),args))) {
        changed=true;
      }
    }
 else {
      if (mDatabase.deleteDocumentsAndRootsRecursively(COLUMN_ROW_STATE + " IN (?, ?) AND " + selection,DatabaseUtils.appendSelectionArgs(strings(ROW_STATE_INVALIDATED,ROW_STATE_DISCONNECTED),args))) {
        changed=true;
      }
    }
    database.setTransactionSuccessful();
    return changed;
  }
  finally {
    database.endTransaction();
  }
}
