{
  assertRunOnServiceThread();
  final SparseArray<HdmiCecLocalDevice> devices=new SparseArray<>();
  final int[] finished=new int[1];
  clearLocalDevices();
  for (  int type : deviceTypes) {
    final HdmiCecLocalDevice localDevice=HdmiCecLocalDevice.create(this,type);
    localDevice.init();
    mCecController.allocateLogicalAddress(type,localDevice.getPreferredAddress(),new AllocateAddressCallback(){
      @Override public void onAllocated(      int deviceType,      int logicalAddress){
        if (logicalAddress == Constants.ADDR_UNREGISTERED) {
          Slog.e(TAG,"Failed to allocate address:[device_type:" + deviceType + "]");
        }
 else {
          HdmiDeviceInfo deviceInfo=createDeviceInfo(logicalAddress,deviceType);
          localDevice.setDeviceInfo(deviceInfo);
          mCecController.addLocalDevice(deviceType,localDevice);
          mCecController.addLogicalAddress(logicalAddress);
          devices.append(logicalAddress,localDevice);
        }
        if (deviceTypes.size() == ++finished[0]) {
          onInitializeCecComplete();
          notifyAddressAllocated(devices,initiatedBy);
        }
      }
    }
);
  }
}
