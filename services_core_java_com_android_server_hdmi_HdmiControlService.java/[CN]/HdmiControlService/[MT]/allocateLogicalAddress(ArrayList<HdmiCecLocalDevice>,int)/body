{
  assertRunOnServiceThread();
  final ArrayList<HdmiCecLocalDevice> allocatedDevices=new ArrayList<>();
  final int[] finished=new int[1];
  for (  final HdmiCecLocalDevice localDevice : allocatingDevices) {
    mCecController.allocateLogicalAddress(localDevice.getType(),localDevice.getPreferredAddress(),new AllocateAddressCallback(){
      @Override public void onAllocated(      int deviceType,      int logicalAddress){
        if (logicalAddress == Constants.ADDR_UNREGISTERED) {
          Slog.e(TAG,"Failed to allocate address:[device_type:" + deviceType + "]");
        }
 else {
          HdmiDeviceInfo deviceInfo=createDeviceInfo(logicalAddress,deviceType,HdmiControlManager.POWER_STATUS_ON);
          localDevice.setDeviceInfo(deviceInfo);
          mCecController.addLocalDevice(deviceType,localDevice);
          mCecController.addLogicalAddress(logicalAddress);
          allocatedDevices.add(localDevice);
        }
        if (allocatingDevices.size() == ++finished[0]) {
          if (initiatedBy != INITIATED_BY_HOTPLUG) {
            onInitializeCecComplete();
          }
          notifyAddressAllocated(allocatedDevices,initiatedBy);
        }
      }
    }
);
  }
}
