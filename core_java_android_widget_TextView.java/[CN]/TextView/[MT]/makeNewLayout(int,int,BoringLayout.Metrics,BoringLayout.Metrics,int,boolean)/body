{
  stopMarquee();
  mHighlightPathBogus=true;
  if (w < 0) {
    w=0;
  }
  if (hintWidth < 0) {
    hintWidth=0;
  }
  Layout.Alignment alignment;
switch (mGravity & Gravity.HORIZONTAL_GRAVITY_MASK) {
case Gravity.CENTER_HORIZONTAL:
    alignment=Layout.Alignment.ALIGN_CENTER;
  break;
case Gravity.RIGHT:
alignment=Layout.Alignment.ALIGN_OPPOSITE;
break;
default :
alignment=Layout.Alignment.ALIGN_NORMAL;
}
if (mText instanceof Spannable) {
mLayout=new DynamicLayout(mText,mTransformed,mTextPaint,w,alignment,mSpacingMult,mSpacingAdd,mIncludePad,mEllipsize,ellipsisWidth);
}
 else {
if (boring == UNKNOWN_BORING) {
boring=BoringLayout.isBoring(mTransformed,mTextPaint,mBoring);
if (boring != null) {
mBoring=boring;
}
}
if (boring != null) {
if (boring.width <= w && (mEllipsize == null || boring.width <= ellipsisWidth)) {
if (mSavedLayout != null) {
mLayout=mSavedLayout.replaceOrMake(mTransformed,mTextPaint,w,alignment,mSpacingMult,mSpacingAdd,boring,mIncludePad);
}
 else {
mLayout=BoringLayout.make(mTransformed,mTextPaint,w,alignment,mSpacingMult,mSpacingAdd,boring,mIncludePad);
}
mSavedLayout=(BoringLayout)mLayout;
}
 else if (mEllipsize != null && boring.width <= w) {
if (mSavedLayout != null) {
mLayout=mSavedLayout.replaceOrMake(mTransformed,mTextPaint,w,alignment,mSpacingMult,mSpacingAdd,boring,mIncludePad,mEllipsize,ellipsisWidth);
}
 else {
mLayout=BoringLayout.make(mTransformed,mTextPaint,w,alignment,mSpacingMult,mSpacingAdd,boring,mIncludePad,mEllipsize,ellipsisWidth);
}
}
 else if (mEllipsize != null) {
mLayout=new StaticLayout(mTransformed,0,mTransformed.length(),mTextPaint,w,alignment,mSpacingMult,mSpacingAdd,mIncludePad,mEllipsize,ellipsisWidth);
}
 else {
mLayout=new StaticLayout(mTransformed,mTextPaint,w,alignment,mSpacingMult,mSpacingAdd,mIncludePad);
}
}
 else if (mEllipsize != null) {
mLayout=new StaticLayout(mTransformed,0,mTransformed.length(),mTextPaint,w,alignment,mSpacingMult,mSpacingAdd,mIncludePad,mEllipsize,ellipsisWidth);
}
 else {
mLayout=new StaticLayout(mTransformed,mTextPaint,w,alignment,mSpacingMult,mSpacingAdd,mIncludePad);
}
}
mHintLayout=null;
if (mHint != null) {
if (hintBoring == UNKNOWN_BORING) {
hintBoring=BoringLayout.isBoring(mHint,mTextPaint,mHintBoring);
if (hintBoring != null) {
mHintBoring=hintBoring;
}
}
if (hintBoring != null) {
if (hintBoring.width <= hintWidth) {
if (mSavedHintLayout != null) {
mHintLayout=mSavedHintLayout.replaceOrMake(mHint,mTextPaint,hintWidth,alignment,mSpacingMult,mSpacingAdd,hintBoring,mIncludePad);
}
 else {
mHintLayout=BoringLayout.make(mHint,mTextPaint,hintWidth,alignment,mSpacingMult,mSpacingAdd,hintBoring,mIncludePad);
}
mSavedHintLayout=(BoringLayout)mHintLayout;
}
 else {
mHintLayout=new StaticLayout(mHint,mTextPaint,hintWidth,alignment,mSpacingMult,mSpacingAdd,mIncludePad);
}
}
 else {
mHintLayout=new StaticLayout(mHint,mTextPaint,hintWidth,alignment,mSpacingMult,mSpacingAdd,mIncludePad);
}
}
if (bringIntoView) {
registerForPreDraw();
}
if (mEllipsize == TextUtils.TruncateAt.MARQUEE) {
if (!compressText(ellipsisWidth)) {
final int height=mLayoutParams.height;
if (height != LayoutParams.WRAP_CONTENT && height != LayoutParams.FILL_PARENT) {
startMarquee();
}
 else {
mRestartMarquee=true;
}
}
}
}
