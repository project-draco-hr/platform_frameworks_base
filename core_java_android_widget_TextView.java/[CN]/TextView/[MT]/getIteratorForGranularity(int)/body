{
switch (granularity) {
case AccessibilityNodeInfo.MOVEMENT_GRANULARITY_LINE:
{
      Spannable text=(Spannable)getIterableTextForAccessibility();
      if (!TextUtils.isEmpty(text) && getLayout() != null) {
        AccessibilityIterators.LineTextSegmentIterator iterator=AccessibilityIterators.LineTextSegmentIterator.getInstance();
        iterator.initialize(text,getLayout());
        return iterator;
      }
    }
  break;
case AccessibilityNodeInfo.MOVEMENT_GRANULARITY_PAGE:
{
  Spannable text=(Spannable)getIterableTextForAccessibility();
  if (!TextUtils.isEmpty(text) && getLayout() != null) {
    AccessibilityIterators.PageTextSegmentIterator iterator=AccessibilityIterators.PageTextSegmentIterator.getInstance();
    iterator.initialize(this);
    return iterator;
  }
}
break;
}
return super.getIteratorForGranularity(granularity);
}
