{
  if (!isEnabled()) {
    return super.onKeyUp(keyCode,event);
  }
switch (keyCode) {
case KeyEvent.KEYCODE_DPAD_CENTER:
    if (mOnClickListener == null) {
      if (mMovement != null && mText instanceof Editable && mLayout != null && onCheckIsTextEditor()) {
        InputMethodManager imm=(InputMethodManager)getContext().getSystemService(Context.INPUT_METHOD_SERVICE);
        imm.showSoftInput(this,0);
      }
    }
  return super.onKeyUp(keyCode,event);
case KeyEvent.KEYCODE_ENTER:
if (advanceFocusOnEnter()) {
  if (mOnClickListener == null) {
    View v=focusSearch(FOCUS_DOWN);
    if (v != null) {
      if (!v.requestFocus(FOCUS_DOWN)) {
        throw new IllegalStateException("focus search returned a view " + "that wasn't able to take focus!");
      }
      super.onKeyUp(keyCode,event);
      return true;
    }
  }
  return super.onKeyUp(keyCode,event);
}
}
if (mInput != null) if (mInput.onKeyUp(this,(Editable)mText,keyCode,event)) return true;
if (mMovement != null && mLayout != null) if (mMovement.onKeyUp(this,(Spannable)mText,keyCode,event)) return true;
return super.onKeyUp(keyCode,event);
}
