{
  Layout result=null;
  if (mText instanceof Spannable) {
    result=new DynamicLayout(mText,mTransformed,mTextPaint,wantWidth,alignment,mTextDir,mSpacingMult,mSpacingAdd,mIncludePad,mInput == null ? effectiveEllipsize : null,ellipsisWidth);
  }
 else {
    if (boring == UNKNOWN_BORING) {
      boring=BoringLayout.isBoring(mTransformed,mTextPaint,mTextDir,mBoring);
      if (boring != null) {
        mBoring=boring;
      }
    }
    if (boring != null) {
      if (boring.width <= wantWidth && (effectiveEllipsize == null || boring.width <= ellipsisWidth)) {
        if (useSaved && mSavedLayout != null) {
          result=mSavedLayout.replaceOrMake(mTransformed,mTextPaint,wantWidth,alignment,mSpacingMult,mSpacingAdd,boring,mIncludePad);
        }
 else {
          result=BoringLayout.make(mTransformed,mTextPaint,wantWidth,alignment,mSpacingMult,mSpacingAdd,boring,mIncludePad);
        }
        if (useSaved) {
          mSavedLayout=(BoringLayout)result;
        }
      }
 else       if (shouldEllipsize && boring.width <= wantWidth) {
        if (useSaved && mSavedLayout != null) {
          result=mSavedLayout.replaceOrMake(mTransformed,mTextPaint,wantWidth,alignment,mSpacingMult,mSpacingAdd,boring,mIncludePad,effectiveEllipsize,ellipsisWidth);
        }
 else {
          result=BoringLayout.make(mTransformed,mTextPaint,wantWidth,alignment,mSpacingMult,mSpacingAdd,boring,mIncludePad,effectiveEllipsize,ellipsisWidth);
        }
      }
 else       if (shouldEllipsize) {
        result=new StaticLayout(mTransformed,0,mTransformed.length(),mTextPaint,wantWidth,alignment,mTextDir,mSpacingMult,mSpacingAdd,mIncludePad,effectiveEllipsize,ellipsisWidth,mMaxMode == LINES ? mMaximum : Integer.MAX_VALUE);
      }
 else {
        result=new StaticLayout(mTransformed,mTextPaint,wantWidth,alignment,mTextDir,mSpacingMult,mSpacingAdd,mIncludePad);
      }
    }
 else     if (shouldEllipsize) {
      result=new StaticLayout(mTransformed,0,mTransformed.length(),mTextPaint,wantWidth,alignment,mTextDir,mSpacingMult,mSpacingAdd,mIncludePad,effectiveEllipsize,ellipsisWidth,mMaxMode == LINES ? mMaximum : Integer.MAX_VALUE);
    }
 else {
      result=new StaticLayout(mTransformed,mTextPaint,wantWidth,alignment,mTextDir,mSpacingMult,mSpacingAdd,mIncludePad);
    }
  }
  return result;
}
