{
  final InputContentType ict=mInputContentType;
  if (ict != null) {
    if (ict.onEditorActionListener != null) {
      if (ict.onEditorActionListener.onEditorAction(this,actionCode,null)) {
        return;
      }
    }
    if (actionCode == EditorInfo.IME_ACTION_NEXT) {
      View v=focusSearch(FOCUS_DOWN);
      if (v != null) {
        if (!v.requestFocus(FOCUS_DOWN)) {
          throw new IllegalStateException("focus search returned a view " + "that wasn't able to take focus!");
        }
      }
      return;
    }
 else     if (actionCode == EditorInfo.IME_ACTION_PREVIOUS) {
      View v=focusSearch(FOCUS_UP);
      if (v != null) {
        if (!v.requestFocus(FOCUS_UP)) {
          throw new IllegalStateException("focus search returned a view " + "that wasn't able to take focus!");
        }
      }
      return;
    }
 else     if (actionCode == EditorInfo.IME_ACTION_DONE) {
      InputMethodManager imm=InputMethodManager.peekInstance();
      if (imm != null) {
        imm.hideSoftInputFromWindow(getWindowToken(),0);
      }
      return;
    }
  }
  Handler h=getHandler();
  if (h != null) {
    long eventTime=SystemClock.uptimeMillis();
    h.sendMessage(h.obtainMessage(ViewRoot.DISPATCH_KEY_FROM_IME,new KeyEvent(eventTime,eventTime,KeyEvent.ACTION_DOWN,KeyEvent.KEYCODE_ENTER,0,0,0,0,KeyEvent.FLAG_SOFT_KEYBOARD | KeyEvent.FLAG_KEEP_TOUCH_MODE | KeyEvent.FLAG_EDITOR_ACTION)));
    h.sendMessage(h.obtainMessage(ViewRoot.DISPATCH_KEY_FROM_IME,new KeyEvent(SystemClock.uptimeMillis(),eventTime,KeyEvent.ACTION_UP,KeyEvent.KEYCODE_ENTER,0,0,0,0,KeyEvent.FLAG_SOFT_KEYBOARD | KeyEvent.FLAG_KEEP_TOUCH_MODE | KeyEvent.FLAG_EDITOR_ACTION)));
  }
}
