{
  mDrawableLeft=left;
  mDrawableTop=top;
  mDrawableRight=right;
  mDrawableBottom=bottom;
  mDrawables=mDrawableLeft != null || mDrawableRight != null || mDrawableTop != null || mDrawableBottom != null;
  if (mCompoundRect == null && (left != null || top != null || right != null || bottom != null)) {
    mCompoundRect=new Rect();
  }
  final Rect compoundRect=mCompoundRect;
  int[] state=null;
  if (mDrawables) {
    state=getDrawableState();
  }
  if (mDrawableLeft != null) {
    mDrawableLeft.setState(state);
    mDrawableLeft.copyBounds(compoundRect);
    mDrawableSizeLeft=compoundRect.width();
    mDrawableHeightLeft=compoundRect.height();
  }
 else {
    mDrawableSizeLeft=mDrawableHeightLeft=0;
  }
  if (mDrawableRight != null) {
    mDrawableRight.setState(state);
    mDrawableRight.copyBounds(compoundRect);
    mDrawableSizeRight=compoundRect.width();
    mDrawableHeightRight=compoundRect.height();
  }
 else {
    mDrawableSizeRight=mDrawableHeightRight=0;
  }
  if (mDrawableTop != null) {
    mDrawableTop.setState(state);
    mDrawableTop.copyBounds(compoundRect);
    mDrawableSizeTop=compoundRect.height();
    mDrawableWidthTop=compoundRect.width();
  }
 else {
    mDrawableSizeTop=mDrawableWidthTop=0;
  }
  if (mDrawableBottom != null) {
    mDrawableBottom.setState(state);
    mDrawableBottom.copyBounds(compoundRect);
    mDrawableSizeBottom=compoundRect.height();
    mDrawableWidthBottom=compoundRect.width();
  }
 else {
    mDrawableSizeBottom=mDrawableWidthBottom=0;
  }
  invalidate();
  requestLayout();
}
