{
  if (onCheckIsTextEditor()) {
    if (mInputMethodState == null) {
      mInputMethodState=new InputMethodState();
    }
    outAttrs.inputType=mInputType;
    if (mInputContentType != null) {
      outAttrs.imeOptions=mInputContentType.imeOptions;
      outAttrs.privateImeOptions=mInputContentType.privateImeOptions;
      outAttrs.actionLabel=mInputContentType.imeActionLabel;
      outAttrs.actionId=mInputContentType.imeActionId;
      outAttrs.extras=mInputContentType.extras;
    }
 else {
      outAttrs.imeOptions=EditorInfo.IME_UNDEFINED;
    }
    if (outAttrs.imeOptions == EditorInfo.IME_UNDEFINED) {
      if (focusSearch(FOCUS_DOWN) != null) {
        outAttrs.imeOptions=EditorInfo.IME_ACTION_NEXT;
        if (!shouldAdvanceFocusOnEnter()) {
          outAttrs.imeOptions|=EditorInfo.IME_FLAG_NO_ENTER_ACTION;
        }
      }
    }
    outAttrs.hintText=mHint;
    if (mText instanceof Editable) {
      InputConnection ic=new EditableInputConnection(this);
      outAttrs.initialSelStart=Selection.getSelectionStart(mText);
      outAttrs.initialSelEnd=Selection.getSelectionEnd(mText);
      outAttrs.initialCapsMode=ic.getCursorCapsMode(mInputType);
      return ic;
    }
  }
  return null;
}
