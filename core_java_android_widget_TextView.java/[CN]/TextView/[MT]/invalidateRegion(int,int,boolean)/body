{
  if (mLayout == null) {
    invalidate();
  }
 else {
    int lineStart=mLayout.getLineForOffset(start);
    int top=mLayout.getLineTop(lineStart);
    if (lineStart > 0) {
      top-=mLayout.getLineDescent(lineStart - 1);
    }
    int lineEnd;
    if (start == end)     lineEnd=lineStart;
 else     lineEnd=mLayout.getLineForOffset(end);
    int bottom=mLayout.getLineBottom(lineEnd);
    if (invalidateCursor) {
      for (int i=0; i < getEditor().mCursorCount; i++) {
        Rect bounds=getEditor().mCursorDrawable[i].getBounds();
        top=Math.min(top,bounds.top);
        bottom=Math.max(bottom,bounds.bottom);
      }
    }
    final int compoundPaddingLeft=getCompoundPaddingLeft();
    final int verticalPadding=getExtendedPaddingTop() + getVerticalOffset(true);
    int left, right;
    if (lineStart == lineEnd && !invalidateCursor) {
      left=(int)mLayout.getPrimaryHorizontal(start);
      right=(int)(mLayout.getPrimaryHorizontal(end) + 1.0);
      left+=compoundPaddingLeft;
      right+=compoundPaddingLeft;
    }
 else {
      left=compoundPaddingLeft;
      right=getWidth() - getCompoundPaddingRight();
    }
    invalidate(mScrollX + left,verticalPadding + top,mScrollX + right,verticalPadding + bottom);
  }
}
