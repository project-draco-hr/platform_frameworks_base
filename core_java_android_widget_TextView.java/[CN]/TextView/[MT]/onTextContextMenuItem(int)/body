{
  int min=0;
  int max=mText.length();
  if (isFocused()) {
    int selStart=getSelectionStart();
    int selEnd=getSelectionEnd();
    min=Math.max(0,Math.min(selStart,selEnd));
    max=Math.max(0,Math.max(selStart,selEnd));
  }
  ClipboardManager clipboard=(ClipboardManager)getContext().getSystemService(Context.CLIPBOARD_SERVICE);
switch (id) {
case ID_COPY_URL:
    MetaKeyKeyListener.stopSelecting(this,(Spannable)mText);
  URLSpan[] urls=((Spanned)mText).getSpans(min,max,URLSpan.class);
if (urls.length >= 1) {
  ClippedData clip=null;
  for (int i=0; i < urls.length; i++) {
    Uri uri=Uri.parse(urls[0].getURL());
    ClippedData.Item item=new ClippedData.Item(uri);
    if (clip == null) {
      clip=new ClippedData(null,null,item);
    }
 else {
      clip.addItem(item);
    }
  }
  clipboard.setPrimaryClip(clip);
}
return true;
case ID_SELECTION_MODE:
startSelectionActionMode();
return true;
}
return false;
}
