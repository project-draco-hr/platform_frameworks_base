{
  int min=0;
  int max=mText.length();
  if (isFocused()) {
    final int selStart=getSelectionStart();
    final int selEnd=getSelectionEnd();
    min=Math.max(0,Math.min(selStart,selEnd));
    max=Math.max(0,Math.max(selStart,selEnd));
  }
  ClipboardManager clipboard=(ClipboardManager)getContext().getSystemService(Context.CLIPBOARD_SERVICE);
switch (id) {
case ID_COPY_URL:
    URLSpan[] urls=((Spanned)mText).getSpans(min,max,URLSpan.class);
  if (urls.length >= 1) {
    ClipData clip=null;
    for (int i=0; i < urls.length; i++) {
      Uri uri=Uri.parse(urls[0].getURL());
      if (clip == null) {
        clip=ClipData.newRawUri(null,null,uri);
      }
 else {
        clip.addItem(new ClipData.Item(uri));
      }
    }
    if (clip != null) {
      setPrimaryClip(clip);
    }
  }
return true;
case ID_SELECTION_MODE:
startSelectionActionMode();
return true;
}
return false;
}
