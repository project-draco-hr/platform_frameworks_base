{
  if (hasSelection()) {
    return;
  }
  int selectionStart, selectionEnd;
  SelectionModifierCursorController selectionModifierCursorController=((SelectionModifierCursorController)mSelectionModifierCursorController);
  int minOffset=selectionModifierCursorController.getMinTouchOffset();
  int maxOffset=selectionModifierCursorController.getMaxTouchOffset();
  if (minOffset == maxOffset) {
    int offset=Math.max(0,Math.min(minOffset,mTransformed.length()));
    final int range=1;
    final int max=mTransformed.length() - 1;
    for (int i=-range; i <= range; i++) {
      int index=offset + i;
      if (index >= 0 && index <= max) {
        if (Character.isSpaceChar(mTransformed.charAt(index))) {
          selectionStart=index;
          selectionEnd=selectionStart + 1;
          while (selectionStart > 0 && Character.isSpaceChar(mTransformed.charAt(selectionStart - 1))) {
            selectionStart--;
          }
          while (selectionEnd < max && Character.isSpaceChar(mTransformed.charAt(selectionEnd))) {
            selectionEnd++;
          }
          Selection.setSelection((Spannable)mText,selectionStart,selectionEnd);
          return;
        }
      }
    }
    if (offset <= range) {
      Selection.setSelection((Spannable)mText,0,0);
      return;
    }
    if (offset >= (max - range)) {
      Selection.setSelection((Spannable)mText,max + 1,max + 1);
      return;
    }
  }
  long wordLimits=getWordLimitsAt(minOffset);
  if (wordLimits >= 0) {
    selectionStart=(int)(wordLimits >>> 32);
  }
 else {
    selectionStart=Math.max(minOffset - 5,0);
  }
  wordLimits=getWordLimitsAt(maxOffset);
  if (wordLimits >= 0) {
    selectionEnd=(int)(wordLimits & 0x00000000FFFFFFFFL);
  }
 else {
    selectionEnd=Math.min(maxOffset + 5,mText.length());
  }
  Selection.setSelection((Spannable)mText,selectionStart,selectionEnd);
}
