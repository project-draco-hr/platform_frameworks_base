{
  if (!canSelectText()) {
    return;
  }
  if (hasPasswordTransformationMethod()) {
    selectAll();
    return;
  }
  long lastTouchOffsets=getLastTouchOffsets();
  final int minOffset=extractRangeStartFromLong(lastTouchOffsets);
  final int maxOffset=extractRangeEndFromLong(lastTouchOffsets);
  int selectionStart, selectionEnd;
  URLSpan[] urlSpans=((Spanned)mText).getSpans(minOffset,maxOffset,URLSpan.class);
  if (urlSpans.length == 1) {
    URLSpan url=urlSpans[0];
    selectionStart=((Spanned)mText).getSpanStart(url);
    selectionEnd=((Spanned)mText).getSpanEnd(url);
  }
 else {
    long wordLimits=getWordLimitsAt(minOffset);
    if (wordLimits >= 0) {
      selectionStart=extractRangeStartFromLong(wordLimits);
    }
 else {
      selectionStart=Math.max(minOffset - 5,0);
    }
    wordLimits=getWordLimitsAt(maxOffset);
    if (wordLimits >= 0) {
      selectionEnd=extractRangeEndFromLong(wordLimits);
    }
 else {
      selectionEnd=Math.min(maxOffset + 5,mText.length());
    }
  }
  Selection.setSelection((Spannable)mText,selectionStart,selectionEnd);
}
