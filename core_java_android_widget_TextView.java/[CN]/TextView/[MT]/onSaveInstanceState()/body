{
  Parcelable superState=super.onSaveInstanceState();
  final boolean freezesText=getFreezesText();
  boolean hasSelection=false;
  int start=-1;
  int end=-1;
  if (mText != null) {
    start=getSelectionStart();
    end=getSelectionEnd();
    if (start >= 0 || end >= 0) {
      hasSelection=true;
    }
  }
  if (freezesText || hasSelection) {
    SavedState ss=new SavedState(superState);
    if (freezesText) {
      if (mText instanceof Spanned) {
        final Spannable sp=new SpannableStringBuilder(mText);
        if (mEditor != null) {
          removeMisspelledSpans(sp);
          sp.removeSpan(mEditor.mSuggestionRangeSpan);
        }
        ss.text=sp;
      }
 else {
        ss.text=mText.toString();
      }
    }
    if (hasSelection) {
      ss.selStart=start;
      ss.selEnd=end;
    }
    if (isFocused() && start >= 0 && end >= 0) {
      ss.frozenWithFocus=true;
    }
    ss.error=getError();
    if (mEditor != null) {
      ss.editorState=mEditor.saveInstanceState();
    }
    return ss;
  }
  return superState;
}
