{
  final int textLength=mText.length();
  if (offset + 1 < textLength) {
    final char currentChar=mText.charAt(offset);
    final char nextChar=mText.charAt(offset + 1);
    if (Character.isSurrogatePair(currentChar,nextChar)) {
      return TextUtils.packRangeInLong(offset,offset + 2);
    }
  }
  if (offset < textLength) {
    return TextUtils.packRangeInLong(offset,offset + 1);
  }
  if (offset - 2 >= 0) {
    final char previousChar=mText.charAt(offset - 1);
    final char previousPreviousChar=mText.charAt(offset - 2);
    if (Character.isSurrogatePair(previousPreviousChar,previousChar)) {
      return TextUtils.packRangeInLong(offset - 2,offset);
    }
  }
  if (offset - 1 >= 0) {
    return TextUtils.packRangeInLong(offset - 1,offset);
  }
  return TextUtils.packRangeInLong(offset,offset);
}
