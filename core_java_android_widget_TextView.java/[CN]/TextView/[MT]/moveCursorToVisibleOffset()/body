{
  if (!(mText instanceof Spannable)) {
    return false;
  }
  int start=getSelectionStart();
  int end=getSelectionEnd();
  if (start != end) {
    return false;
  }
  int line=mLayout.getLineForOffset(start);
  final int top=mLayout.getLineTop(line);
  final int bottom=mLayout.getLineTop(line + 1);
  final int vspace=mBottom - mTop - getExtendedPaddingTop()- getExtendedPaddingBottom();
  int vslack=(bottom - top) / 2;
  if (vslack > vspace / 4)   vslack=vspace / 4;
  final int vs=mScrollY;
  if (top < (vs + vslack)) {
    line=mLayout.getLineForVertical(vs + vslack + (bottom - top));
  }
 else   if (bottom > (vspace + vs - vslack)) {
    line=mLayout.getLineForVertical(vspace + vs - vslack - (bottom - top));
  }
  final int hspace=mRight - mLeft - getCompoundPaddingLeft()- getCompoundPaddingRight();
  final int hs=mScrollX;
  final int leftChar=mLayout.getOffsetForHorizontal(line,hs);
  final int rightChar=mLayout.getOffsetForHorizontal(line,hspace + hs);
  int newStart=start;
  if (newStart < leftChar) {
    newStart=leftChar;
  }
 else   if (newStart > rightChar) {
    newStart=rightChar;
  }
  if (newStart != start) {
    Selection.setSelection((Spannable)mText,newStart);
    return true;
  }
  return false;
}
