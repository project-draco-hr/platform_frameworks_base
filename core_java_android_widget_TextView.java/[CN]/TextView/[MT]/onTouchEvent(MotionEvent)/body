{
  final int action=event.getActionMasked();
  if (mEditor != null)   getEditor().onTouchEvent(event);
  final boolean superResult=super.onTouchEvent(event);
  if (mEditor != null && getEditor().mDiscardNextActionUp && action == MotionEvent.ACTION_UP) {
    getEditor().mDiscardNextActionUp=false;
    return superResult;
  }
  final boolean touchIsFinished=(action == MotionEvent.ACTION_UP) && (mEditor == null || !getEditor().mIgnoreActionUpEvent) && isFocused();
  if ((mMovement != null || onCheckIsTextEditor()) && isEnabled() && mText instanceof Spannable&& mLayout != null) {
    boolean handled=false;
    if (mMovement != null) {
      handled|=mMovement.onTouchEvent(this,(Spannable)mText,event);
    }
    final boolean textIsSelectable=isTextSelectable();
    if (touchIsFinished && mLinksClickable && mAutoLinkMask != 0 && textIsSelectable) {
      ClickableSpan[] links=((Spannable)mText).getSpans(getSelectionStart(),getSelectionEnd(),ClickableSpan.class);
      if (links.length > 0) {
        links[0].onClick(this);
        handled=true;
      }
    }
    if (touchIsFinished && (isTextEditable() || textIsSelectable)) {
      final InputMethodManager imm=InputMethodManager.peekInstance();
      viewClicked(imm);
      if (!textIsSelectable) {
        handled|=imm != null && imm.showSoftInput(this,0);
      }
      boolean selectAllGotFocus=getEditor().mSelectAllOnFocus && didTouchFocusSelect();
      hideControllers();
      if (!selectAllGotFocus && mText.length() > 0) {
        final int offset=getOffsetForPosition(event.getX(),event.getY());
        Selection.setSelection((Spannable)mText,offset);
        if (getEditor().mSpellChecker != null) {
          getEditor().mSpellChecker.onSelectionChanged();
        }
        if (!extractedTextModeWillBeStarted()) {
          if (isCursorInsideEasyCorrectionSpan()) {
            getEditor().mShowSuggestionRunnable=new Runnable(){
              public void run(){
                showSuggestions();
              }
            }
;
            postDelayed(getEditor().mShowSuggestionRunnable,ViewConfiguration.getDoubleTapTimeout());
          }
 else           if (hasInsertionController()) {
            getInsertionController().show();
          }
        }
      }
      handled=true;
    }
    if (handled) {
      return true;
    }
  }
  return superResult;
}
