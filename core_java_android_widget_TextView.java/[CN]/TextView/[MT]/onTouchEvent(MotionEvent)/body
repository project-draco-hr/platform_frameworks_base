{
  final int action=event.getActionMasked();
  if (action == MotionEvent.ACTION_DOWN) {
    if (mInsertionPointCursorController != null) {
      mInsertionPointCursorController.onTouchEvent(event);
    }
    if (mSelectionModifierCursorController != null) {
      mSelectionModifierCursorController.onTouchEvent(event);
    }
    mTouchFocusSelected=false;
    mScrolled=false;
  }
  final boolean superResult=super.onTouchEvent(event);
  if (mEatTouchRelease && action == MotionEvent.ACTION_UP) {
    mEatTouchRelease=false;
    return superResult;
  }
  if ((mMovement != null || onCheckIsTextEditor()) && mText instanceof Spannable && mLayout != null) {
    if (mInsertionPointCursorController != null) {
      mInsertionPointCursorController.onTouchEvent(event);
    }
    if (mSelectionModifierCursorController != null) {
      mSelectionModifierCursorController.onTouchEvent(event);
    }
    boolean handled=false;
    int oldSelStart=getSelectionStart();
    int oldSelEnd=getSelectionEnd();
    final int oldScrollX=mScrollX;
    final int oldScrollY=mScrollY;
    if (mMovement != null) {
      handled|=mMovement.onTouchEvent(this,(Spannable)mText,event);
    }
    if (isTextEditable()) {
      if (mScrollX != oldScrollX || mScrollY != oldScrollY) {
        hideInsertionPointCursorController();
        if (mSelectionModifierCursorController != null && mSelectionModifierCursorController.isShowing()) {
          mSelectionModifierCursorController.updatePosition();
        }
      }
      if (action == MotionEvent.ACTION_UP && isFocused() && !mScrolled) {
        InputMethodManager imm=(InputMethodManager)getContext().getSystemService(Context.INPUT_METHOD_SERVICE);
        CommitSelectionReceiver csr=null;
        if (getSelectionStart() != oldSelStart || getSelectionEnd() != oldSelEnd || didTouchFocusSelect()) {
          csr=new CommitSelectionReceiver(oldSelStart,oldSelEnd);
        }
        handled|=imm.showSoftInput(this,0,csr) && (csr != null);
        onTapUpEvent(oldSelStart,oldSelEnd);
      }
    }
    if (handled) {
      return true;
    }
  }
  return superResult;
}
