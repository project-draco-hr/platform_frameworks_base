{
  boolean handled=false;
  if (verifyDrawable(drawable)) {
    final Rect dirty=drawable.getBounds();
    int scrollX=mScrollX;
    int scrollY=mScrollY;
    final TextView.Drawables drawables=mDrawables;
    if (drawables != null) {
      if (drawable == drawables.mShowing[Drawables.LEFT]) {
        final int compoundPaddingTop=getCompoundPaddingTop();
        final int compoundPaddingBottom=getCompoundPaddingBottom();
        final int vspace=mBottom - mTop - compoundPaddingBottom- compoundPaddingTop;
        scrollX+=mPaddingLeft;
        scrollY+=compoundPaddingTop + (vspace - drawables.mDrawableHeightLeft) / 2;
        handled=true;
      }
 else       if (drawable == drawables.mShowing[Drawables.RIGHT]) {
        final int compoundPaddingTop=getCompoundPaddingTop();
        final int compoundPaddingBottom=getCompoundPaddingBottom();
        final int vspace=mBottom - mTop - compoundPaddingBottom- compoundPaddingTop;
        scrollX+=(mRight - mLeft - mPaddingRight- drawables.mDrawableSizeRight);
        scrollY+=compoundPaddingTop + (vspace - drawables.mDrawableHeightRight) / 2;
        handled=true;
      }
 else       if (drawable == drawables.mShowing[Drawables.TOP]) {
        final int compoundPaddingLeft=getCompoundPaddingLeft();
        final int compoundPaddingRight=getCompoundPaddingRight();
        final int hspace=mRight - mLeft - compoundPaddingRight- compoundPaddingLeft;
        scrollX+=compoundPaddingLeft + (hspace - drawables.mDrawableWidthTop) / 2;
        scrollY+=mPaddingTop;
        handled=true;
      }
 else       if (drawable == drawables.mShowing[Drawables.BOTTOM]) {
        final int compoundPaddingLeft=getCompoundPaddingLeft();
        final int compoundPaddingRight=getCompoundPaddingRight();
        final int hspace=mRight - mLeft - compoundPaddingRight- compoundPaddingLeft;
        scrollX+=compoundPaddingLeft + (hspace - drawables.mDrawableWidthBottom) / 2;
        scrollY+=(mBottom - mTop - mPaddingBottom- drawables.mDrawableSizeBottom);
        handled=true;
      }
    }
    if (handled) {
      invalidate(dirty.left + scrollX,dirty.top + scrollY,dirty.right + scrollX,dirty.bottom + scrollY);
    }
  }
  if (!handled) {
    super.invalidateDrawable(drawable);
  }
}
