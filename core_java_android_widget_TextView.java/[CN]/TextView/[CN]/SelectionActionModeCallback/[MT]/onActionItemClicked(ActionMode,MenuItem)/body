{
  final int itemId=item.getItemId();
  if (itemId == ID_SELECT_ALL) {
    Selection.setSelection((Spannable)mText,0,mText.length());
    if (mSelectionModifierCursorController != null) {
      mSelectionModifierCursorController.show();
    }
    return true;
  }
  ClipboardManager clip=(ClipboardManager)getContext().getSystemService(Context.CLIPBOARD_SERVICE);
  int min=0;
  int max=mText.length();
  if (isFocused()) {
    final int selStart=getSelectionStart();
    final int selEnd=getSelectionEnd();
    min=Math.max(0,Math.min(selStart,selEnd));
    max=Math.max(0,Math.max(selStart,selEnd));
  }
switch (item.getItemId()) {
case ID_PASTE:
    CharSequence paste=clip.getText();
  if (paste != null) {
    Selection.setSelection((Spannable)mText,max);
    ((Editable)mText).replace(min,max,paste);
    finishSelectionActionMode();
  }
return true;
case ID_CUT:
clip.setText(mTransformed.subSequence(min,max));
((Editable)mText).delete(min,max);
finishSelectionActionMode();
return true;
case ID_COPY:
clip.setText(mTransformed.subSequence(min,max));
finishSelectionActionMode();
return true;
}
return false;
}
