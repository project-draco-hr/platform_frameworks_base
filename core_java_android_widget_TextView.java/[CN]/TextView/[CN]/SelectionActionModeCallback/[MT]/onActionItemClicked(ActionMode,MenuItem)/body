{
  if (mCustomSelectionActionModeCallback != null && mCustomSelectionActionModeCallback.onActionItemClicked(mode,item)) {
    return true;
  }
  final int itemId=item.getItemId();
  if (itemId == ID_SELECT_ALL) {
    selectAll();
    if (hasSelectionController()) {
      getSelectionController().show();
    }
    return true;
  }
  int min=0;
  int max=mText.length();
  if (isFocused()) {
    final int selStart=getSelectionStart();
    final int selEnd=getSelectionEnd();
    min=Math.max(0,Math.min(selStart,selEnd));
    max=Math.max(0,Math.max(selStart,selEnd));
  }
switch (item.getItemId()) {
case ID_PASTE:
    paste(min,max);
  return true;
case ID_CUT:
setPrimaryClip(ClipData.newPlainText(null,null,mTransformed.subSequence(min,max)));
((Editable)mText).delete(min,max);
stopSelectionActionMode();
return true;
case ID_COPY:
setPrimaryClip(ClipData.newPlainText(null,null,mTransformed.subSequence(min,max)));
stopSelectionActionMode();
return true;
}
return false;
}
