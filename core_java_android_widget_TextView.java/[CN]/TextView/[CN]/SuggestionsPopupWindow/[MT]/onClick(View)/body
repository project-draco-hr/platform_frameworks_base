{
  if (view instanceof TextView) {
    TextView textView=(TextView)view;
    SuggestionInfo suggestionInfo=(SuggestionInfo)textView.getTag();
    final int spanStart=suggestionInfo.spanStart;
    final int spanEnd=suggestionInfo.spanEnd;
    if (spanStart != NO_SUGGESTIONS) {
      Editable editable=((Editable)mText);
      SuggestionSpan[] suggestionSpans=editable.getSpans(spanStart,spanEnd,SuggestionSpan.class);
      final int length=suggestionSpans.length;
      int[] suggestionSpansStarts=new int[length];
      int[] suggestionSpansEnds=new int[length];
      int[] suggestionSpansFlags=new int[length];
      for (int i=0; i < length; i++) {
        final SuggestionSpan suggestionSpan=suggestionSpans[i];
        suggestionSpansStarts[i]=editable.getSpanStart(suggestionSpan);
        suggestionSpansEnds[i]=editable.getSpanEnd(suggestionSpan);
        suggestionSpansFlags[i]=editable.getSpanFlags(suggestionSpan);
      }
      final int suggestionStart=suggestionInfo.suggestionStart;
      final int suggestionEnd=suggestionInfo.suggestionEnd;
      final String suggestion=textView.getText().subSequence(suggestionStart,suggestionEnd).toString();
      final String originalText=mText.subSequence(spanStart,spanEnd).toString();
      ((Editable)mText).replace(spanStart,spanEnd,suggestion);
      if (!TextUtils.isEmpty(suggestionInfo.suggestionSpan.getNotificationTargetClassName())) {
        InputMethodManager imm=InputMethodManager.peekInstance();
        imm.notifySuggestionPicked(suggestionInfo.suggestionSpan,originalText,suggestionInfo.suggestionIndex);
      }
      String[] suggestions=suggestionInfo.suggestionSpan.getSuggestions();
      suggestions[suggestionInfo.suggestionIndex]=originalText;
      final int lengthDifference=suggestion.length() - (spanEnd - spanStart);
      for (int i=0; i < length; i++) {
        if (suggestionSpansStarts[i] <= spanStart && suggestionSpansEnds[i] >= spanEnd) {
          editable.setSpan(suggestionSpans[i],suggestionSpansStarts[i],suggestionSpansEnds[i] + lengthDifference,suggestionSpansFlags[i]);
        }
      }
    }
  }
  hide();
}
