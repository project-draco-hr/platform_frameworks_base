{
  if (!(mText instanceof Editable))   return;
  final int pos=TextView.this.getSelectionStart();
  Spannable spannable=(Spannable)TextView.this.mText;
  SuggestionSpan[] suggestionSpans=spannable.getSpans(pos,pos,SuggestionSpan.class);
  final int nbSpans=suggestionSpans.length;
  ViewGroup viewGroup=getViewGroup(true);
  mContainer.setContentView(viewGroup);
  int totalNbSuggestions=0;
  int spanUnionStart=mText.length();
  int spanUnionEnd=0;
  for (int spanIndex=0; spanIndex < nbSpans; spanIndex++) {
    SuggestionSpan suggestionSpan=suggestionSpans[spanIndex];
    final int spanStart=spannable.getSpanStart(suggestionSpan);
    final int spanEnd=spannable.getSpanEnd(suggestionSpan);
    spanUnionStart=Math.min(spanStart,spanUnionStart);
    spanUnionEnd=Math.max(spanEnd,spanUnionEnd);
    String[] suggestions=suggestionSpan.getSuggestions();
    int nbSuggestions=suggestions.length;
    for (int suggestionIndex=0; suggestionIndex < nbSuggestions; suggestionIndex++) {
      TextView textView=(TextView)viewGroup.getChildAt(totalNbSuggestions);
      textView.setText(suggestions[suggestionIndex]);
      SuggestionInfo suggestionInfo=(SuggestionInfo)textView.getTag();
      suggestionInfo.spanStart=spanStart;
      suggestionInfo.spanEnd=spanEnd;
      totalNbSuggestions++;
      if (totalNbSuggestions > MAX_NUMBER_SUGGESTIONS) {
        spanIndex=nbSpans;
        break;
      }
    }
  }
  if (totalNbSuggestions == 0) {
    TextView textView=(TextView)viewGroup.getChildAt(0);
    textView.setText("No suggestions available");
    SuggestionInfo suggestionInfo=(SuggestionInfo)textView.getTag();
    suggestionInfo.spanStart=NO_SUGGESTIONS;
    totalNbSuggestions++;
  }
 else {
    if (mSuggestionRangeSpan == null)     mSuggestionRangeSpan=new SuggestionRangeSpan();
    ((Editable)mText).setSpan(mSuggestionRangeSpan,spanUnionStart,spanUnionEnd,Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
    for (int i=0; i < totalNbSuggestions; i++) {
      final TextView textView=(TextView)viewGroup.getChildAt(i);
      highlightTextDifferences(textView,spanUnionStart,spanUnionEnd);
    }
  }
  for (int i=0; i < MAX_NUMBER_SUGGESTIONS; i++) {
    viewGroup.getChildAt(i).setVisibility(i < totalNbSuggestions ? VISIBLE : GONE);
  }
  final int size=View.MeasureSpec.makeMeasureSpec(0,View.MeasureSpec.UNSPECIFIED);
  viewGroup.measure(size,size);
  positionAtCursor();
}
