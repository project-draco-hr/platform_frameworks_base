{
  if (isTextEditable()) {
switch (event.getActionMasked()) {
case MotionEvent.ACTION_DOWN:
      final int x=(int)event.getX();
    final int y=(int)event.getY();
  mMinTouchOffset=mMaxTouchOffset=getOffset(x,y);
if (mIsVisible) {
  if (mMovement instanceof ArrowKeyMovementMethod) {
    boolean isOnStart=mStartHandle.hasFingerOn(x,y);
    boolean isOnEnd=mEndHandle.hasFingerOn(x,y);
    if (isOnStart || isOnEnd) {
      if (mParent != null) {
        mParent.requestDisallowInterceptTouchEvent(true);
      }
      mStartIsDragged=!isOnEnd;
      final Handle draggedHandle=mStartIsDragged ? mStartHandle : mEndHandle;
      final Rect bounds=draggedHandle.mDrawable.getBounds();
      mOffsetX=(bounds.left + bounds.right) / 2.0f - x;
      mOffsetY=draggedHandle.mHotSpotVerticalPosition - y;
      ((ArrowKeyMovementMethod)mMovement).setCursorController(this);
    }
  }
}
break;
case MotionEvent.ACTION_POINTER_DOWN:
case MotionEvent.ACTION_POINTER_UP:
if (mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_TOUCHSCREEN_MULTITOUCH_DISTINCT)) {
updateMinAndMaxOffsets(event);
}
break;
}
}
}
