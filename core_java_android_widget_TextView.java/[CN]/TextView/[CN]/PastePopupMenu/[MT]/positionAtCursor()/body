{
  View contentView=mContainer.getContentView();
  int width=contentView.getMeasuredWidth();
  int height=contentView.getMeasuredHeight();
  final int offset=TextView.this.getSelectionStart();
  final int line=mLayout.getLineForOffset(offset);
  final int lineTop=mLayout.getLineTop(line);
  float primaryHorizontal=mLayout.getPrimaryHorizontal(offset);
  final Rect bounds=sCursorControllerTempRect;
  bounds.left=(int)(primaryHorizontal - width / 2.0f);
  bounds.top=lineTop - height;
  bounds.right=bounds.left + width;
  bounds.bottom=bounds.top + height;
  convertFromViewportToContentCoordinates(bounds);
  mPositionX=bounds.left;
  mPositionY=bounds.top;
  final int[] coords=mTempCoords;
  TextView.this.getLocationInWindow(coords);
  coords[0]+=mPositionX;
  coords[1]+=mPositionY;
  final int screenWidth=mContext.getResources().getDisplayMetrics().widthPixels;
  if (coords[1] < 0) {
    updateContent(false);
    contentView=mContainer.getContentView();
    width=contentView.getMeasuredWidth();
    height=contentView.getMeasuredHeight();
    coords[1]+=height;
    final int lineBottom=mLayout.getLineBottom(line);
    final int lineHeight=lineBottom - lineTop;
    coords[1]+=lineHeight;
    final Drawable handle=mContext.getResources().getDrawable(mTextSelectHandleRes);
    final int handleHalfWidth=handle.getIntrinsicWidth() / 2;
    if (primaryHorizontal + handleHalfWidth + width < screenWidth) {
      coords[0]+=handleHalfWidth + width / 2;
    }
 else {
      coords[0]-=handleHalfWidth + width / 2;
    }
  }
 else {
    coords[0]=Math.max(0,coords[0]);
    coords[0]=Math.min(screenWidth - width,coords[0]);
  }
  mContainer.showAtLocation(TextView.this,Gravity.NO_GRAVITY,coords[0],coords[1]);
}
