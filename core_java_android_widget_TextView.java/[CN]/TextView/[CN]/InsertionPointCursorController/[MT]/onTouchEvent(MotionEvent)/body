{
  if (isFocused() && isTextEditable()) {
    if (event.getActionMasked() == MotionEvent.ACTION_DOWN && mIsVisible) {
      final int x=(int)event.getX();
      final int y=(int)event.getY();
      final int cursorControllerDrawableWidth=mDrawable.getIntrinsicWidth();
      final int cursorControllerDrawableHeight=mDrawable.getIntrinsicHeight();
      final Rect fingerRect=new Rect(x - cursorControllerDrawableWidth / 2,y - cursorControllerDrawableHeight,x + cursorControllerDrawableWidth / 2,y);
      if (Rect.intersects(mBounds,fingerRect)) {
        show();
        if (mMovement instanceof ArrowKeyMovementMethod) {
          ((ArrowKeyMovementMethod)mMovement).setCursorController(this);
        }
        if (mParent != null) {
          mParent.requestDisallowInterceptTouchEvent(true);
          Resources res=mContext.getResources();
          final int verticalOffset=res.getDimensionPixelOffset(com.android.internal.R.dimen.cursor_controller_vertical_offset);
          mOffsetX=(mBounds.left + mBounds.right) / 2 - x;
          mOffsetY=mBounds.top - verticalOffset - y;
          mOnDownTimerStart=System.currentTimeMillis();
        }
      }
    }
 else     if (event.getActionMasked() == MotionEvent.ACTION_UP) {
      int time=(int)(System.currentTimeMillis() - mOnDownTimerStart);
      if (mIsVisible && (time <= ViewConfiguration.getTapTimeout())) {
        final int x=(int)event.getX();
        final int y=(int)event.getY();
        Layout layout=getLayout();
        int line=layout.getLineForVertical(y);
        int offset=layout.getOffsetForHorizontal(line,x);
        Selection.setSelection((Spannable)mText,offset);
        mScrolled=false;
      }
    }
  }
}
