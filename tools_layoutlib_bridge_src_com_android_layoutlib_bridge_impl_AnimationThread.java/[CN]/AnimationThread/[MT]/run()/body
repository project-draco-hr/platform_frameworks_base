{
  mScene.prepareThread();
  try {
    Handler_Delegate.setCallback(new IHandlerCallback(){
      public void sendMessageAtTime(      Handler handler,      Message msg,      long uptimeMillis){
        if (msg.what == ValueAnimator.ANIMATION_START || msg.what == ValueAnimator.ANIMATION_FRAME) {
          mQueue.add(new MessageBundle(handler,msg,uptimeMillis));
        }
 else {
        }
      }
    }
);
    mAnimator.start();
    do {
      MessageBundle bundle=mQueue.poll();
      if (bundle == null) {
        break;
      }
      long currentTime=System.currentTimeMillis();
      if (currentTime < bundle.mUptimeMillis) {
        try {
          sleep(bundle.mUptimeMillis - currentTime);
        }
 catch (        InterruptedException e) {
          e.printStackTrace();
        }
      }
      SceneResult result=mScene.acquire(250);
      if (result != SceneResult.SUCCESS) {
        mListener.done(result);
        return;
      }
      try {
        bundle.mTarget.handleMessage(bundle.mMessage);
        if (mScene.render() == SceneResult.SUCCESS) {
          mListener.onNewFrame(mScene.getImage());
        }
      }
  finally {
        mScene.release();
      }
    }
 while (mQueue.size() > 0);
    mListener.done(SceneResult.SUCCESS);
  }
  finally {
    Handler_Delegate.setCallback(null);
    mScene.cleanupThread();
  }
}
