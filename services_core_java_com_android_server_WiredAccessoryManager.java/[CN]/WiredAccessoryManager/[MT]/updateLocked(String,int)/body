{
  int headsetState=newState & SUPPORTED_HEADSETS;
  int usb_headset_anlg=headsetState & BIT_USB_HEADSET_ANLG;
  int usb_headset_dgtl=headsetState & BIT_USB_HEADSET_DGTL;
  int h2w_headset=headsetState & (BIT_HEADSET | BIT_HEADSET_NO_MIC | BIT_LINEOUT);
  boolean h2wStateChange=true;
  boolean usbStateChange=true;
  if (LOG)   Slog.v(TAG,"newName=" + newName + " newState="+ newState+ " headsetState="+ headsetState+ " prev headsetState="+ mHeadsetState);
  if (mHeadsetState == headsetState) {
    Log.e(TAG,"No state change.");
    return;
  }
  if (h2w_headset == (BIT_HEADSET | BIT_HEADSET_NO_MIC | BIT_LINEOUT)) {
    Log.e(TAG,"Invalid combination, unsetting h2w flag");
    h2wStateChange=false;
  }
  if (usb_headset_anlg == BIT_USB_HEADSET_ANLG && usb_headset_dgtl == BIT_USB_HEADSET_DGTL) {
    Log.e(TAG,"Invalid combination, unsetting usb flag");
    usbStateChange=false;
  }
  if (!h2wStateChange && !usbStateChange) {
    Log.e(TAG,"invalid transition, returning ...");
    return;
  }
  mWakeLock.acquire();
  Log.i(TAG,"MSG_NEW_DEVICE_STATE ");
  Message msg=mHandler.obtainMessage(MSG_NEW_DEVICE_STATE,headsetState,mHeadsetState,newName);
  mHandler.sendMessage(msg);
  mHeadsetState=headsetState;
}
