{
  if (!isUidValidForRules(uid))   return;
  final int uidPolicy=getUidPolicy(uid);
  final boolean uidForeground=isUidForeground(uid);
  int uidRules=RULE_ALLOW_ALL;
  if (!uidForeground && (uidPolicy & POLICY_REJECT_METERED_BACKGROUND) != 0) {
    uidRules=RULE_REJECT_METERED;
  }
 else   if (mRestrictBackground) {
    if (!uidForeground) {
      uidRules=RULE_REJECT_METERED;
    }
  }
 else   if (mRestrictPower) {
    final boolean whitelisted=mPowerSaveWhitelistAppIds.get(UserHandle.getAppId(uid));
    if (!whitelisted && !uidForeground && (uidPolicy & POLICY_ALLOW_BACKGROUND_BATTERY_SAVE) == 0) {
      uidRules=RULE_REJECT_METERED;
    }
  }
  if (uidRules == RULE_ALLOW_ALL) {
    mUidRules.delete(uid);
  }
 else {
    mUidRules.put(uid,uidRules);
  }
  final boolean rejectMetered=(uidRules & RULE_REJECT_METERED) != 0;
  setUidNetworkRules(uid,rejectMetered);
  mHandler.obtainMessage(MSG_RULES_CHANGED,uid,uidRules).sendToTarget();
  try {
    mNetworkStats.setUidForeground(uid,uidForeground);
  }
 catch (  RemoteException e) {
  }
}
