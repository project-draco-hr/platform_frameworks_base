{
  if (enabled) {
    final SparseIntArray uidRules=rules;
    uidRules.clear();
    final List<UserInfo> users=mUserManager.getUsers();
    for (int ui=users.size() - 1; ui >= 0; ui--) {
      UserInfo user=users.get(ui);
      for (int i=mPowerSaveTempWhitelistAppIds.size() - 1; i >= 0; i--) {
        if (mPowerSaveTempWhitelistAppIds.valueAt(i)) {
          int appId=mPowerSaveTempWhitelistAppIds.keyAt(i);
          int uid=UserHandle.getUid(user.id,appId);
          uidRules.put(uid,FIREWALL_RULE_ALLOW);
        }
      }
      for (int i=mPowerSaveWhitelistAppIds.size() - 1; i >= 0; i--) {
        int appId=mPowerSaveWhitelistAppIds.keyAt(i);
        int uid=UserHandle.getUid(user.id,appId);
        uidRules.put(uid,FIREWALL_RULE_ALLOW);
      }
    }
    for (int i=mUidState.size() - 1; i >= 0; i--) {
      if (isProcStateAllowedWhileIdleOrPowerSaveMode(mUidState.valueAt(i))) {
        uidRules.put(mUidState.keyAt(i),FIREWALL_RULE_ALLOW);
      }
    }
    setUidFirewallRules(chain,uidRules);
  }
  enableFirewallChainLocked(chain,enabled);
}
