{
  maybeRefreshTrustedTime();
  final long currentTime=currentTimeMillis();
synchronized (mRulesLock) {
    final NetworkPolicy policy=mNetworkPolicy.get(template);
    if (policy == null) {
      throw new IllegalArgumentException("unable to find policy for " + template);
    }
switch (type) {
case TYPE_WARNING:
      policy.lastWarningSnooze=currentTime;
    break;
case TYPE_LIMIT:
  policy.lastLimitSnooze=currentTime;
break;
default :
throw new IllegalArgumentException("unexpected type");
}
normalizePoliciesLocked();
updateNetworkEnabledLocked();
updateNetworkRulesLocked();
updateNotificationsLocked();
writePolicyLocked();
}
}
