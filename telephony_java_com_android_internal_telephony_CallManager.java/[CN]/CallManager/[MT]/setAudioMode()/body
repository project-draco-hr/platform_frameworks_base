{
  Context context=getContext();
  if (context == null)   return;
  AudioManager audioManager=(AudioManager)context.getSystemService(Context.AUDIO_SERVICE);
switch (getState()) {
case RINGING:
    if (audioManager.getMode() != AudioManager.MODE_RINGTONE) {
      if (audioManager.getStreamVolume(AudioManager.STREAM_RING) > 0) {
        if (VDBG)         Log.d(LOG_TAG,"requestAudioFocus on STREAM_RING");
        audioManager.requestAudioFocusForCall(AudioManager.STREAM_RING,AudioManager.AUDIOFOCUS_GAIN_TRANSIENT);
      }
      audioManager.setMode(AudioManager.MODE_RINGTONE);
    }
  break;
case OFFHOOK:
Phone offhookPhone=getFgPhone();
if (getActiveFgCallState() == Call.State.IDLE) {
offhookPhone=getBgPhone();
}
int newAudioMode=AudioManager.MODE_IN_CALL;
if (offhookPhone instanceof SipPhone) {
newAudioMode=AudioManager.MODE_IN_COMMUNICATION;
}
if (audioManager.getMode() != newAudioMode) {
if (VDBG) Log.d(LOG_TAG,"requestAudioFocus on STREAM_VOICE_CALL");
audioManager.requestAudioFocusForCall(AudioManager.STREAM_VOICE_CALL,AudioManager.AUDIOFOCUS_GAIN_TRANSIENT);
audioManager.setMode(newAudioMode);
}
break;
case IDLE:
if (audioManager.getMode() != AudioManager.MODE_NORMAL) {
audioManager.setMode(AudioManager.MODE_NORMAL);
if (VDBG) Log.d(LOG_TAG,"abandonAudioFocus");
audioManager.abandonAudioFocusForCall();
}
break;
}
}
