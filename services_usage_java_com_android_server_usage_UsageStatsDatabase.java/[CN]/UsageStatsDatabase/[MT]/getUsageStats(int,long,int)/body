{
synchronized (mLock) {
    if (bucketType < 0 || bucketType >= mBucketDirs.length) {
      throw new IllegalArgumentException("Bad bucket type " + bucketType);
    }
    if (limit <= 0) {
      return UsageStats.EMPTY_STATS;
    }
    int startIndex=mSortedStatFiles[bucketType].closestIndexAfter(beginTime);
    if (startIndex < 0) {
      return UsageStats.EMPTY_STATS;
    }
    final int realLimit=Math.min(limit,mSortedStatFiles[bucketType].size() - startIndex);
    try {
      ArrayList<UsageStats> stats=new ArrayList<>(realLimit);
      for (int i=0; i < realLimit; i++) {
        final AtomicFile f=mSortedStatFiles[bucketType].valueAt(startIndex + i);
        if (DEBUG) {
          Slog.d(TAG,"Reading stat file " + f.getBaseFile().getAbsolutePath());
        }
        UsageStats stat=UsageStatsXml.read(f);
        if (beginTime < stat.mEndTimeStamp) {
          stat.mLastTimeSaved=f.getLastModifiedTime();
          stats.add(stat);
        }
      }
      return stats.toArray(new UsageStats[stats.size()]);
    }
 catch (    IOException e) {
      Slog.e(TAG,"Failed to read usage stats file",e);
      return UsageStats.EMPTY_STATS;
    }
  }
}
