{
  final FilenameFilter backupFileFilter=new FilenameFilter(){
    @Override public boolean accept(    File dir,    String name){
      return !name.endsWith(BAK_SUFFIX);
    }
  }
;
  for (int i=0; i < mSortedStatFiles.length; i++) {
    if (mSortedStatFiles[i] == null) {
      mSortedStatFiles[i]=new TimeSparseArray<>();
    }
 else {
      mSortedStatFiles[i].clear();
    }
    File[] files=mIntervalDirs[i].listFiles(backupFileFilter);
    if (files != null) {
      if (DEBUG) {
        Slog.d(TAG,"Found " + files.length + " stat files for interval "+ i);
      }
      for (      File f : files) {
        final AtomicFile af=new AtomicFile(f);
        mSortedStatFiles[i].put(UsageStatsXml.parseBeginTime(af),af);
      }
    }
  }
}
