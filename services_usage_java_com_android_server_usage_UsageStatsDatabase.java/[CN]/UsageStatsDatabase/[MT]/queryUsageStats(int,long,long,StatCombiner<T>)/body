{
synchronized (mLock) {
    if (intervalType < 0 || intervalType >= mIntervalDirs.length) {
      throw new IllegalArgumentException("Bad interval type " + intervalType);
    }
    final TimeSparseArray<AtomicFile> intervalStats=mSortedStatFiles[intervalType];
    if (endTime <= beginTime) {
      if (DEBUG) {
        Slog.d(TAG,"endTime(" + endTime + ") <= beginTime("+ beginTime+ ")");
      }
      return null;
    }
    int startIndex=intervalStats.closestIndexOnOrBefore(beginTime);
    if (startIndex < 0) {
      startIndex=0;
    }
    int endIndex=intervalStats.closestIndexOnOrBefore(endTime);
    if (endIndex < 0) {
      if (DEBUG) {
        Slog.d(TAG,"No results for this range. All stats start after.");
      }
      return null;
    }
    if (intervalStats.keyAt(endIndex) == endTime) {
      endIndex--;
      if (endIndex < 0) {
        if (DEBUG) {
          Slog.d(TAG,"No results for this range. All stats start after.");
        }
        return null;
      }
    }
    try {
      IntervalStats stats=new IntervalStats();
      ArrayList<T> results=new ArrayList<>();
      for (int i=startIndex; i <= endIndex; i++) {
        final AtomicFile f=intervalStats.valueAt(i);
        if (DEBUG) {
          Slog.d(TAG,"Reading stat file " + f.getBaseFile().getAbsolutePath());
        }
        UsageStatsXml.read(f,stats);
        if (beginTime < stats.endTime) {
          combiner.combine(stats,false,results);
        }
      }
      return results;
    }
 catch (    IOException e) {
      Slog.e(TAG,"Failed to read usage stats file",e);
      return null;
    }
  }
}
