{
synchronized (mLock) {
    if (intervalType < 0 || intervalType >= mIntervalDirs.length) {
      throw new IllegalArgumentException("Bad interval type " + intervalType);
    }
    if (endTime < beginTime) {
      return null;
    }
    final int startIndex=mSortedStatFiles[intervalType].closestIndexOnOrBefore(beginTime);
    if (startIndex < 0) {
      return null;
    }
    int endIndex=mSortedStatFiles[intervalType].closestIndexOnOrAfter(endTime);
    if (endIndex < 0) {
      endIndex=mSortedStatFiles[intervalType].size() - 1;
    }
    try {
      IntervalStats stats=new IntervalStats();
      ArrayList<UsageStats> results=new ArrayList<>();
      for (int i=startIndex; i <= endIndex; i++) {
        final AtomicFile f=mSortedStatFiles[intervalType].valueAt(i);
        if (DEBUG) {
          Slog.d(TAG,"Reading stat file " + f.getBaseFile().getAbsolutePath());
        }
        UsageStatsXml.read(f,stats);
        if (beginTime < stats.endTime) {
          results.addAll(stats.stats.values());
        }
      }
      return results;
    }
 catch (    IOException e) {
      Slog.e(TAG,"Failed to read usage stats file",e);
      return null;
    }
  }
}
