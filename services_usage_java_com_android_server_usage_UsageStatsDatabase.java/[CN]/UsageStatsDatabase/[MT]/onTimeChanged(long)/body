{
synchronized (mLock) {
    StringBuilder logBuilder=new StringBuilder();
    logBuilder.append("Time changed by ");
    TimeUtils.formatDuration(timeDiffMillis,logBuilder);
    logBuilder.append(".");
    int filesDeleted=0;
    int filesMoved=0;
    for (    TimeSparseArray<AtomicFile> files : mSortedStatFiles) {
      final int fileCount=files.size();
      for (int i=0; i < fileCount; i++) {
        final AtomicFile file=files.valueAt(i);
        final long newTime=files.keyAt(i) + timeDiffMillis;
        if (newTime < 0) {
          filesDeleted++;
          file.delete();
        }
 else {
          try {
            file.openRead().close();
          }
 catch (          IOException e) {
          }
          String newName=Long.toString(newTime);
          if (file.getBaseFile().getName().endsWith(CHECKED_IN_SUFFIX)) {
            newName=newName + CHECKED_IN_SUFFIX;
          }
          final File newFile=new File(file.getBaseFile().getParentFile(),newName);
          filesMoved++;
          file.getBaseFile().renameTo(newFile);
        }
      }
      files.clear();
    }
    logBuilder.append(" files deleted: ").append(filesDeleted);
    logBuilder.append(" files moved: ").append(filesMoved);
    Slog.i(TAG,logBuilder.toString());
    indexFilesLocked();
  }
}
