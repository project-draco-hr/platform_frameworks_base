{
  mAwareManager=new WeakReference<>(mgr);
  mIsPublish=isPublish;
  mOriginalCallback=originalCallback;
  mClientId=clientId;
  if (VDBG) {
    Log.v(TAG,"WifiAwareDiscoverySessionCallbackProxy ctor: isPublish=" + isPublish);
  }
  mHandler=new Handler(looper){
    @Override public void handleMessage(    Message msg){
      if (DBG)       Log.d(TAG,"What=" + msg.what + ", msg="+ msg);
      if (mAwareManager.get() == null) {
        Log.w(TAG,"WifiAwareDiscoverySessionCallbackProxy: handleMessage post GC");
        return;
      }
switch (msg.what) {
case CALLBACK_SESSION_STARTED:
        onProxySessionStarted(msg.arg1);
      break;
case CALLBACK_SESSION_CONFIG_SUCCESS:
    mOriginalCallback.onSessionConfigUpdated();
  break;
case CALLBACK_SESSION_CONFIG_FAIL:
mOriginalCallback.onSessionConfigFailed();
if (mSession == null) {
mAwareManager.clear();
}
break;
case CALLBACK_SESSION_TERMINATED:
onProxySessionTerminated(msg.arg1);
break;
case CALLBACK_MATCH:
mOriginalCallback.onServiceDiscovered(new OpaquePeerHandle(msg.arg1),msg.getData().getByteArray(MESSAGE_BUNDLE_KEY_MESSAGE),msg.getData().getByteArray(MESSAGE_BUNDLE_KEY_MESSAGE2));
break;
case CALLBACK_MESSAGE_SEND_SUCCESS:
mOriginalCallback.onMessageSent(msg.arg1);
break;
case CALLBACK_MESSAGE_SEND_FAIL:
mOriginalCallback.onMessageSendFailed(msg.arg1);
break;
case CALLBACK_MESSAGE_RECEIVED:
mOriginalCallback.onMessageReceived(new OpaquePeerHandle(msg.arg1),(byte[])msg.obj);
break;
}
}
}
;
}
