{
  final int type=node.getSymbol().getType();
switch (type) {
case IntegerLiteral:
    return new SymbolExpr(node.getText(),Integer.class);
case FloatingPointLiteral:
  return new SymbolExpr(node.getText(),Float.class);
case BooleanLiteral:
return new SymbolExpr(node.getText(),Boolean.class);
case CharacterLiteral:
return new SymbolExpr(node.getText(),Character.class);
case SingleQuoteString:
return new SymbolExpr(node.getText(),String.class);
case DoubleQuoteString:
return new SymbolExpr(node.getText(),String.class);
case NullLiteral:
return new SymbolExpr(node.getText(),Object.class);
default :
throw new RuntimeException("cannot create expression from terminal node " + node.toString());
}
}
