{
  HandlerThread backgroundThread=new HandlerThread("notification-sqlite-log",android.os.Process.THREAD_PRIORITY_BACKGROUND);
  backgroundThread.start();
  mWriteHandler=new Handler(backgroundThread.getLooper()){
    @Override public void handleMessage(    Message msg){
      NotificationRecord r=(NotificationRecord)msg.obj;
      long nowMs=System.currentTimeMillis();
switch (msg.what) {
case MSG_POST:
        writeEvent(r.sbn.getPostTime(),EVENT_TYPE_POST,r);
      break;
case MSG_CLICK:
    writeEvent(nowMs,EVENT_TYPE_CLICK,r);
  break;
case MSG_REMOVE:
writeEvent(nowMs,EVENT_TYPE_REMOVE,r);
break;
case MSG_DISMISS:
writeEvent(nowMs,EVENT_TYPE_DISMISS,r);
break;
default :
Log.wtf(TAG,"Unknown message type: " + msg.what);
break;
}
}
}
;
mHelper=new SQLiteOpenHelper(context,DB_NAME,null,DB_VERSION){
@Override public void onCreate(SQLiteDatabase db){
db.execSQL("CREATE TABLE " + TAB_LOG + " ("+ "_id INTEGER PRIMARY KEY AUTOINCREMENT,"+ COL_EVENT_USER_ID+ " INT,"+ COL_EVENT_TYPE+ " INT,"+ COL_EVENT_TIME+ " INT,"+ COL_KEY+ " TEXT,"+ COL_PKG+ " TEXT,"+ COL_NOTIFICATION_ID+ " INT,"+ COL_TAG+ " TEXT,"+ COL_WHEN_MS+ " INT,"+ COL_DEFAULTS+ " INT,"+ COL_FLAGS+ " INT,"+ COL_IMPORTANCE_REQ+ " INT,"+ COL_IMPORTANCE_FINAL+ " INT,"+ COL_NOISY+ " INT,"+ COL_MUTED+ " INT,"+ COL_DEMOTED+ " INT,"+ COL_CATEGORY+ " TEXT,"+ COL_ACTION_COUNT+ " INT,"+ COL_POSTTIME_MS+ " INT,"+ COL_AIRTIME_MS+ " INT,"+ COL_FIRST_EXPANSIONTIME_MS+ " INT,"+ COL_AIRTIME_EXPANDED_MS+ " INT,"+ COL_EXPAND_COUNT+ " INT"+ ")");
}
@Override public void onUpgrade(SQLiteDatabase db,int oldVersion,int newVersion){
if (oldVersion != newVersion) {
db.execSQL("DROP TABLE IF EXISTS " + TAB_LOG);
onCreate(db);
}
}
}
;
}
