{
  Matrix startMatrix=(Matrix)startValues.values.get(PROPNAME_MATRIX);
  Matrix endMatrix=(Matrix)endValues.values.get(PROPNAME_MATRIX);
  if (startMatrix == null) {
    startMatrix=Matrix.IDENTITY_MATRIX;
  }
  if (endMatrix == null) {
    endMatrix=Matrix.IDENTITY_MATRIX;
  }
  if (startMatrix.equals(endMatrix)) {
    return null;
  }
  final Transforms transforms=(Transforms)endValues.values.get(PROPNAME_TRANSFORMS);
  final View view=endValues.view;
  setIdentityTransforms(view);
  final float[] startMatrixValues=new float[9];
  startMatrix.getValues(startMatrixValues);
  final float[] endMatrixValues=new float[9];
  endMatrix.getValues(endMatrixValues);
  final PathAnimatorMatrix pathAnimatorMatrix=new PathAnimatorMatrix(view,startMatrixValues);
  PropertyValuesHolder valuesProperty=PropertyValuesHolder.ofObject(NON_TRANSLATIONS_PROPERTY,new FloatArrayEvaluator(new float[9]),startMatrixValues,endMatrixValues);
  Path path=getPathMotion().getPath(startMatrixValues[Matrix.MTRANS_X],startMatrixValues[Matrix.MTRANS_Y],endMatrixValues[Matrix.MTRANS_X],endMatrixValues[Matrix.MTRANS_Y]);
  PropertyValuesHolder translationProperty=PropertyValuesHolder.ofObject(TRANSLATIONS_PROPERTY,null,path);
  ObjectAnimator animator=ObjectAnimator.ofPropertyValuesHolder(pathAnimatorMatrix,valuesProperty,translationProperty);
  final Matrix finalEndMatrix=endMatrix;
  AnimatorListenerAdapter listener=new AnimatorListenerAdapter(){
    private boolean mIsCanceled;
    private Matrix mTempMatrix=new Matrix();
    @Override public void onAnimationCancel(    Animator animation){
      mIsCanceled=true;
    }
    @Override public void onAnimationEnd(    Animator animation){
      if (!mIsCanceled) {
        if (handleParentChange && mUseOverlay) {
          setCurrentMatrix(finalEndMatrix);
        }
 else {
          view.setTagInternal(R.id.transitionTransform,null);
          view.setTagInternal(R.id.parentMatrix,null);
        }
      }
      view.setAnimationMatrix(null);
      transforms.restore(view);
    }
    @Override public void onAnimationPause(    Animator animation){
      Matrix currentMatrix=pathAnimatorMatrix.getMatrix();
      setCurrentMatrix(currentMatrix);
    }
    @Override public void onAnimationResume(    Animator animation){
      setIdentityTransforms(view);
    }
    private void setCurrentMatrix(    Matrix currentMatrix){
      mTempMatrix.set(currentMatrix);
      view.setTagInternal(R.id.transitionTransform,mTempMatrix);
      transforms.restore(view);
    }
  }
;
  animator.addListener(listener);
  animator.addPauseListener(listener);
  return animator;
}
