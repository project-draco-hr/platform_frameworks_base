{
  if (startValues == null || endValues == null || !startValues.values.containsKey(PROPNAME_SCALE_X) || !endValues.values.containsKey(PROPNAME_SCALE_X) || !isPivotSame(startValues,endValues) || !isChanged(startValues,endValues)) {
    return null;
  }
  float[] start=createValues(startValues);
  float[] end=createValues(endValues);
  for (int i=0; i < start.length; i++) {
    if (start[i] == end[i]) {
      start[i]=Float.NaN;
      end[i]=Float.NaN;
    }
 else {
      sChangedProperties[i].setValue(endValues.view,start[i]);
    }
  }
  FloatArrayEvaluator evaluator=new FloatArrayEvaluator(new float[start.length]);
  return ObjectAnimator.ofObject(endValues.view,TRANSFORMS,evaluator,start,end);
}
