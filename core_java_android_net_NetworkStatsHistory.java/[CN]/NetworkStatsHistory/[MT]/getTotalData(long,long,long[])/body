{
  long rx=0;
  long tx=0;
  for (int i=bucketCount - 1; i >= 0; i--) {
    final long curStart=bucketStart[i];
    final long curEnd=curStart + bucketDuration;
    if (curEnd < start)     break;
    if (curStart > end)     continue;
    final long overlap=Math.min(curEnd,end) - Math.max(curStart,start);
    if (overlap > 0) {
      rx+=this.rxBytes[i] * overlap / bucketDuration;
      tx+=this.txBytes[i] * overlap / bucketDuration;
    }
  }
  if (outTotal == null || outTotal.length != 2) {
    outTotal=new long[2];
  }
  outTotal[0]=rx;
  outTotal[1]=tx;
  return outTotal;
}
