{
  ensureBuckets(start,end);
  final long duration=end - start;
  for (int i=bucketCount - 1; i >= 0; i--) {
    final long curStart=bucketStart[i];
    final long curEnd=curStart + bucketDuration;
    if (curEnd < start)     break;
    if (curStart > end)     continue;
    final long overlap=Math.min(curEnd,end) - Math.max(curStart,start);
    if (overlap > 0) {
      this.rx[i]+=rx * overlap / duration;
      this.tx[i]+=tx * overlap / duration;
    }
  }
}
