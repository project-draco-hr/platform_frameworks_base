{
  boolean marked=true;
  List<Expr> markedAsReadList=Lists.newArrayList();
  while (marked) {
    marked=false;
    for (    Expr expr : mExprMap.values()) {
      if (expr.isRead()) {
        continue;
      }
      if (expr.markAsReadIfDone()) {
        L.d("marked %s as read ",expr.getUniqueKey());
        marked=true;
        markedAsReadList.add(expr);
      }
    }
  }
  boolean elevated=false;
  for (  Expr markedAsRead : markedAsReadList) {
    for (    Dependency dependency : markedAsRead.getDependants()) {
      if (dependency.getDependant().considerElevatingConditionals(markedAsRead)) {
        elevated=true;
      }
    }
  }
  if (elevated) {
    for (    Expr expr : getPendingExpressions()) {
      if (!expr.isRead()) {
        expr.invalidateReadFlags();
      }
    }
    mPendingExpressions=null;
  }
  return elevated;
}
