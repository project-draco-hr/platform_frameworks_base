{
  final int x=(int)event.getX();
  final int y=(int)event.getY();
switch (event.getAction()) {
case MotionEvent.ACTION_DOWN:
    mVT=VelocityTracker.obtain();
  mInitX=x;
mInitY=y;
mHandler.sendEmptyMessageDelayed(MSG_LIGHTS_OUT,ViewConfiguration.getLongPressTimeout());
break;
case MotionEvent.ACTION_OUTSIDE:
case MotionEvent.ACTION_MOVE:
final Rect r=new Rect();
final float radius=mSystemInfo.getHeight() / 2;
if (Math.abs(x - mInitX) > radius || Math.abs(y - mInitY) > radius) {
mHandler.removeMessages(MSG_LIGHTS_OUT);
}
if (mVT == null) break;
mVT.addMovement(event);
mVT.computeCurrentVelocity(1000);
if (mVT.getYVelocity() < -200 && mSystemPanel.getVisibility() == View.GONE) {
mHandler.removeMessages(MSG_OPEN_SYSTEM_PANEL);
mHandler.sendEmptyMessage(MSG_OPEN_SYSTEM_PANEL);
}
 else if (mVT.getYVelocity() > 200) {
mHandler.sendEmptyMessage(MSG_LIGHTS_OUT);
}
return true;
case MotionEvent.ACTION_UP:
case MotionEvent.ACTION_CANCEL:
mVT.recycle();
mVT=null;
mHandler.removeMessages(MSG_LIGHTS_OUT);
return true;
}
return false;
}
