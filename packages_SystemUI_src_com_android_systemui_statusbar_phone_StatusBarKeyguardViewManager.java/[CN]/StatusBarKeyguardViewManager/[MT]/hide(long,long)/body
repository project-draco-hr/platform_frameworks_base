{
  mShowing=false;
  long uptimeMillis=SystemClock.uptimeMillis();
  long delay=Math.max(0,startTime + HIDE_TIMING_CORRECTION_MS - uptimeMillis);
  if (mPhoneStatusBar.isInLaunchTransition()) {
    mPhoneStatusBar.fadeKeyguardAfterLaunchTransition(new Runnable(){
      @Override public void run(){
        mStatusBarWindowManager.setKeyguardShowing(false);
        mStatusBarWindowManager.setKeyguardFadingAway(true);
        mBouncer.hide(true);
        updateStates();
        mScrimController.animateKeyguardFadingOut(PhoneStatusBar.FADE_KEYGUARD_START_DELAY,PhoneStatusBar.FADE_KEYGUARD_DURATION,null);
      }
    }
,new Runnable(){
      @Override public void run(){
        mPhoneStatusBar.hideKeyguard();
        mStatusBarWindowManager.setKeyguardFadingAway(false);
        mViewMediatorCallback.keyguardGone();
        executeAfterKeyguardGoneAction();
      }
    }
);
  }
 else {
    mPhoneStatusBar.setKeyguardFadingAway(startTime,delay,fadeoutDuration);
    boolean staying=mPhoneStatusBar.hideKeyguard();
    if (!staying) {
      mStatusBarWindowManager.setKeyguardFadingAway(true);
      if (mWakeAndUnlocking && !mScreenTurnedOn) {
        mDeferScrimFadeOut=true;
      }
 else {
        animateScrimControllerKeyguardFadingOut(delay,fadeoutDuration);
      }
    }
 else {
      mScrimController.animateGoingToFullShade(delay,fadeoutDuration);
      mPhoneStatusBar.finishKeyguardFadingAway();
    }
    mStatusBarWindowManager.setKeyguardShowing(false);
    mBouncer.hide(true);
    mViewMediatorCallback.keyguardGone();
    executeAfterKeyguardGoneAction();
    updateStates();
  }
}
