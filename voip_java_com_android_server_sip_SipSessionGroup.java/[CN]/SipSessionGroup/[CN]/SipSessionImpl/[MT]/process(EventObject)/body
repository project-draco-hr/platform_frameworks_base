{
  if (isLoggable(this,evt))   Log.d(TAG," ~~~~~   " + this + ": "+ SipSession.State.toString(mState)+ ": processing "+ log(evt));
synchronized (SipSessionGroup.this) {
    if (isClosed())     return false;
    if (mKeepAliveProcess != null) {
      if (mKeepAliveProcess.process(evt))       return true;
    }
    Dialog dialog=null;
    if (evt instanceof RequestEvent) {
      dialog=((RequestEvent)evt).getDialog();
    }
 else     if (evt instanceof ResponseEvent) {
      dialog=((ResponseEvent)evt).getDialog();
      extractExternalAddress((ResponseEvent)evt);
    }
    if (dialog != null)     mDialog=dialog;
    boolean processed;
switch (mState) {
case SipSession.State.REGISTERING:
case SipSession.State.DEREGISTERING:
      processed=registeringToReady(evt);
    break;
case SipSession.State.READY_TO_CALL:
  processed=readyForCall(evt);
break;
case SipSession.State.INCOMING_CALL:
processed=incomingCall(evt);
break;
case SipSession.State.INCOMING_CALL_ANSWERING:
processed=incomingCallToInCall(evt);
break;
case SipSession.State.OUTGOING_CALL:
case SipSession.State.OUTGOING_CALL_RING_BACK:
processed=outgoingCall(evt);
break;
case SipSession.State.OUTGOING_CALL_CANCELING:
processed=outgoingCallToReady(evt);
break;
case SipSession.State.IN_CALL:
processed=inCall(evt);
break;
default :
processed=false;
}
return (processed || processExceptions(evt));
}
}
