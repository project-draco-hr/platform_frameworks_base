{
  if (modeId == 0) {
    modeId=mDefaultModeId;
  }
 else   if (mSupportedModes.indexOfKey(modeId) < 0) {
    Slog.w(TAG,"Requested mode " + modeId + " is not supported by this display,"+ " reverting to default display mode.");
    modeId=mDefaultModeId;
  }
  if (colorTransformId == 0) {
    colorTransformId=mDefaultColorTransformId;
  }
 else   if (mSupportedColorTransforms.indexOfKey(colorTransformId) < 0) {
    Slog.w(TAG,"Requested color transform " + colorTransformId + " is not supported"+ " by this display, reverting to the default color transform");
    colorTransformId=mDefaultColorTransformId;
  }
  int physIndex=findDisplayInfoIndexLocked(colorTransformId,modeId);
  if (physIndex < 0) {
    Slog.w(TAG,"Requested color transform, mode ID pair (" + colorTransformId + ", "+ modeId+ ") not available, trying color transform with default mode ID");
    modeId=mDefaultModeId;
    physIndex=findDisplayInfoIndexLocked(colorTransformId,modeId);
    if (physIndex < 0) {
      Slog.w(TAG,"Requested color transform with default mode ID still not" + " available, falling back to default color transform with default" + " mode.");
      colorTransformId=mDefaultColorTransformId;
      physIndex=findDisplayInfoIndexLocked(colorTransformId,modeId);
    }
  }
  if (mActivePhysIndex == physIndex) {
    return;
  }
  SurfaceControl.setActiveConfig(getDisplayTokenLocked(),physIndex);
  mActivePhysIndex=physIndex;
  mActiveModeId=modeId;
  mActiveModeInvalid=false;
  mActiveColorTransformId=colorTransformId;
  mActiveColorTransformInvalid=false;
  updateDeviceInfoLocked();
}
