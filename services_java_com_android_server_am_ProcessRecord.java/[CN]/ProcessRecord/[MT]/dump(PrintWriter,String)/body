{
  final long now=SystemClock.uptimeMillis();
  pw.print(prefix);
  pw.print("user #");
  pw.print(userId);
  pw.print(" uid=");
  pw.print(info.uid);
  if (uid != info.uid) {
    pw.print(" ISOLATED uid=");
    pw.print(uid);
  }
  pw.println();
  if (info.className != null) {
    pw.print(prefix);
    pw.print("class=");
    pw.println(info.className);
  }
  if (info.manageSpaceActivityName != null) {
    pw.print(prefix);
    pw.print("manageSpaceActivityName=");
    pw.println(info.manageSpaceActivityName);
  }
  pw.print(prefix);
  pw.print("dir=");
  pw.print(info.sourceDir);
  pw.print(" publicDir=");
  pw.print(info.publicSourceDir);
  pw.print(" data=");
  pw.println(info.dataDir);
  pw.print(prefix);
  pw.print("packageList=");
  pw.println(pkgList);
  pw.print(prefix);
  pw.print("compat=");
  pw.println(compat);
  if (instrumentationClass != null || instrumentationProfileFile != null || instrumentationArguments != null) {
    pw.print(prefix);
    pw.print("instrumentationClass=");
    pw.print(instrumentationClass);
    pw.print(" instrumentationProfileFile=");
    pw.println(instrumentationProfileFile);
    pw.print(prefix);
    pw.print("instrumentationArguments=");
    pw.println(instrumentationArguments);
    pw.print(prefix);
    pw.print("instrumentationInfo=");
    pw.println(instrumentationInfo);
    if (instrumentationInfo != null) {
      instrumentationInfo.dump(new PrintWriterPrinter(pw),prefix + "  ");
    }
  }
  pw.print(prefix);
  pw.print("thread=");
  pw.print(thread);
  pw.print(" curReceiver=");
  pw.println(curReceiver);
  pw.print(prefix);
  pw.print("pid=");
  pw.print(pid);
  pw.print(" starting=");
  pw.print(starting);
  pw.print(" lastPss=");
  pw.println(lastPss);
  pw.print(prefix);
  pw.print("lastActivityTime=");
  TimeUtils.formatDuration(lastActivityTime,now,pw);
  pw.print(" lruWeight=");
  pw.print(lruWeight);
  pw.print(" serviceb=");
  pw.print(serviceb);
  pw.print(" keeping=");
  pw.print(keeping);
  pw.print(" hidden=");
  pw.print(hidden);
  pw.print(" empty=");
  pw.println(empty);
  pw.print(prefix);
  pw.print("oom: max=");
  pw.print(maxAdj);
  pw.print(" hidden=");
  pw.print(hiddenAdj);
  pw.print(" curRaw=");
  pw.print(curRawAdj);
  pw.print(" setRaw=");
  pw.print(setRawAdj);
  pw.print(" nonStopping=");
  pw.print(nonStoppingAdj);
  pw.print(" cur=");
  pw.print(curAdj);
  pw.print(" set=");
  pw.println(setAdj);
  pw.print(prefix);
  pw.print("curSchedGroup=");
  pw.print(curSchedGroup);
  pw.print(" setSchedGroup=");
  pw.print(setSchedGroup);
  pw.print(" systemNoUi=");
  pw.print(systemNoUi);
  pw.print(" trimMemoryLevel=");
  pw.println(trimMemoryLevel);
  pw.print(prefix);
  pw.print("hasShownUi=");
  pw.print(hasShownUi);
  pw.print(" pendingUiClean=");
  pw.print(pendingUiClean);
  pw.print(" hasAboveClient=");
  pw.println(hasAboveClient);
  pw.print(prefix);
  pw.print("setIsForeground=");
  pw.print(setIsForeground);
  pw.print(" foregroundServices=");
  pw.print(foregroundServices);
  pw.print(" forcingToForeground=");
  pw.println(forcingToForeground);
  pw.print(prefix);
  pw.print("persistent=");
  pw.print(persistent);
  pw.print(" removed=");
  pw.println(removed);
  pw.print(prefix);
  pw.print("adjSeq=");
  pw.print(adjSeq);
  pw.print(" lruSeq=");
  pw.println(lruSeq);
  if (!keeping) {
    long wtime;
synchronized (batteryStats.getBatteryStats()) {
      wtime=batteryStats.getBatteryStats().getProcessWakeTime(info.uid,pid,SystemClock.elapsedRealtime());
    }
    long timeUsed=wtime - lastWakeTime;
    pw.print(prefix);
    pw.print("lastWakeTime=");
    pw.print(lastWakeTime);
    pw.print(" time used=");
    TimeUtils.formatDuration(timeUsed,pw);
    pw.println("");
    pw.print(prefix);
    pw.print("lastCpuTime=");
    pw.print(lastCpuTime);
    pw.print(" time used=");
    TimeUtils.formatDuration(curCpuTime - lastCpuTime,pw);
    pw.println("");
  }
  pw.print(prefix);
  pw.print("lastRequestedGc=");
  TimeUtils.formatDuration(lastRequestedGc,now,pw);
  pw.print(" lastLowMemory=");
  TimeUtils.formatDuration(lastLowMemory,now,pw);
  pw.print(" reportLowMemory=");
  pw.println(reportLowMemory);
  if (killedBackground || waitingToKill != null) {
    pw.print(prefix);
    pw.print("killedBackground=");
    pw.print(killedBackground);
    pw.print(" waitingToKill=");
    pw.println(waitingToKill);
  }
  if (debugging || crashing || crashDialog != null || notResponding || anrDialog != null || bad) {
    pw.print(prefix);
    pw.print("debugging=");
    pw.print(debugging);
    pw.print(" crashing=");
    pw.print(crashing);
    pw.print(" ");
    pw.print(crashDialog);
    pw.print(" notResponding=");
    pw.print(notResponding);
    pw.print(" ");
    pw.print(anrDialog);
    pw.print(" bad=");
    pw.print(bad);
    if (errorReportReceiver != null) {
      pw.print(" errorReportReceiver=");
      pw.print(errorReportReceiver.flattenToShortString());
    }
    pw.println();
  }
  if (activities.size() > 0) {
    pw.print(prefix);
    pw.print("activities=");
    pw.println(activities);
  }
  if (services.size() > 0) {
    pw.print(prefix);
    pw.print("services=");
    pw.println(services);
  }
  if (executingServices.size() > 0) {
    pw.print(prefix);
    pw.print("executingServices=");
    pw.println(executingServices);
  }
  if (connections.size() > 0) {
    pw.print(prefix);
    pw.print("connections=");
    pw.println(connections);
  }
  if (pubProviders.size() > 0) {
    pw.print(prefix);
    pw.print("pubProviders=");
    pw.println(pubProviders);
  }
  if (conProviders.size() > 0) {
    pw.print(prefix);
    pw.print("conProviders=");
    pw.println(conProviders);
  }
  if (receivers.size() > 0) {
    pw.print(prefix);
    pw.print("receivers=");
    pw.println(receivers);
  }
}
