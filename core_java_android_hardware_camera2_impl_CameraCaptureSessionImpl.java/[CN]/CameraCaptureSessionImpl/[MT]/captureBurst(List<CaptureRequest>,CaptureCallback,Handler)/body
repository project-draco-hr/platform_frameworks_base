{
  if (requests == null) {
    throw new IllegalArgumentException("requests must not be null");
  }
 else   if (requests.isEmpty()) {
    throw new IllegalArgumentException("requests must have at least one element");
  }
  boolean reprocess=requests.get(0).isReprocess();
  if (reprocess && !isReprocessible()) {
    throw new IllegalArgumentException("this capture session cannot handle reprocess " + "requests");
  }
 else   if (reprocess && requests.get(0).getReprocessibleSessionId() != mId) {
    throw new IllegalArgumentException("capture request was created for another session");
  }
  for (int i=1; i < requests.size(); i++) {
    if (requests.get(i).isReprocess() != reprocess) {
      throw new IllegalArgumentException("cannot mix regular and reprocess capture " + " requests");
    }
 else     if (reprocess && requests.get(i).getReprocessibleSessionId() != mId) {
      throw new IllegalArgumentException("capture request was created for another " + "session");
    }
  }
  checkNotClosed();
  handler=checkHandler(handler,callback);
  if (VERBOSE) {
    CaptureRequest[] requestArray=requests.toArray(new CaptureRequest[0]);
    Log.v(TAG,mIdString + "captureBurst - requests " + Arrays.toString(requestArray)+ ", callback "+ callback+ " handler "+ handler);
  }
  return addPendingSequence(mDeviceImpl.captureBurst(requests,createCaptureCallbackProxy(handler,callback),mDeviceHandler));
}
