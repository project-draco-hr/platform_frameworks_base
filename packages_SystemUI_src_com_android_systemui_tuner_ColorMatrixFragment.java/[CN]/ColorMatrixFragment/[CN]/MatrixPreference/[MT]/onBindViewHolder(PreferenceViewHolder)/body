{
  super.onBindViewHolder(holder);
  ViewGroup vg=(ViewGroup)holder.itemView.findViewById(R.id.edit_group);
  if (mValues == null) {
    return;
  }
  int childIndex=0;
  for (int i=0; i < mValues.length; i++) {
    final int index=i;
    while (!(vg.getChildAt(childIndex) instanceof EditText)) {
      childIndex++;
    }
    final EditText editText=(EditText)vg.getChildAt(childIndex++);
    editText.setText(String.valueOf(mValues[i]));
    editText.addTextChangedListener(new TextWatcher(){
      @Override public void afterTextChanged(      Editable s){
        if (TextUtils.isEmpty(s.toString())) {
          return;
        }
        try {
          mValues[index]=Float.parseFloat(s.toString());
        }
 catch (        NumberFormatException e) {
          mValues[index]=0;
        }
      }
      @Override public void onTextChanged(      CharSequence s,      int start,      int before,      int count){
      }
      @Override public void beforeTextChanged(      CharSequence s,      int start,      int count,      int after){
      }
    }
);
  }
  ((Button)holder.itemView.findViewById(R.id.apply)).setOnClickListener(this);
}
