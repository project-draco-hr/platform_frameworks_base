{
  pw.print(prefix);
  pw.print("mStackId=");
  pw.println(mStackId);
  for (int taskNdx=0; taskNdx < mTasks.size(); ++taskNdx) {
    pw.print(prefix);
    pw.println(mTasks.get(taskNdx));
  }
  if (mAnimationBackgroundSurface.isDimming()) {
    pw.print(prefix);
    pw.println("mWindowAnimationBackgroundSurface:");
    mAnimationBackgroundSurface.printTo(prefix + "  ",pw);
  }
  if (mDimLayer.isDimming()) {
    pw.print(prefix);
    pw.println("mDimLayer:");
    mDimLayer.printTo(prefix,pw);
    pw.print(prefix);
    pw.print("mDimWinAnimator=");
    pw.println(mDimWinAnimator);
  }
  if (!mExitingAppTokens.isEmpty()) {
    pw.println();
    pw.println("  Exiting application tokens:");
    for (int i=mExitingAppTokens.size() - 1; i >= 0; i--) {
      WindowToken token=mExitingAppTokens.get(i);
      pw.print("  Exiting App #");
      pw.print(i);
      pw.print(' ');
      pw.print(token);
      pw.println(':');
      token.dump(pw,"    ");
    }
  }
}
