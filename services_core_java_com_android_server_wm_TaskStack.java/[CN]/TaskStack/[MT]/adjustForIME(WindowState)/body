{
  final int dockedSide=getDockSide();
  final boolean dockedTopOrBottom=dockedSide == DOCKED_TOP || dockedSide == DOCKED_BOTTOM;
  if (imeWin == null || !dockedTopOrBottom) {
    return false;
  }
  final Rect displayContentRect=mTmpRect;
  final Rect contentBounds=mTmpRect2;
  getDisplayContent().getContentRect(displayContentRect);
  contentBounds.set(displayContentRect);
  int imeTop=Math.max(imeWin.getFrameLw().top,contentBounds.top);
  imeTop+=imeWin.getGivenContentInsetsLw().top;
  if (contentBounds.bottom > imeTop) {
    contentBounds.bottom=imeTop;
  }
  mLastContentBounds.set(contentBounds);
  final int yOffset=displayContentRect.bottom - contentBounds.bottom;
  if (dockedSide == DOCKED_TOP) {
    int bottom=Math.max(mBounds.bottom - yOffset,displayContentRect.top);
    mTmpAdjustedBounds.set(mBounds);
    mTmpAdjustedBounds.bottom=(int)(mAdjustImeAmount * bottom + (1 - mAdjustImeAmount) * mBounds.bottom);
    mFullyAdjustedImeBounds.set(mBounds);
  }
 else {
    final int dividerWidth=getDisplayContent().mDividerControllerLocked.getContentWidth();
    int top=Math.max(mBounds.top - yOffset,displayContentRect.top + dividerWidth);
    mTmpAdjustedBounds.set(mBounds);
    mTmpAdjustedBounds.top=(int)(mAdjustImeAmount * top + (1 - mAdjustImeAmount) * mBounds.top);
    mTmpAdjustedBounds.bottom=mTmpAdjustedBounds.top + mBounds.height();
    mFullyAdjustedImeBounds.set(mBounds);
    mFullyAdjustedImeBounds.top=top;
    mFullyAdjustedImeBounds.bottom=top + mBounds.height();
  }
  return true;
}
