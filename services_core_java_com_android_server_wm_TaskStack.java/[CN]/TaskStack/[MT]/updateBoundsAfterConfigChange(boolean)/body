{
  if (mLastConfigChangedRotation != mLastUpdateDisplayInfoRotation) {
    return false;
  }
  final int newRotation=getDisplayInfo().rotation;
  final int newDensity=getDisplayInfo().logicalDensityDpi;
  if (mRotation == newRotation && mDensity == newDensity) {
    return false;
  }
  final int oldDockSide=mStackId == DOCKED_STACK_ID ? getDockSide() : DOCKED_INVALID;
  mDisplayContent.rotateBounds(mRotation,newRotation,mTmpRect2);
  if (mStackId == DOCKED_STACK_ID) {
    repositionDockedStackAfterRotation(mTmpRect2);
    snapDockedStackAfterRotation(mTmpRect2);
    final int newDockSide=getDockSide(mTmpRect2);
    if (oldDockSide != newDockSide) {
      mDisplayContent.getDockedDividerController().notifyDockSideChanged(newDockSide);
    }
  }
  if (scheduleResize) {
    mService.mH.obtainMessage(RESIZE_STACK,mStackId,0,mTmpRect2).sendToTarget();
  }
 else {
    mBoundsAfterRotation.set(mTmpRect2);
  }
  return true;
}
