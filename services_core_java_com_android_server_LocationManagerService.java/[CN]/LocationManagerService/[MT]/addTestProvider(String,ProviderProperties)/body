{
  checkMockPermissionsSafe();
  if (LocationManager.PASSIVE_PROVIDER.equals(name)) {
    throw new IllegalArgumentException("Cannot mock the passive location provider");
  }
  long identity=Binder.clearCallingIdentity();
synchronized (mLock) {
    MockProvider provider=new MockProvider(name,this,properties);
    if (LocationManager.GPS_PROVIDER.equals(name) || LocationManager.NETWORK_PROVIDER.equals(name) || LocationManager.FUSED_PROVIDER.equals(name)) {
      LocationProviderInterface p=mProvidersByName.get(name);
      if (p != null) {
        removeProviderLocked(p);
      }
    }
    if (mProvidersByName.get(name) != null) {
      throw new IllegalArgumentException("Provider \"" + name + "\" already exists");
    }
    addProviderLocked(provider);
    mMockProviders.put(name,provider);
    mLastLocation.put(name,null);
    mLastLocationCoarseInterval.put(name,null);
    updateProvidersLocked();
  }
  Binder.restoreCallingIdentity(identity);
}
