{
  String digestAlgorithm=parser.getAttributeValue(null,"digest");
  if (!Pin.isSupportedDigestAlgorithm(digestAlgorithm)) {
    throw new ParserException(parser,"Unsupported pin digest algorithm: " + digestAlgorithm);
  }
  if (parser.next() != XmlPullParser.TEXT) {
    throw new ParserException(parser,"Missing pin digest");
  }
  String digest=parser.getText();
  byte[] decodedDigest=null;
  try {
    decodedDigest=Base64.decode(digest,0);
  }
 catch (  IllegalArgumentException e) {
    throw new ParserException(parser,"Invalid pin digest",e);
  }
  int expectedLength=Pin.getDigestLength(digestAlgorithm);
  if (decodedDigest.length != expectedLength) {
    throw new ParserException(parser,"digest length " + decodedDigest.length + " does not match expected length for "+ digestAlgorithm+ " of "+ expectedLength);
  }
  if (parser.next() != XmlPullParser.END_TAG) {
    throw new ParserException(parser,"pin contains additional elements");
  }
  return new Pin(digestAlgorithm,decodedDigest);
}
