{
  Class klass=((JavaClass)modelClass).mClass;
  ArrayList<Class> args=new ArrayList<Class>(argClasses.size());
  for (int i=0; i < argClasses.size(); i++) {
    args.add(((JavaClass)argClasses.get(i)).mClass);
  }
  for (  String methodName : new String[]{"set" + StringUtils.capitalize(name),name}) {
    for (    Method method : klass.getMethods()) {
      if (methodName.equals(method.getName()) && args.size() == method.getParameterTypes().length) {
        return new Callable(Callable.Type.METHOD,methodName,new JavaClass(method.getReturnType()),true,false);
      }
    }
  }
  L.e(new Exception(),"cannot find method %s in %s",name,klass);
  throw new IllegalArgumentException("cannot find method " + name + " at class "+ klass.getSimpleName());
}
