{
  SparseArray<Bitmap> bitmaps=new SparseArray<>(mUsers.size());
  final int N=mUsers.size();
  for (int i=0; i < N; i++) {
    UserRecord r=mUsers.get(i);
    if (r == null || r.info == null || r.info.id == forcePictureLoadForId || r.picture == null) {
      continue;
    }
    bitmaps.put(r.info.id,r.picture);
  }
  new AsyncTask<SparseArray<Bitmap>,Void,ArrayList<UserRecord>>(){
    @SuppressWarnings("unchecked") @Override protected ArrayList<UserRecord> doInBackground(    SparseArray<Bitmap>... params){
      final SparseArray<Bitmap> bitmaps=params[0];
      List<UserInfo> infos=mUserManager.getUsers(true);
      if (infos == null) {
        return null;
      }
      ArrayList<UserRecord> records=new ArrayList<>(infos.size());
      int currentId=ActivityManager.getCurrentUser();
      UserRecord guestRecord=null;
      int avatarSize=mContext.getResources().getDimensionPixelSize(R.dimen.max_avatar_size);
      for (      UserInfo info : infos) {
        boolean isCurrent=currentId == info.id;
        if (info.isGuest()) {
          guestRecord=new UserRecord(info,null,true,isCurrent);
        }
 else         if (info.supportsSwitchTo()) {
          Bitmap picture=bitmaps.get(info.id);
          if (picture == null) {
            picture=mUserManager.getUserIcon(info.id);
          }
          if (picture != null) {
            picture=BitmapHelper.createCircularClip(picture,avatarSize,avatarSize);
          }
          records.add(new UserRecord(info,picture,false,isCurrent));
        }
      }
      if (guestRecord == null) {
        records.add(new UserRecord(null,null,true,false));
      }
 else {
        records.add(guestRecord);
      }
      return records;
    }
    @Override protected void onPostExecute(    ArrayList<UserRecord> userRecords){
      if (userRecords != null) {
        mUsers=userRecords;
        notifyAdapters();
      }
    }
  }
.execute((SparseArray)bitmaps);
}
