{
  if (mHandleTTY) {
    int ttyState=newState & TTY_BITS_MASK;
    if (ttyState != mTTYState) {
      String ttyMode;
switch (ttyState) {
case BIT_TTY_FULL:
        ttyMode="tty_full";
      break;
case BIT_TTY_VCO:
    ttyMode="tty_vco";
  break;
case BIT_TTY_HCO:
ttyMode="tty_hco";
break;
case BIT_TTY_OFF:
ttyMode="tty_off";
break;
default :
ttyMode="tty_invalid";
break;
}
if (ttyMode != "tty_invalid") {
mTTYState=ttyState;
if (mAudioManager == null) {
mAudioManager=(AudioManager)mContext.getSystemService(Context.AUDIO_SERVICE);
}
mAudioManager.setParameters("tty_mode=" + ttyMode);
}
}
}
int headsetState=newState & SUPPORTED_HEADSETS;
int newOrOld=headsetState | mHeadsetState;
int delay=0;
if (mHeadsetState == headsetState || ((newOrOld & (newOrOld - 1)) != 0)) {
return;
}
mHeadsetName=newName;
mPrevHeadsetState=mHeadsetState;
mHeadsetState=headsetState;
if (headsetState == 0) {
Intent intent=new Intent(AudioManager.ACTION_AUDIO_BECOMING_NOISY);
mContext.sendBroadcast(intent);
delay=1000;
}
 else {
if (mHandler.hasMessages(0)) {
delay=1000;
}
}
mWakeLock.acquire();
mHandler.sendMessageDelayed(mHandler.obtainMessage(0,mHeadsetState,mPrevHeadsetState,mHeadsetName),delay);
}
