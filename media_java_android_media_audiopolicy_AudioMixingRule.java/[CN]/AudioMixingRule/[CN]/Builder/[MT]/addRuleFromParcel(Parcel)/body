{
  int rule=in.readInt();
  AudioAttributes attr;
  if ((rule == RULE_MATCH_ATTRIBUTE_USAGE) || (rule == RULE_EXCLUDE_ATTRIBUTE_USAGE)) {
    int usage=in.readInt();
    attr=new AudioAttributes.Builder().setUsage(usage).build();
  }
 else   if ((rule == RULE_MATCH_ATTRIBUTE_CAPTURE_PRESET) || (rule == RULE_EXCLUDE_ATTRIBUTE_CAPTURE_PRESET)) {
    int preset=in.readInt();
    attr=new AudioAttributes.Builder().setInternalCapturePreset(preset).build();
  }
 else {
    in.readInt();
    throw new IllegalArgumentException("Illegal rule value " + rule + " in parcel");
  }
  return addRuleInt(attr,rule);
}
