{
  XmlPullParser parser=Xml.newPullParser();
  parser.setInput(fis,null);
  int eventType=parser.getEventType();
  while (eventType != XmlPullParser.START_TAG && eventType != XmlPullParser.END_DOCUMENT) {
    eventType=parser.next();
    Slog.d(TAG,parser.getName());
  }
  if (eventType == XmlPullParser.END_DOCUMENT) {
    if (DEBUG) {
      Slog.d(TAG,"No persisted jobs.");
    }
    return null;
  }
  String tagName=parser.getName();
  if ("job-info".equals(tagName)) {
    final List<JobStatus> jobs=new ArrayList<JobStatus>();
    try {
      int version=Integer.valueOf(parser.getAttributeValue(null,"version"));
      if (version != JOBS_FILE_VERSION) {
        Slog.d(TAG,"Invalid version number, aborting jobs file read.");
        return null;
      }
    }
 catch (    NumberFormatException e) {
      Slog.e(TAG,"Invalid version number, aborting jobs file read.");
      return null;
    }
    eventType=parser.next();
    do {
      if (eventType == XmlPullParser.START_TAG) {
        tagName=parser.getName();
        if ("job".equals(tagName)) {
          JobStatus persistedJob=restoreJobFromXml(parser);
          if (persistedJob != null) {
            if (DEBUG) {
              Slog.d(TAG,"Read out " + persistedJob);
            }
            jobs.add(persistedJob);
          }
 else {
            Slog.d(TAG,"Error reading job from file.");
          }
        }
      }
      eventType=parser.next();
    }
 while (eventType != XmlPullParser.END_DOCUMENT);
    return jobs;
  }
  return null;
}
