{
  final long startElapsed=SystemClock.elapsedRealtime();
  final List<JobStatus> storeCopy=new ArrayList<JobStatus>();
synchronized (mLock) {
    mJobSet.forEachJob(new JobStatusFunctor(){
      @Override public void process(      JobStatus job){
        if (job.isPersisted()) {
          storeCopy.add(new JobStatus(job));
        }
      }
    }
);
  }
  writeJobsMapImpl(storeCopy);
  if (JobSchedulerService.DEBUG) {
    Slog.v(TAG,"Finished writing, took " + (SystemClock.elapsedRealtime() - startElapsed) + "ms");
  }
}
