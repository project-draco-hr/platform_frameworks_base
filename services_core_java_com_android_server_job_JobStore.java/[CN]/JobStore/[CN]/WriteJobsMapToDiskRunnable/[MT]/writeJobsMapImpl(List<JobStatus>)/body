{
  try {
    ByteArrayOutputStream baos=new ByteArrayOutputStream();
    XmlSerializer out=new FastXmlSerializer();
    out.setOutput(baos,StandardCharsets.UTF_8.name());
    out.startDocument(null,true);
    out.setFeature("http://xmlpull.org/v1/doc/features.html#indent-output",true);
    out.startTag(null,"job-info");
    out.attribute(null,"version",Integer.toString(JOBS_FILE_VERSION));
    for (int i=0; i < jobList.size(); i++) {
      JobStatus jobStatus=jobList.get(i);
      if (DEBUG) {
        Slog.d(TAG,"Saving job " + jobStatus.getJobId());
      }
      out.startTag(null,"job");
      addAttributesToJobTag(out,jobStatus);
      writeConstraintsToXml(out,jobStatus);
      writeExecutionCriteriaToXml(out,jobStatus);
      writeBundleToXml(jobStatus.getExtras(),out);
      out.endTag(null,"job");
    }
    out.endTag(null,"job-info");
    out.endDocument();
    FileOutputStream fos=mJobsFile.startWrite();
    fos.write(baos.toByteArray());
    mJobsFile.finishWrite(fos);
    mDirtyOperations=0;
  }
 catch (  IOException e) {
    if (DEBUG) {
      Slog.v(TAG,"Error writing out job data.",e);
    }
  }
catch (  XmlPullParserException e) {
    if (DEBUG) {
      Slog.d(TAG,"Error persisting bundle.",e);
    }
  }
}
