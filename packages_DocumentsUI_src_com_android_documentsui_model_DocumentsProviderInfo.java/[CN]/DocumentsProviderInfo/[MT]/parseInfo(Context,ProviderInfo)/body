{
  final DocumentsProviderInfo info=new DocumentsProviderInfo();
  info.providerInfo=providerInfo;
  info.customIcons=Lists.newArrayList();
  final PackageManager pm=context.getPackageManager();
  final Resources res;
  try {
    res=pm.getResourcesForApplication(providerInfo.applicationInfo);
  }
 catch (  NameNotFoundException e) {
    Log.w(TAG,"Failed to find resources for " + providerInfo,e);
    return null;
  }
  XmlResourceParser parser=null;
  try {
    parser=providerInfo.loadXmlMetaData(pm,DocumentsContract.META_DATA_DOCUMENT_PROVIDER);
    AttributeSet attrs=Xml.asAttributeSet(parser);
    int type=0;
    while ((type=parser.next()) != XmlPullParser.END_DOCUMENT) {
      final String tag=parser.getName();
      if (type == XmlPullParser.START_TAG && TAG_DOCUMENTS_PROVIDER.equals(tag)) {
        final TypedArray a=res.obtainAttributes(attrs,com.android.internal.R.styleable.DocumentsProviderInfo);
        info.customRoots=a.getBoolean(com.android.internal.R.styleable.DocumentsProviderInfo_customRoots,false);
        a.recycle();
      }
 else       if (type == XmlPullParser.START_TAG && TAG_ICON.equals(tag)) {
        final TypedArray a=res.obtainAttributes(attrs,com.android.internal.R.styleable.Icon);
        final Icon icon=new Icon();
        icon.mimeType=a.getString(com.android.internal.R.styleable.Icon_mimeType);
        icon.icon=a.getDrawable(com.android.internal.R.styleable.Icon_icon);
        info.customIcons.add(icon);
        a.recycle();
      }
    }
  }
 catch (  IOException e) {
    Log.w(TAG,"Failed to parse metadata",e);
    return null;
  }
catch (  XmlPullParserException e) {
    Log.w(TAG,"Failed to parse metadata",e);
    return null;
  }
 finally {
    IoUtils.closeQuietly(parser);
  }
  return info;
}
