{
  float inverseFraction=(1.0f - mAppearAnimationFraction);
  float translationFraction=mCurrentAppearInterpolator.getInterpolation(inverseFraction);
  float translateYTotalAmount=translationFraction * mAnimationTranslationY;
  mAppearAnimationTranslation=translateYTotalAmount;
  float widthFraction=(inverseFraction - (1.0f - HORIZONTAL_ANIMATION_START)) / (HORIZONTAL_ANIMATION_START - HORIZONTAL_ANIMATION_END);
  widthFraction=Math.min(1.0f,Math.max(0.0f,widthFraction));
  widthFraction=mCurrentAppearInterpolator.getInterpolation(widthFraction);
  float left=(getWidth() * (0.5f - HORIZONTAL_COLLAPSED_REST_PARTIAL / 2.0f) * widthFraction);
  float right=getWidth() - left;
  float heightFraction=(inverseFraction - (1.0f - VERTICAL_ANIMATION_START)) / VERTICAL_ANIMATION_START;
  heightFraction=Math.max(0.0f,heightFraction);
  heightFraction=mCurrentAppearInterpolator.getInterpolation(heightFraction);
  float top;
  float bottom;
  final int actualHeight=getActualHeight();
  if (mAnimationTranslationY > 0.0f) {
    bottom=actualHeight - heightFraction * mAnimationTranslationY * 0.1f - translateYTotalAmount;
    top=bottom * heightFraction;
  }
 else {
    top=heightFraction * (actualHeight + mAnimationTranslationY) * 0.1f - translateYTotalAmount;
    bottom=actualHeight * (1 - heightFraction) + top * heightFraction;
  }
  mAppearAnimationRect.set(left,top,right,bottom);
  setOutlineRect(left,top + mAppearAnimationTranslation,right,bottom + mAppearAnimationTranslation);
}
