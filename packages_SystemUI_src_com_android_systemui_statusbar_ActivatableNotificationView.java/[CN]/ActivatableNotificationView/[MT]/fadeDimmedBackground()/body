{
  mBackgroundDimmed.animate().cancel();
  mBackgroundNormal.animate().cancel();
  if (!shouldHideBackground()) {
    if (mDimmed) {
      mBackgroundDimmed.setVisibility(View.VISIBLE);
    }
 else {
      mBackgroundNormal.setVisibility(View.VISIBLE);
    }
  }
  float startAlpha=mDimmed ? 1f : 0;
  float endAlpha=mDimmed ? 0 : 1f;
  int duration=BACKGROUND_ANIMATION_LENGTH_MS;
  if (mBackgroundAnimator != null) {
    startAlpha=(Float)mBackgroundAnimator.getAnimatedValue();
    duration=(int)mBackgroundAnimator.getCurrentPlayTime();
    mBackgroundAnimator.removeAllListeners();
    mBackgroundAnimator.cancel();
    if (duration <= 0) {
      updateBackground();
      return;
    }
  }
  mBackgroundNormal.setAlpha(startAlpha);
  mBackgroundAnimator=ObjectAnimator.ofFloat(mBackgroundNormal,View.ALPHA,startAlpha,endAlpha);
  mBackgroundAnimator.setInterpolator(Interpolators.FAST_OUT_SLOW_IN);
  mBackgroundAnimator.setDuration(duration);
  mBackgroundAnimator.addListener(new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator animation){
      if (mDimmed) {
        mBackgroundNormal.setVisibility(View.INVISIBLE);
      }
 else {
        mBackgroundDimmed.setVisibility(View.INVISIBLE);
      }
      mBackgroundAnimator=null;
    }
  }
);
  mBackgroundAnimator.start();
}
