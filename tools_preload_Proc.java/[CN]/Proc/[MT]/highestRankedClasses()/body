{
  if (!isApplication() || Policy.isService(this.name)) {
    return Collections.emptyList();
  }
  Operation[] ranked=new Operation[operations.size()];
  ranked=operations.toArray(ranked);
  Arrays.sort(ranked,new ClassRank());
  int timeToSave=totalTimeMicros() * percentageToPreload() / 100;
  int timeSaved=0;
  int count=0;
  List<LoadedClass> highest=new ArrayList<LoadedClass>();
  for (  Operation operation : ranked) {
    if (timeSaved >= timeToSave || count++ > 100) {
      break;
    }
    if (!Policy.isPreloadableClass(operation.loadedClass.name)) {
      continue;
    }
    if (!operation.loadedClass.systemClass) {
      continue;
    }
    highest.add(operation.loadedClass);
    timeSaved+=operation.medianExclusiveTimeMicros();
  }
  return highest;
}
