{
  if (!isApplication()) {
    return Collections.emptyList();
  }
  Operation[] ranked=new Operation[operations.size()];
  ranked=operations.toArray(ranked);
  Arrays.sort(ranked,new ClassRank());
  int timeToSave=totalTimeMicros() * percentageToPreload() / 100;
  int timeSaved=0;
  boolean service=Policy.isService(this.name);
  List<LoadedClass> highest=new ArrayList<LoadedClass>();
  for (  Operation operation : ranked) {
    if (!takeAllClasses) {
      if (highest.size() >= MAX_TO_PRELOAD) {
        System.out.println(name + " got " + (timeSaved * 100 / timeToSave)+ "% through");
        break;
      }
      if (timeSaved >= timeToSave) {
        break;
      }
    }
    if (!Policy.isPreloadableClass(operation.loadedClass.name)) {
      continue;
    }
    if (!operation.loadedClass.systemClass) {
      continue;
    }
    if (!service || operation.loadedClass.name.startsWith("java.")) {
      highest.add(operation.loadedClass);
    }
    timeSaved+=operation.medianExclusiveTimeMicros();
  }
  return highest;
}
