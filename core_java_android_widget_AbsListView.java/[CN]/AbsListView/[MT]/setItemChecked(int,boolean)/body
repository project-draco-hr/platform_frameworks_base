{
  if (mChoiceMode == CHOICE_MODE_NONE) {
    return;
  }
  if (value && mChoiceMode == CHOICE_MODE_MULTIPLE_MODAL && mChoiceActionMode == null) {
    mChoiceActionMode=startActionMode(mMultiChoiceModeCallback);
  }
  if (mChoiceMode == CHOICE_MODE_MULTIPLE || mChoiceMode == CHOICE_MODE_MULTIPLE_MODAL) {
    boolean oldValue=mCheckStates.get(position);
    mCheckStates.put(position,value);
    if (mCheckedIdStates != null && mAdapter.hasStableIds()) {
      if (value) {
        mCheckedIdStates.put(mAdapter.getItemId(position),Boolean.TRUE);
      }
 else {
        mCheckedIdStates.delete(mAdapter.getItemId(position));
      }
    }
    if (oldValue != value) {
      if (value) {
        mCheckedItemCount++;
      }
 else {
        mCheckedItemCount--;
      }
    }
    if (mChoiceActionMode != null) {
      final long id=mAdapter.getItemId(position);
      mMultiChoiceModeCallback.onItemCheckedStateChanged(mChoiceActionMode,position,id,value);
    }
  }
 else {
    boolean updateIds=mCheckedIdStates != null && mAdapter.hasStableIds();
    if (value || isItemChecked(position)) {
      mCheckStates.clear();
      if (updateIds) {
        mCheckedIdStates.clear();
      }
    }
    if (value) {
      mCheckStates.put(position,true);
      if (updateIds) {
        mCheckedIdStates.put(mAdapter.getItemId(position),Boolean.TRUE);
      }
      mCheckedItemCount=1;
    }
 else     if (mCheckStates.size() == 0 || !mCheckStates.valueAt(0)) {
      mCheckedItemCount=0;
    }
  }
  if (!mInLayout && !mBlockLayoutRequests) {
    mDataChanged=true;
    rememberSyncState();
    requestLayout();
  }
}
