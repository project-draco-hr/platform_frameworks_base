{
switch (direction) {
case ACCESSIBILITY_FOCUS_FORWARD:
{
      if (focused == this) {
        if (getChildCount() > 0) {
          return getChildAt(0);
        }
        return super.focusSearch(this,direction);
      }
      final int currentPosition=getPositionForView(focused);
      if (currentPosition < 0 || currentPosition >= getCount()) {
        return super.focusSearch(this,direction);
      }
      View currentItem=getChildAt(currentPosition - getFirstVisiblePosition());
      if (currentItem instanceof ViewGroup) {
        ViewGroup currentItemGroup=(ViewGroup)currentItem;
        View nextFocus=FocusFinder.getInstance().findNextFocus(currentItemGroup,focused,direction);
        if (nextFocus != null && nextFocus != currentItemGroup && nextFocus != focused) {
          return nextFocus;
        }
      }
      final int nextPosition=currentPosition - getFirstVisiblePosition() + 1;
      if (nextPosition < getChildCount()) {
        return getChildAt(nextPosition);
      }
      return super.focusSearch(this,direction);
    }
case ACCESSIBILITY_FOCUS_BACKWARD:
{
    if (focused == this) {
      final int childCount=getChildCount();
      if (childCount > 0) {
        return super.focusSearch(getChildAt(childCount - 1),direction);
      }
      return super.focusSearch(this,direction);
    }
    final int currentPosition=getPositionForView(focused);
    if (currentPosition < 0 || currentPosition >= getCount()) {
      return super.focusSearch(this,direction);
    }
    View currentItem=getChildAt(currentPosition - getFirstVisiblePosition());
    if (currentItem == focused) {
      final int previoustPosition=currentPosition - getFirstVisiblePosition() - 1;
      if (previoustPosition < 0) {
        return this;
      }
      currentItem=getChildAt(previoustPosition);
      focused=null;
    }
    if (currentItem instanceof ViewGroup) {
      ViewGroup currentItemGroup=(ViewGroup)currentItem;
      View nextFocus=FocusFinder.getInstance().findNextFocus(currentItemGroup,focused,direction);
      if (nextFocus != null && nextFocus != currentItemGroup && nextFocus != focused) {
        return nextFocus;
      }
    }
    return currentItem;
  }
}
return super.focusSearch(focused,direction);
}
