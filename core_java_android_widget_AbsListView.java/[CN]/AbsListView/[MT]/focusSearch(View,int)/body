{
switch (direction) {
case ACCESSIBILITY_FOCUS_FORWARD:
{
      ViewRootImpl viewRootImpl=getViewRootImpl();
      if (viewRootImpl == null) {
        return null;
      }
      View currentFocus=viewRootImpl.getAccessibilityFocusedHost();
      if (currentFocus == null) {
        return super.focusSearch(this,direction);
      }
      if (currentFocus == this) {
        if (getChildCount() > 0) {
          return getChildAt(0);
        }
        return super.focusSearch(this,direction);
      }
      final int currentPosition=getPositionForView(currentFocus);
      if (currentPosition < 0 || currentPosition >= getCount()) {
        return super.focusSearch(this,direction);
      }
      View currentItem=getChildAt(currentPosition - getFirstVisiblePosition());
      if (currentItem instanceof ViewGroup) {
        ViewGroup currentItemGroup=(ViewGroup)currentItem;
        View nextFocus=FocusFinder.getInstance().findNextFocus(currentItemGroup,currentFocus,direction);
        if (nextFocus != null && nextFocus != currentItemGroup && nextFocus != currentFocus) {
          return nextFocus;
        }
      }
      final int nextPosition=currentPosition - getFirstVisiblePosition() + 1;
      if (nextPosition < getChildCount()) {
        return getChildAt(nextPosition);
      }
 else {
        return super.focusSearch(this,direction);
      }
    }
case ACCESSIBILITY_FOCUS_BACKWARD:
{
    ViewRootImpl viewRootImpl=getViewRootImpl();
    if (viewRootImpl == null) {
      return null;
    }
    View currentFocus=viewRootImpl.getAccessibilityFocusedHost();
    if (currentFocus == null) {
      return super.focusSearch(this,direction);
    }
    if (currentFocus == this) {
      final int lastChildIndex=getChildCount() - 1;
      if (lastChildIndex >= 0) {
        return getChildAt(lastChildIndex);
      }
      return super.focusSearch(this,direction);
    }
    final int currentPosition=getPositionForView(currentFocus);
    if (currentPosition < 0 || currentPosition >= getCount()) {
      return super.focusSearch(this,direction);
    }
    View currentItem=getChildAt(currentPosition - getFirstVisiblePosition());
    if (currentItem instanceof ViewGroup) {
      ViewGroup currentItemGroup=(ViewGroup)currentItem;
      View nextFocus=FocusFinder.getInstance().findNextFocus(currentItemGroup,currentFocus,direction);
      if (nextFocus != null && nextFocus != currentItemGroup && nextFocus != currentFocus) {
        return nextFocus;
      }
    }
    final int nextPosition=currentPosition - getFirstVisiblePosition() - 1;
    if (nextPosition >= 0) {
      return getChildAt(nextPosition);
    }
 else {
      return super.focusSearch(this,direction);
    }
  }
}
return super.focusSearch(focused,direction);
}
