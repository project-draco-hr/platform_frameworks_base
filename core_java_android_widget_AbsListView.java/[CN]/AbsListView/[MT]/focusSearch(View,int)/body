{
switch (direction) {
case ACCESSIBILITY_FOCUS_FORWARD:
{
      if (focused == this) {
        final int childCount=getChildCount();
        for (int i=0; i < childCount; i++) {
          View child=getChildAt(i);
          if (child.getVisibility() == View.VISIBLE) {
            return child;
          }
        }
        return super.focusSearch(this,direction);
      }
      final int currentPosition=getPositionForView(focused);
      if (currentPosition < 0 || currentPosition >= getCount()) {
        return super.focusSearch(this,direction);
      }
      View currentItem=getChildAt(currentPosition - getFirstVisiblePosition());
      if (currentItem.getVisibility() == View.VISIBLE) {
        if (currentItem instanceof ViewGroup) {
          ViewGroup currentItemGroup=(ViewGroup)currentItem;
          View nextFocus=FocusFinder.getInstance().findNextFocus(currentItemGroup,focused,direction);
          if (nextFocus != null && nextFocus != currentItemGroup && nextFocus != focused) {
            return nextFocus;
          }
        }
      }
      final int nextPosition=currentPosition - getFirstVisiblePosition() + 1;
      for (int i=nextPosition; i <= getLastVisiblePosition(); i++) {
        View child=getChildAt(i);
        if (child.getVisibility() == View.VISIBLE) {
          return child;
        }
      }
      return super.focusSearch(this,direction);
    }
case ACCESSIBILITY_FOCUS_BACKWARD:
{
    if (focused == this) {
      final int childCount=getChildCount();
      for (int i=childCount - 1; i >= 0; i--) {
        View child=getChildAt(i);
        if (child.getVisibility() == View.VISIBLE) {
          return super.focusSearch(child,direction);
        }
      }
      return super.focusSearch(this,direction);
    }
    final int currentPosition=getPositionForView(focused);
    if (currentPosition < 0 || currentPosition >= getCount()) {
      return super.focusSearch(this,direction);
    }
    View currentItem=getChildAt(currentPosition - getFirstVisiblePosition());
    if (currentItem == focused) {
      currentItem=null;
      focused=null;
      final int previousPosition=currentPosition - getFirstVisiblePosition() - 1;
      for (int i=previousPosition; i >= 0; i--) {
        View child=getChildAt(i);
        if (child.getVisibility() == View.VISIBLE) {
          currentItem=child;
          break;
        }
      }
      if (currentItem == null) {
        return this;
      }
    }
    if (currentItem.getVisibility() == View.VISIBLE) {
      if (currentItem instanceof ViewGroup) {
        ViewGroup currentItemGroup=(ViewGroup)currentItem;
        View nextFocus=FocusFinder.getInstance().findNextFocus(currentItemGroup,focused,direction);
        if (nextFocus != null && nextFocus != currentItemGroup && nextFocus != focused) {
          return nextFocus;
        }
      }
      return currentItem;
    }
    return super.focusSearch(this,direction);
  }
}
return super.focusSearch(focused,direction);
}
