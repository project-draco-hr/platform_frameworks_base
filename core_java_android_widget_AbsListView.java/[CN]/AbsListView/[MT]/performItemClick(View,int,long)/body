{
  boolean handled=false;
  boolean dispatchItemClick=true;
  if (mChoiceMode != CHOICE_MODE_NONE) {
    handled=true;
    if (mChoiceMode == CHOICE_MODE_MULTIPLE || (mChoiceMode == CHOICE_MODE_MULTIPLE_MODAL && mChoiceActionMode != null)) {
      boolean newValue=!mCheckStates.get(position,false);
      mCheckStates.put(position,newValue);
      if (mCheckedIdStates != null && mAdapter.hasStableIds()) {
        if (newValue) {
          mCheckedIdStates.put(mAdapter.getItemId(position),Boolean.TRUE);
        }
 else {
          mCheckedIdStates.delete(mAdapter.getItemId(position));
        }
      }
      if (newValue) {
        mCheckedItemCount++;
      }
 else {
        mCheckedItemCount--;
      }
      if (mChoiceActionMode != null) {
        mMultiChoiceModeCallback.onItemCheckedStateChanged(mChoiceActionMode,position,id,newValue);
        dispatchItemClick=false;
      }
    }
 else     if (mChoiceMode == CHOICE_MODE_SINGLE) {
      boolean newValue=!mCheckStates.get(position,false);
      if (newValue) {
        mCheckStates.clear();
        mCheckStates.put(position,true);
        if (mCheckedIdStates != null && mAdapter.hasStableIds()) {
          mCheckedIdStates.clear();
          mCheckedIdStates.put(mAdapter.getItemId(position),Boolean.TRUE);
        }
        mCheckedItemCount=1;
      }
 else       if (mCheckStates.size() == 0 || !mCheckStates.valueAt(0)) {
        mCheckedItemCount=0;
      }
    }
    mDataChanged=true;
    rememberSyncState();
    requestLayout();
  }
  if (dispatchItemClick) {
    handled|=super.performItemClick(view,position,id);
  }
  return handled;
}
