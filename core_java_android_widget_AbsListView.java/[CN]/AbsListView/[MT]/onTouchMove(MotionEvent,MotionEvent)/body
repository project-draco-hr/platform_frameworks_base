{
  int pointerIndex=ev.findPointerIndex(mActivePointerId);
  if (pointerIndex == -1) {
    pointerIndex=0;
    mActivePointerId=ev.getPointerId(pointerIndex);
  }
  if (mDataChanged) {
    layoutChildren();
  }
  final int y=(int)ev.getY(pointerIndex);
switch (mTouchMode) {
case TOUCH_MODE_DOWN:
case TOUCH_MODE_TAP:
case TOUCH_MODE_DONE_WAITING:
    if (startScrollIfNeeded((int)ev.getX(pointerIndex),y,vtev)) {
      break;
    }
  final View motionView=getChildAt(mMotionPosition - mFirstPosition);
final float x=ev.getX(pointerIndex);
if (!pointInView(x,y,mTouchSlop)) {
setPressed(false);
if (motionView != null) {
  motionView.setPressed(false);
}
removeCallbacks(mTouchMode == TOUCH_MODE_DOWN ? mPendingCheckForTap : mPendingCheckForLongPress);
mTouchMode=TOUCH_MODE_DONE_WAITING;
updateSelectorState();
}
 else if (motionView != null) {
final float[] point=mTmpPoint;
point[0]=x;
point[1]=y;
transformPointToViewLocal(point,motionView);
motionView.drawableHotspotChanged(point[0],point[1]);
}
break;
case TOUCH_MODE_SCROLL:
case TOUCH_MODE_OVERSCROLL:
scrollIfNeeded((int)ev.getX(pointerIndex),y,vtev);
break;
}
}
