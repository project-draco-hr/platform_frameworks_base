{
  int action=ev.getAction();
  View v;
  if (mFastScroller != null) {
    boolean intercepted=mFastScroller.onInterceptTouchEvent(ev);
    if (intercepted) {
      return true;
    }
  }
switch (action & MotionEvent.ACTION_MASK) {
case MotionEvent.ACTION_DOWN:
{
      int touchMode=mTouchMode;
      if (touchMode == TOUCH_MODE_OVERFLING || touchMode == TOUCH_MODE_OVERSCROLL) {
        mMotionCorrection=0;
        return true;
      }
      final int x=(int)ev.getX();
      final int y=(int)ev.getY();
      mActivePointerId=ev.getPointerId(0);
      int motionPosition=findMotionRow(y);
      if (touchMode != TOUCH_MODE_FLING && motionPosition >= 0) {
        v=getChildAt(motionPosition - mFirstPosition);
        mMotionViewOriginalTop=v.getTop();
        mMotionX=x;
        mMotionY=y;
        mMotionPosition=motionPosition;
        mTouchMode=TOUCH_MODE_DOWN;
        clearScrollingCache();
      }
      mLastY=Integer.MIN_VALUE;
      if (touchMode == TOUCH_MODE_FLING) {
        return true;
      }
      break;
    }
case MotionEvent.ACTION_MOVE:
{
switch (mTouchMode) {
case TOUCH_MODE_DOWN:
      final int pointerIndex=ev.findPointerIndex(mActivePointerId);
    final int y=(int)ev.getY(pointerIndex);
  if (startScrollIfNeeded(y - mMotionY)) {
    return true;
  }
break;
}
break;
}
case MotionEvent.ACTION_UP:
{
mTouchMode=TOUCH_MODE_REST;
mActivePointerId=INVALID_POINTER;
reportScrollStateChange(OnScrollListener.SCROLL_STATE_IDLE);
break;
}
case MotionEvent.ACTION_POINTER_UP:
{
onSecondaryPointerUp(ev);
break;
}
}
return false;
}
