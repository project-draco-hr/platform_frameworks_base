{
  dismissPopup();
  Parcelable superState=super.onSaveInstanceState();
  SavedState ss=new SavedState(superState);
  if (mPendingSync != null) {
    ss.selectedId=mPendingSync.selectedId;
    ss.firstId=mPendingSync.firstId;
    ss.viewTop=mPendingSync.viewTop;
    ss.position=mPendingSync.position;
    ss.height=mPendingSync.height;
    ss.filter=mPendingSync.filter;
    ss.inActionMode=mPendingSync.inActionMode;
    ss.checkedItemCount=mPendingSync.checkedItemCount;
    ss.checkState=mPendingSync.checkState;
    ss.checkIdState=mPendingSync.checkIdState;
    return ss;
  }
  boolean haveChildren=getChildCount() > 0 && mItemCount > 0;
  long selectedId=getSelectedItemId();
  ss.selectedId=selectedId;
  ss.height=getHeight();
  if (selectedId >= 0) {
    ss.viewTop=mSelectedTop;
    ss.position=getSelectedItemPosition();
    ss.firstId=INVALID_POSITION;
  }
 else {
    if (haveChildren && mFirstPosition > 0) {
      View v=getChildAt(0);
      ss.viewTop=v.getTop();
      int firstPos=mFirstPosition;
      if (firstPos >= mItemCount) {
        firstPos=mItemCount - 1;
      }
      ss.position=firstPos;
      ss.firstId=mAdapter.getItemId(firstPos);
    }
 else {
      ss.viewTop=0;
      ss.firstId=INVALID_POSITION;
      ss.position=0;
    }
  }
  ss.filter=null;
  if (mFiltered) {
    final EditText textFilter=mTextFilter;
    if (textFilter != null) {
      Editable filterText=textFilter.getText();
      if (filterText != null) {
        ss.filter=filterText.toString();
      }
    }
  }
  ss.inActionMode=mChoiceMode == CHOICE_MODE_MULTIPLE_MODAL && mChoiceActionMode != null;
  if (mCheckStates != null) {
    ss.checkState=mCheckStates.clone();
  }
  if (mCheckedIdStates != null) {
    final LongSparseArray<Integer> idState=new LongSparseArray<Integer>();
    final int count=mCheckedIdStates.size();
    for (int i=0; i < count; i++) {
      idState.put(mCheckedIdStates.keyAt(i),mCheckedIdStates.valueAt(i));
    }
    ss.checkIdState=idState;
  }
  ss.checkedItemCount=mCheckedItemCount;
  if (mRemoteAdapter != null) {
    mRemoteAdapter.saveRemoteViewsCache();
  }
  return ss;
}
