{
  int sX, sY;
  int dX, dY;
switch (direction) {
case View.FOCUS_RIGHT:
    sX=source.right;
  sY=source.top + source.height() / 2;
dX=dest.left;
dY=dest.top + dest.height() / 2;
break;
case View.FOCUS_DOWN:
sX=source.left + source.width() / 2;
sY=source.bottom;
dX=dest.left + dest.width() / 2;
dY=dest.top;
break;
case View.FOCUS_LEFT:
sX=source.left;
sY=source.top + source.height() / 2;
dX=dest.right;
dY=dest.top + dest.height() / 2;
break;
case View.FOCUS_UP:
sX=source.left + source.width() / 2;
sY=source.top;
dX=dest.left + dest.width() / 2;
dY=dest.bottom;
break;
case View.FOCUS_FORWARD:
case View.FOCUS_BACKWARD:
sX=source.right + source.width() / 2;
sY=source.top + source.height() / 2;
dX=dest.left + dest.width() / 2;
dY=dest.top + dest.height() / 2;
break;
default :
throw new IllegalArgumentException("direction must be one of " + "{FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT, " + "FOCUS_FORWARD, FOCUS_BACKWARD}.");
}
int deltaX=dX - sX;
int deltaY=dY - sY;
return deltaY * deltaY + deltaX * deltaX;
}
