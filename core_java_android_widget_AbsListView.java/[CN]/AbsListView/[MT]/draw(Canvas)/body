{
  super.draw(canvas);
  if (mEdgeGlowTop != null) {
    final int scrollY=mScrollY;
    if (!mEdgeGlowTop.isFinished()) {
      final int restoreCount=canvas.save();
      final int leftPadding=mListPadding.left + mGlowPaddingLeft;
      final int rightPadding=mListPadding.right + mGlowPaddingRight;
      final int width=getWidth() - leftPadding - rightPadding;
      int edgeY=Math.min(0,scrollY + mFirstPositionDistanceGuess);
      canvas.translate(leftPadding,edgeY);
      mEdgeGlowTop.setSize(width,getHeight());
      if (mEdgeGlowTop.draw(canvas)) {
        invalidate(0,0,getWidth(),mEdgeGlowTop.getMaxHeight() + getPaddingTop());
      }
      canvas.restoreToCount(restoreCount);
    }
    if (!mEdgeGlowBottom.isFinished()) {
      final int restoreCount=canvas.save();
      final int leftPadding=mListPadding.left + mGlowPaddingLeft;
      final int rightPadding=mListPadding.right + mGlowPaddingRight;
      final int width=getWidth() - leftPadding - rightPadding;
      final int height=getHeight();
      int edgeX=-width + leftPadding;
      int edgeY=Math.max(height,scrollY + mLastPositionDistanceGuess);
      canvas.translate(edgeX,edgeY);
      canvas.rotate(180,width,0);
      mEdgeGlowBottom.setSize(width,height);
      if (mEdgeGlowBottom.draw(canvas)) {
        invalidate(0,getHeight() - getPaddingBottom() - mEdgeGlowBottom.getMaxHeight(),getWidth(),getHeight());
      }
      canvas.restoreToCount(restoreCount);
    }
  }
}
