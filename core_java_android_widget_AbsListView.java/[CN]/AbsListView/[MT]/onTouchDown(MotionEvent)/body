{
  View v;
switch (mTouchMode) {
case TOUCH_MODE_OVERFLING:
{
      mFlingRunnable.endFling();
      if (mPositionScroller != null) {
        mPositionScroller.stop();
      }
      mTouchMode=TOUCH_MODE_OVERSCROLL;
      mMotionX=(int)ev.getX();
      mMotionY=mLastY=(int)ev.getY();
      mMotionCorrection=0;
      mActivePointerId=ev.getPointerId(0);
      mDirection=0;
      break;
    }
default :
{
    mActivePointerId=ev.getPointerId(0);
    final int x=(int)ev.getX();
    final int y=(int)ev.getY();
    int motionPosition=pointToPosition(x,y);
    if (!mDataChanged) {
      if ((mTouchMode != TOUCH_MODE_FLING) && (motionPosition >= 0) && (getAdapter().isEnabled(motionPosition))) {
        mTouchMode=TOUCH_MODE_DOWN;
        if (mPendingCheckForTap == null) {
          mPendingCheckForTap=new CheckForTap();
        }
        postDelayed(mPendingCheckForTap,ViewConfiguration.getTapTimeout());
      }
 else {
        if (mTouchMode == TOUCH_MODE_FLING) {
          createScrollingCache();
          mTouchMode=TOUCH_MODE_SCROLL;
          mMotionCorrection=0;
          motionPosition=findMotionRow(y);
          mFlingRunnable.flywheelTouch();
        }
      }
    }
    if (motionPosition >= 0) {
      v=getChildAt(motionPosition - mFirstPosition);
      mMotionViewOriginalTop=v.getTop();
    }
    mMotionX=x;
    mMotionY=y;
    mMotionPosition=motionPosition;
    mLastY=Integer.MIN_VALUE;
    break;
  }
}
if (performButtonActionOnTouchDown(ev)) {
if (mTouchMode == TOUCH_MODE_DOWN) {
  removeCallbacks(mPendingCheckForTap);
}
}
}
