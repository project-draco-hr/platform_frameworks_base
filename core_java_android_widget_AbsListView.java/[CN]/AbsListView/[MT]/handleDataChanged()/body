{
  int count=mItemCount;
  if (count > 0) {
    int newPos;
    int selectablePos;
    if (mNeedSync) {
      mNeedSync=false;
      if (mTranscriptMode == TRANSCRIPT_MODE_ALWAYS_SCROLL) {
        mLayoutMode=LAYOUT_FORCE_BOTTOM;
        return;
      }
      if (mTranscriptMode == TRANSCRIPT_MODE_NORMAL) {
        final int childCount=getChildCount();
        final int listBottom=getBottom() - getPaddingBottom();
        final View lastChild=getChildAt(childCount - 1);
        final int lastBottom=lastChild != null ? lastChild.getBottom() : listBottom;
        if (mFirstPosition + childCount >= mOldItemCount && lastBottom <= listBottom) {
          mLayoutMode=LAYOUT_FORCE_BOTTOM;
          return;
        }
        awakenScrollBars();
      }
switch (mSyncMode) {
case SYNC_SELECTED_POSITION:
        if (isInTouchMode()) {
          mLayoutMode=LAYOUT_SYNC;
          mSyncPosition=Math.min(Math.max(0,mSyncPosition),count - 1);
          return;
        }
 else {
          newPos=findSyncPosition();
          if (newPos >= 0) {
            selectablePos=lookForSelectablePosition(newPos,true);
            if (selectablePos == newPos) {
              mSyncPosition=newPos;
              if (mSyncHeight == getHeight()) {
                mLayoutMode=LAYOUT_SYNC;
              }
 else {
                mLayoutMode=LAYOUT_SET_SELECTION;
              }
              setNextSelectedPositionInt(newPos);
              return;
            }
          }
        }
      break;
case SYNC_FIRST_POSITION:
    mLayoutMode=LAYOUT_SYNC;
  mSyncPosition=Math.min(Math.max(0,mSyncPosition),count - 1);
return;
}
}
if (!isInTouchMode()) {
newPos=getSelectedItemPosition();
if (newPos >= count) {
newPos=count - 1;
}
if (newPos < 0) {
newPos=0;
}
selectablePos=lookForSelectablePosition(newPos,true);
if (selectablePos >= 0) {
setNextSelectedPositionInt(selectablePos);
return;
}
 else {
selectablePos=lookForSelectablePosition(newPos,false);
if (selectablePos >= 0) {
setNextSelectedPositionInt(selectablePos);
return;
}
}
}
 else {
if (mResurrectToPosition >= 0) {
return;
}
}
}
mLayoutMode=mStackFromBottom ? LAYOUT_FORCE_BOTTOM : LAYOUT_FORCE_TOP;
mSelectedPosition=INVALID_POSITION;
mSelectedRowId=INVALID_ROW_ID;
mNextSelectedPosition=INVALID_POSITION;
mNextSelectedRowId=INVALID_ROW_ID;
mNeedSync=false;
mSelectorPosition=INVALID_POSITION;
checkSelectionChanged();
}
