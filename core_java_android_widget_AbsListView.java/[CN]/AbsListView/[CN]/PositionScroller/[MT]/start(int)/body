{
  stop();
  if (mDataChanged) {
    mPositionScrollAfterLayout=new Runnable(){
      @Override public void run(){
        start(position);
      }
    }
;
    return;
  }
  final int childCount=getChildCount();
  if (childCount == 0) {
    return;
  }
  final int firstPos=mFirstPosition;
  final int lastPos=firstPos + childCount - 1;
  int viewTravelCount;
  int clampedPosition=Math.max(0,Math.min(getCount() - 1,position));
  if (clampedPosition < firstPos) {
    viewTravelCount=firstPos - clampedPosition + 1;
    mMode=MOVE_UP_POS;
  }
 else   if (clampedPosition > lastPos) {
    viewTravelCount=clampedPosition - lastPos + 1;
    mMode=MOVE_DOWN_POS;
  }
 else {
    scrollToVisible(clampedPosition,INVALID_POSITION,SCROLL_DURATION);
    return;
  }
  if (viewTravelCount > 0) {
    mScrollDuration=SCROLL_DURATION / viewTravelCount;
  }
 else {
    mScrollDuration=SCROLL_DURATION;
  }
  mTargetPos=clampedPosition;
  mBoundPos=INVALID_POSITION;
  mLastSeenPos=INVALID_POSITION;
  postOnAnimation(this);
}
