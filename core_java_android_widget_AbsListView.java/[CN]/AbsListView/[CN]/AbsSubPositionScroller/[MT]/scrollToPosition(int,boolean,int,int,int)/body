{
  stop();
  if (mDataChanged) {
    mPositionScrollAfterLayout=new Runnable(){
      @Override public void run(){
        scrollToPosition(targetPosition,useOffset,offset,boundPosition,duration);
      }
    }
;
    return;
  }
  if (mAdapter == null) {
    return;
  }
  final int itemCount=getCount();
  final int clampedPosition=MathUtils.constrain(targetPosition,0,itemCount - 1);
  final int clampedBoundPosition=MathUtils.constrain(boundPosition,0,itemCount - 1);
  final int firstPosition=getFirstVisiblePosition();
  final int lastPosition=firstPosition + getChildCount();
  final int targetRow=getRowForPosition(clampedPosition);
  final int firstRow=getRowForPosition(firstPosition);
  final int lastRow=getRowForPosition(lastPosition);
  if (useOffset || targetRow <= firstRow) {
    mOffset=offset;
  }
 else   if (targetRow >= lastRow - 1) {
    final int listHeight=getHeight() - getPaddingTop() - getPaddingBottom();
    mOffset=getHeightForPosition(clampedPosition) - listHeight;
  }
 else {
    return;
  }
  float endSubRow=targetRow;
  if (clampedBoundPosition != INVALID_POSITION) {
    final int boundRow=getRowForPosition(clampedBoundPosition);
    if (boundRow >= firstRow && boundRow < lastRow && boundRow != targetRow) {
      endSubRow=computeBoundSubRow(targetRow,boundRow);
    }
  }
  final View firstChild=getChildAt(0);
  if (firstChild == null) {
    return;
  }
  final int firstChildHeight=firstChild.getHeight();
  final float startOffsetRatio;
  if (firstChildHeight == 0) {
    startOffsetRatio=0;
  }
 else {
    startOffsetRatio=-firstChild.getTop() / (float)firstChildHeight;
  }
  final float startSubRow=MathUtils.constrain(firstRow + startOffsetRatio,0,getCount());
  if (startSubRow == endSubRow && mOffset == 0) {
    return;
  }
  final int durationMillis;
  if (duration == DURATION_AUTO) {
    final float subRowDelta=Math.abs(startSubRow - endSubRow);
    durationMillis=(int)MathUtils.lerp(DURATION_AUTO_MIN,DURATION_AUTO_MAX,subRowDelta / getCount());
  }
 else {
    durationMillis=duration;
  }
  mSubScroller.startScroll(startSubRow,endSubRow,durationMillis);
  postOnAnimation(mAnimationFrame);
}
