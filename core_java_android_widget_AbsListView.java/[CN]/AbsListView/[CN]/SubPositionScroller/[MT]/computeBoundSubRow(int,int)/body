{
  int remainingOffset=mOffset;
  int targetHeight=getHeightForRow(targetRow - 1);
  while (remainingOffset > 0) {
    remainingOffset-=targetHeight;
    targetRow--;
    targetHeight=getHeightForRow(targetRow - 1);
  }
  final float targetSubRow=targetRow - remainingOffset / targetHeight;
  mOffset=0;
  if (targetSubRow >= boundRow) {
    return boundRow;
  }
  final int listHeight=getHeight() - getPaddingTop() - getPaddingBottom();
  final int boundHeight=getHeightForRow(boundRow);
  int endRow=boundRow;
  int totalHeight=boundHeight;
  int endHeight;
  do {
    endRow--;
    endHeight=getHeightForRow(endRow);
    totalHeight+=endHeight;
  }
 while (totalHeight < listHeight && endRow > 0);
  final float endOffsetRatio=(totalHeight - listHeight) / (float)endHeight;
  final float boundSubRow=endRow + endOffsetRatio;
  return Math.max(boundSubRow,targetSubRow);
}
