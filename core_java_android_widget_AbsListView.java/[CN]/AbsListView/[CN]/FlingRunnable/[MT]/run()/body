{
  if (mTouchMode != TOUCH_MODE_FLING) {
    return;
  }
  if (mItemCount == 0 || getChildCount() == 0) {
    endFling();
    return;
  }
  final Scroller scroller=mScroller;
  boolean more=scroller.computeScrollOffset();
  final int y=scroller.getCurrY();
  int delta=mLastFlingY - y;
  if (delta > 0) {
    mMotionPosition=mFirstPosition;
    final View firstView=getChildAt(0);
    mMotionViewOriginalTop=firstView.getTop();
    delta=Math.min(getHeight() - mPaddingBottom - mPaddingTop- 1,delta);
  }
 else {
    int offsetToLast=getChildCount() - 1;
    mMotionPosition=mFirstPosition + offsetToLast;
    final View lastView=getChildAt(offsetToLast);
    mMotionViewOriginalTop=lastView.getTop();
    delta=Math.max(-(getHeight() - mPaddingBottom - mPaddingTop- 1),delta);
  }
  trackMotionScroll(delta,delta);
  View motionView=getChildAt(mMotionPosition - mFirstPosition);
  if (motionView != null) {
    if (motionView.getTop() != mMotionViewNewTop) {
      more=false;
    }
  }
  if (more) {
    invalidate();
    mLastFlingY=y;
    post(this);
  }
 else {
    endFling();
    if (PROFILE_FLINGING) {
      if (mFlingProfilingStarted) {
        Debug.stopMethodTracing();
        mFlingProfilingStarted=false;
      }
    }
  }
}
