{
  boolean changed=false;
  if (mDescriptor != descriptor) {
    mDescriptor=descriptor;
    int targetIndex=0;
    if (descriptor != null) {
      if (descriptor.isValid()) {
        final List<RemoteDisplayInfo> routeDescriptors=descriptor.displays;
        final int routeCount=routeDescriptors.size();
        for (int i=0; i < routeCount; i++) {
          final RemoteDisplayInfo routeDescriptor=routeDescriptors.get(i);
          final String descriptorId=routeDescriptor.id;
          final int sourceIndex=findRouteByDescriptorId(descriptorId);
          if (sourceIndex < 0) {
            String uniqueId=assignRouteUniqueId(descriptorId);
            RouteRecord route=new RouteRecord(this,descriptorId,uniqueId);
            mRoutes.add(targetIndex++,route);
            route.updateDescriptor(routeDescriptor);
            changed=true;
          }
 else           if (sourceIndex < targetIndex) {
            Slog.w(TAG,"Ignoring route descriptor with duplicate id: " + routeDescriptor);
          }
 else {
            RouteRecord route=mRoutes.get(sourceIndex);
            Collections.swap(mRoutes,sourceIndex,targetIndex++);
            changed|=route.updateDescriptor(routeDescriptor);
          }
        }
      }
 else {
        Slog.w(TAG,"Ignoring invalid descriptor from media route provider: " + mProvider.getFlattenedComponentName());
      }
    }
    for (int i=mRoutes.size() - 1; i >= targetIndex; i--) {
      RouteRecord route=mRoutes.remove(i);
      route.updateDescriptor(null);
      changed=true;
    }
  }
  return changed;
}
