{
  for (; ; ) {
    MotionEvent event;
    final int eventType;
    final int flags;
synchronized (mLock) {
      DispatchEvent d=mUiDispatchEventQueue.dequeue();
      if (d == null) {
        if (mUiDispatchScheduled) {
          mUiDispatchScheduled=false;
          if (!calledFromHandler) {
            mUiHandler.removeMessages(UiHandler.MSG_DISPATCH_UI_EVENTS);
          }
        }
        return;
      }
      event=d.mEvent;
      if (event != null && (d.mFlags & FLAG_WEBKIT_TRANSFORMED_EVENT) != 0) {
        event.scale(1.0f / d.mWebKitScale);
        event.offsetLocation(-d.mWebKitXOffset,-d.mWebKitYOffset);
        d.mFlags&=~FLAG_WEBKIT_TRANSFORMED_EVENT;
      }
      eventType=d.mEventType;
      if (eventType == EVENT_TYPE_TOUCH) {
        event=mUiTouchStream.update(event);
        if (DEBUG && event == null && d.mEvent != null) {
          Log.d(TAG,"dispatchUiEvents: dropped event " + d.mEvent);
        }
      }
      flags=d.mFlags;
      if (event == d.mEvent) {
        d.mEvent=null;
      }
      recycleDispatchEventLocked(d);
    }
    if (event != null) {
      dispatchUiEvent(event,eventType,flags);
      event.recycle();
    }
  }
}
