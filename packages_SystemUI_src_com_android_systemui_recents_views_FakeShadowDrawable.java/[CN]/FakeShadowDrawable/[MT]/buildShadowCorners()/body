{
  RectF innerBounds=new RectF(-mCornerRadius,-mCornerRadius,mCornerRadius,mCornerRadius);
  RectF outerBounds=new RectF(innerBounds);
  outerBounds.inset(-mShadowSize,-mShadowSize);
  if (mCornerShadowPath == null) {
    mCornerShadowPath=new Path();
  }
 else {
    mCornerShadowPath.reset();
  }
  mCornerShadowPath.setFillType(Path.FillType.EVEN_ODD);
  mCornerShadowPath.moveTo(-mCornerRadius,0);
  mCornerShadowPath.rLineTo(-mShadowSize,0);
  mCornerShadowPath.arcTo(outerBounds,180f,90f,false);
  mCornerShadowPath.arcTo(innerBounds,270f,-90f,false);
  mCornerShadowPath.close();
  float startRatio=mCornerRadius / (mCornerRadius + mShadowSize);
  mCornerShadowPaint.setShader(new RadialGradient(0,0,mCornerRadius + mShadowSize,new int[]{mShadowStartColor,mShadowStartColor,mShadowEndColor},new float[]{0f,startRatio,1f},Shader.TileMode.CLAMP));
  mEdgeShadowPaint.setShader(new LinearGradient(0,-mCornerRadius + mShadowSize,0,-mCornerRadius - mShadowSize,new int[]{mShadowStartColor,mShadowStartColor,mShadowEndColor},new float[]{0f,.5f,1f},Shader.TileMode.CLAMP));
}
