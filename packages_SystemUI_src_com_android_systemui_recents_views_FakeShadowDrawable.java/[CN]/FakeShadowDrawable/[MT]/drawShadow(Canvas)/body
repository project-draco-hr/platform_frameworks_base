{
  final float edgeShadowTop=-mCornerRadius - mShadowSize;
  final float inset=mCornerRadius + mInsetShadow + mRawShadowSize / 2;
  final boolean drawHorizontalEdges=mCardBounds.width() - 2 * inset > 0;
  final boolean drawVerticalEdges=mCardBounds.height() - 2 * inset > 0;
  int saved=canvas.save();
  canvas.translate(mCardBounds.left + inset,mCardBounds.top + inset);
  canvas.drawPath(mCornerShadowPath,mCornerShadowPaint);
  if (drawHorizontalEdges) {
    canvas.drawRect(0,edgeShadowTop,mCardBounds.width() - 2 * inset,-mCornerRadius,mEdgeShadowPaint);
  }
  canvas.restoreToCount(saved);
  saved=canvas.save();
  canvas.translate(mCardBounds.right - inset,mCardBounds.bottom - inset);
  canvas.rotate(180f);
  canvas.drawPath(mCornerShadowPath,mCornerShadowPaint);
  if (drawHorizontalEdges) {
    canvas.drawRect(0,edgeShadowTop,mCardBounds.width() - 2 * inset,-mCornerRadius + mShadowSize,mEdgeShadowPaint);
  }
  canvas.restoreToCount(saved);
  saved=canvas.save();
  canvas.translate(mCardBounds.left + inset,mCardBounds.bottom - inset);
  canvas.rotate(270f);
  canvas.drawPath(mCornerShadowPath,mCornerShadowPaint);
  if (drawVerticalEdges) {
    canvas.drawRect(0,edgeShadowTop,mCardBounds.height() - 2 * inset,-mCornerRadius,mEdgeShadowPaint);
  }
  canvas.restoreToCount(saved);
  saved=canvas.save();
  canvas.translate(mCardBounds.right - inset,mCardBounds.top + inset);
  canvas.rotate(90f);
  canvas.drawPath(mCornerShadowPath,mCornerShadowPaint);
  if (drawVerticalEdges) {
    canvas.drawRect(0,edgeShadowTop,mCardBounds.height() - 2 * inset,-mCornerRadius,mEdgeShadowPaint);
  }
  canvas.restoreToCount(saved);
}
