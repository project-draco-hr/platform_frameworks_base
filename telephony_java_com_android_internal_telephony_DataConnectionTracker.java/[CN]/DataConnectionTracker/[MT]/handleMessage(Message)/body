{
switch (msg.what) {
case AsyncChannel.CMD_CHANNEL_DISCONNECTED:
{
      log("DISCONNECTED_CONNECTED: msg=" + msg);
      DataConnectionAc dcac=(DataConnectionAc)msg.obj;
      mDataConnectionAsyncChannels.remove(dcac.dataConnection.getDataConnectionId());
      dcac.disconnected();
      break;
    }
case EVENT_ENABLE_NEW_APN:
  onEnableApn(msg.arg1,msg.arg2);
break;
case EVENT_TRY_SETUP_DATA:
String reason=null;
if (msg.obj instanceof String) {
reason=(String)msg.obj;
}
onTrySetupData(reason);
break;
case EVENT_ROAMING_OFF:
if (getDataOnRoamingEnabled() == false) {
resetAllRetryCounts();
}
onRoamingOff();
break;
case EVENT_ROAMING_ON:
onRoamingOn();
break;
case EVENT_RADIO_AVAILABLE:
onRadioAvailable();
break;
case EVENT_RADIO_OFF_OR_NOT_AVAILABLE:
onRadioOffOrNotAvailable();
break;
case EVENT_DATA_SETUP_COMPLETE:
mCidActive=msg.arg1;
onDataSetupComplete((AsyncResult)msg.obj);
break;
case EVENT_DISCONNECT_DONE:
log("DataConnectoinTracker.handleMessage: EVENT_DISCONNECT_DONE msg=" + msg);
onDisconnectDone(msg.arg1,(AsyncResult)msg.obj);
break;
case EVENT_VOICE_CALL_STARTED:
onVoiceCallStarted();
break;
case EVENT_VOICE_CALL_ENDED:
onVoiceCallEnded();
break;
case EVENT_CLEAN_UP_ALL_CONNECTIONS:
{
onCleanUpAllConnections((String)msg.obj);
break;
}
case EVENT_CLEAN_UP_CONNECTION:
{
boolean tearDown=(msg.arg1 == 0) ? false : true;
onCleanUpConnection(tearDown,msg.arg2,(String)msg.obj);
break;
}
case EVENT_SET_INTERNAL_DATA_ENABLE:
{
boolean enabled=(msg.arg1 == ENABLED) ? true : false;
onSetInternalDataEnabled(enabled);
break;
}
case EVENT_RESET_DONE:
{
if (DBG) log("EVENT_RESET_DONE");
onResetDone((AsyncResult)msg.obj);
break;
}
case CMD_SET_USER_DATA_ENABLE:
{
final boolean enabled=(msg.arg1 == ENABLED) ? true : false;
if (DBG) log("CMD_SET_USER_DATA_ENABLE enabled=" + enabled);
onSetUserDataEnabled(enabled);
break;
}
case CMD_SET_DEPENDENCY_MET:
{
boolean met=(msg.arg1 == ENABLED) ? true : false;
if (DBG) log("CMD_SET_DEPENDENCY_MET met=" + met);
Bundle bundle=msg.getData();
if (bundle != null) {
String apnType=(String)bundle.get(APN_TYPE_KEY);
if (apnType != null) {
onSetDependencyMet(apnType,met);
}
}
break;
}
case CMD_SET_POLICY_DATA_ENABLE:
{
final boolean enabled=(msg.arg1 == ENABLED) ? true : false;
onSetPolicyDataEnabled(enabled);
break;
}
default :
Log.e("DATA","Unidentified event msg=" + msg);
break;
}
}
