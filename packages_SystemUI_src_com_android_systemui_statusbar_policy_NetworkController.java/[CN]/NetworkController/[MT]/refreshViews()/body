{
  Context context=mContext;
  int combinedSignalIconId=0;
  int combinedActivityIconId=0;
  String combinedLabel="";
  String wifiLabel="";
  String mobileLabel="";
  int N;
  if (!mHasMobileDataFeature) {
    mDataSignalIconId=mPhoneSignalIconId=0;
    mobileLabel="";
  }
 else {
    if (mDataConnected) {
      mobileLabel=mNetworkName;
    }
 else     if (mWifiConnected) {
      if (hasService()) {
        mobileLabel=mNetworkName;
      }
 else {
        mobileLabel="";
      }
    }
 else {
      mobileLabel=context.getString(R.string.status_bar_settings_signal_meter_disconnected);
    }
    if (mDataConnected) {
      combinedSignalIconId=mDataSignalIconId;
switch (mDataActivity) {
case TelephonyManager.DATA_ACTIVITY_IN:
        mMobileActivityIconId=R.drawable.stat_sys_signal_in;
      break;
case TelephonyManager.DATA_ACTIVITY_OUT:
    mMobileActivityIconId=R.drawable.stat_sys_signal_out;
  break;
case TelephonyManager.DATA_ACTIVITY_INOUT:
mMobileActivityIconId=R.drawable.stat_sys_signal_inout;
break;
default :
mMobileActivityIconId=0;
break;
}
combinedLabel=mobileLabel;
combinedActivityIconId=mMobileActivityIconId;
combinedSignalIconId=mDataSignalIconId;
mContentDescriptionCombinedSignal=mContentDescriptionDataType;
}
}
if (mWifiConnected) {
if (mWifiSsid == null) {
wifiLabel=context.getString(R.string.status_bar_settings_signal_meter_wifi_nossid);
mWifiActivityIconId=0;
}
 else {
wifiLabel=mWifiSsid;
if (DEBUG) {
wifiLabel+="xxxxXXXXxxxxXXXX";
}
switch (mWifiActivity) {
case WifiManager.DATA_ACTIVITY_IN:
mWifiActivityIconId=R.drawable.stat_sys_wifi_in;
break;
case WifiManager.DATA_ACTIVITY_OUT:
mWifiActivityIconId=R.drawable.stat_sys_wifi_out;
break;
case WifiManager.DATA_ACTIVITY_INOUT:
mWifiActivityIconId=R.drawable.stat_sys_wifi_inout;
break;
case WifiManager.DATA_ACTIVITY_NONE:
mWifiActivityIconId=0;
break;
}
}
combinedActivityIconId=mWifiActivityIconId;
combinedLabel=wifiLabel;
combinedSignalIconId=mWifiIconId;
mContentDescriptionCombinedSignal=mContentDescriptionWifi;
}
 else {
if (mHasMobileDataFeature) {
wifiLabel="";
}
 else {
wifiLabel=context.getString(R.string.status_bar_settings_signal_meter_disconnected);
}
}
if (mBluetoothTethered) {
combinedLabel=mContext.getString(R.string.bluetooth_tethered);
combinedSignalIconId=mBluetoothTetherIconId;
mContentDescriptionCombinedSignal=mContext.getString(R.string.accessibility_bluetooth_tether);
}
if (mAirplaneMode && (mServiceState == null || (!hasService() && !mServiceState.isEmergencyOnly()))) {
mContentDescriptionPhoneSignal=mContext.getString(R.string.accessibility_airplane_mode);
mAirplaneIconId=R.drawable.stat_sys_signal_flightmode;
mPhoneSignalIconId=mDataSignalIconId=mDataTypeIconId=0;
if (mWifiConnected) {
mobileLabel="";
}
 else {
if (mHasMobileDataFeature) {
wifiLabel="";
}
 else {
wifiLabel=context.getString(R.string.status_bar_settings_signal_meter_disconnected);
combinedLabel=wifiLabel;
}
mContentDescriptionCombinedSignal=mContentDescriptionPhoneSignal;
combinedSignalIconId=mDataSignalIconId;
}
}
 else if (!mDataConnected && !mWifiConnected && !mBluetoothTethered&& !mWimaxConnected) {
combinedLabel=context.getString(R.string.status_bar_settings_signal_meter_disconnected);
combinedSignalIconId=mHasMobileDataFeature ? mDataSignalIconId : mWifiIconId;
mContentDescriptionCombinedSignal=mHasMobileDataFeature ? mContentDescriptionDataType : mContentDescriptionWifi;
mDataTypeIconId=0;
if (isCdma()) {
if (isCdmaEri()) {
mDataTypeIconId=R.drawable.stat_sys_data_connected_roam;
}
}
 else if (mPhone.isNetworkRoaming()) {
mDataTypeIconId=R.drawable.stat_sys_data_connected_roam;
}
}
if (DEBUG) {
Slog.d(TAG,"refreshViews connected={" + (mWifiConnected ? " wifi" : "") + (mDataConnected ? " data" : "")+ " } level="+ ((mSignalStrength == null) ? "??" : Integer.toString(mSignalStrength.getLevel()))+ " combinedSignalIconId=0x"+ Integer.toHexString(combinedSignalIconId)+ "/"+ getResourceName(combinedSignalIconId)+ " combinedActivityIconId=0x"+ Integer.toHexString(combinedActivityIconId)+ " mAirplaneMode="+ mAirplaneMode+ " mDataActivity="+ mDataActivity+ " mPhoneSignalIconId=0x"+ Integer.toHexString(mPhoneSignalIconId)+ " mDataDirectionIconId=0x"+ Integer.toHexString(mDataDirectionIconId)+ " mDataSignalIconId=0x"+ Integer.toHexString(mDataSignalIconId)+ " mDataTypeIconId=0x"+ Integer.toHexString(mDataTypeIconId)+ " mWifiIconId=0x"+ Integer.toHexString(mWifiIconId)+ " mBluetoothTetherIconId=0x"+ Integer.toHexString(mBluetoothTetherIconId));
}
if (mLastPhoneSignalIconId != mPhoneSignalIconId || mLastDataDirectionOverlayIconId != combinedActivityIconId || mLastWifiIconId != mWifiIconId || mLastWimaxIconId != mWimaxIconId || mLastDataTypeIconId != mDataTypeIconId) {
for (SignalCluster cluster : mSignalClusters) {
refreshSignalCluster(cluster);
}
}
if (mLastPhoneSignalIconId != mPhoneSignalIconId) {
mLastPhoneSignalIconId=mPhoneSignalIconId;
N=mPhoneSignalIconViews.size();
for (int i=0; i < N; i++) {
final ImageView v=mPhoneSignalIconViews.get(i);
if (mPhoneSignalIconId == 0) {
v.setVisibility(View.GONE);
}
 else {
v.setVisibility(View.VISIBLE);
v.setImageResource(mPhoneSignalIconId);
v.setContentDescription(mContentDescriptionPhoneSignal);
}
}
}
if (mLastDataDirectionIconId != mDataDirectionIconId) {
mLastDataDirectionIconId=mDataDirectionIconId;
N=mDataDirectionIconViews.size();
for (int i=0; i < N; i++) {
final ImageView v=mDataDirectionIconViews.get(i);
v.setImageResource(mDataDirectionIconId);
v.setContentDescription(mContentDescriptionDataType);
}
}
if (mLastWifiIconId != mWifiIconId) {
mLastWifiIconId=mWifiIconId;
N=mWifiIconViews.size();
for (int i=0; i < N; i++) {
final ImageView v=mWifiIconViews.get(i);
if (mWifiIconId == 0) {
v.setVisibility(View.GONE);
}
 else {
v.setVisibility(View.VISIBLE);
v.setImageResource(mWifiIconId);
v.setContentDescription(mContentDescriptionWifi);
}
}
}
if (mLastWimaxIconId != mWimaxIconId) {
mLastWimaxIconId=mWimaxIconId;
N=mWimaxIconViews.size();
for (int i=0; i < N; i++) {
final ImageView v=mWimaxIconViews.get(i);
if (mWimaxIconId == 0) {
v.setVisibility(View.GONE);
}
 else {
v.setVisibility(View.VISIBLE);
v.setImageResource(mWimaxIconId);
v.setContentDescription(mContentDescriptionWimax);
}
}
}
if (mLastCombinedSignalIconId != combinedSignalIconId) {
mLastCombinedSignalIconId=combinedSignalIconId;
N=mCombinedSignalIconViews.size();
for (int i=0; i < N; i++) {
final ImageView v=mCombinedSignalIconViews.get(i);
v.setImageResource(combinedSignalIconId);
v.setContentDescription(mContentDescriptionCombinedSignal);
}
}
if (mLastDataTypeIconId != mDataTypeIconId) {
mLastDataTypeIconId=mDataTypeIconId;
N=mDataTypeIconViews.size();
for (int i=0; i < N; i++) {
final ImageView v=mDataTypeIconViews.get(i);
if (mDataTypeIconId == 0) {
v.setVisibility(View.GONE);
}
 else {
v.setVisibility(View.VISIBLE);
v.setImageResource(mDataTypeIconId);
v.setContentDescription(mContentDescriptionDataType);
}
}
}
if (mLastDataDirectionOverlayIconId != combinedActivityIconId) {
if (DEBUG) {
Slog.d(TAG,"changing data overlay icon id to " + combinedActivityIconId);
}
mLastDataDirectionOverlayIconId=combinedActivityIconId;
N=mDataDirectionOverlayIconViews.size();
for (int i=0; i < N; i++) {
final ImageView v=mDataDirectionOverlayIconViews.get(i);
if (combinedActivityIconId == 0) {
v.setVisibility(View.GONE);
}
 else {
v.setVisibility(View.VISIBLE);
v.setImageResource(combinedActivityIconId);
v.setContentDescription(mContentDescriptionDataType);
}
}
}
if (!mLastCombinedLabel.equals(combinedLabel)) {
mLastCombinedLabel=combinedLabel;
N=mCombinedLabelViews.size();
for (int i=0; i < N; i++) {
TextView v=mCombinedLabelViews.get(i);
v.setText(combinedLabel);
}
}
N=mWifiLabelViews.size();
for (int i=0; i < N; i++) {
TextView v=mWifiLabelViews.get(i);
if ("".equals(wifiLabel)) {
v.setVisibility(View.GONE);
}
 else {
v.setVisibility(View.VISIBLE);
v.setText(wifiLabel);
}
}
N=mMobileLabelViews.size();
for (int i=0; i < N; i++) {
TextView v=mMobileLabelViews.get(i);
if ("".equals(mobileLabel)) {
v.setVisibility(View.GONE);
}
 else {
v.setVisibility(View.VISIBLE);
v.setText(mobileLabel);
}
}
}
