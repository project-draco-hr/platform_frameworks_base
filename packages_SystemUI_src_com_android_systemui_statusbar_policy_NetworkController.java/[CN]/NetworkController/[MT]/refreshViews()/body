{
  Context context=mContext;
  int combinedSignalIconId;
  int dataTypeIconId;
  String label;
  int N;
  if (mWifiConnected) {
    if (mWifiSsid == null) {
      label=context.getString(R.string.status_bar_settings_signal_meter_wifi_nossid);
    }
 else {
      label=mWifiSsid;
    }
    combinedSignalIconId=mWifiIconId;
    dataTypeIconId=0;
  }
 else   if (mDataConnected) {
    label=mNetworkName;
switch (mDataActivity) {
case TelephonyManager.DATA_ACTIVITY_IN:
case TelephonyManager.DATA_ACTIVITY_OUT:
case TelephonyManager.DATA_ACTIVITY_INOUT:
      combinedSignalIconId=mDataActiveSignalIconId;
    break;
default :
  combinedSignalIconId=mDataSignalIconId;
break;
}
dataTypeIconId=mDataTypeIconId;
}
 else if (mBluetoothTethered) {
label=mContext.getString(R.string.bluetooth_tethered);
combinedSignalIconId=mBluetoothTetherIconId;
dataTypeIconId=0;
}
 else {
label=context.getString(R.string.status_bar_settings_signal_meter_disconnected);
combinedSignalIconId=mDataSignalIconId;
dataTypeIconId=0;
}
if (false) {
Slog.d(TAG,"refreshViews combinedSignalIconId=0x" + Integer.toHexString(combinedSignalIconId) + "/"+ getResourceName(combinedSignalIconId)+ " mDataActivity="+ mDataActivity+ " mPhoneSignalIconId=0x"+ Integer.toHexString(mPhoneSignalIconId)+ " mDataDirectionIconId=0x"+ Integer.toHexString(mDataDirectionIconId)+ " mDataSignalIconId=0x"+ Integer.toHexString(mDataSignalIconId)+ " mDataActiveSignalIconId=0x"+ Integer.toHexString(mDataActiveSignalIconId)+ " mDataTypeIconId=0x"+ Integer.toHexString(mDataTypeIconId)+ " mWifiIconId=0x"+ Integer.toHexString(mWifiIconId)+ " mBluetoothTetherIconId=0x"+ Integer.toHexString(mBluetoothTetherIconId));
}
if (mLastPhoneSignalIconId != mPhoneSignalIconId) {
mLastPhoneSignalIconId=mPhoneSignalIconId;
N=mPhoneSignalIconViews.size();
for (int i=0; i < N; i++) {
final ImageView v=mPhoneSignalIconViews.get(i);
v.setImageResource(mPhoneSignalIconId);
}
}
if (mLastDataDirectionIconId != mDataDirectionIconId) {
mLastDataDirectionIconId=mDataDirectionIconId;
N=mDataDirectionIconViews.size();
for (int i=0; i < N; i++) {
final ImageView v=mDataDirectionIconViews.get(i);
v.setImageResource(mDataDirectionIconId);
}
}
if (mLastWifiIconId != mWifiIconId) {
mLastWifiIconId=mWifiIconId;
N=mWifiIconViews.size();
for (int i=0; i < N; i++) {
final ImageView v=mWifiIconViews.get(i);
v.setImageResource(mWifiIconId);
}
}
if (mLastCombinedSignalIconId != combinedSignalIconId) {
mLastCombinedSignalIconId=combinedSignalIconId;
N=mCombinedSignalIconViews.size();
for (int i=0; i < N; i++) {
final ImageView v=mCombinedSignalIconViews.get(i);
v.setImageResource(combinedSignalIconId);
}
}
if (mLastDataTypeIconId != dataTypeIconId) {
mLastDataTypeIconId=dataTypeIconId;
N=mDataTypeIconViews.size();
for (int i=0; i < N; i++) {
final ImageView v=mDataTypeIconViews.get(i);
if (dataTypeIconId == 0) {
v.setVisibility(View.INVISIBLE);
}
 else {
v.setVisibility(View.VISIBLE);
v.setImageResource(dataTypeIconId);
}
}
}
if (!mLastLabel.equals(label)) {
mLastLabel=label;
N=mLabelViews.size();
for (int i=0; i < N; i++) {
TextView v=mLabelViews.get(i);
v.setText(label);
}
}
}
