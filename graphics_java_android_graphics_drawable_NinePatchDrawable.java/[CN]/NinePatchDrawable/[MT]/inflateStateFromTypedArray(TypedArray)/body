{
  final Resources r=a.getResources();
  final NinePatchState ninePatchState=mNinePatchState;
  final int[] themeAttrs=a.extractThemeAttrs();
  ninePatchState.mThemeAttrs=themeAttrs;
  if (themeAttrs == null || themeAttrs[R.styleable.NinePatchDrawable_dither] == 0) {
    final boolean dither=a.getBoolean(R.styleable.NinePatchDrawable_dither,DEFAULT_DITHER);
    ninePatchState.mDither=dither;
  }
  if (themeAttrs == null || themeAttrs[R.styleable.NinePatchDrawable_src] == 0) {
    final int id=a.getResourceId(R.styleable.NinePatchDrawable_src,0);
    if (id == 0) {
      throw new XmlPullParserException(a.getPositionDescription() + ": <nine-patch> requires a valid src attribute");
    }
    final BitmapFactory.Options options=new BitmapFactory.Options();
    options.inDither=!ninePatchState.mDither;
    options.inScreenDensity=r.getDisplayMetrics().noncompatDensityDpi;
    final Rect padding=new Rect();
    final Rect opticalInsets=new Rect();
    Bitmap bitmap=null;
    try {
      final TypedValue value=new TypedValue();
      final InputStream is=r.openRawResource(id,value);
      bitmap=BitmapFactory.decodeResourceStream(r,value,is,padding,options);
      is.close();
    }
 catch (    IOException e) {
    }
    if (bitmap == null) {
      throw new XmlPullParserException(a.getPositionDescription() + ": <nine-patch> requires a valid src attribute");
    }
 else     if (bitmap.getNinePatchChunk() == null) {
      throw new XmlPullParserException(a.getPositionDescription() + ": <nine-patch> requires a valid 9-patch source image");
    }
    final NinePatch ninePatch=new NinePatch(bitmap,bitmap.getNinePatchChunk());
    ninePatchState.mNinePatch=ninePatch;
    ninePatchState.mPadding=padding;
    ninePatchState.mOpticalInsets=Insets.of(opticalInsets);
  }
  if (themeAttrs == null || themeAttrs[R.styleable.NinePatchDrawable_autoMirrored] == 0) {
    final boolean autoMirrored=a.getBoolean(R.styleable.NinePatchDrawable_autoMirrored,false);
    ninePatchState.mAutoMirrored=autoMirrored;
  }
  if (themeAttrs == null || themeAttrs[R.styleable.NinePatchDrawable_tintMode] == 0) {
    final int tintModeValue=a.getInt(R.styleable.NinePatchDrawable_tintMode,-1);
    ninePatchState.mTintMode=Drawable.parseTintMode(tintModeValue,Mode.SRC_IN);
  }
  if (themeAttrs == null || themeAttrs[R.styleable.NinePatchDrawable_tint] == 0) {
    ninePatchState.mTint=a.getColorStateList(R.styleable.NinePatchDrawable_tint);
    if (ninePatchState.mTint != null) {
      final int color=ninePatchState.mTint.getColorForState(getState(),0);
      mTintFilter=new PorterDuffColorFilter(color,ninePatchState.mTintMode);
    }
  }
  if (themeAttrs == null || themeAttrs[R.styleable.NinePatchDrawable_alpha] == 0) {
    ninePatchState.mBaseAlpha=a.getFloat(R.styleable.NinePatchDrawable_alpha,1.0f);
  }
  initializeWithState(ninePatchState,r);
  ninePatchState.mTargetDensity=mTargetDensity;
}
