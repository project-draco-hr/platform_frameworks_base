{
  if (DEBUG_LAYERS)   Slog.v(TAG_WM,"Assigning layers based on windows=" + windows,new RuntimeException("here").fillInStackTrace());
  clear();
  int curBaseLayer=0;
  int curLayer=0;
  boolean anyLayerChanged=false;
  for (int i=0, windowCount=windows.size(); i < windowCount; i++) {
    final WindowState w=windows.get(i);
    boolean layerChanged=false;
    int oldLayer=w.mLayer;
    if (w.mBaseLayer == curBaseLayer || w.mIsImWindow || (i > 0 && w.mIsWallpaper)) {
      curLayer+=WINDOW_LAYER_MULTIPLIER;
    }
 else {
      curBaseLayer=curLayer=w.mBaseLayer;
    }
    assignAnimLayer(w,curLayer);
    if (w.mLayer != oldLayer || w.mWinAnimator.mAnimLayer != oldLayer) {
      layerChanged=true;
      anyLayerChanged=true;
    }
    if (w.mAppToken != null) {
      mHighestApplicationLayer=Math.max(mHighestApplicationLayer,w.mWinAnimator.mAnimLayer);
    }
    collectSpecialWindows(w);
    if (layerChanged) {
      w.scheduleAnimationIfDimming();
    }
  }
  adjustSpecialWindows();
  if (mService.mAccessibilityController != null && anyLayerChanged && windows.get(windows.size() - 1).getDisplayId() == Display.DEFAULT_DISPLAY) {
    mService.mAccessibilityController.onWindowLayersChangedLocked();
  }
  if (DEBUG_LAYERS)   logDebugLayers(windows);
}
