{
  database.beginTransaction();
  try {
    final String mimeType=CursorHelper.formatTypeToMimeType(info.getFormat());
    int flag=0;
    if (info.getProtectionStatus() == 0) {
      flag|=DocumentsContract.Document.FLAG_SUPPORTS_DELETE | DocumentsContract.Document.FLAG_SUPPORTS_WRITE;
      if (mimeType == DocumentsContract.Document.MIME_TYPE_DIR) {
        flag|=DocumentsContract.Document.FLAG_DIR_SUPPORTS_CREATE;
      }
    }
    if (info.getThumbCompressedSize() > 0) {
      flag|=DocumentsContract.Document.FLAG_SUPPORTS_THUMBNAIL;
    }
    final ContentValues values=new ContentValues();
    values.put(COLUMN_DEVICE_ID,deviceId);
    values.put(COLUMN_STORAGE_ID,info.getStorageId());
    values.put(COLUMN_OBJECT_HANDLE,info.getObjectHandle());
    values.put(COLUMN_FULL_PATH,parentFullPath + "/" + escape(info.getName()));
    values.put(Document.COLUMN_MIME_TYPE,CursorHelper.formatTypeToMimeType(info.getFormat()));
    values.put(Document.COLUMN_DISPLAY_NAME,info.getName());
    values.putNull(Document.COLUMN_SUMMARY);
    values.put(Document.COLUMN_LAST_MODIFIED,info.getDateModified() != 0 ? info.getDateModified() : null);
    values.putNull(Document.COLUMN_ICON);
    values.put(Document.COLUMN_FLAGS,flag);
    values.put(Document.COLUMN_SIZE,info.getCompressedSize());
    if (database.insert(TABLE_MTP_DOCUMENTS,null,values) == -1) {
      throw new Exception("Failed to add document.");
    }
    database.setTransactionSuccessful();
  }
  finally {
    database.endTransaction();
  }
}
