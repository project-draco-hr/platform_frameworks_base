{
  mDatabase.beginTransaction();
  try {
    final Set<String> ids=new HashSet<>();
    for (    final Uri uri : outgoingPersistedUris) {
      String documentId=DocumentsContract.getDocumentId(uri);
      while (documentId != null) {
        if (ids.contains(documentId)) {
          break;
        }
        ids.add(documentId);
        try (final Cursor cursor=mDatabase.query(TABLE_DOCUMENTS,strings(COLUMN_PARENT_DOCUMENT_ID),SELECTION_DOCUMENT_ID,strings(documentId),null,null,null)){
          documentId=cursor.moveToNext() ? cursor.getString(0) : null;
        }
       }
    }
    deleteDocumentsAndRoots(Document.COLUMN_DOCUMENT_ID + " NOT IN " + getIdList(ids),null);
    mDatabase.setTransactionSuccessful();
  }
  finally {
    mDatabase.endTransaction();
  }
}
