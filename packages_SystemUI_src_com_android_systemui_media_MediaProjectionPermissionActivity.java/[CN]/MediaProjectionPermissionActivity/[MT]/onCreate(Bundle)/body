{
  super.onCreate(icicle);
  Intent intent=getIntent();
  mPackageName=getCallingPackage();
  IBinder b=ServiceManager.getService(MEDIA_PROJECTION_SERVICE);
  mService=IMediaProjectionManager.Stub.asInterface(b);
  if (mPackageName == null) {
    finish();
    return;
  }
  PackageManager packageManager=getPackageManager();
  ApplicationInfo aInfo;
  try {
    aInfo=packageManager.getApplicationInfo(mPackageName,0);
    mUid=aInfo.uid;
  }
 catch (  PackageManager.NameNotFoundException e) {
    Log.e(TAG,"unable to look up package name",e);
    finish();
    return;
  }
  try {
    if (mService.hasProjectionPermission(mUid,mPackageName)) {
      setResult(RESULT_OK,getMediaProjectionIntent(mUid,mPackageName,false));
      finish();
      return;
    }
  }
 catch (  RemoteException e) {
    Log.e(TAG,"Error checking projection permissions",e);
    finish();
    return;
  }
  TextPaint paint=new TextPaint();
  paint.setTextSize(42);
  String label=aInfo.loadLabel(packageManager).toString();
  final int labelLength=label.length();
  int offset=0;
  while (offset < labelLength) {
    final int codePoint=label.codePointAt(offset);
    final int type=Character.getType(codePoint);
    if (type == Character.LINE_SEPARATOR || type == Character.CONTROL || type == Character.PARAGRAPH_SEPARATOR) {
      label=label.substring(0,offset) + ELLIPSIS;
      break;
    }
    offset+=Character.charCount(codePoint);
  }
  if (label.isEmpty()) {
    label=mPackageName;
  }
  String unsanitizedAppName=TextUtils.ellipsize(label,paint,MAX_APP_NAME_SIZE_PX,TextUtils.TruncateAt.END).toString();
  String appName=BidiFormatter.getInstance().unicodeWrap(unsanitizedAppName);
  String actionText=getString(R.string.media_projection_dialog_text,appName);
  SpannableString message=new SpannableString(actionText);
  int appNameIndex=actionText.indexOf(appName);
  if (appNameIndex >= 0) {
    message.setSpan(new StyleSpan(Typeface.BOLD),appNameIndex,appNameIndex + appName.length(),0);
  }
  final AlertController.AlertParams ap=mAlertParams;
  ap.mIcon=aInfo.loadIcon(packageManager);
  ap.mMessage=message;
  ap.mPositiveButtonText=getString(R.string.media_projection_action_text);
  ap.mNegativeButtonText=getString(android.R.string.cancel);
  ap.mPositiveButtonListener=this;
  ap.mNegativeButtonListener=this;
  LayoutInflater inflater=(LayoutInflater)getSystemService(Context.LAYOUT_INFLATER_SERVICE);
  ap.mView=inflater.inflate(R.layout.remember_permission_checkbox,null);
  CheckBox rememberPermissionCheckbox=(CheckBox)ap.mView.findViewById(R.id.remember);
  rememberPermissionCheckbox.setOnCheckedChangeListener(this);
  setupAlert();
  Button btn=mAlert.getButton(DialogInterface.BUTTON_POSITIVE);
  btn.getRootView().setFilterTouchesWhenObscured(true);
}
