{
  if (DEBUG) {
    Log.i(TAG,"restoreSettings: " + contentUri);
  }
  String[] whitelist=null;
  if (contentUri.equals(Settings.Secure.CONTENT_URI)) {
    whitelist=Settings.Secure.SETTINGS_TO_BACKUP;
  }
 else   if (contentUri.equals(Settings.System.CONTENT_URI)) {
    whitelist=Settings.System.SETTINGS_TO_BACKUP;
  }
 else {
    throw new IllegalArgumentException("Unknown URI: " + contentUri);
  }
  int pos=0;
  Map<String,String> cachedEntries=new HashMap<String,String>();
  ContentValues contentValues=new ContentValues(2);
  SettingsHelper settingsHelper=mSettingsHelper;
  final int whiteListSize=whitelist.length;
  for (int i=0; i < whiteListSize; i++) {
    String key=whitelist[i];
    String value=cachedEntries.remove(key);
    if (value == null) {
      while (pos < bytes) {
        int length=readInt(settings,pos);
        pos+=INTEGER_BYTE_COUNT;
        String dataKey=length > 0 ? new String(settings,pos,length) : null;
        pos+=length;
        length=readInt(settings,pos);
        pos+=INTEGER_BYTE_COUNT;
        String dataValue=length > 0 ? new String(settings,pos,length) : null;
        pos+=length;
        if (key.equals(dataKey)) {
          value=dataValue;
          break;
        }
        cachedEntries.put(dataKey,dataValue);
      }
    }
    if (value == null) {
      continue;
    }
    if (settingsHelper.restoreValue(key,value)) {
      contentValues.clear();
      contentValues.put(Settings.NameValueTable.NAME,key);
      contentValues.put(Settings.NameValueTable.VALUE,value);
      getContentResolver().insert(contentUri,contentValues);
    }
    if (DEBUG || true) {
      Log.d(TAG,"Restored setting: " + key + "="+ value);
    }
  }
}
