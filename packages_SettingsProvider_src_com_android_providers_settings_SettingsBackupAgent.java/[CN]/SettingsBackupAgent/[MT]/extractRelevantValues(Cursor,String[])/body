{
  byte[][] values=new byte[sortedKeys.length * 2][];
  if (!sortedCursor.moveToFirst()) {
    Log.e(TAG,"Couldn't read from the cursor");
    return new byte[0];
  }
  int keyIndex=0;
  int totalSize=0;
  while (!sortedCursor.isAfterLast()) {
    String name=sortedCursor.getString(COLUMN_NAME);
    while (sortedKeys[keyIndex].compareTo(name.toString()) < 0) {
      keyIndex++;
      if (keyIndex == sortedKeys.length)       break;
    }
    if (keyIndex < sortedKeys.length && name.equals(sortedKeys[keyIndex])) {
      String value=sortedCursor.getString(COLUMN_VALUE);
      byte[] nameBytes=name.toString().getBytes();
      totalSize+=4 + nameBytes.length;
      values[keyIndex * 2]=nameBytes;
      byte[] valueBytes;
      if (TextUtils.isEmpty(value)) {
        valueBytes=null;
        totalSize+=4;
      }
 else {
        valueBytes=value.toString().getBytes();
        totalSize+=4 + valueBytes.length;
      }
      values[keyIndex * 2 + 1]=valueBytes;
      keyIndex++;
    }
    if (keyIndex == sortedKeys.length || !sortedCursor.moveToNext()) {
      break;
    }
  }
  byte[] result=new byte[totalSize];
  int pos=0;
  for (int i=0; i < sortedKeys.length * 2; i++) {
    if (values[i] != null) {
      pos=writeInt(result,pos,values[i].length);
      pos=writeBytes(result,pos,values[i]);
    }
  }
  return result;
}
