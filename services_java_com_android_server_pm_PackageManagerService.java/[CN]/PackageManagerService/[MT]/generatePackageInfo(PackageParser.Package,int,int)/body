{
  if (!sUserManager.exists(userId))   return null;
  PackageInfo pi;
  if ((flags & PackageManager.GET_UNINSTALLED_PACKAGES) != 0) {
    pi=PackageParser.generatePackageInfo(p,null,flags,0,0,null,false,0,userId);
  }
 else {
    final PackageSetting ps=(PackageSetting)p.mExtras;
    if (ps == null) {
      return null;
    }
    final GrantedPermissions gp=ps.sharedUser != null ? ps.sharedUser : ps;
    pi=PackageParser.generatePackageInfo(p,gp.gids,flags,ps.firstInstallTime,ps.lastUpdateTime,gp.grantedPermissions,ps.getStopped(userId),ps.getEnabled(userId),userId);
    pi.applicationInfo.enabledSetting=ps.getEnabled(userId);
    pi.applicationInfo.enabled=pi.applicationInfo.enabledSetting == COMPONENT_ENABLED_STATE_DEFAULT || pi.applicationInfo.enabledSetting == COMPONENT_ENABLED_STATE_ENABLED;
  }
  return pi;
}
