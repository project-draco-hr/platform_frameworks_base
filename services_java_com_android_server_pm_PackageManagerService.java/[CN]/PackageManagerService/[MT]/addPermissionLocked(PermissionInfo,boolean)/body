{
  if (info.labelRes == 0 && info.nonLocalizedLabel == null) {
    throw new SecurityException("Label must be specified in permission");
  }
  BasePermission tree=checkPermissionTreeLP(info.name);
  BasePermission bp=mSettings.mPermissions.get(info.name);
  boolean added=bp == null;
  boolean changed=true;
  int fixedLevel=PermissionInfo.fixProtectionLevel(info.protectionLevel);
  if (added) {
    bp=new BasePermission(info.name,tree.sourcePackage,BasePermission.TYPE_DYNAMIC);
  }
 else   if (bp.type != BasePermission.TYPE_DYNAMIC) {
    throw new SecurityException("Not allowed to modify non-dynamic permission " + info.name);
  }
 else {
    if (bp.protectionLevel == fixedLevel && bp.perm.owner.equals(tree.perm.owner) && bp.uid == tree.uid && comparePermissionInfos(bp.perm.info,info)) {
      changed=false;
    }
  }
  bp.protectionLevel=fixedLevel;
  info=new PermissionInfo(info);
  info.protectionLevel=fixedLevel;
  bp.perm=new PackageParser.Permission(tree.perm.owner,info);
  bp.perm.info.packageName=tree.perm.info.packageName;
  bp.uid=tree.uid;
  if (added) {
    mSettings.mPermissions.put(info.name,bp);
  }
  if (changed) {
    if (!async) {
      mSettings.writeLPr();
    }
 else {
      scheduleWriteSettingsLocked();
    }
  }
  return added;
}
