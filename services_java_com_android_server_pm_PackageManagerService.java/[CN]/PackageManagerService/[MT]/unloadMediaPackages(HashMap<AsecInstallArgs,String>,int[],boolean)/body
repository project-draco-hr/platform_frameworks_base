{
  if (DEBUG_SD_INSTALL)   Log.i(TAG,"unloading media packages");
  ArrayList<String> pkgList=new ArrayList<String>();
  ArrayList<AsecInstallArgs> failedList=new ArrayList<AsecInstallArgs>();
  final Set<AsecInstallArgs> keys=processCids.keySet();
  for (  AsecInstallArgs args : keys) {
    String pkgName=args.getPackageName();
    if (DEBUG_SD_INSTALL)     Log.i(TAG,"Trying to unload pkg : " + pkgName);
    PackageRemovedInfo outInfo=new PackageRemovedInfo();
synchronized (mInstallLock) {
      boolean res=deletePackageLI(pkgName,null,false,PackageManager.DELETE_KEEP_DATA,outInfo,false);
      if (res) {
        pkgList.add(pkgName);
      }
 else {
        Slog.e(TAG,"Failed to delete pkg from sdcard : " + pkgName);
        failedList.add(args);
      }
    }
  }
synchronized (mPackages) {
    mSettings.writeLPr();
  }
  if (pkgList.size() > 0) {
    sendResourcesChangedBroadcast(false,pkgList,uidArr,new IIntentReceiver.Stub(){
      public void performReceive(      Intent intent,      int resultCode,      String data,      Bundle extras,      boolean ordered,      boolean sticky) throws RemoteException {
        Message msg=mHandler.obtainMessage(UPDATED_MEDIA_STATUS,reportStatus ? 1 : 0,1,keys);
        mHandler.sendMessage(msg);
      }
    }
);
  }
 else {
    Message msg=mHandler.obtainMessage(UPDATED_MEDIA_STATUS,reportStatus ? 1 : 0,-1,keys);
    mHandler.sendMessage(msg);
  }
}
