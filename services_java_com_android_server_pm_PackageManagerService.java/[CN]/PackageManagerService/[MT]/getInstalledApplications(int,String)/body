{
  final ParceledListSlice<ApplicationInfo> list=new ParceledListSlice<ApplicationInfo>();
  final boolean listUninstalled=(flags & PackageManager.GET_UNINSTALLED_PACKAGES) != 0;
  final String[] keys;
synchronized (mPackages) {
    if (listUninstalled) {
      keys=mSettings.mPackages.keySet().toArray(new String[mSettings.mPackages.size()]);
    }
 else {
      keys=mPackages.keySet().toArray(new String[mPackages.size()]);
    }
    Arrays.sort(keys);
    int i=getContinuationPoint(keys,lastRead);
    final int N=keys.length;
    while (i < N) {
      final String packageName=keys[i++];
      ApplicationInfo ai=null;
      if (listUninstalled) {
        final PackageSetting ps=mSettings.mPackages.get(packageName);
        if (ps != null) {
          ai=generateApplicationInfoFromSettingsLPw(ps.name,flags);
        }
      }
 else {
        final PackageParser.Package p=mPackages.get(packageName);
        if (p != null) {
          ai=PackageParser.generateApplicationInfo(p,flags);
        }
      }
      if (ai != null && !list.append(ai)) {
        break;
      }
    }
    if (i == N) {
      list.setLastSlice(true);
    }
  }
  return list;
}
