{
  PackageSetting disabledPs=null;
synchronized (mPackages) {
    disabledPs=mSettings.getDisabledSystemPkgLPr(newPs.name);
  }
  if (disabledPs == null) {
    Slog.w(TAG,"Attempt to delete unknown system package " + newPs.name);
    return false;
  }
 else {
    Log.i(TAG,"Deleting system pkg from data partition");
  }
  outInfo.isRemovedPackageSystemUpdate=true;
  if (disabledPs.versionCode < newPs.versionCode) {
    flags&=~PackageManager.DELETE_KEEP_DATA;
  }
 else {
    flags|=PackageManager.DELETE_KEEP_DATA;
  }
  boolean ret=deleteInstalledPackageLI(newPs,true,flags,outInfo,writeSettings);
  if (!ret) {
    return false;
  }
synchronized (mPackages) {
    mSettings.enableSystemPackageLPw(newPs.name);
    NativeLibraryHelper.removeNativeBinariesLI(newPs.nativeLibraryPathString);
  }
  PackageParser.Package newPkg=scanPackageLI(disabledPs.codePath,PackageParser.PARSE_MUST_BE_APK | PackageParser.PARSE_IS_SYSTEM,SCAN_MONITOR | SCAN_NO_PATHS,0,null);
  if (newPkg == null) {
    Slog.w(TAG,"Failed to restore system package:" + newPs.name + " with error:"+ mLastScanError);
    return false;
  }
synchronized (mPackages) {
    updatePermissionsLPw(newPkg.packageName,newPkg,UPDATE_PERMISSIONS_ALL | UPDATE_PERMISSIONS_REPLACE_PKG);
    if (writeSettings) {
      mSettings.writeLPr();
    }
  }
  return true;
}
