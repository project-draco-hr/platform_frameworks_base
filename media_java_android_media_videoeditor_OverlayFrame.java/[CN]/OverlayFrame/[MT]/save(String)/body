{
  if (mFilename != null) {
    return mFilename;
  }
  mBitmapFileName=path + "/" + "Overlay"+ getId()+ ".png";
  if (!(new File(mBitmapFileName).exists())) {
    final FileOutputStream out=new FileOutputStream(mBitmapFileName);
    mBitmap.compress(CompressFormat.PNG,100,out);
    out.flush();
    out.close();
  }
  mOFWidth=mBitmap.getWidth();
  mOFHeight=mBitmap.getHeight();
  mFilename=path + "/" + "Overlay"+ getId()+ ".rgb";
  if (!(new File(mFilename).exists())) {
    final FileOutputStream fl=new FileOutputStream(mFilename);
    final DataOutputStream dos=new DataOutputStream(fl);
    final int[] framingBuffer=new int[mOFWidth];
    ByteBuffer byteBuffer=ByteBuffer.allocate(framingBuffer.length * 4);
    IntBuffer intBuffer;
    byte[] array=byteBuffer.array();
    int tmp=0;
    while (tmp < mOFHeight) {
      mBitmap.getPixels(framingBuffer,0,mOFWidth,0,tmp,mOFWidth,1);
      intBuffer=byteBuffer.asIntBuffer();
      intBuffer.put(framingBuffer,0,mOFWidth);
      dos.write(array);
      tmp+=1;
    }
    fl.flush();
    fl.close();
  }
  return mFilename;
}
