{
  Log.d(TAG,"Tethering " + iface);
  if (!mAvailableIfaces.contains(iface)) {
    Log.e(TAG,"Tried to Tether an unavailable iface :" + iface + ", ignoring");
    return false;
  }
  if (mActiveIfaces.contains(iface)) {
    Log.e(TAG,"Tried to Tether an already Tethered iface :" + iface + ", ignoring");
    return false;
  }
  IBinder b=ServiceManager.getService(Context.NETWORKMANAGEMENT_SERVICE);
  INetworkManagementService service=INetworkManagementService.Stub.asInterface(b);
  if (mActiveIfaces.size() == 0) {
    try {
      service.setIpForwardingEnabled(true);
    }
 catch (    Exception e) {
      Log.e(TAG,"Error in setIpForwardingEnabled(true) :" + e);
      return false;
    }
    try {
      service.startTethering("169.254.2.1","169.254.2.64");
    }
 catch (    Exception e) {
      Log.e(TAG,"Error in startTethering :" + e);
      try {
        service.setIpForwardingEnabled(false);
      }
 catch (      Exception ee) {
      }
      return false;
    }
    try {
      String[] dns=new String[2];
      dns[0]=new String("8.8.8.8");
      dns[1]=new String("4.2.2.2");
      service.setDnsForwarders(dns);
    }
 catch (    Exception e) {
      Log.e(TAG,"Error in setDnsForwarders :" + e);
      try {
        service.stopTethering();
      }
 catch (      Exception ee) {
      }
      try {
        service.setIpForwardingEnabled(false);
      }
 catch (      Exception ee) {
      }
    }
  }
  try {
    service.tetherInterface(iface);
  }
 catch (  Exception e) {
    Log.e(TAG,"Error in tetherInterface :" + e);
    if (mActiveIfaces.size() == 0) {
      try {
        service.stopTethering();
      }
 catch (      Exception ee) {
      }
      try {
        service.setIpForwardingEnabled(false);
      }
 catch (      Exception ee) {
      }
    }
    return false;
  }
  try {
    service.enableNat(iface,"rmnet0");
  }
 catch (  Exception e) {
    Log.e(TAG,"Error in enableNat :" + e);
    try {
      service.untetherInterface(iface);
    }
 catch (    Exception ee) {
    }
    if (mActiveIfaces.size() == 0) {
      try {
        service.stopTethering();
      }
 catch (      Exception ee) {
      }
      try {
        service.setIpForwardingEnabled(false);
      }
 catch (      Exception ee) {
      }
    }
    return false;
  }
  mAvailableIfaces.remove(iface);
  mActiveIfaces.add(iface);
  Log.d(TAG,"Tethered " + iface);
  sendTetherStateChangedBroadcast();
  return true;
}
