{
  Log.d(TAG,"Tethering starting");
  mContext=context;
  IBinder b=ServiceManager.getService(Context.NETWORKMANAGEMENT_SERVICE);
  INetworkManagementService service=INetworkManagementService.Stub.asInterface(b);
  try {
    service.registerObserver(this);
  }
 catch (  RemoteException e) {
    Log.e(TAG,"Error registering observer :" + e);
  }
  mIfaces=new HashMap<String,TetherInterfaceSM>();
  mActiveTtys=new ArrayList<String>();
  mTetherMasterSM=new TetherMasterSM("TetherMaster");
  mTetherMasterSM.start();
  IntentFilter filter=new IntentFilter();
  filter.addAction(Intent.ACTION_UMS_DISCONNECTED);
  filter.addAction(Intent.ACTION_UMS_CONNECTED);
  filter.addAction(ConnectivityManager.CONNECTIVITY_ACTION);
  mStateReceiver=new StateReceiver();
  mContext.registerReceiver(mStateReceiver,filter);
  mDhcpRange=context.getResources().getStringArray(com.android.internal.R.array.config_tether_dhcp_range);
  if (mDhcpRange.length == 0) {
    mDhcpRange=new String[2];
    mDhcpRange[0]=new String("169.254.2.2");
    mDhcpRange[1]=new String("169.254.2.64");
  }
 else   if (mDhcpRange.length == 1) {
    String[] tmp=new String[2];
    tmp[0]=mDhcpRange[0];
    tmp[1]=new String("");
    mDhcpRange=tmp;
  }
  mTetherableUsbRegexs=context.getResources().getStringArray(com.android.internal.R.array.config_tether_usb_regexs);
  mTetherableWifiRegexs=context.getResources().getStringArray(com.android.internal.R.array.config_tether_wifi_regexs);
  mDnsServers=new String[2];
  mDnsServers[0]="8.8.8.8";
  mDnsServers[1]="4.2.2.2";
  mUpstreamIfaceName="rmnet0";
}
