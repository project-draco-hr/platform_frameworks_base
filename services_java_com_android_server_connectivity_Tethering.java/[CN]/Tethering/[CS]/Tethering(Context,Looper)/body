{
  mContext=context;
  mLooper=looper;
  IBinder b=ServiceManager.getService(Context.NETWORKMANAGEMENT_SERVICE);
  INetworkManagementService service=INetworkManagementService.Stub.asInterface(b);
  try {
    service.registerObserver(this);
  }
 catch (  RemoteException e) {
    Log.e(TAG,"Error registering observer :" + e);
  }
  mIfaces=new HashMap<String,TetherInterfaceSM>();
  mThread=new HandlerThread("Tethering");
  mThread.start();
  mLooper=mThread.getLooper();
  mTetherMasterSM=new TetherMasterSM("TetherMaster",mLooper);
  mTetherMasterSM.start();
  mStateReceiver=new StateReceiver();
  IntentFilter filter=new IntentFilter();
  filter.addAction(Usb.ACTION_USB_STATE);
  filter.addAction(ConnectivityManager.CONNECTIVITY_ACTION);
  filter.addAction(Intent.ACTION_BOOT_COMPLETED);
  mContext.registerReceiver(mStateReceiver,filter);
  filter=new IntentFilter();
  filter.addAction(Intent.ACTION_MEDIA_SHARED);
  filter.addAction(Intent.ACTION_MEDIA_UNSHARED);
  filter.addDataScheme("file");
  mContext.registerReceiver(mStateReceiver,filter);
  mUsbMassStorageOff=!Environment.MEDIA_SHARED.equals(Environment.getExternalStorageState());
  mDhcpRange=context.getResources().getStringArray(com.android.internal.R.array.config_tether_dhcp_range);
  if ((mDhcpRange.length == 0) || (mDhcpRange.length % 2 == 1)) {
    mDhcpRange=new String[14];
    mDhcpRange[0]=DHCP_DEFAULT_RANGE1_START;
    mDhcpRange[1]=DHCP_DEFAULT_RANGE1_STOP;
    mDhcpRange[2]=DHCP_DEFAULT_RANGE2_START;
    mDhcpRange[3]=DHCP_DEFAULT_RANGE2_STOP;
    mDhcpRange[4]=DHCP_DEFAULT_RANGE3_START;
    mDhcpRange[5]=DHCP_DEFAULT_RANGE3_STOP;
    mDhcpRange[6]=DHCP_DEFAULT_RANGE4_START;
    mDhcpRange[7]=DHCP_DEFAULT_RANGE4_STOP;
    mDhcpRange[8]=DHCP_DEFAULT_RANGE5_START;
    mDhcpRange[9]=DHCP_DEFAULT_RANGE5_STOP;
    mDhcpRange[10]=DHCP_DEFAULT_RANGE6_START;
    mDhcpRange[11]=DHCP_DEFAULT_RANGE6_STOP;
    mDhcpRange[12]=DHCP_DEFAULT_RANGE7_START;
    mDhcpRange[13]=DHCP_DEFAULT_RANGE7_STOP;
  }
  mDunRequired=false;
  mTetherableUsbRegexs=context.getResources().getStringArray(com.android.internal.R.array.config_tether_usb_regexs);
  mTetherableWifiRegexs=context.getResources().getStringArray(com.android.internal.R.array.config_tether_wifi_regexs);
  mTetherableBluetoothRegexs=context.getResources().getStringArray(com.android.internal.R.array.config_tether_bluetooth_regexs);
  mUpstreamIfaceRegexs=context.getResources().getStringArray(com.android.internal.R.array.config_tether_upstream_regexs);
  mDnsServers=new String[2];
  mDnsServers[0]=DNS_DEFAULT_SERVER1;
  mDnsServers[1]=DNS_DEFAULT_SERVER2;
}
