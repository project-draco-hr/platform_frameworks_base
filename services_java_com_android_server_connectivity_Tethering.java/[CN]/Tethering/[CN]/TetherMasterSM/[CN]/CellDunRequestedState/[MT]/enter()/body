{
  ++mSequenceNumber;
  IBinder b=ServiceManager.getService(Context.CONNECTIVITY_SERVICE);
  IConnectivityManager service=IConnectivityManager.Stub.asInterface(b);
  int result;
  try {
    result=service.startUsingNetworkFeature(ConnectivityManager.TYPE_MOBILE,Phone.FEATURE_ENABLE_DUN,new Binder());
  }
 catch (  Exception e) {
    result=Phone.APN_REQUEST_FAILED;
  }
switch (result) {
case Phone.APN_ALREADY_ACTIVE:
    Log.d(TAG,"Dun already active");
  sendMessage(obtainMessage(CMD_CELL_DUN_ENABLED));
break;
case Phone.APN_REQUEST_FAILED:
case Phone.APN_TYPE_NOT_AVAILABLE:
Log.d(TAG,"Error bringing up Dun connection");
Message m=obtainMessage(CMD_CELL_DUN_TIMEOUT);
m.arg1=mSequenceNumber;
sendMessage(m);
break;
case Phone.APN_REQUEST_STARTED:
Log.d(TAG,"Started bringing up Dun connection");
m=obtainMessage(CMD_CELL_DUN_TIMEOUT);
m.arg1=mSequenceNumber;
sendMessageDelayed(m,CELL_DUN_TIMEOUT_MS);
break;
default :
Log.e(TAG,"Unknown return value from startUsingNetworkFeature " + result);
}
}
