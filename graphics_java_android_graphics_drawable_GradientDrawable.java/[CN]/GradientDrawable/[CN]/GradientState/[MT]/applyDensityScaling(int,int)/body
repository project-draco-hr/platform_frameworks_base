{
  if (mInnerRadius > 0) {
    mInnerRadius=Drawable.scaleFromDensity(mInnerRadius,sourceDensity,targetDensity,true);
  }
  if (mThickness > 0) {
    mThickness=Drawable.scaleFromDensity(mThickness,sourceDensity,targetDensity,true);
  }
  if (mOpticalInsets != Insets.NONE) {
    final int left=Drawable.scaleFromDensity(mOpticalInsets.left,sourceDensity,targetDensity,true);
    final int top=Drawable.scaleFromDensity(mOpticalInsets.top,sourceDensity,targetDensity,true);
    final int right=Drawable.scaleFromDensity(mOpticalInsets.right,sourceDensity,targetDensity,true);
    final int bottom=Drawable.scaleFromDensity(mOpticalInsets.bottom,sourceDensity,targetDensity,true);
    mOpticalInsets=Insets.of(left,top,right,bottom);
  }
  if (mPadding != null) {
    mPadding.left=Drawable.scaleFromDensity(mPadding.left,sourceDensity,targetDensity,false);
    mPadding.top=Drawable.scaleFromDensity(mPadding.top,sourceDensity,targetDensity,false);
    mPadding.right=Drawable.scaleFromDensity(mPadding.right,sourceDensity,targetDensity,false);
    mPadding.bottom=Drawable.scaleFromDensity(mPadding.bottom,sourceDensity,targetDensity,false);
  }
  if (mRadius > 0) {
    mRadius=Drawable.scaleFromDensity(mRadius,sourceDensity,targetDensity);
  }
  if (mRadiusArray != null) {
    mRadiusArray[0]=Drawable.scaleFromDensity((int)mRadiusArray[0],sourceDensity,targetDensity,true);
    mRadiusArray[1]=Drawable.scaleFromDensity((int)mRadiusArray[1],sourceDensity,targetDensity,true);
    mRadiusArray[2]=Drawable.scaleFromDensity((int)mRadiusArray[2],sourceDensity,targetDensity,true);
    mRadiusArray[3]=Drawable.scaleFromDensity((int)mRadiusArray[3],sourceDensity,targetDensity,true);
  }
  if (mStrokeWidth > 0) {
    mStrokeWidth=Drawable.scaleFromDensity(mStrokeWidth,sourceDensity,targetDensity,true);
  }
  if (mStrokeDashWidth > 0) {
    mStrokeDashWidth=Drawable.scaleFromDensity(mStrokeDashGap,sourceDensity,targetDensity);
  }
  if (mStrokeDashGap > 0) {
    mStrokeDashGap=Drawable.scaleFromDensity(mStrokeDashGap,sourceDensity,targetDensity);
  }
  if (mGradientRadiusType == RADIUS_TYPE_PIXELS) {
    mGradientRadius=Drawable.scaleFromDensity(mGradientRadius,sourceDensity,targetDensity);
  }
  if (mWidth > 0) {
    mWidth=Drawable.scaleFromDensity(mWidth,sourceDensity,targetDensity,true);
  }
  if (mHeight > 0) {
    mHeight=Drawable.scaleFromDensity(mHeight,sourceDensity,targetDensity,true);
  }
}
