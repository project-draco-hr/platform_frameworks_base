{
  float sweep=st.mUseLevelForShape ? (360.0f * getLevel() / 10000.0f) : 360f;
  RectF bounds=new RectF(mRect);
  float x=bounds.width() / 2.0f;
  float y=bounds.height() / 2.0f;
  float thickness=bounds.width() / st.mThickness;
  float radius=bounds.width() / st.mInnerRadius;
  RectF innerBounds=new RectF(bounds);
  innerBounds.inset(x - radius,y - radius);
  bounds=new RectF(innerBounds);
  bounds.inset(-thickness,-thickness);
  Path path=new Path();
  if (sweep < 360 && sweep > -360) {
    path.setFillType(Path.FillType.EVEN_ODD);
    path.moveTo(x + radius,y);
    path.lineTo(x + radius + thickness,y);
    path.arcTo(bounds,0.0f,sweep,false);
    path.arcTo(innerBounds,sweep,-sweep,false);
    path.close();
  }
 else {
    path.addOval(bounds,Path.Direction.CW);
    path.addOval(innerBounds,Path.Direction.CCW);
  }
  return path;
}
