{
  final GradientState st=mGradientState;
  final Rect bounds=getBounds();
switch (st.mShape) {
case RECTANGLE:
    if (st.mRadiusArray != null) {
      buildPathIfDirty();
      outline.setConvexPath(mPath);
      return true;
    }
  float rad=0;
if (st.mRadius > 0.0f) {
  rad=Math.min(st.mRadius,Math.min(bounds.width(),bounds.height()) * 0.5f);
}
outline.setRoundRect(bounds.left,bounds.top,bounds.right,bounds.bottom,rad);
return true;
case LINE:
{
float halfStrokeWidth=mStrokePaint.getStrokeWidth() * 0.5f;
float centerY=bounds.centerY();
int top=(int)Math.floor(centerY - halfStrokeWidth);
int bottom=(int)Math.ceil(centerY + halfStrokeWidth);
outline.setRect(bounds.left,top,bounds.right,bottom);
return true;
}
default :
return false;
}
}
