{
  final GradientState st=mGradientState;
  if (st.mAttrSize != null) {
    final TypedArray a=t.resolveAttributes(st.mAttrSize,R.styleable.GradientDrawableSize);
    updateGradientDrawableSize(a);
    a.recycle();
  }
  if (st.mAttrGradient != null) {
    final TypedArray a=t.resolveAttributes(st.mAttrGradient,R.styleable.GradientDrawableGradient);
    try {
      updateGradientDrawableGradient(t.getResources(),a);
    }
 catch (    XmlPullParserException e) {
      throw new RuntimeException(e);
    }
 finally {
      a.recycle();
    }
  }
  if (st.mAttrSolid != null) {
    final TypedArray a=t.resolveAttributes(st.mAttrSolid,R.styleable.GradientDrawableSolid);
    updateGradientDrawableSolid(a);
    a.recycle();
  }
  if (st.mAttrStroke != null) {
    final TypedArray a=t.resolveAttributes(st.mAttrStroke,R.styleable.GradientDrawableStroke);
    updateGradientDrawableStroke(a);
    a.recycle();
  }
  if (st.mAttrCorners != null) {
    final TypedArray a=t.resolveAttributes(st.mAttrCorners,R.styleable.DrawableCorners);
    updateDrawableCorners(a);
    a.recycle();
  }
  if (st.mAttrPadding != null) {
    final TypedArray a=t.resolveAttributes(st.mAttrPadding,R.styleable.GradientDrawablePadding);
    updateGradientDrawablePadding(a);
    a.recycle();
  }
}
