{
  if (!ensureValidRect()) {
    return;
  }
  final int prevFillAlpha=mFillPaint.getAlpha();
  final int prevStrokeAlpha=mStrokePaint != null ? mStrokePaint.getAlpha() : 0;
  final int currFillAlpha=modulateAlpha(prevFillAlpha);
  final int currStrokeAlpha=modulateAlpha(prevStrokeAlpha);
  final boolean haveStroke=currStrokeAlpha > 0 && mStrokePaint.getStrokeWidth() > 0;
  final boolean haveFill=currFillAlpha > 0;
  final GradientState st=mGradientState;
  final boolean useLayer=haveStroke && haveFill && st.mShape != LINE && currStrokeAlpha < 255;
  if (useLayer) {
    if (mLayerPaint == null) {
      mLayerPaint=new Paint();
    }
    mLayerPaint.setDither(mDither);
    mLayerPaint.setAlpha(mAlpha);
    mLayerPaint.setColorFilter(mColorFilter);
    float rad=mStrokePaint.getStrokeWidth();
    canvas.saveLayer(mRect.left - rad,mRect.top - rad,mRect.right + rad,mRect.bottom + rad,mLayerPaint,Canvas.HAS_ALPHA_LAYER_SAVE_FLAG);
    mFillPaint.setColorFilter(null);
    mStrokePaint.setColorFilter(null);
  }
 else {
    mFillPaint.setAlpha(currFillAlpha);
    mFillPaint.setDither(mDither);
    mFillPaint.setColorFilter(mColorFilter);
    if (haveStroke) {
      mStrokePaint.setAlpha(currStrokeAlpha);
      mStrokePaint.setDither(mDither);
      mStrokePaint.setColorFilter(mColorFilter);
    }
  }
switch (st.mShape) {
case RECTANGLE:
    if (st.mRadiusArray != null) {
      mPath.reset();
      mPath.addRoundRect(mRect,st.mRadiusArray,Path.Direction.CW);
      canvas.drawPath(mPath,mFillPaint);
      if (haveStroke) {
        canvas.drawPath(mPath,mStrokePaint);
      }
    }
 else {
      float rad=st.mRadius;
      canvas.drawRoundRect(mRect,rad,rad,mFillPaint);
      if (haveStroke) {
        canvas.drawRoundRect(mRect,rad,rad,mStrokePaint);
      }
    }
  break;
case OVAL:
canvas.drawOval(mRect,mFillPaint);
if (haveStroke) {
canvas.drawOval(mRect,mStrokePaint);
}
break;
case LINE:
{
RectF r=mRect;
float y=r.centerY();
canvas.drawLine(r.left,y,r.right,y,mStrokePaint);
break;
}
case RING:
Path ring=buildRing(st);
canvas.drawPath(ring,mFillPaint);
if (haveStroke) {
canvas.drawPath(ring,mStrokePaint);
}
break;
}
if (useLayer) {
canvas.restore();
}
 else {
mFillPaint.setAlpha(prevFillAlpha);
if (haveStroke) {
mStrokePaint.setAlpha(prevStrokeAlpha);
}
}
}
