{
  super.applyTheme(t);
  final GradientState state=mGradientState;
  if (state == null) {
    return;
  }
  state.setDensity(Drawable.resolveDensity(t.getResources(),0));
  if (state.mThemeAttrs != null) {
    final TypedArray a=t.resolveAttributes(state.mThemeAttrs,R.styleable.GradientDrawable);
    updateStateFromTypedArray(a);
    a.recycle();
  }
  if (state.mTint != null && state.mTint.canApplyTheme()) {
    state.mTint=state.mTint.obtainForTheme(t);
  }
  if (state.mSolidColors != null && state.mSolidColors.canApplyTheme()) {
    state.mSolidColors=state.mSolidColors.obtainForTheme(t);
  }
  if (state.mStrokeColors != null && state.mStrokeColors.canApplyTheme()) {
    state.mStrokeColors=state.mStrokeColors.obtainForTheme(t);
  }
  applyThemeChildElements(t);
  updateLocalState(t.getResources());
}
