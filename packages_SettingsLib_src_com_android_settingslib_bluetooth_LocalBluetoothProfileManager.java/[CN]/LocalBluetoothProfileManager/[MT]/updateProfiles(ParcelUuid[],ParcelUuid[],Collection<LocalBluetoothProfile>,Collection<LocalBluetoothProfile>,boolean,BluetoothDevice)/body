{
  removedProfiles.clear();
  removedProfiles.addAll(profiles);
  if (DEBUG) {
    Log.d(TAG,"Current Profiles" + profiles.toString());
  }
  profiles.clear();
  if (uuids == null) {
    return;
  }
  if (mHeadsetProfile != null) {
    if ((BluetoothUuid.isUuidPresent(localUuids,BluetoothUuid.HSP_AG) && BluetoothUuid.isUuidPresent(uuids,BluetoothUuid.HSP)) || (BluetoothUuid.isUuidPresent(localUuids,BluetoothUuid.Handsfree_AG) && BluetoothUuid.isUuidPresent(uuids,BluetoothUuid.Handsfree))) {
      profiles.add(mHeadsetProfile);
      removedProfiles.remove(mHeadsetProfile);
    }
  }
  if ((mHfpClientProfile != null) && BluetoothUuid.isUuidPresent(uuids,BluetoothUuid.Handsfree_AG) && BluetoothUuid.isUuidPresent(localUuids,BluetoothUuid.Handsfree)) {
    profiles.add(mHfpClientProfile);
    removedProfiles.remove(mHfpClientProfile);
  }
  if (BluetoothUuid.containsAnyUuid(uuids,A2dpProfile.SINK_UUIDS) && mA2dpProfile != null) {
    profiles.add(mA2dpProfile);
    removedProfiles.remove(mA2dpProfile);
  }
  if (BluetoothUuid.containsAnyUuid(uuids,A2dpSinkProfile.SRC_UUIDS) && mA2dpSinkProfile != null) {
    profiles.add(mA2dpSinkProfile);
    removedProfiles.remove(mA2dpSinkProfile);
  }
  if (BluetoothUuid.isUuidPresent(uuids,BluetoothUuid.ObexObjectPush) && mOppProfile != null) {
    profiles.add(mOppProfile);
    removedProfiles.remove(mOppProfile);
  }
  if ((BluetoothUuid.isUuidPresent(uuids,BluetoothUuid.Hid) || BluetoothUuid.isUuidPresent(uuids,BluetoothUuid.Hogp)) && mHidProfile != null) {
    profiles.add(mHidProfile);
    removedProfiles.remove(mHidProfile);
  }
  if (isPanNapConnected)   if (DEBUG)   Log.d(TAG,"Valid PAN-NAP connection exists.");
  if ((BluetoothUuid.isUuidPresent(uuids,BluetoothUuid.NAP) && mPanProfile != null) || isPanNapConnected) {
    profiles.add(mPanProfile);
    removedProfiles.remove(mPanProfile);
  }
  if ((mMapProfile != null) && (mMapProfile.getConnectionStatus(device) == BluetoothProfile.STATE_CONNECTED)) {
    profiles.add(mMapProfile);
    removedProfiles.remove(mMapProfile);
    mMapProfile.setPreferred(device,true);
  }
  if (mMapClientProfile != null) {
    profiles.add(mMapClientProfile);
    removedProfiles.remove(mMapClientProfile);
  }
  if (mUsePbapPce) {
    profiles.add(mPbapClientProfile);
    removedProfiles.remove(mPbapClientProfile);
    profiles.remove(mPbapProfile);
    removedProfiles.add(mPbapProfile);
  }
  if (DEBUG) {
    Log.d(TAG,"New Profiles" + profiles.toString());
  }
}
