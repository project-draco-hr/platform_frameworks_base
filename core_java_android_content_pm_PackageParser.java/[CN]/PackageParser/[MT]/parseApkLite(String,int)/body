{
  AssetManager assmgr=null;
  final XmlResourceParser parser;
  final Resources res;
  try {
    assmgr=new AssetManager();
    assmgr.setConfiguration(0,0,null,0,0,0,0,0,0,0,0,0,0,0,0,0,Build.VERSION.RESOURCES_SDK_INT);
    int cookie=assmgr.addAssetPath(packageFilePath);
    if (cookie == 0) {
      return null;
    }
    final DisplayMetrics metrics=new DisplayMetrics();
    metrics.setToDefaults();
    res=new Resources(assmgr,metrics,null);
    parser=assmgr.openXmlResourceParser(cookie,ANDROID_MANIFEST_FILENAME);
  }
 catch (  Exception e) {
    if (assmgr != null)     assmgr.close();
    Slog.w(TAG,"Unable to read AndroidManifest.xml of " + packageFilePath,e);
    return null;
  }
  final Signature[] signatures;
  if ((flags & PARSE_GET_SIGNATURES) != 0) {
    signatures=collectCertificates(packageFilePath);
  }
 else {
    signatures=null;
  }
  final AttributeSet attrs=parser;
  final String errors[]=new String[1];
  ApkLite packageLite=null;
  try {
    packageLite=parseApkLite(res,parser,attrs,flags,signatures,errors);
  }
 catch (  PackageParserException e) {
    Slog.w(TAG,packageFilePath,e);
  }
catch (  IOException e) {
    Slog.w(TAG,packageFilePath,e);
  }
catch (  XmlPullParserException e) {
    Slog.w(TAG,packageFilePath,e);
  }
 finally {
    if (parser != null)     parser.close();
    if (assmgr != null)     assmgr.close();
  }
  if (packageLite == null) {
    Slog.e(TAG,"parsePackageLite error: " + errors[0]);
    return null;
  }
  return packageLite;
}
