{
  final String apkPath=apkFile.getAbsolutePath();
  mParseError=PackageManager.INSTALL_SUCCEEDED;
  mArchiveSourcePath=apkFile.getAbsolutePath();
  if ((flags & PARSE_MUST_BE_APK) != 0 && !isApkFile(apkFile)) {
    throw new PackageParserException(INSTALL_PARSE_FAILED_NOT_APK,"Invalid package file: " + apkPath);
  }
  if (DEBUG_JAR)   Slog.d(TAG,"Scanning base APK: " + apkPath);
  AssetManager assets=null;
  Resources res=null;
  XmlResourceParser parser=null;
  try {
    assets=new AssetManager();
    int cookie=assets.addAssetPath(apkPath);
    if (cookie == 0) {
      throw new PackageParserException(INSTALL_PARSE_FAILED_BAD_MANIFEST,"Failed adding asset path: " + apkPath);
    }
    res=new Resources(assets,mMetrics,null);
    assets.setConfiguration(0,0,null,0,0,0,0,0,0,0,0,0,0,0,0,0,Build.VERSION.RESOURCES_SDK_INT);
    parser=assets.openXmlResourceParser(cookie,ANDROID_MANIFEST_FILENAME);
    final String[] outError=new String[1];
    final Package pkg=parseBaseApk(res,parser,flags,outError);
    if (pkg == null) {
      throw new PackageParserException(mParseError,apkPath + " (at " + parser.getPositionDescription()+ "): "+ outError[0]);
    }
    pkg.baseCodePath=apkPath;
    pkg.mSignatures=null;
    pkg.usesOptionalLibraries=ArrayUtils.add(pkg.usesOptionalLibraries,"com.android.webview");
    return pkg;
  }
 catch (  PackageParserException e) {
    throw e;
  }
catch (  Exception e) {
    throw new PackageParserException(INSTALL_PARSE_FAILED_UNEXPECTED_EXCEPTION,"Failed to read manifest from " + apkPath,e);
  }
 finally {
    IoUtils.closeQuietly(parser);
    IoUtils.closeQuietly(assets);
  }
}
