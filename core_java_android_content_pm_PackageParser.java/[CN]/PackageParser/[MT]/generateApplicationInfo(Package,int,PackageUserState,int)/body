{
  if (p == null)   return null;
  if (!checkUseInstalled(flags,state)) {
    return null;
  }
  if (!copyNeeded(flags,p,state,null,userId)) {
    if (!sCompatibilityModeEnabled) {
      p.applicationInfo.disableCompatibilityMode();
    }
    p.applicationInfo.flags|=ApplicationInfo.FLAG_INSTALLED;
    if (state.enabled == PackageManager.COMPONENT_ENABLED_STATE_ENABLED) {
      p.applicationInfo.enabled=true;
    }
 else     if (state.enabled == PackageManager.COMPONENT_ENABLED_STATE_DISABLED || state.enabled == PackageManager.COMPONENT_ENABLED_STATE_DISABLED_USER) {
      p.applicationInfo.enabled=false;
    }
    p.applicationInfo.enabledSetting=state.enabled;
    return p.applicationInfo;
  }
  ApplicationInfo ai=new ApplicationInfo(p.applicationInfo);
  if (userId != 0) {
    ai.uid=UserHandle.getUid(userId,ai.uid);
    ai.dataDir=PackageManager.getDataDirForUser(userId,ai.packageName);
  }
  if ((flags & PackageManager.GET_META_DATA) != 0) {
    ai.metaData=p.mAppMetaData;
  }
  if ((flags & PackageManager.GET_SHARED_LIBRARY_FILES) != 0) {
    ai.sharedLibraryFiles=p.usesLibraryFiles;
  }
  if (!sCompatibilityModeEnabled) {
    ai.disableCompatibilityMode();
  }
  if (state.stopped) {
    ai.flags|=ApplicationInfo.FLAG_STOPPED;
  }
 else {
    ai.flags&=~ApplicationInfo.FLAG_STOPPED;
  }
  if (state.installed) {
    ai.flags|=ApplicationInfo.FLAG_INSTALLED;
  }
 else {
    ai.flags&=~ApplicationInfo.FLAG_INSTALLED;
  }
  if (state.enabled == PackageManager.COMPONENT_ENABLED_STATE_ENABLED) {
    ai.enabled=true;
  }
 else   if (state.enabled == PackageManager.COMPONENT_ENABLED_STATE_DISABLED || state.enabled == PackageManager.COMPONENT_ENABLED_STATE_DISABLED_USER) {
    ai.enabled=false;
  }
  ai.enabledSetting=state.enabled;
  return ai;
}
