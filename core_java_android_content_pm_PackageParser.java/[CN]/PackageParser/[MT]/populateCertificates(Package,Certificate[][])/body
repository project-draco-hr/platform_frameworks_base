{
  pkg.mCertificates=null;
  pkg.mSignatures=null;
  pkg.mSigningKeys=null;
  pkg.mCertificates=certificates;
  try {
    pkg.mSignatures=convertToSignatures(certificates);
  }
 catch (  CertificateEncodingException e) {
    throw new PackageParserException(INSTALL_PARSE_FAILED_NO_CERTIFICATES,"Failed to collect certificates from " + pkg.baseCodePath,e);
  }
  pkg.mSigningKeys=new ArraySet<>(certificates.length);
  for (int i=0; i < certificates.length; i++) {
    Certificate[] signerCerts=certificates[i];
    Certificate signerCert=signerCerts[0];
    pkg.mSigningKeys.add(signerCert.getPublicKey());
  }
  final int childCount=(pkg.childPackages != null) ? pkg.childPackages.size() : 0;
  for (int i=0; i < childCount; i++) {
    Package childPkg=pkg.childPackages.get(i);
    childPkg.mCertificates=pkg.mCertificates;
    childPkg.mSignatures=pkg.mSignatures;
    childPkg.mSigningKeys=pkg.mSigningKeys;
  }
}
