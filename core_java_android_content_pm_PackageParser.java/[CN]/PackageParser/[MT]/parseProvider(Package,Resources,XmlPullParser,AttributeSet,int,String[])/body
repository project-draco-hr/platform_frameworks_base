{
  TypedArray sa=res.obtainAttributes(attrs,com.android.internal.R.styleable.AndroidManifestProvider);
  if (mParseProviderArgs == null) {
    mParseProviderArgs=new ParseComponentArgs(owner,outError,com.android.internal.R.styleable.AndroidManifestProvider_name,com.android.internal.R.styleable.AndroidManifestProvider_label,com.android.internal.R.styleable.AndroidManifestProvider_icon,mSeparateProcesses,com.android.internal.R.styleable.AndroidManifestProvider_process,com.android.internal.R.styleable.AndroidManifestProvider_description,com.android.internal.R.styleable.AndroidManifestProvider_enabled);
    mParseProviderArgs.tag="<provider>";
  }
  mParseProviderArgs.sa=sa;
  mParseProviderArgs.flags=flags;
  Provider p=new Provider(mParseProviderArgs,new ProviderInfo());
  if (outError[0] != null) {
    sa.recycle();
    return null;
  }
  p.info.exported=sa.getBoolean(com.android.internal.R.styleable.AndroidManifestProvider_exported,true);
  String cpname=sa.getNonResourceString(com.android.internal.R.styleable.AndroidManifestProvider_authorities);
  p.info.isSyncable=sa.getBoolean(com.android.internal.R.styleable.AndroidManifestProvider_syncable,false);
  String permission=sa.getNonResourceString(com.android.internal.R.styleable.AndroidManifestProvider_permission);
  String str=sa.getNonResourceString(com.android.internal.R.styleable.AndroidManifestProvider_readPermission);
  if (str == null) {
    str=permission;
  }
  if (str == null) {
    p.info.readPermission=owner.applicationInfo.permission;
  }
 else {
    p.info.readPermission=str.length() > 0 ? str.toString().intern() : null;
  }
  str=sa.getNonResourceString(com.android.internal.R.styleable.AndroidManifestProvider_writePermission);
  if (str == null) {
    str=permission;
  }
  if (str == null) {
    p.info.writePermission=owner.applicationInfo.permission;
  }
 else {
    p.info.writePermission=str.length() > 0 ? str.toString().intern() : null;
  }
  p.info.grantUriPermissions=sa.getBoolean(com.android.internal.R.styleable.AndroidManifestProvider_grantUriPermissions,false);
  p.info.multiprocess=sa.getBoolean(com.android.internal.R.styleable.AndroidManifestProvider_multiprocess,false);
  p.info.initOrder=sa.getInt(com.android.internal.R.styleable.AndroidManifestProvider_initOrder,0);
  sa.recycle();
  if (cpname == null) {
    outError[0]="<provider> does not incude authorities attribute";
    return null;
  }
  p.info.authority=cpname.intern();
  if (!parseProviderTags(res,parser,attrs,p,outError)) {
    return null;
  }
  return p;
}
