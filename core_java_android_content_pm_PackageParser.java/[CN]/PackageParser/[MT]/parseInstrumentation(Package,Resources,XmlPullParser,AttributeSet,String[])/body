{
  TypedArray sa=res.obtainAttributes(attrs,com.android.internal.R.styleable.AndroidManifestInstrumentation);
  Instrumentation a=new Instrumentation(owner);
  if (!parsePackageItemInfo(owner,a.info,outError,"<instrumentation>",sa,com.android.internal.R.styleable.AndroidManifestInstrumentation_name,com.android.internal.R.styleable.AndroidManifestInstrumentation_label,com.android.internal.R.styleable.AndroidManifestInstrumentation_icon)) {
    sa.recycle();
    mParseError=PackageManager.INSTALL_PARSE_FAILED_MANIFEST_MALFORMED;
    return null;
  }
  a.component=new ComponentName(owner.applicationInfo.packageName,a.info.name);
  String str;
  str=sa.getNonResourceString(com.android.internal.R.styleable.AndroidManifestInstrumentation_targetPackage);
  a.info.targetPackage=str != null ? str.intern() : null;
  a.info.handleProfiling=sa.getBoolean(com.android.internal.R.styleable.AndroidManifestInstrumentation_handleProfiling,false);
  a.info.functionalTest=sa.getBoolean(com.android.internal.R.styleable.AndroidManifestInstrumentation_functionalTest,false);
  sa.recycle();
  if (a.info.targetPackage == null) {
    outError[0]="<instrumentation> does not specify targetPackage";
    mParseError=PackageManager.INSTALL_PARSE_FAILED_MANIFEST_MALFORMED;
    return null;
  }
  if (!parseAllMetaData(res,parser,attrs,"<instrumentation>",a,outError)) {
    mParseError=PackageManager.INSTALL_PARSE_FAILED_MANIFEST_MALFORMED;
    return null;
  }
  owner.instrumentation.add(a);
  return a;
}
