{
  final PackageLite lite=parseClusterPackageLite(packageDir,0);
  if (mOnlyCoreApps && !lite.coreApp) {
    throw new PackageParserException(INSTALL_PARSE_FAILED_MANIFEST_MALFORMED,"Not a coreApp: " + packageDir);
  }
  final AssetManager assets=new AssetManager();
  try {
    loadApkIntoAssetManager(assets,lite.baseCodePath,flags);
    if (!ArrayUtils.isEmpty(lite.splitCodePaths)) {
      for (      String path : lite.splitCodePaths) {
        loadApkIntoAssetManager(assets,path,flags);
      }
    }
    final File baseApk=new File(lite.baseCodePath);
    final Package pkg=parseBaseApk(baseApk,assets,flags);
    if (pkg == null) {
      throw new PackageParserException(INSTALL_PARSE_FAILED_NOT_APK,"Failed to parse base APK: " + baseApk);
    }
    if (!ArrayUtils.isEmpty(lite.splitNames)) {
      final int num=lite.splitNames.length;
      pkg.splitNames=lite.splitNames;
      pkg.splitCodePaths=lite.splitCodePaths;
      pkg.splitFlags=new int[num];
      pkg.splitPrivateFlags=new int[num];
      for (int i=0; i < num; i++) {
        parseSplitApk(pkg,i,assets,flags);
      }
    }
    pkg.codePath=packageDir.getAbsolutePath();
    return pkg;
  }
  finally {
    IoUtils.closeQuietly(assets);
  }
}
