{
  final String apkPath=apkFile.getAbsolutePath();
  StrictJarFile jarFile=null;
  try {
    jarFile=new StrictJarFile(apkPath);
    final ZipEntry manifestEntry=jarFile.findEntry(ANDROID_MANIFEST_FILENAME);
    if (manifestEntry == null) {
      throw new PackageParserException(INSTALL_PARSE_FAILED_BAD_MANIFEST,"Package " + apkPath + " has no manifest");
    }
    final List<ZipEntry> toVerify=new ArrayList<>();
    toVerify.add(manifestEntry);
    if ((flags & PARSE_IS_SYSTEM) == 0) {
      final Iterator<ZipEntry> i=jarFile.iterator();
      while (i.hasNext()) {
        final ZipEntry entry=i.next();
        if (entry.isDirectory())         continue;
        if (entry.getName().startsWith("META-INF/"))         continue;
        if (entry.getName().equals(ANDROID_MANIFEST_FILENAME))         continue;
        toVerify.add(entry);
      }
    }
    for (    ZipEntry entry : toVerify) {
      final Certificate[][] entryCerts=loadCertificates(jarFile,entry);
      if (ArrayUtils.isEmpty(entryCerts)) {
        throw new PackageParserException(INSTALL_PARSE_FAILED_NO_CERTIFICATES,"Package " + apkPath + " has no certificates at entry "+ entry.getName());
      }
      if (pkg.mCertificates == null) {
        pkg.mCertificates=entryCerts;
        pkg.mSignatures=convertToSignatures(entryCerts);
        pkg.mSigningKeys=new ArraySet<PublicKey>();
        for (int i=0; i < entryCerts.length; i++) {
          pkg.mSigningKeys.add(entryCerts[i][0].getPublicKey());
        }
      }
 else {
        final boolean certsMatch=(pkg.mCertificates.length == entryCerts.length) && ArrayUtils.containsAll(pkg.mCertificates,entryCerts) && ArrayUtils.containsAll(entryCerts,pkg.mCertificates);
        if (!certsMatch) {
          throw new PackageParserException(INSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES,"Package " + apkPath + " has mismatched certificates at entry "+ entry.getName());
        }
      }
    }
  }
 catch (  GeneralSecurityException|IOException|RuntimeException e) {
    throw new PackageParserException(INSTALL_PARSE_FAILED_CERTIFICATE_ENCODING,"Failed to collect certificates from " + apkPath,e);
  }
 finally {
    closeQuietly(jarFile);
  }
}
