{
  final String apkPath=pkg.splitCodePaths[splitIndex];
  mParseError=PackageManager.INSTALL_SUCCEEDED;
  mArchiveSourcePath=apkPath;
  if (DEBUG_JAR)   Slog.d(TAG,"Scanning split APK: " + apkPath);
  final int cookie=loadApkIntoAssetManager(assets,apkPath,flags);
  Resources res=null;
  XmlResourceParser parser=null;
  try {
    res=new Resources(assets,mMetrics,null);
    assets.setConfiguration(0,0,null,0,0,0,0,0,0,0,0,0,0,0,0,0,Build.VERSION.RESOURCES_SDK_INT);
    parser=assets.openXmlResourceParser(cookie,ANDROID_MANIFEST_FILENAME);
    final String[] outError=new String[1];
    pkg=parseSplitApk(pkg,res,parser,flags,splitIndex,outError);
    if (pkg == null) {
      throw new PackageParserException(mParseError,apkPath + " (at " + parser.getPositionDescription()+ "): "+ outError[0]);
    }
  }
 catch (  PackageParserException e) {
    throw e;
  }
catch (  Exception e) {
    throw new PackageParserException(INSTALL_PARSE_FAILED_UNEXPECTED_EXCEPTION,"Failed to read manifest from " + apkPath,e);
  }
 finally {
    IoUtils.closeQuietly(parser);
  }
}
