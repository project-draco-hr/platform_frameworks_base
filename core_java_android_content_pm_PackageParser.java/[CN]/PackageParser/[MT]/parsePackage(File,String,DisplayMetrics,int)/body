{
  mParseError=PackageManager.INSTALL_SUCCEEDED;
  mArchiveSourcePath=sourceFile.getPath();
  if (!sourceFile.isFile()) {
    Log.w(TAG,"Skipping dir: " + mArchiveSourcePath);
    mParseError=PackageManager.INSTALL_PARSE_FAILED_NOT_APK;
    return null;
  }
  if (!isPackageFilename(sourceFile.getName()) && (flags & PARSE_MUST_BE_APK) != 0) {
    if ((flags & PARSE_IS_SYSTEM) == 0) {
      Log.w(TAG,"Skipping non-package file: " + mArchiveSourcePath);
    }
    mParseError=PackageManager.INSTALL_PARSE_FAILED_NOT_APK;
    return null;
  }
  if ((flags & PARSE_CHATTY) != 0 && false)   Log.d(TAG,"Scanning package: " + mArchiveSourcePath);
  XmlResourceParser parser=null;
  AssetManager assmgr=null;
  Resources res=null;
  boolean assetError=true;
  try {
    assmgr=new AssetManager();
    int cookie=assmgr.addAssetPath(mArchiveSourcePath);
    if (cookie != 0) {
      res=new Resources(assmgr,metrics,null);
      assmgr.setConfiguration(0,0,null,0,0,0,0,0,0,0,0,0,0,0,0,Build.VERSION.RESOURCES_SDK_INT);
      parser=assmgr.openXmlResourceParser(cookie,"AndroidManifest.xml");
      assetError=false;
    }
 else {
      Log.w(TAG,"Failed adding asset path:" + mArchiveSourcePath);
    }
  }
 catch (  Exception e) {
    Log.w(TAG,"Unable to read AndroidManifest.xml of " + mArchiveSourcePath,e);
  }
  if (assetError) {
    if (assmgr != null)     assmgr.close();
    mParseError=PackageManager.INSTALL_PARSE_FAILED_BAD_MANIFEST;
    return null;
  }
  String[] errorText=new String[1];
  Package pkg=null;
  Exception errorException=null;
  try {
    pkg=parsePackage(res,parser,flags,errorText);
  }
 catch (  Exception e) {
    errorException=e;
    mParseError=PackageManager.INSTALL_PARSE_FAILED_UNEXPECTED_EXCEPTION;
  }
  if (pkg == null) {
    if (errorException != null) {
      Log.w(TAG,mArchiveSourcePath,errorException);
    }
 else {
      Log.w(TAG,mArchiveSourcePath + " (at " + parser.getPositionDescription()+ "): "+ errorText[0]);
    }
    parser.close();
    assmgr.close();
    if (mParseError == PackageManager.INSTALL_SUCCEEDED) {
      mParseError=PackageManager.INSTALL_PARSE_FAILED_MANIFEST_MALFORMED;
    }
    return null;
  }
  parser.close();
  assmgr.close();
  pkg.mPath=destCodePath;
  pkg.mScanPath=mArchiveSourcePath;
  pkg.mSignatures=null;
  return pkg;
}
