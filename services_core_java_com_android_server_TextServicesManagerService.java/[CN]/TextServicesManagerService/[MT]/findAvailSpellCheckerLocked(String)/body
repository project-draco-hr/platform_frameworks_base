{
  final int spellCheckersCount=mSpellCheckerList.size();
  if (spellCheckersCount == 0) {
    Slog.w(TAG,"no available spell checker services found");
    return null;
  }
  if (prefPackage != null) {
    for (int i=0; i < spellCheckersCount; ++i) {
      final SpellCheckerInfo sci=mSpellCheckerList.get(i);
      if (prefPackage.equals(sci.getPackageName())) {
        if (DBG) {
          Slog.d(TAG,"findAvailSpellCheckerLocked: " + sci.getPackageName());
        }
        return sci;
      }
    }
  }
  final Locale systemLocal=mContext.getResources().getConfiguration().locale;
  final ArrayList<Locale> suitableLocales=InputMethodUtils.getSuitableLocalesForSpellChecker(systemLocal);
  if (DBG) {
    Slog.w(TAG,"findAvailSpellCheckerLocked suitableLocales=" + Arrays.toString(suitableLocales.toArray(new Locale[suitableLocales.size()])));
  }
  final int localeCount=suitableLocales.size();
  for (int localeIndex=0; localeIndex < localeCount; ++localeIndex) {
    final Locale locale=suitableLocales.get(localeIndex);
    for (int spellCheckersIndex=0; spellCheckersIndex < spellCheckersCount; ++spellCheckersIndex) {
      final SpellCheckerInfo info=mSpellCheckerList.get(spellCheckersIndex);
      final int subtypeCount=info.getSubtypeCount();
      for (int subtypeIndex=0; subtypeIndex < subtypeCount; ++subtypeIndex) {
        final SpellCheckerSubtype subtype=info.getSubtypeAt(subtypeIndex);
        final Locale subtypeLocale=InputMethodUtils.constructLocaleFromString(subtype.getLocale());
        if (locale.equals(subtypeLocale)) {
          return info;
        }
      }
    }
  }
  if (spellCheckersCount > 1) {
    Slog.w(TAG,"more than one spell checker service found, picking first");
  }
  return mSpellCheckerList.get(0);
}
