{
  if (mContext.checkCallingOrSelfPermission(android.Manifest.permission.DUMP) != PackageManager.PERMISSION_GRANTED) {
    pw.println("Permission Denial: can't dump TextServicesManagerService from from pid=" + Binder.getCallingPid() + ", uid="+ Binder.getCallingUid());
    return;
  }
synchronized (mSpellCheckerMap) {
    pw.println("Current Text Services Manager state:");
    pw.println("  Spell Checker Map:");
    for (    Map.Entry<String,SpellCheckerInfo> ent : mSpellCheckerMap.entrySet()) {
      pw.print("    ");
      pw.print(ent.getKey());
      pw.println(":");
      SpellCheckerInfo info=ent.getValue();
      pw.print("      ");
      pw.print("id=");
      pw.println(info.getId());
      pw.print("      ");
      pw.print("comp=");
      pw.println(info.getComponent().toShortString());
      int NS=info.getSubtypeCount();
      for (int i=0; i < NS; i++) {
        SpellCheckerSubtype st=info.getSubtypeAt(i);
        pw.print("      ");
        pw.print("Subtype #");
        pw.print(i);
        pw.println(":");
        pw.print("        ");
        pw.print("locale=");
        pw.println(st.getLocale());
        pw.print("        ");
        pw.print("extraValue=");
        pw.println(st.getExtraValue());
      }
    }
    pw.println("");
    pw.println("  Spell Checker Bind Groups:");
    for (    Map.Entry<String,SpellCheckerBindGroup> ent : mSpellCheckerBindGroups.entrySet()) {
      SpellCheckerBindGroup grp=ent.getValue();
      pw.print("    ");
      pw.print(ent.getKey());
      pw.print(" ");
      pw.print(grp);
      pw.println(":");
      pw.print("      ");
      pw.print("mInternalConnection=");
      pw.println(grp.mInternalConnection);
      pw.print("      ");
      pw.print("mSpellChecker=");
      pw.println(grp.mSpellChecker);
      pw.print("      ");
      pw.print("mBound=");
      pw.print(grp.mBound);
      pw.print(" mConnected=");
      pw.println(grp.mConnected);
      int NL=grp.mListeners.size();
      for (int i=0; i < NL; i++) {
        InternalDeathRecipient listener=grp.mListeners.get(i);
        pw.print("      ");
        pw.print("Listener #");
        pw.print(i);
        pw.println(":");
        pw.print("        ");
        pw.print("mTsListener=");
        pw.println(listener.mTsListener);
        pw.print("        ");
        pw.print("mScListener=");
        pw.println(listener.mScListener);
        pw.print("        ");
        pw.print("mGroup=");
        pw.println(listener.mGroup);
        pw.print("        ");
        pw.print("mScLocale=");
        pw.print(listener.mScLocale);
        pw.print(" mUid=");
        pw.println(listener.mUid);
      }
    }
  }
}
