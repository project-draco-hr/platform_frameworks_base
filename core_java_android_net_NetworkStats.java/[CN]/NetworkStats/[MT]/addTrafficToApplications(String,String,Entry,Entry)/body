{
  Entry moved=new Entry();
  Entry tmpEntry=new Entry();
  tmpEntry.iface=underlyingIface;
  for (int i=0; i < size; i++) {
    if (Objects.equals(iface[i],tunIface)) {
      if (tunIfaceTotal.rxBytes > 0) {
        tmpEntry.rxBytes=pool.rxBytes * rxBytes[i] / tunIfaceTotal.rxBytes;
      }
 else {
        tmpEntry.rxBytes=0;
      }
      if (tunIfaceTotal.rxPackets > 0) {
        tmpEntry.rxPackets=pool.rxPackets * rxPackets[i] / tunIfaceTotal.rxPackets;
      }
 else {
        tmpEntry.rxPackets=0;
      }
      if (tunIfaceTotal.txBytes > 0) {
        tmpEntry.txBytes=pool.txBytes * txBytes[i] / tunIfaceTotal.txBytes;
      }
 else {
        tmpEntry.txBytes=0;
      }
      if (tunIfaceTotal.txPackets > 0) {
        tmpEntry.txPackets=pool.txPackets * txPackets[i] / tunIfaceTotal.txPackets;
      }
 else {
        tmpEntry.txPackets=0;
      }
      if (tunIfaceTotal.operations > 0) {
        tmpEntry.operations=pool.operations * operations[i] / tunIfaceTotal.operations;
      }
 else {
        tmpEntry.operations=0;
      }
      tmpEntry.uid=uid[i];
      tmpEntry.tag=tag[i];
      tmpEntry.set=set[i];
      combineValues(tmpEntry);
      if (tag[i] == TAG_NONE) {
        moved.add(tmpEntry);
      }
    }
  }
  return moved;
}
