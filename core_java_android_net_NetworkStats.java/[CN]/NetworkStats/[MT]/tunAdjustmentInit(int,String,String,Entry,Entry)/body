{
  Entry recycle=new Entry();
  for (int i=0; i < size; i++) {
    getValues(i,recycle);
    if (recycle.uid == UID_ALL) {
      throw new IllegalStateException("Cannot adjust VPN accounting on an iface aggregated NetworkStats.");
    }
    if (recycle.set == SET_DBG_VPN_IN || recycle.set == SET_DBG_VPN_OUT) {
      throw new IllegalStateException("Cannot adjust VPN accounting on a NetworkStats containing SET_DBG_VPN_*");
    }
    if (recycle.uid == tunUid && recycle.tag == TAG_NONE && Objects.equals(underlyingIface,recycle.iface)) {
      underlyingIfaceTotal.add(recycle);
    }
    if (recycle.tag == TAG_NONE && Objects.equals(tunIface,recycle.iface)) {
      tunIfaceTotal.add(recycle);
    }
  }
}
