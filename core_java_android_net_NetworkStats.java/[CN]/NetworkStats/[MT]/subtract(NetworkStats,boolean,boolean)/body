{
  final long deltaRealtime=this.elapsedRealtime - value.elapsedRealtime;
  if (enforceMonotonic && deltaRealtime < 0) {
    throw new IllegalArgumentException("found non-monotonic realtime");
  }
  final NetworkStats result=new NetworkStats(deltaRealtime,size);
  for (int i=0; i < size; i++) {
    final String iface=this.iface[i];
    final int uid=this.uid[i];
    final int tag=this.tag[i];
    final int j=value.findIndex(iface,uid,tag);
    if (j == -1) {
      result.addEntry(iface,uid,tag,this.rx[i],this.tx[i]);
    }
 else {
      long rx=this.rx[i] - value.rx[j];
      long tx=this.tx[i] - value.tx[j];
      if (enforceMonotonic && (rx < 0 || tx < 0)) {
        throw new IllegalArgumentException("found non-monotonic values");
      }
      if (clampNegative) {
        rx=Math.max(0,rx);
        tx=Math.max(0,tx);
      }
      result.addEntry(iface,uid,tag,rx,tx);
    }
  }
  return result;
}
