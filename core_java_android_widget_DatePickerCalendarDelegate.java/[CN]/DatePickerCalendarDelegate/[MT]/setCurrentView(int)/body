{
switch (viewIndex) {
case VIEW_MONTH_DAY:
    mDayPickerView.setDate(mCurrentDate.getTimeInMillis());
  if (mCurrentView != viewIndex) {
    mHeaderMonthDay.setActivated(true);
    mHeaderYear.setActivated(false);
    mAnimator.setDisplayedChild(VIEW_MONTH_DAY);
    mCurrentView=viewIndex;
  }
mAnimator.announceForAccessibility(mSelectDay);
break;
case VIEW_YEAR:
final int year=mCurrentDate.get(Calendar.YEAR);
mYearPickerView.setYear(year);
mYearPickerView.post(new Runnable(){
@Override public void run(){
mYearPickerView.requestFocus();
final View selected=mYearPickerView.getSelectedView();
if (selected != null) {
selected.requestFocus();
}
}
}
);
if (mCurrentView != viewIndex) {
mHeaderMonthDay.setActivated(false);
mHeaderYear.setActivated(true);
mAnimator.setDisplayedChild(VIEW_YEAR);
mCurrentView=viewIndex;
}
mAnimator.announceForAccessibility(mSelectYear);
break;
}
}
