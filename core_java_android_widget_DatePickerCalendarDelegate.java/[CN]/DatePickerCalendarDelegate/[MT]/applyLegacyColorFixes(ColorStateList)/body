{
  if (color == null || color.hasState(R.attr.state_activated)) {
    return color;
  }
  final int activatedColor;
  final int defaultColor;
  if (color.hasState(R.attr.state_selected)) {
    activatedColor=color.getColorForState(StateSet.get(StateSet.VIEW_STATE_ENABLED | StateSet.VIEW_STATE_SELECTED),0);
    defaultColor=color.getColorForState(StateSet.get(StateSet.VIEW_STATE_ENABLED),0);
  }
 else {
    activatedColor=color.getDefaultColor();
    final TypedArray ta=mContext.obtainStyledAttributes(ATTRS_DISABLED_ALPHA);
    final float disabledAlpha=ta.getFloat(0,0.30f);
    defaultColor=multiplyAlphaComponent(activatedColor,disabledAlpha);
  }
  if (activatedColor == 0 || defaultColor == 0) {
    return null;
  }
  final int[][] stateSet=new int[][]{{R.attr.state_activated},{}};
  final int[] colors=new int[]{activatedColor,defaultColor};
  return new ColorStateList(stateSet,colors);
}
