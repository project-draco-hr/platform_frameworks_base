{
  if (mDayOfWeekView != null) {
    mDayOfWeekView.setText(mCurrentDate.getDisplayName(Calendar.DAY_OF_WEEK,Calendar.LONG,Locale.getDefault()));
  }
  final String bestDateTimePattern=DateFormat.getBestDateTimePattern(mCurrentLocale,"yMMMd");
  final int[] viewIndices=getMonthDayYearIndexes(bestDateTimePattern);
  mMonthDayYearLayout.removeAllViews();
  if (viewIndices[YEAR_INDEX] == 0) {
    mMonthDayYearLayout.addView(mHeaderYearTextView);
    mMonthDayYearLayout.addView(mMonthAndDayLayout);
  }
 else {
    mMonthDayYearLayout.addView(mMonthAndDayLayout);
    mMonthDayYearLayout.addView(mHeaderYearTextView);
  }
  mMonthAndDayLayout.removeAllViews();
  if (viewIndices[MONTH_INDEX] > viewIndices[DAY_INDEX]) {
    mMonthAndDayLayout.addView(mHeaderDayOfMonthTextView);
    mMonthAndDayLayout.addView(mHeaderMonthTextView);
  }
 else {
    mMonthAndDayLayout.addView(mHeaderMonthTextView);
    mMonthAndDayLayout.addView(mHeaderDayOfMonthTextView);
  }
  mHeaderMonthTextView.setText(mCurrentDate.getDisplayName(Calendar.MONTH,Calendar.SHORT,Locale.getDefault()).toUpperCase(Locale.getDefault()));
  mHeaderDayOfMonthTextView.setText(mDayFormat.format(mCurrentDate.getTime()));
  mHeaderYearTextView.setText(mYearFormat.format(mCurrentDate.getTime()));
  long millis=mCurrentDate.getTimeInMillis();
  mAnimator.setDateMillis(millis);
  int flags=DateUtils.FORMAT_SHOW_DATE | DateUtils.FORMAT_NO_YEAR;
  String monthAndDayText=DateUtils.formatDateTime(mContext,millis,flags);
  mMonthAndDayLayout.setContentDescription(monthAndDayText);
  if (announce) {
    flags=DateUtils.FORMAT_SHOW_DATE | DateUtils.FORMAT_SHOW_YEAR;
    String fullDateText=DateUtils.formatDateTime(mContext,millis,flags);
    mAnimator.announceForAccessibility(fullDateText);
  }
}
