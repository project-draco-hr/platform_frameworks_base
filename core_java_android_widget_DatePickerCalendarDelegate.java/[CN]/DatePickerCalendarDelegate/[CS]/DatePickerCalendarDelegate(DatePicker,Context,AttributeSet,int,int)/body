{
  super(delegator,context);
  final Locale locale=Locale.getDefault();
  mMinDate=getCalendarForLocale(mMinDate,locale);
  mMaxDate=getCalendarForLocale(mMaxDate,locale);
  mTempDate=getCalendarForLocale(mMaxDate,locale);
  mCurrentDate=getCalendarForLocale(mCurrentDate,locale);
  mMinDate.set(DEFAULT_START_YEAR,1,1);
  mMaxDate.set(DEFAULT_END_YEAR,12,31);
  final Resources res=mDelegator.getResources();
  final TypedArray a=mContext.obtainStyledAttributes(attrs,R.styleable.DatePicker,defStyleAttr,defStyleRes);
  final LayoutInflater inflater=(LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
  final int layoutResourceId=a.getResourceId(R.styleable.DatePicker_internalLayout,R.layout.date_picker_holo);
  final View mainView=inflater.inflate(layoutResourceId,null);
  mDelegator.addView(mainView);
  mDayOfWeekView=(TextView)mainView.findViewById(R.id.date_picker_header);
  final LinearLayout dateLayout=(LinearLayout)mainView.findViewById(R.id.day_picker_selector_layout);
  mMonthDayYearLayout=(LinearLayout)mainView.findViewById(R.id.date_picker_month_day_year_layout);
  mMonthAndDayLayout=(LinearLayout)mainView.findViewById(R.id.date_picker_month_and_day_layout);
  mMonthAndDayLayout.setOnClickListener(this);
  mHeaderMonthTextView=(TextView)mainView.findViewById(R.id.date_picker_month);
  mHeaderDayOfMonthTextView=(TextView)mainView.findViewById(R.id.date_picker_day);
  mHeaderYearTextView=(TextView)mainView.findViewById(R.id.date_picker_year);
  mHeaderYearTextView.setOnClickListener(this);
  final int defaultHighlightColor=mHeaderYearTextView.getHighlightColor();
  final int dayOfWeekTextAppearanceResId=a.getResourceId(R.styleable.DatePicker_dayOfWeekTextAppearance,0);
  if (dayOfWeekTextAppearanceResId != 0) {
    mDayOfWeekView.setTextAppearance(context,dayOfWeekTextAppearanceResId);
  }
  mDayOfWeekView.setBackground(a.getDrawable(R.styleable.DatePicker_dayOfWeekBackground));
  dateLayout.setBackground(a.getDrawable(R.styleable.DatePicker_headerBackground));
  final int headerSelectedTextColor=a.getColor(R.styleable.DatePicker_headerSelectedTextColor,defaultHighlightColor);
  final int monthTextAppearanceResId=a.getResourceId(R.styleable.DatePicker_headerMonthTextAppearance,0);
  if (monthTextAppearanceResId != 0) {
    mHeaderMonthTextView.setTextAppearance(context,monthTextAppearanceResId);
  }
  mHeaderMonthTextView.setTextColor(ColorStateList.addFirstIfMissing(mHeaderMonthTextView.getTextColors(),R.attr.state_selected,headerSelectedTextColor));
  final int dayOfMonthTextAppearanceResId=a.getResourceId(R.styleable.DatePicker_headerDayOfMonthTextAppearance,0);
  if (dayOfMonthTextAppearanceResId != 0) {
    mHeaderDayOfMonthTextView.setTextAppearance(context,dayOfMonthTextAppearanceResId);
  }
  mHeaderDayOfMonthTextView.setTextColor(ColorStateList.addFirstIfMissing(mHeaderDayOfMonthTextView.getTextColors(),R.attr.state_selected,headerSelectedTextColor));
  final int headerYearTextAppearanceResId=a.getResourceId(R.styleable.DatePicker_headerYearTextAppearance,0);
  if (headerYearTextAppearanceResId != 0) {
    mHeaderYearTextView.setTextAppearance(context,headerYearTextAppearanceResId);
  }
  mHeaderYearTextView.setTextColor(ColorStateList.addFirstIfMissing(mHeaderYearTextView.getTextColors(),R.attr.state_selected,headerSelectedTextColor));
  mDayPickerView=new DayPickerView(mContext);
  mDayPickerView.setFirstDayOfWeek(mFirstDayOfWeek);
  mDayPickerView.setMinDate(mMinDate.getTimeInMillis());
  mDayPickerView.setMaxDate(mMaxDate.getTimeInMillis());
  mDayPickerView.setDate(mCurrentDate.getTimeInMillis());
  mDayPickerView.setOnDaySelectedListener(mOnDaySelectedListener);
  mYearPickerView=new YearPickerView(mContext);
  mYearPickerView.init(this);
  final ColorStateList yearBackgroundColor=a.getColorStateList(R.styleable.DatePicker_yearListSelectorColor);
  mYearPickerView.setYearBackgroundColor(yearBackgroundColor);
  final int yearTextAppearanceResId=a.getResourceId(R.styleable.DatePicker_yearListItemTextAppearance,0);
  if (yearTextAppearanceResId != 0) {
    mYearPickerView.setYearTextAppearance(yearTextAppearanceResId);
  }
  final ColorStateList calendarTextColor=a.getColorStateList(R.styleable.DatePicker_calendarTextColor);
  mDayPickerView.setCalendarTextColor(calendarTextColor);
  final ColorStateList calendarDayBackgroundColor=a.getColorStateList(R.styleable.DatePicker_calendarDayBackgroundColor);
  mDayPickerView.setCalendarDayBackgroundColor(calendarDayBackgroundColor);
  mDayPickerDescription=res.getString(R.string.day_picker_description);
  mSelectDay=res.getString(R.string.select_day);
  mYearPickerDescription=res.getString(R.string.year_picker_description);
  mSelectYear=res.getString(R.string.select_year);
  mAnimator=(AccessibleDateAnimator)mainView.findViewById(R.id.animator);
  mAnimator.addView(mDayPickerView);
  mAnimator.addView(mYearPickerView);
  mAnimator.setDateMillis(mCurrentDate.getTimeInMillis());
  final Animation animation=new AlphaAnimation(0.0f,1.0f);
  animation.setDuration(ANIMATION_DURATION);
  mAnimator.setInAnimation(animation);
  final Animation animation2=new AlphaAnimation(1.0f,0.0f);
  animation2.setDuration(ANIMATION_DURATION);
  mAnimator.setOutAnimation(animation2);
  updateDisplay(false);
  setCurrentView(MONTH_AND_DAY_VIEW);
}
