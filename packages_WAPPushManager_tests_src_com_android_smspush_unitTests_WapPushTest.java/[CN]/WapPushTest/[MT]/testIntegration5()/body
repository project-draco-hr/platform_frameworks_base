{
  boolean res;
  int originalAppIdValue=mAppIdValue;
  int originalContentTypeValue=mContentTypeValue;
  String originalAppIdName=mAppIdName;
  String originalContentTypeName=mContentTypeName;
  String originalClassName=mClassName;
  byte[] originalMessageBody=mMessageBody;
  Random rd=new Random();
  IWapPushManager iwapman=getInterface();
  IDataVerify dataverify=getVerifyInterface();
  mClassName="com.android.smspush.unitTests.ReceiverService";
  for (int i=0; i < OMA_APPLICATION_ID_VALUES.length + OMA_CONTENT_TYPE_VALUES.length; i++) {
    mAppIdValue=OMA_APPLICATION_ID_VALUES[rd.nextInt(OMA_APPLICATION_ID_VALUES.length)];
    mContentTypeValue=OMA_CONTENT_TYPE_VALUES[rd.nextInt(OMA_CONTENT_TYPE_VALUES.length)];
    mMessageBody=new byte[100 + rd.nextInt(100)];
    rd.nextBytes(mMessageBody);
    byte[] pdu=createPDU(3);
    byte[] wappushPdu=retrieveWspBody();
    try {
      dataverify.resetData();
      if (isContentTypeMapped(mContentTypeValue)) {
        mContentTypeName=getContentTypeName(mContentTypeValue);
        Log.d(LOG_TAG,"mContentTypeValue mapping " + mContentTypeValue + ":"+ mContentTypeName);
      }
 else {
        mContentTypeName=Integer.toString(mContentTypeValue);
      }
      iwapman.addPackage(Integer.toString(mAppIdValue),mContentTypeName,mPackageName,mClassName,WapPushManagerParams.APP_TYPE_SERVICE,false,false);
      dispatchWapPdu(wappushPdu,iwapman);
      iwapman.deletePackage(Integer.toString(mAppIdValue),mContentTypeName,mPackageName,mClassName);
      if (mContentTypeName.equals(WspTypeDecoder.CONTENT_TYPE_B_PUSH_CO)) {
        assertTrue(dataverify.verifyData(wappushPdu));
      }
 else {
        assertTrue(dataverify.verifyData(mMessageBody));
      }
    }
 catch (    RemoteException e) {
    }
  }
  mClassName=originalClassName;
  mAppIdName=originalAppIdName;
  mContentTypeName=originalContentTypeName;
  mAppIdValue=originalAppIdValue;
  mContentTypeValue=originalContentTypeValue;
  mMessageBody=originalMessageBody;
}
