{
  String filename=packageFile.getCanonicalPath();
  if (!filename.startsWith("/data/")) {
    return;
  }
  RecoverySystem rs=(RecoverySystem)context.getSystemService(Context.RECOVERY_SERVICE);
  IRecoverySystemProgressListener progressListener=null;
  if (listener != null) {
    final Handler progressHandler;
    if (handler != null) {
      progressHandler=handler;
    }
 else {
      progressHandler=new Handler(context.getMainLooper());
    }
    progressListener=new IRecoverySystemProgressListener.Stub(){
      int lastProgress=0;
      long lastPublishTime=System.currentTimeMillis();
      @Override public void onProgress(      final int progress){
        final long now=System.currentTimeMillis();
        progressHandler.post(new Runnable(){
          @Override public void run(){
            if (progress > lastProgress && now - lastPublishTime > PUBLISH_PROGRESS_INTERVAL_MS) {
              lastProgress=progress;
              lastPublishTime=now;
              listener.onProgress(progress);
            }
          }
        }
);
      }
    }
;
  }
  if (!rs.uncrypt(filename,progressListener)) {
    throw new IOException("process package failed");
  }
}
