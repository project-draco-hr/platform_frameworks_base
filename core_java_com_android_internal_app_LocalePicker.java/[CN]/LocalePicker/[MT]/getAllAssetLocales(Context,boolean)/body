{
  final Resources resources=context.getResources();
  final String[] locales=Resources.getSystem().getAssets().getLocales();
  List<String> localeList=new ArrayList<String>(locales.length);
  Collections.addAll(localeList,locales);
  if (!isInDeveloperMode) {
    localeList.remove("ar-XB");
    localeList.remove("en-XA");
  }
  Collections.sort(localeList);
  final String[] specialLocaleCodes=resources.getStringArray(R.array.special_locale_codes);
  final String[] specialLocaleNames=resources.getStringArray(R.array.special_locale_names);
  final ArrayList<LocaleInfo> localeInfos=new ArrayList<LocaleInfo>(localeList.size());
  for (  String locale : localeList) {
    final Locale l=Locale.forLanguageTag(locale.replace('_','-'));
    if (l == null || "und".equals(l.getLanguage()) || l.getLanguage().isEmpty() || l.getCountry().isEmpty()) {
      continue;
    }
    if (localeInfos.isEmpty()) {
      if (DEBUG) {
        Log.v(TAG,"adding initial " + toTitleCase(l.getDisplayLanguage(l)));
      }
      localeInfos.add(new LocaleInfo(toTitleCase(l.getDisplayLanguage(l)),l));
    }
 else {
      final LocaleInfo previous=localeInfos.get(localeInfos.size() - 1);
      if (previous.locale.getLanguage().equals(l.getLanguage()) && !previous.locale.getLanguage().equals("zz")) {
        if (DEBUG) {
          Log.v(TAG,"backing up and fixing " + previous.label + " to "+ getDisplayName(previous.locale,specialLocaleCodes,specialLocaleNames));
        }
        previous.label=toTitleCase(getDisplayName(previous.locale,specialLocaleCodes,specialLocaleNames));
        if (DEBUG) {
          Log.v(TAG,"  and adding " + toTitleCase(getDisplayName(l,specialLocaleCodes,specialLocaleNames)));
        }
        localeInfos.add(new LocaleInfo(toTitleCase(getDisplayName(l,specialLocaleCodes,specialLocaleNames)),l));
      }
 else {
        String displayName=toTitleCase(l.getDisplayLanguage(l));
        if (DEBUG) {
          Log.v(TAG,"adding " + displayName);
        }
        localeInfos.add(new LocaleInfo(displayName,l));
      }
    }
  }
  Collections.sort(localeInfos);
  return localeInfos;
}
