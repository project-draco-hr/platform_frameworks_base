{
  if (!hasFallback()) {
    return;
  }
  final int width=root.getWidth();
  final int height=root.getHeight();
  int left=width;
  int top=height;
  int right=0;
  int bottom=0;
  final int childCount=root.getChildCount();
  for (int i=0; i < childCount; i++) {
    final View child=root.getChildAt(i);
    final Drawable childBg=child.getBackground();
    if (child == content) {
      if (childBg == null && child instanceof ViewGroup && ((ViewGroup)child).getChildCount() == 0) {
        continue;
      }
    }
 else     if (child.getVisibility() != View.VISIBLE || childBg == null || childBg.getOpacity() != PixelFormat.OPAQUE) {
      continue;
    }
    left=Math.min(left,child.getLeft());
    top=Math.min(top,child.getTop());
    right=Math.max(right,child.getRight());
    bottom=Math.max(bottom,child.getBottom());
  }
  if (left >= right || top >= bottom) {
    return;
  }
  if (top > 0) {
    mBackgroundFallback.setBounds(0,0,width,top);
    mBackgroundFallback.draw(c);
  }
  if (left > 0) {
    mBackgroundFallback.setBounds(0,top,left,height);
    mBackgroundFallback.draw(c);
  }
  if (right < width) {
    mBackgroundFallback.setBounds(right,top,width,height);
    mBackgroundFallback.draw(c);
  }
  if (bottom < height) {
    mBackgroundFallback.setBounds(left,bottom,right,height);
    mBackgroundFallback.draw(c);
  }
}
