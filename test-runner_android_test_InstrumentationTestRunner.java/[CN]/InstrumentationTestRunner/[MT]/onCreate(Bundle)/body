{
  super.onCreate(arguments);
  String[] apkPaths={getTargetContext().getPackageCodePath(),getContext().getPackageCodePath()};
  ClassPathPackageInfoSource.setApkPaths(apkPaths);
  Predicate<TestMethod> testSizePredicate=null;
  boolean includePerformance=false;
  String testClassesArg=null;
  boolean logOnly=false;
  if (arguments != null) {
    testClassesArg=arguments.getString(ARGUMENT_TEST_CLASS);
    mDebug=getBooleanArgument(arguments,"debug");
    mJustCount=getBooleanArgument(arguments,"count");
    mSuiteAssignmentMode=getBooleanArgument(arguments,"suiteAssignment");
    mPackageOfTests=arguments.getString(ARGUMENT_TEST_PACKAGE);
    testSizePredicate=getSizePredicateFromArg(arguments.getString(ARGUMENT_TEST_SIZE_PREDICATE));
    includePerformance=getBooleanArgument(arguments,ARGUMENT_INCLUDE_PERF);
    logOnly=getBooleanArgument(arguments,ARGUMENT_LOG_ONLY);
    mCoverage=getBooleanArgument(arguments,"coverage");
    mCoverageFilePath=arguments.getString("coverageFile");
    try {
      Object delay=arguments.get(ARGUMENT_DELAY_MSEC);
      if (delay != null)       mDelayMsec=Integer.parseInt(delay.toString());
    }
 catch (    NumberFormatException e) {
      Log.e(LOG_TAG,"Invalid delay_msec parameter",e);
    }
  }
  TestSuiteBuilder testSuiteBuilder=new TestSuiteBuilder(getClass().getName(),getTargetContext().getClassLoader());
  if (testSizePredicate != null) {
    testSuiteBuilder.addRequirements(testSizePredicate);
  }
  if (!includePerformance) {
    testSuiteBuilder.addRequirements(REJECT_PERFORMANCE);
  }
  if (testClassesArg == null) {
    TestSuite testSuite=null;
    if (mPackageOfTests != null) {
      testSuiteBuilder.includePackages(mPackageOfTests);
    }
 else {
      testSuite=getTestSuite();
      testSuiteBuilder.addTestSuite(testSuite);
    }
    if (testSuite == null) {
      testSuiteBuilder.includePackages(getTargetContext().getPackageName());
    }
  }
 else {
    parseTestClasses(testClassesArg,testSuiteBuilder);
  }
  mTestRunner=getAndroidTestRunner();
  mTestRunner.setContext(getTargetContext());
  mTestRunner.setInstrumentaiton(this);
  mTestRunner.setSkipExecution(logOnly);
  mTestRunner.setTest(testSuiteBuilder.build());
  mTestCount=mTestRunner.getTestCases().size();
  if (mSuiteAssignmentMode) {
    mTestRunner.addTestListener(new SuiteAssignmentPrinter());
  }
 else {
    mTestRunner.addTestListener(new TestPrinter("TestRunner",false));
    mTestRunner.addTestListener(new WatcherResultPrinter(mTestCount));
  }
  start();
}
