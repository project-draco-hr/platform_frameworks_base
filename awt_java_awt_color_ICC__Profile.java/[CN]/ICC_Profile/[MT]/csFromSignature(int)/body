{
switch (signature) {
case icSigRgbData:
    return ColorSpace.TYPE_RGB;
case icSigXYZData:
  return ColorSpace.TYPE_XYZ;
case icSigCmykData:
return ColorSpace.TYPE_CMYK;
case icSigLabData:
return ColorSpace.TYPE_Lab;
case icSigGrayData:
return ColorSpace.TYPE_GRAY;
case icSigHlsData:
return ColorSpace.TYPE_HLS;
case icSigLuvData:
return ColorSpace.TYPE_Luv;
case icSigYCbCrData:
return ColorSpace.TYPE_YCbCr;
case icSigYxyData:
return ColorSpace.TYPE_Yxy;
case icSigHsvData:
return ColorSpace.TYPE_HSV;
case icSigCmyData:
return ColorSpace.TYPE_CMY;
case icSigSpace2CLR:
return ColorSpace.TYPE_2CLR;
case icSigSpace3CLR:
return ColorSpace.TYPE_3CLR;
case icSigSpace4CLR:
return ColorSpace.TYPE_4CLR;
case icSigSpace5CLR:
return ColorSpace.TYPE_5CLR;
case icSigSpace6CLR:
return ColorSpace.TYPE_6CLR;
case icSigSpace7CLR:
return ColorSpace.TYPE_7CLR;
case icSigSpace8CLR:
return ColorSpace.TYPE_8CLR;
case icSigSpace9CLR:
return ColorSpace.TYPE_9CLR;
case icSigSpaceACLR:
return ColorSpace.TYPE_ACLR;
case icSigSpaceBCLR:
return ColorSpace.TYPE_BCLR;
case icSigSpaceCCLR:
return ColorSpace.TYPE_CCLR;
case icSigSpaceDCLR:
return ColorSpace.TYPE_DCLR;
case icSigSpaceECLR:
return ColorSpace.TYPE_ECLR;
case icSigSpaceFCLR:
return ColorSpace.TYPE_FCLR;
default :
}
throw new IllegalArgumentException(Messages.getString("awt.165"));
}
