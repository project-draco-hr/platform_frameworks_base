{
  if (getWidth() == 0)   return;
  mLocalPaths.clear();
  int pendingXLoc=0;
  int pendingYLoc=PATH_DELIM;
  for (int i=0; i < mPaths.size(); i++) {
    int x=mPaths.keyAt(i);
    int y=mPaths.valueAt(i);
    if (y == PATH_DELIM) {
      if (i == mPaths.size() - 1 && pendingYLoc != PATH_DELIM) {
        mLocalPaths.put(pendingXLoc,pendingYLoc);
      }
      pendingYLoc=PATH_DELIM;
      mLocalPaths.put(pendingXLoc + 1,PATH_DELIM);
    }
 else {
      final int lx=getX(x);
      final int ly=getY(y);
      pendingXLoc=lx;
      if (mLocalPaths.size() > 0) {
        int lastX=mLocalPaths.keyAt(mLocalPaths.size() - 1);
        int lastY=mLocalPaths.valueAt(mLocalPaths.size() - 1);
        if (lastY != PATH_DELIM && !hasDiff(lastX,lx) && !hasDiff(lastY,ly)) {
          pendingYLoc=ly;
          continue;
        }
      }
      mLocalPaths.put(lx,ly);
    }
  }
}
