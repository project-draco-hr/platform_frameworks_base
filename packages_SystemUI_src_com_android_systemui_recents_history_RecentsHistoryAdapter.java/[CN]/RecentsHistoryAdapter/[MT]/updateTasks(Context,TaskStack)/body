{
  mContext=context;
  mStack=stack;
  final Locale l=context.getResources().getConfiguration().locale;
  final String dateFormatStr=DateFormat.getBestDateTimePattern(l,"EEEEMMMMd");
  final List<Task> tasksMostRecent=new ArrayList<>(stack.getHistoricalTasks());
  Collections.reverse(tasksMostRecent);
  int prevDateKey=-1;
  int taskCount=tasksMostRecent.size();
  mRows.clear();
  mTaskRowCount.clear();
  Calendar cal=Calendar.getInstance(l);
  for (int i=0; i < taskCount; i++) {
    Task task=tasksMostRecent.get(i);
    if (task.isFreeformTask()) {
      continue;
    }
    cal.setTimeInMillis(task.key.lastActiveTime);
    int dateKey=Objects.hash(cal.get(Calendar.YEAR),cal.get(Calendar.DAY_OF_YEAR));
    if (dateKey != prevDateKey) {
      prevDateKey=dateKey;
      mRows.add(new DateRow(DateFormat.format(dateFormatStr,cal).toString()));
    }
    mRows.add(new TaskRow(task,dateKey));
    mTaskRowCount.put(dateKey,mTaskRowCount.get(dateKey,0) + 1);
  }
  notifyDataSetChanged();
}
