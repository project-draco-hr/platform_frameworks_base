{
  String setterName=null;
  HashMap<String,MethodDescription> renamed=mStore.renamedMethods.get(attribute);
  if (renamed != null) {
    for (    String className : renamed.keySet()) {
      try {
        ReflectionClass renamedViewType=mClassAnalyzer.findClass(className);
        if (renamedViewType.isAssignableFrom(viewType)) {
          setterName=renamed.get(className).method;
          break;
        }
      }
 catch (      Exception e) {
      }
    }
  }
  if (setterName == null) {
    setterName=getDefaultSetter(attribute);
  }
  ReflectionMethod[] methods=viewType.getMethods(setterName,1);
  ReflectionClass bestParameterType=null;
  ReflectionMethod bestMethod=null;
  for (  ReflectionMethod method : methods) {
    ReflectionClass[] parameterTypes=method.getParameterTypes();
    if (method.getReturnType().isVoid() && !method.isStatic() && method.isPublic()) {
      ReflectionClass param=parameterTypes[0];
      if (isBetterParameter(argumentType,param,bestParameterType,true)) {
        bestParameterType=param;
        bestMethod=method;
      }
    }
  }
  return bestMethod;
}
