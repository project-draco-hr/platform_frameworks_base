{
  List<String> setterCandidates=new ArrayList<>();
  HashMap<String,MethodDescription> renamed=mStore.renamedMethods.get(attribute);
  if (renamed != null) {
    for (    String className : renamed.keySet()) {
      try {
        ModelClass renamedViewType=mClassAnalyzer.findClass(className,imports);
        if (renamedViewType.isAssignableFrom(viewType)) {
          setterCandidates.add(renamed.get(className).method);
          break;
        }
      }
 catch (      Exception e) {
      }
    }
  }
  setterCandidates.add(getDefaultSetter(attribute));
  setterCandidates.add(trimAttributeNamespace(attribute));
  ModelMethod bestMethod=null;
  for (  String name : setterCandidates) {
    ModelMethod[] methods=viewType.getMethods(name,1);
    ModelClass bestParameterType=null;
    List<ModelClass> args=new ArrayList<>();
    args.add(argumentType);
    for (    ModelMethod method : methods) {
      ModelClass[] parameterTypes=method.getParameterTypes();
      if (method.getReturnType(args).isVoid() && !method.isStatic() && method.isPublic()) {
        ModelClass param=parameterTypes[0];
        if (isBetterParameter(argumentType,param,bestParameterType,true,imports)) {
          bestParameterType=param;
          bestMethod=method;
        }
      }
    }
  }
  return bestMethod;
}
