{
  mContext=context;
  mController=controller;
  mCallback=callback;
  mSpTexts=new SpTexts(mContext);
  mKeyguard=(KeyguardManager)context.getSystemService(Context.KEYGUARD_SERVICE);
  mDialog=new CustomDialog(mContext);
  final Window window=mDialog.getWindow();
  window.requestFeature(Window.FEATURE_NO_TITLE);
  window.setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
  window.clearFlags(WindowManager.LayoutParams.FLAG_DIM_BEHIND);
  window.addFlags(WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE | WindowManager.LayoutParams.FLAG_LAYOUT_IN_SCREEN | WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL| WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED| WindowManager.LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH| WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED);
  mDialog.setCanceledOnTouchOutside(true);
  final Resources res=mContext.getResources();
  final WindowManager.LayoutParams lp=window.getAttributes();
  lp.type=windowType;
  lp.format=PixelFormat.TRANSLUCENT;
  lp.setTitle(VolumeDialog.class.getSimpleName());
  lp.gravity=Gravity.TOP | Gravity.CENTER_HORIZONTAL;
  lp.windowAnimations=R.style.VolumeDialogAnimations;
  lp.y=res.getDimensionPixelSize(R.dimen.volume_offset_top);
  lp.gravity=Gravity.TOP;
  window.setAttributes(lp);
  mActiveSliderTint=loadColorStateList(R.color.system_accent_color);
  mInactiveSliderTint=loadColorStateList(R.color.volume_slider_inactive);
  mDialog.setContentView(R.layout.volume_dialog);
  mDialogView=(ViewGroup)mDialog.findViewById(R.id.volume_dialog);
  mDialogContentView=(ViewGroup)mDialog.findViewById(R.id.volume_dialog_content);
  mExpandButton=(ImageButton)mDialogView.findViewById(R.id.volume_expand_button);
  mExpandButton.setOnClickListener(mClickExpand);
  updateWindowWidthH();
  updateExpandButtonH();
  mLayoutTransition=new LayoutTransition();
  mLayoutTransition.setDuration(new ValueAnimator().getDuration() / 2);
  mLayoutTransition.disableTransitionType(LayoutTransition.DISAPPEARING);
  mLayoutTransition.disableTransitionType(LayoutTransition.CHANGE_DISAPPEARING);
  mDialogContentView.setLayoutTransition(mLayoutTransition);
  addRow(AudioManager.STREAM_RING,R.drawable.ic_volume_ringer,R.drawable.ic_volume_ringer_mute,true);
  addRow(AudioManager.STREAM_MUSIC,R.drawable.ic_volume_media,R.drawable.ic_volume_media_mute,true);
  addRow(AudioManager.STREAM_ALARM,R.drawable.ic_volume_alarm,R.drawable.ic_volume_alarm_mute,false);
  addRow(AudioManager.STREAM_VOICE_CALL,R.drawable.ic_volume_voice,R.drawable.ic_volume_voice,false);
  addRow(AudioManager.STREAM_BLUETOOTH_SCO,R.drawable.ic_volume_bt_sco,R.drawable.ic_volume_bt_sco,false);
  addRow(AudioManager.STREAM_SYSTEM,R.drawable.ic_volume_system,R.drawable.ic_volume_system_mute,false);
  mSettingsButton=mDialog.findViewById(R.id.volume_settings_button);
  mSettingsButton.setOnClickListener(mClickSettings);
  mExpandButtonAnimationDuration=res.getInteger(R.integer.volume_expand_animation_duration);
  mZenFooter=(ZenFooter)mDialog.findViewById(R.id.volume_zen_footer);
  mZenFooter.init(zenModeController);
  mAccessibility.init();
  controller.addCallback(mControllerCallbackH,mHandler);
  controller.getState();
}
