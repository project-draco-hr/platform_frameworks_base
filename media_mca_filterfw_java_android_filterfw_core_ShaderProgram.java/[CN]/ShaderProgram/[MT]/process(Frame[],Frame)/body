{
  if (mTimer.LOG_MFF_RUNNING_TIMES) {
    mTimer.start("glFinish");
    GLES20.glFinish();
    mTimer.stop("glFinish");
  }
  GLFrame[] glInputs=new GLFrame[inputs.length];
  for (int i=0; i < inputs.length; ++i) {
    if (inputs[i] instanceof GLFrame) {
      glInputs[i]=(GLFrame)inputs[i];
    }
 else {
      throw new RuntimeException("ShaderProgram got non-GL frame as input " + i + "!");
    }
  }
  GLFrame glOutput=null;
  if (output instanceof GLFrame) {
    glOutput=(GLFrame)output;
  }
 else {
    throw new RuntimeException("ShaderProgram got non-GL output frame!");
  }
  if (mMaxTileSize > 0) {
    int xTiles=(output.getFormat().getWidth() + mMaxTileSize - 1) / mMaxTileSize;
    int yTiles=(output.getFormat().getHeight() + mMaxTileSize - 1) / mMaxTileSize;
    setShaderTileCounts(xTiles,yTiles);
  }
  if (!shaderProcess(glInputs,glOutput)) {
    throw new RuntimeException("Error executing ShaderProgram!");
  }
  if (mTimer.LOG_MFF_RUNNING_TIMES) {
    GLES20.glFinish();
  }
}
