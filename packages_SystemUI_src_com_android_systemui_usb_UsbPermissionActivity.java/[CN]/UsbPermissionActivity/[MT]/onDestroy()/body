{
  IBinder b=ServiceManager.getService(USB_SERVICE);
  IUsbManager service=IUsbManager.Stub.asInterface(b);
  Intent intent=new Intent();
  try {
    if (mDevice != null) {
      intent.putExtra(UsbManager.EXTRA_DEVICE,mDevice);
      if (mPermissionGranted) {
        service.grantDevicePermission(mDevice,mUid);
        if (mAlwaysUse.isChecked()) {
          final int userId=UserHandle.getUserId(mUid);
          service.setDevicePackage(mDevice,mPackageName,userId);
        }
      }
    }
    if (mAccessory != null) {
      intent.putExtra(UsbManager.EXTRA_ACCESSORY,mAccessory);
      if (mPermissionGranted) {
        service.grantAccessoryPermission(mAccessory,mUid);
        if (mAlwaysUse.isChecked()) {
          final int userId=UserHandle.getUserId(mUid);
          service.setAccessoryPackage(mAccessory,mPackageName,userId);
        }
      }
    }
    intent.putExtra(UsbManager.EXTRA_PERMISSION_GRANTED,mPermissionGranted);
    mPendingIntent.send(this,0,intent);
  }
 catch (  PendingIntent.CanceledException e) {
    Log.w(TAG,"PendingIntent was cancelled");
  }
catch (  RemoteException e) {
    Log.e(TAG,"IUsbService connection failed",e);
  }
  if (mDisconnectedReceiver != null) {
    unregisterReceiver(mDisconnectedReceiver);
  }
  super.onDestroy();
}
