{
  Rational moreComplicated=new Rational(5 * 78,7 * 78);
  assertEquals(new Rational(5,7),moreComplicated);
  assertEquals(5,moreComplicated.getNumerator());
  assertEquals(7,moreComplicated.getDenominator());
  Rational posInf=new Rational(5,0);
  assertEquals(1,posInf.getNumerator());
  assertEquals(0,posInf.getDenominator());
  assertEquals(POSITIVE_INFINITY,posInf);
  Rational negInf=new Rational(-100,0);
  assertEquals(-1,negInf.getNumerator());
  assertEquals(0,negInf.getDenominator());
  assertEquals(NEGATIVE_INFINITY,negInf);
  Rational zero=new Rational(0,-100);
  assertEquals(0,zero.getNumerator());
  assertEquals(1,zero.getDenominator());
  assertEquals(ZERO,zero);
  Rational flipSigns=new Rational(1,-1);
  assertEquals(-1,flipSigns.getNumerator());
  assertEquals(1,flipSigns.getDenominator());
  Rational flipAndReduce=new Rational(100,-200);
  assertEquals(-1,flipAndReduce.getNumerator());
  assertEquals(2,flipAndReduce.getDenominator());
}
