{
  Rational r=new Rational(1,2);
  assertEquals(1,r.getNumerator());
  assertEquals(2,r.getDenominator());
  assertEquals(r,r);
  assertFalse(r.equals(null));
  assertFalse(r.equals(new Object()));
  Rational twoThirds=new Rational(2,3);
  assertFalse(r.equals(twoThirds));
  assertFalse(twoThirds.equals(r));
  Rational fourSixths=new Rational(4,6);
  assertEquals(twoThirds,fourSixths);
  assertEquals(fourSixths,twoThirds);
  Rational moreComplicated=new Rational(5 * 6 * 7* 8* 9,1 * 2 * 3* 4* 5);
  Rational moreComplicated2=new Rational(5 * 6 * 7* 8* 9* 78,1 * 2 * 3* 4* 5* 78);
  assertEquals(moreComplicated,moreComplicated2);
  assertEquals(moreComplicated2,moreComplicated);
  twoThirds=new Rational(-2,3);
  fourSixths=new Rational(-4,6);
  assertEquals(twoThirds,fourSixths);
  assertEquals(fourSixths,twoThirds);
  moreComplicated=new Rational(-5 * 6 * 7* 8* 9,1 * 2 * 3* 4* 5);
  moreComplicated2=new Rational(-5 * 6 * 7* 8* 9* 78,1 * 2 * 3* 4* 5* 78);
  assertEquals(moreComplicated,moreComplicated2);
  assertEquals(moreComplicated2,moreComplicated);
}
