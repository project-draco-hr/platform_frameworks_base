{
  int mask=BluetoothReceiver.PROFILE_A2DP_FLAG;
  int a2dpMask1=(BluetoothReceiver.A2DP_STATE_CONNECTING | BluetoothReceiver.A2DP_STATE_CONNECTED | BluetoothReceiver.A2DP_STATE_PLAYING);
  int a2dpMask2=a2dpMask1 ^ BluetoothReceiver.A2DP_STATE_CONNECTED;
  int a2dpMask3=a2dpMask1 ^ BluetoothReceiver.A2DP_STATE_PLAYING;
  mBluetoothReceiver.resetFiredFlags();
  if (!adapter.isEnabled()) {
    fail("connectA2dp() bluetooth not enabled");
  }
  if (!adapter.getBondedDevices().contains(device)) {
    fail("connectA2dp() device not paired: device=" + device);
  }
  int state=mA2dp.getSinkState(device);
switch (state) {
case BluetoothA2dp.STATE_CONNECTED:
case BluetoothA2dp.STATE_PLAYING:
    assertTrue(mA2dp.isSinkConnected(device));
  return;
case BluetoothA2dp.STATE_DISCONNECTING:
case BluetoothA2dp.STATE_DISCONNECTED:
assertFalse(mA2dp.isSinkConnected(device));
assertTrue(mA2dp.connectSink(device));
break;
case BluetoothA2dp.STATE_CONNECTING:
assertFalse(mA2dp.isSinkConnected(device));
mask=a2dpMask1=a2dpMask2=a2dpMask3=0;
break;
default :
fail("connectA2dp() invalid state: state=" + state);
}
long s=System.currentTimeMillis();
while (System.currentTimeMillis() - s < CONNECT_A2DP_TIMEOUT) {
state=mA2dp.getSinkState(device);
if (state == BluetoothA2dp.STATE_CONNECTED || state == BluetoothA2dp.STATE_PLAYING) {
assertTrue(mA2dp.isSinkConnected(device));
int firedFlags=mBluetoothReceiver.getFiredFlags();
int a2dpFiredFlags=mBluetoothReceiver.getA2dpFiredFlags();
if ((mBluetoothReceiver.getFiredFlags() & mask) == mask && ((a2dpFiredFlags & a2dpMask1) == a2dpMask1 || (a2dpFiredFlags & a2dpMask2) == a2dpMask2 || (a2dpFiredFlags & a2dpMask3) == a2dpMask3)) {
mBluetoothReceiver.resetFiredFlags();
writeOutput(String.format("connectA2dp() completed in %d ms: device=%s",(System.currentTimeMillis() - s),device));
return;
}
}
sleep(POLL_TIME);
}
int firedFlags=mBluetoothReceiver.getFiredFlags();
int a2dpFiredFlags=mBluetoothReceiver.getA2dpFiredFlags();
mBluetoothReceiver.resetFiredFlags();
fail(String.format("connectA2dp() timeout: state=%d (expected %d or %d), " + "flags=0x%x (expected 0x%x), a2dpFlags=0x%x (expected 0x%x or 0x%x or 0x%x)",state,BluetoothHeadset.STATE_CONNECTED,BluetoothA2dp.STATE_PLAYING,firedFlags,mask,a2dpFiredFlags,a2dpMask1,a2dpMask2,a2dpMask3));
}
