{
  int mask=BluetoothReceiver.SCAN_MODE_CONNECTABLE_DISCOVERABLE_FLAG;
  mBluetoothReceiver.resetFiredFlags();
  if (!adapter.isEnabled()) {
    fail("discoverable() bluetooth not enabled");
  }
  int scanMode=adapter.getScanMode();
  if (scanMode == BluetoothAdapter.SCAN_MODE_CONNECTABLE_DISCOVERABLE) {
    return;
  }
  assertEquals(scanMode,BluetoothAdapter.SCAN_MODE_CONNECTABLE);
  assertTrue(adapter.setScanMode(BluetoothAdapter.SCAN_MODE_CONNECTABLE_DISCOVERABLE));
  long s=System.currentTimeMillis();
  while (System.currentTimeMillis() - s < SET_SCAN_MODE_TIMEOUT) {
    scanMode=adapter.getScanMode();
    if (scanMode == BluetoothAdapter.SCAN_MODE_CONNECTABLE_DISCOVERABLE) {
      if ((mBluetoothReceiver.getFiredFlags() & mask) == mask) {
        mBluetoothReceiver.resetFiredFlags();
        writeOutput(String.format("discoverable() completed in %d ms",(System.currentTimeMillis() - s)));
        return;
      }
    }
 else {
      assertEquals(scanMode,BluetoothAdapter.SCAN_MODE_CONNECTABLE);
    }
    sleep(POLL_TIME);
  }
  int firedFlags=mBluetoothReceiver.getFiredFlags();
  mBluetoothReceiver.resetFiredFlags();
  fail(String.format("discoverable() timeout: scanMode=%d (expected %d), flags=0x%x " + "(expected 0x%x)",scanMode,BluetoothAdapter.SCAN_MODE_CONNECTABLE_DISCOVERABLE,firedFlags,mask));
}
