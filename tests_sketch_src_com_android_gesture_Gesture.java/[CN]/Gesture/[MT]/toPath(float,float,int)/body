{
  float[] pts=RecognitionUtil.resample(this,numSample);
  RectF rect=this.getBBX();
  float scale=height / rect.height();
  Matrix matrix=new Matrix();
  matrix.setTranslate(-rect.left,-rect.top);
  Matrix scalem=new Matrix();
  scalem.setScale(scale,scale);
  matrix.postConcat(scalem);
  Matrix translate=new Matrix();
  matrix.postConcat(translate);
  matrix.mapPoints(pts);
  Path path=null;
  float mX=0, mY=0;
  for (int i=0; i < pts.length - 1; i+=2) {
    float x=pts[i];
    float y=pts[i + 1];
    if (path == null) {
      path=new Path();
      path.moveTo(x,y);
      mX=x;
      mY=y;
    }
 else {
      float dx=Math.abs(x - mX);
      float dy=Math.abs(y - mY);
      if (dx >= 3 || dy >= 3) {
        path.quadTo(mX,mY,(x + mX) / 2,(y + mY) / 2);
        mX=x;
        mY=y;
      }
    }
  }
  return path;
}
