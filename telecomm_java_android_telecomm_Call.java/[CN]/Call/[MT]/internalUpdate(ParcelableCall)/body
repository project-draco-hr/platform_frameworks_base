{
  Details details=new Details(parcelableCall.getHandle(),parcelableCall.getHandlePresentation(),parcelableCall.getCallerDisplayName(),parcelableCall.getCallerDisplayNamePresentation(),parcelableCall.getAccountHandle(),parcelableCall.getCapabilities(),parcelableCall.getDisconnectCauseCode(),parcelableCall.getDisconnectCauseMsg(),parcelableCall.getConnectTimeMillis(),parcelableCall.getGatewayInfo(),parcelableCall.getVideoState(),parcelableCall.getStatusHints());
  boolean detailsChanged=!Objects.equals(mDetails,details);
  if (detailsChanged) {
    mDetails=details;
  }
  boolean cannedTextResponsesChanged=false;
  if (mCannedTextResponses == null && parcelableCall.getCannedSmsResponses() != null && !parcelableCall.getCannedSmsResponses().isEmpty()) {
    mCannedTextResponses=Collections.unmodifiableList(parcelableCall.getCannedSmsResponses());
  }
  boolean callVideoProviderChanged=false;
  try {
    callVideoProviderChanged=!Objects.equals(mCallVideoProvider,parcelableCall.getCallVideoProvider());
    if (callVideoProviderChanged) {
      mCallVideoProvider=parcelableCall.getCallVideoProvider();
    }
  }
 catch (  RemoteException e) {
  }
  int state=stateFromParcelableCallState(parcelableCall.getState());
  boolean stateChanged=mState != state;
  if (stateChanged) {
    mState=state;
  }
  if (parcelableCall.getParentCallId() != null) {
    mParent=mPhone.internalGetCallByTelecommId(parcelableCall.getParentCallId());
  }
  mChildren.clear();
  if (parcelableCall.getChildCallIds() != null) {
    for (int i=0; i < parcelableCall.getChildCallIds().size(); i++) {
      mChildren.add(mPhone.internalGetCallByTelecommId(parcelableCall.getChildCallIds().get(i)));
    }
  }
  if (stateChanged) {
    fireStateChanged(mState);
  }
  if (detailsChanged) {
    fireDetailsChanged(mDetails);
  }
  if (cannedTextResponsesChanged) {
    fireCannedTextResponsesLoaded(mCannedTextResponses);
  }
  if (callVideoProviderChanged) {
    fireCallVideoProviderChanged(mCallVideoProvider);
  }
  if (mState == STATE_DISCONNECTED) {
    fireCallDestroyed();
    mPhone.internalRemoveCall(this);
  }
}
