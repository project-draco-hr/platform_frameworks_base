{
  Properties properties=null;
  File file=new File(filename);
  if (!file.exists()) {
    throw new IOException(filename + " not found ! ");
  }
  if (VideoEditor.MAX_SUPPORTED_FILE_SIZE <= file.length()) {
    throw new IllegalArgumentException("File size is more than 2GB");
  }
  if (editor instanceof VideoEditorImpl) {
    mMANativeHelper=((VideoEditorImpl)editor).getNativeContext();
  }
 else {
    throw new IllegalArgumentException("editor is not of type VideoEditorImpl");
  }
  try {
    properties=mMANativeHelper.getMediaProperties(filename);
  }
 catch (  Exception e) {
    throw new IllegalArgumentException(e.getMessage() + " : " + filename);
  }
  int fileType=mMANativeHelper.getFileType(properties.fileType);
switch (fileType) {
case MediaProperties.FILE_3GP:
case MediaProperties.FILE_MP4:
case MediaProperties.FILE_MP3:
case MediaProperties.FILE_AMR:
    break;
default :
{
    throw new IllegalArgumentException("Unsupported input file type: " + fileType);
  }
}
switch (mMANativeHelper.getAudioCodecType(properties.audioFormat)) {
case MediaProperties.ACODEC_AMRNB:
case MediaProperties.ACODEC_AMRWB:
case MediaProperties.ACODEC_AAC_LC:
case MediaProperties.ACODEC_MP3:
break;
default :
throw new IllegalArgumentException("Unsupported Audio Codec Format in Input File");
}
if (endMs == MediaItem.END_OF_FILE) {
endMs=properties.audioDuration;
}
mUniqueId=audioTrackId;
mFilename=filename;
mStartTimeMs=startTimeMs;
mDurationMs=properties.audioDuration;
mAudioChannels=properties.audioChannels;
mAudioBitrate=properties.audioBitrate;
mAudioSamplingFrequency=properties.audioSamplingFrequency;
mAudioType=properties.audioFormat;
mTimelineDurationMs=endMs - beginMs;
mVolumePercent=volume;
mBeginBoundaryTimeMs=beginMs;
mEndBoundaryTimeMs=endMs;
mLoop=loop;
mMuted=muted;
mIsDuckingEnabled=duckingEnabled;
mDuckingThreshold=duckThreshold;
mDuckedTrackVolume=duckedTrackVolume;
mAudioWaveformFilename=audioWaveformFilename;
if (audioWaveformFilename != null) {
mWaveformData=new SoftReference<WaveformData>(new WaveformData(audioWaveformFilename));
}
 else {
mWaveformData=null;
}
}
