{
  DragState[] ds;
switch (event.getAction()) {
case MotionEvent.ACTION_DOWN:
    ds=buffer.getSpans(0,buffer.length(),DragState.class);
  for (int i=0; i < ds.length; i++) {
    buffer.removeSpan(ds[i]);
  }
buffer.setSpan(new DragState(event.getX(),event.getY(),widget.getScrollX(),widget.getScrollY()),0,0,Spannable.SPAN_MARK_MARK);
return true;
case MotionEvent.ACTION_UP:
ds=buffer.getSpans(0,buffer.length(),DragState.class);
for (int i=0; i < ds.length; i++) {
buffer.removeSpan(ds[i]);
}
if (ds.length > 0 && ds[0].mUsed) {
return true;
}
 else {
return false;
}
case MotionEvent.ACTION_MOVE:
ds=buffer.getSpans(0,buffer.length(),DragState.class);
if (ds.length > 0) {
if (ds[0].mFarEnough == false) {
int slop=ViewConfiguration.get(widget.getContext()).getScaledTouchSlop();
if (Math.abs(event.getX() - ds[0].mX) >= slop || Math.abs(event.getY() - ds[0].mY) >= slop) {
ds[0].mFarEnough=true;
}
}
if (ds[0].mFarEnough) {
ds[0].mUsed=true;
float dx=ds[0].mX - event.getX();
float dy=ds[0].mY - event.getY();
ds[0].mX=event.getX();
ds[0].mY=event.getY();
int nx=widget.getScrollX() + (int)dx;
int ny=widget.getScrollY() + (int)dy;
int padding=widget.getTotalPaddingTop() + widget.getTotalPaddingBottom();
Layout layout=widget.getLayout();
ny=Math.min(ny,layout.getHeight() - (widget.getHeight() - padding));
ny=Math.max(ny,0);
scrollTo(widget,layout,nx,ny);
widget.cancelLongPress();
return true;
}
}
}
return false;
}
