{
  if (false)   return createFailChunk(123,"This is a test");
  ByteBuffer in=wrapChunk(request);
  int serverProtoVers=in.getInt();
  if (false)   Log.v("ddm-hello","Server version is " + serverProtoVers);
  String vmName=System.getProperty("java.vm.name","?");
  String vmVersion=System.getProperty("java.vm.version","?");
  String vmIdent=vmName + " v" + vmVersion;
  String appName=DdmHandleAppName.getAppName();
  VMRuntime vmRuntime=VMRuntime.getRuntime();
  String instructionSetDescription=vmRuntime.is64Bit() ? "64-bit" : "32-bit";
  String vmInstructionSet=vmRuntime.vmInstructionSet();
  if (vmInstructionSet != null && vmInstructionSet.length() > 0) {
    instructionSetDescription+=" (" + vmInstructionSet + ")";
  }
  String vmFlags="CheckJNI=" + (vmRuntime.isCheckJniEnabled() ? "true" : "false");
  ByteBuffer out=ByteBuffer.allocate(28 + vmIdent.length() * 2 + appName.length() * 2 + instructionSetDescription.length() * 2 + vmFlags.length() * 2);
  out.order(ChunkHandler.CHUNK_ORDER);
  out.putInt(DdmServer.CLIENT_PROTOCOL_VERSION);
  out.putInt(android.os.Process.myPid());
  out.putInt(vmIdent.length());
  out.putInt(appName.length());
  putString(out,vmIdent);
  putString(out,appName);
  out.putInt(UserHandle.myUserId());
  out.putInt(instructionSetDescription.length());
  putString(out,instructionSetDescription);
  out.putInt(vmFlags.length());
  putString(out,vmFlags);
  Chunk reply=new Chunk(CHUNK_HELO,out);
  if (Debug.waitingForDebugger())   sendWAIT(0);
  return reply;
}
