{
  BridgeContext bridgeContext=(BridgeContext)mContext;
  RenderResources res=bridgeContext.getRenderResources();
  ResourceValue value=res.findItemInTheme(themeEntryName,true);
  value=res.resolveResValue(value);
  if (value instanceof StyleResourceValue == false) {
    return;
  }
  StyleResourceValue style=(StyleResourceValue)value;
  ResourceValue backgroundValue=res.findItemInStyle(style,"background",true);
  backgroundValue=res.resolveResValue(backgroundValue);
  if (backgroundValue != null) {
    Drawable d=ResourceHelper.getDrawable(backgroundValue,bridgeContext);
    if (d != null) {
      setBackground(d);
    }
  }
  TextView textView=getStyleableTextView();
  if (textView != null) {
    ResourceValue textStyleValue=res.findItemInStyle(style,"titleTextStyle",true);
    textStyleValue=res.resolveResValue(textStyleValue);
    if (textStyleValue instanceof StyleResourceValue) {
      StyleResourceValue textStyle=(StyleResourceValue)textStyleValue;
      ResourceValue textSize=res.findItemInStyle(textStyle,"textSize",true);
      textSize=res.resolveResValue(textSize);
      if (textSize != null) {
        TypedValue out=new TypedValue();
        if (ResourceHelper.parseFloatAttribute("textSize",textSize.getValue(),out,true)) {
          textView.setTextSize(TypedValue.COMPLEX_UNIT_PX,out.getDimension(bridgeContext.getResources().getDisplayMetrics()));
        }
      }
      ResourceValue textColor=res.findItemInStyle(textStyle,"textColor",true);
      textColor=res.resolveResValue(textColor);
      if (textColor != null) {
        ColorStateList stateList=ResourceHelper.getColorStateList(textColor,bridgeContext);
        if (stateList != null) {
          textView.setTextColor(stateList);
        }
      }
    }
  }
}
