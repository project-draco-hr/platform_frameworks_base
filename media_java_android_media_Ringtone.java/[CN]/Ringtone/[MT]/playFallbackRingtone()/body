{
  if (mAudioManager.getStreamVolume(AudioAttributes.toLegacyStreamType(mAudioAttributes)) != 0) {
    int ringtoneType=RingtoneManager.getDefaultType(mUri);
    if (ringtoneType == -1 || RingtoneManager.getActualDefaultRingtoneUri(mContext,ringtoneType) != null) {
      try {
        AssetFileDescriptor afd=mContext.getResources().openRawResourceFd(com.android.internal.R.raw.fallbackring);
        if (afd != null) {
          mLocalPlayer=new MediaPlayer();
          if (afd.getDeclaredLength() < 0) {
            mLocalPlayer.setDataSource(afd.getFileDescriptor());
          }
 else {
            mLocalPlayer.setDataSource(afd.getFileDescriptor(),afd.getStartOffset(),afd.getDeclaredLength());
          }
          mLocalPlayer.setAudioAttributes(mAudioAttributes);
synchronized (mPlaybackSettingsLock) {
            applyPlaybackProperties_sync();
          }
          mLocalPlayer.prepare();
          startLocalPlayer();
          afd.close();
          return true;
        }
 else {
          Log.e(TAG,"Could not load fallback ringtone");
        }
      }
 catch (      IOException ioe) {
        destroyLocalPlayer();
        Log.e(TAG,"Failed to open fallback ringtone");
      }
catch (      NotFoundException nfe) {
        Log.e(TAG,"Fallback ringtone does not exist");
      }
    }
 else {
      Log.w(TAG,"not playing fallback for " + mUri);
    }
  }
  return false;
}
