{
  int size=parent.mPendingAnimations.size();
  long startDelay=parent.getStartDelay();
  long duration=parent.getDuration();
  TimeInterpolator interpolator=parent.getInterpolator();
  if (interpolator == null) {
    interpolator=sLinearInterpolator;
  }
  if (!RenderNodeAnimator.isNativeInterpolator(interpolator)) {
    interpolator=new FallbackLUTInterpolator(interpolator,duration);
  }
  for (int i=0; i < size; i++) {
    NameValuesHolder holder=parent.mPendingAnimations.get(i);
    int property=RenderNodeAnimator.mapViewPropertyToRenderProperty(holder.mNameConstant);
    final float finalValue=holder.mFromValue + holder.mDeltaValue;
    RenderNodeAnimator animator=new RenderNodeAnimatorCompat(property,finalValue);
    animator.setStartDelay(startDelay);
    animator.setDuration(duration);
    animator.setInterpolator(interpolator);
    animator.setTarget(mView);
    animator.start();
    mAnimators[property]=animator;
  }
  parent.mPendingAnimations.clear();
}
