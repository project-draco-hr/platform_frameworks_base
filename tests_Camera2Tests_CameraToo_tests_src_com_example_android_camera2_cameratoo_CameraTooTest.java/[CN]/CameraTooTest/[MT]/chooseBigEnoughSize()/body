{
  Size empty=new Size(0,0), fatAndFlat=new Size(100,0), tallAndThin=new Size(0,100);
  Size smallSquare=new Size(4,4), horizRect=new Size(8,2), vertRect=new Size(2,8);
  Size largeSquare=new Size(5,5);
  Size[] siz={empty,fatAndFlat,tallAndThin,smallSquare,horizRect,vertRect,largeSquare};
  assertOptimalSize(siz,0,0,empty);
  assertOptimalSize(siz,1,0,fatAndFlat);
  assertOptimalSize(siz,0,1,tallAndThin);
  assertOptimalSize(siz,4,4,smallSquare);
  assertOptimalSize(siz,1,1,smallSquare);
  assertOptimalSize(siz,2,1,smallSquare);
  assertOptimalSize(siz,1,2,smallSquare);
  assertOptimalSize(siz,3,4,smallSquare);
  assertOptimalSize(siz,4,3,smallSquare);
  assertOptimalSize(siz,8,2,horizRect);
  assertOptimalSize(siz,5,1,horizRect);
  assertOptimalSize(siz,5,2,horizRect);
  assertOptimalSize(siz,2,8,vertRect);
  assertOptimalSize(siz,1,5,vertRect);
  assertOptimalSize(siz,2,5,vertRect);
  assertOptimalSize(siz,5,5,largeSquare);
  assertOptimalSize(siz,3,5,largeSquare);
  assertOptimalSize(siz,5,3,largeSquare);
}
