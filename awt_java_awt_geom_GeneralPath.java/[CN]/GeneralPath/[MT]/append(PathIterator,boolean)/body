{
  while (!path.isDone()) {
    float coords[]=new float[6];
switch (path.currentSegment(coords)) {
case PathIterator.SEG_MOVETO:
      if (!connect || typeSize == 0) {
        moveTo(coords[0],coords[1]);
        break;
      }
    if (types[typeSize - 1] != PathIterator.SEG_CLOSE && points[pointSize - 2] == coords[0] && points[pointSize - 1] == coords[1]) {
      break;
    }
case PathIterator.SEG_LINETO:
  lineTo(coords[0],coords[1]);
break;
case PathIterator.SEG_QUADTO:
quadTo(coords[0],coords[1],coords[2],coords[3]);
break;
case PathIterator.SEG_CUBICTO:
curveTo(coords[0],coords[1],coords[2],coords[3],coords[4],coords[5]);
break;
case PathIterator.SEG_CLOSE:
closePath();
break;
}
path.next();
connect=false;
}
}
