{
switch (msg.what) {
case AsyncChannel.CMD_CHANNEL_HALF_CONNECTED:
{
      if (msg.arg1 == AsyncChannel.STATUS_SUCCESSFUL) {
        if (DBG)         Slog.d(TAG,"New client listening to asynchronous messages");
        mTrafficPoller.addClient(msg.replyTo);
      }
 else {
        Slog.e(TAG,"Client connection failure, error=" + msg.arg1);
      }
      break;
    }
case AsyncChannel.CMD_CHANNEL_DISCONNECTED:
{
    if (msg.arg1 == AsyncChannel.STATUS_SEND_UNSUCCESSFUL) {
      if (DBG)       Slog.d(TAG,"Send failed, client connection lost");
    }
 else {
      if (DBG)       Slog.d(TAG,"Client connection lost with reason: " + msg.arg1);
    }
    mTrafficPoller.removeClient(msg.replyTo);
    break;
  }
case AsyncChannel.CMD_CHANNEL_FULL_CONNECTION:
{
  AsyncChannel ac=new AsyncChannel();
  ac.connect(mContext,this,msg.replyTo);
  break;
}
case WifiManager.CONNECT_NETWORK:
case WifiManager.SAVE_NETWORK:
{
WifiConfiguration config=(WifiConfiguration)msg.obj;
if (config.isValid()) {
  mWifiStateMachine.sendMessage(Message.obtain(msg));
}
 else {
  Slog.d(TAG,"ClientHandler.handleMessage ignoring msg=" + msg);
  if (msg.what == WifiManager.CONNECT_NETWORK) {
    replyFailed(msg,WifiManager.CONNECT_NETWORK_FAILED);
  }
 else {
    replyFailed(msg,WifiManager.SAVE_NETWORK_FAILED);
  }
}
break;
}
case WifiManager.FORGET_NETWORK:
case WifiManager.START_WPS:
case WifiManager.CANCEL_WPS:
case WifiManager.DISABLE_NETWORK:
case WifiManager.RSSI_PKTCNT_FETCH:
{
mWifiStateMachine.sendMessage(Message.obtain(msg));
break;
}
default :
{
Slog.d(TAG,"ClientHandler.handleMessage ignoring msg=" + msg);
break;
}
}
}
