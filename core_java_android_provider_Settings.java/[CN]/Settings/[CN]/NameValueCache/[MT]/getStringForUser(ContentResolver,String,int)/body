{
  final boolean isSelf=(userHandle == UserHandle.myUserId());
  if (isSelf) {
synchronized (this) {
      if (mGenerationTracker != null) {
        if (mGenerationTracker.isGenerationChanged()) {
          if (DEBUG) {
            Log.i(TAG,"Generation changed for type:" + mUri.getPath() + " in package:"+ cr.getPackageName()+ " and user:"+ userHandle);
          }
          mValues.clear();
        }
 else         if (mValues.containsKey(name)) {
          return mValues.get(name);
        }
      }
    }
  }
 else {
    if (LOCAL_LOGV)     Log.v(TAG,"get setting for user " + userHandle + " by user "+ UserHandle.myUserId()+ " so skipping cache");
  }
  IContentProvider cp=lazyGetProvider(cr);
  if (mCallGetCommand != null) {
    try {
      Bundle args=null;
      if (!isSelf) {
        args=new Bundle();
        args.putInt(CALL_METHOD_USER_KEY,userHandle);
      }
      boolean needsGenerationTracker=false;
synchronized (this) {
        if (isSelf && mGenerationTracker == null) {
          needsGenerationTracker=true;
          if (args == null) {
            args=new Bundle();
          }
          args.putString(CALL_METHOD_TRACK_GENERATION_KEY,null);
          if (DEBUG) {
            Log.i(TAG,"Requested generation tracker for type: " + mUri.getPath() + " in package:"+ cr.getPackageName()+ " and user:"+ userHandle);
          }
        }
      }
      Bundle b=cp.call(cr.getPackageName(),mCallGetCommand,name,args);
      if (b != null) {
        String value=b.getString(Settings.NameValueTable.VALUE);
        if (isSelf) {
synchronized (this) {
            if (needsGenerationTracker) {
              MemoryIntArray array=b.getParcelable(CALL_METHOD_TRACK_GENERATION_KEY);
              final int index=b.getInt(CALL_METHOD_GENERATION_INDEX_KEY,-1);
              if (array != null && index >= 0) {
                if (DEBUG) {
                  Log.i(TAG,"Received generation tracker for type:" + mUri.getPath() + " in package:"+ cr.getPackageName()+ " and user:"+ userHandle+ " with index:"+ index);
                }
                mGenerationTracker=new GenerationTracker(array,index);
              }
            }
            mValues.put(name,value);
          }
        }
 else {
          if (LOCAL_LOGV)           Log.i(TAG,"call-query of user " + userHandle + " by "+ UserHandle.myUserId()+ " so not updating cache");
        }
        return value;
      }
    }
 catch (    RemoteException e) {
    }
  }
  Cursor c=null;
  try {
    c=cp.query(cr.getPackageName(),mUri,SELECT_VALUE,NAME_EQ_PLACEHOLDER,new String[]{name},null,null);
    if (c == null) {
      Log.w(TAG,"Can't get key " + name + " from "+ mUri);
      return null;
    }
    String value=c.moveToNext() ? c.getString(0) : null;
synchronized (this) {
      mValues.put(name,value);
    }
    if (LOCAL_LOGV) {
      Log.v(TAG,"cache miss [" + mUri.getLastPathSegment() + "]: "+ name+ " = "+ (value == null ? "(null)" : value));
    }
    return value;
  }
 catch (  RemoteException e) {
    Log.w(TAG,"Can't get key " + name + " from "+ mUri,e);
    return null;
  }
 finally {
    if (c != null)     c.close();
  }
}
