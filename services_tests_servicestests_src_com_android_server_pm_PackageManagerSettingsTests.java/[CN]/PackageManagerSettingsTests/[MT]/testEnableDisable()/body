{
  writeOldFiles();
  Settings settings=new Settings(getContext(),getContext().getFilesDir(),new Object());
  assertEquals(true,settings.readLPw(null,null,0,false));
  PackageSetting ps=settings.peekPackageLPr(PACKAGE_NAME_1);
  ps.setEnabled(COMPONENT_ENABLED_STATE_DISABLED,0,null);
  ps.setEnabled(COMPONENT_ENABLED_STATE_ENABLED,1,null);
  assertEquals(COMPONENT_ENABLED_STATE_DISABLED,ps.getEnabled(0));
  assertEquals(COMPONENT_ENABLED_STATE_ENABLED,ps.getEnabled(1));
  ArraySet<String> components=new ArraySet<String>();
  String component1=PACKAGE_NAME_1 + "/.Component1";
  components.add(component1);
  ps.setDisabledComponents(components,0);
  ArraySet<String> componentsDisabled=ps.getDisabledComponents(0);
  assertEquals(1,componentsDisabled.size());
  assertEquals(component1,componentsDisabled.toArray()[0]);
  boolean hasEnabled=ps.getEnabledComponents(0) != null && ps.getEnabledComponents(1).size() > 0;
  assertEquals(false,hasEnabled);
  boolean hasDisabled=ps.getDisabledComponents(1) != null && ps.getDisabledComponents(1).size() > 0;
  assertEquals(false,hasDisabled);
  ps.setEnabledComponents(components,1);
  assertEquals(1,ps.getEnabledComponents(1).size());
  hasEnabled=ps.getEnabledComponents(0) != null && ps.getEnabledComponents(0).size() > 0;
  assertEquals(false,hasEnabled);
}
