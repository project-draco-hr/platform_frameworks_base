{
  mTestPool.setMaxPoolSize(MAX_CONN);
  assertEquals(MAX_CONN,mTestPool.getMaxPoolSize());
  HashMap<String,SQLiteDatabase> dbObjs=new HashMap<String,SQLiteDatabase>();
  for (int i=0; i < MAX_CONN; i++) {
    SQLiteDatabase db=mTestPool.get(TEST_SQLS[i]);
    executeSqlOnDatabaseConn(db,TEST_SQLS[i]);
    assertFalse(dbObjs.values().contains(db));
    dbObjs.put(TEST_SQLS[i],db);
  }
  assertEquals(0,mTestPool.getFreePoolSize());
  assertEquals(MAX_CONN,mTestPool.getSize());
  assertEquals(MAX_CONN,mTestPool.getMaxPoolSize());
  String testSql=TEST_SQLS[MAX_CONN - 1];
  SQLiteDatabase db1=mTestPool.get(testSql);
  assertEquals(0,mTestPool.getFreePoolSize());
  assertEquals(MAX_CONN,mTestPool.getSize());
  assertEquals(MAX_CONN,mTestPool.getMaxPoolSize());
  assertTrue(dbObjs.values().contains(db1));
  assertEquals(db1,dbObjs.get(testSql));
  SQLiteDatabase db2=mTestPool.get(testSql);
  assertEquals(db2,dbObjs.get(testSql));
  assertEquals(0,mTestPool.getFreePoolSize());
  assertEquals(MAX_CONN,mTestPool.getSize());
  assertEquals(MAX_CONN,mTestPool.getMaxPoolSize());
  mTestPool.release(db1);
  assertFalse(mTestPool.isDatabaseObjFree(dbObjs.get(testSql)));
  assertEquals(0,mTestPool.getFreePoolSize());
  assertEquals(MAX_CONN,mTestPool.getSize());
  assertEquals(MAX_CONN,mTestPool.getMaxPoolSize());
  mTestPool.release(db2);
  assertFalse(mTestPool.isDatabaseObjFree(dbObjs.get(testSql)));
  assertEquals(0,mTestPool.getFreePoolSize());
  assertEquals(MAX_CONN,mTestPool.getSize());
  assertEquals(MAX_CONN,mTestPool.getMaxPoolSize());
  for (int i=0; i < MAX_CONN; i++) {
    mTestPool.release(dbObjs.get(TEST_SQLS[i]));
  }
  assertEquals(MAX_CONN,mTestPool.getFreePoolSize());
  assertEquals(MAX_CONN,mTestPool.getSize());
  assertEquals(MAX_CONN,mTestPool.getMaxPoolSize());
}
