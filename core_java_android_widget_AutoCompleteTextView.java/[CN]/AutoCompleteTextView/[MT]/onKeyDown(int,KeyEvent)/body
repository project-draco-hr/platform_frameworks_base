{
  if (isPopupShowing()) {
    if (keyCode != KeyEvent.KEYCODE_SPACE && (mDropDownList.getSelectedItemPosition() >= 0 || (keyCode != KeyEvent.KEYCODE_ENTER && keyCode != KeyEvent.KEYCODE_DPAD_CENTER))) {
      int curIndex=mDropDownList.getSelectedItemPosition();
      boolean consumed;
      final boolean below=!mPopup.isAboveAnchor();
      if ((below && keyCode == KeyEvent.KEYCODE_DPAD_UP && curIndex <= 0) || (!below && keyCode == KeyEvent.KEYCODE_DPAD_DOWN && curIndex >= mDropDownList.getAdapter().getCount() - 1)) {
        mDropDownList.hideSelector();
        mDropDownList.requestLayout();
        mPopup.setInputMethodMode(PopupWindow.INPUT_METHOD_NEEDED);
        mPopup.update();
        return true;
      }
      consumed=mDropDownList.onKeyDown(keyCode,event);
      if (DEBUG)       Log.v(TAG,"Key down: code=" + keyCode + " list consumed="+ consumed);
      if (consumed) {
        mPopup.setInputMethodMode(PopupWindow.INPUT_METHOD_NOT_NEEDED);
        mDropDownList.requestFocusFromTouch();
        mPopup.update();
switch (keyCode) {
case KeyEvent.KEYCODE_ENTER:
case KeyEvent.KEYCODE_DPAD_CENTER:
case KeyEvent.KEYCODE_DPAD_DOWN:
case KeyEvent.KEYCODE_DPAD_UP:
          return true;
      }
    }
 else {
      if (below && keyCode == KeyEvent.KEYCODE_DPAD_DOWN) {
        Adapter adapter=mDropDownList.getAdapter();
        if (adapter != null && curIndex == adapter.getCount() - 1) {
          return true;
        }
      }
 else       if (!below && keyCode == KeyEvent.KEYCODE_DPAD_UP && curIndex == 0) {
        return true;
      }
    }
  }
}
 else {
switch (keyCode) {
case KeyEvent.KEYCODE_DPAD_DOWN:
    performValidation();
}
}
mLastKeyCode=keyCode;
boolean handled=super.onKeyDown(keyCode,event);
mLastKeyCode=KeyEvent.KEYCODE_UNKNOWN;
if (handled && isPopupShowing() && mDropDownList != null) {
clearListSelection();
}
return handled;
}
