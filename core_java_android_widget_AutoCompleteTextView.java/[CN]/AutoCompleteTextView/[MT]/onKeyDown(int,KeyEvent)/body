{
  if (isPopupShowing()) {
    if (keyCode == KeyEvent.KEYCODE_BACK) {
      dismissDropDown();
      return true;
    }
 else     if (keyCode != KeyEvent.KEYCODE_SPACE) {
      boolean consumed=mDropDownList.onKeyDown(keyCode,event);
      if (consumed) {
switch (keyCode) {
case KeyEvent.KEYCODE_ENTER:
case KeyEvent.KEYCODE_DPAD_CENTER:
case KeyEvent.KEYCODE_DPAD_DOWN:
case KeyEvent.KEYCODE_DPAD_UP:
          return true;
      }
    }
 else {
      int index=mDropDownList.getSelectedItemPosition();
switch (keyCode) {
case KeyEvent.KEYCODE_DPAD_UP:
        if (index == 0) {
          return true;
        }
      break;
case KeyEvent.KEYCODE_DPAD_DOWN:
    Adapter adapter=mDropDownList.getAdapter();
  if (index == adapter.getCount() - 1) {
    return true;
  }
break;
}
}
}
}
 else {
switch (keyCode) {
case KeyEvent.KEYCODE_DPAD_DOWN:
performValidation();
}
}
boolean openBefore=isPopupShowing();
mTextChanged=false;
boolean handled=super.onKeyDown(keyCode,event);
if (openBefore && !isPopupShowing()) {
return handled;
}
if (mTextChanged) {
if (enoughToFilter()) {
if (mFilter != null) {
performFiltering(getText(),keyCode);
}
}
 else {
dismissDropDown();
if (mFilter != null) {
mFilter.filter(null);
}
}
return true;
}
return handled;
}
