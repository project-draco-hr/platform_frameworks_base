{
  final int indentLength=mIndentBuilder.length();
  final int bufferEnd=offset + count;
  int lineStart=offset;
  int lineEnd=offset;
  while (lineEnd < bufferEnd) {
    char ch=buf[lineEnd++];
    mCurrentLength++;
    if (ch == '\n') {
      maybeWriteIndent();
      super.write(buf,lineStart,lineEnd - lineStart);
      lineStart=lineEnd;
      mEmptyLine=true;
      mCurrentLength=0;
    }
    if (mWrapLength > 0 && mCurrentLength >= mWrapLength - indentLength) {
      if (!mEmptyLine) {
        super.write('\n');
        mEmptyLine=true;
        mCurrentLength=lineEnd - lineStart;
      }
 else {
        maybeWriteIndent();
        super.write(buf,lineStart,lineEnd - lineStart);
        super.write('\n');
        mEmptyLine=true;
        lineStart=lineEnd;
        mCurrentLength=0;
      }
    }
  }
  if (lineStart != lineEnd) {
    maybeWriteIndent();
    super.write(buf,lineStart,lineEnd - lineStart);
  }
}
