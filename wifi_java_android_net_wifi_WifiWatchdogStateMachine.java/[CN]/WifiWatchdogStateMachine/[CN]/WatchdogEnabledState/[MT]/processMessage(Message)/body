{
switch (msg.what) {
case EVENT_WATCHDOG_TOGGLED:
    if (!isWatchdogEnabled())     transitionTo(mWatchdogDisabledState);
  break;
case EVENT_NETWORK_STATE_CHANGE:
Intent intent=(Intent)msg.obj;
NetworkInfo networkInfo=(NetworkInfo)intent.getParcelableExtra(WifiManager.EXTRA_NETWORK_INFO);
if (DBG) log("network state change " + networkInfo.getDetailedState());
switch (networkInfo.getDetailedState()) {
case VERIFYING_POOR_LINK:
mLinkProperties=(LinkProperties)intent.getParcelableExtra(WifiManager.EXTRA_LINK_PROPERTIES);
mWifiInfo=(WifiInfo)intent.getParcelableExtra(WifiManager.EXTRA_WIFI_INFO);
if (mPoorNetworkDetectionEnabled) {
if (mWifiInfo == null) {
log("Ignoring link verification, mWifiInfo is NULL");
mWsmChannel.sendMessage(GOOD_LINK_DETECTED);
}
 else {
transitionTo(mVerifyingLinkState);
}
}
 else {
mWsmChannel.sendMessage(GOOD_LINK_DETECTED);
}
break;
case CONNECTED:
if (shouldCheckWalledGarden()) {
transitionTo(mWalledGardenCheckState);
}
 else {
transitionTo(mOnlineWatchState);
}
break;
default :
transitionTo(mNotConnectedState);
break;
}
break;
case EVENT_WIFI_RADIO_STATE_CHANGE:
if ((Integer)msg.obj == WifiManager.WIFI_STATE_DISABLING) {
if (DBG) log("WifiStateDisabling -- Resetting WatchdogState");
transitionTo(mNotConnectedState);
}
break;
default :
return NOT_HANDLED;
}
setWalledGardenNotificationVisible(false);
return HANDLED;
}
