{
  Intent intent;
switch (msg.what) {
case EVENT_WATCHDOG_TOGGLED:
    if (!isWatchdogEnabled())     transitionTo(mWatchdogDisabledState);
  break;
case EVENT_NETWORK_STATE_CHANGE:
intent=(Intent)msg.obj;
NetworkInfo networkInfo=(NetworkInfo)intent.getParcelableExtra(WifiManager.EXTRA_NETWORK_INFO);
if (DBG) logd("Network state change " + networkInfo.getDetailedState());
mWifiInfo=(WifiInfo)intent.getParcelableExtra(WifiManager.EXTRA_WIFI_INFO);
updateCurrentBssid(mWifiInfo != null ? mWifiInfo.getBSSID() : null);
switch (networkInfo.getDetailedState()) {
case VERIFYING_POOR_LINK:
mLinkProperties=(LinkProperties)intent.getParcelableExtra(WifiManager.EXTRA_LINK_PROPERTIES);
if (mPoorNetworkDetectionEnabled) {
if (mWifiInfo == null || mCurrentBssid == null) {
loge("Ignore, wifiinfo " + mWifiInfo + " bssid "+ mCurrentBssid);
sendLinkStatusNotification(true);
}
 else {
transitionTo(mVerifyingLinkState);
}
}
 else {
sendLinkStatusNotification(true);
}
break;
case CONNECTED:
transitionTo(mOnlineWatchState);
break;
default :
transitionTo(mNotConnectedState);
break;
}
break;
case EVENT_SUPPLICANT_STATE_CHANGE:
intent=(Intent)msg.obj;
SupplicantState supplicantState=(SupplicantState)intent.getParcelableExtra(WifiManager.EXTRA_NEW_STATE);
if (supplicantState == SupplicantState.COMPLETED) {
mWifiInfo=mWifiManager.getConnectionInfo();
updateCurrentBssid(mWifiInfo.getBSSID());
}
break;
case EVENT_WIFI_RADIO_STATE_CHANGE:
if ((Integer)msg.obj == WifiManager.WIFI_STATE_DISABLING) transitionTo(mNotConnectedState);
break;
default :
return NOT_HANDLED;
}
return HANDLED;
}
