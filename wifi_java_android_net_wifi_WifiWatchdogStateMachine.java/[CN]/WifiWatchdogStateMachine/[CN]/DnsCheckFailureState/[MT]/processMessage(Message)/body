{
  if (msg.what != MESSAGE_HANDLE_BAD_AP) {
    return NOT_HANDLED;
  }
  if (msg.arg1 != mNetEventCounter) {
    if (VDBG) {
      Slog.v(WWSM_TAG,"Msg out of sync, ignoring...");
    }
    return HANDLED;
  }
  if (mDisableAPNextFailure || mNumCheckFailures >= mBssids.size() || mNumCheckFailures >= mMaxSsidBlacklists) {
    if (hasNoMobileData()) {
      Slog.w(WWSM_TAG,"Would disable bad network, but device has no mobile data!" + "  Going idle...");
      transitionTo(mNotConnectedState);
      return HANDLED;
    }
    Slog.i(WWSM_TAG,"Disabling current SSID " + wifiInfoToStr(mConnectionInfo) + ".  "+ "numCheckFailures "+ mNumCheckFailures+ ", numAPs "+ mBssids.size());
    int networkId=mConnectionInfo.getNetworkId();
    if (!mHasConnectedWifiManager) {
      mWifiManager.asyncConnect(mContext,getHandler());
      mHasConnectedWifiManager=true;
    }
    mWifiManager.disableNetwork(networkId,WifiConfiguration.DISABLED_DNS_FAILURE);
    if (mShowDisabledNotification && mConnectionInfo.isExplicitConnect()) {
      displayDisabledNetworkNotification(mConnectionInfo.getSSID());
    }
    transitionTo(mNotConnectedState);
  }
 else {
    Slog.i(WWSM_TAG,"Blacklisting current BSSID.  " + wifiInfoToStr(mConnectionInfo) + "numCheckFailures "+ mNumCheckFailures+ ", numAPs "+ mBssids.size());
    mWifiManager.addToBlacklist(mConnectionInfo.getBSSID());
    mWifiManager.reassociate();
    transitionTo(mBlacklistedApState);
  }
  return HANDLED;
}
