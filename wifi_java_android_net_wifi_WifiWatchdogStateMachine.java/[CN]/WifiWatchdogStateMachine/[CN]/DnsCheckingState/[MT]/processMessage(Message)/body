{
  if (msg.what != MESSAGE_CHECK_STEP) {
    return NOT_HANDLED;
  }
  if (msg.arg1 != mNetEventCounter) {
    Slog.d(WWSM_TAG,"Check step out of sync, ignoring...");
    return HANDLED;
  }
  long pingResponseTime=mDnsPinger.pingDns(mDnsPinger.getDns(),mDnsPingTimeoutMs);
  dnsCheckTries++;
  if (pingResponseTime >= 0)   dnsCheckSuccesses++;
  if (DBG) {
    if (pingResponseTime >= 0) {
      dnsCheckLogStr+="|" + pingResponseTime;
    }
 else {
      dnsCheckLogStr+="|x";
    }
  }
  if (VDBG) {
    Slog.v(WWSM_TAG,dnsCheckLogStr);
  }
  if (dnsCheckSuccesses >= mMinDnsResponses) {
    if (DBG) {
      Slog.d(WWSM_TAG,dnsCheckLogStr + "|  SUCCESS");
    }
    if (!shouldCheckWalledGarden()) {
      transitionTo(mOnlineWatchState);
      return HANDLED;
    }
    mLastWalledGardenCheckTime=SystemClock.elapsedRealtime();
    if (isWalledGardenConnection()) {
      if (DBG)       Slog.d(WWSM_TAG,"Walled garden test complete - walled garden detected");
      transitionTo(mWalledGardenState);
    }
 else {
      if (DBG)       Slog.d(WWSM_TAG,"Walled garden test complete - online");
      transitionTo(mOnlineWatchState);
    }
    return HANDLED;
  }
  int remainingChecks=mNumDnsPings - dnsCheckTries;
  if (remainingChecks + dnsCheckSuccesses < mMinDnsResponses) {
    if (DBG) {
      Slog.d(WWSM_TAG,dnsCheckLogStr + "|  FAILURE");
    }
    transitionTo(mDnsCheckFailureState);
    return HANDLED;
  }
  sendCheckStepMessage(DNS_PING_INTERVAL_MS);
  return HANDLED;
}
