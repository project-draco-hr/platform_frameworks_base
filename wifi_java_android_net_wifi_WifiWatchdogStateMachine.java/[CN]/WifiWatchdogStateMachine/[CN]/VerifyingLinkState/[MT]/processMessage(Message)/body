{
switch (msg.what) {
case EVENT_WATCHDOG_SETTINGS_CHANGE:
    updateSettings();
  if (!mPoorNetworkDetectionEnabled) {
    mWsmChannel.sendMessage(GOOD_LINK_DETECTED);
  }
break;
case EVENT_RSSI_CHANGE:
int signalLevel=WifiManager.calculateSignalLevel(msg.arg1,WifiManager.RSSI_LEVELS);
if (DBG) log("RSSI change old: " + mCurrentSignalLevel + "new: "+ signalLevel);
mCurrentSignalLevel=signalLevel;
handleRssiChange();
break;
case CMD_ARP_CHECK:
if (msg.arg1 == mArpToken) {
if (doArpTest(FULL_ARP_CHECK) == true) {
if (DBG) log("Notify link is good " + mCurrentSignalLevel);
mWsmChannel.sendMessage(GOOD_LINK_DETECTED);
}
 else {
if (DBG) log("Continue ARP check, rssi level: " + mCurrentSignalLevel);
sendMessageDelayed(obtainMessage(CMD_ARP_CHECK,++mArpToken,0),mArpCheckIntervalMs);
}
}
break;
default :
return NOT_HANDLED;
}
return HANDLED;
}
