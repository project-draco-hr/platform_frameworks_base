{
switch (msg.what) {
case EVENT_RSSI_CHANGE:
    if (msg.arg1 != mNetEventCounter) {
      if (DBG) {
        Slog.d(WWSM_TAG,"Rssi change message out of sync, ignoring");
      }
      return HANDLED;
    }
  int newRssi=msg.arg2;
signalUnstable=!rssiStrengthAboveCutoff(newRssi);
if (VDBG) {
Slog.v(WWSM_TAG,"OnlineWatchState:: new rssi " + newRssi + " --> level "+ WifiManager.calculateSignalLevel(newRssi,WIFI_SIGNAL_LEVELS));
}
if (signalUnstable && !unstableSignalChecks) {
if (VDBG) {
Slog.v(WWSM_TAG,"Sending triggered check msg");
}
triggerSingleDnsCheck();
}
return HANDLED;
case MESSAGE_SINGLE_DNS_CHECK:
if (msg.arg1 != checkGuard) {
if (VDBG) {
Slog.v(WWSM_TAG,"Single check msg out of sync, ignoring.");
}
return HANDLED;
}
lastCheckTime=SystemClock.elapsedRealtime();
curPingID=mDnsPinger.pingDnsAsync(mDnsPinger.getDns(),mDnsPingTimeoutMs,0);
return HANDLED;
case DnsPinger.DNS_PING_RESULT:
if ((short)msg.arg1 != curPingID) {
if (VDBG) {
Slog.v(WWSM_TAG,"Received non-matching DnsPing w/ id: " + msg.arg1);
}
return HANDLED;
}
int responseTime=msg.arg2;
if (responseTime >= 0) {
if (VDBG) {
Slog.v(WWSM_TAG,"Ran a single DNS ping. Response time: " + responseTime);
}
checkGuard++;
unstableSignalChecks=false;
triggerSingleDnsCheck();
}
 else {
if (DBG) {
Slog.d(WWSM_TAG,"Single dns ping failure. Starting full checks.");
}
transitionTo(mDnsCheckingState);
}
return HANDLED;
}
return NOT_HANDLED;
}
