{
  boolean success;
  String iface=mLinkProperties.getInterfaceName();
  String mac=mWifiInfo.getMacAddress();
  InetAddress inetAddress=null;
  InetAddress gateway=null;
  for (  LinkAddress la : mLinkProperties.getLinkAddresses()) {
    inetAddress=la.getAddress();
    break;
  }
  for (  RouteInfo route : mLinkProperties.getRoutes()) {
    gateway=route.getGateway();
    break;
  }
  if (DBG)   log("ARP " + iface + "addr: "+ inetAddress+ "mac: "+ mac+ "gw: "+ gateway);
  try {
    ArpPeer peer=new ArpPeer(iface,inetAddress,mac,gateway);
    if (type == SINGLE_ARP_CHECK) {
      success=(peer.doArp(mArpPingTimeoutMs) != null);
      if (DBG)       log("single ARP test result: " + success);
    }
 else {
      int responses=0;
      for (int i=0; i < mNumArpPings; i++) {
        if (peer.doArp(mArpPingTimeoutMs) != null)         responses++;
      }
      if (DBG)       log("full ARP test result: " + responses + "/"+ mNumArpPings);
      success=(responses >= mMinArpResponses);
    }
    peer.close();
  }
 catch (  SocketException se) {
    loge("ARP test initiation failure: " + se);
    success=true;
  }
catch (  IllegalArgumentException e) {
    success=true;
  }
  return success;
}
