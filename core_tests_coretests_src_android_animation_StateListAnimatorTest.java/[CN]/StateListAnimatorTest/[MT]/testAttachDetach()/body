{
  View view=new View(getActivity());
  final AtomicInteger setStateCount=new AtomicInteger(0);
  StateListAnimator stateListAnimator=new StateListAnimator(){
    @Override public void setState(    int[] state){
      setStateCount.incrementAndGet();
      super.setState(state);
    }
  }
;
  view.setStateListAnimator(stateListAnimator);
  assertNotNull("State list animator should have a reference to view even if it is detached",stateListAnimator.getTarget());
  ViewGroup viewGroup=(ViewGroup)getActivity().findViewById(android.R.id.content);
  int preSetStateCount=setStateCount.get();
  viewGroup.addView(view);
  assertTrue("When view is attached, state list drawable's setState should be called",preSetStateCount < setStateCount.get());
  StateListAnimator stateListAnimator2=new StateListAnimator();
  view.setStateListAnimator(stateListAnimator2);
  assertNull("When a new state list animator is assigned, previous one should be detached",stateListAnimator.getTarget());
  assertNull("Any running animator should be removed on detach",stateListAnimator.getRunningAnimator());
  assertEquals("The new state list animator should be attached to the view",view,stateListAnimator2.getTarget());
  viewGroup.removeView(view);
  assertNotNull("When view is detached from window, state list animator should still keep the" + " reference",stateListAnimator2.getTarget());
}
