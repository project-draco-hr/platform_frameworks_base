{
  if (implementsV2API()) {
    throw new IllegalStateException("For proper V2 API implementation this method has to" + "  be implemented");
  }
  int speechRate=(int)(request.getVoiceParams().getFloat(TextToSpeechClient.Params.SPEECH_SPEED,1.0f) * 100);
  int speechPitch=(int)(request.getVoiceParams().getFloat(TextToSpeechClient.Params.SPEECH_PITCH,1.0f) * 100);
  Bundle params=new Bundle();
  params.putString(TextToSpeech.Engine.KEY_PARAM_UTTERANCE_ID,request.getUtteranceId());
  params.putInt(TextToSpeech.Engine.KEY_PARAM_PITCH,speechPitch);
  params.putInt(TextToSpeech.Engine.KEY_PARAM_RATE,speechRate);
  if (selectedVoice.getRequiresNetworkConnection()) {
    params.putString(TextToSpeech.Engine.KEY_FEATURE_NETWORK_SYNTHESIS,"true");
  }
 else {
    params.putString(TextToSpeech.Engine.KEY_FEATURE_EMBEDDED_SYNTHESIS,"true");
  }
  String noWarning=request.getMarkup().getParameter(Utterance.KEY_NO_WARNING_ON_FALLBACK);
  if (noWarning == null || noWarning.equals("false")) {
    Log.w("TextToSpeechService","The synthesis engine does not support Markup, falling " + "back to the given plain text.");
  }
  SynthesisRequest requestV1=new SynthesisRequest(request.getText(),params);
  Locale locale=selectedVoice.getLocale();
  requestV1.setLanguage(locale.getISO3Language(),locale.getISO3Country(),locale.getVariant());
  requestV1.setSpeechRate(speechRate);
  requestV1.setPitch(speechPitch);
  onSynthesizeText(requestV1,callback);
}
