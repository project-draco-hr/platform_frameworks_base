{
  if (msg.isInUse()) {
    throw new AndroidRuntimeException(msg + " This message is already in use.");
  }
  if (msg.target == null) {
    throw new AndroidRuntimeException("Message must have a target.");
  }
  boolean needWake;
synchronized (this) {
    if (mQuiting) {
      RuntimeException e=new RuntimeException(msg.target + " sending message to a Handler on a dead thread");
      Log.w("MessageQueue",e.getMessage(),e);
      return false;
    }
    msg.when=when;
    Message p=mMessages;
    if (p == null || when == 0 || when < p.when) {
      msg.next=p;
      mMessages=msg;
      needWake=mBlocked;
    }
 else {
      needWake=mBlocked && p.target == null && msg.isAsynchronous();
      Message prev;
      for (; ; ) {
        prev=p;
        p=p.next;
        if (p == null || when < p.when) {
          break;
        }
        if (needWake && p.isAsynchronous()) {
          needWake=false;
        }
      }
      msg.next=p;
      prev.next=msg;
    }
  }
  if (needWake) {
    nativeWake(mPtr);
  }
  return true;
}
