{
synchronized (this) {
    Message prev=null;
    Message p=mMessages;
    while (p != null && (p.target != null || p.arg1 != token)) {
      prev=p;
      p=p.next;
    }
    if (p == null) {
      throw new IllegalStateException("The specified message queue synchronization " + " barrier token has not been posted or has already been removed.");
    }
    final boolean needWake;
    if (prev != null) {
      prev.next=p.next;
      needWake=false;
    }
 else {
      mMessages=p.next;
      needWake=mMessages == null || mMessages.target != null;
    }
    p.recycleUnchecked();
    if (needWake && !mQuitting) {
      nativeWake(mPtr);
    }
  }
}
