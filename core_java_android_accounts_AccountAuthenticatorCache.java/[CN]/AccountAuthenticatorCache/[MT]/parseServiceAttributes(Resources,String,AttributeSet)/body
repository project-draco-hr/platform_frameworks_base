{
  TypedArray sa=res.obtainAttributes(attrs,com.android.internal.R.styleable.AccountAuthenticator);
  try {
    final String accountType=sa.getString(com.android.internal.R.styleable.AccountAuthenticator_accountType);
    final int labelId=sa.getResourceId(com.android.internal.R.styleable.AccountAuthenticator_label,0);
    final int iconId=sa.getResourceId(com.android.internal.R.styleable.AccountAuthenticator_icon,0);
    final int smallIconId=sa.getResourceId(com.android.internal.R.styleable.AccountAuthenticator_smallIcon,0);
    final int prefId=sa.getResourceId(com.android.internal.R.styleable.AccountAuthenticator_accountPreferences,0);
    boolean customTokens=false;
    try {
      PackageManager pm=mContext.getPackageManager();
      List<ResolveInfo> resolveInfos=pm.queryIntentServices(new Intent(AccountManager.ACTION_AUTHENTICATOR_INTENT),PackageManager.GET_META_DATA);
      for (      ResolveInfo resolveInfo : resolveInfos) {
        android.content.pm.ServiceInfo si=resolveInfo.serviceInfo;
        if (!packageName.equals(si.packageName)) {
          continue;
        }
        Object ctString=si.metaData.get(AccountManager.ACTION_AUTHENTICATOR_INTENT + ".customTokens");
        if (ctString != null) {
          customTokens=true;
        }
      }
    }
 catch (    Throwable t) {
      Log.e(TAG,"Error getting customTokens metadata " + t);
    }
    if (TextUtils.isEmpty(accountType)) {
      return null;
    }
    return new AuthenticatorDescription(accountType,packageName,labelId,iconId,smallIconId,prefId,customTokens);
  }
  finally {
    sa.recycle();
  }
}
