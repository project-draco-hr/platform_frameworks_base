{
  if (app.thread == null) {
    throw new RemoteException();
  }
  if (DEBUG_MU)   Slog.v(TAG_MU,"realStartServiceLocked, ServiceRecord.uid = " + r.appInfo.uid + ", ProcessRecord.uid = "+ app.uid);
  r.app=app;
  r.restartTime=r.lastActivity=SystemClock.uptimeMillis();
  final boolean newService=app.services.add(r);
  bumpServiceExecutingLocked(r,execInFg,"create");
  mAm.updateLruProcessLocked(app,false,null);
  mAm.updateOomAdjLocked();
  boolean created=false;
  try {
    if (LOG_SERVICE_START_STOP) {
      String nameTerm;
      int lastPeriod=r.shortName.lastIndexOf('.');
      nameTerm=lastPeriod >= 0 ? r.shortName.substring(lastPeriod) : r.shortName;
      EventLogTags.writeAmCreateService(r.userId,System.identityHashCode(r),nameTerm,r.app.uid,r.app.pid);
    }
synchronized (r.stats.getBatteryStats()) {
      r.stats.startLaunchedLocked();
    }
    mAm.notifyPackageUse(r.serviceInfo.packageName,PackageManager.NOTIFY_PACKAGE_USE_SERVICE);
    app.forceProcessStateUpTo(ActivityManager.PROCESS_STATE_SERVICE);
    app.thread.scheduleCreateService(r,r.serviceInfo,mAm.compatibilityInfoForPackageLocked(r.serviceInfo.applicationInfo),app.repProcState);
    r.postNotification();
    created=true;
  }
 catch (  DeadObjectException e) {
    Slog.w(TAG,"Application dead when creating service " + r);
    mAm.appDiedLocked(app);
    throw e;
  }
 finally {
    if (!created) {
      final boolean inDestroying=mDestroyingServices.contains(r);
      serviceDoneExecutingLocked(r,inDestroying,inDestroying);
      if (newService) {
        app.services.remove(r);
        r.app=null;
      }
      if (!inDestroying) {
        scheduleServiceRestartLocked(r,false);
      }
    }
  }
  if (r.whitelistManager) {
    app.whitelistManager=true;
  }
  requestServiceBindingsLocked(r,execInFg);
  updateServiceClientActivitiesLocked(app,null,true);
  if (r.startRequested && r.callStart && r.pendingStarts.size() == 0) {
    r.pendingStarts.add(new ServiceRecord.StartItem(r,false,r.makeNextStartId(),null,null));
  }
  sendServiceArgsLocked(r,execInFg,true);
  if (r.delayed) {
    if (DEBUG_DELAYED_STARTS)     Slog.v(TAG_SERVICE,"REM FR DELAY LIST (new proc): " + r);
    getServiceMap(r.userId).mDelayedStartList.remove(r);
    r.delayed=false;
  }
  if (r.delayedStop) {
    r.delayedStop=false;
    if (r.startRequested) {
      if (DEBUG_DELAYED_STARTS)       Slog.v(TAG_SERVICE,"Applying delayed stop (from start): " + r);
      stopServiceLocked(r);
    }
  }
}
