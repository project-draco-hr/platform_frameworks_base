{
  if (WAIT_FOR_DEBUGGER)   Debug.waitForDebugger();
  StateMachineQuitTest smQuitTest=new StateMachineQuitTest("smQuitTest");
  smQuitTest.start();
  if (smQuitTest.isDbg())   Log.d(TAG,"testStateMachineQuitTest E");
synchronized (smQuitTest) {
    for (int i=1; i <= 6; i++) {
      smQuitTest.sendMessage(i);
    }
    smQuitTest.quit();
    smQuitTest.quit();
    smQuitTest.quit();
    try {
      smQuitTest.wait();
    }
 catch (    InterruptedException e) {
      Log.e(TAG,"testStateMachineQuitTest: exception while waiting " + e.getMessage());
    }
  }
  assertTrue(smQuitTest.getProcessedMessagesCount() == 9);
  ProcessedMessageInfo pmi;
  pmi=smQuitTest.getProcessedMessageInfo(6);
  assertEquals(HierarchicalStateMachine.HSM_QUIT_CMD,pmi.getWhat());
  assertEquals(smQuitTest.mS1,pmi.getState());
  assertEquals(smQuitTest.mS1,pmi.getOriginalState());
  pmi=smQuitTest.getProcessedMessageInfo(7);
  assertEquals(HierarchicalStateMachine.HSM_QUIT_CMD,pmi.getWhat());
  assertEquals(smQuitTest.mS1,pmi.getState());
  assertEquals(smQuitTest.mS1,pmi.getOriginalState());
  pmi=smQuitTest.getProcessedMessageInfo(8);
  assertEquals(HierarchicalStateMachine.HSM_QUIT_CMD,pmi.getWhat());
  assertEquals(null,pmi.getState());
  assertEquals(null,pmi.getOriginalState());
  if (smQuitTest.isDbg())   Log.d(TAG,"testStateMachineQuitTest X");
}
