{
  if (mHorizontalDivider != null)   mHorizontalDividerRects.clear();
  if (mVerticalDivider != null)   mVerticalDividerRects.clear();
  final int numRows=mLayoutNumRows;
  final int numRowsMinus1=numRows - 1;
  final int numItemsForRow[]=mLayout;
  int itemPos=0;
  View child;
  IconMenuView.LayoutParams childLayoutParams=null;
  float itemLeft;
  float itemTop=0;
  float itemWidth;
  final float itemHeight=(menuHeight - mHorizontalDividerHeight * (numRows - 1)) / (float)numRows;
  for (int row=0; row < numRows; row++) {
    itemLeft=0;
    itemWidth=(menuWidth - mVerticalDividerWidth * (numItemsForRow[row] - 1)) / (float)numItemsForRow[row];
    for (int itemPosOnRow=0; itemPosOnRow < numItemsForRow[row]; itemPosOnRow++) {
      child=getChildAt(itemPos);
      child.measure(MeasureSpec.makeMeasureSpec((int)itemWidth,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec((int)itemHeight,MeasureSpec.EXACTLY));
      childLayoutParams=(IconMenuView.LayoutParams)child.getLayoutParams();
      childLayoutParams.left=(int)itemLeft;
      childLayoutParams.right=(int)(itemLeft + itemWidth);
      childLayoutParams.top=(int)itemTop;
      childLayoutParams.bottom=(int)(itemTop + itemHeight);
      itemLeft+=itemWidth;
      itemPos++;
      if (mVerticalDivider != null) {
        mVerticalDividerRects.add(new Rect((int)itemLeft,(int)itemTop,(int)(itemLeft + mVerticalDividerWidth),(int)(itemTop + itemHeight)));
      }
      itemLeft+=mVerticalDividerWidth;
    }
    if (childLayoutParams != null) {
      childLayoutParams.right=menuWidth;
    }
    itemTop+=itemHeight;
    if ((mHorizontalDivider != null) && (row < numRowsMinus1)) {
      mHorizontalDividerRects.add(new Rect(0,(int)itemTop,menuWidth,(int)(itemTop + mHorizontalDividerHeight)));
      itemTop+=mHorizontalDividerHeight;
    }
  }
}
