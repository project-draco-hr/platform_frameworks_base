{
  final int keyCode=event.getKeyCode();
  if (event.getAction() == KeyEvent.ACTION_DOWN) {
switch (keyCode) {
case KeyEvent.KEYCODE_MEDIA_PLAY:
case KeyEvent.KEYCODE_MEDIA_PAUSE:
case KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE:
      if (mTelephonyManager == null) {
        mTelephonyManager=(TelephonyManager)getContext().getSystemService(Context.TELEPHONY_SERVICE);
      }
    if (mTelephonyManager != null && mTelephonyManager.getCallState() != TelephonyManager.CALL_STATE_IDLE) {
      return true;
    }
case KeyEvent.KEYCODE_HEADSETHOOK:
case KeyEvent.KEYCODE_MEDIA_STOP:
case KeyEvent.KEYCODE_MEDIA_NEXT:
case KeyEvent.KEYCODE_MEDIA_PREVIOUS:
case KeyEvent.KEYCODE_MEDIA_REWIND:
case KeyEvent.KEYCODE_MEDIA_FAST_FORWARD:
{
    Intent intent=new Intent(Intent.ACTION_MEDIA_BUTTON,null);
    intent.putExtra(Intent.EXTRA_KEY_EVENT,event);
    getContext().sendOrderedBroadcast(intent,null);
    return true;
  }
case KeyEvent.KEYCODE_VOLUME_UP:
case KeyEvent.KEYCODE_VOLUME_DOWN:
{
synchronized (this) {
    if (mAudioManager == null) {
      mAudioManager=(AudioManager)getContext().getSystemService(Context.AUDIO_SERVICE);
    }
  }
  if (mAudioManager.isMusicActive()) {
    mAudioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,keyCode == KeyEvent.KEYCODE_VOLUME_UP ? AudioManager.ADJUST_RAISE : AudioManager.ADJUST_LOWER,0);
  }
  return true;
}
}
}
 else if (event.getAction() == KeyEvent.ACTION_UP) {
switch (keyCode) {
case KeyEvent.KEYCODE_MUTE:
case KeyEvent.KEYCODE_HEADSETHOOK:
case KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE:
case KeyEvent.KEYCODE_MEDIA_STOP:
case KeyEvent.KEYCODE_MEDIA_NEXT:
case KeyEvent.KEYCODE_MEDIA_PREVIOUS:
case KeyEvent.KEYCODE_MEDIA_REWIND:
case KeyEvent.KEYCODE_MEDIA_FAST_FORWARD:
{
Intent intent=new Intent(Intent.ACTION_MEDIA_BUTTON,null);
intent.putExtra(Intent.EXTRA_KEY_EVENT,event);
getContext().sendOrderedBroadcast(intent,null);
return true;
}
}
}
return false;
}
