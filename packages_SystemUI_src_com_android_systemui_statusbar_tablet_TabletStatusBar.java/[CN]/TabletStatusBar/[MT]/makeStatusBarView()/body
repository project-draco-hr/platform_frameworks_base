{
  final Context context=mContext;
  mWindowManager=IWindowManager.Stub.asInterface(ServiceManager.getService(Context.WINDOW_SERVICE));
  mHeightReceiver=new HeightReceiver(mContext);
  mHeightReceiver.registerReceiver();
  loadDimens();
  final TabletStatusBarView sb=(TabletStatusBarView)View.inflate(context,R.layout.status_bar,null);
  mStatusBarView=sb;
  sb.setHandler(mHandler);
  mBarContents=(ViewGroup)sb.findViewById(R.id.bar_contents);
  mBarContentsLayoutTransition=new LayoutTransition();
  mBarContentsLayoutTransition.setAnimator(LayoutTransition.APPEARING,ObjectAnimator.ofFloat(null,"alpha",0f,1f));
  mBarContentsLayoutTransition.setAnimator(LayoutTransition.DISAPPEARING,ObjectAnimator.ofFloat(null,"alpha",1f,0f));
  mBarContentsLayoutTransition.setAnimator(LayoutTransition.CHANGE_APPEARING,null);
  mBarContentsLayoutTransition.setAnimator(LayoutTransition.CHANGE_DISAPPEARING,null);
  mBarContentsLayoutTransition.setDuration(250 * (DEBUG ? 10 : 1));
  mBarContents.setLayoutTransition(mBarContentsLayoutTransition);
  mNotificationArea=sb.findViewById(R.id.notificationArea);
  mNotificationTrigger=sb.findViewById(R.id.notificationTrigger);
  mNotificationTrigger.setOnTouchListener(new NotificationTriggerTouchListener());
  mNotificationIconArea=(NotificationIconArea)sb.findViewById(R.id.notificationIcons);
  mClearButton=sb.findViewById(R.id.clear_all_button);
  mClearButton.setOnClickListener(mClearButtonListener);
  mIconLayout=(NotificationIconArea.IconLayout)sb.findViewById(R.id.icons);
  mIconLayout.setOnTouchListener(new NotificationIconTouchListener());
  ViewConfiguration vc=ViewConfiguration.get(context);
  mNotificationPeekTapDuration=vc.getTapTimeout();
  mNotificationFlingVelocity=300;
  mTicker=new TabletTicker(this);
  mLocationController=new LocationController(mContext);
  mBatteryController=new BatteryController(mContext);
  mBatteryController.addIconView((ImageView)sb.findViewById(R.id.battery));
  mBluetoothController=new BluetoothController(mContext);
  mBluetoothController.addIconView((ImageView)sb.findViewById(R.id.bluetooth));
  mNetworkController=new NetworkController(mContext);
  final ImageView comboRSSI=(ImageView)sb.findViewById(R.id.network_signal);
  if (comboRSSI != null) {
    mNetworkController.addCombinedSignalIconView(comboRSSI);
  }
  final ImageView mobileRSSI=(ImageView)sb.findViewById(R.id.mobile_signal);
  if (mobileRSSI != null) {
    mNetworkController.addPhoneSignalIconView(mobileRSSI);
  }
  final ImageView wifiRSSI=(ImageView)sb.findViewById(R.id.wifi_signal);
  if (wifiRSSI != null) {
    mNetworkController.addWifiIconView(wifiRSSI);
  }
  mNetworkController.addDataTypeIconView((ImageView)sb.findViewById(R.id.network_type));
  mNetworkController.addDataDirectionOverlayIconView((ImageView)sb.findViewById(R.id.network_direction));
  mBackButton=(ImageView)sb.findViewById(R.id.back);
  mNavigationArea=(ViewGroup)sb.findViewById(R.id.navigationArea);
  mHomeButton=mNavigationArea.findViewById(R.id.home);
  mMenuButton=mNavigationArea.findViewById(R.id.menu);
  mRecentButton=mNavigationArea.findViewById(R.id.recent_apps);
  mRecentButton.setOnClickListener(mOnClickListener);
  mNavigationArea.setLayoutTransition(mBarContentsLayoutTransition);
  mFeedbackIconArea=(ViewGroup)sb.findViewById(R.id.feedbackIconArea);
  mInputMethodSwitchButton=(InputMethodButton)sb.findViewById(R.id.imeSwitchButton);
  mInputMethodSwitchButton.setOnClickListener(mOnClickListener);
  mCompatModeButton=(CompatModeButton)sb.findViewById(R.id.compatModeButton);
  mCompatModeButton.setOnClickListener(mOnClickListener);
  mFakeSpaceBar=sb.findViewById(R.id.fake_space_bar);
  mShadow=sb.findViewById(R.id.bar_shadow);
  mShadow.setOnTouchListener(new View.OnTouchListener(){
    public boolean onTouch(    View v,    MotionEvent ev){
      if (ev.getAction() == MotionEvent.ACTION_DOWN) {
        mShadow.setVisibility(View.GONE);
        mBarContents.setVisibility(View.VISIBLE);
        try {
          mBarService.setSystemUiVisibility(View.STATUS_BAR_VISIBLE);
        }
 catch (        RemoteException ex) {
        }
      }
      return false;
    }
  }
);
  final int LIGHTS_GOING_OUT_SYSBAR_DURATION=600;
  final int LIGHTS_GOING_OUT_SHADOW_DURATION=1000;
  final int LIGHTS_GOING_OUT_SHADOW_DELAY=500;
  final int LIGHTS_COMING_UP_SYSBAR_DURATION=200;
  final int LIGHTS_COMING_UP_SHADOW_DURATION=0;
  LayoutTransition xition=new LayoutTransition();
  xition.setAnimator(LayoutTransition.APPEARING,ObjectAnimator.ofFloat(null,"alpha",0.5f,1f));
  xition.setDuration(LayoutTransition.APPEARING,LIGHTS_COMING_UP_SYSBAR_DURATION);
  xition.setStartDelay(LayoutTransition.APPEARING,0);
  xition.setAnimator(LayoutTransition.DISAPPEARING,ObjectAnimator.ofFloat(null,"alpha",1f,0f));
  xition.setDuration(LayoutTransition.DISAPPEARING,LIGHTS_GOING_OUT_SYSBAR_DURATION);
  xition.setStartDelay(LayoutTransition.DISAPPEARING,0);
  ((ViewGroup)sb.findViewById(R.id.bar_contents_holder)).setLayoutTransition(xition);
  xition=new LayoutTransition();
  xition.setAnimator(LayoutTransition.APPEARING,ObjectAnimator.ofFloat(null,"alpha",0f,1f));
  xition.setDuration(LayoutTransition.APPEARING,LIGHTS_GOING_OUT_SHADOW_DURATION);
  xition.setStartDelay(LayoutTransition.APPEARING,LIGHTS_GOING_OUT_SHADOW_DELAY);
  xition.setAnimator(LayoutTransition.DISAPPEARING,ObjectAnimator.ofFloat(null,"alpha",1f,0f));
  xition.setDuration(LayoutTransition.DISAPPEARING,LIGHTS_COMING_UP_SHADOW_DURATION);
  xition.setStartDelay(LayoutTransition.DISAPPEARING,0);
  ((ViewGroup)sb.findViewById(R.id.bar_shadow_holder)).setLayoutTransition(xition);
  setAreThereNotifications();
  addPanelWindows();
  mPile=(ViewGroup)mNotificationPanel.findViewById(R.id.content);
  mPile.removeAllViews();
  ScrollView scroller=(ScrollView)mPile.getParent();
  scroller.setFillViewport(true);
  mHeightReceiver.addOnBarHeightChangedListener(this);
  return sb;
}
