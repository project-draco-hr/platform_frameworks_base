{
  final Context context=mContext;
  mWindowManager=IWindowManager.Stub.asInterface(ServiceManager.getService(Context.WINDOW_SERVICE));
  loadDimens();
  final TabletStatusBarView sb=(TabletStatusBarView)View.inflate(context,R.layout.system_bar,null);
  mStatusBarView=sb;
  sb.setHandler(mHandler);
  try {
    if (mWindowManager.hasNavigationBar()) {
      Slog.e(TAG,"Tablet device cannot show navigation bar and system bar");
    }
  }
 catch (  RemoteException ex) {
  }
  mBarContents=(ViewGroup)sb.findViewById(R.id.bar_contents);
  mNotificationArea=sb.findViewById(R.id.notificationArea);
  mNotificationArea.setOnTouchListener(new NotificationTriggerTouchListener());
  mNotificationTrigger=sb.findViewById(R.id.notificationTrigger);
  mNotificationIconArea=(NotificationIconArea)sb.findViewById(R.id.notificationIcons);
  mIconLayout=(NotificationIconArea.IconLayout)sb.findViewById(R.id.icons);
  ViewConfiguration vc=ViewConfiguration.get(context);
  mNotificationPeekTapDuration=vc.getTapTimeout();
  mNotificationFlingVelocity=300;
  mTicker=new TabletTicker(this);
  mLocationController=new LocationController(mContext);
  mDoNotDisturb=new DoNotDisturb(mContext);
  mBatteryController=new BatteryController(mContext);
  mBatteryController.addIconView((ImageView)sb.findViewById(R.id.battery));
  mBluetoothController=new BluetoothController(mContext);
  mBluetoothController.addIconView((ImageView)sb.findViewById(R.id.bluetooth));
  mNetworkController=new NetworkController(mContext);
  final SignalClusterView signalCluster=(SignalClusterView)sb.findViewById(R.id.signal_cluster);
  mNetworkController.addSignalCluster(signalCluster);
  mBackButton=(ImageView)sb.findViewById(R.id.back);
  mNavigationArea=(ViewGroup)sb.findViewById(R.id.navigationArea);
  mHomeButton=mNavigationArea.findViewById(R.id.home);
  mMenuButton=mNavigationArea.findViewById(R.id.menu);
  mRecentButton=mNavigationArea.findViewById(R.id.recent_apps);
  mRecentButton.setOnClickListener(mOnClickListener);
  LayoutTransition lt=new LayoutTransition();
  lt.setDuration(250);
  lt.setDuration(LayoutTransition.CHANGE_APPEARING,0);
  lt.setDuration(LayoutTransition.CHANGE_DISAPPEARING,0);
  lt.addTransitionListener(new LayoutTransition.TransitionListener(){
    public void endTransition(    LayoutTransition transition,    ViewGroup container,    View view,    int transitionType){
      mBarContents.invalidate();
    }
    public void startTransition(    LayoutTransition transition,    ViewGroup container,    View view,    int transitionType){
    }
  }
);
  mNavigationArea.setLayoutTransition(lt);
  mNavigationArea.setMotionEventSplittingEnabled(false);
  mFeedbackIconArea=(ViewGroup)sb.findViewById(R.id.feedbackIconArea);
  mInputMethodSwitchButton=(InputMethodButton)sb.findViewById(R.id.imeSwitchButton);
  mInputMethodSwitchButton.setOnClickListener(mOnClickListener);
  mCompatModeButton=(CompatModeButton)sb.findViewById(R.id.compatModeButton);
  mCompatModeButton.setOnClickListener(mOnClickListener);
  mCompatModeButton.setVisibility(View.GONE);
  mFakeSpaceBar=sb.findViewById(R.id.fake_space_bar);
  mShadow=sb.findViewById(R.id.bar_shadow);
  mShadow.setOnTouchListener(new View.OnTouchListener(){
    public boolean onTouch(    View v,    MotionEvent ev){
      if (ev.getAction() == MotionEvent.ACTION_DOWN) {
        mShadow.setVisibility(View.GONE);
        mBarContents.setVisibility(View.VISIBLE);
        try {
          mBarService.setSystemUiVisibility(0,View.SYSTEM_UI_FLAG_LOW_PROFILE);
        }
 catch (        RemoteException ex) {
        }
      }
      return false;
    }
  }
);
  final int LIGHTS_GOING_OUT_SYSBAR_DURATION=750;
  final int LIGHTS_GOING_OUT_SHADOW_DURATION=750;
  final int LIGHTS_GOING_OUT_SHADOW_DELAY=0;
  final int LIGHTS_COMING_UP_SYSBAR_DURATION=200;
  final int LIGHTS_COMING_UP_SHADOW_DURATION=0;
  LayoutTransition xition=new LayoutTransition();
  xition.setAnimator(LayoutTransition.APPEARING,ObjectAnimator.ofFloat(null,"alpha",0.5f,1f));
  xition.setDuration(LayoutTransition.APPEARING,LIGHTS_COMING_UP_SYSBAR_DURATION);
  xition.setStartDelay(LayoutTransition.APPEARING,0);
  xition.setAnimator(LayoutTransition.DISAPPEARING,ObjectAnimator.ofFloat(null,"alpha",1f,0f));
  xition.setDuration(LayoutTransition.DISAPPEARING,LIGHTS_GOING_OUT_SYSBAR_DURATION);
  xition.setStartDelay(LayoutTransition.DISAPPEARING,0);
  ((ViewGroup)sb.findViewById(R.id.bar_contents_holder)).setLayoutTransition(xition);
  xition=new LayoutTransition();
  xition.setAnimator(LayoutTransition.APPEARING,ObjectAnimator.ofFloat(null,"alpha",0f,1f));
  xition.setDuration(LayoutTransition.APPEARING,LIGHTS_GOING_OUT_SHADOW_DURATION);
  xition.setStartDelay(LayoutTransition.APPEARING,LIGHTS_GOING_OUT_SHADOW_DELAY);
  xition.setAnimator(LayoutTransition.DISAPPEARING,ObjectAnimator.ofFloat(null,"alpha",1f,0f));
  xition.setDuration(LayoutTransition.DISAPPEARING,LIGHTS_COMING_UP_SHADOW_DURATION);
  xition.setStartDelay(LayoutTransition.DISAPPEARING,0);
  ((ViewGroup)sb.findViewById(R.id.bar_shadow_holder)).setLayoutTransition(xition);
  setAreThereNotifications();
  IntentFilter filter=new IntentFilter();
  filter.addAction(Intent.ACTION_CLOSE_SYSTEM_DIALOGS);
  filter.addAction(Intent.ACTION_SCREEN_OFF);
  context.registerReceiver(mBroadcastReceiver,filter);
  return sb;
}
