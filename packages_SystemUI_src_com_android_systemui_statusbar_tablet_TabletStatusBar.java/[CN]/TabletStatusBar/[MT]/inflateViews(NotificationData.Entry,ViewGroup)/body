{
  StatusBarNotification sbn=entry.notification;
  RemoteViews remoteViews=sbn.notification.contentView;
  if (remoteViews == null) {
    return false;
  }
  LayoutInflater inflater=(LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
  View row=inflater.inflate(R.layout.status_bar_notification_row,parent,false);
  workAroundBadLayerDrawableOpacity(row);
  View vetoButton=updateNotificationVetoButton(row,entry.notification);
  vetoButton.setContentDescription(mContext.getString(R.string.accessibility_remove_notification));
  ImageView largeIcon=(ImageView)row.findViewById(R.id.large_icon);
  if (sbn.notification.largeIcon != null) {
    largeIcon.setImageBitmap(sbn.notification.largeIcon);
    largeIcon.setContentDescription(sbn.notification.tickerText);
  }
 else {
    largeIcon.getLayoutParams().width=0;
    largeIcon.setVisibility(View.INVISIBLE);
  }
  largeIcon.setContentDescription(sbn.notification.tickerText);
  ViewGroup content=(ViewGroup)row.findViewById(R.id.content);
  content.setDescendantFocusability(ViewGroup.FOCUS_BLOCK_DESCENDANTS);
  PendingIntent contentIntent=sbn.notification.contentIntent;
  if (contentIntent != null) {
    final View.OnClickListener listener=new NotificationClicker(contentIntent,sbn.pkg,sbn.tag,sbn.id);
    largeIcon.setOnClickListener(listener);
    content.setOnClickListener(listener);
  }
 else {
    largeIcon.setOnClickListener(null);
    content.setOnClickListener(null);
  }
  View expanded=null;
  Exception exception=null;
  try {
    expanded=remoteViews.apply(mContext,content);
  }
 catch (  RuntimeException e) {
    exception=e;
  }
  if (expanded == null) {
    final String ident=sbn.pkg + "/0x" + Integer.toHexString(sbn.id);
    Slog.e(TAG,"couldn't inflate view for notification " + ident,exception);
    return false;
  }
 else {
    content.addView(expanded);
    row.setDrawingCacheEnabled(true);
  }
  entry.row=row;
  entry.content=content;
  entry.expanded=expanded;
  entry.largeIcon=largeIcon;
  return true;
}
