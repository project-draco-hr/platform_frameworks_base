{
  StatusBarNotification sbn=entry.notification;
  RemoteViews remoteViews=sbn.notification.contentView;
  if (remoteViews == null) {
    return false;
  }
  LayoutInflater inflater=(LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
  View row=inflater.inflate(R.layout.status_bar_notification_row,parent,false);
  workAroundBadLayerDrawableOpacity(row);
  View vetoButton=row.findViewById(R.id.veto);
  if (entry.notification.isClearable()) {
    final String _pkg=sbn.pkg;
    final String _tag=sbn.tag;
    final int _id=sbn.id;
    vetoButton.setOnClickListener(new View.OnClickListener(){
      public void onClick(      View v){
        try {
          mBarService.onNotificationClear(_pkg,_tag,_id);
        }
 catch (        RemoteException ex) {
        }
      }
    }
);
  }
 else {
    if ((sbn.notification.flags & Notification.FLAG_ONGOING_EVENT) == 0) {
      vetoButton.setVisibility(View.INVISIBLE);
    }
 else {
      vetoButton.setVisibility(View.GONE);
    }
  }
  ImageView largeIcon=(ImageView)row.findViewById(R.id.large_icon);
  if (sbn.notification.largeIcon != null) {
    largeIcon.setImageBitmap(sbn.notification.largeIcon);
  }
 else {
    largeIcon.getLayoutParams().width=0;
    largeIcon.setVisibility(View.INVISIBLE);
  }
  ViewGroup content=(ViewGroup)row.findViewById(R.id.content);
  content.setDescendantFocusability(ViewGroup.FOCUS_BLOCK_DESCENDANTS);
  PendingIntent contentIntent=sbn.notification.contentIntent;
  if (contentIntent != null) {
    content.setOnClickListener(new NotificationClicker(contentIntent,sbn.pkg,sbn.tag,sbn.id));
  }
 else {
    content.setOnClickListener(null);
  }
  View expanded=null;
  Exception exception=null;
  try {
    expanded=remoteViews.apply(mContext,content);
  }
 catch (  RuntimeException e) {
    exception=e;
  }
  if (expanded == null) {
    final String ident=sbn.pkg + "/0x" + Integer.toHexString(sbn.id);
    Slog.e(TAG,"couldn't inflate view for notification " + ident,exception);
    return false;
  }
 else {
    content.addView(expanded);
    row.setDrawingCacheEnabled(true);
  }
  entry.row=row;
  entry.content=content;
  entry.expanded=expanded;
  return true;
}
