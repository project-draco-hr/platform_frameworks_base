{
  boolean peeking=mNotificationPeekWindow.getVisibility() != View.GONE;
  boolean panelShowing=mNotificationPanel.isShowing();
  if (panelShowing)   return false;
  int numIcons=mIconLayout.getChildCount();
  int newPeekIndex=(int)(event.getX() * numIcons / mIconLayout.getWidth());
  if (newPeekIndex > numIcons - 1)   newPeekIndex=numIcons - 1;
 else   if (newPeekIndex < 0)   newPeekIndex=0;
  final int action=event.getAction();
switch (action) {
case MotionEvent.ACTION_DOWN:
    mVT=VelocityTracker.obtain();
  mInitialTouchX=event.getX();
mInitialTouchY=event.getY();
mPeekIndex=-1;
case MotionEvent.ACTION_OUTSIDE:
case MotionEvent.ACTION_MOVE:
if (newPeekIndex != mPeekIndex) {
mPeekIndex=newPeekIndex;
if (DEBUG) Slog.d(TAG,"will peek at notification #" + mPeekIndex);
Message peekMsg=mHandler.obtainMessage(MSG_OPEN_NOTIFICATION_PEEK);
peekMsg.arg1=mPeekIndex;
mHandler.removeMessages(MSG_OPEN_NOTIFICATION_PEEK);
if (peeking) {
mHandler.sendMessage(peekMsg);
}
 else {
mHandler.sendMessageDelayed(peekMsg,NOTIFICATION_PEEK_HOLD_THRESH);
}
}
if (mVT != null) {
mVT.addMovement(event);
mVT.computeCurrentVelocity(1000);
if (!panelShowing && ((peeking && mVT.getYVelocity() < -mNotificationFlingVelocity * 3) || (mVT.getYVelocity() < -mNotificationFlingVelocity))) {
mHandler.removeMessages(MSG_OPEN_NOTIFICATION_PEEK);
mHandler.removeMessages(MSG_OPEN_NOTIFICATION_PANEL);
mHandler.sendEmptyMessage(MSG_CLOSE_NOTIFICATION_PEEK);
mHandler.sendEmptyMessage(MSG_OPEN_NOTIFICATION_PANEL);
}
}
return true;
case MotionEvent.ACTION_UP:
case MotionEvent.ACTION_CANCEL:
mHandler.removeMessages(MSG_OPEN_NOTIFICATION_PEEK);
if (action == MotionEvent.ACTION_UP && Math.abs(event.getX() - mInitialTouchX) < mTouchSlop && Math.abs(event.getY() - mInitialTouchY) < (mTouchSlop / 3) && (int)event.getY() < v.getBottom()) {
Message peekMsg=mHandler.obtainMessage(MSG_OPEN_NOTIFICATION_PEEK);
peekMsg.arg1=mPeekIndex;
mHandler.removeMessages(MSG_OPEN_NOTIFICATION_PEEK);
mHandler.sendMessage(peekMsg);
peeking=true;
}
if (peeking) {
mHandler.sendEmptyMessageDelayed(MSG_CLOSE_NOTIFICATION_PEEK,NOTIFICATION_PEEK_FADE_DELAY);
}
mVT.recycle();
mVT=null;
return true;
}
return false;
}
