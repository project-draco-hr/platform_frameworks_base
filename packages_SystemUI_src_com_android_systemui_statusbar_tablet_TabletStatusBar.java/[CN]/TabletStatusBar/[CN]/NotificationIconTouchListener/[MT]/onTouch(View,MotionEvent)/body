{
  boolean peeking=mNotificationPeekWindow.getVisibility() != View.GONE;
  boolean panelShowing=mNotificationPanel.isShowing();
  if (panelShowing)   return false;
switch (event.getAction()) {
case MotionEvent.ACTION_DOWN:
    mVT=VelocityTracker.obtain();
case MotionEvent.ACTION_OUTSIDE:
case MotionEvent.ACTION_MOVE:
  int numIcons=mIconLayout.getChildCount();
int peekIndex=(int)((float)event.getX() * numIcons / mIconLayout.getWidth());
if (peekIndex > numIcons - 1) peekIndex=numIcons - 1;
 else if (peekIndex < 0) peekIndex=0;
if (!peeking || mNotificationPeekIndex != peekIndex) {
if (DEBUG) Slog.d(TAG,"will peek at notification #" + peekIndex);
Message peekMsg=mHandler.obtainMessage(MSG_OPEN_NOTIFICATION_PEEK);
peekMsg.arg1=peekIndex;
mHandler.removeMessages(MSG_OPEN_NOTIFICATION_PEEK);
mHandler.sendMessage(peekMsg);
}
if (mVT != null) {
mVT.addMovement(event);
mVT.computeCurrentVelocity(1000);
if (!panelShowing && ((peeking && mVT.getYVelocity() < -mNotificationFlingVelocity * 3) || (mVT.getYVelocity() < -mNotificationFlingVelocity))) {
mHandler.removeMessages(MSG_OPEN_NOTIFICATION_PEEK);
mHandler.removeMessages(MSG_OPEN_NOTIFICATION_PANEL);
mHandler.sendEmptyMessage(MSG_CLOSE_NOTIFICATION_PEEK);
mHandler.sendEmptyMessage(MSG_OPEN_NOTIFICATION_PANEL);
}
}
return true;
case MotionEvent.ACTION_UP:
case MotionEvent.ACTION_CANCEL:
mHandler.removeMessages(MSG_OPEN_NOTIFICATION_PEEK);
if (peeking) {
mHandler.sendEmptyMessageDelayed(MSG_CLOSE_NOTIFICATION_PEEK,5000);
}
mVT.recycle();
mVT=null;
return true;
}
return false;
}
