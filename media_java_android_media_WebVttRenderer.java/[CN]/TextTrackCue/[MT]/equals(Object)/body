{
  if (!(o instanceof TextTrackCue)) {
    return false;
  }
  if (this == o) {
    return true;
  }
  try {
    TextTrackCue cue=(TextTrackCue)o;
    boolean res=mId.equals(cue.mId) && mPauseOnExit == cue.mPauseOnExit && mWritingDirection == cue.mWritingDirection && mRegionId.equals(cue.mRegionId) && mSnapToLines == cue.mSnapToLines && mAutoLinePosition == cue.mAutoLinePosition && (mAutoLinePosition || mLinePosition == cue.mLinePosition) && mTextPosition == cue.mTextPosition && mSize == cue.mSize && mAlignment == cue.mAlignment && mLines.length == cue.mLines.length;
    if (res == true) {
      for (int line=0; line < mLines.length; line++) {
        if (!Arrays.equals(mLines[line],cue.mLines[line])) {
          return false;
        }
      }
    }
    return res;
  }
 catch (  IncompatibleClassChangeError e) {
    return false;
  }
}
