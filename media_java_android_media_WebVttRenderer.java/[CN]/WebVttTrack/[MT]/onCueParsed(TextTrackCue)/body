{
synchronized (mParser) {
    if (cue.mRegionId.length() != 0) {
      cue.mRegion=mRegions.get(cue.mRegionId);
    }
    if (DEBUG)     Log.v(TAG,"adding cue " + cue);
    mTokenizer.reset();
    for (    String s : cue.mStrings) {
      mTokenizer.tokenize(s);
    }
    cue.mLines=mExtractor.getText();
    if (DEBUG)     Log.v(TAG,cue.appendLinesToBuilder(cue.appendStringsToBuilder(new StringBuilder()).append(" simplified to: ")).toString());
    for (    TextTrackCueSpan[] line : cue.mLines) {
      for (      TextTrackCueSpan span : line) {
        if (span.mTimestampMs > cue.mStartTimeMs && span.mTimestampMs < cue.mEndTimeMs && !mTimestamps.contains(span.mTimestampMs)) {
          mTimestamps.add(span.mTimestampMs);
        }
      }
    }
    if (mTimestamps.size() > 0) {
      cue.mInnerTimesMs=new long[mTimestamps.size()];
      for (int ix=0; ix < mTimestamps.size(); ++ix) {
        cue.mInnerTimesMs[ix]=mTimestamps.get(ix);
      }
      mTimestamps.clear();
    }
 else {
      cue.mInnerTimesMs=null;
    }
    cue.mRunID=mCurrentRunID;
  }
  addCue(cue);
}
