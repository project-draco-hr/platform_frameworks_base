{
  if (mAccessibilityManager.isEnabled()) {
    AccessibilityEvent event=AccessibilityEvent.obtain(eventType);
    onInitializeAccessibilityEvent(event);
    if (mAudioManager.isBluetoothA2dpOn() || mAudioManager.isWiredHeadsetOn()) {
      String text=null;
switch (code) {
case Keyboard.KEYCODE_ALT:
        text=mContext.getString(R.string.keyboardview_keycode_alt);
      break;
case Keyboard.KEYCODE_CANCEL:
    text=mContext.getString(R.string.keyboardview_keycode_cancel);
  break;
case Keyboard.KEYCODE_DELETE:
text=mContext.getString(R.string.keyboardview_keycode_delete);
break;
case Keyboard.KEYCODE_DONE:
text=mContext.getString(R.string.keyboardview_keycode_done);
break;
case Keyboard.KEYCODE_MODE_CHANGE:
text=mContext.getString(R.string.keyboardview_keycode_mode_change);
break;
case Keyboard.KEYCODE_SHIFT:
text=mContext.getString(R.string.keyboardview_keycode_shift);
break;
case '\n':
text=mContext.getString(R.string.keyboardview_keycode_enter);
break;
default :
text=String.valueOf((char)code);
}
event.getText().add(text);
}
 else {
event.getText().add(mContext.getString(R.string.keyboard_headset_required_to_hear_password));
}
mAccessibilityManager.sendAccessibilityEvent(event);
}
}
