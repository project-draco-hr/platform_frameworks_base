{
  final String subscriberId=getActiveSubscriberId(mContext);
  if (subscriberId == null) {
    return warn("no subscriber id");
  }
  final INetworkStatsSession session=getSession();
  if (session == null) {
    return warn("no stats session");
  }
  final NetworkTemplate template=NetworkTemplate.buildTemplateMobileAll(subscriberId);
  final NetworkPolicy policy=findNetworkPolicy(template);
  try {
    final NetworkStatsHistory history=mSession.getHistoryForNetwork(template,FIELDS);
    final long now=System.currentTimeMillis();
    final long start=now - DateUtils.WEEK_IN_MILLIS * 4;
    final long end=now;
    final long callStart=System.currentTimeMillis();
    final NetworkStatsHistory.Entry entry=history.getValues(start,end,now,null);
    final long callEnd=System.currentTimeMillis();
    if (DEBUG)     Log.d(TAG,String.format("history call from %s to %s now=%s took %sms: %s",new Date(start),new Date(end),new Date(now),callEnd - callStart,historyEntryToString(entry)));
    if (entry == null) {
      return warn("no entry data");
    }
    final long totalBytes=entry.rxBytes + entry.txBytes;
    final DataUsageInfo usage=new DataUsageInfo();
    usage.maxLevel=(long)(totalBytes / .4);
    usage.usageLevel=totalBytes;
    usage.period=MMM_D.format(new Date(start)) + " - " + MMM_D.format(new Date(end));
    if (policy != null) {
      usage.limitLevel=policy.limitBytes > 0 ? policy.limitBytes : 0;
      usage.warningLevel=policy.warningBytes > 0 ? policy.warningBytes : 0;
    }
    return usage;
  }
 catch (  RemoteException e) {
    return warn("remote call failed");
  }
}
