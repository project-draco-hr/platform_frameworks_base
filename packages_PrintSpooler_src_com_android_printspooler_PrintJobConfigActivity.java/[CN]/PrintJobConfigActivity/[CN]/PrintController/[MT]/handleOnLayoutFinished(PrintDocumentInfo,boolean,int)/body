{
  if (mRequestCounter.get() != sequence) {
    return;
  }
  if (isCancelled()) {
    mEditor.updateUi();
    if (mEditor.isDone()) {
      PrintJobConfigActivity.this.finish();
    }
    return;
  }
  mControllerState=CONTROLLER_STATE_LAYOUT_COMPLETED;
  final boolean infoChanged=!info.equals(mDocument.info);
  if (infoChanged) {
    mDocument.info=info;
    PrintSpoolerService.peekInstance().setPrintJobPrintDocumentInfoNoPersistence(mPrintJobId,info);
  }
  if (infoChanged || layoutChanged) {
    mDocument.pages=null;
    PrintSpoolerService.peekInstance().setPrintJobPagesNoPersistence(mPrintJobId,null);
  }
  mRequestedPages=mEditor.getRequestedPages();
  if (mRequestedPages == null) {
    mEditor.updateUi();
    if (mEditor.isDone()) {
      PrintJobConfigActivity.this.finish();
    }
    return;
  }
  if (!infoChanged && !layoutChanged && PageRangeUtils.contains(mDocument.pages,mRequestedPages)) {
    if (mEditor.isDone()) {
      requestCreatePdfFileOrFinish();
    }
    return;
  }
  mEditor.updateUi();
  mControllerState=CONTROLLER_STATE_WRITE_STARTED;
  mRemotePrintAdapter.write(mRequestedPages,mWriteResultCallback,mRequestCounter.incrementAndGet());
}
