{
  if (mRequestCounter.get() != sequence) {
    return;
  }
  if (isCancelled()) {
    if (mEditor.isDone()) {
      PrintJobConfigActivity.this.finish();
    }
    return;
  }
  mControllerState=CONTROLLER_STATE_WRITE_COMPLETED;
  mDocument.pages=PageRangeUtils.normalize(pages);
  if (DEBUG) {
    Log.i(LOG_TAG,"Requested: " + Arrays.toString(mRequestedPages) + " and got: "+ Arrays.toString(mDocument.pages));
  }
  if (Arrays.equals(mDocument.pages,mRequestedPages)) {
    PrintSpoolerService.peekInstance().setPrintJobPagesNoPersistence(mPrintJobId,ALL_PAGES_ARRAY);
  }
 else   if (Arrays.equals(mDocument.pages,ALL_PAGES_ARRAY)) {
    PrintSpoolerService.peekInstance().setPrintJobPagesNoPersistence(mPrintJobId,mRequestedPages);
  }
 else   if (PageRangeUtils.contains(mDocument.pages,mRequestedPages)) {
    final int offset=mDocument.pages[0].getStart() - pages[0].getStart();
    PageRange[] offsetPages=Arrays.copyOf(mDocument.pages,mDocument.pages.length);
    PageRangeUtils.offsetStart(offsetPages,offset);
    PrintSpoolerService.peekInstance().setPrintJobPagesNoPersistence(mPrintJobId,offsetPages);
  }
 else   if (Arrays.equals(mRequestedPages,ALL_PAGES_ARRAY) && mDocument.pages.length == 1 && mDocument.pages[0].getStart() == 0 && mDocument.pages[0].getEnd() == mDocument.info.getPageCount() - 1) {
    PrintSpoolerService.peekInstance().setPrintJobPagesNoPersistence(mPrintJobId,mDocument.pages);
  }
 else {
    mControllerState=CONTROLLER_STATE_FAILED;
    Log.e(LOG_TAG,"Received invalid pages from the app");
    PrintJobConfigActivity.this.finish();
  }
  if (mEditor.isDone()) {
    updateAndSaveCurrentPrintAttributes(mDocument.info);
    if (mEditor.isPrintingToPdf()) {
      PrintJobInfo printJob=PrintSpoolerService.peekInstance().getPrintJobInfo(mPrintJobId,PrintManager.APP_ID_ANY);
      Intent intent=new Intent(Intent.ACTION_CREATE_DOCUMENT);
      intent.setType("application/pdf");
      intent.putExtra(Intent.EXTRA_TITLE,printJob.getLabel());
      startActivityForResult(intent,ACTIVITY_REQUEST_CREATE_FILE);
    }
 else {
      PrintJobConfigActivity.this.finish();
    }
  }
}
