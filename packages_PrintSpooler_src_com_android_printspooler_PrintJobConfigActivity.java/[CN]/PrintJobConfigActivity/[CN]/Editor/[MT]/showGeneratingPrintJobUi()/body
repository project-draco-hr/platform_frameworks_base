{
  final ViewGroup contentContainer=(ViewGroup)findViewById(R.id.content_container);
  final View contentEditing=contentContainer.findViewById(R.id.content_editing);
  final View contentGenerating=getLayoutInflater().inflate(R.layout.print_job_config_activity_content_generating,contentContainer,false);
  Button cancelButton=(Button)contentGenerating.findViewById(R.id.cancel_button);
  cancelButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      if (!mController.isWorking()) {
        PrintJobConfigActivity.this.finish();
      }
      mEditor.cancel();
    }
  }
);
  contentEditing.animate().alpha(0.0f).withLayer().withEndAction(new Runnable(){
    @Override public void run(){
      contentEditing.setVisibility(View.INVISIBLE);
      contentGenerating.setMinimumWidth(contentContainer.getWidth());
      contentGenerating.setAlpha(0.0f);
      final int widthSpec=MeasureSpec.makeMeasureSpec(contentContainer.getWidth(),MeasureSpec.AT_MOST);
      final int heightSpec=MeasureSpec.makeMeasureSpec(contentContainer.getHeight(),MeasureSpec.AT_MOST);
      contentGenerating.measure(widthSpec,heightSpec);
      final float scaleY=(float)contentGenerating.getMeasuredHeight() / (float)contentContainer.getHeight();
      contentContainer.animate().scaleY(scaleY).withLayer().withEndAction(new Runnable(){
        @Override public void run(){
          contentContainer.removeAllViews();
          contentContainer.setScaleY(1.0f);
          contentContainer.addView(contentGenerating);
          contentGenerating.animate().withLayer().alpha(1.0f);
        }
      }
);
    }
  }
);
}
