{
  if (mFakePdfPrinter == null) {
    mCurrentPrinter=mFakePdfPrinter=createFakePdfPrinter();
    updatePrintAttributes(mCurrentPrinter.getCapabilities());
    updateUi();
  }
  if (mPrinters.isEmpty()) {
    mPrinters.addAll(printers);
    mEditor.ensureCurrentPrinterSelected();
    notifyDataSetChanged();
    return;
  }
  ArrayMap<PrinterId,PrinterInfo> newPrintersMap=new ArrayMap<PrinterId,PrinterInfo>();
  final int printerCount=printers.size();
  for (int i=0; i < printerCount; i++) {
    PrinterInfo printer=printers.get(i);
    newPrintersMap.put(printer.getId(),printer);
  }
  List<PrinterInfo> newPrinters=new ArrayList<PrinterInfo>();
  final int oldPrinterCount=mPrinters.size();
  for (int i=0; i < oldPrinterCount; i++) {
    PrinterId oldPrinterId=mPrinters.get(i).getId();
    PrinterInfo updatedPrinter=newPrintersMap.remove(oldPrinterId);
    if (updatedPrinter != null) {
      newPrinters.add(updatedPrinter);
    }
  }
  newPrinters.addAll(newPrintersMap.values());
  mPrinters.clear();
  mPrinters.addAll(newPrinters);
  mEditor.ensureCurrentPrinterSelected();
  notifyDataSetChanged();
}
