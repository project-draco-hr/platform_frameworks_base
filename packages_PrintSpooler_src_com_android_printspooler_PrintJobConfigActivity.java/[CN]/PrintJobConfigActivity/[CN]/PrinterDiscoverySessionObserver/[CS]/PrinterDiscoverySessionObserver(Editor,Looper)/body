{
  mEditor=editor;
  mHandler=new Handler(looper,null,true){
    @Override public void handleMessage(    Message message){
switch (message.what) {
case MSG_SET_CONTROLLER:
{
          mController=(IPrinterDiscoverySessionController)message.obj;
          List<PrinterId> printerIds=Collections.emptyList();
          try {
            mController.open(printerIds);
          }
 catch (          RemoteException e) {
            Log.e(LOG_TAG,"Error starting printer discovery");
          }
        }
      break;
case MSG_ON_PRINTERS_ADDED:
{
      List<PrinterInfo> printers=(List<PrinterInfo>)message.obj;
      mEditor.addPrinters(printers);
    }
  break;
case MSG_ON_PRINTERS_REMOVED:
{
  List<PrinterId> printerIds=(List<PrinterId>)message.obj;
  mEditor.removePrinters(printerIds);
}
break;
case MSG_ON_PRINTERS_UPDATED:
{
List<PrinterInfo> printers=(List<PrinterInfo>)message.obj;
mEditor.updatePrinters(printers);
}
break;
}
}
}
;
}
