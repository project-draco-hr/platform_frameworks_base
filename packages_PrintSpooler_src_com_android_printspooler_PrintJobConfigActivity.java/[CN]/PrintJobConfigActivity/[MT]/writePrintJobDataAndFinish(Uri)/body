{
  new AsyncTask<Void,Void,Void>(){
    @Override protected Void doInBackground(    Void... params){
      InputStream in=null;
      OutputStream out=null;
      try {
        PrintJobInfo printJob=PrintSpoolerService.peekInstance().getPrintJobInfo(mPrintJobId,PrintManager.APP_ID_ANY);
        if (printJob == null) {
          return null;
        }
        File file=PrintSpoolerService.peekInstance().generateFileForPrintJob(mPrintJobId);
        in=new FileInputStream(file);
        out=getContentResolver().openOutputStream(uri);
        final byte[] buffer=new byte[8192];
        while (true) {
          final int readByteCount=in.read(buffer);
          if (readByteCount < 0) {
            break;
          }
          out.write(buffer,0,readByteCount);
        }
      }
 catch (      FileNotFoundException fnfe) {
        Log.e(LOG_TAG,"Error writing print job data!",fnfe);
      }
catch (      IOException ioe) {
        Log.e(LOG_TAG,"Error writing print job data!",ioe);
      }
 finally {
        IoUtils.closeQuietly(in);
        IoUtils.closeQuietly(out);
      }
      return null;
    }
    @Override public void onPostExecute(    Void result){
      mEditor.cancel();
      PrintJobConfigActivity.this.finish();
    }
  }
.executeOnExecutor(AsyncTask.SERIAL_EXECUTOR,(Void[])null);
}
