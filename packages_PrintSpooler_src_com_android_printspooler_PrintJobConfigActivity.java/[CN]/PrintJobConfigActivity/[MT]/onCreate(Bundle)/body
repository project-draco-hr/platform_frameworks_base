{
  super.onCreate(bundle);
  setContentView(R.layout.print_job_config_activity);
  getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN | WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);
  mPrintManager=(IPrintManager)IPrintManager.Stub.asInterface(ServiceManager.getService(PRINT_SERVICE));
  Bundle extras=getIntent().getExtras();
  mPrintJobId=extras.getInt(EXTRA_PRINT_JOB_ID,-1);
  if (mPrintJobId < 0) {
    throw new IllegalArgumentException("Invalid print job id: " + mPrintJobId);
  }
  mAppId=extras.getInt(EXTRA_APP_ID,-1);
  if (mAppId < 0) {
    throw new IllegalArgumentException("Invalid app id: " + mAppId);
  }
  mPrintAttributes=getIntent().getParcelableExtra(EXTRA_ATTRIBUTES);
  if (mPrintAttributes == null) {
    mPrintAttributes=new PrintAttributes.Builder().create();
  }
  mPrinable=extras.getBinder(EXTRA_PRINTABLE);
  if (mPrinable == null) {
    throw new IllegalArgumentException("Printable cannot be null");
  }
  mRemotePrintAdapter=new RemotePrintAdapter(IPrintAdapter.Stub.asInterface(mPrinable),mPrintSpooler.generateFileForPrintJob(mPrintJobId));
  try {
    mPrinable.linkToDeath(mDeathRecipient,0);
  }
 catch (  RemoteException re) {
    finish();
  }
  mPrinterDiscoveryObserver=new PrintDiscoveryObserver(getMainLooper());
  bindUi();
}
