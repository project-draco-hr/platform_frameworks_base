{
  final int rectWidth=rect.width();
  final int rectHeight=rect.height();
  final int viewWidth=getViewWidth();
  final int viewHeight=getViewHeightWithTitle();
  float scale=Math.min((float)viewWidth / rectWidth,(float)viewHeight / rectHeight);
  scale=mZoomManager.computeScaleWithLimits(scale);
  if (!mZoomManager.willScaleTriggerZoom(scale)) {
    pinScrollTo(contentToViewX(rect.left + rectWidth / 2) - viewWidth / 2,contentToViewY(rect.top + rectHeight / 2) - viewHeight / 2,true,0);
  }
 else {
    float actualScale=mZoomManager.getScale();
    float oldScreenX=rect.left * actualScale - getScrollX();
    float rectViewX=rect.left * scale;
    float rectViewWidth=rectWidth * scale;
    float newMaxWidth=mContentWidth * scale;
    float newScreenX=(viewWidth - rectViewWidth) / 2;
    if (newScreenX > rectViewX) {
      newScreenX=rectViewX;
    }
 else     if (newScreenX > (newMaxWidth - rectViewX - rectViewWidth)) {
      newScreenX=viewWidth - (newMaxWidth - rectViewX);
    }
    float zoomCenterX=(oldScreenX * scale - newScreenX * actualScale) / (scale - actualScale);
    float oldScreenY=rect.top * actualScale + getTitleHeight() - getScrollY();
    float rectViewY=rect.top * scale + getTitleHeight();
    float rectViewHeight=rectHeight * scale;
    float newMaxHeight=mContentHeight * scale + getTitleHeight();
    float newScreenY=(viewHeight - rectViewHeight) / 2;
    if (newScreenY > rectViewY) {
      newScreenY=rectViewY;
    }
 else     if (newScreenY > (newMaxHeight - rectViewY - rectViewHeight)) {
      newScreenY=viewHeight - (newMaxHeight - rectViewY);
    }
    float zoomCenterY=(oldScreenY * scale - newScreenY * actualScale) / (scale - actualScale);
    mZoomManager.setZoomCenter(zoomCenterX,zoomCenterY);
    mZoomManager.startZoomAnimation(scale,false);
  }
}
