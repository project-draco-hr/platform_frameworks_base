{
  if (mNativeClass == 0) {
    return false;
  }
  if (mZoomManager.isFixedLengthAnimationInProgress()) {
    return false;
  }
  rect.offset(child.getLeft() - child.getScrollX(),child.getTop() - child.getScrollY());
  Rect content=new Rect(viewToContentX(getScrollX()),viewToContentY(getScrollY()),viewToContentX(getScrollX() + getWidth() - getVerticalScrollbarWidth()),viewToContentY(getScrollY() + getViewHeightWithTitle()));
  content=nativeSubtractLayers(content);
  int screenTop=contentToViewY(content.top);
  int screenBottom=contentToViewY(content.bottom);
  int height=screenBottom - screenTop;
  int scrollYDelta=0;
  if (rect.bottom > screenBottom) {
    int oneThirdOfScreenHeight=height / 3;
    if (rect.height() > 2 * oneThirdOfScreenHeight) {
      scrollYDelta=rect.top - screenTop;
    }
 else {
      scrollYDelta=rect.top - (screenTop + oneThirdOfScreenHeight);
    }
  }
 else   if (rect.top < screenTop) {
    scrollYDelta=rect.top - screenTop;
  }
  int screenLeft=contentToViewX(content.left);
  int screenRight=contentToViewX(content.right);
  int width=screenRight - screenLeft;
  int scrollXDelta=0;
  if (rect.right > screenRight && rect.left > screenLeft) {
    if (rect.width() > width) {
      scrollXDelta+=(rect.left - screenLeft);
    }
 else {
      scrollXDelta+=(rect.right - screenRight);
    }
  }
 else   if (rect.left < screenLeft) {
    scrollXDelta-=(screenLeft - rect.left);
  }
  if ((scrollYDelta | scrollXDelta) != 0) {
    return pinScrollBy(scrollXDelta,scrollYDelta,!immediate,0);
  }
  return false;
}
