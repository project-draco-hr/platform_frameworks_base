{
  QueuedTouch preQueue=mPreQueue;
  if (preQueue != null) {
    if (preQueue.mSequence == ted.mSequence) {
      mPreQueue=preQueue.mNext;
    }
 else {
      QueuedTouch prev=preQueue;
      preQueue=null;
      while (prev.mNext != null) {
        if (prev.mNext.mSequence == ted.mSequence) {
          preQueue=prev.mNext;
          prev.mNext=preQueue.mNext;
          break;
        }
 else {
          prev=prev.mNext;
        }
      }
    }
  }
  if (ted.mSequence < mLastHandledTouchSequence) {
    Log.w(LOGTAG,"Stale touch event " + MotionEvent.actionToString(ted.mAction) + " received from webcore; ignoring");
    return false;
  }
  if (dropStaleGestures(ted.mMotionEvent,ted.mSequence)) {
    return false;
  }
  runNextQueuedEvents();
  if (mLastHandledTouchSequence + 1 == ted.mSequence) {
    if (preQueue != null) {
      recycleQueuedTouch(preQueue);
      preQueue=null;
    }
    handleQueuedTouchEventData(ted);
    mLastHandledTouchSequence++;
    runNextQueuedEvents();
  }
 else {
    QueuedTouch qd=preQueue != null ? preQueue : obtainQueuedTouch().set(ted);
    mTouchEventQueue=mTouchEventQueue == null ? qd : mTouchEventQueue.add(qd);
  }
  return true;
}
