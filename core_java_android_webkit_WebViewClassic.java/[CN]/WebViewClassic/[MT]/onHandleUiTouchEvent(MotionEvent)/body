{
  final ScaleGestureDetector detector=mZoomManager.getScaleGestureDetector();
  int action=ev.getActionMasked();
  final boolean pointerUp=action == MotionEvent.ACTION_POINTER_UP;
  final boolean configChanged=action == MotionEvent.ACTION_POINTER_UP || action == MotionEvent.ACTION_POINTER_DOWN;
  final int skipIndex=pointerUp ? ev.getActionIndex() : -1;
  float sumX=0, sumY=0;
  final int count=ev.getPointerCount();
  for (int i=0; i < count; i++) {
    if (skipIndex == i)     continue;
    sumX+=ev.getX(i);
    sumY+=ev.getY(i);
  }
  final int div=pointerUp ? count - 1 : count;
  float x=sumX / div;
  float y=sumY / div;
  if (configChanged) {
    mLastTouchX=Math.round(x);
    mLastTouchY=Math.round(y);
    mLastTouchTime=ev.getEventTime();
    mWebView.cancelLongPress();
    mPrivateHandler.removeMessages(SWITCH_TO_LONGPRESS);
  }
  if (detector != null) {
    detector.onTouchEvent(ev);
    if (detector.isInProgress()) {
      mLastTouchTime=ev.getEventTime();
      if (!mZoomManager.supportsPanDuringZoom()) {
        return;
      }
      mTouchMode=TOUCH_DRAG_MODE;
      if (mVelocityTracker == null) {
        mVelocityTracker=VelocityTracker.obtain();
      }
    }
  }
  if (action == MotionEvent.ACTION_POINTER_DOWN) {
    cancelTouch();
    action=MotionEvent.ACTION_DOWN;
  }
 else   if (action == MotionEvent.ACTION_MOVE) {
    if (x < 0 || y < 0) {
      return;
    }
  }
  handleTouchEventCommon(ev,action,Math.round(x),Math.round(y));
}
