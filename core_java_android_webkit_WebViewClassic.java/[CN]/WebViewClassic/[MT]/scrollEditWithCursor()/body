{
  if (mLastEditScroll != 0) {
    int x=viewToContentX(mLastTouchX + getScrollX() + mSelectOffset.x);
    float scrollSpeedX=getTextScrollSpeed(x,mEditTextContentBounds.left,mEditTextContentBounds.right);
    int y=viewToContentY(mLastTouchY + getScrollY() + mSelectOffset.y);
    float scrollSpeedY=getTextScrollSpeed(y,mEditTextContentBounds.top,mEditTextContentBounds.bottom);
    if (scrollSpeedX == 0.0f && scrollSpeedY == 0.0f) {
      endScrollEdit();
    }
 else {
      long currentTime=SystemClock.uptimeMillis();
      long timeSinceLastUpdate=currentTime - mLastEditScroll;
      int deltaX=getTextScrollDelta(scrollSpeedX,timeSinceLastUpdate);
      int deltaY=getTextScrollDelta(scrollSpeedY,timeSinceLastUpdate);
      int scrollX=getTextScrollX() + deltaX;
      scrollX=Math.min(getMaxTextScrollX(),scrollX);
      scrollX=Math.max(0,scrollX);
      int scrollY=getTextScrollY() + deltaY;
      scrollY=Math.min(getMaxTextScrollY(),scrollY);
      scrollY=Math.max(0,scrollY);
      mLastEditScroll=currentTime;
      if (scrollX == getTextScrollX() && scrollY == getTextScrollY()) {
        mPrivateHandler.sendEmptyMessageDelayed(SCROLL_EDIT_TEXT,TEXT_SCROLL_FIRST_SCROLL_MS);
      }
 else {
        scrollEditText(scrollX,scrollY);
        int selectionX=getSelectionCoordinate(x,mEditTextContentBounds.left,mEditTextContentBounds.right);
        int selectionY=getSelectionCoordinate(y,mEditTextContentBounds.top,mEditTextContentBounds.bottom);
        int oldX=mSelectDraggingCursor.x;
        int oldY=mSelectDraggingCursor.y;
        mSelectDraggingCursor.set(selectionX,selectionY);
        updateWebkitSelection();
        mSelectDraggingCursor.set(oldX,oldY);
      }
    }
  }
}
