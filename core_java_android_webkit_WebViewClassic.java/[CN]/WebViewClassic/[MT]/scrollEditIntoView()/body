{
  Rect visibleRect=new Rect(viewToContentX(getScrollX()),viewToContentY(getScrollY()),viewToContentX(getScrollX() + getWidth()),viewToContentY(getScrollY() + getViewHeightWithTitle()));
  if (visibleRect.contains(mEditTextContentBounds)) {
    return;
  }
  syncSelectionCursors();
  nativeFindMaxVisibleRect(mNativeClass,mEditTextLayerId,visibleRect);
  final int buffer=Math.max(1,viewToContentDimension(EDIT_RECT_BUFFER));
  Rect showRect=new Rect(Math.max(0,mEditTextContentBounds.left - buffer),Math.max(0,mEditTextContentBounds.top - buffer),mEditTextContentBounds.right + buffer,mEditTextContentBounds.bottom + buffer);
  Point caretTop=calculateBaseCaretTop();
  if (visibleRect.width() < mEditTextContentBounds.width()) {
    if (mSelectCursorBase.x < caretTop.x) {
      showRect.left=Math.max(0,mSelectCursorBase.x - buffer);
      showRect.right=caretTop.x + buffer;
    }
 else {
      showRect.left=Math.max(0,caretTop.x - buffer);
      showRect.right=mSelectCursorBase.x + buffer;
    }
  }
  if (visibleRect.height() < mEditTextContentBounds.height()) {
    if (mSelectCursorBase.y > caretTop.y) {
      showRect.top=Math.max(0,caretTop.y - buffer);
      showRect.bottom=mSelectCursorBase.y + buffer;
    }
 else {
      showRect.top=Math.max(0,mSelectCursorBase.y - buffer);
      showRect.bottom=caretTop.y + buffer;
    }
  }
  if (visibleRect.contains(showRect)) {
    return;
  }
  int scrollX=viewToContentX(getScrollX());
  if (visibleRect.left > showRect.left) {
    scrollX+=showRect.left - visibleRect.left;
  }
 else   if (visibleRect.right < showRect.right) {
    scrollX+=showRect.right - visibleRect.right;
  }
  int scrollY=viewToContentY(getScrollY());
  if (visibleRect.top > showRect.top) {
    scrollY+=showRect.top - visibleRect.top;
  }
 else   if (visibleRect.bottom < showRect.bottom) {
    scrollY+=showRect.bottom - visibleRect.bottom;
  }
  contentScrollTo(scrollX,scrollY,false);
}
