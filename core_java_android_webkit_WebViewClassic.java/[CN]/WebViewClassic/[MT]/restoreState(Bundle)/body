{
  WebBackForwardListClassic returnList=null;
  if (inState == null) {
    return returnList;
  }
  if (inState.containsKey("index") && inState.containsKey("history")) {
    mCertificate=SslCertificate.restoreState(inState.getBundle("certificate"));
    final WebBackForwardListClassic list=mCallbackProxy.getBackForwardList();
    final int index=inState.getInt("index");
synchronized (list) {
      final List<byte[]> history=(List<byte[]>)inState.getSerializable("history");
      final int size=history.size();
      if (index < 0 || index >= size) {
        return null;
      }
      for (int i=0; i < size; i++) {
        byte[] data=history.remove(0);
        if (data == null) {
          return null;
        }
        WebHistoryItem item=new WebHistoryItemClassic(data);
        list.addHistoryItem(item);
      }
      returnList=copyBackForwardList();
      returnList.setCurrentIndex(index);
    }
    if (inState.getBoolean("privateBrowsingEnabled")) {
      getSettings().setPrivateBrowsingEnabled(true);
    }
    mZoomManager.restoreZoomState(inState);
    mWebViewCore.removeMessages();
    mWebViewCore.sendMessage(EventHub.RESTORE_STATE,index);
  }
  return returnList;
}
