{
  if (mWebView.getParent() == null)   return false;
  final ScaleGestureDetector detector=mZoomManager.getMultiTouchGestureDetector();
  if (detector != null && detector.isInProgress()) {
    return false;
  }
  if (mNativeClass != 0 && nativeCursorIsTextInput()) {
    centerKeyPressOnTextField();
    rebuildWebTextView();
  }
 else {
    clearTextEntry();
  }
  if (inEditingMode()) {
    mWebTextView.ensureLayout();
    AbsoluteLayout.LayoutParams params=(AbsoluteLayout.LayoutParams)mWebTextView.getLayoutParams();
    MotionEvent fake=MotionEvent.obtain(mLastTouchTime,mLastTouchTime,MotionEvent.ACTION_DOWN,mLastTouchX - params.x + getScrollX(),mLastTouchY - params.y + getScrollY(),0);
    mWebTextView.dispatchTouchEvent(fake);
    return mWebTextView.performLongClick();
  }
  if (mSelectingText)   return false;
  if (mWebViewPrivate.super_performLongClick()) {
    return true;
  }
  final boolean isSelecting=selectText();
  if (isSelecting) {
    mWebView.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);
  }
 else   if (focusCandidateIsEditableText()) {
    mSelectCallback=new SelectActionModeCallback();
    mSelectCallback.setWebView(this);
    mSelectCallback.setTextSelected(false);
    mWebView.startActionMode(mSelectCallback);
  }
  return isSelecting;
}
