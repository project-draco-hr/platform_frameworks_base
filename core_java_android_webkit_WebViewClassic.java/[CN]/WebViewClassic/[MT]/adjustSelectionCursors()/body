{
  boolean wasDraggingStart=(mSelectDraggingCursor == mSelectCursorBase);
  int oldX=mSelectDraggingCursor.x;
  int oldY=mSelectDraggingCursor.y;
  int oldStartX=mSelectCursorBase.x;
  int oldStartY=mSelectCursorBase.y;
  int oldEndX=mSelectCursorExtent.x;
  int oldEndY=mSelectCursorExtent.y;
  syncSelectionCursors();
  boolean dragChanged=oldX != mSelectDraggingCursor.x || oldY != mSelectDraggingCursor.y;
  if (dragChanged && !mIsCaretSelection) {
    boolean draggingStart;
    if (wasDraggingStart) {
      float endStart=distanceSquared(oldEndX,oldEndY,mSelectCursorBase);
      float endEnd=distanceSquared(oldEndX,oldEndY,mSelectCursorExtent);
      draggingStart=endStart > endEnd;
    }
 else {
      float startStart=distanceSquared(oldStartX,oldStartY,mSelectCursorBase);
      float startEnd=distanceSquared(oldStartX,oldStartY,mSelectCursorExtent);
      draggingStart=startStart > startEnd;
    }
    mSelectDraggingCursor=(draggingStart ? mSelectCursorBase : mSelectCursorExtent);
    mSelectDraggingTextQuad=(draggingStart ? mSelectCursorBaseTextQuad : mSelectCursorExtentTextQuad);
    mSelectDraggingOffset=(draggingStart ? mSelectHandleLeftOffset : mSelectHandleRightOffset);
  }
  mSelectDraggingCursor.set(oldX,oldY);
}
