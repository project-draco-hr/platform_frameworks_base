{
  final VCardBuilder builder;
  if (mImportVerifier != null) {
    final VNodeBuilder vnodeBuilder=mPropertyNodesVerifier;
    final VCardDataBuilder vcardDataBuilder=new VCardDataBuilder(mVCardType);
    vcardDataBuilder.addEntryHandler(mImportVerifier);
    if (mPropertyNodesVerifier != null) {
      builder=new VCardBuilderCollection(Arrays.asList(mPropertyNodesVerifier,vcardDataBuilder));
    }
 else {
      builder=vnodeBuilder;
    }
  }
 else {
    if (mPropertyNodesVerifier != null) {
      builder=mPropertyNodesVerifier;
    }
 else {
      return;
    }
  }
  final VCardParser parser=(mIsV30 ? new VCardParser_V30(true) : new VCardParser_V21());
  final TestCase testCase=VCardTestsBase.this;
  InputStream is=null;
  try {
    String charset=(VCardConfig.usesShiftJis(mVCardType) ? "SHIFT_JIS" : "UTF-8");
    is=new ByteArrayInputStream(vcard.getBytes(charset));
    testCase.assertEquals(true,parser.parse(is,null,builder));
  }
 catch (  IOException e) {
    testCase.fail("Unexpected IOException: " + e.getMessage());
  }
catch (  VCardException e) {
    testCase.fail("Unexpected VCardException: " + e.getMessage());
  }
 finally {
    if (is != null) {
      try {
        is.close();
      }
 catch (      IOException e) {
      }
    }
  }
}
