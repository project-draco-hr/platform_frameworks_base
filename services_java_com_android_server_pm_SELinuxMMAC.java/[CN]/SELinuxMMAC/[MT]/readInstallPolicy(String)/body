{
  if (macPermsPath == null) {
    throw new NullPointerException("mac_permissions.xml file path is null");
  }
  HashMap<Signature,Policy> sigSeinfo=new HashMap<Signature,Policy>();
  String defaultSeinfo=null;
  FileReader policyFile=null;
  try {
    policyFile=new FileReader(macPermsPath);
    Slog.d(TAG,"Using policy file " + macPermsPath);
    XmlPullParser parser=Xml.newPullParser();
    parser.setInput(policyFile);
    XmlUtils.beginDocument(parser,"policy");
    while (true) {
      XmlUtils.nextElement(parser);
      if (parser.getEventType() == XmlPullParser.END_DOCUMENT) {
        break;
      }
      String tagName=parser.getName();
      if ("signer".equals(tagName)) {
        String cert=parser.getAttributeValue(null,"signature");
        if (cert == null) {
          Slog.w(TAG,"<signer> without signature at " + parser.getPositionDescription());
          XmlUtils.skipCurrentTag(parser);
          continue;
        }
        Signature signature;
        try {
          signature=new Signature(cert);
        }
 catch (        IllegalArgumentException e) {
          Slog.w(TAG,"<signer> with bad signature at " + parser.getPositionDescription(),e);
          XmlUtils.skipCurrentTag(parser);
          continue;
        }
        Policy policy=readPolicyTags(parser);
        if (policy.isValid()) {
          sigSeinfo.put(signature,policy);
        }
      }
 else       if ("default".equals(tagName)) {
        defaultSeinfo=readSeinfoTag(parser);
        if (DEBUG_POLICY_INSTALL)         Slog.i(TAG,"<default> tag assigned seinfo=" + defaultSeinfo);
      }
 else {
        XmlUtils.skipCurrentTag(parser);
      }
    }
  }
 catch (  XmlPullParserException xpe) {
    Slog.w(TAG,"Got exception parsing " + macPermsPath,xpe);
    return false;
  }
catch (  IOException ioe) {
    Slog.w(TAG,"Got exception parsing " + macPermsPath,ioe);
    return false;
  }
 finally {
    IoUtils.closeQuietly(policyFile);
  }
  flushInstallPolicy();
  sSigSeinfo=sigSeinfo;
  sDefaultSeinfo=defaultSeinfo;
  return true;
}
