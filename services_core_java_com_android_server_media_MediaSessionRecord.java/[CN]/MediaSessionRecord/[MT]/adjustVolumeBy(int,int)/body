{
  if (isPlaybackActive(false)) {
    flags&=~AudioManager.FLAG_PLAY_SOUND;
  }
  if (mVolumeType == MediaSession.PLAYBACK_TYPE_LOCAL) {
    if (delta == 0) {
      mAudioManager.adjustStreamVolume(mAudioStream,delta,flags);
    }
 else {
      int direction=0;
      int steps=delta;
      if (delta > 0) {
        direction=1;
      }
 else       if (delta < 0) {
        direction=-1;
        steps=-delta;
      }
      for (int i=0; i < steps; i++) {
        mAudioManager.adjustStreamVolume(mAudioStream,direction,flags);
      }
    }
  }
 else {
    if (mVolumeControlType == VolumeProvider.VOLUME_CONTROL_FIXED) {
      return;
    }
    mSessionCb.adjustVolumeBy(delta);
    int volumeBefore=(mOptimisticVolume < 0 ? mCurrentVolume : mOptimisticVolume);
    mOptimisticVolume=volumeBefore + delta;
    mOptimisticVolume=Math.max(0,Math.min(mOptimisticVolume,mMaxVolume));
    mHandler.removeCallbacks(mClearOptimisticVolumeRunnable);
    mHandler.postDelayed(mClearOptimisticVolumeRunnable,OPTIMISTIC_VOLUME_TIMEOUT);
    if (volumeBefore != mOptimisticVolume) {
      pushVolumeUpdate();
    }
    if (DEBUG) {
      Log.d(TAG,"Adjusted optimistic volume to " + mOptimisticVolume + " max is "+ mMaxVolume);
    }
  }
}
