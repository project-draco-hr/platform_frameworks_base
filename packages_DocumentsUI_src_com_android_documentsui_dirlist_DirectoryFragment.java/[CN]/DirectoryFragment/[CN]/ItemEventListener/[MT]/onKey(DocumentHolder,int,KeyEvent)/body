{
  if (event.getAction() != KeyEvent.ACTION_DOWN) {
    return false;
  }
  if (keyCode == KeyEvent.KEYCODE_TAB) {
    return false;
  }
  if (mFocusManager.handleKey(doc,keyCode,event)) {
    if (shouldExtendSelection(doc,event)) {
      if (!mSelectionManager.isRangeSelectionActive()) {
        mSelectionManager.startRangeSelection(doc.getAdapterPosition());
      }
      mSelectionManager.snapRangeSelection(mFocusManager.getFocusPosition());
    }
 else {
      mSelectionManager.endRangeSelection();
    }
    return true;
  }
switch (keyCode) {
case KeyEvent.KEYCODE_ENTER:
    if (event.isShiftPressed()) {
      return onSelect(doc);
    }
case KeyEvent.KEYCODE_DPAD_CENTER:
case KeyEvent.KEYCODE_BUTTON_A:
  return onActivate(doc);
case KeyEvent.KEYCODE_FORWARD_DEL:
if (mSelectionManager.hasSelection()) {
  Selection selection=mSelectionManager.getSelection(new Selection());
  deleteDocuments(selection);
}
return true;
}
return false;
}
