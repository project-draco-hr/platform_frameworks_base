{
  value*=scale;
  boolean neg=value < 0;
  if (neg) {
    value=-value;
  }
  long bits=(long)(value * (1 << 23) + .5f);
  int radix;
  int shift;
  if ((bits & 0x7fffff) == 0) {
    radix=TypedValue.COMPLEX_RADIX_23p0;
    shift=23;
  }
 else   if ((bits & 0xffffffffff800000L) == 0) {
    radix=TypedValue.COMPLEX_RADIX_0p23;
    shift=0;
  }
 else   if ((bits & 0xffffffff80000000L) == 0) {
    radix=TypedValue.COMPLEX_RADIX_8p15;
    shift=8;
  }
 else   if ((bits & 0xffffff8000000000L) == 0) {
    radix=TypedValue.COMPLEX_RADIX_16p7;
    shift=16;
  }
 else {
    radix=TypedValue.COMPLEX_RADIX_23p0;
    shift=23;
  }
  int mantissa=(int)((bits >> shift) & TypedValue.COMPLEX_MANTISSA_MASK);
  if (neg) {
    mantissa=(-mantissa) & TypedValue.COMPLEX_MANTISSA_MASK;
  }
  outValue.data|=(radix << TypedValue.COMPLEX_RADIX_SHIFT) | (mantissa << TypedValue.COMPLEX_MANTISSA_SHIFT);
}
