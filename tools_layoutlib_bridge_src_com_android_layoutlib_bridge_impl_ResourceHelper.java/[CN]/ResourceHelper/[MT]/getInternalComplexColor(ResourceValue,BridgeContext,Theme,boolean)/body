{
  String value=resValue.getValue();
  if (value == null || RenderResources.REFERENCE_NULL.equals(value)) {
    return null;
  }
  XmlPullParser parser=context.getLayoutlibCallback().getXmlFileParser(value);
  if (parser == null) {
    File f=new File(value);
    if (f.isFile()) {
      try {
        parser=ParserFactory.create(f);
      }
 catch (      XmlPullParserException|FileNotFoundException e) {
        Bridge.getLog().error(LayoutLog.TAG_RESOURCES_READ,"Failed to parse file " + value,e,null);
      }
    }
  }
  if (parser != null) {
    try {
      BridgeXmlBlockParser blockParser=new BridgeXmlBlockParser(parser,context,resValue.isFramework());
      try {
        int type;
        while ((type=blockParser.next()) != XmlPullParser.START_TAG && type != XmlPullParser.END_DOCUMENT) {
        }
        if (type != XmlPullParser.START_TAG) {
          throw new XmlPullParserException("No start tag found");
        }
        final String name=blockParser.getName();
        if (allowGradients && "gradient".equals(name)) {
          return ComplexColor_Accessor.createGradientColorFromXmlInner(context.getResources(),blockParser,blockParser,theme);
        }
 else         if ("selector".equals(name)) {
          return ComplexColor_Accessor.createColorStateListFromXmlInner(context.getResources(),blockParser,blockParser,theme);
        }
      }
  finally {
        blockParser.ensurePopped();
      }
    }
 catch (    XmlPullParserException e) {
      Bridge.getLog().error(LayoutLog.TAG_BROKEN,"Failed to configure parser for " + value,e,null);
    }
catch (    Exception e) {
      Bridge.getLog().error(LayoutLog.TAG_RESOURCES_READ,"Failed to parse file " + value,e,null);
      return null;
    }
  }
 else {
    try {
      int color=getColor(value);
      return ColorStateList.valueOf(color);
    }
 catch (    NumberFormatException e) {
      Bridge.getLog().error(LayoutLog.TAG_RESOURCES_FORMAT,"Failed to convert " + value + " into a ColorStateList",e,null);
    }
  }
  return null;
}
