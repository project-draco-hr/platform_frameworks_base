{
  float drawStart=ambientState.getTopPadding() + ambientState.getStackTranslation();
  float previousNotificationEnd=0;
  float previousNotificationStart=0;
  int childCount=algorithmState.visibleChildren.size();
  for (int i=0; i < childCount; i++) {
    ExpandableView child=algorithmState.visibleChildren.get(i);
    StackViewState state=resultState.getViewStateForView(child);
    if (!child.mustStayOnScreen()) {
      previousNotificationEnd=Math.max(drawStart,previousNotificationEnd);
      previousNotificationStart=Math.max(drawStart,previousNotificationStart);
    }
    float newYTranslation=state.yTranslation;
    float newHeight=state.height;
    float newNotificationEnd=newYTranslation + newHeight;
    boolean isHeadsUp=(child instanceof ExpandableNotificationRow) && ((ExpandableNotificationRow)child).isPinned();
    if (newYTranslation < previousNotificationEnd && (!isHeadsUp || ambientState.isShadeExpanded())) {
      float overlapAmount=previousNotificationEnd - newYTranslation;
      state.clipTopAmount=(int)overlapAmount;
    }
 else {
      state.clipTopAmount=0;
    }
    if (!child.isTransparent()) {
      previousNotificationEnd=newNotificationEnd;
      previousNotificationStart=newYTranslation;
    }
  }
}
