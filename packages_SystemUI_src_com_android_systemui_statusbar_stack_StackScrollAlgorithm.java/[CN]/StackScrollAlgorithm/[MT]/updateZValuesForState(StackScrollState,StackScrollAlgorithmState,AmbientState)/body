{
  int childCount=algorithmState.visibleChildren.size();
  float childrenOnTop=0.0f;
  for (int i=childCount - 1; i >= 0; i--) {
    ExpandableView child=algorithmState.visibleChildren.get(i);
    StackViewState childViewState=resultState.getViewStateForView(child);
    if (i > (childCount - 1 - algorithmState.itemsInBottomStack)) {
      float numItemsAbove=i - (childCount - 1 - algorithmState.itemsInBottomStack);
      float zSubtraction;
      if (numItemsAbove <= 1.0f) {
        float factor=0.2f;
        if (numItemsAbove <= factor) {
          zSubtraction=FakeShadowView.SHADOW_SIBLING_TRESHOLD * numItemsAbove * (1.0f / factor);
        }
 else {
          zSubtraction=FakeShadowView.SHADOW_SIBLING_TRESHOLD + (numItemsAbove - factor) * (1.0f / (1.0f - factor)) * (mZDistanceBetweenElements - FakeShadowView.SHADOW_SIBLING_TRESHOLD);
        }
      }
 else {
        zSubtraction=numItemsAbove * mZDistanceBetweenElements;
      }
      childViewState.zTranslation=mZBasicHeight - zSubtraction;
    }
 else     if (child.mustStayOnScreen() && childViewState.yTranslation < ambientState.getTopPadding() + ambientState.getStackTranslation()) {
      if (childrenOnTop != 0.0f) {
        childrenOnTop++;
      }
 else {
        float overlap=ambientState.getTopPadding() + ambientState.getStackTranslation() - childViewState.yTranslation;
        childrenOnTop+=Math.min(1.0f,overlap / childViewState.height);
      }
      childViewState.zTranslation=mZBasicHeight + childrenOnTop * mZDistanceBetweenElements;
    }
 else {
      childViewState.zTranslation=mZBasicHeight;
    }
  }
}
