{
  if (TextUtils.isEmpty(text) || TextUtils.isEmpty(locale) || end <= start) {
    return text;
  }
  final String[] suggestions=getStringSuggestions(text,start,end,locale);
  if (suggestions == null || suggestions.length == 0) {
    return text;
  }
  final Spannable spannable;
  if (text instanceof Spannable) {
    spannable=(Spannable)text;
  }
 else {
    spannable=new SpannableString(text);
  }
  final int N=Math.min(SuggestionSpan.SUGGESTIONS_MAX_SIZE,suggestions.length);
  final SuggestionSpan ss=new SuggestionSpan(constructLocaleFromString(locale),Arrays.copyOfRange(suggestions,0,N),0);
  spannable.setSpan(ss,start,end,Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
  return spannable;
}
