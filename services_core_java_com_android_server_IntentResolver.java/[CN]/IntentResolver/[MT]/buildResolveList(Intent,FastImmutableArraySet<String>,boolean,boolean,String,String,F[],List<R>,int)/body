{
  final String action=intent.getAction();
  final Uri data=intent.getData();
  final String packageName=intent.getPackage();
  final boolean excludingStopped=intent.isExcludingStopped();
  final Printer logPrinter;
  final PrintWriter logPrintWriter;
  if (debug) {
    logPrinter=new LogPrinter(Log.VERBOSE,TAG,Log.LOG_ID_SYSTEM);
    logPrintWriter=new FastPrintWriter(logPrinter);
  }
 else {
    logPrinter=null;
    logPrintWriter=null;
  }
  final int N=src != null ? src.length : 0;
  boolean hasNonDefaults=false;
  int i;
  F filter;
  for (i=0; i < N && (filter=src[i]) != null; i++) {
    int match;
    if (debug)     Slog.v(TAG,"Matching against filter " + filter);
    if (excludingStopped && isFilterStopped(filter,userId)) {
      if (debug) {
        Slog.v(TAG,"  Filter's target is stopped; skipping");
      }
      continue;
    }
    if (packageName != null && !isPackageForFilter(packageName,filter)) {
      if (debug) {
        Slog.v(TAG,"  Filter is not from package " + packageName + "; skipping");
      }
      continue;
    }
    if (filter.getAutoVerify()) {
      if (localVerificationLOGV || debug) {
        Slog.v(TAG,"  Filter verified: " + isFilterVerified(filter));
      }
    }
    if (!allowFilterResult(filter,dest)) {
      if (debug) {
        Slog.v(TAG,"  Filter's target already added");
      }
      continue;
    }
    match=filter.match(action,resolvedType,scheme,data,categories,TAG);
    if (match >= 0) {
      if (debug)       Slog.v(TAG,"  Filter matched!  match=0x" + Integer.toHexString(match) + " hasDefault="+ filter.hasCategory(Intent.CATEGORY_DEFAULT));
      if (!defaultOnly || filter.hasCategory(Intent.CATEGORY_DEFAULT)) {
        final R oneResult=newResult(filter,match,userId);
        if (oneResult != null) {
          dest.add(oneResult);
          if (debug) {
            dumpFilter(logPrintWriter,"    ",filter);
            logPrintWriter.flush();
            filter.dump(logPrinter,"    ");
          }
        }
      }
 else {
        hasNonDefaults=true;
      }
    }
 else {
      if (debug) {
        String reason;
switch (match) {
case IntentFilter.NO_MATCH_ACTION:
          reason="action";
        break;
case IntentFilter.NO_MATCH_CATEGORY:
      reason="category";
    break;
case IntentFilter.NO_MATCH_DATA:
  reason="data";
break;
case IntentFilter.NO_MATCH_TYPE:
reason="type";
break;
default :
reason="unknown reason";
break;
}
Slog.v(TAG,"  Filter did not match: " + reason);
}
}
}
if (hasNonDefaults) {
if (dest.size() == 0) {
Slog.w(TAG,"resolveIntent failed: found match, but none with CATEGORY_DEFAULT");
}
 else if (dest.size() > 1) {
Slog.w(TAG,"resolveIntent: multiple matches, only some with CATEGORY_DEFAULT");
}
}
}
