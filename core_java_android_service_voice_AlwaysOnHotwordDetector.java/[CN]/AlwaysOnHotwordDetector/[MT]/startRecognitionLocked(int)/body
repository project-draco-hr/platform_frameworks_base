{
  KeyphraseRecognitionExtra[] recognitionExtra=new KeyphraseRecognitionExtra[1];
  recognitionExtra[0]=new KeyphraseRecognitionExtra(mKeyphraseMetadata.id,mKeyphraseMetadata.recognitionModeFlags,0,new ConfidenceLevel[0]);
  boolean captureTriggerAudio=(recognitionFlags & RECOGNITION_FLAG_CAPTURE_TRIGGER_AUDIO) != 0;
  boolean allowMultipleTriggers=(recognitionFlags & RECOGNITION_FLAG_ALLOW_MULTIPLE_TRIGGERS) != 0;
  int code=STATUS_ERROR;
  try {
    code=mModelManagementService.startRecognition(mVoiceInteractionService,mKeyphraseMetadata.id,mLocale.toLanguageTag(),mInternalCallback,new RecognitionConfig(captureTriggerAudio,allowMultipleTriggers,recognitionExtra,null));
  }
 catch (  RemoteException e) {
    Slog.w(TAG,"RemoteException in startRecognition!",e);
  }
  if (code != STATUS_OK) {
    Slog.w(TAG,"startRecognition() failed with error code " + code);
  }
  return code;
}
