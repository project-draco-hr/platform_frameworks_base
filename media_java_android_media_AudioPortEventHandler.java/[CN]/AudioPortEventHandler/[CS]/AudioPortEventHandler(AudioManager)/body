{
  mAudioManager=audioManager;
  mListeners=new ArrayList<AudioManager.OnAudioPortUpdateListener>();
  Looper looper=Looper.myLooper();
  if (looper == null) {
    looper=Looper.getMainLooper();
  }
  if (looper != null) {
    mHandler=new Handler(looper){
      @Override public void handleMessage(      Message msg){
        ArrayList<AudioManager.OnAudioPortUpdateListener> listeners;
synchronized (this) {
          if (msg.what == AUDIOPORT_EVENT_NEW_LISTENER) {
            listeners=new ArrayList<AudioManager.OnAudioPortUpdateListener>();
            if (mListeners.contains(msg.obj)) {
              listeners.add((AudioManager.OnAudioPortUpdateListener)msg.obj);
            }
          }
 else {
            listeners=mListeners;
          }
        }
        if (listeners.isEmpty()) {
          return;
        }
        if (msg.what == AUDIOPORT_EVENT_PORT_LIST_UPDATED || msg.what == AUDIOPORT_EVENT_PATCH_LIST_UPDATED || msg.what == AUDIOPORT_EVENT_SERVICE_DIED) {
          mAudioManager.resetAudioPortGeneration();
        }
        ArrayList<AudioPort> ports=new ArrayList<AudioPort>();
        ArrayList<AudioPatch> patches=new ArrayList<AudioPatch>();
        if (msg.what != AUDIOPORT_EVENT_SERVICE_DIED) {
          int status=mAudioManager.updateAudioPortCache(ports,patches);
          if (status != AudioManager.SUCCESS) {
            return;
          }
        }
switch (msg.what) {
case AUDIOPORT_EVENT_NEW_LISTENER:
case AUDIOPORT_EVENT_PORT_LIST_UPDATED:
          AudioPort[] portList=ports.toArray(new AudioPort[0]);
        for (int i=0; i < listeners.size(); i++) {
          listeners.get(i).onAudioPortListUpdate(portList);
        }
      if (msg.what == AUDIOPORT_EVENT_PORT_LIST_UPDATED) {
        break;
      }
case AUDIOPORT_EVENT_PATCH_LIST_UPDATED:
    AudioPatch[] patchList=patches.toArray(new AudioPatch[0]);
  for (int i=0; i < listeners.size(); i++) {
    listeners.get(i).onAudioPatchListUpdate(patchList);
  }
break;
case AUDIOPORT_EVENT_SERVICE_DIED:
for (int i=0; i < listeners.size(); i++) {
listeners.get(i).onServiceDied();
}
break;
default :
break;
}
}
}
;
}
 else {
mHandler=null;
}
native_setup(new WeakReference<AudioPortEventHandler>(this));
}
