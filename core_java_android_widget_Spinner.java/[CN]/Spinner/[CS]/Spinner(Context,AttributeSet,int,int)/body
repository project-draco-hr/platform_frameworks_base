{
  super(context,attrs,defStyle);
  TypedArray a=context.obtainStyledAttributes(attrs,com.android.internal.R.styleable.Spinner,defStyle,0);
  if (mode == MODE_THEME) {
    mode=a.getInt(com.android.internal.R.styleable.Spinner_spinnerMode,MODE_DIALOG);
  }
switch (mode) {
case MODE_DIALOG:
{
      mPopup=new DialogPopup();
      break;
    }
case MODE_DROPDOWN:
{
    final DropdownPopup popup=new DropdownPopup(context,attrs,defStyle);
    mDropDownWidth=a.getLayoutDimension(com.android.internal.R.styleable.Spinner_dropDownWidth,ViewGroup.LayoutParams.WRAP_CONTENT);
    popup.setBackgroundDrawable(a.getDrawable(com.android.internal.R.styleable.Spinner_popupBackground));
    final int verticalOffset=a.getDimensionPixelOffset(com.android.internal.R.styleable.Spinner_dropDownVerticalOffset,0);
    if (verticalOffset != 0) {
      popup.setVerticalOffset(verticalOffset);
    }
    final int horizontalOffset=a.getDimensionPixelOffset(com.android.internal.R.styleable.Spinner_dropDownHorizontalOffset,0);
    if (horizontalOffset != 0) {
      popup.setHorizontalOffset(horizontalOffset);
    }
    mPopup=popup;
    mForwardingListener=new ForwardingListener(this){
      @Override public ListPopupWindow getPopup(){
        return popup;
      }
      @Override public boolean onForwardingStarted(){
        if (!mPopup.isShowing()) {
          mPopup.show(getTextDirection(),getTextAlignment());
        }
        return true;
      }
    }
;
    break;
  }
}
mGravity=a.getInt(com.android.internal.R.styleable.Spinner_gravity,Gravity.CENTER);
mPopup.setPromptText(a.getString(com.android.internal.R.styleable.Spinner_prompt));
mDisableChildrenWhenDisabled=a.getBoolean(com.android.internal.R.styleable.Spinner_disableChildrenWhenDisabled,false);
a.recycle();
if (mTempAdapter != null) {
mPopup.setAdapter(mTempAdapter);
mTempAdapter=null;
}
}
