{
  setCaller(CALLING_PACKAGE_1,USER_0);
  assertTrue(mManager.addDynamicShortcut(makeShortcut("s1")));
  setCaller(CALLING_PACKAGE_2,USER_0);
  assertTrue(mManager.addDynamicShortcut(makeShortcut("s1")));
  setCaller(CALLING_PACKAGE_3,USER_0);
  assertTrue(mManager.addDynamicShortcut(makeShortcut("s1")));
  setCaller(CALLING_PACKAGE_1,USER_10);
  assertTrue(mManager.addDynamicShortcut(makeShortcut("s1")));
  setCaller(CALLING_PACKAGE_2,USER_10);
  assertTrue(mManager.addDynamicShortcut(makeShortcut("s1")));
  setCaller(CALLING_PACKAGE_3,USER_10);
  assertTrue(mManager.addDynamicShortcut(makeShortcut("s1")));
  assertNotNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_1,"s1",USER_0));
  assertNotNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_2,"s1",USER_0));
  assertNotNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_3,"s1",USER_0));
  assertNotNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_1,"s1",USER_10));
  assertNotNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_2,"s1",USER_10));
  assertNotNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_3,"s1",USER_10));
  uninstallPackage(USER_0,CALLING_PACKAGE_1);
  mService.mPackageMonitor.onReceive(getTestContext(),genPackageDeleteIntent(CALLING_PACKAGE_1,USER_0));
  assertNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_1,"s1",USER_0));
  assertNotNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_2,"s1",USER_0));
  assertNotNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_3,"s1",USER_0));
  assertNotNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_1,"s1",USER_10));
  assertNotNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_2,"s1",USER_10));
  assertNotNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_3,"s1",USER_10));
  uninstallPackage(USER_10,CALLING_PACKAGE_2);
  mService.mPackageMonitor.onReceive(getTestContext(),genPackageDeleteIntent(CALLING_PACKAGE_2,USER_10));
  assertNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_1,"s1",USER_0));
  assertNotNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_2,"s1",USER_0));
  assertNotNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_3,"s1",USER_0));
  assertNotNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_1,"s1",USER_10));
  assertNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_2,"s1",USER_10));
  assertNotNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_3,"s1",USER_10));
  mInjectedPackages.remove(CALLING_PACKAGE_1);
  mInjectedPackages.remove(CALLING_PACKAGE_3);
  mService.handleUnlockUser(USER_0);
  assertNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_1,"s1",USER_0));
  assertNotNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_2,"s1",USER_0));
  assertNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_3,"s1",USER_0));
  assertNotNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_1,"s1",USER_10));
  assertNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_2,"s1",USER_10));
  assertNotNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_3,"s1",USER_10));
  mService.handleUnlockUser(USER_10);
  assertNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_1,"s1",USER_0));
  assertNotNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_2,"s1",USER_0));
  assertNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_3,"s1",USER_0));
  assertNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_1,"s1",USER_10));
  assertNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_2,"s1",USER_10));
  assertNull(mService.getPackageShortcutForTest(CALLING_PACKAGE_3,"s1",USER_10));
}
