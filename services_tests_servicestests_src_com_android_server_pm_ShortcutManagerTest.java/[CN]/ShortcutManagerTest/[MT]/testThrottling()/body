{
  final ShortcutInfo si1=makeShortcut("shortcut1");
  assertTrue(mManager.setDynamicShortcuts(Arrays.asList(si1)));
  assertEquals(2,mManager.getRemainingCallCount());
  assertEquals(START_TIME + INTERVAL,mManager.getRateLimitResetTime());
  mInjectedCurrentTimeLillis++;
  assertTrue(mManager.setDynamicShortcuts(Arrays.asList(si1)));
  assertEquals(1,mManager.getRemainingCallCount());
  assertEquals(START_TIME + INTERVAL,mManager.getRateLimitResetTime());
  mInjectedCurrentTimeLillis++;
  assertTrue(mManager.setDynamicShortcuts(Arrays.asList(si1)));
  assertEquals(0,mManager.getRemainingCallCount());
  assertEquals(START_TIME + INTERVAL,mManager.getRateLimitResetTime());
  mInjectedCurrentTimeLillis++;
  assertFalse(mManager.setDynamicShortcuts(Arrays.asList(si1)));
  assertEquals(0,mManager.getRemainingCallCount());
  assertEquals(START_TIME + INTERVAL,mManager.getRateLimitResetTime());
  mInjectedCurrentTimeLillis=START_TIME + INTERVAL - 1;
  assertFalse(mManager.setDynamicShortcuts(Arrays.asList(si1)));
  assertEquals(0,mManager.getRemainingCallCount());
  assertEquals(START_TIME + INTERVAL,mManager.getRateLimitResetTime());
  mInjectedCurrentTimeLillis++;
  assertTrue(mManager.setDynamicShortcuts(Arrays.asList(si1)));
  assertEquals(2,mManager.getRemainingCallCount());
  assertEquals(START_TIME + INTERVAL * 2,mManager.getRateLimitResetTime());
  mInjectedCurrentTimeLillis++;
  assertTrue(mManager.setDynamicShortcuts(Arrays.asList(si1)));
  assertEquals(1,mManager.getRemainingCallCount());
  assertEquals(START_TIME + INTERVAL * 2,mManager.getRateLimitResetTime());
  mInjectedCurrentTimeLillis++;
  assertTrue(mManager.setDynamicShortcuts(Arrays.asList(si1)));
  assertEquals(0,mManager.getRemainingCallCount());
  assertEquals(START_TIME + INTERVAL * 2,mManager.getRateLimitResetTime());
  mInjectedCurrentTimeLillis++;
  assertFalse(mManager.setDynamicShortcuts(Arrays.asList(si1)));
  assertEquals(0,mManager.getRemainingCallCount());
  assertEquals(START_TIME + INTERVAL * 2,mManager.getRateLimitResetTime());
  mInjectedCurrentTimeLillis=START_TIME + 4 * INTERVAL;
  assertTrue(mManager.setDynamicShortcuts(Arrays.asList(si1)));
  assertEquals(2,mManager.getRemainingCallCount());
  assertEquals(START_TIME + INTERVAL * 5,mManager.getRateLimitResetTime());
  mInjectedCurrentTimeLillis++;
  assertTrue(mManager.setDynamicShortcuts(Arrays.asList(si1)));
  assertEquals(1,mManager.getRemainingCallCount());
  assertEquals(START_TIME + INTERVAL * 5,mManager.getRateLimitResetTime());
  mInjectedCurrentTimeLillis=START_TIME + 8 * INTERVAL;
  assertEquals(3,mManager.getRemainingCallCount());
  assertEquals(START_TIME + INTERVAL * 9,mManager.getRateLimitResetTime());
  mInjectedCurrentTimeLillis++;
  assertTrue(mManager.setDynamicShortcuts(Arrays.asList(si1)));
  assertEquals(2,mManager.getRemainingCallCount());
  assertEquals(START_TIME + INTERVAL * 9,mManager.getRateLimitResetTime());
}
