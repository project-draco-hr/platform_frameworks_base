{
  super.setUp();
  mServiceContext=new ServiceContext();
  mClientContext=new ClientContext();
  mMockPackageManager=mock(PackageManager.class);
  mMockPackageManagerInternal=mock(PackageManagerInternal.class);
  mMockUserManager=mock(UserManager.class);
  mInjectedCurrentTimeLillis=START_TIME;
  mInjectedPackageUidMap=new HashMap<>();
  mInjectedPackageUidMap.put(CALLING_PACKAGE_1,CALLING_UID_1);
  mInjectedPackageUidMap.put(CALLING_PACKAGE_2,CALLING_UID_2);
  mInjectedPackageUidMap.put(CALLING_PACKAGE_3,CALLING_UID_3);
  mInjectedPackageUidMap.put(LAUNCHER_1,LAUNCHER_UID_1);
  mInjectedPackageUidMap.put(LAUNCHER_2,LAUNCHER_UID_2);
  mInjectedFilePathRoot=new File(getTestContext().getCacheDir(),"test-files");
  if (mInjectedFilePathRoot.exists()) {
    Assert.assertTrue("failed to delete dir",FileUtils.deleteContents(mInjectedFilePathRoot));
  }
  mInjectedFilePathRoot.mkdirs();
  initService();
  setCaller(CALLING_PACKAGE_1);
}
