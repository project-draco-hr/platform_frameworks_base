{
  PersistableBundle pb=new PersistableBundle();
  pb.putInt("k",1);
  ShortcutInfo sorig=new ShortcutInfo.Builder(getTestContext()).setId("id").setActivityComponent(new ComponentName("a","b")).setIcon(Icon.createWithContentUri("content://a.b.c/")).setTitle("title").setText("text").setIntent(makeIntent("action",ShortcutActivity.class,"key","val")).setWeight(123).setExtras(pb).build();
  sorig.addFlags(ShortcutInfo.FLAG_PINNED);
  sorig.setBitmapPath("abc");
  sorig.setIconResourceId(456);
  ShortcutInfo si;
  si=sorig.clone(0);
  si.copyNonNullFieldsFrom(new ShortcutInfo.Builder(getTestContext()).setId("id").setActivityComponent(new ComponentName("x","y")).build());
  assertEquals(new ComponentName("x","y"),si.getActivityComponent());
  si=sorig.clone(0);
  si.copyNonNullFieldsFrom(new ShortcutInfo.Builder(getTestContext()).setId("id").setIcon(Icon.createWithContentUri("content://x.y.z/")).build());
  assertEquals("content://x.y.z/",si.getIcon().getUriString());
  si=sorig.clone(0);
  si.copyNonNullFieldsFrom(new ShortcutInfo.Builder(getTestContext()).setId("id").setTitle("xyz").build());
  assertEquals("xyz",si.getTitle());
  si=sorig.clone(0);
  si.copyNonNullFieldsFrom(new ShortcutInfo.Builder(getTestContext()).setId("id").setText("xxx").build());
  assertEquals("xxx",si.getText());
  si=sorig.clone(0);
  si.copyNonNullFieldsFrom(new ShortcutInfo.Builder(getTestContext()).setId("id").setIntent(makeIntent("action2",ShortcutActivity.class)).build());
  assertEquals("action2",si.getIntent().getAction());
  assertEquals(null,si.getIntent().getStringExtra("key"));
  si=sorig.clone(0);
  si.copyNonNullFieldsFrom(new ShortcutInfo.Builder(getTestContext()).setId("id").setIntent(makeIntent("action3",ShortcutActivity.class,"key","x")).build());
  assertEquals("action3",si.getIntent().getAction());
  assertEquals("x",si.getIntent().getStringExtra("key"));
  si=sorig.clone(0);
  si.copyNonNullFieldsFrom(new ShortcutInfo.Builder(getTestContext()).setId("id").setWeight(999).build());
  assertEquals(999,si.getWeight());
  PersistableBundle pb2=new PersistableBundle();
  pb2.putInt("x",99);
  si=sorig.clone(0);
  si.copyNonNullFieldsFrom(new ShortcutInfo.Builder(getTestContext()).setId("id").setExtras(pb2).build());
  assertEquals(99,si.getExtras().getInt("x"));
  final long timestamp=si.getLastChangedTimestamp();
  Thread.sleep(2);
  si.copyNonNullFieldsFrom(new ShortcutInfo.Builder(getTestContext()).setId("id").setTitle("xyz").build());
  assertTrue(si.getLastChangedTimestamp() > timestamp);
}
