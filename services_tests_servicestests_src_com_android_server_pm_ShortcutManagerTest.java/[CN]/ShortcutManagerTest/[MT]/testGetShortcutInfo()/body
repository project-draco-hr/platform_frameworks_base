{
  setCaller(CALLING_PACKAGE_1);
  final ShortcutInfo s1_1=makeShortcut("s1","Title 1",makeComponent(ShortcutActivity.class),null,makeIntent(Intent.ACTION_ASSIST,ShortcutActivity2.class,"key1","val1","nest",makeBundle("key",123)),10);
  final ShortcutInfo s1_2=makeShortcut("s2","Title 2",null,null,makeIntent(Intent.ACTION_ASSIST,ShortcutActivity3.class),12);
  assertTrue(mManager.setDynamicShortcuts(Arrays.asList(s1_1,s1_2)));
  dumpsysOnLogcat();
  setCaller(CALLING_PACKAGE_2);
  final ShortcutInfo s2_1=makeShortcut("s1","ABC",makeComponent(ShortcutActivity2.class),null,makeIntent(Intent.ACTION_ANSWER,ShortcutActivity2.class,"key1","val1","nest",makeBundle("key",123)),10);
  assertTrue(mManager.setDynamicShortcuts(Arrays.asList(s2_1)));
  dumpsysOnLogcat();
  setCaller(LAUNCHER_1);
  mInternal.pinShortcuts(getCallingPackage(),CALLING_PACKAGE_1,Arrays.asList("s2"),getCallingUserId());
  dumpsysOnLogcat();
  setCaller(CALLING_PACKAGE_1);
  assertShortcutIds(mManager.getPinnedShortcuts(),"s2");
  mManager.deleteDynamicShortcut("s2");
  assertShortcutIds(mManager.getPinnedShortcuts(),"s2");
  dumpsysOnLogcat();
  setCaller(LAUNCHER_1);
  List<ShortcutInfo> list;
  list=assertShortcutIds(assertAllHaveTitle(assertAllNotHaveIntents(assertAllNotKeyFieldsOnly(mInternal.getShortcutInfo(getCallingPackage(),CALLING_PACKAGE_1,Arrays.asList("s2","s1","s3",null),getCallingUserId())))),"s1","s2");
  assertEquals("Title 1",findById(list,"s1").getTitle());
  assertEquals("Title 2",findById(list,"s2").getTitle());
  assertShortcutIds(assertAllHaveTitle(assertAllNotHaveIntents(mInternal.getShortcutInfo(getCallingPackage(),CALLING_PACKAGE_1,Arrays.asList("s3"),getCallingUserId()))));
  list=assertShortcutIds(assertAllHaveTitle(assertAllNotHaveIntents(mInternal.getShortcutInfo(getCallingPackage(),CALLING_PACKAGE_2,Arrays.asList("s1","s2","s3"),getCallingUserId()))),"s1");
  assertEquals("ABC",findById(list,"s1").getTitle());
}
