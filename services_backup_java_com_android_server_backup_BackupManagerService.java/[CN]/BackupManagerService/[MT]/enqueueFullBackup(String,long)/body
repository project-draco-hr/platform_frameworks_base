{
  FullBackupEntry newEntry=new FullBackupEntry(packageName,lastBackedUp);
synchronized (mQueueLock) {
    int N=mFullBackupQueue.size();
    for (int i=N - 1; i >= 0; i--) {
      final FullBackupEntry e=mFullBackupQueue.get(i);
      if (packageName.equals(e.packageName)) {
        if (DEBUG) {
          Slog.w(TAG,"Removing schedule queue dupe of " + packageName);
        }
        mFullBackupQueue.remove(i);
      }
    }
    int which;
    for (which=mFullBackupQueue.size() - 1; which >= 0; which--) {
      final FullBackupEntry entry=mFullBackupQueue.get(which);
      if (entry.lastBackup <= lastBackedUp) {
        mFullBackupQueue.add(which + 1,newEntry);
        break;
      }
    }
    if (which < 0) {
      mFullBackupQueue.add(0,newEntry);
    }
  }
  writeFullBackupScheduleAsync();
}
