{
  mContext.enforceCallingPermission(android.Manifest.permission.BACKUP,"fullBackup");
  final int callingUserHandle=UserHandle.getCallingUserId();
  if (callingUserHandle != UserHandle.USER_OWNER) {
    throw new IllegalStateException("Backup supported only for the device owner");
  }
  if (!doAllApps) {
    if (!includeShared) {
      if (pkgList == null || pkgList.length == 0) {
        throw new IllegalArgumentException("Backup requested but neither shared nor any apps named");
      }
    }
  }
  long oldId=Binder.clearCallingIdentity();
  try {
    if (!deviceIsProvisioned()) {
      Slog.i(TAG,"Full backup not supported before setup");
      return;
    }
    if (DEBUG)     Slog.v(TAG,"Requesting full backup: apks=" + includeApks + " obb="+ includeObbs+ " shared="+ includeShared+ " all="+ doAllApps+ " system="+ includeSystem+ " pkgs="+ pkgList);
    Slog.i(TAG,"Beginning full backup...");
    FullBackupParams params=new FullBackupParams(fd,includeApks,includeObbs,includeShared,doWidgets,doAllApps,includeSystem,compress,pkgList);
    final int token=generateToken();
synchronized (mFullConfirmations) {
      mFullConfirmations.put(token,params);
    }
    if (DEBUG)     Slog.d(TAG,"Starting backup confirmation UI, token=" + token);
    if (!startConfirmationUi(token,FullBackup.FULL_BACKUP_INTENT_ACTION)) {
      Slog.e(TAG,"Unable to launch full backup confirmation");
      mFullConfirmations.delete(token);
      return;
    }
    mPowerManager.userActivity(SystemClock.uptimeMillis(),false);
    startConfirmationTimeout(token,params);
    if (DEBUG)     Slog.d(TAG,"Waiting for full backup completion...");
    waitForCompletion(params);
  }
  finally {
    try {
      fd.close();
    }
 catch (    IOException e) {
    }
    Binder.restoreCallingIdentity(oldId);
    Slog.d(TAG,"Full backup processing complete.");
  }
}
