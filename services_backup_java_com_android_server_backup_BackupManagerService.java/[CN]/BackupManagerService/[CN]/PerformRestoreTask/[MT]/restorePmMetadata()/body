{
  try {
    RestoreDescription desc=mTransport.nextRestorePackage();
    String packageName=desc.getPackageName();
    if (packageName == null) {
      Slog.e(TAG,"Error getting first restore package");
      EventLog.writeEvent(EventLogTags.RESTORE_TRANSPORT_FAILURE);
      mStatus=BackupTransport.TRANSPORT_ERROR;
      executeNextState(RestoreState.FINAL);
      return;
    }
 else     if (packageName.equals("")) {
      Slog.i(TAG,"No restore data available");
      int millis=(int)(SystemClock.elapsedRealtime() - mStartRealtime);
      EventLog.writeEvent(EventLogTags.RESTORE_SUCCESS,0,millis);
      mStatus=BackupTransport.TRANSPORT_OK;
      executeNextState(RestoreState.FINAL);
      return;
    }
 else     if (!packageName.equals(PACKAGE_MANAGER_SENTINEL)) {
      Slog.e(TAG,"Expected restore data for \"" + PACKAGE_MANAGER_SENTINEL + "\", found only \""+ packageName+ "\"");
      EventLog.writeEvent(EventLogTags.RESTORE_AGENT_FAILURE,PACKAGE_MANAGER_SENTINEL,"Package manager data missing");
      executeNextState(RestoreState.FINAL);
      return;
    }
    PackageInfo omPackage=new PackageInfo();
    omPackage.packageName=PACKAGE_MANAGER_SENTINEL;
    mPmAgent=new PackageManagerBackupAgent(mPackageManager,mAgentPackages);
    initiateOneRestore(omPackage,0,IBackupAgent.Stub.asInterface(mPmAgent.onBind()));
    if (!mPmAgent.hasMetadata()) {
      Slog.e(TAG,"No restore metadata available, so not restoring settings");
      EventLog.writeEvent(EventLogTags.RESTORE_AGENT_FAILURE,PACKAGE_MANAGER_SENTINEL,"Package manager restore metadata missing");
      mStatus=BackupTransport.TRANSPORT_ERROR;
      mBackupHandler.removeMessages(MSG_BACKUP_RESTORE_STEP,this);
      executeNextState(RestoreState.FINAL);
      return;
    }
  }
 catch (  RemoteException e) {
    Slog.e(TAG,"Error communicating with transport for restore");
    EventLog.writeEvent(EventLogTags.RESTORE_TRANSPORT_FAILURE);
    mStatus=BackupTransport.TRANSPORT_ERROR;
    mBackupHandler.removeMessages(MSG_BACKUP_RESTORE_STEP,this);
    executeNextState(RestoreState.FINAL);
    return;
  }
  if (mIsSystemRestore) {
    AppWidgetBackupBridge.restoreStarting(UserHandle.USER_OWNER);
  }
}
