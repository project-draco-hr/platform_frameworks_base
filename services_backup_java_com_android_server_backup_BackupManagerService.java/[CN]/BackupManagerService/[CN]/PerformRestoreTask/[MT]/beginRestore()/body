{
  mBackupHandler.removeMessages(MSG_RESTORE_TIMEOUT);
  mStatus=BackupConstants.TRANSPORT_ERROR;
  try {
    EventLog.writeEvent(EventLogTags.RESTORE_START,mTransport.transportDirName(),mToken);
    mRestorePackages=new ArrayList<PackageInfo>();
    PackageInfo omPackage=new PackageInfo();
    omPackage.packageName=PACKAGE_MANAGER_SENTINEL;
    mRestorePackages.add(omPackage);
    mAgentPackages=allAgentPackages();
    if (mTargetPackage == null) {
      if (mFilterSet != null) {
        for (int i=mAgentPackages.size() - 1; i >= 0; i--) {
          final PackageInfo pkg=mAgentPackages.get(i);
          if (!mFilterSet.contains(pkg.packageName)) {
            mAgentPackages.remove(i);
          }
        }
        if (MORE_DEBUG) {
          Slog.i(TAG,"Post-filter package set for restore:");
          for (          PackageInfo p : mAgentPackages) {
            Slog.i(TAG,"    " + p);
          }
        }
      }
      mRestorePackages.addAll(mAgentPackages);
    }
 else {
      mRestorePackages.add(mTargetPackage);
    }
    if (mObserver != null) {
      try {
        mObserver.restoreStarting(mRestorePackages.size());
      }
 catch (      RemoteException e) {
        Slog.d(TAG,"Restore observer died at restoreStarting");
        mObserver=null;
      }
    }
  }
 catch (  RemoteException e) {
    Slog.e(TAG,"Error communicating with transport for restore");
    executeNextState(RestoreState.FINAL);
    return;
  }
  mStatus=BackupConstants.TRANSPORT_OK;
  executeNextState(RestoreState.DOWNLOAD_DATA);
}
