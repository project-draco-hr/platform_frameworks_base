{
  int result=BackupTransport.TRANSPORT_OK;
  Slog.d(TAG,"Binding to full backup agent : " + pkg.packageName);
  mAgent=bindToAgentSynchronous(pkg.applicationInfo,IApplicationThread.BACKUP_MODE_FULL);
  if (mAgent != null) {
    ParcelFileDescriptor[] pipes=null;
    try {
      if (mPreflightHook != null) {
        result=mPreflightHook.preflightFullBackup(pkg,mAgent);
        if (MORE_DEBUG) {
          Slog.v(TAG,"preflight returned " + result);
        }
      }
      if (result == BackupTransport.TRANSPORT_OK) {
        pipes=ParcelFileDescriptor.createPipe();
        ApplicationInfo app=pkg.applicationInfo;
        final boolean isSharedStorage=pkg.packageName.equals(SHARED_BACKUP_AGENT_PACKAGE);
        final boolean sendApk=mIncludeApks && !isSharedStorage && ((app.privateFlags & ApplicationInfo.PRIVATE_FLAG_FORWARD_LOCK) == 0)&& ((app.flags & ApplicationInfo.FLAG_SYSTEM) == 0 || (app.flags & ApplicationInfo.FLAG_UPDATED_SYSTEM_APP) != 0);
        byte[] widgetBlob=AppWidgetBackupBridge.getWidgetState(pkg.packageName,UserHandle.USER_SYSTEM);
        final int token=generateToken();
        FullBackupRunner runner=new FullBackupRunner(pkg,mAgent,pipes[1],token,sendApk,!isSharedStorage,widgetBlob);
        pipes[1].close();
        pipes[1]=null;
        Thread t=new Thread(runner,"app-data-runner");
        t.start();
        try {
          routeSocketDataToOutput(pipes[0],mOutput);
        }
 catch (        IOException e) {
          Slog.i(TAG,"Caught exception reading from agent",e);
          result=BackupTransport.AGENT_ERROR;
        }
        if (!waitUntilOperationComplete(token)) {
          Slog.e(TAG,"Full backup failed on package " + pkg.packageName);
          result=BackupTransport.AGENT_ERROR;
        }
 else {
          if (MORE_DEBUG) {
            Slog.d(TAG,"Full package backup success: " + pkg.packageName);
          }
        }
      }
    }
 catch (    IOException e) {
      Slog.e(TAG,"Error backing up " + pkg.packageName,e);
      result=BackupTransport.AGENT_ERROR;
    }
 finally {
      try {
        mOutput.flush();
        if (pipes != null) {
          if (pipes[0] != null)           pipes[0].close();
          if (pipes[1] != null)           pipes[1].close();
        }
      }
 catch (      IOException e) {
        Slog.w(TAG,"Error bringing down backup stack");
        result=BackupTransport.TRANSPORT_ERROR;
      }
    }
  }
 else {
    Slog.w(TAG,"Unable to bind to full agent for " + pkg.packageName);
    result=BackupTransport.AGENT_ERROR;
  }
  tearDown(pkg);
  return result;
}
