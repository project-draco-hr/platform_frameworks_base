{
  if (DEBUG_BACKUP_TRACE) {
    clearBackupTrace();
    StringBuilder b=new StringBuilder(256);
    b.append("beginBackup: [");
    for (    BackupRequest req : mOriginalQueue) {
      b.append(' ');
      b.append(req.packageName);
    }
    b.append(" ]");
    addBackupTrace(b.toString());
  }
  mAgentBinder=null;
  mStatus=BackupTransport.TRANSPORT_OK;
  if (mOriginalQueue.isEmpty()) {
    Slog.w(TAG,"Backup begun with an empty queue - nothing to do.");
    addBackupTrace("queue empty at begin");
    executeNextState(BackupState.FINAL);
    return;
  }
  mQueue=(ArrayList<BackupRequest>)mOriginalQueue.clone();
  if (DEBUG)   Slog.v(TAG,"Beginning backup of " + mQueue.size() + " targets");
  File pmState=new File(mStateDir,PACKAGE_MANAGER_SENTINEL);
  try {
    final String transportName=mTransport.transportDirName();
    EventLog.writeEvent(EventLogTags.BACKUP_START,transportName);
    if (mStatus == BackupTransport.TRANSPORT_OK && pmState.length() <= 0) {
      Slog.i(TAG,"Initializing (wiping) backup state and transport storage");
      addBackupTrace("initializing transport " + transportName);
      resetBackupState(mStateDir);
      mStatus=mTransport.initializeDevice();
      addBackupTrace("transport.initializeDevice() == " + mStatus);
      if (mStatus == BackupTransport.TRANSPORT_OK) {
        EventLog.writeEvent(EventLogTags.BACKUP_INITIALIZE);
      }
 else {
        EventLog.writeEvent(EventLogTags.BACKUP_TRANSPORT_FAILURE,"(initialize)");
        Slog.e(TAG,"Transport error in initializeDevice()");
      }
    }
    if (mStatus == BackupTransport.TRANSPORT_OK) {
      PackageManagerBackupAgent pmAgent=new PackageManagerBackupAgent(mPackageManager);
      mStatus=invokeAgentForBackup(PACKAGE_MANAGER_SENTINEL,IBackupAgent.Stub.asInterface(pmAgent.onBind()),mTransport);
      addBackupTrace("PMBA invoke: " + mStatus);
      mBackupHandler.removeMessages(MSG_TIMEOUT);
    }
    if (mStatus == BackupTransport.TRANSPORT_NOT_INITIALIZED) {
      EventLog.writeEvent(EventLogTags.BACKUP_RESET,mTransport.transportDirName());
    }
  }
 catch (  Exception e) {
    Slog.e(TAG,"Error in backup thread",e);
    addBackupTrace("Exception in backup thread: " + e);
    mStatus=BackupTransport.TRANSPORT_ERROR;
  }
 finally {
    addBackupTrace("exiting prelim: " + mStatus);
    if (mStatus != BackupTransport.TRANSPORT_OK) {
      resetBackupState(mStateDir);
      executeNextState(BackupState.FINAL);
    }
  }
}
