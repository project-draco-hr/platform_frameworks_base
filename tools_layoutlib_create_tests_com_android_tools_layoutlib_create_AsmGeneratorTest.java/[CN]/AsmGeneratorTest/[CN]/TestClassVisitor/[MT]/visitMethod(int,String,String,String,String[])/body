{
  MethodVisitor mv=super.visitMethod(access,name,desc,signature,exceptions);
  return new MethodVisitor(Main.ASM_VERSION,mv){
    @Override public void visitFieldInsn(    int opcode,    String owner,    String name,    String desc){
      assertTrue(!getBase(owner).equals(JAVA_CLASS_NAME));
      assertTrue(testType(Type.getType(desc)));
      super.visitFieldInsn(opcode,owner,name,desc);
    }
    @Override public void visitLdcInsn(    Object cst){
      if (cst instanceof Type) {
        assertTrue(testType((Type)cst));
      }
      super.visitLdcInsn(cst);
    }
    @Override public void visitTypeInsn(    int opcode,    String type){
      assertTrue(!getBase(type).equals(JAVA_CLASS_NAME));
      super.visitTypeInsn(opcode,type);
    }
    @Override public void visitMethodInsn(    int opcode,    String owner,    String name,    String desc,    boolean itf){
      assertTrue(!getBase(owner).equals(JAVA_CLASS_NAME));
      assertTrue(testType(Type.getType(desc)));
      super.visitMethodInsn(opcode,owner,name,desc,itf);
    }
  }
;
}
