{
  mAdapter=adapter;
  mAdapter.registerDataSetObserver(new DataSetObserver(){
    public void onChanged(){
      update();
    }
    public void onInvalidated(){
      update();
    }
  }
);
  DisplayMetrics dm=getResources().getDisplayMetrics();
  int childWidthMeasureSpec=MeasureSpec.makeMeasureSpec(dm.widthPixels,MeasureSpec.AT_MOST);
  int childheightMeasureSpec=MeasureSpec.makeMeasureSpec(dm.heightPixels,MeasureSpec.AT_MOST);
  View child=mAdapter.createView(mLinearLayout);
  child.measure(childWidthMeasureSpec,childheightMeasureSpec);
  mNumItemsInOneScreenful=(int)FloatMath.ceil(dm.widthPixels / (float)child.getMeasuredWidth());
  addToRecycledViews(child);
  if (child.getParent() != null) {
    throw new RuntimeException("First recycled child has parent");
  }
  for (int i=0; i < mNumItemsInOneScreenful - 1; i++) {
    addToRecycledViews(mAdapter.createView(mLinearLayout));
    if (mRecycledViews.get(mRecycledViews.size() - 1).getParent() != null) {
      throw new RuntimeException("Recycled child has parent");
    }
  }
}
