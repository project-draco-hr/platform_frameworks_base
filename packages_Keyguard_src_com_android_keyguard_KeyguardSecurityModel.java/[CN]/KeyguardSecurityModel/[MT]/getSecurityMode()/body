{
  KeyguardUpdateMonitor updateMonitor=KeyguardUpdateMonitor.getInstance(mContext);
  final IccCardConstants.State simState=updateMonitor.getSimState();
  SecurityMode mode=SecurityMode.None;
  if (simState == IccCardConstants.State.PIN_REQUIRED) {
    mode=SecurityMode.SimPin;
  }
 else   if (simState == IccCardConstants.State.PUK_REQUIRED && mLockPatternUtils.isPukUnlockScreenEnable()) {
    mode=SecurityMode.SimPuk;
  }
 else   if (updateMonitor.getUserHasTrust(mLockPatternUtils.getCurrentUser())) {
    mode=SecurityMode.None;
  }
 else {
    final int security=mLockPatternUtils.getKeyguardStoredPasswordQuality();
switch (security) {
case DevicePolicyManager.PASSWORD_QUALITY_NUMERIC:
      mode=mLockPatternUtils.isLockPasswordEnabled() ? SecurityMode.PIN : SecurityMode.None;
    break;
case DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC:
case DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC:
case DevicePolicyManager.PASSWORD_QUALITY_COMPLEX:
  mode=mLockPatternUtils.isLockPasswordEnabled() ? SecurityMode.Password : SecurityMode.None;
break;
case DevicePolicyManager.PASSWORD_QUALITY_SOMETHING:
case DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED:
if (mLockPatternUtils.isLockPatternEnabled()) {
mode=mLockPatternUtils.isPermanentlyLocked() ? SecurityMode.Account : SecurityMode.Pattern;
}
break;
default :
throw new IllegalStateException("Unknown security quality:" + security);
}
}
return mode;
}
