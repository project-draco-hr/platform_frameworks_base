{
  if (bits == null) {
    throw new UnsupportedOperationException(Messages.getString("awt.26C"));
  }
  if (normComponents.length - normOffset < numComponents) {
    throw new IllegalArgumentException(Messages.getString("awt.273"));
  }
  if (components == null) {
    components=new int[numComponents + offset];
  }
 else {
    if (components.length - offset < numComponents) {
      throw new IllegalArgumentException(Messages.getString("awt.272"));
    }
  }
  if (hasAlpha && isAlphaPremultiplied) {
    float alpha=normComponents[normOffset + numColorComponents];
    for (int i=0; i < numColorComponents; i++) {
      components[offset + i]=(int)(normComponents[normOffset + i] * maxValues[i] * alpha + 0.5f);
    }
    components[offset + numColorComponents]=(int)(normComponents[normOffset + numColorComponents] * maxValues[numColorComponents] + 0.5f);
  }
 else {
    for (int i=0; i < numComponents; i++) {
      components[offset + i]=(int)(normComponents[normOffset + i] * maxValues[i] + 0.5f);
    }
  }
  return components;
}
