{
  if (bits == null) {
    throw new UnsupportedOperationException(Messages.getString("awt.26C"));
  }
  if (normComponents == null) {
    normComponents=new float[numComponents + normOffset];
  }
  if (hasAlpha && isAlphaPremultiplied) {
    float normAlpha=(float)components[offset + numColorComponents] / maxValues[numColorComponents];
    if (normAlpha != 0.0f) {
      for (int i=0; i < numColorComponents; i++) {
        normComponents[normOffset + i]=components[offset + i] / (normAlpha * maxValues[i]);
      }
      normComponents[normOffset + numColorComponents]=normAlpha;
    }
 else {
      for (int i=0; i < numComponents; i++) {
        normComponents[normOffset + i]=0.0f;
      }
    }
  }
 else {
    for (int i=0; i < numComponents; i++) {
      normComponents[normOffset + i]=(float)components[offset + i] / maxValues[i];
    }
  }
  return normComponents;
}
