{
  if (pixel_bits < 1) {
    throw new IllegalArgumentException(Messages.getString("awt.26B"));
  }
  if (bits == null) {
    throw new NullPointerException(Messages.getString("awt.26C"));
  }
  int sum=0;
  for (  int element : bits) {
    if (element < 0) {
      throw new IllegalArgumentException(Messages.getString("awt.26D"));
    }
    sum+=element;
  }
  if (sum < 1) {
    throw new NullPointerException(Messages.getString("awt.26E"));
  }
  if (cspace == null) {
    throw new IllegalArgumentException(Messages.getString("awt.26F"));
  }
  if (transparency < Transparency.OPAQUE || transparency > Transparency.TRANSLUCENT) {
    throw new IllegalArgumentException(Messages.getString("awt.270"));
  }
  this.pixel_bits=pixel_bits;
  this.bits=bits.clone();
  maxValues=new int[bits.length];
  maxBitLength=0;
  for (int i=0; i < maxValues.length; i++) {
    maxValues[i]=(1 << bits[i]) - 1;
    if (bits[i] > maxBitLength) {
      maxBitLength=bits[i];
    }
  }
  cs=cspace;
  this.hasAlpha=hasAlpha;
  this.isAlphaPremultiplied=isAlphaPremultiplied;
  numColorComponents=cs.getNumComponents();
  if (hasAlpha) {
    numComponents=numColorComponents + 1;
  }
 else {
    numComponents=numColorComponents;
  }
  this.transparency=transparency;
  this.transferType=transferType;
}
