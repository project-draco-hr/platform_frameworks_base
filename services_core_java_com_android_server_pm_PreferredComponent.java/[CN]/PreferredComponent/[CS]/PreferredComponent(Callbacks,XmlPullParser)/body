{
  mCallbacks=callbacks;
  mShortComponent=parser.getAttributeValue(null,ATTR_NAME);
  mComponent=ComponentName.unflattenFromString(mShortComponent);
  if (mComponent == null) {
    mParseError="Bad activity name " + mShortComponent;
  }
  String matchStr=parser.getAttributeValue(null,ATTR_MATCH);
  mMatch=matchStr != null ? Integer.parseInt(matchStr,16) : 0;
  String setCountStr=parser.getAttributeValue(null,ATTR_SET);
  int setCount=setCountStr != null ? Integer.parseInt(setCountStr) : 0;
  String alwaysStr=parser.getAttributeValue(null,ATTR_ALWAYS);
  mAlways=alwaysStr != null ? Boolean.parseBoolean(alwaysStr) : true;
  String[] myPackages=setCount > 0 ? new String[setCount] : null;
  String[] myClasses=setCount > 0 ? new String[setCount] : null;
  String[] myComponents=setCount > 0 ? new String[setCount] : null;
  int setPos=0;
  int outerDepth=parser.getDepth();
  int type;
  while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && (type != XmlPullParser.END_TAG || parser.getDepth() > outerDepth)) {
    if (type == XmlPullParser.END_TAG || type == XmlPullParser.TEXT) {
      continue;
    }
    String tagName=parser.getName();
    if (tagName.equals(TAG_SET)) {
      String name=parser.getAttributeValue(null,ATTR_NAME);
      if (name == null) {
        if (mParseError == null) {
          mParseError="No name in set tag in preferred activity " + mShortComponent;
        }
      }
 else       if (setPos >= setCount) {
        if (mParseError == null) {
          mParseError="Too many set tags in preferred activity " + mShortComponent;
        }
      }
 else {
        ComponentName cn=ComponentName.unflattenFromString(name);
        if (cn == null) {
          if (mParseError == null) {
            mParseError="Bad set name " + name + " in preferred activity "+ mShortComponent;
          }
        }
 else {
          myPackages[setPos]=cn.getPackageName();
          myClasses[setPos]=cn.getClassName();
          myComponents[setPos]=name;
          setPos++;
        }
      }
      XmlUtils.skipCurrentTag(parser);
    }
 else     if (!mCallbacks.onReadTag(tagName,parser)) {
      Slog.w("PreferredComponent","Unknown element: " + parser.getName());
      XmlUtils.skipCurrentTag(parser);
    }
  }
  if (setPos != setCount) {
    if (mParseError == null) {
      mParseError="Not enough set tags (expected " + setCount + " but found "+ setPos+ ") in "+ mShortComponent;
    }
  }
  mSetPackages=myPackages;
  mSetClasses=myClasses;
  mSetComponents=myComponents;
}
