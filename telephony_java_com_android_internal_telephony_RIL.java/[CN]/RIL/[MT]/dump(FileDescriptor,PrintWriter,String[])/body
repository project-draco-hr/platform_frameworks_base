{
  pw.println("RIL:");
  pw.println(" mSocket=" + mSocket);
  pw.println(" mSenderThread=" + mSenderThread);
  pw.println(" mSender=" + mSender);
  pw.println(" mReceiverThread=" + mReceiverThread);
  pw.println(" mReceiver=" + mReceiver);
  pw.println(" mWakeLock=" + mWakeLock);
  pw.println(" mWakeLockTimeout=" + mWakeLockTimeout);
synchronized (mRequestsList) {
    pw.println(" mRequestMessagesPending=" + mRequestMessagesPending);
    pw.println(" mRequestMessagesWaiting=" + mRequestMessagesWaiting);
    int count=mRequestsList.size();
    pw.println(" mRequestList count=" + count);
    for (int i=0; i < count; i++) {
      RILRequest rr=mRequestsList.get(i);
      pw.println("  [" + rr.mSerial + "] "+ requestToString(rr.mRequest));
    }
  }
  pw.println(" mLastNITZTimeInfo=" + mLastNITZTimeInfo);
  pw.println(" mTestingEmergencyCall=" + mTestingEmergencyCall.get());
}
