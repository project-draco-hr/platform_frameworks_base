{
  int address_nbr_of_digits;
  int subaddr_nbr_of_digits;
  int bearerDataLength;
  ByteArrayInputStream bais=new ByteArrayInputStream(pdu);
  DataInputStream dis=new DataInputStream(bais);
  RILRequest rr=RILRequest.obtain(RIL_REQUEST_CDMA_SEND_SMS,result);
  try {
    rr.mp.writeInt(dis.readInt());
    rr.mp.writeByte((byte)dis.readInt());
    rr.mp.writeInt(dis.readInt());
    rr.mp.writeInt(dis.read());
    rr.mp.writeInt(dis.read());
    rr.mp.writeInt(dis.read());
    rr.mp.writeInt(dis.read());
    address_nbr_of_digits=(byte)dis.read();
    rr.mp.writeByte((byte)address_nbr_of_digits);
    for (int i=0; i < address_nbr_of_digits; i++) {
      rr.mp.writeByte(dis.readByte());
    }
    rr.mp.writeInt(dis.read());
    rr.mp.writeByte((byte)dis.read());
    subaddr_nbr_of_digits=(byte)dis.read();
    rr.mp.writeByte((byte)subaddr_nbr_of_digits);
    for (int i=0; i < subaddr_nbr_of_digits; i++) {
      rr.mp.writeByte(dis.readByte());
    }
    bearerDataLength=dis.read();
    rr.mp.writeInt(bearerDataLength);
    for (int i=0; i < bearerDataLength; i++) {
      rr.mp.writeByte(dis.readByte());
    }
  }
 catch (  IOException ex) {
    if (RILJ_LOGD)     riljLog("sendSmsCdma: conversion from input stream to object failed: " + ex);
  }
  if (RILJ_LOGD)   riljLog(rr.serialString() + "> " + requestToString(rr.mRequest));
  send(rr);
}
