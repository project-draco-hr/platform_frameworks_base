{
  int num;
  ArrayList<CdmaInformationRecord> response;
  num=p.readInt();
  response=new ArrayList<CdmaInformationRecord>(num);
  for (int i=0; i < num; i++) {
    int name=p.readInt();
    CdmaInformationRecord InfoRec=new CdmaInformationRecord(name);
    char buffer[];
    int length;
switch (name) {
case CdmaInformationRecord.RIL_CDMA_DISPLAY_INFO_REC:
case CdmaInformationRecord.RIL_CDMA_EXTENDED_DISPLAY_INFO_REC:
      length=p.readInt();
    buffer=new char[length];
  for (int j=0; j < length; j++) {
    buffer[j]=(char)p.readInt();
  }
InfoRec.createDisplayInfo(length,buffer);
break;
case CdmaInformationRecord.RIL_CDMA_CALLED_PARTY_NUMBER_INFO_REC:
case CdmaInformationRecord.RIL_CDMA_CALLING_PARTY_NUMBER_INFO_REC:
case CdmaInformationRecord.RIL_CDMA_CONNECTED_NUMBER_INFO_REC:
length=p.readInt();
buffer=new char[length + 4];
for (int j=0; j < (length + 4); j++) {
buffer[j]=(char)p.readInt();
}
InfoRec.createNumberInfo(length,buffer);
break;
case CdmaInformationRecord.RIL_CDMA_SIGNAL_INFO_REC:
buffer=new char[4];
for (int j=0; j < 4; j++) {
buffer[j]=(char)p.readInt();
}
InfoRec.createSignalInfo(buffer);
break;
case CdmaInformationRecord.RIL_CDMA_REDIRECTING_NUMBER_INFO_REC:
length=p.readInt();
buffer=new char[length + 4];
int reason;
for (int j=0; j < (length + 4); j++) {
buffer[j]=(char)p.readInt();
}
reason=p.readInt();
InfoRec.createRedirectingNumberInfo(length,buffer,reason);
break;
case CdmaInformationRecord.RIL_CDMA_LINE_CONTROL_INFO_REC:
buffer=new char[4];
for (int j=0; j < 4; j++) {
buffer[j]=(char)p.readInt();
}
InfoRec.createLineControlInfo(buffer);
break;
case CdmaInformationRecord.RIL_CDMA_T53_CLIR_INFO_REC:
char ch=(char)p.readInt();
InfoRec.createT53ClirInfo(ch);
break;
case CdmaInformationRecord.RIL_CDMA_T53_RELEASE_INFO_REC:
break;
case CdmaInformationRecord.RIL_CDMA_T53_AUDIO_CONTROL_INFO_REC:
char ul=(char)p.readInt();
char dl=(char)p.readInt();
InfoRec.createT53AudioControlInfo(ul,dl);
break;
default :
break;
}
response.add(InfoRec);
}
return response;
}
