{
  int num;
  int voiceSettings;
  ArrayList<DriverCall> response;
  DriverCall dc;
  num=p.readInt();
  response=new ArrayList<DriverCall>(num);
  for (int i=0; i < num; i++) {
    dc=new DriverCall();
    dc.state=DriverCall.stateFromCLCC(p.readInt());
    dc.index=p.readInt();
    dc.TOA=p.readInt();
    dc.isMpty=(0 != p.readInt());
    dc.isMT=(0 != p.readInt());
    dc.als=p.readInt();
    voiceSettings=p.readInt();
    dc.isVoice=(0 == voiceSettings) ? false : true;
    dc.number=p.readString();
    dc.numberPresentation=DriverCall.presentationFromCLIP(p.readInt());
    dc.number=PhoneNumberUtils.stringFromStringAndTOA(dc.number,dc.TOA);
    response.add(dc);
    if (RILConstants.CDMA_VOICE_PRIVACY == voiceSettings) {
      mVoicePrivacyOnRegistrants.notifyRegistrants();
      Log.d(LOG_TAG,"InCall VoicePrivacy is enabled: " + Integer.toString(voiceSettings));
    }
 else {
      mVoicePrivacyOffRegistrants.notifyRegistrants();
      Log.d(LOG_TAG,"InCall VoicePrivacy is disabled: " + Integer.toString(voiceSettings));
    }
  }
  Collections.sort(response);
  return response;
}
