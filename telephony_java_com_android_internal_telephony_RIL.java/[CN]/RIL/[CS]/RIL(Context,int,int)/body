{
  super(context);
  mCdmaSubscription=cdmaSubscription;
  mNetworkMode=networkMode;
switch (networkMode) {
case RILConstants.NETWORK_MODE_CDMA:
case RILConstants.NETWORK_MODE_CDMA_NO_EVDO:
case RILConstants.NETWORK_MODE_EVDO_NO_CDMA:
case RILConstants.NETWORK_MODE_GLOBAL:
    mPhoneType=RILConstants.CDMA_PHONE;
  break;
case RILConstants.NETWORK_MODE_WCDMA_PREF:
case RILConstants.NETWORK_MODE_GSM_ONLY:
case RILConstants.NETWORK_MODE_WCDMA_ONLY:
case RILConstants.NETWORK_MODE_GSM_UMTS:
default :
mPhoneType=RILConstants.GSM_PHONE;
}
PowerManager pm=(PowerManager)context.getSystemService(Context.POWER_SERVICE);
mWakeLock=pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,LOG_TAG);
mWakeLock.setReferenceCounted(false);
mRequestMessagesPending=0;
mContext=context;
mSenderThread=new HandlerThread("RILSender");
mSenderThread.start();
Looper looper=mSenderThread.getLooper();
mSender=new RILSender(looper);
mReceiver=new RILReceiver();
mReceiverThread=new Thread(mReceiver,"RILReceiver");
mReceiverThread.start();
IntentFilter filter=new IntentFilter();
filter.addAction(Intent.ACTION_SCREEN_ON);
filter.addAction(Intent.ACTION_SCREEN_OFF);
context.registerReceiver(mIntentReceiver,filter);
}
