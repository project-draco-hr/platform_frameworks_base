{
  mEgl=(EGL10)EGLContext.getEGL();
  mEglDisplay=mEgl.eglGetDisplay(EGL_DEFAULT_DISPLAY);
  if (mEglDisplay == EGL_NO_DISPLAY) {
    throw new RuntimeException("eglGetDisplay failed " + GLUtils.getEGLErrorString(mEgl.eglGetError()));
  }
  int[] version=new int[2];
  if (!mEgl.eglInitialize(mEglDisplay,version)) {
    throw new RuntimeException("eglInitialize failed " + GLUtils.getEGLErrorString(mEgl.eglGetError()));
  }
  mEglConfig=chooseEglConfig();
  if (mEglConfig == null) {
    throw new RuntimeException("eglConfig not initialized");
  }
  mEglContext=createContext(mEgl,mEglDisplay,mEglConfig);
  if (mEglContext == EGL_NO_CONTEXT) {
    throw new RuntimeException("createContext failed " + GLUtils.getEGLErrorString(mEgl.eglGetError()));
  }
  mEglSurface=mEgl.eglCreateWindowSurface(mEglDisplay,mEglConfig,surfaceHolder,null);
  if (mEglSurface == null || mEglSurface == EGL_NO_SURFACE) {
    int error=mEgl.eglGetError();
    if (error == EGL_BAD_NATIVE_WINDOW || error == EGL_BAD_ALLOC) {
      Log.e(GL_LOG_TAG,"createWindowSurface returned " + GLUtils.getEGLErrorString(error) + ".");
      return false;
    }
    throw new RuntimeException("createWindowSurface failed " + GLUtils.getEGLErrorString(error));
  }
  if (!mEgl.eglMakeCurrent(mEglDisplay,mEglSurface,mEglSurface,mEglContext)) {
    throw new RuntimeException("eglMakeCurrent failed " + GLUtils.getEGLErrorString(mEgl.eglGetError()));
  }
  int[] maxSize=new int[1];
  Rect frame=surfaceHolder.getSurfaceFrame();
  glGetIntegerv(GL_MAX_TEXTURE_SIZE,maxSize,0);
  if (frame.width() > maxSize[0] || frame.height() > maxSize[0]) {
    mEgl.eglDestroySurface(mEglDisplay,mEglSurface);
    mEgl.eglMakeCurrent(EGL_NO_DISPLAY,EGL_NO_SURFACE,EGL_NO_SURFACE,EGL_NO_CONTEXT);
    mEgl.eglDestroyContext(mEglDisplay,mEglContext);
    mEgl.eglTerminate(mEglDisplay);
    Log.e(GL_LOG_TAG,"requested  texture size " + frame.width() + "x"+ frame.height()+ " exceeds the support maximum of "+ maxSize[0]+ "x"+ maxSize[0]);
    return false;
  }
  return true;
}
