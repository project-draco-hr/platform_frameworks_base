{
  mEgl=(EGL10)EGLContext.getEGL();
  mEglDisplay=mEgl.eglGetDisplay(EGL_DEFAULT_DISPLAY);
  if (mEglDisplay == EGL_NO_DISPLAY) {
    throw new RuntimeException("eglGetDisplay failed " + GLUtils.getEGLErrorString(mEgl.eglGetError()));
  }
  int[] version=new int[2];
  if (!mEgl.eglInitialize(mEglDisplay,version)) {
    throw new RuntimeException("eglInitialize failed " + GLUtils.getEGLErrorString(mEgl.eglGetError()));
  }
  mEglConfig=chooseEglConfig();
  if (mEglConfig == null) {
    throw new RuntimeException("eglConfig not initialized");
  }
  mEglContext=createContext(mEgl,mEglDisplay,mEglConfig);
  mEglSurface=mEgl.eglCreateWindowSurface(mEglDisplay,mEglConfig,surfaceHolder,null);
  if (mEglSurface == null || mEglSurface == EGL_NO_SURFACE) {
    int error=mEgl.eglGetError();
    if (error == EGL_BAD_NATIVE_WINDOW) {
      Log.e(GL_LOG_TAG,"createWindowSurface returned EGL_BAD_NATIVE_WINDOW.");
      return;
    }
    throw new RuntimeException("createWindowSurface failed " + GLUtils.getEGLErrorString(error));
  }
  if (!mEgl.eglMakeCurrent(mEglDisplay,mEglSurface,mEglSurface,mEglContext)) {
    throw new RuntimeException("eglMakeCurrent failed " + GLUtils.getEGLErrorString(mEgl.eglGetError()));
  }
  mGL=mEglContext.getGL();
}
