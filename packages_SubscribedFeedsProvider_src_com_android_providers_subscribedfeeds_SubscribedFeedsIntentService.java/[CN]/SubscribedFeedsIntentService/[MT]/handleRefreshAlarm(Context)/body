{
  ArrayList<Account> accounts=Lists.newArrayList();
  ContentResolver contentResolver=context.getContentResolver();
  Cursor c=contentResolver.query(SubscribedFeeds.Accounts.CONTENT_URI,sAccountProjection,null,null,null);
  try {
    while (c.moveToNext()) {
      String accountName=c.getString(0);
      String accountType=c.getString(1);
      accounts.add(new Account(accountName,accountType));
    }
  }
  finally {
    c.close();
  }
  try {
    ContentValues values=new ContentValues();
    for (    Account account : accounts) {
      values.put(SyncConstValue._SYNC_ACCOUNT,account.name);
      values.put(SyncConstValue._SYNC_ACCOUNT_TYPE,account.type);
      contentResolver.update(SubscribedFeeds.Feeds.CONTENT_URI,values,SubscribedFeeds.Feeds._SYNC_ACCOUNT + "=? AND " + SubscribedFeeds.Feeds._SYNC_ACCOUNT_TYPE+ "=?",new String[]{account.name,account.type});
    }
  }
 catch (  SQLiteFullException e) {
    Log.w(TAG,"disk full while trying to mark the feeds as dirty, skipping");
  }
  long refreshTime=Calendar.getInstance().getTimeInMillis() + SUBSCRIPTION_REFRESH_INTERVAL;
  scheduleRefresh(context,refreshTime);
  SharedPreferences.Editor editor=context.getSharedPreferences(sSubscribedFeedsPrefs,Context.MODE_WORLD_READABLE).edit();
  editor.putLong(sRefreshTime,refreshTime);
  editor.commit();
}
