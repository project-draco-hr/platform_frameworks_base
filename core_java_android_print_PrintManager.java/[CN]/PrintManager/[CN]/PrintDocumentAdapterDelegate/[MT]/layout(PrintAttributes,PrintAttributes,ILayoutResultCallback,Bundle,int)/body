{
  final boolean destroyed;
synchronized (mLock) {
    destroyed=mDestroyed;
    if (mStartReqeusted && !mFinishRequested && !mDestroyed) {
      if (mLastWriteSpec != null) {
        IoUtils.closeQuietly(mLastWriteSpec.fd);
        mLastWriteSpec=null;
      }
      mLastLayoutSpec=new LayoutSpec();
      mLastLayoutSpec.callback=callback;
      mLastLayoutSpec.oldAttributes=oldAttributes;
      mLastLayoutSpec.newAttributes=newAttributes;
      mLastLayoutSpec.metadata=metadata;
      mLastLayoutSpec.sequence=sequence;
      if (cancelPreviousCancellableOperationLocked()) {
        return;
      }
      doPendingWorkLocked();
    }
  }
  if (destroyed) {
    try {
      callback.onLayoutFailed(null,sequence);
    }
 catch (    RemoteException re) {
      Log.i(LOG_TAG,"Error notifying for cancelled layout",re);
    }
  }
}
