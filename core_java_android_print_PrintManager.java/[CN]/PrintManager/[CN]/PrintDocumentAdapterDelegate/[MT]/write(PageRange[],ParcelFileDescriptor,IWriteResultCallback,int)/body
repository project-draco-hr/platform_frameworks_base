{
  ICancellationSignal cancellationTransport=CancellationSignal.createTransport();
  try {
    callback.onWriteStarted(cancellationTransport,sequence);
  }
 catch (  RemoteException re) {
    Log.e(LOG_TAG,"Error notifying for write start",re);
    return;
  }
synchronized (mLock) {
    if (isDestroyedLocked()) {
      return;
    }
    CancellationSignal cancellationSignal=CancellationSignal.fromTransport(cancellationTransport);
    SomeArgs args=SomeArgs.obtain();
    args.arg1=mDocumentAdapter;
    args.arg2=pages;
    args.arg3=fd;
    args.arg4=cancellationSignal;
    args.arg5=new MyWriteResultCallback(callback,fd,sequence);
    mHandler.obtainMessage(MyHandler.MSG_ON_WRITE,args).sendToTarget();
  }
}
