{
  if (isFinished()) {
    return;
  }
switch (message.what) {
case MSG_START:
{
      mDocumentAdapter.onStart();
    }
  break;
case MSG_LAYOUT:
{
  SomeArgs args=(SomeArgs)message.obj;
  PrintAttributes oldAttributes=(PrintAttributes)args.arg1;
  PrintAttributes newAttributes=(PrintAttributes)args.arg2;
  ILayoutResultCallback callback=(ILayoutResultCallback)args.arg3;
  Bundle metadata=(Bundle)args.arg4;
  args.recycle();
  try {
    ICancellationSignal remoteSignal=CancellationSignal.createTransport();
    callback.onLayoutStarted(remoteSignal);
    mDocumentAdapter.onLayout(oldAttributes,newAttributes,CancellationSignal.fromTransport(remoteSignal),new LayoutResultCallbackWrapper(callback),metadata);
  }
 catch (  RemoteException re) {
    Log.e(LOG_TAG,"Error printing",re);
  }
}
break;
case MSG_WRITE:
{
SomeArgs args=(SomeArgs)message.obj;
List<PageRange> pages=(List<PageRange>)args.arg1;
FileDescriptor fd=(FileDescriptor)args.arg2;
IWriteResultCallback callback=(IWriteResultCallback)args.arg3;
args.recycle();
try {
ICancellationSignal remoteSignal=CancellationSignal.createTransport();
callback.onWriteStarted(remoteSignal);
mDocumentAdapter.onWrite(pages,fd,CancellationSignal.fromTransport(remoteSignal),new WriteResultCallbackWrapper(callback,fd));
}
 catch (RemoteException re) {
Log.e(LOG_TAG,"Error printing",re);
IoUtils.closeQuietly(fd);
}
}
break;
case MSG_FINISH:
{
mDocumentAdapter.onFinish();
doFinish();
}
break;
default :
{
throw new IllegalArgumentException("Unknown message: " + message.what);
}
}
}
