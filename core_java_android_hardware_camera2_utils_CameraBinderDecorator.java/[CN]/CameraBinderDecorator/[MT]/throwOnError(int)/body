{
switch (errorFlag) {
case NO_ERROR:
    return;
case PERMISSION_DENIED:
  throw new SecurityException("Lacking privileges to access camera service");
case ALREADY_EXISTS:
return;
case BAD_VALUE:
throw new IllegalArgumentException("Bad argument passed to camera service");
case DEAD_OBJECT:
throw new CameraRuntimeException(CAMERA_DISCONNECTED);
case EACCES:
throw new CameraRuntimeException(CAMERA_DISABLED);
case EBUSY:
throw new CameraRuntimeException(CAMERA_IN_USE);
case EUSERS:
throw new CameraRuntimeException(MAX_CAMERAS_IN_USE);
case ENODEV:
throw new CameraRuntimeException(CAMERA_DISCONNECTED);
case EOPNOTSUPP:
throw new CameraRuntimeException(CAMERA_DEPRECATED_HAL);
case INVALID_OPERATION:
throw new IllegalStateException("Illegal state encountered in camera service.");
}
if (errorFlag < 0) {
throw new UnsupportedOperationException(String.format("Unknown error %d",errorFlag));
}
}
