{
switch (errorFlag) {
case NO_ERROR:
    return;
case PERMISSION_DENIED:
  throw new SecurityException("Lacking privileges to access camera service");
case ALREADY_EXISTS:
return;
case BAD_VALUE:
throw new IllegalArgumentException("Bad argument passed to camera service");
case DEAD_OBJECT:
UncheckedThrow.throwAnyException(new CameraRuntimeException(CAMERA_DISCONNECTED));
case EACCES:
UncheckedThrow.throwAnyException(new CameraRuntimeException(CAMERA_DISABLED));
case EBUSY:
UncheckedThrow.throwAnyException(new CameraRuntimeException(CAMERA_IN_USE));
case EUSERS:
UncheckedThrow.throwAnyException(new CameraRuntimeException(MAX_CAMERAS_IN_USE));
case ENODEV:
UncheckedThrow.throwAnyException(new CameraRuntimeException(CAMERA_DISCONNECTED));
case EOPNOTSUPP:
UncheckedThrow.throwAnyException(new CameraRuntimeException(CAMERA_DEPRECATED_HAL));
}
if (errorFlag < 0) {
throw new UnsupportedOperationException(String.format("Unknown error %d",errorFlag));
}
}
