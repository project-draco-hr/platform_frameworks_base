{
  if (m.getReturnType() == Integer.TYPE) {
    int returnValue=(Integer)result;
switch (returnValue) {
case NO_ERROR:
      return;
case PERMISSION_DENIED:
    throw new SecurityException("Lacking privileges to access camera service");
case ALREADY_EXISTS:
  return;
case BAD_VALUE:
throw new IllegalArgumentException("Bad argument passed to camera service");
case DEAD_OBJECT:
UncheckedThrow.throwAnyException(new CameraRuntimeException(CAMERA_DISCONNECTED));
case EACCES:
UncheckedThrow.throwAnyException(new CameraRuntimeException(CAMERA_DISABLED));
case EBUSY:
UncheckedThrow.throwAnyException(new CameraRuntimeException(CAMERA_IN_USE));
case ENODEV:
UncheckedThrow.throwAnyException(new CameraRuntimeException(CAMERA_DISCONNECTED));
case ENOTSUP:
UncheckedThrow.throwAnyException(new CameraRuntimeException(CAMERA_DEPRECATED_HAL));
}
if (returnValue < 0) {
throw new UnsupportedOperationException(String.format("Unknown error %d",returnValue));
}
}
}
