{
  ArrayList<FileDescriptor> fds=new ArrayList<FileDescriptor>();
  ArrayList<ZygoteConnection> peers=new ArrayList<ZygoteConnection>();
  fds.add(mServerSocket.getFileDescriptor());
  peers.add(null);
  while (true) {
    StructPollfd[] pollFds=new StructPollfd[fds.size()];
    for (int i=0; i < pollFds.length; ++i) {
      pollFds[i]=new StructPollfd();
      pollFds[i].fd=fds.get(i);
      pollFds[i].events=(short)POLLIN;
    }
    try {
      Os.poll(pollFds,-1);
    }
 catch (    ErrnoException ex) {
      throw new RuntimeException("poll failed",ex);
    }
    for (int i=pollFds.length - 1; i >= 0; --i) {
      if ((pollFds[i].revents & POLLIN) == 0) {
        continue;
      }
      if (i == 0) {
        ZygoteConnection newPeer=acceptCommandPeer(abiList);
        peers.add(newPeer);
        fds.add(newPeer.getFileDesciptor());
      }
 else {
        boolean done=peers.get(i).runOnce(this);
        if (done) {
          peers.remove(i);
          fds.remove(i);
        }
      }
    }
  }
}
