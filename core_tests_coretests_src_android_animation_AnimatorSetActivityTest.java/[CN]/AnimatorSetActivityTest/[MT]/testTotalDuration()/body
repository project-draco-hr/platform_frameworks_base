{
  ArrayList<Animator> list=new ArrayList<>(5);
  list.add(a1);
  list.add(a2);
  list.add(a3);
  list.add(a4);
  list.add(a5);
  AnimatorSet s1=new AnimatorSet();
  s1.playSequentially(list);
  long totalDuration=0;
  for (int i=0; i < list.size(); i++) {
    Animator anim=list.get(i);
    anim.setStartDelay(0);
    totalDuration+=list.get(i).getDuration();
  }
  assertEquals(totalDuration,s1.getTotalDuration());
  s1.setStartDelay(200);
  assertEquals(totalDuration + 200,s1.getTotalDuration());
  a1.setStartDelay(100);
  assertEquals(totalDuration + 200 + 100,s1.getTotalDuration());
  AnimatorSet s2=new AnimatorSet();
  s2.playTogether(list);
  long maxDuration=0;
  for (int i=0; i < list.size(); i++) {
    long duration=list.get(i).getDuration();
    list.get(i).setStartDelay(100);
    maxDuration=maxDuration > (duration + 100) ? maxDuration : (duration + 100);
  }
  assertEquals(maxDuration,s2.getTotalDuration());
  AnimatorSet s3=new AnimatorSet();
  s3.play(a1).before(a2).after(a3);
  s3.play(a1).after(a2).with(a4);
  assertEquals(AnimatorSet.DURATION_INFINITE,s3.getTotalDuration());
  AnimatorSet s4=new AnimatorSet();
  s4.play(a1).after(a2);
  s4.play(a2).after(a1);
  assertEquals(AnimatorSet.DURATION_INFINITE,s4.getTotalDuration());
  AnimatorSet s5=new AnimatorSet();
  s5.play(a1).after(a2).before(a3);
  s5.play(a2).with(a4).with(a5);
  long duration=a1.getDuration() + a1.getStartDelay() + a2.getDuration()+ a2.getStartDelay()+ a3.getDuration()+ a3.getStartDelay();
  long a4Duration=a4.getDuration() + a4.getStartDelay();
  long a5Duration=a5.getDuration() + a5.getStartDelay();
  duration=Math.max(duration,a4Duration);
  duration=Math.max(duration,a5Duration);
  assertEquals(duration,s5.getTotalDuration());
  a3.setRepeatCount(ValueAnimator.INFINITE);
  assertEquals(AnimatorSet.DURATION_INFINITE,s5.getTotalDuration());
}
