{
  final AnimatorSet s=new AnimatorSet();
  final ArrayList<Animator> animators=getAnimatorList();
  s.playTogether(animators);
  final MyListener l=new MyListener();
  s.addListener(l);
  final ArrayList<MyListener> listeners=new ArrayList<>(5);
  for (int i=0; i < animators.size(); i++) {
    MyListener listener=new MyListener();
    listeners.add(listener);
    animators.get(i).addListener(listener);
  }
  assertFalse(l.startIsCalled);
  assertFalse(l.cancelIsCalled);
  assertFalse(l.endIsCalled);
  for (int i=0; i < listeners.size(); i++) {
    assertFalse(l.startIsCalled);
    assertFalse(l.cancelIsCalled);
    assertFalse(l.endIsCalled);
  }
  runTestOnUiThread(new Runnable(){
    @Override public void run(){
      s.start();
    }
  }
);
  Thread.sleep(a1.getTotalDuration());
  runTestOnUiThread(new Runnable(){
    @Override public void run(){
      assertTrue(s.isStarted());
      ArrayList<Integer> runningAnimIds=new ArrayList<Integer>();
      for (int i=0; i < animators.size(); i++) {
        if (animators.get(i).isStarted()) {
          runningAnimIds.add(i);
        }
      }
      s.cancel();
      assertTrue(l.startIsCalled);
      assertTrue(l.cancelIsCalled);
      assertTrue(l.endIsCalled);
      for (int i=0; i < listeners.size(); i++) {
        assertTrue(listeners.get(i).startIsCalled);
        if (runningAnimIds.contains(i)) {
          assertTrue(listeners.get(i).cancelIsCalled);
        }
        assertTrue(listeners.get(i).endIsCalled);
      }
    }
  }
);
}
