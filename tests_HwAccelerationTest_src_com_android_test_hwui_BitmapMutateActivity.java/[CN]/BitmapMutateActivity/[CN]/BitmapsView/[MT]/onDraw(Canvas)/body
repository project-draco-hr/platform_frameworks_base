{
  super.onDraw(canvas);
  int width=mBitmap1.getWidth();
  int height=mBitmap1.getHeight();
  canvas.translate((getWidth() - width) / 2,0);
  for (int x=0; x < width; x++) {
    int color=0xff000000;
    int i=x == 0 ? 0 : x - 1;
    color|=(int)((0xff * ((i + mOffset) % mSlice) / (float)mSlice)) << mShifts[i / mSlice];
    for (int y=0; y < height; y++) {
      mPixels[y * width + x]=color;
    }
  }
  mBitmap1.setPixels(mPixels,0,width,0,0,width,height);
  canvas.drawBitmap(mBitmap1,0.0f,0.0f,mBitmapPaint);
  canvas.save();
  canvas.translate(0.0f,height + 32);
  canvas.drawBitmap(mPixels,0,width,0.0f,0.0f,width,height,false,mBitmapPaint);
  canvas.restore();
}
