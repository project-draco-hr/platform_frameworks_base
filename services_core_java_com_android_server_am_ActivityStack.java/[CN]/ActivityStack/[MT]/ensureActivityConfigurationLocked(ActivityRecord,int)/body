{
  if (mConfigWillChange) {
    if (DEBUG_SWITCH || DEBUG_CONFIGURATION)     Slog.v(TAG,"Skipping config check (will change): " + r);
    return true;
  }
  if (DEBUG_SWITCH || DEBUG_CONFIGURATION)   Slog.v(TAG,"Ensuring correct configuration: " + r);
  final TaskRecord topTask=topTask();
  if (topTask != null && ((topTask.mResizeable && mForcedFullscreen) || (!topTask.mResizeable && !mFullscreen))) {
    final boolean prevFullscreen=mFullscreen;
    final Configuration newOverrideConfig=mWindowManager.forceStackToFullscreen(mStackId,!topTask.mResizeable);
    updateOverrideConfiguration(newOverrideConfig);
    mForcedFullscreen=!prevFullscreen && mFullscreen;
    if (DEBUG_SWITCH || DEBUG_CONFIGURATION)     Slog.v(TAG,"Updated stack config to support task=" + topTask + " resizeable="+ topTask.mResizeable+ " mForcedFullscreen="+ mForcedFullscreen+ " prevFullscreen="+ prevFullscreen+ " mFullscreen="+ mFullscreen);
  }
  Configuration newConfig=mService.mConfiguration;
  if (r.configuration == newConfig && r.stackConfigOverride == mOverrideConfig && !r.forceNewConfig) {
    if (DEBUG_SWITCH || DEBUG_CONFIGURATION)     Slog.v(TAG,"Configuration unchanged in " + r);
    return true;
  }
  if (r.finishing) {
    if (DEBUG_SWITCH || DEBUG_CONFIGURATION)     Slog.v(TAG,"Configuration doesn't matter in finishing " + r);
    r.stopFreezingScreenLocked(false);
    return true;
  }
  final Configuration oldConfig=r.configuration;
  final Configuration oldStackOverride=r.stackConfigOverride;
  r.configuration=newConfig;
  r.stackConfigOverride=mOverrideConfig;
  int stackChanges=oldStackOverride.diff(mOverrideConfig);
  if (stackChanges == 0 && !oldStackOverride.equals(mOverrideConfig)) {
    stackChanges=ActivityInfo.CONFIG_SCREEN_SIZE;
  }
  final int changes=oldConfig.diff(newConfig) | stackChanges;
  if (changes == 0 && !r.forceNewConfig) {
    if (DEBUG_SWITCH || DEBUG_CONFIGURATION)     Slog.v(TAG,"Configuration no differences in " + r);
    return true;
  }
  if (r.app == null || r.app.thread == null) {
    if (DEBUG_SWITCH || DEBUG_CONFIGURATION)     Slog.v(TAG,"Configuration doesn't matter not running " + r);
    r.stopFreezingScreenLocked(false);
    r.forceNewConfig=false;
    return true;
  }
  if (DEBUG_SWITCH || DEBUG_CONFIGURATION) {
    Slog.v(TAG,"Checking to restart " + r.info.name + ": changed=0x"+ Integer.toHexString(changes)+ ", handles=0x"+ Integer.toHexString(r.info.getRealConfigChanged())+ ", newConfig="+ newConfig);
  }
  if ((changes & (~r.info.getRealConfigChanged())) != 0 || r.forceNewConfig) {
    r.configChangeFlags|=changes;
    r.startFreezingScreenLocked(r.app,globalChanges);
    r.forceNewConfig=false;
    if (r.app == null || r.app.thread == null) {
      if (DEBUG_SWITCH || DEBUG_CONFIGURATION)       Slog.v(TAG,"Config is destroying non-running " + r);
      destroyActivityLocked(r,true,"config");
    }
 else     if (r.state == ActivityState.PAUSING) {
      if (DEBUG_SWITCH || DEBUG_CONFIGURATION)       Slog.v(TAG,"Config is skipping already pausing " + r);
      r.configDestroy=true;
      return true;
    }
 else     if (r.state == ActivityState.RESUMED) {
      if (DEBUG_SWITCH || DEBUG_CONFIGURATION)       Slog.v(TAG,"Config is relaunching resumed " + r);
      relaunchActivityLocked(r,r.configChangeFlags,true);
      r.configChangeFlags=0;
    }
 else {
      if (DEBUG_SWITCH || DEBUG_CONFIGURATION)       Slog.v(TAG,"Config is relaunching non-resumed " + r);
      relaunchActivityLocked(r,r.configChangeFlags,false);
      r.configChangeFlags=0;
    }
    return false;
  }
  if (r.app != null && r.app.thread != null) {
    try {
      if (DEBUG_CONFIGURATION)       Slog.v(TAG,"Sending new config to " + r);
      r.app.thread.scheduleActivityConfigurationChanged(r.appToken);
    }
 catch (    RemoteException e) {
    }
  }
  r.stopFreezingScreenLocked(false);
  return true;
}
