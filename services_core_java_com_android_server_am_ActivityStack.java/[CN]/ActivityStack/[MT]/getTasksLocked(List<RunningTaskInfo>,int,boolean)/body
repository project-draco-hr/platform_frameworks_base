{
  boolean focusedStack=mStackSupervisor.getFocusedStack() == this;
  boolean topTask=true;
  for (int taskNdx=mTaskHistory.size() - 1; taskNdx >= 0; --taskNdx) {
    final TaskRecord task=mTaskHistory.get(taskNdx);
    if (task.getTopActivity() == null) {
      continue;
    }
    ActivityRecord r=null;
    ActivityRecord top=null;
    ActivityRecord tmp;
    int numActivities=0;
    int numRunning=0;
    final ArrayList<ActivityRecord> activities=task.mActivities;
    if (!allowed && !task.isHomeTask() && task.effectiveUid != callingUid) {
      continue;
    }
    for (int activityNdx=activities.size() - 1; activityNdx >= 0; --activityNdx) {
      tmp=activities.get(activityNdx);
      if (tmp.finishing) {
        continue;
      }
      r=tmp;
      if (top == null || (top.state == ActivityState.INITIALIZING)) {
        top=r;
        numActivities=numRunning=0;
      }
      numActivities++;
      if (r.app != null && r.app.thread != null) {
        numRunning++;
      }
      if (DEBUG_ALL)       Slog.v(TAG,r.intent.getComponent().flattenToShortString() + ": task=" + r.task);
    }
    RunningTaskInfo ci=new RunningTaskInfo();
    ci.id=task.taskId;
    ci.stackId=(task.stack == null) ? INVALID_STACK_ID : task.stack.getStackId();
    ci.baseActivity=r.intent.getComponent();
    ci.topActivity=top.intent.getComponent();
    ci.lastActiveTime=task.lastActiveTime;
    if (focusedStack && topTask) {
      ci.lastActiveTime=System.currentTimeMillis();
      topTask=false;
    }
    if (top.task != null) {
      ci.description=top.task.lastDescription;
    }
    ci.numActivities=numActivities;
    ci.numRunning=numRunning;
    list.add(ci);
  }
}
