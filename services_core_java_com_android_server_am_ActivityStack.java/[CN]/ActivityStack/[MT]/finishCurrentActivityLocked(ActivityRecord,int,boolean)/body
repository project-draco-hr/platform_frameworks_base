{
  if (mode == FINISH_AFTER_VISIBLE && r.nowVisible) {
    if (!mStackSupervisor.mStoppingActivities.contains(r)) {
      mStackSupervisor.mStoppingActivities.add(r);
      if (mStackSupervisor.mStoppingActivities.size() > 3 || r.frontOfTask && mTaskHistory.size() <= 1) {
        mStackSupervisor.scheduleIdleLocked();
      }
 else {
        mStackSupervisor.checkReadyForSleepLocked();
      }
    }
    if (DEBUG_STATES)     Slog.v(TAG,"Moving to STOPPING: " + r + " (finish requested)");
    r.state=ActivityState.STOPPING;
    if (oomAdj) {
      mService.updateOomAdjLocked();
    }
    return r;
  }
  mStackSupervisor.mStoppingActivities.remove(r);
  mStackSupervisor.mGoingToSleepActivities.remove(r);
  mStackSupervisor.mWaitingVisibleActivities.remove(r);
  r.waitingVisible=false;
  if (mResumedActivity == r) {
    mResumedActivity=null;
  }
  final ActivityState prevState=r.state;
  if (DEBUG_STATES)   Slog.v(TAG,"Moving to FINISHING: " + r);
  r.state=ActivityState.FINISHING;
  if (mode == FINISH_IMMEDIATELY || prevState == ActivityState.STOPPED || prevState == ActivityState.INITIALIZING) {
    r.makeFinishing();
    boolean activityRemoved=destroyActivityLocked(r,true,"finish-imm");
    if (activityRemoved) {
      mStackSupervisor.resumeTopActivitiesLocked();
    }
    if (DEBUG_CONTAINERS)     Slog.d(TAG,"destroyActivityLocked: finishCurrentActivityLocked r=" + r + " destroy returned removed="+ activityRemoved);
    return activityRemoved ? null : r;
  }
  if (localLOGV)   Slog.v(TAG,"Enqueueing pending finish: " + r);
  mStackSupervisor.mFinishingActivities.add(r);
  r.resumeKeyDispatchingLocked();
  mStackSupervisor.getFocusedStack().resumeTopActivityLocked(null);
  return r;
}
