{
  if (direction != View.FOCUS_LEFT && direction != View.FOCUS_RIGHT) {
    throw new IllegalArgumentException("direction must be one of" + " {View.FOCUS_LEFT, View.FOCUS_RIGHT}");
  }
  final int numChildren=getChildCount();
  if (mItemsCanFocus && numChildren > 0 && mSelectedPosition != INVALID_POSITION) {
    final View selectedView=getSelectedView();
    if (selectedView != null && selectedView.hasFocus() && selectedView instanceof ViewGroup) {
      final View currentFocus=selectedView.findFocus();
      final View nextFocus=FocusFinder.getInstance().findNextFocus((ViewGroup)selectedView,currentFocus,direction);
      if (nextFocus != null) {
        Rect focusedRect=mTempRect;
        if (currentFocus != null) {
          currentFocus.getFocusedRect(focusedRect);
          offsetDescendantRectToMyCoords(currentFocus,focusedRect);
          offsetRectIntoDescendantCoords(nextFocus,focusedRect);
        }
 else {
          focusedRect=null;
        }
        if (nextFocus.requestFocus(direction,focusedRect)) {
          return true;
        }
      }
      final View globalNextFocus=FocusFinder.getInstance().findNextFocus((ViewGroup)getRootView(),currentFocus,direction);
      if (globalNextFocus != null) {
        return isViewAncestorOf(globalNextFocus,this);
      }
    }
  }
  return false;
}
