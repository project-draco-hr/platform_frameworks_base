{
  super.onFocusChanged(gainFocus,direction,previouslyFocusedRect);
  int closetChildIndex=-1;
  if (gainFocus && previouslyFocusedRect != null) {
    previouslyFocusedRect.offset(mScrollX,mScrollY);
    final ListAdapter adapter=mAdapter;
    final int firstPosition=mFirstPosition;
    if (adapter.getCount() < getChildCount() + firstPosition) {
      mLayoutMode=LAYOUT_NORMAL;
      layoutChildren();
    }
    Rect otherRect=mTempRect;
    int minDistance=Integer.MAX_VALUE;
    final int childCount=getChildCount();
    for (int i=0; i < childCount; i++) {
      if (!adapter.isEnabled(firstPosition + i)) {
        continue;
      }
      View other=getChildAt(i);
      other.getDrawingRect(otherRect);
      offsetDescendantRectToMyCoords(other,otherRect);
      int distance=getDistance(previouslyFocusedRect,otherRect,direction);
      if (distance < minDistance) {
        minDistance=distance;
        closetChildIndex=i;
      }
    }
  }
  if (closetChildIndex >= 0) {
    setSelection(closetChildIndex + mFirstPosition);
  }
 else {
    requestLayout();
  }
}
