{
  if (null != mAdapter) {
    mAdapter.unregisterDataSetObserver(mDataSetObserver);
  }
  resetList();
  mRecycler.clear();
  if (mHeaderViewInfos.size() > 0 || mFooterViewInfos.size() > 0) {
    mAdapter=new HeaderViewListAdapter(mHeaderViewInfos,mFooterViewInfos,adapter);
  }
 else {
    mAdapter=adapter;
  }
  mOldSelectedPosition=INVALID_POSITION;
  mOldSelectedRowId=INVALID_ROW_ID;
  if (mAdapter != null) {
    mAreAllItemsSelectable=mAdapter.areAllItemsEnabled();
    mOldItemCount=mItemCount;
    mItemCount=mAdapter.getCount();
    checkFocus();
    mDataSetObserver=new AdapterDataSetObserver();
    mAdapter.registerDataSetObserver(mDataSetObserver);
    mRecycler.setViewTypeCount(mAdapter.getViewTypeCount());
    int position;
    if (mStackFromBottom) {
      position=lookForSelectablePosition(mItemCount - 1,false);
    }
 else {
      position=lookForSelectablePosition(0,true);
    }
    setSelectedPositionInt(position);
    setNextSelectedPositionInt(position);
    if (mItemCount == 0) {
      checkSelectionChanged();
    }
    if (mChoiceMode != CHOICE_MODE_NONE && mAdapter.hasStableIds() && mCheckedIdStates == null) {
      mCheckedIdStates=new LongSparseArray<Boolean>();
    }
  }
 else {
    mAreAllItemsSelectable=true;
    checkFocus();
    checkSelectionChanged();
  }
  if (mCheckStates != null) {
    mCheckStates.clear();
  }
  if (mCheckedIdStates != null) {
    mCheckedIdStates.clear();
  }
  requestLayout();
}
