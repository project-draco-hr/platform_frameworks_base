{
  int rectTopWithinChild=rect.top;
  rect.offset(child.getLeft(),child.getTop());
  rect.offset(-child.getScrollX(),-child.getScrollY());
  final int height=getHeight();
  int listUnfadedTop=getScrollY();
  int listUnfadedBottom=listUnfadedTop + height;
  final int fadingEdge=getVerticalFadingEdgeLength();
  if (showingTopFadingEdge()) {
    if ((mSelectedPosition > 0) || (rectTopWithinChild > fadingEdge)) {
      listUnfadedTop+=fadingEdge;
    }
  }
  int childCount=getChildCount();
  int bottomOfBottomChild=getChildAt(childCount - 1).getBottom();
  if (showingBottomFadingEdge()) {
    if ((mSelectedPosition < mItemCount - 1) || (rect.bottom < (bottomOfBottomChild - fadingEdge))) {
      listUnfadedBottom-=fadingEdge;
    }
  }
  int scrollYDelta=0;
  if (rect.bottom > listUnfadedBottom && rect.top > listUnfadedTop) {
    if (rect.height() > height) {
      scrollYDelta+=(rect.top - listUnfadedTop);
    }
 else {
      scrollYDelta+=(rect.bottom - listUnfadedBottom);
    }
    int distanceToBottom=bottomOfBottomChild - listUnfadedBottom;
    scrollYDelta=Math.min(scrollYDelta,distanceToBottom);
  }
 else   if (rect.top < listUnfadedTop && rect.bottom < listUnfadedBottom) {
    if (rect.height() > height) {
      scrollYDelta-=(listUnfadedBottom - rect.bottom);
    }
 else {
      scrollYDelta-=(listUnfadedTop - rect.top);
    }
    int top=getChildAt(0).getTop();
    int deltaToTop=top - listUnfadedTop;
    scrollYDelta=Math.max(scrollYDelta,deltaToTop);
  }
  final boolean scroll=scrollYDelta != 0;
  if (scroll) {
    scrollListItemsBy(-scrollYDelta);
    positionSelector(child);
    mSelectedTop=child.getTop();
    invalidate();
  }
  return scroll;
}
