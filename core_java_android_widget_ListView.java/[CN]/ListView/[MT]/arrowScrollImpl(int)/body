{
  if (getChildCount() <= 0) {
    return false;
  }
  View selectedView=getSelectedView();
  int nextSelectedPosition=lookForSelectablePositionOnScreen(direction);
  int amountToScroll=amountToScroll(direction,nextSelectedPosition);
  final ArrowScrollFocusResult focusResult=mItemsCanFocus ? arrowScrollFocused(direction) : null;
  if (focusResult != null) {
    nextSelectedPosition=focusResult.getSelectedPosition();
    amountToScroll=focusResult.getAmountToScroll();
  }
  boolean needToRedraw=focusResult != null;
  if (nextSelectedPosition != INVALID_POSITION) {
    handleNewSelectionChange(selectedView,direction,nextSelectedPosition,focusResult != null);
    setSelectedPositionInt(nextSelectedPosition);
    setNextSelectedPositionInt(nextSelectedPosition);
    selectedView=getSelectedView();
    if (mItemsCanFocus && focusResult == null) {
      final View focused=getFocusedChild();
      if (focused != null) {
        focused.clearFocus();
      }
    }
    needToRedraw=true;
    checkSelectionChanged();
  }
  if (amountToScroll > 0) {
    scrollListItemsBy((direction == View.FOCUS_UP) ? amountToScroll : -amountToScroll);
    needToRedraw=true;
  }
  if (mItemsCanFocus && (focusResult == null) && selectedView != null && selectedView.hasFocus()) {
    final View focused=selectedView.findFocus();
    if (distanceToView(focused) > 0) {
      focused.clearFocus();
    }
  }
  if (nextSelectedPosition == INVALID_POSITION && selectedView != null && !isViewAncestorOf(selectedView,this)) {
    selectedView=null;
    hideSelector();
    mResurrectToPosition=INVALID_POSITION;
  }
  if (needToRedraw) {
    if (selectedView != null) {
      positionSelector(selectedView);
      mSelectedTop=selectedView.getTop();
    }
    invalidate();
    invokeOnItemScrollListener();
    return true;
  }
  return false;
}
