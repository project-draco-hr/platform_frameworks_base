{
  int fadingEdgeLength=getVerticalFadingEdgeLength();
  final int selectedPosition=mSelectedPosition;
  View sel;
  final int topSelectionPixel=getTopSelectionPixel(childrenTop,fadingEdgeLength,selectedPosition);
  final int bottomSelectionPixel=getBottomSelectionPixel(childrenTop,fadingEdgeLength,selectedPosition);
  if (delta > 0) {
    oldSel=makeAndAddView(selectedPosition - 1,oldSel.getTop(),true,mListPadding.left,false);
    final int dividerHeight=mDividerHeight;
    sel=makeAndAddView(selectedPosition,oldSel.getBottom() + dividerHeight,true,mListPadding.left,true);
    if (sel.getBottom() > bottomSelectionPixel) {
      int spaceAbove=sel.getTop() - topSelectionPixel;
      int spaceBelow=sel.getBottom() - bottomSelectionPixel;
      int halfVerticalSpace=(childrenBottom - childrenTop) / 2;
      int offset=Math.min(spaceAbove,spaceBelow);
      offset=Math.min(offset,halfVerticalSpace);
      oldSel.offsetTopAndBottom(-offset);
      sel.offsetTopAndBottom(-offset);
    }
    if (!mStackFromBottom) {
      fillUp(mSelectedPosition - 2,sel.getTop() - dividerHeight);
      adjustViewsUpOrDown();
      fillDown(mSelectedPosition + 1,sel.getBottom() + dividerHeight);
    }
 else {
      fillDown(mSelectedPosition + 1,sel.getBottom() + dividerHeight);
      adjustViewsUpOrDown();
      fillUp(mSelectedPosition - 2,sel.getTop() - dividerHeight);
    }
  }
 else   if (delta < 0) {
    if (newSel != null) {
      sel=makeAndAddView(selectedPosition,newSel.getTop(),true,mListPadding.left,true);
    }
 else {
      sel=makeAndAddView(selectedPosition,oldSel.getTop(),false,mListPadding.left,true);
    }
    if (sel.getTop() < topSelectionPixel) {
      int spaceAbove=topSelectionPixel - sel.getTop();
      int spaceBelow=bottomSelectionPixel - sel.getBottom();
      int halfVerticalSpace=(childrenBottom - childrenTop) / 2;
      int offset=Math.min(spaceAbove,spaceBelow);
      offset=Math.min(offset,halfVerticalSpace);
      sel.offsetTopAndBottom(offset);
    }
    fillAboveAndBelow(sel,selectedPosition);
  }
 else {
    int oldTop=oldSel.getTop();
    sel=makeAndAddView(selectedPosition,oldTop,true,mListPadding.left,true);
    if (oldTop < childrenTop) {
      int newBottom=sel.getBottom();
      if (newBottom < childrenTop + 20) {
        sel.offsetTopAndBottom(childrenTop - sel.getTop());
      }
    }
    fillAboveAndBelow(sel,selectedPosition);
  }
  return sel;
}
