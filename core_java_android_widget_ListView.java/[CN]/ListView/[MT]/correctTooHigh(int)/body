{
  int lastPosition=mFirstPosition + childCount - 1;
  if (lastPosition == mItemCount - 1 && childCount > 0) {
    final View lastChild=getChildAt(childCount - 1);
    final int lastBottom=lastChild.getBottom();
    final int end=(mBottom - mTop) - mListPadding.bottom;
    int bottomOffset=end - lastBottom;
    View firstChild=getChildAt(0);
    final int firstTop=firstChild.getTop();
    if (bottomOffset > 0 && (mFirstPosition > 0 || firstTop < mListPadding.top)) {
      if (mFirstPosition == 0) {
        bottomOffset=Math.min(bottomOffset,mListPadding.top - firstTop);
      }
      offsetChildrenTopAndBottom(bottomOffset);
      if (mFirstPosition > 0) {
        fillUp(mFirstPosition - 1,firstChild.getTop() - mDividerHeight);
        adjustViewsUpOrDown();
      }
    }
  }
}
