{
  final int listBottom=getHeight() - mListPadding.bottom;
  final int listTop=mListPadding.top;
  final int numChildren=getChildCount();
  if (direction == View.FOCUS_DOWN) {
    int indexToMakeVisible=numChildren - 1;
    if (nextSelectedPosition != INVALID_POSITION) {
      indexToMakeVisible=nextSelectedPosition - mFirstPosition;
    }
    final int positionToMakeVisible=mFirstPosition + indexToMakeVisible;
    final View viewToMakeVisible=getChildAt(indexToMakeVisible);
    int goalBottom=listBottom;
    if (positionToMakeVisible < mItemCount - 1) {
      goalBottom-=getArrowScrollPreviewLength();
    }
    if (viewToMakeVisible.getBottom() <= goalBottom) {
      return 0;
    }
    if (nextSelectedPosition != INVALID_POSITION && (goalBottom - viewToMakeVisible.getTop()) >= getMaxScrollAmount()) {
      return 0;
    }
    int amountToScroll=(viewToMakeVisible.getBottom() - goalBottom);
    if ((mFirstPosition + numChildren) == mItemCount) {
      final int max=getChildAt(numChildren - 1).getBottom() - listBottom;
      amountToScroll=Math.min(amountToScroll,max);
    }
    return Math.min(amountToScroll,getMaxScrollAmount());
  }
 else {
    int indexToMakeVisible=0;
    if (nextSelectedPosition != INVALID_POSITION) {
      indexToMakeVisible=nextSelectedPosition - mFirstPosition;
    }
    final int positionToMakeVisible=mFirstPosition + indexToMakeVisible;
    final View viewToMakeVisible=getChildAt(indexToMakeVisible);
    int goalTop=listTop;
    if (positionToMakeVisible > 0) {
      goalTop+=getArrowScrollPreviewLength();
    }
    if (viewToMakeVisible.getTop() >= goalTop) {
      return 0;
    }
    if (nextSelectedPosition != INVALID_POSITION && (viewToMakeVisible.getBottom() - goalTop) >= getMaxScrollAmount()) {
      return 0;
    }
    int amountToScroll=(goalTop - viewToMakeVisible.getTop());
    if (mFirstPosition == 0) {
      final int max=listTop - getChildAt(0).getTop();
      amountToScroll=Math.min(amountToScroll,max);
    }
    return Math.min(amountToScroll,getMaxScrollAmount());
  }
}
