{
  int fadingEdgeLength=getVerticalFadingEdgeLength();
  final int selectedPosition=mSelectedPosition;
  View sel;
  final int topSelectionPixel=getTopSelectionPixel(childrenTop,fadingEdgeLength,selectedPosition);
  final int bottomSelectionPixel=getBottomSelectionPixel(childrenBottom,fadingEdgeLength,selectedPosition);
  sel=makeAndAddView(selectedPosition,selectedTop,true,mListPadding.left,true);
  if (sel.getBottom() > bottomSelectionPixel) {
    final int spaceAbove=sel.getTop() - topSelectionPixel;
    final int spaceBelow=sel.getBottom() - bottomSelectionPixel;
    final int offset=Math.min(spaceAbove,spaceBelow);
    sel.offsetTopAndBottom(-offset);
  }
 else   if (sel.getTop() < topSelectionPixel) {
    final int spaceAbove=topSelectionPixel - sel.getTop();
    final int spaceBelow=bottomSelectionPixel - sel.getBottom();
    final int offset=Math.min(spaceAbove,spaceBelow);
    sel.offsetTopAndBottom(offset);
  }
  fillAboveAndBelow(sel,selectedPosition);
  if (!mStackFromBottom) {
    correctTooHigh(getChildCount());
  }
 else {
    correctTooLow(getChildCount());
  }
  return sel;
}
