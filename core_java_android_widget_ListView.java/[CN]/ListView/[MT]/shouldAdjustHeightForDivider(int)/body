{
  final int dividerHeight=mDividerHeight;
  final Drawable overscrollHeader=mOverScrollHeader;
  final Drawable overscrollFooter=mOverScrollFooter;
  final boolean drawOverscrollHeader=overscrollHeader != null;
  final boolean drawOverscrollFooter=overscrollFooter != null;
  final boolean drawDividers=dividerHeight > 0 && mDivider != null;
  if (drawDividers) {
    final boolean fillForMissingDividers=isOpaque() && !super.isOpaque();
    final int itemCount=mItemCount;
    final int headerCount=mHeaderViewInfos.size();
    final int footerLimit=(itemCount - mFooterViewInfos.size());
    final boolean isHeader=(itemIndex < headerCount);
    final boolean isFooter=(itemIndex >= footerLimit);
    final boolean headerDividers=mHeaderDividersEnabled;
    final boolean footerDividers=mFooterDividersEnabled;
    if ((headerDividers || !isHeader) && (footerDividers || !isFooter)) {
      final ListAdapter adapter=mAdapter;
      if (!mStackFromBottom) {
        final boolean isLastItem=(itemIndex == (itemCount - 1));
        if (!drawOverscrollFooter || !isLastItem) {
          final int nextIndex=itemIndex + 1;
          if (adapter.isEnabled(itemIndex) && (headerDividers || !isHeader && (nextIndex >= headerCount)) && (isLastItem || adapter.isEnabled(nextIndex) && (footerDividers || !isFooter && (nextIndex < footerLimit)))) {
            return true;
          }
 else           if (fillForMissingDividers) {
            return true;
          }
        }
      }
 else {
        final int start=drawOverscrollHeader ? 1 : 0;
        final boolean isFirstItem=(itemIndex == start);
        if (!isFirstItem) {
          final int previousIndex=(itemIndex - 1);
          if (adapter.isEnabled(itemIndex) && (headerDividers || !isHeader && (previousIndex >= headerCount)) && (isFirstItem || adapter.isEnabled(previousIndex) && (footerDividers || !isFooter && (previousIndex < footerLimit)))) {
            return true;
          }
 else           if (fillForMissingDividers) {
            return true;
          }
        }
      }
    }
  }
  return false;
}
