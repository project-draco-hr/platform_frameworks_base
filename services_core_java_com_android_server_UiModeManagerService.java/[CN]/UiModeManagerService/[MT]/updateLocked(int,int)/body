{
  String action=null;
  String oldAction=null;
  if (mLastBroadcastState == Intent.EXTRA_DOCK_STATE_CAR) {
    adjustStatusBarCarModeLocked();
    oldAction=UiModeManager.ACTION_EXIT_CAR_MODE;
  }
 else   if (isDeskDockState(mLastBroadcastState)) {
    oldAction=UiModeManager.ACTION_EXIT_DESK_MODE;
  }
  if (mCarModeEnabled) {
    if (mLastBroadcastState != Intent.EXTRA_DOCK_STATE_CAR) {
      adjustStatusBarCarModeLocked();
      if (oldAction != null) {
        getContext().sendBroadcastAsUser(new Intent(oldAction),UserHandle.ALL);
      }
      mLastBroadcastState=Intent.EXTRA_DOCK_STATE_CAR;
      action=UiModeManager.ACTION_ENTER_CAR_MODE;
    }
  }
 else   if (isDeskDockState(mDockState)) {
    if (!isDeskDockState(mLastBroadcastState)) {
      if (oldAction != null) {
        getContext().sendBroadcastAsUser(new Intent(oldAction),UserHandle.ALL);
      }
      mLastBroadcastState=mDockState;
      action=UiModeManager.ACTION_ENTER_DESK_MODE;
    }
  }
 else {
    mLastBroadcastState=Intent.EXTRA_DOCK_STATE_UNDOCKED;
    action=oldAction;
  }
  if (action != null) {
    if (LOG) {
      Slog.v(TAG,String.format("updateLocked: preparing broadcast: action=%s enable=0x%08x disable=0x%08x",action,enableFlags,disableFlags));
    }
    Intent intent=new Intent(action);
    intent.putExtra("enableFlags",enableFlags);
    intent.putExtra("disableFlags",disableFlags);
    getContext().sendOrderedBroadcastAsUser(intent,UserHandle.CURRENT,null,mResultReceiver,null,Activity.RESULT_OK,null,null);
    mHoldingConfiguration=true;
    updateConfigurationLocked();
  }
 else {
    String category=null;
    if (mCarModeEnabled) {
      if (ENABLE_LAUNCH_CAR_DOCK_APP && (enableFlags & UiModeManager.ENABLE_CAR_MODE_GO_CAR_HOME) != 0) {
        category=Intent.CATEGORY_CAR_DOCK;
      }
    }
 else     if (isDeskDockState(mDockState)) {
      if (ENABLE_LAUNCH_DESK_DOCK_APP && (enableFlags & UiModeManager.ENABLE_CAR_MODE_GO_CAR_HOME) != 0) {
        category=Intent.CATEGORY_DESK_DOCK;
      }
    }
 else {
      if ((disableFlags & UiModeManager.DISABLE_CAR_MODE_GO_HOME) != 0) {
        category=Intent.CATEGORY_HOME;
      }
    }
    if (LOG) {
      Slog.v(TAG,"updateLocked: null action, mDockState=" + mDockState + ", category="+ category);
    }
    sendConfigurationAndStartDreamOrDockAppLocked(category);
  }
  boolean keepScreenOn=mCharging && ((mCarModeEnabled && mCarModeKeepsScreenOn && (mCarModeEnableFlags & UiModeManager.ENABLE_CAR_MODE_NO_WAKE_LOCK) == 0) || (mCurUiMode == Configuration.UI_MODE_TYPE_DESK && mDeskModeKeepsScreenOn));
  if (keepScreenOn != mWakeLock.isHeld()) {
    if (keepScreenOn) {
      mWakeLock.acquire();
    }
 else {
      mWakeLock.release();
    }
  }
}
