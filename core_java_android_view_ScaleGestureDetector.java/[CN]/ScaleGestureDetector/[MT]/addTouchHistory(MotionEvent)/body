{
  final long currentTime=SystemClock.uptimeMillis();
  final int count=ev.getPointerCount();
  boolean accept=currentTime - mTouchHistoryLastAcceptedTime >= TOUCH_STABILIZE_TIME;
  float total=0;
  int sampleCount=0;
  for (int i=0; i < count; i++) {
    final boolean hasLastAccepted=!Float.isNaN(mTouchHistoryLastAccepted);
    final int historySize=ev.getHistorySize();
    final int pointerSampleCount=historySize + 1;
    for (int h=0; h < pointerSampleCount; h++) {
      float major;
      if (h < historySize) {
        major=ev.getHistoricalTouchMajor(i,h);
      }
 else {
        major=ev.getTouchMajor(i);
      }
      if (major < mTouchMinMajor)       major=mTouchMinMajor;
      total+=major;
      if (Float.isNaN(mTouchUpper) || major > mTouchUpper) {
        mTouchUpper=major;
      }
      if (Float.isNaN(mTouchLower) || major < mTouchLower) {
        mTouchLower=major;
      }
      if (hasLastAccepted) {
        final int directionSig=(int)Math.signum(major - mTouchHistoryLastAccepted);
        if (directionSig != mTouchHistoryDirection || (directionSig == 0 && mTouchHistoryDirection == 0)) {
          mTouchHistoryDirection=directionSig;
          final long time=h < historySize ? ev.getHistoricalEventTime(h) : ev.getEventTime();
          mTouchHistoryLastAcceptedTime=time;
          accept=false;
        }
      }
    }
    sampleCount+=pointerSampleCount;
  }
  final float avg=total / sampleCount;
  if (accept) {
    float newAccepted=(mTouchUpper + mTouchLower + avg) / 3;
    mTouchUpper=(mTouchUpper + newAccepted) / 2;
    mTouchLower=(mTouchLower + newAccepted) / 2;
    mTouchHistoryLastAccepted=newAccepted;
    mTouchHistoryDirection=0;
    mTouchHistoryLastAcceptedTime=ev.getEventTime();
  }
}
