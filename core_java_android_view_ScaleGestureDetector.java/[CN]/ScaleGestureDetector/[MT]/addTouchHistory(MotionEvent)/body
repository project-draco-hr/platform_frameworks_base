{
  final long currentTime=SystemClock.uptimeMillis();
  final int count=ev.getPointerCount();
  for (int i=0; i < count; i++) {
    final int id=ev.getPointerId(i);
    ensureTouchHistorySize(id);
    final boolean hasLastAccepted=!Float.isNaN(mTouchHistoryLastAccepted[id]);
    boolean accept=true;
    final int historySize=ev.getHistorySize();
    for (int h=0; h < historySize + 1; h++) {
      final float major;
      final float minor;
      if (h < historySize) {
        major=ev.getHistoricalTouchMajor(i,h);
        minor=ev.getHistoricalTouchMinor(i,h);
      }
 else {
        major=ev.getTouchMajor(i);
        minor=ev.getTouchMinor(i);
      }
      final float avg=(major + minor) / 2;
      if (hasLastAccepted) {
        final int directionSig=(int)Math.signum(avg - mTouchHistoryLastAccepted[id]);
        if (directionSig != mTouchHistoryDirection[id] || (directionSig == 0 && mTouchHistoryDirection[id] == 0)) {
          mTouchHistoryDirection[id]=directionSig;
          final long time=h < historySize ? ev.getHistoricalEventTime(h) : ev.getEventTime();
          mTouchHistoryLastAcceptedTime[id]=time;
          accept=false;
        }
        if (currentTime - mTouchHistoryLastAcceptedTime[id] < TOUCH_STABILIZE_TIME) {
          accept=false;
        }
      }
    }
    if (accept) {
      float newAccepted=(ev.getTouchMajor(i) + ev.getTouchMinor(i)) / 2;
      if (hasLastAccepted) {
        newAccepted=(mTouchHistoryLastAccepted[id] + newAccepted) / 2;
      }
      mTouchHistoryLastAccepted[id]=newAccepted;
      mTouchHistoryDirection[id]=0;
      mTouchHistoryLastAcceptedTime[id]=ev.getEventTime();
    }
  }
}
