{
  float[] sample=new float[sampleSize * sampleSize];
  Arrays.fill(sample,0);
  RectF rect=gesture.getBoundingBox();
  float sx=sampleSize / rect.width();
  float sy=sampleSize / rect.height();
  float scale=sx < sy ? sx : sy;
  android.graphics.Matrix trans=new android.graphics.Matrix();
  trans.setScale(scale,scale);
  android.graphics.Matrix translate1=new android.graphics.Matrix();
  translate1.setTranslate(-rect.centerX(),-rect.centerY());
  trans.preConcat(translate1);
  android.graphics.Matrix translate2=new android.graphics.Matrix();
  translate2.setTranslate(sampleSize / 2,sampleSize / 2);
  trans.postConcat(translate2);
  ArrayList<GestureStroke> strokes=gesture.getStrokes();
  int count=strokes.size();
  int size;
  for (int index=0; index < count; index++) {
    GestureStroke stroke=strokes.get(index);
    float[] pts=sequentialFeaturize(stroke,SEQUENCE_SAMPLE_SIZE);
    trans.mapPoints(pts);
    size=pts.length;
    for (int i=0; i < size; i+=2) {
      float x=pts[i];
      int xFloor=(int)Math.floor(x);
      int xCeiling=(int)Math.ceil(x);
      float y=pts[i + 1];
      int yFloor=(int)Math.floor(y);
      int yCeiling=(int)Math.ceil(y);
      if (yFloor >= 0 && yFloor < sampleSize && xFloor >= 0 && xFloor < sampleSize) {
        int pos=yFloor * sampleSize + xFloor;
        float value=(1 - x + xFloor) * (1 - y + yFloor);
        if (sample[pos] < value) {
          sample[pos]=value;
        }
      }
      if (yFloor >= 0 && yFloor < sampleSize && xCeiling >= 0 && xCeiling < sampleSize) {
        int pos=yFloor * sampleSize + xCeiling;
        float value=(1 - xCeiling + x) * (1 - y + yFloor);
        if (sample[pos] < value) {
          sample[pos]=value;
        }
      }
      if (yCeiling >= 0 && yCeiling < sampleSize && xFloor >= 0 && xFloor < sampleSize) {
        int pos=yCeiling * sampleSize + xFloor;
        float value=(1 - x + xFloor) * (1 - yCeiling + y);
        if (sample[pos] < value) {
          sample[pos]=value;
        }
      }
      if (yCeiling >= 0 && yCeiling < sampleSize && xCeiling >= 0 && xCeiling < sampleSize) {
        int pos=yCeiling * sampleSize + xCeiling;
        float value=(1 - xCeiling + x) * (1 - yCeiling + y);
        if (sample[pos] < value) {
          sample[pos]=value;
        }
      }
    }
  }
  return sample;
}
