{
  super.setUp();
  mStorageDir=new File(getContext().getFilesDir(),"locksettings");
  mDb=getContext().getDatabasePath("locksettings.db");
  assertTrue(mStorageDir.exists() || mStorageDir.mkdirs());
  assertTrue(FileUtils.deleteContents(mStorageDir));
  assertTrue(!mDb.exists() || mDb.delete());
  final Context ctx=getContext();
  setContext(new ContextWrapper(ctx){
    @Override public Object getSystemService(    String name){
      if (USER_SERVICE.equals(name)) {
        return new UserManager(ctx,null){
          @Override public UserInfo getProfileParent(          int userHandle){
            if (userHandle == 2) {
              return new UserInfo(1,"name",0);
            }
            if (userHandle == 3) {
              return new UserInfo(0,"name",0);
            }
            return null;
          }
        }
;
      }
      return super.getSystemService(name);
    }
  }
);
  mStorage=new LockSettingsStorage(getContext(),new LockSettingsStorage.Callback(){
    @Override public void initialize(    SQLiteDatabase db){
      mStorage.writeKeyValue(db,"initializedKey","initialValue",0);
    }
  }
){
    @Override String getLockPatternFilename(    int userId){
      return new File(mStorageDir,super.getLockPatternFilename(userId).replace('/','-')).getAbsolutePath();
    }
    @Override String getLockPasswordFilename(    int userId){
      return new File(mStorageDir,super.getLockPasswordFilename(userId).replace('/','-')).getAbsolutePath();
    }
    @Override String getChildProfileLockFile(    int userId){
      return new File(mStorageDir,super.getChildProfileLockFile(userId).replace('/','-')).getAbsolutePath();
    }
  }
;
}
