{
  final CountDownLatch latch=new CountDownLatch(1);
  List<Thread> threads=new ArrayList<>();
  for (int i=0; i < 100; i++) {
    final int threadId=i;
    threads.add(new Thread(){
      @Override public void run(){
        try {
          latch.await();
        }
 catch (        InterruptedException e) {
          return;
        }
        if (threadId == 50) {
          mStorage.writeKeyValue("starvedWriterKey","value",0);
        }
 else {
          mStorage.readKeyValue("starvedWriterKey","default",0);
        }
      }
    }
);
    threads.get(i).start();
  }
  latch.countDown();
  for (int i=0; i < threads.size(); i++) {
    try {
      threads.get(i).join();
    }
 catch (    InterruptedException e) {
    }
  }
  String cached=mStorage.readKeyValue("key","default",0);
  mStorage.clearCache();
  String storage=mStorage.readKeyValue("key","default",0);
  assertEquals("Cached value didn't match stored value",storage,cached);
}
