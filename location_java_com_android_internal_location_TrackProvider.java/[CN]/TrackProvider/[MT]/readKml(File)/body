{
  FileReader kmlReader=null;
  try {
    kmlReader=new FileReader(kmlFile);
    XmlPullParserFactory factory=XmlPullParserFactory.newInstance();
    XmlPullParser xpp=factory.newPullParser();
    xpp.setInput(kmlReader);
    boolean inCoordinates=false;
    StringBuilder sb=new StringBuilder();
    int eventType=xpp.getEventType();
    do {
      if (eventType == XmlPullParser.START_DOCUMENT) {
      }
 else       if (eventType == XmlPullParser.END_DOCUMENT) {
      }
 else       if (eventType == XmlPullParser.START_TAG) {
        String startTagName=xpp.getName();
        if (startTagName.equals("coordinates")) {
          inCoordinates=true;
        }
      }
 else       if (eventType == XmlPullParser.END_TAG) {
        String endTagName=xpp.getName();
        if (endTagName.equals("coordinates")) {
          inCoordinates=false;
        }
      }
 else       if (eventType == XmlPullParser.TEXT) {
        if (inCoordinates) {
          sb.append(xpp.getText());
          sb.append(' ');
        }
      }
      eventType=xpp.next();
    }
 while (eventType != XmlPullParser.END_DOCUMENT);
    String coordinates=sb.toString();
    Location loc=null;
    double KM_PER_HOUR=mTrackSpeed;
    double KM_PER_METER=1.0 / 1000.0;
    double MILLIS_PER_HOUR=60.0 * 60.0 * 1000.0;
    double MILLIS_PER_METER=(1.0 / KM_PER_HOUR) * (KM_PER_METER) * (MILLIS_PER_HOUR);
    long time=0L;
    StringTokenizer st=new StringTokenizer(coordinates,", ");
    while (st.hasMoreTokens()) {
      try {
        String lon=st.nextToken();
        String lat=st.nextToken();
        String alt=st.nextToken();
        if (Config.LOGD) {
          Log.d(LOG_TAG,"lon=" + lon + ", lat="+ lat+ ", alt="+ alt);
        }
        double nLongitude=Double.parseDouble(lon);
        double nLatitude=Double.parseDouble(lat);
        double nAltitude=Double.parseDouble(alt);
        Location nLoc=new Location(getName());
        nLoc.setLatitude(nLatitude);
        nLoc.setLongitude(nLongitude);
        if (loc != null) {
          double distance=loc.distanceTo(nLoc);
          if (Config.LOGD) {
            Log.d(LOG_TAG,"distance = " + distance);
          }
          time+=(long)(distance * MILLIS_PER_METER);
        }
        Waypoint w=new Waypoint(getName(),time,nLatitude,nLongitude,nAltitude);
        if (supportsSpeed()) {
          w.setSpeed(mTrackSpeed);
        }
        if (supportsBearing()) {
          w.setBearing(0.0f);
        }
        mWaypoints.add(w);
        if (mInitialLocation == null) {
          mInitialLocation=w.getLocation();
        }
        loc=nLoc;
      }
 catch (      NumberFormatException nfe) {
        Log.e(LOG_TAG,"Got NumberFormatException reading KML data: " + nfe,nfe);
      }
    }
    setTimes();
    return;
  }
 catch (  IOException ioe) {
    mWaypoints.clear();
    Log.e(LOG_TAG,"Exception reading KML data: " + ioe,ioe);
  }
catch (  XmlPullParserException xppe) {
    mWaypoints.clear();
    Log.e(LOG_TAG,"Exception reading KML data: " + xppe,xppe);
  }
 finally {
    close(kmlReader);
  }
}
