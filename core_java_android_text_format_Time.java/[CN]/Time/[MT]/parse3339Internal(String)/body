{
  int len=s.length();
  if (len < 10) {
    throw new TimeFormatException("String too short --- expected at least 10 characters.");
  }
  boolean inUtc=false;
  int n=getChar(s,0,1000);
  n+=getChar(s,1,100);
  n+=getChar(s,2,10);
  n+=getChar(s,3,1);
  year=n;
  checkChar(s,4,'-');
  n=getChar(s,5,10);
  n+=getChar(s,6,1);
  --n;
  month=n;
  checkChar(s,7,'-');
  n=getChar(s,8,10);
  n+=getChar(s,9,1);
  monthDay=n;
  if (len >= 19) {
    checkChar(s,10,'T');
    allDay=false;
    n=getChar(s,11,10);
    n+=getChar(s,12,1);
    int hour=n;
    checkChar(s,13,':');
    n=getChar(s,14,10);
    n+=getChar(s,15,1);
    int minute=n;
    checkChar(s,16,':');
    n=getChar(s,17,10);
    n+=getChar(s,18,1);
    second=n;
    int tzIndex=19;
    if (tzIndex < len && s.charAt(tzIndex) == '.') {
      do {
        tzIndex++;
      }
 while (tzIndex < len && Character.isDigit(s.charAt(tzIndex)));
    }
    int offset=0;
    if (len > tzIndex) {
      char c=s.charAt(tzIndex);
switch (c) {
case 'Z':
        offset=0;
      break;
case '-':
    offset=1;
  break;
case '+':
offset=-1;
break;
default :
throw new TimeFormatException(String.format("Unexpected character 0x%02d at position %d.  Expected + or -",(int)c,tzIndex));
}
inUtc=true;
if (offset != 0) {
if (len < tzIndex + 6) {
throw new TimeFormatException(String.format("Unexpected length; should be %d characters",tzIndex + 6));
}
n=getChar(s,tzIndex + 1,10);
n+=getChar(s,tzIndex + 2,1);
n*=offset;
hour+=n;
n=getChar(s,tzIndex + 4,10);
n+=getChar(s,tzIndex + 5,1);
n*=offset;
minute+=n;
}
}
this.hour=hour;
this.minute=minute;
if (offset != 0) {
normalize(false);
}
}
 else {
allDay=true;
this.hour=0;
this.minute=0;
this.second=0;
}
this.weekDay=0;
this.yearDay=0;
this.isDst=-1;
this.gmtoff=0;
return inUtc;
}
