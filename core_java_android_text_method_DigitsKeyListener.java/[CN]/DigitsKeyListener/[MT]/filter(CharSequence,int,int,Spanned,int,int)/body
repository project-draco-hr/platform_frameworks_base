{
  CharSequence out=super.filter(source,start,end,dest,dstart,dend);
  if (mSign == false && mDecimal == false) {
    return out;
  }
  if (out != null) {
    source=out;
    start=0;
    end=out.length();
  }
  int sign=-1;
  int decimal=-1;
  int dlen=dest.length();
  for (int i=0; i < dstart; i++) {
    char c=dest.charAt(i);
    if (c == '-') {
      sign=i;
    }
 else     if (c == '.') {
      decimal=i;
    }
  }
  for (int i=dend; i < dlen; i++) {
    char c=dest.charAt(i);
    if (c == '-') {
      return "";
    }
 else     if (c == '.') {
      decimal=i;
    }
  }
  SpannableStringBuilder stripped=null;
  for (int i=end - 1; i >= start; i--) {
    char c=source.charAt(i);
    boolean strip=false;
    if (c == '-') {
      if (i != start || dstart != 0) {
        strip=true;
      }
 else       if (sign >= 0) {
        strip=true;
      }
 else {
        sign=i;
      }
    }
 else     if (c == '.') {
      if (decimal >= 0) {
        strip=true;
      }
 else {
        decimal=i;
      }
    }
    if (strip) {
      if (end == start + 1) {
        return "";
      }
      if (stripped == null) {
        stripped=new SpannableStringBuilder(source,start,end);
      }
      stripped.delete(i - start,i + 1 - start);
    }
  }
  if (stripped != null) {
    return stripped;
  }
 else   if (out != null) {
    return out;
  }
 else {
    return null;
  }
}
