{
  String argument=mTokenizer.nextArg();
  if (TextUtils.isEmpty(argument)) {
    throw new IllegalArgumentException("Binding not well formed: " + argument);
  }
  final int firstColonIndex=argument.indexOf(COLON);
  if (firstColonIndex < 0) {
    throw new IllegalArgumentException("Binding not well formed: " + argument);
  }
  final int secondColonIndex=argument.indexOf(COLON,firstColonIndex + 1);
  if (secondColonIndex < 0) {
    throw new IllegalArgumentException("Binding not well formed: " + argument);
  }
  String column=argument.substring(0,firstColonIndex);
  String type=argument.substring(firstColonIndex + 1,secondColonIndex);
  String value=argument.substring(secondColonIndex + 1);
  if (TYPE_STRING.equals(type)) {
    values.put(column,value);
  }
 else   if (TYPE_BOOLEAN.equalsIgnoreCase(type)) {
    values.put(column,Boolean.parseBoolean(value));
  }
 else   if (TYPE_INTEGER.equalsIgnoreCase(type) || TYPE_LONG.equalsIgnoreCase(type)) {
    values.put(column,Long.parseLong(value));
  }
 else   if (TYPE_FLOAT.equalsIgnoreCase(type) || TYPE_DOUBLE.equalsIgnoreCase(type)) {
    values.put(column,Double.parseDouble(value));
  }
 else {
    throw new IllegalArgumentException("Unsupported type: " + type);
  }
}
