{
  final CharSequence content=mTextView.getText();
  if (content != null) {
    if (partialStartOffset != EXTRACT_NOTHING) {
      final int N=content.length();
      if (partialStartOffset < 0) {
        outText.partialStartOffset=outText.partialEndOffset=-1;
        partialStartOffset=0;
        partialEndOffset=N;
      }
 else {
        partialEndOffset+=delta;
        if (content instanceof Spanned) {
          Spanned spanned=(Spanned)content;
          Object[] spans=spanned.getSpans(partialStartOffset,partialEndOffset,ParcelableSpan.class);
          int i=spans.length;
          while (i > 0) {
            i--;
            int j=spanned.getSpanStart(spans[i]);
            if (j < partialStartOffset)             partialStartOffset=j;
            j=spanned.getSpanEnd(spans[i]);
            if (j > partialEndOffset)             partialEndOffset=j;
          }
        }
        outText.partialStartOffset=partialStartOffset;
        outText.partialEndOffset=partialEndOffset - delta;
        if (partialStartOffset > N) {
          partialStartOffset=N;
        }
 else         if (partialStartOffset < 0) {
          partialStartOffset=0;
        }
        if (partialEndOffset > N) {
          partialEndOffset=N;
        }
 else         if (partialEndOffset < 0) {
          partialEndOffset=0;
        }
      }
      if ((request.flags & InputConnection.GET_TEXT_WITH_STYLES) != 0) {
        outText.text=content.subSequence(partialStartOffset,partialEndOffset);
      }
 else {
        outText.text=TextUtils.substring(content,partialStartOffset,partialEndOffset);
      }
    }
 else {
      outText.partialStartOffset=0;
      outText.partialEndOffset=0;
      outText.text="";
    }
    outText.flags=0;
    if (MetaKeyKeyListener.getMetaState(content,MetaKeyKeyListener.META_SELECTING) != 0) {
      outText.flags|=ExtractedText.FLAG_SELECTING;
    }
    if (mTextView.isSingleLine()) {
      outText.flags|=ExtractedText.FLAG_SINGLE_LINE;
    }
    outText.startOffset=0;
    outText.selectionStart=mTextView.getSelectionStart();
    outText.selectionEnd=mTextView.getSelectionEnd();
    return true;
  }
  return false;
}
