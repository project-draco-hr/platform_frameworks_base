{
  if (!mTextView.canSelectText()) {
    return false;
  }
  if (needsToSelectAllToSelectWordOrParagraph()) {
    return mTextView.selectAllText();
  }
  long lastTouchOffsets=getLastTouchOffsets();
  final int minOffset=TextUtils.unpackRangeStartFromLong(lastTouchOffsets);
  final int maxOffset=TextUtils.unpackRangeEndFromLong(lastTouchOffsets);
  if (minOffset < 0 || minOffset > mTextView.getText().length())   return false;
  if (maxOffset < 0 || maxOffset > mTextView.getText().length())   return false;
  int selectionStart, selectionEnd;
  URLSpan[] urlSpans=((Spanned)mTextView.getText()).getSpans(minOffset,maxOffset,URLSpan.class);
  if (urlSpans.length >= 1) {
    URLSpan urlSpan=urlSpans[0];
    selectionStart=((Spanned)mTextView.getText()).getSpanStart(urlSpan);
    selectionEnd=((Spanned)mTextView.getText()).getSpanEnd(urlSpan);
  }
 else {
    final WordIterator wordIterator=getWordIterator();
    wordIterator.setCharSequence(mTextView.getText(),minOffset,maxOffset);
    selectionStart=wordIterator.getBeginning(minOffset);
    selectionEnd=wordIterator.getEnd(maxOffset);
    if (selectionStart == BreakIterator.DONE || selectionEnd == BreakIterator.DONE || selectionStart == selectionEnd) {
      long range=getCharClusterRange(minOffset);
      selectionStart=TextUtils.unpackRangeStartFromLong(range);
      selectionEnd=TextUtils.unpackRangeEndFromLong(range);
    }
  }
  Selection.setSelection((Spannable)mTextView.getText(),selectionStart,selectionEnd);
  return selectionEnd > selectionStart;
}
