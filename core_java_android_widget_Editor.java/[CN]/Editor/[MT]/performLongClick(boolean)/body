{
  if (!handled && !isPositionOnText(mLastDownPositionX,mLastDownPositionY) && mInsertionControllerEnabled) {
    final int offset=mTextView.getOffsetForPosition(mLastDownPositionX,mLastDownPositionY);
    stopTextActionMode();
    Selection.setSelection((Spannable)mTextView.getText(),offset);
    getInsertionController().show();
    startInsertionActionMode();
    handled=true;
  }
  if (!handled && mTextActionMode != null) {
    if (touchPositionIsInSelection()) {
      final int start=mTextView.getSelectionStart();
      final int end=mTextView.getSelectionEnd();
      CharSequence selectedText=mTextView.getTransformedText(start,end);
      ClipData data=ClipData.newPlainText(null,selectedText);
      DragLocalState localState=new DragLocalState(mTextView,start,end);
      mTextView.startDrag(data,getTextThumbnailBuilder(selectedText),localState,View.DRAG_FLAG_GLOBAL);
      stopTextActionMode();
    }
 else {
      stopTextActionMode();
      selectCurrentWordAndStartDrag();
    }
    handled=true;
  }
  if (!handled) {
    handled=selectCurrentWordAndStartDrag();
  }
  return handled;
}
