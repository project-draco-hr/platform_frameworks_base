{
  if (!view.equals(mTextView) || mTextView.getLayout() == null) {
    super.onGetContentRect(mode,view,outRect);
    return;
  }
  if (mTextView.getSelectionStart() != mTextView.getSelectionEnd()) {
    mSelectionPath.reset();
    mTextView.getLayout().getSelectionPath(mTextView.getSelectionStart(),mTextView.getSelectionEnd(),mSelectionPath);
    mSelectionPath.computeBounds(mSelectionBounds,true);
    mSelectionBounds.bottom+=mHandleHeight;
  }
 else   if (mCursorCount == 2) {
    Rect firstCursorBounds=mCursorDrawable[0].getBounds();
    Rect secondCursorBounds=mCursorDrawable[1].getBounds();
    mSelectionBounds.set(Math.min(firstCursorBounds.left,secondCursorBounds.left),Math.min(firstCursorBounds.top,secondCursorBounds.top),Math.max(firstCursorBounds.right,secondCursorBounds.right),Math.max(firstCursorBounds.bottom,secondCursorBounds.bottom) + mHandleHeight);
  }
 else {
    Layout layout=mTextView.getLayout();
    int line=layout.getLineForOffset(mTextView.getSelectionStart());
    float primaryHorizontal=clampHorizontalPosition(null,layout.getPrimaryHorizontal(mTextView.getSelectionStart()));
    mSelectionBounds.set(primaryHorizontal,layout.getLineTop(line),primaryHorizontal,layout.getLineTop(line + 1) + mHandleHeight);
  }
  int textHorizontalOffset=mTextView.viewportToContentHorizontalOffset();
  int textVerticalOffset=mTextView.viewportToContentVerticalOffset();
  outRect.set((int)Math.floor(mSelectionBounds.left + textHorizontalOffset),(int)Math.floor(mSelectionBounds.top + textVerticalOffset),(int)Math.ceil(mSelectionBounds.right + textHorizontalOffset),(int)Math.ceil(mSelectionBounds.bottom + textVerticalOffset));
}
