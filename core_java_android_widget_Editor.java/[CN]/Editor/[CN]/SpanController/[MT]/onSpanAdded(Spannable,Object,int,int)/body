{
  if (isNonIntermediateSelectionSpan(text,span)) {
    sendUpdateSelection();
  }
 else   if (span instanceof EasyEditSpan) {
    if (mPopupWindow == null) {
      mPopupWindow=new EasyEditPopupWindow();
      mHidePopup=new Runnable(){
        @Override public void run(){
          hide();
        }
      }
;
    }
    if (mPopupWindow.mEasyEditSpan != null) {
      mPopupWindow.mEasyEditSpan.setDeleteEnabled(false);
    }
    mPopupWindow.setEasyEditSpan((EasyEditSpan)span);
    mPopupWindow.setOnDeleteListener(new EasyEditDeleteListener(){
      @Override public void onDeleteClick(      EasyEditSpan span){
        Editable editable=(Editable)mTextView.getText();
        int start=editable.getSpanStart(span);
        int end=editable.getSpanEnd(span);
        if (start >= 0 && end >= 0) {
          sendEasySpanNotification(EasyEditSpan.TEXT_DELETED,span);
          mTextView.deleteText_internal(start,end);
        }
        editable.removeSpan(span);
      }
    }
);
    if (mTextView.getWindowVisibility() != View.VISIBLE) {
      return;
    }
    if (mTextView.getLayout() == null) {
      return;
    }
    if (extractedTextModeWillBeStarted()) {
      return;
    }
    mPopupWindow.show();
    mTextView.removeCallbacks(mHidePopup);
    mTextView.postDelayed(mHidePopup,DISPLAY_TIMEOUT_MS);
  }
}
