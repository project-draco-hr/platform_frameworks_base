{
  if (mHaventMovedEnoughToStartDrag) {
    return;
  }
  final boolean isMouse=event.isFromSource(InputDevice.SOURCE_MOUSE);
  final ViewConfiguration viewConfig=ViewConfiguration.get(mTextView.getContext());
  final float eventX=event.getX();
  final float eventY=event.getY();
  final int currLine;
  if (isMouse) {
    currLine=mTextView.getLineAtCoordinate(eventY);
  }
 else {
    float y=eventY;
    if (mSwitchedLines) {
      final int touchSlop=viewConfig.getScaledTouchSlop();
      final float fingerOffset=(mStartHandle != null) ? mStartHandle.getIdealVerticalOffset() : touchSlop;
      y=eventY - fingerOffset;
    }
    currLine=getCurrentLineAdjustedForSlop(mTextView.getLayout(),mLineSelectionIsOn,y);
    if (!mSwitchedLines && currLine != mLineSelectionIsOn) {
      mSwitchedLines=true;
      return;
    }
  }
  int startOffset;
  int offset=mTextView.getOffsetAtCoordinate(currLine,eventX);
  if (mStartOffset < offset) {
    offset=getWordEnd(offset);
    startOffset=getWordStart(mStartOffset);
  }
 else {
    offset=getWordStart(offset);
    startOffset=getWordEnd(mStartOffset);
  }
  mLineSelectionIsOn=currLine;
  Selection.setSelection((Spannable)mTextView.getText(),startOffset,offset);
}
