{
  final int trueOffset=mTextView.getOffsetForPosition(x,y);
  final int currLine=mTextView.getLineAtCoordinate(y);
  if (isWhitespaceLine(mPrevLine,currLine,trueOffset))   return;
  int offset=trueOffset;
  boolean positionCursor=false;
  int end=getWordEnd(offset,true);
  int start=getWordStart(offset);
  if (offset > mPreviousOffset) {
    if (!mInWord || currLine > mPrevLine) {
      int midPoint=Math.min((end - start) / 2,2);
      if (offset >= start + midPoint || currLine > mPrevLine) {
        offset=end;
      }
 else {
        offset=mPreviousOffset;
      }
    }
    mTouchWordOffset=Math.max(offset - trueOffset,0);
    mInWord=!isEndBoundary(offset);
    positionCursor=true;
  }
 else   if (offset + mTouchWordOffset < mPreviousOffset) {
    if (currLine < mPrevLine) {
      offset=start;
    }
    offset+=mTouchWordOffset;
    positionCursor=true;
    mInWord=!isStartBoundary(offset);
  }
  if (positionCursor) {
    final int selectionStart=mTextView.getSelectionStart();
    if (offset <= selectionStart) {
      int alteredOffset=mTextView.getOffsetAtCoordinate(mPrevLine,x);
      int length=mTextView.getText().length();
      if (alteredOffset <= selectionStart) {
        offset=getNextCursorOffset(selectionStart,true);
      }
 else {
        offset=Math.min(alteredOffset,length);
      }
    }
    positionAtCursorOffset(offset,false);
  }
}
