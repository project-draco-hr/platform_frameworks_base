{
  if (DEBUG_UNDO) {
    Log.d(TAG,"filter: source=" + source + " ("+ start+ "-"+ end+ ")");
    Log.d(TAG,"filter: dest=" + dest + " ("+ dstart+ "-"+ dend+ ")");
  }
  final UndoManager um=mEditor.mUndoManager;
  if (um.isInUndo()) {
    if (DEBUG_UNDO)     Log.d(TAG,"*** skipping, currently performing undo/redo");
    return null;
  }
  um.beginUpdate("Edit text");
  TextModifyOperation op=um.getLastOperation(TextModifyOperation.class,mEditor.mUndoOwner,UndoManager.MERGE_MODE_UNIQUE);
  if (op != null) {
    if (DEBUG_UNDO)     Log.d(TAG,"Last op: range=(" + op.mRangeStart + "-"+ op.mRangeEnd+ "), oldText="+ op.mOldText);
    if (op.mOldText == null) {
      if (start < end && ((dstart >= op.mRangeStart && dend <= op.mRangeEnd) || (dstart == op.mRangeEnd && dend == op.mRangeEnd))) {
        op.mRangeEnd=dstart + (end - start);
        um.endUpdate();
        if (DEBUG_UNDO)         Log.d(TAG,"*** merging with last op, mRangeEnd=" + op.mRangeEnd);
        return null;
      }
    }
 else {
      if (start == end && dend == op.mRangeStart - 1) {
        SpannableStringBuilder str;
        if (op.mOldText instanceof SpannableString) {
          str=(SpannableStringBuilder)op.mOldText;
        }
 else {
          str=new SpannableStringBuilder(op.mOldText);
        }
        str.insert(0,dest,dstart,dend);
        op.mRangeStart=dstart;
        op.mOldText=str;
        um.endUpdate();
        if (DEBUG_UNDO)         Log.d(TAG,"*** merging with last op, range=(" + op.mRangeStart + "-"+ op.mRangeEnd+ "), oldText="+ op.mOldText);
        return null;
      }
    }
    um.commitState(null);
    um.setUndoLabel("Edit text");
  }
  op=new TextModifyOperation(mEditor.mUndoOwner);
  op.mRangeStart=dstart;
  if (start < end) {
    op.mRangeEnd=dstart + (end - start);
  }
 else {
    op.mRangeEnd=dstart;
  }
  if (dstart < dend) {
    op.mOldText=dest.subSequence(dstart,dend);
  }
  if (DEBUG_UNDO)   Log.d(TAG,"*** adding new op, range=(" + op.mRangeStart + "-"+ op.mRangeEnd+ "), oldText="+ op.mOldText);
  um.addOperation(op,UndoManager.MERGE_MODE_NONE);
  um.endUpdate();
  return null;
}
