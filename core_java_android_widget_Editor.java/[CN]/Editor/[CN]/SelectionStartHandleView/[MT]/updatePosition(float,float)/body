{
  final int trueOffset=mTextView.getOffsetForPosition(x,y);
  final int currLine=mTextView.getLineAtCoordinate(y);
  boolean positionCursor=false;
  int offset=trueOffset;
  int end=getWordEnd(offset);
  int start=getWordStart(offset);
  if (offset < mPreviousOffset) {
    if (!mInWord || currLine < mPrevLine) {
      int offsetToWord=Math.min((end - start) / 2,2);
      if (offset <= end - offsetToWord || currLine < mPrevLine) {
        offset=start;
      }
 else {
        offset=mPreviousOffset;
      }
    }
    final Layout layout=mTextView.getLayout();
    if (layout != null && offset < trueOffset) {
      final float adjustedX=layout.getPrimaryHorizontal(offset);
      mTouchWordDelta=mTextView.convertToLocalHorizontalCoordinate(x) - adjustedX;
    }
 else {
      mTouchWordDelta=0.0f;
    }
    positionCursor=true;
  }
 else {
    final int adjustedOffset=mTextView.getOffsetAtCoordinate(currLine,x - mTouchWordDelta);
    if (adjustedOffset > mPreviousOffset || currLine > mPrevLine) {
      if (currLine > mPrevLine) {
        offset=start;
        final Layout layout=mTextView.getLayout();
        if (layout != null && offset < trueOffset) {
          final float adjustedX=layout.getPrimaryHorizontal(offset);
          mTouchWordDelta=mTextView.convertToLocalHorizontalCoordinate(x) - adjustedX;
        }
 else {
          mTouchWordDelta=0.0f;
        }
      }
 else {
        offset=adjustedOffset;
      }
      positionCursor=true;
    }
  }
  if (positionCursor) {
    final int selectionEnd=mTextView.getSelectionEnd();
    if (offset >= selectionEnd) {
      int alteredOffset=mTextView.getOffsetAtCoordinate(mPrevLine,x);
      if (alteredOffset >= selectionEnd) {
        offset=getNextCursorOffset(selectionEnd,false);
      }
 else {
        offset=alteredOffset;
      }
      mTouchWordDelta=0.0f;
    }
    mInWord=!getWordIteratorWithText().isBoundary(offset);
    positionAtCursorOffset(offset,false);
  }
}
