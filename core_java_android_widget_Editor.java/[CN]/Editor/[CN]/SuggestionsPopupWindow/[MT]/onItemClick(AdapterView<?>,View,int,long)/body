{
  Editable editable=(Editable)mTextView.getText();
  SuggestionInfo suggestionInfo=mSuggestionInfos[position];
  final int spanStart=editable.getSpanStart(suggestionInfo.suggestionSpan);
  final int spanEnd=editable.getSpanEnd(suggestionInfo.suggestionSpan);
  if (spanStart < 0 || spanEnd <= spanStart) {
    hideWithCleanUp();
    return;
  }
  final String originalText=TextUtils.substring(editable,spanStart,spanEnd);
  final SuggestionSpan[] suggestionSpans=editable.getSpans(spanStart,spanEnd,SuggestionSpan.class);
  final int length=suggestionSpans.length;
  final int[] suggestionSpansStarts=new int[length];
  final int[] suggestionSpansEnds=new int[length];
  final int[] suggestionSpansFlags=new int[length];
  for (int i=0; i < length; i++) {
    final SuggestionSpan suggestionSpan=suggestionSpans[i];
    suggestionSpansStarts[i]=editable.getSpanStart(suggestionSpan);
    suggestionSpansEnds[i]=editable.getSpanEnd(suggestionSpan);
    suggestionSpansFlags[i]=editable.getSpanFlags(suggestionSpan);
    int suggestionSpanFlags=suggestionSpan.getFlags();
    if ((suggestionSpanFlags & SuggestionSpan.FLAG_MISSPELLED) > 0) {
      suggestionSpanFlags&=~SuggestionSpan.FLAG_MISSPELLED;
      suggestionSpanFlags&=~SuggestionSpan.FLAG_EASY_CORRECT;
      suggestionSpan.setFlags(suggestionSpanFlags);
    }
  }
  final int suggestionStart=suggestionInfo.suggestionStart;
  final int suggestionEnd=suggestionInfo.suggestionEnd;
  final String suggestion=suggestionInfo.text.subSequence(suggestionStart,suggestionEnd).toString();
  mTextView.replaceText_internal(spanStart,spanEnd,suggestion);
  suggestionInfo.suggestionSpan.notifySelection(mTextView.getContext(),originalText,suggestionInfo.suggestionIndex);
  final String[] suggestions=suggestionInfo.suggestionSpan.getSuggestions();
  suggestions[suggestionInfo.suggestionIndex]=originalText;
  final int lengthDifference=suggestion.length() - (spanEnd - spanStart);
  for (int i=0; i < length; i++) {
    if (suggestionSpansStarts[i] <= spanStart && suggestionSpansEnds[i] >= spanEnd) {
      mTextView.setSpan_internal(suggestionSpans[i],suggestionSpansStarts[i],suggestionSpansEnds[i] + lengthDifference,suggestionSpansFlags[i]);
    }
  }
  final int newCursorPosition=spanEnd + lengthDifference;
  mTextView.setCursorPosition_internal(newCursorPosition,newCursorPosition);
  hideWithCleanUp();
}
