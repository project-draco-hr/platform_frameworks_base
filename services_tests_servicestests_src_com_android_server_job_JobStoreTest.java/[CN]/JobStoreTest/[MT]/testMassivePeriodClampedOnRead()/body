{
  final long TEN_SECONDS=10000L;
  JobInfo.Builder b=new Builder(8,mComponent).setPeriodic(TEN_SECONDS).setPersisted(true);
  final long invalidLateRuntimeElapsedMillis=SystemClock.elapsedRealtime() + (TEN_SECONDS * 2) + 5000;
  final long invalidEarlyRuntimeElapsedMillis=invalidLateRuntimeElapsedMillis - TEN_SECONDS;
  final JobStatus js=new JobStatus(b.build(),SOME_UID,invalidEarlyRuntimeElapsedMillis,invalidLateRuntimeElapsedMillis);
  mTaskStoreUnderTest.add(js);
  Thread.sleep(IO_WAIT);
  final ArraySet<JobStatus> jobStatusSet=new ArraySet<JobStatus>();
  mTaskStoreUnderTest.readJobMapFromDisk(jobStatusSet);
  assertEquals("Incorrect # of persisted tasks.",1,jobStatusSet.size());
  JobStatus loaded=jobStatusSet.iterator().next();
  final long newNowElapsed=SystemClock.elapsedRealtime();
  assertTrue("Early runtime wasn't correctly clamped.",loaded.getEarliestRunTime() <= newNowElapsed + TEN_SECONDS);
  assertTrue("Early runtime wasn't correctly clamped.",loaded.getEarliestRunTime() <= newNowElapsed + TEN_SECONDS * 2);
}
