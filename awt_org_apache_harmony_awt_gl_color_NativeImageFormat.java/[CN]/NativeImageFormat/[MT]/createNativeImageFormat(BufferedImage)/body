{
  NativeImageFormat fmt=new NativeImageFormat();
switch (bi.getType()) {
case BufferedImage.TYPE_INT_RGB:
{
      fmt.cmmFormat=INT_RGB_LCMS_FMT;
      break;
    }
case BufferedImage.TYPE_INT_ARGB:
case BufferedImage.TYPE_INT_ARGB_PRE:
{
    fmt.cmmFormat=INT_ARGB_LCMS_FMT;
    fmt.alphaOffset=3;
    break;
  }
case BufferedImage.TYPE_INT_BGR:
{
  fmt.cmmFormat=INT_BGR_LCMS_FMT;
  break;
}
case BufferedImage.TYPE_3BYTE_BGR:
{
fmt.cmmFormat=THREE_BYTE_BGR_LCMS_FMT;
break;
}
case BufferedImage.TYPE_4BYTE_ABGR_PRE:
case BufferedImage.TYPE_4BYTE_ABGR:
{
fmt.cmmFormat=FOUR_BYTE_ABGR_LCMS_FMT;
fmt.alphaOffset=0;
break;
}
case BufferedImage.TYPE_BYTE_GRAY:
{
fmt.cmmFormat=BYTE_GRAY_LCMS_FMT;
break;
}
case BufferedImage.TYPE_USHORT_GRAY:
{
fmt.cmmFormat=USHORT_GRAY_LCMS_FMT;
break;
}
case BufferedImage.TYPE_BYTE_BINARY:
case BufferedImage.TYPE_USHORT_565_RGB:
case BufferedImage.TYPE_USHORT_555_RGB:
case BufferedImage.TYPE_BYTE_INDEXED:
{
return null;
}
default :
break;
}
if (fmt.cmmFormat == 0) {
ColorModel cm=bi.getColorModel();
SampleModel sm=bi.getSampleModel();
if (sm instanceof ComponentSampleModel) {
ComponentSampleModel csm=(ComponentSampleModel)sm;
fmt.cmmFormat=getFormatFromComponentModel(csm,cm.hasAlpha());
fmt.scanlineStride=calculateScanlineStrideCSM(csm,bi.getRaster());
}
 else if (sm instanceof SinglePixelPackedSampleModel) {
SinglePixelPackedSampleModel sppsm=(SinglePixelPackedSampleModel)sm;
fmt.cmmFormat=getFormatFromSPPSampleModel(sppsm,cm.hasAlpha());
fmt.scanlineStride=calculateScanlineStrideSPPSM(sppsm,bi.getRaster());
}
if (cm.hasAlpha()) fmt.alphaOffset=calculateAlphaOffset(sm,bi.getRaster());
}
if (fmt.cmmFormat == 0) return null;
if (!fmt.setImageData(bi.getRaster().getDataBuffer())) {
return null;
}
fmt.rows=bi.getHeight();
fmt.cols=bi.getWidth();
fmt.dataOffset=bi.getRaster().getDataBuffer().getOffset();
return fmt;
}
