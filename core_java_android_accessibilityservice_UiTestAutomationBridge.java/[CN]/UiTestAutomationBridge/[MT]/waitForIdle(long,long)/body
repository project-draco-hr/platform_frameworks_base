{
  final long startTimeMillis=SystemClock.uptimeMillis();
  long lastEventTime=(mLastEvent != null) ? mLastEvent.getEventTime() : SystemClock.uptimeMillis();
synchronized (mLock) {
    while (true) {
      final long currentTimeMillis=SystemClock.uptimeMillis();
      final long sinceLastEventTimeMillis=currentTimeMillis - lastEventTime;
      if (sinceLastEventTimeMillis > idleTimeout) {
        return;
      }
      if (mLastEvent != null) {
        lastEventTime=mLastEvent.getEventTime();
      }
      final long elapsedTimeMillis=SystemClock.uptimeMillis() - startTimeMillis;
      final long remainingTimeMillis=globalTimeout - elapsedTimeMillis;
      if (remainingTimeMillis <= 0) {
        return;
      }
      try {
        mLock.wait(idleTimeout);
      }
 catch (      InterruptedException e) {
      }
    }
  }
}
