{
  int skipped=0;
  final int[] maxWidths=mMaxWidths;
  final int length=maxWidths.length;
  final int count=allColumns ? length : columns.size();
  final int totalExtraSpace=size - totalWidth;
  int extraSpace=totalExtraSpace / count;
  if (!allColumns) {
    for (int i=0; i < count; i++) {
      int column=columns.keyAt(i);
      if (columns.valueAt(i)) {
        if (column < length) {
          maxWidths[column]+=extraSpace;
        }
 else {
          skipped++;
        }
      }
    }
  }
 else {
    for (int i=0; i < count; i++) {
      maxWidths[i]+=extraSpace;
    }
    return;
  }
  if (skipped > 0 && skipped < count) {
    extraSpace=skipped * extraSpace / (count - skipped);
    for (int i=0; i < count; i++) {
      int column=columns.keyAt(i);
      if (columns.valueAt(i) && column < length) {
        if (extraSpace > maxWidths[column]) {
          maxWidths[column]=0;
        }
 else {
          maxWidths[column]+=extraSpace;
        }
      }
    }
  }
}
