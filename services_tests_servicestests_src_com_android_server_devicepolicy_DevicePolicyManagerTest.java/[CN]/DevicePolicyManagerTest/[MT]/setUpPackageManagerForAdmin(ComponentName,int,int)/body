{
  final Intent resolveIntent=new Intent();
  resolveIntent.setComponent(admin);
  final List<ResolveInfo> realResolveInfo=mRealTestContext.getPackageManager().queryBroadcastReceivers(resolveIntent,PackageManager.GET_META_DATA);
  assertNotNull(realResolveInfo);
  assertEquals(1,realResolveInfo.size());
  realResolveInfo.set(0,DpmTestUtils.cloneParcelable(realResolveInfo.get(0)));
  realResolveInfo.get(0).activityInfo.applicationInfo.uid=packageUid;
  doReturn(realResolveInfo).when(mContext.packageManager).queryBroadcastReceivers(MockUtils.checkIntentComponent(admin),eq(PackageManager.GET_META_DATA | PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS),eq(UserHandle.getUserId(packageUid)));
  final ApplicationInfo ai=DpmTestUtils.cloneParcelable(mRealTestContext.getPackageManager().getApplicationInfo(admin1.getPackageName(),PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS));
  ai.enabledSetting=enabledSetting;
  ai.uid=packageUid;
  doReturn(ai).when(mContext.ipackageManager).getApplicationInfo(eq(admin1.getPackageName()),eq(PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS),eq(UserHandle.getUserId(packageUid)));
  final PackageInfo pi=DpmTestUtils.cloneParcelable(mRealTestContext.getPackageManager().getPackageInfo(admin1.getPackageName(),0));
  assertTrue(pi.applicationInfo.flags != 0);
  pi.applicationInfo.uid=packageUid;
  doReturn(pi).when(mContext.ipackageManager).getPackageInfo(eq(admin1.getPackageName()),eq(0),eq(UserHandle.getUserId(packageUid)));
}
