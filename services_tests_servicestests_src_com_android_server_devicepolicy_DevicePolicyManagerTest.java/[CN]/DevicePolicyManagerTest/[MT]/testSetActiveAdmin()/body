{
  final ComponentName admin=new ComponentName(mRealTestContext,DummyDeviceAdmin.class);
  mContext.callerPermissions.add(android.Manifest.permission.MANAGE_DEVICE_ADMINS);
  final Intent resolveIntent=new Intent();
  resolveIntent.setComponent(admin);
  final List<ResolveInfo> realResolveInfo=mRealTestContext.getPackageManager().queryBroadcastReceivers(resolveIntent,PackageManager.GET_META_DATA | PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS);
  assertNotNull(realResolveInfo);
  assertEquals(1,realResolveInfo.size());
  realResolveInfo.get(0).activityInfo.applicationInfo.uid=DpmMockContext.CALLER_UID;
  doReturn(realResolveInfo).when(mContext.packageManager).queryBroadcastReceivers(any(Intent.class),eq(PackageManager.GET_META_DATA | PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS),eq(DpmMockContext.CALLER_USER_HANDLE));
  dpm.setActiveAdmin(admin,false);
  final ArgumentCaptor<Intent> intentCap=ArgumentCaptor.forClass(Intent.class);
  final ArgumentCaptor<UserHandle> uhCap=ArgumentCaptor.forClass(UserHandle.class);
  verify(mContext.spiedContext,times(2)).sendBroadcastAsUser(intentCap.capture(),MockUtils.checkUserHandle(DpmMockContext.CALLER_USER_HANDLE));
  assertEquals(DevicePolicyManager.ACTION_DEVICE_POLICY_MANAGER_STATE_CHANGED,intentCap.getAllValues().get(0).getAction());
  assertEquals(DeviceAdminReceiver.ACTION_DEVICE_ADMIN_ENABLED,intentCap.getAllValues().get(1).getAction());
}
