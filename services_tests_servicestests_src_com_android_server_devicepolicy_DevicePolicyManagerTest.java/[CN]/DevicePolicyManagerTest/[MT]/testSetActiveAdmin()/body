{
  mContext.callerPermissions.add(android.Manifest.permission.MANAGE_DEVICE_ADMINS);
  dpm.setActiveAdmin(admin1,false);
  verify(mContext.spiedContext).sendBroadcastAsUser(MockUtils.checkIntentAction(DevicePolicyManager.ACTION_DEVICE_POLICY_MANAGER_STATE_CHANGED),MockUtils.checkUserHandle(DpmMockContext.CALLER_USER_HANDLE));
  verify(mContext.spiedContext).sendBroadcastAsUser(MockUtils.checkIntentAction(DeviceAdminReceiver.ACTION_DEVICE_ADMIN_ENABLED),MockUtils.checkUserHandle(DpmMockContext.CALLER_USER_HANDLE));
  verify(mContext.ipackageManager,times(1)).setApplicationEnabledSetting(eq(admin1.getPackageName()),eq(PackageManager.COMPONENT_ENABLED_STATE_DEFAULT),eq(PackageManager.DONT_KILL_APP),eq(DpmMockContext.CALLER_USER_HANDLE),anyString());
  assertTrue(dpm.isAdminActive(admin1));
  assertFalse(dpm.isAdminActive(admin2));
  assertFalse(dpm.isAdminActive(admin3));
  mContext.callerPermissions.add("android.permission.INTERACT_ACROSS_USERS_FULL");
  assertFalse(dpm.isAdminActiveAsUser(admin1,DpmMockContext.CALLER_USER_HANDLE + 1));
  assertFalse(dpm.isAdminActiveAsUser(admin2,DpmMockContext.CALLER_USER_HANDLE + 1));
  mContext.callerPermissions.remove("android.permission.INTERACT_ACROSS_USERS_FULL");
  setUpPackageManagerForAdmin(admin2,DpmMockContext.CALLER_UID,PackageManager.COMPONENT_ENABLED_STATE_ENABLED);
  dpm.setActiveAdmin(admin2,false);
  assertTrue(dpm.isAdminActive(admin1));
  assertTrue(dpm.isAdminActive(admin2));
  assertFalse(dpm.isAdminActive(admin3));
  verify(mContext.ipackageManager,times(1)).setApplicationEnabledSetting(eq(admin1.getPackageName()),eq(PackageManager.COMPONENT_ENABLED_STATE_DEFAULT),eq(PackageManager.DONT_KILL_APP),eq(DpmMockContext.CALLER_USER_HANDLE),anyString());
  try {
    dpm.setActiveAdmin(admin1,false);
    fail("Didn't throw");
  }
 catch (  IllegalArgumentException expected) {
  }
  dpm.setActiveAdmin(admin1,true);
  List<ComponentName> admins=dpm.getActiveAdmins();
  assertEquals(2,admins.size());
  assertEquals(admin1,admins.get(0));
  assertEquals(admin2,admins.get(1));
  mContext.callerPermissions.add("android.permission.INTERACT_ACROSS_USERS_FULL");
  assertEquals(0,DpmTestUtils.getListSizeAllowingNull(dpm.getActiveAdminsAsUser(DpmMockContext.CALLER_USER_HANDLE + 1)));
  mContext.callerPermissions.remove("android.permission.INTERACT_ACROSS_USERS_FULL");
}
