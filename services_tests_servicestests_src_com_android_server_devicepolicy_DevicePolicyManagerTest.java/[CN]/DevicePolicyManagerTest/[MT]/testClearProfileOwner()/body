{
  setAsProfileOwner(admin1);
  mContext.binder.callingUid=DpmMockContext.CALLER_UID;
  assertTrue(dpm.isProfileOwnerApp(admin1.getPackageName()));
  assertFalse(dpm.isRemovingAdmin(admin1,DpmMockContext.CALLER_USER_HANDLE));
  when(mContext.userManager.isUserUnlocked(anyInt())).thenReturn(false);
  try {
    dpm.clearProfileOwner(admin1);
    fail("Didn't throw IllegalStateException");
  }
 catch (  IllegalStateException expected) {
    MoreAsserts.assertContainsRegex("User must be running and unlocked",expected.getMessage());
  }
  when(mContext.userManager.isUserUnlocked(anyInt())).thenReturn(true);
  dpm.clearProfileOwner(admin1);
  assertFalse(dpm.isProfileOwnerApp(admin1.getPackageName()));
  assertTrue(dpm.isRemovingAdmin(admin1,DpmMockContext.CALLER_USER_HANDLE));
}
