{
  mContext.callerPermissions.add(permission.MANAGE_DEVICE_ADMINS);
  mContext.callerPermissions.add(permission.MANAGE_PROFILE_AND_DEVICE_OWNERS);
  mContext.callerPermissions.add(permission.INTERACT_ACROSS_USERS_FULL);
  mContext.binder.callingUid=DpmMockContext.CALLER_SYSTEM_USER_UID;
  assertFalse(dpm.isAffiliatedUser());
  setUpPackageManagerForAdmin(admin1,DpmMockContext.CALLER_SYSTEM_USER_UID);
  dpm.setActiveAdmin(admin1,false);
  assertTrue(dpm.setDeviceOwner(admin1,"owner-name"));
  assertTrue(dpm.isAffiliatedUser());
  mContext.binder.callingUid=DpmMockContext.CALLER_UID;
  setAsProfileOwner(admin2);
  assertFalse(dpm.isAffiliatedUser());
  final Set<String> userAffiliationIds=new ArraySet<>();
  userAffiliationIds.add("red");
  userAffiliationIds.add("green");
  userAffiliationIds.add("blue");
  dpm.setAffiliationIds(admin2,userAffiliationIds);
  assertFalse(dpm.isAffiliatedUser());
  final Set<String> deviceAffiliationIds=new ArraySet<>();
  deviceAffiliationIds.add("cyan");
  deviceAffiliationIds.add("yellow");
  deviceAffiliationIds.add("magenta");
  mContext.binder.callingUid=DpmMockContext.CALLER_SYSTEM_USER_UID;
  dpm.setAffiliationIds(admin1,deviceAffiliationIds);
  mContext.binder.callingUid=DpmMockContext.CALLER_UID;
  assertFalse(dpm.isAffiliatedUser());
  userAffiliationIds.add("yellow");
  dpm.setAffiliationIds(admin2,userAffiliationIds);
  assertTrue(dpm.isAffiliatedUser());
  dpm.clearProfileOwner(admin2);
  final ComponentName admin=new ComponentName("test","test");
  setUpPackageManagerForFakeAdmin(admin,DpmMockContext.CALLER_UID,PackageManager.COMPONENT_ENABLED_STATE_ENABLED,null,admin2);
  dpm.setActiveAdmin(admin,true,DpmMockContext.CALLER_USER_HANDLE);
  assertTrue(dpm.setProfileOwner(admin,"owner-name",DpmMockContext.CALLER_USER_HANDLE));
  assertFalse(dpm.isAffiliatedUser());
  mContext.binder.callingUid=DpmMockContext.CALLER_SYSTEM_USER_UID;
  assertTrue(dpm.isAffiliatedUser());
}
