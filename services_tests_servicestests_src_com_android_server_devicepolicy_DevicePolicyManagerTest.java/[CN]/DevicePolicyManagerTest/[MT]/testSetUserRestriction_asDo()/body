{
  mContext.callerPermissions.add(permission.MANAGE_DEVICE_ADMINS);
  mContext.callerPermissions.add(permission.MANAGE_PROFILE_AND_DEVICE_OWNERS);
  mContext.callerPermissions.add(permission.INTERACT_ACROSS_USERS_FULL);
  mContext.binder.callingUid=DpmMockContext.CALLER_SYSTEM_USER_UID;
  setUpPackageManagerForAdmin(admin1,DpmMockContext.CALLER_SYSTEM_USER_UID);
  dpm.setActiveAdmin(admin1,false,UserHandle.USER_SYSTEM);
  assertTrue(dpm.setDeviceOwner(admin1,"owner-name",UserHandle.USER_SYSTEM));
  assertFalse(dpms.getDeviceOwnerAdminLocked().ensureUserRestrictions().getBoolean(UserManager.DISALLOW_SMS));
  assertFalse(dpms.getDeviceOwnerAdminLocked().ensureUserRestrictions().getBoolean(UserManager.DISALLOW_OUTGOING_CALLS));
  dpm.addUserRestriction(admin1,UserManager.DISALLOW_SMS);
  dpm.addUserRestriction(admin1,UserManager.DISALLOW_OUTGOING_CALLS);
  assertTrue(dpms.getDeviceOwnerAdminLocked().ensureUserRestrictions().getBoolean(UserManager.DISALLOW_SMS));
  assertTrue(dpms.getDeviceOwnerAdminLocked().ensureUserRestrictions().getBoolean(UserManager.DISALLOW_OUTGOING_CALLS));
  dpm.clearUserRestriction(admin1,UserManager.DISALLOW_SMS);
  assertFalse(dpms.getDeviceOwnerAdminLocked().ensureUserRestrictions().getBoolean(UserManager.DISALLOW_SMS));
  assertTrue(dpms.getDeviceOwnerAdminLocked().ensureUserRestrictions().getBoolean(UserManager.DISALLOW_OUTGOING_CALLS));
  dpm.clearUserRestriction(admin1,UserManager.DISALLOW_OUTGOING_CALLS);
  assertFalse(dpms.getDeviceOwnerAdminLocked().ensureUserRestrictions().getBoolean(UserManager.DISALLOW_SMS));
  assertFalse(dpms.getDeviceOwnerAdminLocked().ensureUserRestrictions().getBoolean(UserManager.DISALLOW_OUTGOING_CALLS));
}
