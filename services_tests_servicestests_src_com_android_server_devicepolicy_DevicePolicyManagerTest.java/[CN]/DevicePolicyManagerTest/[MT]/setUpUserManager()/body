{
  final Map<Pair<String,UserHandle>,Bundle> appRestrictions=new HashMap<>();
  doAnswer(new Answer<Void>(){
    @Override public Void answer(    InvocationOnMock invocation) throws Throwable {
      String pkg=(String)invocation.getArguments()[0];
      Bundle bundle=(Bundle)invocation.getArguments()[1];
      UserHandle user=(UserHandle)invocation.getArguments()[2];
      appRestrictions.put(Pair.create(pkg,user),bundle);
      return null;
    }
  }
).when(mContext.userManager).setApplicationRestrictions(anyString(),any(Bundle.class),any(UserHandle.class));
  doAnswer(new Answer<Bundle>(){
    @Override public Bundle answer(    InvocationOnMock invocation) throws Throwable {
      String pkg=(String)invocation.getArguments()[0];
      UserHandle user=(UserHandle)invocation.getArguments()[1];
      return appRestrictions.get(Pair.create(pkg,user));
    }
  }
).when(mContext.userManager).getApplicationRestrictions(anyString(),any(UserHandle.class));
  mContext.addUser(DpmMockContext.CALLER_USER_HANDLE,0);
}
