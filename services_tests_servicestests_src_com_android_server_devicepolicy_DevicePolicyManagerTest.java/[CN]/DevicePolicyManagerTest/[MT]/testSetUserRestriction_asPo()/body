{
  setAsProfileOwner(admin1);
  DpmTestUtils.assertRestrictions(DpmTestUtils.newRestrictions(),dpms.getProfileOwnerAdminLocked(DpmMockContext.CALLER_USER_HANDLE).ensureUserRestrictions());
  dpm.addUserRestriction(admin1,UserManager.DISALLOW_INSTALL_UNKNOWN_SOURCES);
  verify(mContext.userManagerInternal).setDevicePolicyUserRestrictions(eq(DpmMockContext.CALLER_USER_HANDLE),MockUtils.checkUserRestrictions(UserManager.DISALLOW_INSTALL_UNKNOWN_SOURCES),isNull(Bundle.class));
  reset(mContext.userManagerInternal);
  dpm.addUserRestriction(admin1,UserManager.DISALLOW_OUTGOING_CALLS);
  verify(mContext.userManagerInternal).setDevicePolicyUserRestrictions(eq(DpmMockContext.CALLER_USER_HANDLE),MockUtils.checkUserRestrictions(UserManager.DISALLOW_INSTALL_UNKNOWN_SOURCES,UserManager.DISALLOW_OUTGOING_CALLS),isNull(Bundle.class));
  reset(mContext.userManagerInternal);
  DpmTestUtils.assertRestrictions(DpmTestUtils.newRestrictions(UserManager.DISALLOW_INSTALL_UNKNOWN_SOURCES,UserManager.DISALLOW_OUTGOING_CALLS),dpms.getProfileOwnerAdminLocked(DpmMockContext.CALLER_USER_HANDLE).ensureUserRestrictions());
  DpmTestUtils.assertRestrictions(DpmTestUtils.newRestrictions(UserManager.DISALLOW_INSTALL_UNKNOWN_SOURCES,UserManager.DISALLOW_OUTGOING_CALLS),dpm.getUserRestrictions(admin1));
  dpm.clearUserRestriction(admin1,UserManager.DISALLOW_INSTALL_UNKNOWN_SOURCES);
  verify(mContext.userManagerInternal).setDevicePolicyUserRestrictions(eq(DpmMockContext.CALLER_USER_HANDLE),MockUtils.checkUserRestrictions(UserManager.DISALLOW_OUTGOING_CALLS),isNull(Bundle.class));
  reset(mContext.userManagerInternal);
  DpmTestUtils.assertRestrictions(DpmTestUtils.newRestrictions(UserManager.DISALLOW_OUTGOING_CALLS),dpms.getProfileOwnerAdminLocked(DpmMockContext.CALLER_USER_HANDLE).ensureUserRestrictions());
  DpmTestUtils.assertRestrictions(DpmTestUtils.newRestrictions(UserManager.DISALLOW_OUTGOING_CALLS),dpm.getUserRestrictions(admin1));
  dpm.clearUserRestriction(admin1,UserManager.DISALLOW_OUTGOING_CALLS);
  verify(mContext.userManagerInternal).setDevicePolicyUserRestrictions(eq(DpmMockContext.CALLER_USER_HANDLE),MockUtils.checkUserRestrictions(),isNull(Bundle.class));
  reset(mContext.userManagerInternal);
  DpmTestUtils.assertRestrictions(DpmTestUtils.newRestrictions(),dpms.getProfileOwnerAdminLocked(DpmMockContext.CALLER_USER_HANDLE).ensureUserRestrictions());
  DpmTestUtils.assertRestrictions(DpmTestUtils.newRestrictions(),dpm.getUserRestrictions(admin1));
  dpm.addUserRestriction(admin1,UserManager.DISALLOW_ADJUST_VOLUME);
  reset(mContext.userManagerInternal);
  dpm.addUserRestriction(admin1,UserManager.DISALLOW_UNMUTE_MICROPHONE);
  verify(mContext.userManagerInternal).setDevicePolicyUserRestrictions(eq(DpmMockContext.CALLER_USER_HANDLE),MockUtils.checkUserRestrictions(UserManager.DISALLOW_ADJUST_VOLUME,UserManager.DISALLOW_UNMUTE_MICROPHONE),isNull(Bundle.class));
  reset(mContext.userManagerInternal);
  dpm.setCameraDisabled(admin1,true);
  verify(mContext.userManagerInternal).setDevicePolicyUserRestrictions(eq(DpmMockContext.CALLER_USER_HANDLE),MockUtils.checkUserRestrictions(UserManager.DISALLOW_CAMERA,UserManager.DISALLOW_ADJUST_VOLUME,UserManager.DISALLOW_UNMUTE_MICROPHONE),isNull(Bundle.class));
  reset(mContext.userManagerInternal);
}
