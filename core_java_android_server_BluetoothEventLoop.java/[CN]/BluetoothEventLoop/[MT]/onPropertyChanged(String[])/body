{
  String name=propValues[0];
  if (name.equals("Name")) {
    Intent intent=new Intent(BluetoothIntent.NAME_CHANGED_ACTION);
    intent.putExtra(BluetoothIntent.NAME,propValues[1]);
    mContext.sendBroadcast(intent,BLUETOOTH_PERM);
    mBluetoothService.setProperty(name,propValues[1]);
  }
 else   if (name.equals("Pairable") || name.equals("Discoverable")) {
    String pairable=name.equals("Pairable") ? propValues[1] : mBluetoothService.getProperty("Pairable");
    String discoverable=name.equals("Discoverable") ? propValues[1] : mBluetoothService.getProperty("Discoverable");
    if (pairable == null || discoverable == null)     return;
    int mode=BluetoothService.bluezStringToScanMode(pairable.equals("true"),discoverable.equals("true"));
    if (mode >= 0) {
      Intent intent=new Intent(BluetoothIntent.SCAN_MODE_CHANGED_ACTION);
      intent.putExtra(BluetoothIntent.SCAN_MODE,mode);
      intent.addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY_BEFORE_BOOT);
      mContext.sendBroadcast(intent,BLUETOOTH_PERM);
    }
    mBluetoothService.setProperty(name,propValues[1]);
  }
 else   if (name.equals("Discovering")) {
    Intent intent;
    if (propValues[1].equals("true")) {
      mBluetoothService.setIsDiscovering(true);
      intent=new Intent(BluetoothIntent.DISCOVERY_STARTED_ACTION);
    }
 else {
      mBluetoothService.cancelDiscovery();
      mBluetoothService.setIsDiscovering(false);
      intent=new Intent(BluetoothIntent.DISCOVERY_COMPLETED_ACTION);
    }
    mContext.sendBroadcast(intent,BLUETOOTH_PERM);
    mBluetoothService.setProperty(name,propValues[1]);
  }
 else   if (name.equals("Devices")) {
    String value=null;
    int len=Integer.valueOf(propValues[1]);
    if (len > 0) {
      StringBuilder str=new StringBuilder();
      for (int i=2; i < propValues.length; i++) {
        str.append(propValues[i]);
        str.append(",");
      }
      value=str.toString();
    }
    mBluetoothService.setProperty(name,value);
  }
 else   if (name.equals("Powered")) {
    if (propValues[1].equals("true"))     onRestartRequired();
  }
}
