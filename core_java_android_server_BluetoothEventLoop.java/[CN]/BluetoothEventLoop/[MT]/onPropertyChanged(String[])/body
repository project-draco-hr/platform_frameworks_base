{
  BluetoothAdapterProperties adapterProperties=mBluetoothService.getAdapterProperties();
  if (adapterProperties.isEmpty()) {
    adapterProperties.getAllProperties();
  }
  log("Property Changed: " + propValues[0] + " : "+ propValues[1]);
  String name=propValues[0];
  if (name.equals("Name")) {
    adapterProperties.setProperty(name,propValues[1]);
    Intent intent=new Intent(BluetoothAdapter.ACTION_LOCAL_NAME_CHANGED);
    intent.putExtra(BluetoothAdapter.EXTRA_LOCAL_NAME,propValues[1]);
    intent.addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY_BEFORE_BOOT);
    mContext.sendBroadcast(intent,BLUETOOTH_PERM);
  }
 else   if (name.equals("Pairable") || name.equals("Discoverable")) {
    String pairable=name.equals("Pairable") ? propValues[1] : adapterProperties.getProperty("Pairable");
    String discoverable=name.equals("Discoverable") ? propValues[1] : adapterProperties.getProperty("Discoverable");
    if (pairable == null || discoverable == null)     return;
    adapterProperties.setProperty(name,propValues[1]);
    if (name.equals("Pairable")) {
      if (pairable.equals("true")) {
        mBluetoothState.sendMessage(BluetoothAdapterStateMachine.BECOME_PAIRABLE);
      }
 else {
        mBluetoothState.sendMessage(BluetoothAdapterStateMachine.BECOME_NON_PAIRABLE);
      }
    }
    int mode=BluetoothService.bluezStringToScanMode(pairable.equals("true"),discoverable.equals("true"));
    if (mode >= 0) {
      Intent intent=new Intent(BluetoothAdapter.ACTION_SCAN_MODE_CHANGED);
      intent.putExtra(BluetoothAdapter.EXTRA_SCAN_MODE,mode);
      intent.addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY_BEFORE_BOOT);
      mContext.sendBroadcast(intent,BLUETOOTH_PERM);
    }
  }
 else   if (name.equals("Discovering")) {
    Intent intent;
    adapterProperties.setProperty(name,propValues[1]);
    if (propValues[1].equals("true")) {
      mBluetoothService.setIsDiscovering(true);
      intent=new Intent(BluetoothAdapter.ACTION_DISCOVERY_STARTED);
    }
 else {
      mBluetoothService.cancelDiscovery();
      mBluetoothService.setIsDiscovering(false);
      intent=new Intent(BluetoothAdapter.ACTION_DISCOVERY_FINISHED);
    }
    mContext.sendBroadcast(intent,BLUETOOTH_PERM);
  }
 else   if (name.equals("Devices") || name.equals("UUIDs")) {
    String value=null;
    int len=Integer.valueOf(propValues[1]);
    if (len > 0) {
      StringBuilder str=new StringBuilder();
      for (int i=2; i < propValues.length; i++) {
        str.append(propValues[i]);
        str.append(",");
      }
      value=str.toString();
    }
    adapterProperties.setProperty(name,value);
    if (name.equals("UUIDs")) {
      mBluetoothService.updateBluetoothState(value);
    }
  }
 else   if (name.equals("Powered")) {
    if (propValues[1].equals("true"))     onRestartRequired();
  }
 else   if (name.equals("DiscoverableTimeout")) {
    adapterProperties.setProperty(name,propValues[1]);
  }
}
