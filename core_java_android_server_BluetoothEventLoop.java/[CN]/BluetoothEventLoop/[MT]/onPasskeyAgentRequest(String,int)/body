{
  mPasskeyAgentRequestData.put(address,new Integer(nativeData));
  if (address.equals(mBluetoothService.getOutgoingBondingDevAddress())) {
    int btClass=mBluetoothService.getRemoteClass(address);
    int remoteDeviceClass=Device.getDevice(btClass);
    if (remoteDeviceClass == Device.AUDIO_VIDEO_WEARABLE_HEADSET || remoteDeviceClass == Device.AUDIO_VIDEO_HANDSFREE || remoteDeviceClass == Device.AUDIO_VIDEO_HEADPHONES || remoteDeviceClass == Device.AUDIO_VIDEO_PORTABLE_AUDIO || remoteDeviceClass == Device.AUDIO_VIDEO_CAR_AUDIO || remoteDeviceClass == Device.AUDIO_VIDEO_HIFI_AUDIO) {
      if (!mDefaultPinData.containsKey(address)) {
        mDefaultPinData.put(address,false);
      }
      if (!mDefaultPinData.get(address)) {
        mDefaultPinData.remove(address);
        mDefaultPinData.put(address,true);
        mBluetoothService.setPin(address,BluetoothDevice.convertPinToBytes("0000"));
        return;
      }
    }
  }
  Intent intent=new Intent(BluetoothIntent.PAIRING_REQUEST_ACTION);
  intent.putExtra(BluetoothIntent.ADDRESS,address);
  mContext.sendBroadcast(intent,BLUETOOTH_ADMIN_PERM);
}
