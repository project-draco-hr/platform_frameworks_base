{
  address=address.toUpperCase();
  if (result == BluetoothDevice.BOND_SUCCESS) {
    mBluetoothService.getBondState().setBondState(address,BluetoothDevice.BOND_BONDED);
    if (mBluetoothService.getBondState().isAutoPairingAttemptsInProgress(address)) {
      mBluetoothService.getBondState().clearPinAttempts(address);
    }
  }
 else   if (result == BluetoothDevice.UNBOND_REASON_AUTH_FAILED && mBluetoothService.getBondState().getAttempt(address) == 1) {
    mBluetoothService.getBondState().addAutoPairingFailure(address);
    pairingAttempt(address,result);
  }
 else   if (result == BluetoothDevice.UNBOND_REASON_REMOTE_DEVICE_DOWN && mBluetoothService.getBondState().isAutoPairingAttemptsInProgress(address)) {
    pairingAttempt(address,result);
  }
 else {
    mBluetoothService.getBondState().setBondState(address,BluetoothDevice.BOND_NONE,result);
    if (mBluetoothService.getBondState().isAutoPairingAttemptsInProgress(address)) {
      mBluetoothService.getBondState().clearPinAttempts(address);
    }
  }
}
