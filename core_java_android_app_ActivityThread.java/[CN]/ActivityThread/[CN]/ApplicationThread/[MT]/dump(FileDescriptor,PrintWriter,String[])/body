{
  long nativeMax=Debug.getNativeHeapSize() / 1024;
  long nativeAllocated=Debug.getNativeHeapAllocatedSize() / 1024;
  long nativeFree=Debug.getNativeHeapFreeSize() / 1024;
  Debug.MemoryInfo memInfo=new Debug.MemoryInfo();
  Debug.getMemoryInfo(memInfo);
  final int nativeShared=memInfo.nativeSharedDirty;
  final int dalvikShared=memInfo.dalvikSharedDirty;
  final int otherShared=memInfo.otherSharedDirty;
  final int nativePrivate=memInfo.nativePrivateDirty;
  final int dalvikPrivate=memInfo.dalvikPrivateDirty;
  final int otherPrivate=memInfo.otherPrivateDirty;
  Runtime runtime=Runtime.getRuntime();
  long dalvikMax=runtime.totalMemory() / 1024;
  long dalvikFree=runtime.freeMemory() / 1024;
  long dalvikAllocated=dalvikMax - dalvikFree;
  long viewInstanceCount=ViewDebug.getViewInstanceCount();
  long viewRootInstanceCount=ViewDebug.getViewRootInstanceCount();
  long appContextInstanceCount=ApplicationContext.getInstanceCount();
  long activityInstanceCount=Activity.getInstanceCount();
  int globalAssetCount=AssetManager.getGlobalAssetCount();
  int globalAssetManagerCount=AssetManager.getGlobalAssetManagerCount();
  int binderLocalObjectCount=Debug.getBinderLocalObjectCount();
  int binderProxyObjectCount=Debug.getBinderProxyObjectCount();
  int binderDeathObjectCount=Debug.getBinderDeathObjectCount();
  int openSslSocketCount=OpenSSLSocketImpl.getInstanceCount();
  long sqliteAllocated=SQLiteDebug.getHeapAllocatedSize() / 1024;
  SQLiteDebug.PagerStats stats=new SQLiteDebug.PagerStats();
  SQLiteDebug.getPagerStats(stats);
  boolean doCheckinFormat=false;
  if (args != null) {
    for (    String arg : args) {
      if ("-c".equals(arg))       doCheckinFormat=true;
    }
  }
  if (doCheckinFormat) {
    String processName=(mBoundApplication != null) ? mBoundApplication.processName : "unknown";
    pw.print(ACTIVITY_THREAD_CHECKIN_VERSION);
    pw.print(',');
    pw.print(Process.myPid());
    pw.print(',');
    pw.print(processName);
    pw.print(',');
    pw.print(nativeMax);
    pw.print(',');
    pw.print(dalvikMax);
    pw.print(',');
    pw.print("N/A,");
    pw.print(nativeMax + dalvikMax);
    pw.print(',');
    pw.print(nativeAllocated);
    pw.print(',');
    pw.print(dalvikAllocated);
    pw.print(',');
    pw.print("N/A,");
    pw.print(nativeAllocated + dalvikAllocated);
    pw.print(',');
    pw.print(nativeFree);
    pw.print(',');
    pw.print(dalvikFree);
    pw.print(',');
    pw.print("N/A,");
    pw.print(nativeFree + dalvikFree);
    pw.print(',');
    pw.print(memInfo.nativePss);
    pw.print(',');
    pw.print(memInfo.dalvikPss);
    pw.print(',');
    pw.print(memInfo.otherPss);
    pw.print(',');
    pw.print(memInfo.nativePss + memInfo.dalvikPss + memInfo.otherPss);
    pw.print(',');
    pw.print(nativeShared);
    pw.print(',');
    pw.print(dalvikShared);
    pw.print(',');
    pw.print(otherShared);
    pw.print(',');
    pw.print(nativeShared + dalvikShared + otherShared);
    pw.print(',');
    pw.print(nativePrivate);
    pw.print(',');
    pw.print(dalvikPrivate);
    pw.print(',');
    pw.print(otherPrivate);
    pw.print(',');
    pw.print(nativePrivate + dalvikPrivate + otherPrivate);
    pw.print(',');
    pw.print(viewInstanceCount);
    pw.print(',');
    pw.print(viewRootInstanceCount);
    pw.print(',');
    pw.print(appContextInstanceCount);
    pw.print(',');
    pw.print(activityInstanceCount);
    pw.print(',');
    pw.print(globalAssetCount);
    pw.print(',');
    pw.print(globalAssetManagerCount);
    pw.print(',');
    pw.print(binderLocalObjectCount);
    pw.print(',');
    pw.print(binderProxyObjectCount);
    pw.print(',');
    pw.print(binderDeathObjectCount);
    pw.print(',');
    pw.print(openSslSocketCount);
    pw.print(',');
    pw.print(sqliteAllocated);
    pw.print(',');
    pw.print(stats.databaseBytes / 1024);
    pw.print(',');
    pw.print(stats.numPagers);
    pw.print(',');
    pw.print((stats.totalBytes - stats.referencedBytes) / 1024);
    pw.print(',');
    pw.print(stats.referencedBytes / 1024);
    pw.print('\n');
    return;
  }
  printRow(pw,HEAP_COLUMN,"","native","dalvik","other","total");
  printRow(pw,HEAP_COLUMN,"size:",nativeMax,dalvikMax,"N/A",nativeMax + dalvikMax);
  printRow(pw,HEAP_COLUMN,"allocated:",nativeAllocated,dalvikAllocated,"N/A",nativeAllocated + dalvikAllocated);
  printRow(pw,HEAP_COLUMN,"free:",nativeFree,dalvikFree,"N/A",nativeFree + dalvikFree);
  printRow(pw,HEAP_COLUMN,"(Pss):",memInfo.nativePss,memInfo.dalvikPss,memInfo.otherPss,memInfo.nativePss + memInfo.dalvikPss + memInfo.otherPss);
  printRow(pw,HEAP_COLUMN,"(shared dirty):",nativeShared,dalvikShared,otherShared,nativeShared + dalvikShared + otherShared);
  printRow(pw,HEAP_COLUMN,"(priv dirty):",nativePrivate,dalvikPrivate,otherPrivate,nativePrivate + dalvikPrivate + otherPrivate);
  pw.println(" ");
  pw.println(" Objects");
  printRow(pw,TWO_COUNT_COLUMNS,"Views:",viewInstanceCount,"ViewRoots:",viewRootInstanceCount);
  printRow(pw,TWO_COUNT_COLUMNS,"AppContexts:",appContextInstanceCount,"Activities:",activityInstanceCount);
  printRow(pw,TWO_COUNT_COLUMNS,"Assets:",globalAssetCount,"AssetManagers:",globalAssetManagerCount);
  printRow(pw,TWO_COUNT_COLUMNS,"Local Binders:",binderLocalObjectCount,"Proxy Binders:",binderProxyObjectCount);
  printRow(pw,ONE_COUNT_COLUMN,"Death Recipients:",binderDeathObjectCount);
  printRow(pw,ONE_COUNT_COLUMN,"OpenSSL Sockets:",openSslSocketCount);
  pw.println(" ");
  pw.println(" SQL");
  printRow(pw,TWO_COUNT_COLUMNS,"heap:",sqliteAllocated,"dbFiles:",stats.databaseBytes / 1024);
  printRow(pw,TWO_COUNT_COLUMNS,"numPagers:",stats.numPagers,"inactivePageKB:",(stats.totalBytes - stats.referencedBytes) / 1024);
  printRow(pw,ONE_COUNT_COLUMN,"activePageKB:",stats.referencedBytes / 1024);
}
