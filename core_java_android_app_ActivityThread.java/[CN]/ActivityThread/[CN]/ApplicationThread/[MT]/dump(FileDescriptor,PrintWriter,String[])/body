{
  long nativeMax=Debug.getNativeHeapSize() / 1024;
  long nativeAllocated=Debug.getNativeHeapAllocatedSize() / 1024;
  long nativeFree=Debug.getNativeHeapFreeSize() / 1024;
  Debug.MemoryInfo memInfo=new Debug.MemoryInfo();
  Debug.getMemoryInfo(memInfo);
  final int nativeShared=memInfo.nativeSharedDirty;
  final int dalvikShared=memInfo.dalvikSharedDirty;
  final int otherShared=memInfo.otherSharedDirty;
  final int nativePrivate=memInfo.nativePrivateDirty;
  final int dalvikPrivate=memInfo.dalvikPrivateDirty;
  final int otherPrivate=memInfo.otherPrivateDirty;
  Runtime runtime=Runtime.getRuntime();
  long dalvikMax=runtime.totalMemory() / 1024;
  long dalvikFree=runtime.freeMemory() / 1024;
  long dalvikAllocated=dalvikMax - dalvikFree;
  printRow(pw,HEAP_COLUMN,"","native","dalvik","other","total");
  printRow(pw,HEAP_COLUMN,"size:",nativeMax,dalvikMax,"N/A",nativeMax + dalvikMax);
  printRow(pw,HEAP_COLUMN,"allocated:",nativeAllocated,dalvikAllocated,"N/A",nativeAllocated + dalvikAllocated);
  printRow(pw,HEAP_COLUMN,"free:",nativeFree,dalvikFree,"N/A",nativeFree + dalvikFree);
  printRow(pw,HEAP_COLUMN,"(Pss):",memInfo.nativePss,memInfo.dalvikPss,memInfo.otherPss,memInfo.nativePss + memInfo.dalvikPss + memInfo.otherPss);
  printRow(pw,HEAP_COLUMN,"(shared dirty):",nativeShared,dalvikShared,otherShared,nativeShared + dalvikShared + otherShared);
  printRow(pw,HEAP_COLUMN,"(priv dirty):",nativePrivate,dalvikPrivate,otherPrivate,nativePrivate + dalvikPrivate + otherPrivate);
  pw.println(" ");
  pw.println(" Objects");
  printRow(pw,TWO_COUNT_COLUMNS,"Views:",ViewDebug.getViewInstanceCount(),"ViewRoots:",ViewDebug.getViewRootInstanceCount());
  printRow(pw,TWO_COUNT_COLUMNS,"AppContexts:",ApplicationContext.getInstanceCount(),"Activities:",Activity.getInstanceCount());
  printRow(pw,TWO_COUNT_COLUMNS,"Assets:",AssetManager.getGlobalAssetCount(),"AssetManagers:",AssetManager.getGlobalAssetManagerCount());
  printRow(pw,TWO_COUNT_COLUMNS,"Local Binders:",Debug.getBinderLocalObjectCount(),"Proxy Binders:",Debug.getBinderProxyObjectCount());
  printRow(pw,ONE_COUNT_COLUMN,"Death Recipients:",Debug.getBinderDeathObjectCount());
  printRow(pw,ONE_COUNT_COLUMN,"OpenSSL Sockets:",OpenSSLSocketImpl.getInstanceCount());
  long sqliteAllocated=SQLiteDebug.getHeapAllocatedSize() / 1024;
  SQLiteDebug.PagerStats stats=new SQLiteDebug.PagerStats();
  SQLiteDebug.getPagerStats(stats);
  pw.println(" ");
  pw.println(" SQL");
  printRow(pw,TWO_COUNT_COLUMNS,"heap:",sqliteAllocated,"dbFiles:",stats.databaseBytes / 1024);
  printRow(pw,TWO_COUNT_COLUMNS,"numPagers:",stats.numPagers,"inactivePageKB:",(stats.totalBytes - stats.referencedBytes) / 1024);
  printRow(pw,ONE_COUNT_COLUMN,"activePageKB:",stats.referencedBytes / 1024);
}
