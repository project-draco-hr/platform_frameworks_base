{
  ActivityInfo aInfo=r.activityInfo;
  if (r.packageInfo == null) {
    r.packageInfo=getPackageInfo(aInfo.applicationInfo,r.compatInfo,Context.CONTEXT_INCLUDE_CODE);
  }
  ComponentName component=r.intent.getComponent();
  if (component == null) {
    component=r.intent.resolveActivity(mInitialApplication.getPackageManager());
    r.intent.setComponent(component);
  }
  if (r.activityInfo.targetActivity != null) {
    component=new ComponentName(r.activityInfo.packageName,r.activityInfo.targetActivity);
  }
  Activity activity=null;
  try {
    java.lang.ClassLoader cl=r.packageInfo.getClassLoader();
    activity=mInstrumentation.newActivity(cl,component.getClassName(),r.intent);
    StrictMode.incrementExpectedActivityCount(activity.getClass());
    r.intent.setExtrasClassLoader(cl);
    if (r.state != null) {
      r.state.setClassLoader(cl);
    }
  }
 catch (  Exception e) {
    if (!mInstrumentation.onException(activity,e)) {
      throw new RuntimeException("Unable to instantiate activity " + component + ": "+ e.toString(),e);
    }
  }
  try {
    Application app=r.packageInfo.makeApplication(false,mInstrumentation);
    if (localLOGV)     Slog.v(TAG,"Performing launch of " + r);
    if (localLOGV)     Slog.v(TAG,r + ": app=" + app+ ", appName="+ app.getPackageName()+ ", pkg="+ r.packageInfo.getPackageName()+ ", comp="+ r.intent.getComponent().toShortString()+ ", dir="+ r.packageInfo.getAppDir());
    if (activity != null) {
      ContextImpl appContext=new ContextImpl();
      appContext.init(r.packageInfo,r.token,this);
      appContext.setOuterContext(activity);
      CharSequence title=r.activityInfo.loadLabel(appContext.getPackageManager());
      Configuration config=new Configuration(mConfiguration);
      if (DEBUG_CONFIGURATION)       Slog.v(TAG,"Launching activity " + r.activityInfo.name + " with config "+ config);
      activity.attach(appContext,this,getInstrumentation(),r.token,r.ident,app,r.intent,r.activityInfo,title,r.parent,r.embeddedID,r.lastNonConfigurationInstances,config);
      if (customIntent != null) {
        activity.mIntent=customIntent;
      }
      r.lastNonConfigurationInstances=null;
      activity.mStartedActivity=false;
      int theme=r.activityInfo.getThemeResource();
      if (theme != 0) {
        activity.setTheme(theme);
      }
      activity.mCalled=false;
      mInstrumentation.callActivityOnCreate(activity,r.state);
      if (!activity.mCalled) {
        throw new SuperNotCalledException("Activity " + r.intent.getComponent().toShortString() + " did not call through to super.onCreate()");
      }
      r.activity=activity;
      r.stopped=true;
      if (!r.activity.mFinished) {
        activity.performStart();
        r.stopped=false;
      }
      if (!r.activity.mFinished) {
        if (r.state != null) {
          mInstrumentation.callActivityOnRestoreInstanceState(activity,r.state);
        }
      }
      if (!r.activity.mFinished) {
        activity.mCalled=false;
        mInstrumentation.callActivityOnPostCreate(activity,r.state);
        if (!activity.mCalled) {
          throw new SuperNotCalledException("Activity " + r.intent.getComponent().toShortString() + " did not call through to super.onPostCreate()");
        }
      }
    }
    r.paused=true;
    mActivities.put(r.token,r);
  }
 catch (  SuperNotCalledException e) {
    throw e;
  }
catch (  Exception e) {
    if (!mInstrumentation.onException(activity,e)) {
      throw new RuntimeException("Unable to start activity " + component + ": "+ e.toString(),e);
    }
  }
  return activity;
}
