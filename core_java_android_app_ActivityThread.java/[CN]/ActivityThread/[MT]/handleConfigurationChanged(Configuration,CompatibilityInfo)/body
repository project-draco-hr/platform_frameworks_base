{
  ArrayList<ComponentCallbacks2> callbacks=null;
synchronized (mPackages) {
    if (mPendingConfiguration != null) {
      if (!mPendingConfiguration.isOtherSeqNewer(config)) {
        config=mPendingConfiguration;
      }
      mPendingConfiguration=null;
    }
    if (config == null) {
      return;
    }
    if (DEBUG_CONFIGURATION)     Slog.v(TAG,"Handle configuration changed: " + config);
    applyConfigurationToResourcesLocked(config,compat);
    if (mConfiguration == null) {
      mConfiguration=new Configuration();
    }
    if (!mConfiguration.isOtherSeqNewer(config) && compat == null) {
      return;
    }
    mConfiguration.updateFrom(config);
    if (mCompatConfiguration == null) {
      mCompatConfiguration=new Configuration();
    }
    mCompatConfiguration.setTo(mConfiguration);
    if (mResCompatibilityInfo != null && !mResCompatibilityInfo.supportsScreen()) {
      mResCompatibilityInfo.applyToConfiguration(mCompatConfiguration);
      config=mCompatConfiguration;
    }
    callbacks=collectComponentCallbacksLocked(false,config);
  }
  WindowManagerImpl.getDefault().trimLocalMemory();
  if (callbacks != null) {
    final int N=callbacks.size();
    for (int i=0; i < N; i++) {
      performConfigurationChanged(callbacks.get(i),config);
    }
  }
}
