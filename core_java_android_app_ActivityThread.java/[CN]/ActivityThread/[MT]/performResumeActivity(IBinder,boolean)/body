{
  ActivityClientRecord r=mActivities.get(token);
  if (localLOGV)   Slog.v(TAG,"Performing resume of " + r + " finished="+ r.activity.mFinished);
  if (r != null && !r.activity.mFinished) {
    if (clearHide) {
      r.hideForNow=false;
      r.activity.mStartedActivity=false;
    }
    try {
      r.activity.onStateNotSaved();
      r.activity.mFragments.noteStateNotSaved();
      if (r.pendingIntents != null) {
        deliverNewIntents(r,r.pendingIntents);
        r.pendingIntents=null;
      }
      if (r.pendingResults != null) {
        deliverResults(r,r.pendingResults);
        r.pendingResults=null;
      }
      r.activity.performResume();
      for (int i=mRelaunchingActivities.size() - 1; i >= 0; i--) {
        final ActivityClientRecord relaunching=mRelaunchingActivities.get(i);
        if (relaunching.token == r.token && relaunching.startsNotResumed) {
          relaunching.startsNotResumed=false;
        }
      }
      EventLog.writeEvent(LOG_AM_ON_RESUME_CALLED,UserHandle.myUserId(),r.activity.getComponentName().getClassName());
      r.paused=false;
      r.stopped=false;
      r.state=null;
      r.persistentState=null;
    }
 catch (    Exception e) {
      if (!mInstrumentation.onException(r.activity,e)) {
        throw new RuntimeException("Unable to resume activity " + r.intent.getComponent().toShortString() + ": "+ e.toString(),e);
      }
    }
  }
  return r;
}
