{
  unscheduleGcIdler();
  Configuration changedConfig=null;
  int configChanges=0;
synchronized (mPackages) {
    int N=mRelaunchingActivities.size();
    IBinder token=tmp.token;
    tmp=null;
    for (int i=0; i < N; i++) {
      ActivityClientRecord r=mRelaunchingActivities.get(i);
      if (r.token == token) {
        tmp=r;
        configChanges|=tmp.pendingConfigChanges;
        mRelaunchingActivities.remove(i);
        i--;
        N--;
      }
    }
    if (tmp == null) {
      if (DEBUG_CONFIGURATION)       Slog.v(TAG,"Abort, activity not relaunching!");
      return;
    }
    if (DEBUG_CONFIGURATION)     Slog.v(TAG,"Relaunching activity " + tmp.token + " with configChanges=0x"+ Integer.toHexString(configChanges));
    if (mPendingConfiguration != null) {
      changedConfig=mPendingConfiguration;
      mPendingConfiguration=null;
    }
  }
  if (tmp.createdConfig != null) {
    if (mConfiguration == null || (tmp.createdConfig.isOtherSeqNewer(mConfiguration) && mConfiguration.diff(tmp.createdConfig) != 0)) {
      if (changedConfig == null || tmp.createdConfig.isOtherSeqNewer(changedConfig)) {
        changedConfig=tmp.createdConfig;
      }
    }
  }
  if (DEBUG_CONFIGURATION)   Slog.v(TAG,"Relaunching activity " + tmp.token + ": changedConfig="+ changedConfig);
  if (changedConfig != null) {
    handleConfigurationChanged(changedConfig,null);
  }
  ActivityClientRecord r=mActivities.get(tmp.token);
  if (DEBUG_CONFIGURATION)   Slog.v(TAG,"Handling relaunch of " + r);
  if (r == null) {
    return;
  }
  r.activity.mConfigChangeFlags|=configChanges;
  r.onlyLocalRequest=tmp.onlyLocalRequest;
  Intent currentIntent=r.activity.mIntent;
  r.activity.mChangingConfigurations=true;
  if (!r.paused) {
    performPauseActivity(r.token,false,r.isPreHoneycomb());
  }
  if (r.state == null && !r.stopped && !r.isPreHoneycomb()) {
    r.state=new Bundle();
    mInstrumentation.callActivityOnSaveInstanceState(r.activity,r.state);
  }
  handleDestroyActivity(r.token,false,configChanges,true);
  r.activity=null;
  r.window=null;
  r.hideForNow=false;
  r.nextIdle=null;
  if (tmp.pendingResults != null) {
    if (r.pendingResults == null) {
      r.pendingResults=tmp.pendingResults;
    }
 else {
      r.pendingResults.addAll(tmp.pendingResults);
    }
  }
  if (tmp.pendingIntents != null) {
    if (r.pendingIntents == null) {
      r.pendingIntents=tmp.pendingIntents;
    }
 else {
      r.pendingIntents.addAll(tmp.pendingIntents);
    }
  }
  r.startsNotResumed=tmp.startsNotResumed;
  handleLaunchActivity(r,currentIntent);
}
