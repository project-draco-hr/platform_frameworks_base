{
  if (DEBUG_BACKUP)   Slog.v(TAG,"handleCreateBackupAgent: " + data);
  try {
    PackageInfo requestedPackage=getPackageManager().getPackageInfo(data.appInfo.packageName,0,UserHandle.myUserId());
    if (requestedPackage.applicationInfo.uid != Process.myUid()) {
      Slog.w(TAG,"Asked to instantiate non-matching package " + data.appInfo.packageName);
      return;
    }
  }
 catch (  RemoteException e) {
    Slog.e(TAG,"Can't reach package manager",e);
    return;
  }
  unscheduleGcIdler();
  LoadedApk packageInfo=getPackageInfoNoCheck(data.appInfo,data.compatInfo);
  String packageName=packageInfo.mPackageName;
  if (packageName == null) {
    Slog.d(TAG,"Asked to create backup agent for nonexistent package");
    return;
  }
  String classname=data.appInfo.backupAgentName;
  if (classname == null && (data.backupMode == IApplicationThread.BACKUP_MODE_FULL || data.backupMode == IApplicationThread.BACKUP_MODE_RESTORE_FULL)) {
    classname="android.app.backup.FullBackupAgent";
  }
  try {
    IBinder binder=null;
    BackupAgent agent=mBackupAgents.get(packageName);
    if (agent != null) {
      if (DEBUG_BACKUP) {
        Slog.v(TAG,"Reusing existing agent instance");
      }
      binder=agent.onBind();
    }
 else {
      try {
        if (DEBUG_BACKUP)         Slog.v(TAG,"Initializing agent class " + classname);
        java.lang.ClassLoader cl=packageInfo.getClassLoader();
        agent=(BackupAgent)cl.loadClass(classname).newInstance();
        ContextImpl context=ContextImpl.createAppContext(this,packageInfo);
        context.setOuterContext(agent);
        agent.attach(context);
        agent.onCreate();
        binder=agent.onBind();
        mBackupAgents.put(packageName,agent);
      }
 catch (      Exception e) {
        Slog.e(TAG,"Agent threw during creation: " + e);
        if (data.backupMode != IApplicationThread.BACKUP_MODE_RESTORE && data.backupMode != IApplicationThread.BACKUP_MODE_RESTORE_FULL) {
          throw e;
        }
      }
    }
    try {
      ActivityManagerNative.getDefault().backupAgentCreated(packageName,binder);
    }
 catch (    RemoteException e) {
    }
  }
 catch (  Exception e) {
    throw new RuntimeException("Unable to create BackupAgent " + classname + ": "+ e.toString(),e);
  }
}
