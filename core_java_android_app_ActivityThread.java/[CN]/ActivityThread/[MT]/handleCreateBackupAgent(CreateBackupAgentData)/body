{
  if (DEBUG_BACKUP)   Log.v(TAG,"handleCreateBackupAgent: " + data);
  unscheduleGcIdler();
  PackageInfo packageInfo=getPackageInfoNoCheck(data.appInfo);
  String packageName=packageInfo.mPackageName;
  if (mBackupAgents.get(packageName) != null) {
    Log.d(TAG,"BackupAgent " + "  for " + packageName + " already exists");
    return;
  }
  BackupAgent agent=null;
  String classname=data.appInfo.backupAgentName;
  if (classname == null) {
    if (data.backupMode == IApplicationThread.BACKUP_MODE_INCREMENTAL) {
      Log.e(TAG,"Attempted incremental backup but no defined agent for " + packageName);
      return;
    }
    classname="android.app.FullBackupAgent";
  }
  try {
    IBinder binder=null;
    try {
      java.lang.ClassLoader cl=packageInfo.getClassLoader();
      agent=(BackupAgent)cl.loadClass(data.appInfo.backupAgentName).newInstance();
      if (DEBUG_BACKUP)       Log.v(TAG,"Initializing BackupAgent " + data.appInfo.backupAgentName);
      ContextImpl context=new ContextImpl();
      context.init(packageInfo,null,this);
      context.setOuterContext(agent);
      agent.attach(context);
      agent.onCreate();
      binder=agent.onBind();
      mBackupAgents.put(packageName,agent);
    }
 catch (    Exception e) {
      Log.e(TAG,"Agent threw during creation: " + e);
      if (data.backupMode != IApplicationThread.BACKUP_MODE_RESTORE) {
        throw e;
      }
    }
    try {
      ActivityManagerNative.getDefault().backupAgentCreated(packageName,binder);
    }
 catch (    RemoteException e) {
    }
  }
 catch (  Exception e) {
    throw new RuntimeException("Unable to create BackupAgent " + data.appInfo.backupAgentName + ": "+ e.toString(),e);
  }
}
