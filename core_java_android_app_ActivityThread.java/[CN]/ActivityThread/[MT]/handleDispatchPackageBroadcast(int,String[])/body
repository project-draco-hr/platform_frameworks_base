{
  boolean hasPkgInfo=false;
switch (cmd) {
case IApplicationThread.PACKAGE_REMOVED:
case IApplicationThread.PACKAGE_REMOVED_DONT_KILL:
{
      final boolean killApp=cmd == IApplicationThread.PACKAGE_REMOVED;
      if (packages == null) {
        break;
      }
synchronized (mResourcesManager) {
        for (int i=packages.length - 1; i >= 0; i--) {
          if (!hasPkgInfo) {
            WeakReference<LoadedApk> ref=mPackages.get(packages[i]);
            if (ref != null && ref.get() != null) {
              hasPkgInfo=true;
            }
 else {
              ref=mResourcePackages.get(packages[i]);
              if (ref != null && ref.get() != null) {
                hasPkgInfo=true;
              }
            }
          }
          if (killApp) {
            mPackages.remove(packages[i]);
            mResourcePackages.remove(packages[i]);
          }
        }
      }
      break;
    }
case IApplicationThread.PACKAGE_REPLACED:
{
    if (packages == null) {
      break;
    }
synchronized (mResourcesManager) {
      for (int i=packages.length - 1; i >= 0; i--) {
        WeakReference<LoadedApk> ref=mPackages.get(packages[i]);
        LoadedApk pkgInfo=ref != null ? ref.get() : null;
        if (pkgInfo != null) {
          hasPkgInfo=true;
        }
 else {
          ref=mResourcePackages.get(packages[i]);
          pkgInfo=ref != null ? ref.get() : null;
          if (pkgInfo != null) {
            hasPkgInfo=true;
          }
        }
        if (pkgInfo != null) {
          try {
            final String packageName=packages[i];
            final ApplicationInfo aInfo=sPackageManager.getApplicationInfo(packageName,0,UserHandle.myUserId());
            if (mActivities.size() > 0) {
              for (              ActivityClientRecord ar : mActivities.values()) {
                if (ar.activityInfo.applicationInfo.packageName.equals(packageName)) {
                  ar.activityInfo.applicationInfo=aInfo;
                  ar.packageInfo=pkgInfo;
                }
              }
            }
            final List<String> oldPaths=sPackageManager.getPreviousCodePaths(packageName);
            pkgInfo.updateApplicationInfo(aInfo,oldPaths);
          }
 catch (          RemoteException e) {
          }
        }
      }
    }
    break;
  }
}
ApplicationPackageManager.handlePackageBroadcast(cmd,packages,hasPkgInfo);
}
