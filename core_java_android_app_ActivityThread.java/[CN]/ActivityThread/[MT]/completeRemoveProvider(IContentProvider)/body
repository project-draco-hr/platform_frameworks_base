{
  IBinder jBinder=provider.asBinder();
  String remoteProviderName=null;
synchronized (mProviderMap) {
    ProviderRefCount prc=mProviderRefCountMap.get(jBinder);
    if (prc == null) {
      if (localLOGV)       Slog.v(TAG,"completeRemoveProvider: release not needed");
      return;
    }
    if (prc.count != 0) {
      if (localLOGV)       Slog.v(TAG,"completeRemoveProvider: lost the race, " + "provider still in use");
      return;
    }
    mProviderRefCountMap.remove(jBinder);
    Iterator<ProviderClientRecord> iter=mProviderMap.values().iterator();
    while (iter.hasNext()) {
      ProviderClientRecord pr=iter.next();
      IBinder myBinder=pr.mProvider.asBinder();
      if (myBinder == jBinder) {
        iter.remove();
        if (pr.mLocalProvider == null) {
          myBinder.unlinkToDeath(pr,0);
          if (remoteProviderName == null) {
            remoteProviderName=pr.mName;
          }
        }
      }
    }
  }
  if (remoteProviderName != null) {
    try {
      if (localLOGV) {
        Slog.v(TAG,"removeProvider: Invoking ActivityManagerNative." + "removeContentProvider(" + remoteProviderName + ")");
      }
      ActivityManagerNative.getDefault().removeContentProvider(getApplicationThread(),remoteProviderName);
    }
 catch (    RemoteException e) {
    }
  }
}
