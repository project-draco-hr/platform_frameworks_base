{
  int changes=0;
  Map<OSUProvider,ScanInstance> aged=new HashMap<>(mCache);
  for (  Map.Entry<OSUProvider,ScanResult> entry : mBatchedOSUs.entrySet()) {
    ScanInstance current=aged.remove(entry.getKey());
    if (current == null || !current.bssidEqual(entry.getValue())) {
      mCache.put(entry.getKey(),new ScanInstance(entry.getValue(),mInstant));
      changes++;
      if (current == null) {
        Log.d("ZXZ","Add OSU " + entry.getKey() + " from "+ entry.getValue().SSID);
      }
 else {
        Log.d("ZXZ","Update OSU " + entry.getKey() + " with "+ entry.getValue().SSID+ " to "+ current);
      }
    }
 else {
      Log.d("ZXZ","Existing OSU " + entry.getKey() + ", "+ current.getInstant()+ " -> "+ mInstant);
      current.updateInstant(mInstant);
    }
  }
  for (  Map.Entry<OSUProvider,ScanInstance> entry : aged.entrySet()) {
    if (mInstant - entry.getValue().getInstant() > SCAN_BATCH_HISTORY_SIZE) {
      Log.d("ZXZ","Remove OSU " + entry.getKey() + ", "+ entry.getValue().getInstant()+ " @ "+ mInstant);
      mCache.remove(entry.getKey());
      changes++;
    }
  }
  mInstant++;
  clear();
  if (changes > 0) {
    Map<OSUProvider,ScanResult> results=new HashMap<>(mCache.size());
    for (    Map.Entry<OSUProvider,ScanInstance> entry : mCache.entrySet()) {
      results.put(entry.getKey(),entry.getValue().getScanResult());
    }
    return results;
  }
 else {
    return null;
  }
}
