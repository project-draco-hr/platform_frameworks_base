{
  LayoutInflater inflater=LayoutInflater.from(mContext);
  if (mProgressStyle == STYLE_HORIZONTAL) {
    mViewUpdateHandler=new Handler(){
      @Override public void handleMessage(      Message msg){
        super.handleMessage(msg);
        int progress=mProgress.getProgress();
        int max=mProgress.getMax();
        double percent=(double)progress / (double)max;
        mProgressNumber.setText(progress + "/" + max);
        mProgressPercent.setText(mProgressPercentFormat.format(percent));
      }
    }
;
    View view=inflater.inflate(R.layout.alert_dialog_progress,null);
    mProgress=(ProgressBar)view.findViewById(R.id.progress);
    mProgressNumber=(TextView)view.findViewById(R.id.progress_number);
    mProgressPercent=(TextView)view.findViewById(R.id.progress_percent);
    mProgressPercentFormat=NumberFormat.getPercentInstance();
    mProgressPercentFormat.setMaximumFractionDigits(0);
    setView(view);
  }
 else {
    View view=inflater.inflate(R.layout.progress_dialog,null);
    mProgress=(ProgressBar)view.findViewById(R.id.progress);
    mMessageView=(TextView)view.findViewById(R.id.message);
    setView(view);
  }
  if (mMax > 0) {
    setMax(mMax);
  }
  if (mProgressVal > 0) {
    setProgress(mProgressVal);
  }
  if (mSecondaryProgressVal > 0) {
    setSecondaryProgress(mSecondaryProgressVal);
  }
  if (mIncrementBy > 0) {
    incrementProgressBy(mIncrementBy);
  }
  if (mIncrementSecondaryBy > 0) {
    incrementSecondaryProgressBy(mIncrementSecondaryBy);
  }
  if (mProgressDrawable != null) {
    setProgressDrawable(mProgressDrawable);
  }
  if (mIndeterminateDrawable != null) {
    setIndeterminateDrawable(mIndeterminateDrawable);
  }
  if (mMessage != null) {
    setMessage(mMessage);
  }
  setIndeterminate(mIndeterminate);
  onProgressChanged();
  super.onCreate(savedInstanceState);
}
