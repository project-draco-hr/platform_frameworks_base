{
  if (persist) {
    persistBluetoothSetting(true);
  }
  mQuietEnable=quietMode;
synchronized (mConnection) {
    if (mBluetooth == null) {
      Message timeoutMsg=mHandler.obtainMessage(MESSAGE_TIMEOUT_BIND);
      mHandler.sendMessageDelayed(timeoutMsg,TIMEOUT_BIND_MS);
      mConnection.setGetNameAddressOnly(false);
      Intent i=new Intent(IBluetooth.class.getName());
      if (!mContext.bindService(i,mConnection,Context.BIND_AUTO_CREATE)) {
        mHandler.removeMessages(MESSAGE_TIMEOUT_BIND);
        Log.e(TAG,"Fail to bind to: " + IBluetooth.class.getName());
      }
    }
 else {
      if (!isNameAndAddressSet()) {
        try {
          if (DBG)           Log.d(TAG,"Getting and storing Bluetooth name and address prior to enable.");
          storeNameAndAddress(mBluetooth.getName(),mBluetooth.getAddress());
        }
 catch (        RemoteException e) {
          Log.e(TAG,"",e);
        }
        ;
      }
      try {
        if (!mQuietEnable) {
          if (!mBluetooth.enable()) {
            Log.e(TAG,"IBluetooth.enable() returned false");
          }
        }
 else {
          if (!mBluetooth.enableNoAutoConnect()) {
            Log.e(TAG,"IBluetooth.enableNoAutoConnect() returned false");
          }
        }
      }
 catch (      RemoteException e) {
        Log.e(TAG,"Unable to call enable()",e);
      }
    }
  }
}
