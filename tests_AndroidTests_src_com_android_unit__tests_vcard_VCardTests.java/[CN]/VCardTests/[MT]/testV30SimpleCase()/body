{
  VCardParser_V21 parser=new VCardParser_V30();
  VNodeBuilder builder=new VNodeBuilder();
  InputStream is=getContext().getResources().openRawResource(R.raw.v30_simple);
  assertEquals(true,parser.parse(is,"ISO-8859-1",builder));
  is.close();
  assertEquals(1,builder.vNodeList.size());
  PropertyNodesVerifier verifier=new PropertyNodesVerifier(new PropertyNode("VERSION","3.0",null,null,null,null,null),new PropertyNode("FN","And Roid",null,null,null,null,null),new PropertyNode("N","And;Roid;;;",Arrays.asList("And","Roid","","",""),null,null,null,null),new PropertyNode("ORG","Open;Handset; Alliance",Arrays.asList("Open","Handset"," Alliance"),null,null,null,null),new PropertyNode("SORT-STRING","android",null,null,null,null,null),new PropertyNode("TEL","0300000000",null,null,null,new HashSet<String>(Arrays.asList("PREF","VOICE")),null),new PropertyNode("CLASS","PUBLIC",null,null,null,null,null),new PropertyNode("X-GNO","0",null,null,null,null,null),new PropertyNode("X-GN","group0",null,null,null,null,null),new PropertyNode("X-REDUCTION","0",null,null,null,null,null),new PropertyNode("REV","20081031T065854Z",null,null,null,null,null));
  verifier.verify(builder.vNodeList.get(0));
}
