{
  mX=left;
  mY=top;
  mScrollX=view.getScrollX();
  mScrollY=view.getScrollY();
  mWidth=view.getWidth();
  mHeight=view.getHeight();
  int flags=view.getVisibility();
  if (!view.isEnabled()) {
    flags|=FLAGS_DISABLED;
  }
  if (!view.isClickable()) {
    flags|=FLAGS_CLICKABLE;
  }
  if (!view.isFocusable()) {
    flags|=FLAGS_FOCUSABLE;
  }
  if (!view.isFocused()) {
    flags|=FLAGS_FOCUSED;
  }
  if (!view.isAccessibilityFocused()) {
    flags|=FLAGS_ACCESSIBILITY_FOCUSED;
  }
  if (!view.isSelected()) {
    flags|=FLAGS_SELECTED;
  }
  if (!view.isActivated()) {
    flags|=FLAGS_ACTIVATED;
  }
  if (!view.isLongClickable()) {
    flags|=FLAGS_LONG_CLICKABLE;
  }
  if (view instanceof Checkable) {
    flags|=FLAGS_CHECKABLE;
    if (((Checkable)view).isChecked()) {
      flags|=FLAGS_CHECKED;
    }
  }
  mFlags=flags;
  mClassName=view.getAccessibilityClassName().toString();
  mContentDescription=contentDescription != null ? contentDescription.toString() : null;
  final ViewAssistDataImpl viewData=assistData.mTmpViewAssistDataImpl;
  final Bundle extras=assistData.mTmpExtras;
  view.onProvideAssistData(viewData,extras);
  if (viewData.mText != null || viewData.mHint != null) {
    mText=new ViewNodeTextImpl(viewData);
    assistData.mTmpViewAssistDataImpl=new ViewAssistDataImpl();
  }
 else {
    mText=null;
  }
  if (!extras.isEmpty()) {
    mExtras=extras;
    assistData.mTmpExtras=new Bundle();
  }
 else {
    mExtras=null;
  }
  if (view instanceof ViewGroup) {
    ViewGroup vg=(ViewGroup)view;
    final int NCHILDREN=vg.getChildCount();
    if (NCHILDREN > 0) {
      mChildren=new ViewNodeImpl[NCHILDREN];
      for (int i=0; i < NCHILDREN; i++) {
        mChildren[i]=new ViewNodeImpl(assistData,vg.getChildAt(i));
      }
    }
 else {
      mChildren=null;
    }
  }
 else {
    mChildren=null;
  }
}
