{
synchronized (mPointers) {
    int action=event.getAction();
    int NP=mPointers.size();
    if (action == MotionEvent.ACTION_DOWN) {
      mVelocity.clear();
      for (int p=0; p < NP; p++) {
        final PointerState ps=mPointers.get(p);
        ps.mXs.clear();
        ps.mYs.clear();
        ps.mCurDown=false;
      }
      mPointers.get(0).mCurDown=true;
      mMaxNumPointers=0;
      if (mPrintCoords) {
        Log.i("Pointer","Pointer 1: DOWN");
      }
    }
    if ((action & MotionEvent.ACTION_MASK) == MotionEvent.ACTION_POINTER_DOWN) {
      final int index=(action & MotionEvent.ACTION_POINTER_INDEX_MASK) >> MotionEvent.ACTION_POINTER_INDEX_SHIFT;
      final int id=event.getPointerId(index);
      while (NP <= id) {
        PointerState ps=new PointerState();
        mPointers.add(ps);
        NP++;
      }
      final PointerState ps=mPointers.get(id);
      ps.mCurDown=true;
      if (mPrintCoords) {
        Log.i("Pointer","Pointer " + (id + 1) + ": DOWN");
      }
    }
    final int NI=event.getPointerCount();
    mCurDown=action != MotionEvent.ACTION_UP && action != MotionEvent.ACTION_CANCEL;
    mCurNumPointers=mCurDown ? NI : 0;
    if (mMaxNumPointers < mCurNumPointers) {
      mMaxNumPointers=mCurNumPointers;
    }
    mVelocity.addMovement(event);
    mVelocity.computeCurrentVelocity(1);
    for (int i=0; i < NI; i++) {
      final int id=event.getPointerId(i);
      final PointerState ps=mPointers.get(id);
      final int N=event.getHistorySize();
      for (int j=0; j < N; j++) {
        if (mPrintCoords) {
          Log.i("Pointer","Pointer " + (id + 1) + ": ("+ event.getHistoricalX(i,j)+ ", "+ event.getHistoricalY(i,j)+ ")"+ " Prs="+ event.getHistoricalPressure(i,j)+ " Size="+ event.getHistoricalSize(i,j));
        }
        ps.mXs.add(event.getHistoricalX(i,j));
        ps.mYs.add(event.getHistoricalY(i,j));
      }
      if (mPrintCoords) {
        Log.i("Pointer","Pointer " + (id + 1) + ": ("+ event.getX(i)+ ", "+ event.getY(i)+ ")"+ " Prs="+ event.getPressure(i)+ " Size="+ event.getSize(i));
      }
      ps.mXs.add(event.getX(i));
      ps.mYs.add(event.getY(i));
      ps.mCurX=(int)event.getX(i);
      ps.mCurY=(int)event.getY(i);
      ps.mCurPressure=event.getPressure(i);
      ps.mCurSize=event.getSize(i);
      ps.mCurWidth=(int)(ps.mCurSize * (getWidth() / 3));
      ps.mXVelocity=mVelocity.getXVelocity(id);
      ps.mYVelocity=mVelocity.getYVelocity(id);
    }
    if ((action & MotionEvent.ACTION_MASK) == MotionEvent.ACTION_POINTER_UP) {
      final int index=(action & MotionEvent.ACTION_POINTER_INDEX_MASK) >> MotionEvent.ACTION_POINTER_INDEX_SHIFT;
      final int id=event.getPointerId(index);
      final PointerState ps=mPointers.get(id);
      ps.mXs.add(Float.NaN);
      ps.mYs.add(Float.NaN);
      ps.mCurDown=false;
      if (mPrintCoords) {
        Log.i("Pointer","Pointer " + (id + 1) + ": UP");
      }
    }
    if (action == MotionEvent.ACTION_UP) {
      for (int i=0; i < NI; i++) {
        final int id=event.getPointerId(i);
        final PointerState ps=mPointers.get(id);
        if (ps.mCurDown) {
          ps.mCurDown=false;
          if (mPrintCoords) {
            Log.i("Pointer","Pointer " + (id + 1) + ": UP");
          }
        }
      }
    }
    postInvalidate();
  }
}
