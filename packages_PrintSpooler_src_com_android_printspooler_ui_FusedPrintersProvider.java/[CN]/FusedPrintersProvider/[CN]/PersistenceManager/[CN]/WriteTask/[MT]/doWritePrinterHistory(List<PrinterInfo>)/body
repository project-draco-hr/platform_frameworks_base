{
  FileOutputStream out=null;
  try {
    out=mStatePersistFile.startWrite();
    XmlSerializer serializer=new FastXmlSerializer();
    serializer.setOutput(out,StandardCharsets.UTF_8.name());
    serializer.startDocument(null,true);
    serializer.startTag(null,TAG_PRINTERS);
    final int printerCount=printers.size();
    for (int i=0; i < printerCount; i++) {
      PrinterInfo printer=printers.get(i);
      serializer.startTag(null,TAG_PRINTER);
      serializer.attribute(null,ATTR_NAME,printer.getName());
      String description=printer.getDescription();
      if (description != null) {
        serializer.attribute(null,ATTR_DESCRIPTION,description);
      }
      PrinterId printerId=printer.getId();
      serializer.startTag(null,TAG_PRINTER_ID);
      serializer.attribute(null,ATTR_LOCAL_ID,printerId.getLocalId());
      serializer.attribute(null,ATTR_SERVICE_NAME,printerId.getServiceName().flattenToString());
      serializer.endTag(null,TAG_PRINTER_ID);
      serializer.endTag(null,TAG_PRINTER);
      if (DEBUG) {
        Log.i(LOG_TAG,"[PERSISTED] " + printer);
      }
    }
    serializer.endTag(null,TAG_PRINTERS);
    serializer.endDocument();
    mStatePersistFile.finishWrite(out);
    if (DEBUG) {
      Log.i(LOG_TAG,"[PERSIST END]");
    }
  }
 catch (  IOException ioe) {
    Slog.w(LOG_TAG,"Failed to write printer history, restoring backup.",ioe);
    mStatePersistFile.failWrite(out);
  }
 finally {
    IoUtils.closeQuietly(out);
  }
}
