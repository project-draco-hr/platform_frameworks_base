{
  final FileInputStream in;
  try {
    in=mStatePersistFile.openRead();
  }
 catch (  FileNotFoundException fnfe) {
    if (DEBUG) {
      Log.i(LOG_TAG,"No existing printer history " + FusedPrintersProvider.this.hashCode());
    }
    return new ArrayList<>();
  }
  try {
    List<PrinterInfo> printers=new ArrayList<>();
    XmlPullParser parser=Xml.newPullParser();
    parser.setInput(in,StandardCharsets.UTF_8.name());
    parseState(parser,printers);
    mLastReadHistoryTimestamp=mStatePersistFile.getBaseFile().lastModified();
    return printers;
  }
 catch (  IllegalStateException|NullPointerException|NumberFormatException|XmlPullParserException|IOException|IndexOutOfBoundsException e) {
    Slog.w(LOG_TAG,"Failed parsing ",e);
  }
 finally {
    IoUtils.closeQuietly(in);
  }
  return Collections.emptyList();
}
