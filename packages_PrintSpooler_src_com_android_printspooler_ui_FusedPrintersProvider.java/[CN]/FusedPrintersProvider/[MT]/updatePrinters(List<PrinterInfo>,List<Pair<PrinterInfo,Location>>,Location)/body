{
  if (mPrintersUpdatedBefore && mPrinters.equals(printers) && mFavoritePrinters.equals(favoritePrinters)&& Objects.equals(mLocationOfLastPrinterUpdate,location)) {
    return;
  }
  mLocationOfLastPrinterUpdate=location;
  mPrintersUpdatedBefore=true;
  mPersistenceManager.updateHistoricalPrintersIfNeeded(printers);
  Map<PrinterId,PrinterInfo> printersMap=new LinkedHashMap<>();
  final int printerCount=printers.size();
  for (int i=0; i < printerCount; i++) {
    PrinterInfo printer=printers.get(i);
    printersMap.put(printer.getId(),printer);
  }
  computeAndDeliverResult(printersMap,favoritePrinters);
}
