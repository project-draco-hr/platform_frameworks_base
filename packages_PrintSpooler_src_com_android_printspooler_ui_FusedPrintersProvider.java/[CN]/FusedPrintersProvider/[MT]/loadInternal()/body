{
  if (mDiscoverySession == null) {
    PrintManager printManager=(PrintManager)getContext().getSystemService(Context.PRINT_SERVICE);
    mDiscoverySession=printManager.createPrinterDiscoverySession();
    mPersistenceManager.readPrinterHistory();
  }
 else   if (mPersistenceManager.isHistoryChanged()) {
    mPersistenceManager.readPrinterHistory();
  }
  if (mPersistenceManager.isReadHistoryCompleted() && !mDiscoverySession.isPrinterDiscoveryStarted()) {
    mDiscoverySession.setOnPrintersChangeListener(new OnPrintersChangeListener(){
      @Override public void onPrintersChanged(){
        if (DEBUG) {
          Log.i(LOG_TAG,"onPrintersChanged() count:" + mDiscoverySession.getPrinters().size() + " "+ FusedPrintersProvider.this.hashCode());
        }
        updatePrinters(mDiscoverySession.getPrinters(),mFavoritePrinters,getCurrentLocation());
      }
    }
);
    final int favoriteCount=mFavoritePrinters.size();
    List<PrinterId> printerIds=new ArrayList<>(favoriteCount);
    for (int i=0; i < favoriteCount; i++) {
      printerIds.add(mFavoritePrinters.get(i).first.getId());
    }
    mDiscoverySession.startPrinterDiscovery(printerIds);
    List<PrinterInfo> printers=mDiscoverySession.getPrinters();
    updatePrinters(printers,mFavoritePrinters,getCurrentLocation());
  }
}
