{
  CursorWindow window=new CursorWindow(false);
  try {
    BulkCursorToCursorAdaptor adaptor=new BulkCursorToCursorAdaptor();
    Parcel data=Parcel.obtain();
    Parcel reply=Parcel.obtain();
    try {
      data.writeInterfaceToken(IContentProvider.descriptor);
      url.writeToParcel(data,0);
      int length=0;
      if (projection != null) {
        length=projection.length;
      }
      data.writeInt(length);
      for (int i=0; i < length; i++) {
        data.writeString(projection[i]);
      }
      data.writeString(selection);
      if (selectionArgs != null) {
        length=selectionArgs.length;
      }
 else {
        length=0;
      }
      data.writeInt(length);
      for (int i=0; i < length; i++) {
        data.writeString(selectionArgs[i]);
      }
      data.writeString(sortOrder);
      data.writeStrongBinder(adaptor.getObserver().asBinder());
      window.writeToParcel(data,0);
      mRemote.transact(IContentProvider.QUERY_TRANSACTION,data,reply,0);
      DatabaseUtils.readExceptionFromParcel(reply);
      IBulkCursor bulkCursor=BulkCursorNative.asInterface(reply.readStrongBinder());
      if (bulkCursor != null) {
        int rowCount=reply.readInt();
        int idColumnPosition=reply.readInt();
        adaptor.initialize(bulkCursor,rowCount,idColumnPosition);
      }
 else {
        adaptor.close();
        adaptor=null;
      }
      return adaptor;
    }
 catch (    RemoteException ex) {
      adaptor.close();
      throw ex;
    }
catch (    RuntimeException ex) {
      adaptor.close();
      throw ex;
    }
 finally {
      data.recycle();
      reply.recycle();
    }
  }
  finally {
    window.close();
  }
}
