{
  Parcel data=Parcel.obtain();
  Parcel reply=Parcel.obtain();
  try {
    data.writeInterfaceToken(IContentProvider.descriptor);
    url.writeToParcel(data,0);
    int length=0;
    if (projection != null) {
      length=projection.length;
    }
    data.writeInt(length);
    for (int i=0; i < length; i++) {
      data.writeString(projection[i]);
    }
    data.writeString(selection);
    if (selectionArgs != null) {
      length=selectionArgs.length;
    }
 else {
      length=0;
    }
    data.writeInt(length);
    for (int i=0; i < length; i++) {
      data.writeString(selectionArgs[i]);
    }
    data.writeString(sortOrder);
    data.writeStrongBinder(observer.asBinder());
    window.writeToParcel(data,0);
    final boolean wantsCursorMetadata=(adaptor != null);
    data.writeInt(wantsCursorMetadata ? 1 : 0);
    mRemote.transact(IContentProvider.QUERY_TRANSACTION,data,reply,0);
    DatabaseUtils.readExceptionFromParcel(reply);
    IBulkCursor bulkCursor=null;
    IBinder bulkCursorBinder=reply.readStrongBinder();
    if (bulkCursorBinder != null) {
      bulkCursor=BulkCursorNative.asInterface(bulkCursorBinder);
      if (wantsCursorMetadata) {
        int rowCount=reply.readInt();
        int idColumnPosition=reply.readInt();
        if (bulkCursor != null) {
          adaptor.set(bulkCursor,rowCount,idColumnPosition);
        }
      }
    }
    return bulkCursor;
  }
  finally {
    data.recycle();
    reply.recycle();
  }
}
