{
  int[] rbuf=new int[16];
  mRS.nContextInitToClient(mRS.mContext);
  while (mRun) {
    rbuf[0]=0;
    int msg=mRS.nContextPeekMessage(mRS.mContext,auxData,true);
    int size=auxData[1];
    int subID=auxData[0];
    if (msg == RS_MESSAGE_TO_CLIENT_USER) {
      if ((size >> 2) >= rbuf.length) {
        rbuf=new int[(size + 3) >> 2];
      }
      mRS.nContextGetUserMessage(mRS.mContext,rbuf);
      if (mRS.mMessageCallback != null) {
        mRS.mMessageCallback.mData=rbuf;
        mRS.mMessageCallback.mID=subID;
        mRS.mMessageCallback.mLength=size;
        mRS.mMessageCallback.run();
      }
 else {
        throw new RSInvalidStateException("Received a message from the script with no message handler installed.");
      }
      continue;
    }
    if (msg == RS_MESSAGE_TO_CLIENT_ERROR) {
      String e=mRS.nContextGetErrorMessage(mRS.mContext);
      if (subID >= RS_ERROR_FATAL_UNKNOWN) {
        throw new RSRuntimeException("Fatal error " + subID + ", details: "+ e);
      }
      if (mRS.mErrorCallback != null) {
        mRS.mErrorCallback.mErrorMessage=e;
        mRS.mErrorCallback.mErrorNum=subID;
        mRS.mErrorCallback.run();
      }
 else {
      }
      continue;
    }
    try {
      sleep(1,0);
    }
 catch (    InterruptedException e) {
    }
  }
  Log.d(LOG_TAG,"MessageThread exiting.");
}
