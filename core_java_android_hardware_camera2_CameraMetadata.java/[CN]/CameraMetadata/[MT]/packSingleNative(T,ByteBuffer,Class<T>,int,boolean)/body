{
  if (!sizeOnly) {
    if (nativeType == TYPE_BYTE && type == Boolean.TYPE) {
      boolean asBool=(Boolean)value;
      byte asByte=(byte)(asBool ? 1 : 0);
      value=(T)(Byte)asByte;
    }
 else     if (nativeType == TYPE_BYTE && type == Integer.TYPE) {
      int asInt=(Integer)value;
      byte asByte=(byte)asInt;
      value=(T)(Byte)asByte;
    }
 else     if (type != getExpectedType(nativeType)) {
      throw new UnsupportedOperationException("Tried to pack a type of " + type + " but we expected the type to be "+ getExpectedType(nativeType));
    }
    if (nativeType == TYPE_BYTE) {
      buffer.put((Byte)value);
    }
 else     if (nativeType == TYPE_INT32) {
      buffer.putInt((Integer)value);
    }
 else     if (nativeType == TYPE_FLOAT) {
      buffer.putFloat((Float)value);
    }
 else     if (nativeType == TYPE_INT64) {
      buffer.putLong((Long)value);
    }
 else     if (nativeType == TYPE_DOUBLE) {
      buffer.putDouble((Double)value);
    }
 else     if (nativeType == TYPE_RATIONAL) {
      Rational r=(Rational)value;
      buffer.putInt(r.getNumerator());
      buffer.putInt(r.getDenominator());
    }
  }
  return getTypeSize(nativeType);
}
