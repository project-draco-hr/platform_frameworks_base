{
  if (VERBOSE)   Log.v(TAG,"getKeysStatic for " + type);
  if (type.equals(TotalCaptureResult.class)) {
    type=CaptureResult.class;
  }
  if (filterTags != null) {
    Arrays.sort(filterTags);
  }
  ArrayList<TKey> keyList=new ArrayList<TKey>();
  Field[] fields=type.getDeclaredFields();
  for (  Field field : fields) {
    if (field.getType().isAssignableFrom(keyClass) && (field.getModifiers() & Modifier.PUBLIC) != 0) {
      TKey key;
      try {
        key=(TKey)field.get(instance);
      }
 catch (      IllegalAccessException e) {
        throw new AssertionError("Can't get IllegalAccessException",e);
      }
catch (      IllegalArgumentException e) {
        throw new AssertionError("Can't get IllegalArgumentException",e);
      }
      if (instance == null || instance.getProtected(key) != null) {
        if (shouldKeyBeAdded(key,field,filterTags)) {
          keyList.add(key);
          if (VERBOSE) {
            Log.v(TAG,"getKeysStatic - key was added - " + key);
          }
        }
 else         if (VERBOSE) {
          Log.v(TAG,"getKeysStatic - key was filtered - " + key);
        }
      }
    }
  }
  return keyList;
}
