{
  final long ident=Binder.clearCallingIdentity();
  UserInfo userInfo=null;
  try {
synchronized (mInstallLock) {
synchronized (mPackagesLock) {
        UserInfo relatedUser=null;
        if (relatedUserId != UserHandle.USER_NULL) {
          relatedUser=getUserInfoLocked(relatedUserId);
          if (relatedUser == null)           return null;
        }
        if (isUserLimitReachedLocked())         return null;
        int userId=getNextAvailableIdLocked();
        userInfo=new UserInfo(userId,name,null,flags);
        File userPath=new File(mBaseUserPath,Integer.toString(userId));
        userInfo.serialNumber=mNextSerialNumber++;
        long now=System.currentTimeMillis();
        userInfo.creationTime=(now > EPOCH_PLUS_30_YEARS) ? now : 0;
        userInfo.partial=true;
        Environment.getUserSystemDirectory(userInfo.id).mkdirs();
        mUsers.put(userId,userInfo);
        writeUserListLocked();
        if (relatedUser != null) {
          if (relatedUser.relatedGroupId == UserInfo.NO_RELATED_GROUP_ID) {
            relatedUser.relatedGroupId=getNextRelatedGroupIdLocked();
          }
          userInfo.relatedGroupId=relatedUser.relatedGroupId;
          writeUserLocked(relatedUser);
        }
        writeUserLocked(userInfo);
        mPm.createNewUserLILPw(userId,userPath);
        userInfo.partial=false;
        writeUserLocked(userInfo);
        updateUserIdsLocked();
        Bundle restrictions=new Bundle();
        mUserRestrictions.append(userId,restrictions);
      }
    }
    if (userInfo != null) {
      Intent addedIntent=new Intent(Intent.ACTION_USER_ADDED);
      addedIntent.putExtra(Intent.EXTRA_USER_HANDLE,userInfo.id);
      mContext.sendBroadcastAsUser(addedIntent,UserHandle.ALL,android.Manifest.permission.MANAGE_USERS);
    }
  }
  finally {
    Binder.restoreCallingIdentity(ident);
  }
  return userInfo;
}
