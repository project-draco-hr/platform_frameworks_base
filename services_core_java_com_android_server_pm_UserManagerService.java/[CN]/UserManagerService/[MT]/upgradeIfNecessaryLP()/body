{
  final int originalVersion=mUserVersion;
  int userVersion=mUserVersion;
  if (userVersion < 1) {
    UserData userData=getUserDataNoChecks(UserHandle.USER_SYSTEM);
    if ("Primary".equals(userData.info.name)) {
      userData.info.name=mContext.getResources().getString(com.android.internal.R.string.owner_name);
      scheduleWriteUser(userData);
    }
    userVersion=1;
  }
  if (userVersion < 2) {
    UserData userData=getUserDataNoChecks(UserHandle.USER_SYSTEM);
    if ((userData.info.flags & UserInfo.FLAG_INITIALIZED) == 0) {
      userData.info.flags|=UserInfo.FLAG_INITIALIZED;
      scheduleWriteUser(userData);
    }
    userVersion=2;
  }
  if (userVersion < 4) {
    userVersion=4;
  }
  if (userVersion < 5) {
    initDefaultGuestRestrictions();
    userVersion=5;
  }
  if (userVersion < 6) {
    final boolean splitSystemUser=UserManager.isSplitSystemUser();
synchronized (mUsersLock) {
      for (int i=0; i < mUsers.size(); i++) {
        UserData userData=mUsers.valueAt(i);
        if (!splitSystemUser && userData.info.isRestricted() && (userData.info.restrictedProfileParentId == UserInfo.NO_PROFILE_GROUP_ID)) {
          userData.info.restrictedProfileParentId=UserHandle.USER_SYSTEM;
          scheduleWriteUser(userData);
        }
      }
    }
    userVersion=6;
  }
  if (userVersion < USER_VERSION) {
    Slog.w(LOG_TAG,"User version " + mUserVersion + " didn't upgrade as expected to "+ USER_VERSION);
  }
 else {
    mUserVersion=userVersion;
    if (originalVersion < mUserVersion) {
      writeUserListLP();
    }
  }
}
