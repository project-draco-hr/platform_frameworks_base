{
  FileOutputStream fos=null;
  AtomicFile userListFile=new AtomicFile(mUserListFile);
  try {
    fos=userListFile.startWrite();
    final BufferedOutputStream bos=new BufferedOutputStream(fos);
    final XmlSerializer serializer=new FastXmlSerializer();
    serializer.setOutput(bos,StandardCharsets.UTF_8.name());
    serializer.startDocument(null,true);
    serializer.setFeature("http://xmlpull.org/v1/doc/features.html#indent-output",true);
    serializer.startTag(null,TAG_USERS);
    serializer.attribute(null,ATTR_NEXT_SERIAL_NO,Integer.toString(mNextSerialNumber));
    serializer.attribute(null,ATTR_USER_VERSION,Integer.toString(mUserVersion));
    serializer.startTag(null,TAG_GUEST_RESTRICTIONS);
    writeRestrictionsLocked(serializer,mGuestRestrictions);
    serializer.endTag(null,TAG_GUEST_RESTRICTIONS);
    final int userSize=mUsers.size();
    for (int i=0; i < userSize; i++) {
      UserInfo user=mUsers.valueAt(i);
      serializer.startTag(null,TAG_USER);
      serializer.attribute(null,ATTR_ID,Integer.toString(user.id));
      serializer.endTag(null,TAG_USER);
    }
    serializer.endTag(null,TAG_USERS);
    serializer.endDocument();
    userListFile.finishWrite(fos);
  }
 catch (  Exception e) {
    userListFile.failWrite(fos);
    Slog.e(LOG_TAG,"Error writing user list");
  }
}
