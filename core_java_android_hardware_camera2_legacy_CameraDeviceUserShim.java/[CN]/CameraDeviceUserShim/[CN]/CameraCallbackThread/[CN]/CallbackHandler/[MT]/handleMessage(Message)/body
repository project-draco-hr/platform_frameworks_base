{
  try {
switch (msg.what) {
case CAMERA_ERROR:
{
        int errorCode=msg.arg1;
        CaptureResultExtras resultExtras=(CaptureResultExtras)msg.obj;
        mCallbacks.onDeviceError(errorCode,resultExtras);
        break;
      }
case CAMERA_IDLE:
    mCallbacks.onDeviceIdle();
  break;
case CAPTURE_STARTED:
{
  long timestamp=msg.arg2 & 0xFFFFFFFFL;
  timestamp=(timestamp << 32) | (msg.arg1 & 0xFFFFFFFFL);
  CaptureResultExtras resultExtras=(CaptureResultExtras)msg.obj;
  mCallbacks.onCaptureStarted(resultExtras,timestamp);
  break;
}
case RESULT_RECEIVED:
{
Object[] resultArray=(Object[])msg.obj;
CameraMetadataNative result=(CameraMetadataNative)resultArray[0];
CaptureResultExtras resultExtras=(CaptureResultExtras)resultArray[1];
mCallbacks.onResultReceived(result,resultExtras);
break;
}
default :
throw new IllegalArgumentException("Unknown callback message " + msg.what);
}
}
 catch (RemoteException e) {
throw new IllegalStateException("Received remote exception during camera callback " + msg.what,e);
}
}
