{
  super.onCreate(savedInstanceState);
  log("onCreate, inst=" + Integer.toHexString(hashCode()));
  LinearLayout contentView=new LinearLayout(this);
  contentView.setOrientation(LinearLayout.VERTICAL);
  setContentView(contentView);
  setTitle("ConnectivityManagerTestActivity");
  mConnectivityReceiver=new ConnectivityReceiver();
  registerReceiver(mConnectivityReceiver,new IntentFilter(ConnectivityManager.CONNECTIVITY_ACTION));
  mWifiReceiver=new WifiReceiver();
  IntentFilter mIntentFilter=new IntentFilter();
  mIntentFilter.addAction(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION);
  mIntentFilter.addAction(WifiManager.NETWORK_STATE_CHANGED_ACTION);
  mIntentFilter.addAction(WifiManager.WIFI_STATE_CHANGED_ACTION);
  mIntentFilter.addAction(WifiManager.SUPPLICANT_CONNECTION_CHANGE_ACTION);
  mIntentFilter.addAction(WifiManager.WIFI_AP_STATE_CHANGED_ACTION);
  mIntentFilter.addAction(ConnectivityManager.ACTION_TETHER_STATE_CHANGED);
  registerReceiver(mWifiReceiver,mIntentFilter);
  mCM=(ConnectivityManager)getSystemService(Context.CONNECTIVITY_SERVICE);
  mWifiManager=(WifiManager)getSystemService(Context.WIFI_SERVICE);
  mContext=this;
  mChannel=mWifiManager.initialize(mContext,mContext.getMainLooper(),null);
  if (mWifiManager.isWifiApEnabled()) {
    mWifiManager.setWifiApEnabled(null,false);
    log("Disable soft ap");
  }
  initializeNetworkStates();
  log("Clear Wifi before we start the test.");
  removeConfiguredNetworksAndDisableWifi();
  mWifiRegexs=mCM.getTetherableWifiRegexs();
}
