{
  final LinearLayout.LayoutParams params=new LinearLayout.LayoutParams(mIconSize + 2 * mIconHPadding,getHeight());
  ArrayList<NotificationData.Entry> activeNotifications=notificationData.getActiveNotifications();
  final int size=activeNotifications.size();
  ArrayList<StatusBarIconView> toShow=new ArrayList<>(size);
  for (int i=0; i < size; i++) {
    NotificationData.Entry ent=activeNotifications.get(i);
    if (shouldShowNotification(ent,notificationData)) {
      toShow.add(ent.icon);
    }
  }
  ArrayList<View> toRemove=new ArrayList<>();
  for (int i=0; i < mNotificationIcons.getChildCount(); i++) {
    View child=mNotificationIcons.getChildAt(i);
    if (!toShow.contains(child)) {
      toRemove.add(child);
    }
  }
  final int toRemoveCount=toRemove.size();
  for (int i=0; i < toRemoveCount; i++) {
    mNotificationIcons.removeView(toRemove.get(i));
  }
  for (int i=0; i < toShow.size(); i++) {
    View v=toShow.get(i);
    if (v.getParent() == null) {
      mNotificationIcons.addView(v,i,params);
    }
  }
  final int childCount=mNotificationIcons.getChildCount();
  for (int i=0; i < childCount; i++) {
    View actual=mNotificationIcons.getChildAt(i);
    StatusBarIconView expected=toShow.get(i);
    if (actual == expected) {
      continue;
    }
    mNotificationIcons.removeView(expected);
    mNotificationIcons.addView(expected,i);
  }
  applyNotificationIconsTint();
}
