{
  if (callback == null) {
    throw new IllegalArgumentException("Must supply an authentication callback");
  }
  if (cancel != null) {
    if (cancel.isCanceled()) {
      Log.w(TAG,"authentication already canceled");
      return;
    }
 else {
      cancel.setOnCancelListener(new OnAuthenticationCancelListener(crypto));
    }
  }
  if (mService != null)   try {
    mAuthenticationCallback=callback;
    mCryptoObject=crypto;
    long sessionId=crypto != null ? crypto.getOpId() : 0;
    mService.authenticate(mToken,sessionId,userId,mServiceReceiver,flags,mContext.getOpPackageName());
  }
 catch (  RemoteException e) {
    Log.w(TAG,"Remote exception while authenticating: ",e);
    if (callback != null) {
      callback.onAuthenticationError(FINGERPRINT_ERROR_HW_UNAVAILABLE,getErrorString(FINGERPRINT_ERROR_HW_UNAVAILABLE));
    }
  }
}
