{
  final TestNetworkCallback defaultNetworkCallback=new TestNetworkCallback();
  mCm.registerDefaultNetworkCallback(defaultNetworkCallback);
  defaultNetworkCallback.assertNoCallback();
  final TestNetworkCallback cellNetworkCallback=new TestNetworkCallback();
  final NetworkRequest cellRequest=new NetworkRequest.Builder().addTransportType(TRANSPORT_CELLULAR).build();
  mCm.requestNetwork(cellRequest,cellNetworkCallback);
  cellNetworkCallback.assertNoCallback();
  mCellNetworkAgent=new MockNetworkAgent(TRANSPORT_CELLULAR);
  mCellNetworkAgent.connect(true);
  cellNetworkCallback.expectCallback(CallbackState.AVAILABLE,mCellNetworkAgent);
  defaultNetworkCallback.expectCallback(CallbackState.AVAILABLE,mCellNetworkAgent);
  mWiFiNetworkAgent=new MockNetworkAgent(TRANSPORT_WIFI);
  mWiFiNetworkAgent.connect(true);
  cellNetworkCallback.assertNoCallback();
  defaultNetworkCallback.expectCallback(CallbackState.AVAILABLE,mWiFiNetworkAgent);
  mCellNetworkAgent.disconnect();
  cellNetworkCallback.expectCallback(CallbackState.LOST,mCellNetworkAgent);
  defaultNetworkCallback.assertNoCallback();
  mCellNetworkAgent=new MockNetworkAgent(TRANSPORT_CELLULAR);
  mCellNetworkAgent.connect(true);
  cellNetworkCallback.expectCallback(CallbackState.AVAILABLE,mCellNetworkAgent);
  defaultNetworkCallback.assertNoCallback();
  mWiFiNetworkAgent.disconnect();
  cellNetworkCallback.assertNoCallback();
  defaultNetworkCallback.expectCallback(CallbackState.LOST,mWiFiNetworkAgent);
  defaultNetworkCallback.expectCallback(CallbackState.AVAILABLE,mCellNetworkAgent);
  mCellNetworkAgent.disconnect();
  cellNetworkCallback.expectCallback(CallbackState.LOST,mCellNetworkAgent);
  defaultNetworkCallback.expectCallback(CallbackState.LOST,mCellNetworkAgent);
}
