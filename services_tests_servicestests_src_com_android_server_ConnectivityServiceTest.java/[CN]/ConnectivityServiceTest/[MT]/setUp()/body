{
  super.setUp();
  mServiceContext=new BroadcastInterceptingContext(getContext());
  mNetManager=mock(INetworkManagementService.class);
  mStatsService=mock(INetworkStatsService.class);
  mPolicyService=mock(INetworkPolicyManager.class);
  mNetFactory=mock(ConnectivityService.NetworkFactory.class);
  mMobile=new MockNetwork(TYPE_MOBILE);
  mWifi=new MockNetwork(TYPE_WIFI);
  doThrow(new IllegalArgumentException("Not supported in test environment")).when(mNetFactory).createTracker(anyInt(),isA(NetworkConfig.class));
  doReturn(mMobile.tracker).when(mNetFactory).createTracker(eq(TYPE_MOBILE),isA(NetworkConfig.class));
  doReturn(mWifi.tracker).when(mNetFactory).createTracker(eq(TYPE_WIFI),isA(NetworkConfig.class));
  final ArgumentCaptor<Handler> trackerHandler=ArgumentCaptor.forClass(Handler.class);
  doNothing().when(mMobile.tracker).startMonitoring(isA(Context.class),trackerHandler.capture());
  mService=new ConnectivityService(mServiceContext,mNetManager,mStatsService,mPolicyService,mNetFactory);
  mService.systemReady();
  mTrackerHandler=trackerHandler.getValue();
  mTrackerHandler.getLooper().setMessageLogging(new LogPrinter(Log.INFO,TAG));
}
