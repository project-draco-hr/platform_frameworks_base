{
  NetworkCapabilities filter=new NetworkCapabilities();
  filter.addCapability(NET_CAPABILITY_INTERNET);
  final HandlerThread handlerThread=new HandlerThread("testNetworkFactoryRequests");
  handlerThread.start();
  MockNetworkFactory testFactory=new MockNetworkFactory(handlerThread.getLooper(),mServiceContext,"testFactory",filter);
  testFactory.setScoreFilter(40);
  testFactory.register();
  try {
    Thread.sleep(500);
  }
 catch (  Exception e) {
  }
  assertEquals(1,testFactory.getMyRequestCount());
  assertEquals(true,testFactory.getMyStartRequested());
  MockNetworkAgent testAgent=new MockNetworkAgent(TRANSPORT_CELLULAR);
  ConditionVariable cv=waitForConnectivityBroadcasts(1);
  testAgent.connect(true);
  cv.block();
  try {
    Thread.sleep(500);
  }
 catch (  Exception e) {
  }
  assertEquals(1,testFactory.getMyRequestCount());
  assertEquals(false,testFactory.getMyStartRequested());
  ConnectivityManager.NetworkCallback[] networkCallbacks=new ConnectivityManager.NetworkCallback[10];
  for (int i=0; i < networkCallbacks.length; i++) {
    networkCallbacks[i]=new ConnectivityManager.NetworkCallback();
    NetworkRequest.Builder builder=new NetworkRequest.Builder();
    builder.addCapability(NetworkCapabilities.NET_CAPABILITY_INTERNET);
    mCm.requestNetwork(builder.build(),networkCallbacks[i]);
  }
  try {
    Thread.sleep(1000);
  }
 catch (  Exception e) {
  }
  assertEquals(11,testFactory.getMyRequestCount());
  assertEquals(false,testFactory.getMyStartRequested());
  for (int i=0; i < networkCallbacks.length; i++) {
    mCm.unregisterNetworkCallback(networkCallbacks[i]);
  }
  try {
    Thread.sleep(500);
  }
 catch (  Exception e) {
  }
  assertEquals(1,testFactory.getMyRequestCount());
  assertEquals(false,testFactory.getMyStartRequested());
  cv=waitForConnectivityBroadcasts(1);
  testAgent.disconnect();
  cv.block();
  assertEquals(1,testFactory.getMyRequestCount());
  assertEquals(true,testFactory.getMyStartRequested());
  testFactory.unregister();
  handlerThread.quit();
}
