{
  final int MAX_REQUESTS=100;
  NetworkRequest networkRequest=new NetworkRequest.Builder().build();
  ArrayList<NetworkCallback> networkCallbacks=new ArrayList<NetworkCallback>();
  try {
    for (int i=0; i < MAX_REQUESTS; i++) {
      NetworkCallback networkCallback=new NetworkCallback();
      mCm.requestNetwork(networkRequest,networkCallback);
      networkCallbacks.add(networkCallback);
    }
    fail("Registering " + MAX_REQUESTS + " NetworkRequests did not throw exception");
  }
 catch (  IllegalArgumentException expected) {
  }
  for (  NetworkCallback networkCallback : networkCallbacks) {
    mCm.unregisterNetworkCallback(networkCallback);
  }
  networkCallbacks.clear();
  try {
    for (int i=0; i < MAX_REQUESTS; i++) {
      NetworkCallback networkCallback=new NetworkCallback();
      mCm.registerNetworkCallback(networkRequest,networkCallback);
      networkCallbacks.add(networkCallback);
    }
    fail("Registering " + MAX_REQUESTS + " NetworkCallbacks did not throw exception");
  }
 catch (  IllegalArgumentException expected) {
  }
  for (  NetworkCallback networkCallback : networkCallbacks) {
    mCm.unregisterNetworkCallback(networkCallback);
  }
  networkCallbacks.clear();
  ArrayList<PendingIntent> pendingIntents=new ArrayList<PendingIntent>();
  try {
    for (int i=0; i < MAX_REQUESTS + 1; i++) {
      PendingIntent pendingIntent=PendingIntent.getBroadcast(mContext,0,new Intent("a" + i),0);
      mCm.requestNetwork(networkRequest,pendingIntent);
      pendingIntents.add(pendingIntent);
    }
    fail("Registering " + MAX_REQUESTS + " PendingIntent NetworkRequests did not throw exception");
  }
 catch (  IllegalArgumentException expected) {
  }
  for (  PendingIntent pendingIntent : pendingIntents) {
    mCm.unregisterNetworkCallback(pendingIntent);
  }
  pendingIntents.clear();
  try {
    for (int i=0; i < MAX_REQUESTS + 1; i++) {
      PendingIntent pendingIntent=PendingIntent.getBroadcast(mContext,0,new Intent("a" + i),0);
      mCm.registerNetworkCallback(networkRequest,pendingIntent);
      pendingIntents.add(pendingIntent);
    }
    fail("Registering " + MAX_REQUESTS + " PendingIntent NetworkCallbacks did not throw exception");
  }
 catch (  IllegalArgumentException expected) {
  }
  for (  PendingIntent pendingIntent : pendingIntents) {
    mCm.unregisterNetworkCallback(pendingIntent);
  }
  pendingIntents.clear();
  mService.waitForIdle(5000);
  for (int i=0; i < MAX_REQUESTS; i++) {
    NetworkCallback networkCallback=new NetworkCallback();
    mCm.requestNetwork(networkRequest,networkCallback);
    mCm.unregisterNetworkCallback(networkCallback);
  }
  mService.waitForIdle();
  for (int i=0; i < MAX_REQUESTS; i++) {
    NetworkCallback networkCallback=new NetworkCallback();
    mCm.registerNetworkCallback(networkRequest,networkCallback);
    mCm.unregisterNetworkCallback(networkCallback);
  }
  mService.waitForIdle();
  for (int i=0; i < MAX_REQUESTS; i++) {
    PendingIntent pendingIntent=PendingIntent.getBroadcast(mContext,0,new Intent("b" + i),0);
    mCm.requestNetwork(networkRequest,pendingIntent);
    mCm.unregisterNetworkCallback(pendingIntent);
  }
  mService.waitForIdle();
  for (int i=0; i < MAX_REQUESTS; i++) {
    PendingIntent pendingIntent=PendingIntent.getBroadcast(mContext,0,new Intent("c" + i),0);
    mCm.registerNetworkCallback(networkRequest,pendingIntent);
    mCm.unregisterNetworkCallback(pendingIntent);
  }
}
