{
  mSystemReady=true;
  sendMsg(mAudioHandler,MSG_LOAD_SOUND_EFFECTS,SENDMSG_QUEUE,0,0,null,0);
  mKeyguardManager=(KeyguardManager)mContext.getSystemService(Context.KEYGUARD_SERVICE);
  mScoConnectionState=AudioManager.SCO_AUDIO_STATE_ERROR;
  resetBluetoothSco();
  getBluetoothHeadset();
  Intent newIntent=new Intent(AudioManager.ACTION_SCO_AUDIO_STATE_CHANGED);
  newIntent.putExtra(AudioManager.EXTRA_SCO_AUDIO_STATE,AudioManager.SCO_AUDIO_STATE_DISCONNECTED);
  sendStickyBroadcastToAll(newIntent);
  BluetoothAdapter adapter=BluetoothAdapter.getDefaultAdapter();
  if (adapter != null) {
    adapter.getProfileProxy(mContext,mBluetoothProfileServiceListener,BluetoothProfile.A2DP);
  }
  mHdmiManager=(HdmiControlManager)mContext.getSystemService(Context.HDMI_CONTROL_SERVICE);
  if (mHdmiManager != null) {
synchronized (mHdmiManager) {
      mHdmiTvClient=mHdmiManager.getTvClient();
      if (mHdmiTvClient != null) {
        mFixedVolumeDevices&=~AudioSystem.DEVICE_ALL_HDMI_SYSTEM_AUDIO_AND_SPEAKER;
      }
      mHdmiPlaybackClient=mHdmiManager.getPlaybackClient();
      mHdmiCecSink=false;
    }
  }
  sendMsg(mAudioHandler,MSG_CONFIGURE_SAFE_MEDIA_VOLUME_FORCED,SENDMSG_REPLACE,0,0,TAG,SAFE_VOLUME_CONFIGURE_TIMEOUT_MS);
  StreamOverride.init(mContext);
  mControllerService.init();
  onIndicateSystemReady();
}
