{
  if (DEBUG_AP)   Log.d(TAG,"registerAudioPolicy for " + pcb.asBinder() + " with config:"+ policyConfig);
  String regId=null;
  boolean hasPermissionForPolicy=(PackageManager.PERMISSION_GRANTED == mContext.checkCallingPermission(android.Manifest.permission.MODIFY_AUDIO_ROUTING));
  if (!hasPermissionForPolicy) {
    Slog.w(TAG,"Can't register audio policy for pid " + Binder.getCallingPid() + " / uid "+ Binder.getCallingUid()+ ", need MODIFY_AUDIO_ROUTING");
    return null;
  }
synchronized (mAudioPolicies) {
    try {
      if (mAudioPolicies.containsKey(pcb.asBinder())) {
        Slog.e(TAG,"Cannot re-register policy");
        return null;
      }
      AudioPolicyProxy app=new AudioPolicyProxy(policyConfig,pcb,hasFocusListener);
      pcb.asBinder().linkToDeath(app,0);
      regId=app.getRegistrationId();
      mAudioPolicies.put(pcb.asBinder(),app);
    }
 catch (    RemoteException e) {
      Slog.w(TAG,"Audio policy registration failed, could not link to " + pcb + " binder death",e);
      return null;
    }
  }
  return regId;
}
