{
  if (cb == null) {
    return;
  }
  if ((PackageManager.PERMISSION_GRANTED != mContext.checkCallingOrSelfPermission(android.Manifest.permission.CAPTURE_AUDIO_OUTPUT))) {
    Log.w(TAG,"Trying to call forceRemoteSubmixFullVolume() without CAPTURE_AUDIO_OUTPUT");
    return;
  }
synchronized (mRmtSbmxFullVolDeathHandlers) {
    boolean applyRequired=false;
    if (startForcing) {
      if (!hasRmtSbmxFullVolDeathHandlerFor(cb)) {
        mRmtSbmxFullVolDeathHandlers.add(new RmtSbmxFullVolDeathHandler(cb));
        if (mRmtSbmxFullVolRefCount == 0) {
          mFullVolumeDevices|=AudioSystem.DEVICE_OUT_REMOTE_SUBMIX;
          mFixedVolumeDevices|=AudioSystem.DEVICE_OUT_REMOTE_SUBMIX;
          applyRequired=true;
        }
        mRmtSbmxFullVolRefCount++;
      }
    }
 else {
      if (discardRmtSbmxFullVolDeathHandlerFor(cb) && (mRmtSbmxFullVolRefCount > 0)) {
        mRmtSbmxFullVolRefCount--;
        if (mRmtSbmxFullVolRefCount == 0) {
          mFullVolumeDevices&=~AudioSystem.DEVICE_OUT_REMOTE_SUBMIX;
          mFixedVolumeDevices&=~AudioSystem.DEVICE_OUT_REMOTE_SUBMIX;
          applyRequired=true;
        }
      }
    }
    if (applyRequired) {
      checkAllFixedVolumeDevices(AudioSystem.STREAM_MUSIC);
      mStreamStates[AudioSystem.STREAM_MUSIC].applyAllVolumes();
    }
  }
}
