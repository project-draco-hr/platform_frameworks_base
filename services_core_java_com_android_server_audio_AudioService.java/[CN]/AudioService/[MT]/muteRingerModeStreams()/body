{
  int numStreamTypes=AudioSystem.getNumStreamTypes();
  final boolean ringerModeMute=mRingerMode == AudioManager.RINGER_MODE_VIBRATE || mRingerMode == AudioManager.RINGER_MODE_SILENT;
  for (int streamType=numStreamTypes - 1; streamType >= 0; streamType--) {
    final boolean isMuted=isStreamMutedByRingerMode(streamType);
    final boolean shouldMute=ringerModeMute && isStreamAffectedByRingerMode(streamType);
    if (isMuted == shouldMute)     continue;
    if (!shouldMute) {
      if (mStreamVolumeAlias[streamType] == AudioSystem.STREAM_RING) {
synchronized (VolumeStreamState.class) {
          final VolumeStreamState vss=mStreamStates[streamType];
          for (int i=0; i < vss.mIndexMap.size(); i++) {
            int device=vss.mIndexMap.keyAt(i);
            int value=vss.mIndexMap.valueAt(i);
            if (value == 0) {
              vss.setIndex(10,device,TAG);
            }
          }
          final int device=getDeviceForStream(streamType);
          sendMsg(mAudioHandler,MSG_PERSIST_VOLUME,SENDMSG_QUEUE,device,0,mStreamStates[streamType],PERSIST_DELAY);
        }
      }
      mStreamStates[streamType].mute(false);
      mRingerModeMutedStreams&=~(1 << streamType);
    }
 else {
      mStreamStates[streamType].mute(true);
      mRingerModeMutedStreams|=(1 << streamType);
    }
  }
}
