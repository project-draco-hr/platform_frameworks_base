{
  boolean changed=false;
  int oldIndex;
synchronized (VolumeStreamState.class) {
    oldIndex=getIndex(device);
    index=getValidIndex(index);
synchronized (mCameraSoundForced) {
      if ((mStreamType == AudioSystem.STREAM_SYSTEM_ENFORCED) && mCameraSoundForced) {
        index=mIndexMax;
      }
    }
    mIndexMap.put(device,index);
    changed=oldIndex != index;
    if (changed) {
      boolean currentDevice=(device == getDeviceForStream(mStreamType));
      int numStreamTypes=AudioSystem.getNumStreamTypes();
      for (int streamType=numStreamTypes - 1; streamType >= 0; streamType--) {
        if (streamType != mStreamType && mStreamVolumeAlias[streamType] == mStreamType) {
          int scaledIndex=rescaleIndex(index,mStreamType,streamType);
          mStreamStates[streamType].setIndex(scaledIndex,device);
          if (currentDevice) {
            mStreamStates[streamType].setIndex(scaledIndex,getDeviceForStream(streamType));
          }
        }
      }
    }
  }
  if (changed) {
    oldIndex=(oldIndex + 5) / 10;
    index=(index + 5) / 10;
    mVolumeChanged.putExtra(AudioManager.EXTRA_VOLUME_STREAM_VALUE,index);
    mVolumeChanged.putExtra(AudioManager.EXTRA_PREV_VOLUME_STREAM_VALUE,oldIndex);
    sendBroadcastToAll(mVolumeChanged);
  }
  return changed;
}
