{
  final Uri showImeUri=Settings.Secure.getUriFor(Settings.Secure.SHOW_IME_WITH_HARD_KEYBOARD);
  final Uri accessibilityRequestingNoImeUri=Settings.Secure.getUriFor(Settings.Secure.ACCESSIBILITY_SOFT_KEYBOARD_MODE);
synchronized (mMethodMap) {
    if (showImeUri.equals(uri)) {
      updateKeyboardFromSettingsLocked();
    }
 else     if (accessibilityRequestingNoImeUri.equals(uri)) {
      mAccessibilityRequestingNoSoftKeyboard=Settings.Secure.getIntForUser(mContext.getContentResolver(),Settings.Secure.ACCESSIBILITY_SOFT_KEYBOARD_MODE,0,mUserId) == 1;
      if (mAccessibilityRequestingNoSoftKeyboard) {
        final boolean showRequested=mShowRequested;
        hideCurrentInputLocked(0,null);
        mShowRequested=showRequested;
      }
 else       if (mShowRequested) {
        showCurrentInputLocked(InputMethodManager.SHOW_IMPLICIT,null);
      }
    }
 else {
      boolean enabledChanged=false;
      String newEnabled=mSettings.getEnabledInputMethodsStr();
      if (!mLastEnabled.equals(newEnabled)) {
        mLastEnabled=newEnabled;
        enabledChanged=true;
      }
      updateInputMethodsFromSettingsLocked(enabledChanged);
    }
  }
}
