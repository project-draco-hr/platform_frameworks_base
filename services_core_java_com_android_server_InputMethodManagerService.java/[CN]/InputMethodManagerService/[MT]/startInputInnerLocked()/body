{
  if (mCurMethodId == null) {
    return mNoBinding;
  }
  if (!mSystemReady) {
    return new InputBindResult(null,null,mCurMethodId,mCurSeq,mCurUserActionNotificationSequenceNumber);
  }
  InputMethodInfo info=mMethodMap.get(mCurMethodId);
  if (info == null) {
    throw new IllegalArgumentException("Unknown id: " + mCurMethodId);
  }
  unbindCurrentMethodLocked(true);
  mCurIntent=new Intent(InputMethod.SERVICE_INTERFACE);
  mCurIntent.setComponent(info.getComponent());
  mCurIntent.putExtra(Intent.EXTRA_CLIENT_LABEL,com.android.internal.R.string.input_method_binding_label);
  mCurIntent.putExtra(Intent.EXTRA_CLIENT_INTENT,PendingIntent.getActivity(mContext,0,new Intent(Settings.ACTION_INPUT_METHOD_SETTINGS),0));
  if (bindCurrentInputMethodService(mCurIntent,this,Context.BIND_AUTO_CREATE | Context.BIND_NOT_VISIBLE | Context.BIND_NOT_FOREGROUND| Context.BIND_SHOWING_UI)) {
    mLastBindTime=SystemClock.uptimeMillis();
    mHaveConnection=true;
    mCurId=info.getId();
    mCurToken=new Binder();
    try {
      if (true || DEBUG)       Slog.v(TAG,"Adding window token: " + mCurToken);
      mIWindowManager.addWindowToken(mCurToken,WindowManager.LayoutParams.TYPE_INPUT_METHOD);
    }
 catch (    RemoteException e) {
    }
    return new InputBindResult(null,null,mCurId,mCurSeq,mCurUserActionNotificationSequenceNumber);
  }
 else {
    mCurIntent=null;
    Slog.w(TAG,"Failure connecting to input method service: " + mCurIntent);
  }
  return null;
}
