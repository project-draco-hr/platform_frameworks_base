{
  if (!calledFromValidUser()) {
    return;
  }
  if (TextUtils.isEmpty(imiId) || subtypes == null)   return;
synchronized (mMethodMap) {
    final InputMethodInfo imi=mMethodMap.get(imiId);
    if (imi == null)     return;
    final String[] packageInfos;
    try {
      packageInfos=mIPackageManager.getPackagesForUid(Binder.getCallingUid());
    }
 catch (    RemoteException e) {
      Slog.e(TAG,"Failed to get package infos");
      return;
    }
    if (packageInfos != null) {
      final int packageNum=packageInfos.length;
      for (int i=0; i < packageNum; ++i) {
        if (packageInfos[i].equals(imi.getPackageName())) {
          mFileManager.addInputMethodSubtypes(imi,subtypes);
          final long ident=Binder.clearCallingIdentity();
          try {
            buildInputMethodListLocked(false);
          }
  finally {
            Binder.restoreCallingIdentity(ident);
          }
          return;
        }
      }
    }
  }
  return;
}
