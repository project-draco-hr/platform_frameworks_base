{
  mSettings.saveCurrentInputMethodAndSubtypeToHistory(mCurMethodId,mCurrentSubtype);
  mCurUserActionNotificationSequenceNumber=Math.max(mCurUserActionNotificationSequenceNumber + 1,1);
  if (DEBUG) {
    Slog.d(TAG,"Bump mCurUserActionNotificationSequenceNumber:" + mCurUserActionNotificationSequenceNumber);
  }
  if (mCurClient != null && mCurClient.client != null) {
    executeOrSendMessage(mCurClient.client,mCaller.obtainMessageIO(MSG_SET_USER_ACTION_NOTIFICATION_SEQUENCE_NUMBER,mCurUserActionNotificationSequenceNumber,mCurClient.client));
  }
  if (imi == null || subtypeId < 0) {
    mSettings.putSelectedSubtype(NOT_A_SUBTYPE_ID);
    mCurrentSubtype=null;
  }
 else {
    if (subtypeId < imi.getSubtypeCount()) {
      InputMethodSubtype subtype=imi.getSubtypeAt(subtypeId);
      mSettings.putSelectedSubtype(subtype.hashCode());
      mCurrentSubtype=subtype;
    }
 else {
      mSettings.putSelectedSubtype(NOT_A_SUBTYPE_ID);
      mCurrentSubtype=getCurrentInputMethodSubtypeLocked();
    }
  }
  if (mSystemReady && !setSubtypeOnly) {
    mSettings.putSelectedInputMethod(imi != null ? imi.getId() : "");
  }
}
