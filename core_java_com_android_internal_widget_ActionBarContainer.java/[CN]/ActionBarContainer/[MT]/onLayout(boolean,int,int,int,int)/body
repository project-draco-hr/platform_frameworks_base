{
  super.onLayout(changed,l,t,r,b);
  final View tabContainer=mTabContainer;
  final boolean hasTabs=tabContainer != null && tabContainer.getVisibility() != GONE;
  if (tabContainer != null && tabContainer.getVisibility() != GONE) {
    final int containerHeight=getMeasuredHeight();
    final LayoutParams lp=(LayoutParams)tabContainer.getLayoutParams();
    final int tabHeight=tabContainer.getMeasuredHeight();
    tabContainer.layout(l,containerHeight - tabHeight - lp.bottomMargin,r,containerHeight - lp.bottomMargin);
  }
  boolean needsInvalidate=false;
  if (mIsSplit) {
    if (mSplitBackground != null) {
      mSplitBackground.setBounds(0,0,getMeasuredWidth(),getMeasuredHeight());
      needsInvalidate=true;
    }
  }
 else {
    if (mBackground != null) {
      if (mActionBarView.getVisibility() == View.VISIBLE) {
        mBackground.setBounds(mActionBarView.getLeft(),mActionBarView.getTop(),mActionBarView.getRight(),mActionBarView.getBottom());
      }
 else       if (mActionContextView != null && mActionContextView.getVisibility() == View.VISIBLE) {
        mBackground.setBounds(mActionContextView.getLeft(),mActionContextView.getTop(),mActionContextView.getRight(),mActionContextView.getBottom());
      }
 else {
        mBackground.setBounds(0,0,0,0);
      }
      needsInvalidate=true;
    }
    mIsStacked=hasTabs;
    if (hasTabs && mStackedBackground != null) {
      mStackedBackground.setBounds(tabContainer.getLeft(),tabContainer.getTop(),tabContainer.getRight(),tabContainer.getBottom());
      needsInvalidate=true;
    }
  }
  if (needsInvalidate) {
    invalidate();
  }
}
