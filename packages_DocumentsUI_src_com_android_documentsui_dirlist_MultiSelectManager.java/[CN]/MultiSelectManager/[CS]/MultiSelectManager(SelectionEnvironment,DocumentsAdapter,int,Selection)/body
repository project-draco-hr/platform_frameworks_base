{
  assert(environment != null);
  assert(adapter != null);
  mEnvironment=environment;
  mAdapter=adapter;
  mSingleSelect=mode == MODE_SINGLE;
  if (initialSelection != null) {
    mSelection.copyFrom(initialSelection);
  }
  mAdapter.registerAdapterDataObserver(new RecyclerView.AdapterDataObserver(){
    private List<String> mModelIds;
    @Override public void onChanged(){
      mModelIds=mAdapter.getModelIds();
      mSelection.cancelProvisionalSelection();
      mSelection.intersect(mModelIds);
      if (mBandManager != null && mBandManager.isActive()) {
        mBandManager.endBandSelect();
      }
    }
    @Override public void onItemRangeChanged(    int startPosition,    int itemCount,    Object payload){
    }
    @Override public void onItemRangeInserted(    int startPosition,    int itemCount){
      mSelection.cancelProvisionalSelection();
    }
    @Override public void onItemRangeRemoved(    int startPosition,    int itemCount){
      assert(startPosition >= 0);
      assert(itemCount > 0);
      mSelection.cancelProvisionalSelection();
      mSelection.intersect(mModelIds);
    }
    @Override public void onItemRangeMoved(    int fromPosition,    int toPosition,    int itemCount){
      throw new UnsupportedOperationException();
    }
  }
);
}
