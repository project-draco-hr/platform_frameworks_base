{
  if (CHATTY) {
    Log.d(TAG,"onReceive: intent=" + intent);
  }
  final String action=intent.getAction();
  if (action.equals(ConnectivityManager.CONNECTIVITY_ACTION_IMMEDIATE) || action.equals(ConnectivityManager.INET_CONDITION_ACTION)) {
    updateConnectivity();
  }
 else   if (action.equals(Intent.ACTION_CONFIGURATION_CHANGED)) {
    mConfig=Config.readConfig(mContext);
    handleConfigurationChanged();
  }
 else   if (action.equals(Intent.ACTION_AIRPLANE_MODE_CHANGED)) {
    refreshLocale();
    updateAirplaneMode(false);
  }
 else   if (action.equals(TelephonyIntents.ACTION_DEFAULT_VOICE_SUBSCRIPTION_CHANGED)) {
    recalculateEmergency();
  }
 else   if (action.equals(TelephonyIntents.ACTION_DEFAULT_DATA_SUBSCRIPTION_CHANGED)) {
    for (    MobileSignalController controller : mMobileSignalControllers.values()) {
      controller.handleBroadcast(intent);
    }
  }
 else   if (action.equals(TelephonyIntents.ACTION_SIM_STATE_CHANGED)) {
    updateMobileControllers();
  }
 else {
    int subId=intent.getIntExtra(PhoneConstants.SUBSCRIPTION_KEY,SubscriptionManager.INVALID_SUBSCRIPTION_ID);
    if (SubscriptionManager.isValidSubscriptionId(subId)) {
      if (mMobileSignalControllers.containsKey(subId)) {
        mMobileSignalControllers.get(subId).handleBroadcast(intent);
      }
 else {
        updateMobileControllers();
      }
    }
 else {
      mWifiSignalController.handleBroadcast(intent);
    }
  }
}
