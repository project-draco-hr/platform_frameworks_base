{
  Context context=mContext;
  int combinedSignalIconId=0;
  String combinedLabel="";
  String wifiLabel="";
  String mobileLabel="";
  int N;
  final boolean emergencyOnly=isEmergencyOnly();
  if (!mHasMobileDataFeature) {
    mDataSignalIconId=mPhoneSignalIconId=0;
    mQSPhoneSignalIconId=0;
    mobileLabel="";
  }
 else {
    if (mDataConnected) {
      mobileLabel=mNetworkName;
    }
 else     if (mConnected || emergencyOnly) {
      if (hasService() || emergencyOnly) {
        mobileLabel=mNetworkName;
      }
 else {
        mobileLabel="";
      }
    }
 else {
      mobileLabel=context.getString(R.string.status_bar_settings_signal_meter_disconnected);
    }
    if (mDataConnected) {
      combinedSignalIconId=mDataSignalIconId;
      combinedLabel=mobileLabel;
      combinedSignalIconId=mDataSignalIconId;
      mContentDescriptionCombinedSignal=mContentDescriptionDataType;
    }
  }
  if (mWifiConnected) {
    if (mWifiSsid == null) {
      wifiLabel=context.getString(R.string.status_bar_settings_signal_meter_wifi_nossid);
    }
 else {
      wifiLabel=mWifiSsid;
      if (DEBUG) {
        wifiLabel+="xxxxXXXXxxxxXXXX";
      }
    }
    combinedLabel=wifiLabel;
    combinedSignalIconId=mWifiIconId;
    mContentDescriptionCombinedSignal=mContentDescriptionWifi;
  }
 else {
    if (mHasMobileDataFeature) {
      wifiLabel="";
    }
 else {
      wifiLabel=context.getString(R.string.status_bar_settings_signal_meter_disconnected);
    }
  }
  if (mBluetoothTethered) {
    combinedLabel=mContext.getString(R.string.bluetooth_tethered);
    combinedSignalIconId=mBluetoothTetherIconId;
    mContentDescriptionCombinedSignal=mContext.getString(R.string.accessibility_bluetooth_tether);
  }
  final boolean ethernetConnected=(mConnectedNetworkType == ConnectivityManager.TYPE_ETHERNET);
  if (ethernetConnected) {
    combinedLabel=context.getString(R.string.ethernet_label);
  }
  if (mAirplaneMode && (mServiceState == null || (!hasService() && !mServiceState.isEmergencyOnly()))) {
    mContentDescriptionPhoneSignal=mContext.getString(R.string.accessibility_airplane_mode);
    mAirplaneIconId=TelephonyIcons.FLIGHT_MODE_ICON;
    mPhoneSignalIconId=mDataSignalIconId=mDataTypeIconId=mQSDataTypeIconId=0;
    mQSPhoneSignalIconId=0;
    if (mWifiConnected) {
      mobileLabel="";
    }
 else {
      if (mHasMobileDataFeature) {
        wifiLabel="";
      }
 else {
        wifiLabel=context.getString(R.string.status_bar_settings_signal_meter_disconnected);
        combinedLabel=wifiLabel;
      }
      mContentDescriptionCombinedSignal=mContentDescriptionPhoneSignal;
      combinedSignalIconId=mDataSignalIconId;
    }
  }
 else   if (!mDataConnected && !mWifiConnected && !mBluetoothTethered&& !mWimaxConnected&& !ethernetConnected) {
    combinedLabel=context.getString(R.string.status_bar_settings_signal_meter_disconnected);
    combinedSignalIconId=mHasMobileDataFeature ? mDataSignalIconId : mWifiIconId;
    mContentDescriptionCombinedSignal=mHasMobileDataFeature ? mContentDescriptionDataType : mContentDescriptionWifi;
    int inetCondition=inetConditionForNetwork(ConnectivityManager.TYPE_MOBILE);
    mDataTypeIconId=0;
    mQSDataTypeIconId=0;
    if (isRoaming()) {
      mDataTypeIconId=TelephonyIcons.ROAMING_ICON;
      mQSDataTypeIconId=TelephonyIcons.QS_DATA_R[mInetCondition];
    }
  }
  if (mDemoMode) {
    mQSWifiIconId=mDemoWifiLevel < 0 ? R.drawable.ic_qs_wifi_no_network : WifiIcons.QS_WIFI_SIGNAL_STRENGTH[mDemoInetCondition][mDemoWifiLevel];
    mQSPhoneSignalIconId=mDemoMobileLevel < 0 ? R.drawable.ic_qs_signal_no_signal : TelephonyIcons.QS_TELEPHONY_SIGNAL_STRENGTH[mDemoInetCondition][mDemoMobileLevel];
    mQSDataTypeIconId=mDemoQSDataTypeIconId;
  }
  if (DEBUG) {
    Log.d(TAG,"refreshViews connected={" + (mWifiConnected ? " wifi" : "") + (mDataConnected ? " data" : "")+ " } level="+ ((mSignalStrength == null) ? "??" : Integer.toString(mSignalStrength.getLevel()))+ " combinedSignalIconId=0x"+ Integer.toHexString(combinedSignalIconId)+ "/"+ getResourceName(combinedSignalIconId)+ " mobileLabel="+ mobileLabel+ " wifiLabel="+ wifiLabel+ " emergencyOnly="+ emergencyOnly+ " combinedLabel="+ combinedLabel+ " mAirplaneMode="+ mAirplaneMode+ " mDataActivity="+ mDataActivity+ " mPhoneSignalIconId=0x"+ Integer.toHexString(mPhoneSignalIconId)+ " mQSPhoneSignalIconId=0x"+ Integer.toHexString(mQSPhoneSignalIconId)+ " mDataDirectionIconId=0x"+ Integer.toHexString(mDataDirectionIconId)+ " mDataSignalIconId=0x"+ Integer.toHexString(mDataSignalIconId)+ " mDataTypeIconId=0x"+ Integer.toHexString(mDataTypeIconId)+ " mQSDataTypeIconId=0x"+ Integer.toHexString(mQSDataTypeIconId)+ " mWifiIconId=0x"+ Integer.toHexString(mWifiIconId)+ " mQSWifiIconId=0x"+ Integer.toHexString(mQSWifiIconId)+ " mBluetoothTetherIconId=0x"+ Integer.toHexString(mBluetoothTetherIconId));
  }
  for (  NetworkSignalChangedCallback cb : mSignalsChangedCallbacks) {
    notifySignalsChangedCallbacks(cb);
  }
  if (mLastPhoneSignalIconId != mPhoneSignalIconId || mLastWifiIconId != mWifiIconId || mLastInetCondition != mInetCondition || mLastWimaxIconId != mWimaxIconId || mLastDataTypeIconId != mDataTypeIconId || mLastAirplaneMode != mAirplaneMode || mLastLocale != mLocale || mLastConnectedNetworkType != mConnectedNetworkType) {
    for (    SignalCluster cluster : mSignalClusters) {
      refreshSignalCluster(cluster);
    }
  }
  if (mLastAirplaneMode != mAirplaneMode) {
    mLastAirplaneMode=mAirplaneMode;
  }
  if (mLastLocale != mLocale) {
    mLastLocale=mLocale;
  }
  if (mLastPhoneSignalIconId != mPhoneSignalIconId) {
    mLastPhoneSignalIconId=mPhoneSignalIconId;
  }
  if (mLastDataDirectionIconId != mDataDirectionIconId) {
    mLastDataDirectionIconId=mDataDirectionIconId;
  }
  if (mLastWifiIconId != mWifiIconId) {
    mLastWifiIconId=mWifiIconId;
  }
  if (mLastInetCondition != mInetCondition) {
    mLastInetCondition=mInetCondition;
  }
  if (mLastConnectedNetworkType != mConnectedNetworkType) {
    mLastConnectedNetworkType=mConnectedNetworkType;
  }
  if (mLastWimaxIconId != mWimaxIconId) {
    mLastWimaxIconId=mWimaxIconId;
  }
  if (mLastCombinedSignalIconId != combinedSignalIconId) {
    mLastCombinedSignalIconId=combinedSignalIconId;
  }
  if (mLastDataTypeIconId != mDataTypeIconId) {
    mLastDataTypeIconId=mDataTypeIconId;
  }
  if (!mLastCombinedLabel.equals(combinedLabel)) {
    mLastCombinedLabel=combinedLabel;
    N=mCombinedLabelViews.size();
    for (int i=0; i < N; i++) {
      TextView v=mCombinedLabelViews.get(i);
      v.setText(combinedLabel);
    }
  }
  N=mWifiLabelViews.size();
  for (int i=0; i < N; i++) {
    TextView v=mWifiLabelViews.get(i);
    v.setText(wifiLabel);
    if ("".equals(wifiLabel)) {
      v.setVisibility(View.GONE);
    }
 else {
      v.setVisibility(View.VISIBLE);
    }
  }
  N=mMobileLabelViews.size();
  for (int i=0; i < N; i++) {
    TextView v=mMobileLabelViews.get(i);
    v.setText(mobileLabel);
    if ("".equals(mobileLabel)) {
      v.setVisibility(View.GONE);
    }
 else {
      v.setVisibility(View.VISIBLE);
    }
  }
  N=mEmergencyViews.size();
  for (int i=0; i < N; i++) {
    StatusBarHeaderView v=mEmergencyViews.get(i);
    v.setShowEmergencyCallsOnly(emergencyOnly);
  }
}
