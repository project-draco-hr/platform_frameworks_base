{
  if (!mDemoMode && command.equals(COMMAND_ENTER)) {
    if (DEBUG)     Log.d(TAG,"Entering demo mode");
    unregisterListeners();
    mDemoMode=true;
    mDemoInetCondition=mInetCondition;
    mDemoWifiState=mWifiSignalController.getState();
  }
 else   if (mDemoMode && command.equals(COMMAND_EXIT)) {
    if (DEBUG)     Log.d(TAG,"Exiting demo mode");
    mDemoMode=false;
    updateMobileControllers();
    for (    MobileSignalController controller : mMobileSignalControllers.values()) {
      controller.resetLastState();
    }
    mWifiSignalController.resetLastState();
    mReceiverHandler.post(mRegisterListeners);
    notifyAllListeners();
  }
 else   if (mDemoMode && command.equals(COMMAND_NETWORK)) {
    String airplane=args.getString("airplane");
    if (airplane != null) {
      boolean show=airplane.equals("show");
      mCallbackHandler.setIsAirplaneMode(new IconState(show,TelephonyIcons.FLIGHT_MODE_ICON,R.string.accessibility_airplane_mode,mContext));
    }
    String fully=args.getString("fully");
    if (fully != null) {
      mDemoInetCondition=Boolean.parseBoolean(fully);
      BitSet connected=new BitSet();
      if (mDemoInetCondition) {
        connected.set(mWifiSignalController.mTransportType);
      }
      mWifiSignalController.updateConnectivity(connected,connected);
      for (      MobileSignalController controller : mMobileSignalControllers.values()) {
        if (mDemoInetCondition) {
          connected.set(controller.mTransportType);
        }
        controller.updateConnectivity(connected,connected);
      }
    }
    String wifi=args.getString("wifi");
    if (wifi != null) {
      boolean show=wifi.equals("show");
      String level=args.getString("level");
      if (level != null) {
        mDemoWifiState.level=level.equals("null") ? -1 : Math.min(Integer.parseInt(level),WifiIcons.WIFI_LEVEL_COUNT - 1);
        mDemoWifiState.connected=mDemoWifiState.level >= 0;
      }
      mDemoWifiState.enabled=show;
      mWifiSignalController.notifyListeners();
    }
    String sims=args.getString("sims");
    if (sims != null) {
      int num=MathUtils.constrain(Integer.parseInt(sims),1,8);
      List<SubscriptionInfo> subs=new ArrayList<>();
      if (num != mMobileSignalControllers.size()) {
        mMobileSignalControllers.clear();
        int start=mSubscriptionManager.getActiveSubscriptionInfoCountMax();
        for (int i=start; i < start + num; i++) {
          subs.add(addSignalController(i,i));
        }
      }
      mCallbackHandler.setSubs(subs);
    }
    String nosim=args.getString("nosim");
    if (nosim != null) {
      mHasNoSims=nosim.equals("show");
      mCallbackHandler.setNoSims(mHasNoSims);
    }
    String mobile=args.getString("mobile");
    if (mobile != null) {
      boolean show=mobile.equals("show");
      String datatype=args.getString("datatype");
      String slotString=args.getString("slot");
      int slot=TextUtils.isEmpty(slotString) ? 0 : Integer.parseInt(slotString);
      slot=MathUtils.constrain(slot,0,8);
      List<SubscriptionInfo> subs=new ArrayList<>();
      while (mMobileSignalControllers.size() <= slot) {
        int nextSlot=mMobileSignalControllers.size();
        subs.add(addSignalController(nextSlot,nextSlot));
      }
      if (!subs.isEmpty()) {
        mCallbackHandler.setSubs(subs);
      }
      MobileSignalController controller=mMobileSignalControllers.values().toArray(new MobileSignalController[0])[slot];
      controller.getState().dataSim=datatype != null;
      if (datatype != null) {
        controller.getState().iconGroup=datatype.equals("1x") ? TelephonyIcons.ONE_X : datatype.equals("3g") ? TelephonyIcons.THREE_G : datatype.equals("4g") ? TelephonyIcons.FOUR_G : datatype.equals("e") ? TelephonyIcons.E : datatype.equals("g") ? TelephonyIcons.G : datatype.equals("h") ? TelephonyIcons.H : datatype.equals("lte") ? TelephonyIcons.LTE : datatype.equals("roam") ? TelephonyIcons.ROAMING : TelephonyIcons.UNKNOWN;
      }
      int[][] icons=TelephonyIcons.TELEPHONY_SIGNAL_STRENGTH;
      String level=args.getString("level");
      if (level != null) {
        controller.getState().level=level.equals("null") ? -1 : Math.min(Integer.parseInt(level),icons[0].length - 1);
        controller.getState().connected=controller.getState().level >= 0;
      }
      controller.getState().enabled=show;
      controller.notifyListeners();
    }
    String carrierNetworkChange=args.getString("carriernetworkchange");
    if (carrierNetworkChange != null) {
      boolean show=carrierNetworkChange.equals("show");
      for (      MobileSignalController controller : mMobileSignalControllers.values()) {
        controller.setCarrierNetworkChangeMode(show);
      }
    }
  }
}
