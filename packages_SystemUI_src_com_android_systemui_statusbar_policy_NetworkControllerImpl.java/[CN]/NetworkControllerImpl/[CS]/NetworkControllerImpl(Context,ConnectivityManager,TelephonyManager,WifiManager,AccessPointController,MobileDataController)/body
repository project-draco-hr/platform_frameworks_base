{
  mContext=context;
  final Resources res=context.getResources();
  mConnectivityManager=connectivityManager;
  mHasMobileDataFeature=mConnectivityManager.isNetworkSupported(ConnectivityManager.TYPE_MOBILE);
  mShowPhoneRSSIForData=res.getBoolean(R.bool.config_showPhoneRSSIForData);
  mShowAtLeastThreeGees=res.getBoolean(R.bool.config_showMin3G);
  mAlwaysShowCdmaRssi=res.getBoolean(com.android.internal.R.bool.config_alwaysUseCdmaRssi);
  updateWifiIcons();
  updateWimaxIcons();
  mPhone=(TelephonyManager)mContext.getSystemService(Context.TELEPHONY_SERVICE);
  mHspaDataDistinguishable=mContext.getResources().getBoolean(R.bool.config_hspa_data_distinguishable);
  mNetworkNameSeparator=mContext.getString(R.string.status_bar_network_name_separator);
  mNetworkNameDefault=mContext.getString(com.android.internal.R.string.lockscreen_carrier_default);
  mNetworkName=mNetworkNameDefault;
  mWifiManager=wifiManager;
  Handler handler=new WifiHandler();
  mWifiChannel=new AsyncChannel();
  Messenger wifiMessenger=mWifiManager.getWifiServiceMessenger();
  if (wifiMessenger != null) {
    mWifiChannel.connect(mContext,handler,wifiMessenger);
  }
  updateAirplaneMode();
  mLastLocale=mContext.getResources().getConfiguration().locale;
  mAccessPoints=accessPointController;
  mMobileDataController=mobileDataController;
  mMobileDataController.setCallback(new MobileDataController.Callback(){
    @Override public void onMobileDataEnabled(    boolean enabled){
      notifyMobileDataEnabled(enabled);
    }
  }
);
}
