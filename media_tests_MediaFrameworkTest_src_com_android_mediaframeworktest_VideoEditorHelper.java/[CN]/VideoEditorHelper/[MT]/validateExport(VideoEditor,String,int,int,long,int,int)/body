{
  File tempFile=new File(fileName);
  assertEquals("Exported FileName",tempFile.exists(),true);
  final MediaVideoItem mvi=createMediaItem(videoEditor,"m1",fileName,MediaItem.RENDERING_MODE_BLACK_BORDER);
  Log.i(TAG,"VideoCodec for file = " + fileName + "\tExpected Video Codec = "+ vCodec+ "\tActual Video Codec = "+ mvi.getVideoType());
  assertEquals("Export: Video Codec Mismatch for file = " + fileName + "\t<expected> "+ vCodec+ "\t<actual> "+ mvi.getVideoType(),vCodec,mvi.getVideoType());
  Log.i(TAG,"Height for file = " + fileName + "\tExpected Height = "+ export_height+ "\tActual VideoHeight = "+ mvi.getHeight());
  assertEquals("Export height Mismatch for file " + fileName + "\t<expected> "+ export_height+ "\t<actual> "+ mvi.getHeight(),export_height,mvi.getHeight());
  if (startTime == 0) {
    if (endTime != 0) {
      Log.i(TAG,"TimeLine Expected = " + (startTime + endTime) + "\t VideoTime= "+ mvi.getTimelineDuration());
      assertTrue("Timeline Duration Mismatch for file " + fileName + "<expected> "+ (startTime + endTime)+ "\t<actual> "+ mvi.getTimelineDuration(),checkRange((startTime + endTime),mvi.getTimelineDuration(),10));
    }
  }
 else {
    Log.i(TAG,"TimeLine Expected = " + (endTime - startTime) + "\t VideoTime= "+ mvi.getTimelineDuration());
    assertTrue("Timeline Duration Mismatch for file " + fileName + "<expected> "+ (endTime - startTime)+ "\t<actual> "+ mvi.getTimelineDuration(),checkRange((endTime - startTime),(int)mvi.getTimelineDuration(),10));
  }
}
