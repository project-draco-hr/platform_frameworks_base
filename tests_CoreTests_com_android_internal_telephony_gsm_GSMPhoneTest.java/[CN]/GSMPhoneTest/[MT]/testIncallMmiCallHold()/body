{
  Message msg;
  mGSMPhone.dial("13125551212");
  do {
    mRadioControl.progressConnectingCallState();
    assertNotNull("Message Time Out",mGSMTestHandler.waitForMessage(ANY_MESSAGE));
  }
 while (mGSMPhone.getForegroundCall().getState() != Call.State.ACTIVE);
  assertEquals(Call.State.ACTIVE,mGSMPhone.getForegroundCall().getState());
  assertEquals(Call.State.IDLE,mGSMPhone.getBackgroundCall().getState());
  mRadioControl.triggerRing("18005551212");
  msg=mGSMTestHandler.waitForMessage(EVENT_RINGING);
  assertNotNull("Message Time Out",msg);
  assertEquals(Phone.State.RINGING,mGSMPhone.getState());
  assertTrue(mGSMPhone.getRingingCall().isRinging());
  assertEquals(Call.State.WAITING,mGSMPhone.getRingingCall().getState());
  assertEquals(Call.State.ACTIVE,mGSMPhone.getForegroundCall().getState());
  assertEquals(Call.State.IDLE,mGSMPhone.getBackgroundCall().getState());
  mGSMPhone.handleInCallMmiCommands("2");
  do {
    assertNotNull("Message Time Out",mGSMTestHandler.waitForMessage(ANY_MESSAGE));
  }
 while (mGSMPhone.getRingingCall().getState() == Call.State.WAITING);
  assertFalse(mGSMPhone.getRingingCall().isRinging());
  assertEquals(Phone.State.OFFHOOK,mGSMPhone.getState());
  assertEquals(Call.State.IDLE,mGSMPhone.getRingingCall().getState());
  assertEquals(Call.State.ACTIVE,mGSMPhone.getForegroundCall().getState());
  assertEquals("18005551212",mGSMPhone.getForegroundCall().getConnections().get(0).getAddress());
  assertEquals(Call.State.HOLDING,mGSMPhone.getBackgroundCall().getState());
  assertEquals("13125551212",mGSMPhone.getBackgroundCall().getConnections().get(0).getAddress());
  mGSMPhone.handleInCallMmiCommands("2");
  msg=mGSMTestHandler.waitForMessage(EVENT_PHONE_STATE_CHANGED);
  assertNotNull("Message Time Out",msg);
  assertEquals(Call.State.ACTIVE,mGSMPhone.getForegroundCall().getState());
  assertEquals("13125551212",mGSMPhone.getForegroundCall().getConnections().get(0).getAddress());
  assertEquals(Call.State.HOLDING,mGSMPhone.getBackgroundCall().getState());
  assertEquals("18005551212",mGSMPhone.getBackgroundCall().getConnections().get(0).getAddress());
  mGSMPhone.conference();
  do {
    assertNotNull("Message Time Out",mGSMTestHandler.waitForMessage(ANY_MESSAGE));
  }
 while (mGSMPhone.getBackgroundCall().getState() != Call.State.IDLE);
  assertEquals(Call.State.ACTIVE,mGSMPhone.getForegroundCall().getState());
  assertEquals(Call.State.IDLE,mGSMPhone.getBackgroundCall().getState());
  assertEquals(2,mGSMPhone.getForegroundCall().getConnections().size());
  mGSMPhone.handleInCallMmiCommands("23");
  msg=mGSMTestHandler.waitForMessage(SUPP_SERVICE_FAILED);
  assertNotNull("Message Time Out",msg);
  assertFalse("IncallMmiCallHold: separate should have failed!",msg == null);
  mGSMPhone.handleInCallMmiCommands("21");
  do {
    assertNotNull("Message Time Out",mGSMTestHandler.waitForMessage(ANY_MESSAGE));
  }
 while (mGSMPhone.getBackgroundCall().getState() == Call.State.IDLE);
  assertEquals(Call.State.ACTIVE,mGSMPhone.getForegroundCall().getState());
  assertEquals("13125551212",mGSMPhone.getForegroundCall().getConnections().get(0).getAddress());
  assertEquals(Call.State.HOLDING,mGSMPhone.getBackgroundCall().getState());
  assertEquals("18005551212",mGSMPhone.getBackgroundCall().getConnections().get(0).getAddress());
}
