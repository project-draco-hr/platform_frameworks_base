{
  Message msg;
  AsyncResult ar;
  MmiCode mmi;
  mRadioControl.triggerIncomingUssd("0","NOTIFY message");
  do {
    msg=mTestHandler.getNextMessage();
  }
 while (msg.what != EVENT_MMI_COMPLETE);
  ar=(AsyncResult)msg.obj;
  mmi=(MmiCode)ar.result;
  assertFalse(mmi.isUssdRequest());
  mRadioControl.triggerIncomingUssd("1","REQUEST Message");
  do {
    msg=mTestHandler.getNextMessage();
  }
 while (msg.what != EVENT_MMI_COMPLETE);
  ar=(AsyncResult)msg.obj;
  mmi=(MmiCode)ar.result;
  assertTrue(mmi.isUssdRequest());
  mGSMPhone.sendUssdResponse("## TEST: TEST_GSMPhone responding...");
  do {
    msg=mTestHandler.getNextMessage();
  }
 while (msg.what != EVENT_MMI_INITIATE);
  ar=(AsyncResult)msg.obj;
  mmi=(MmiCode)ar.result;
  GsmMmiCode gsmMmi=(GsmMmiCode)mmi;
  assertTrue(gsmMmi.isPendingUSSD());
  do {
    msg=mTestHandler.getNextMessage();
  }
 while (msg.what != EVENT_MMI_COMPLETE);
  ar=(AsyncResult)msg.obj;
  mmi=(MmiCode)ar.result;
  assertNull(ar.exception);
  assertFalse(mmi.isUssdRequest());
  mRadioControl.triggerIncomingUssd("1","REQUEST Message");
  do {
    msg=mTestHandler.getNextMessage();
  }
 while (msg.what != EVENT_MMI_COMPLETE);
  ar=(AsyncResult)msg.obj;
  mmi=(MmiCode)ar.result;
  assertTrue(mmi.isUssdRequest());
  mmi.cancel();
  do {
    msg=mTestHandler.getNextMessage();
  }
 while (msg.what != EVENT_MMI_COMPLETE);
  ar=(AsyncResult)msg.obj;
  mmi=(MmiCode)ar.result;
  assertNull(ar.exception);
  assertEquals(MmiCode.State.CANCELLED,mmi.getState());
  List mmiList=mGSMPhone.getPendingMmiCodes();
  assertEquals(0,mmiList.size());
}
