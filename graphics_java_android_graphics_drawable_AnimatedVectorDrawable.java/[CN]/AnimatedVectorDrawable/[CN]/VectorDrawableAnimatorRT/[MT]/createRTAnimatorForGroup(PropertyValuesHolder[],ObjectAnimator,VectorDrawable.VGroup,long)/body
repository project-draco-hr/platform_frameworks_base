{
  long nativePtr=target.getNativePtr();
  int propertyId;
  for (int i=0; i < values.length; i++) {
    values[i].getPropertyValues(mTmpValues);
    propertyId=VectorDrawable.VGroup.getPropertyIndex(mTmpValues.propertyName);
    if (mTmpValues.type != Float.class && mTmpValues.type != float.class) {
      if (DBG_ANIMATION_VECTOR_DRAWABLE) {
        Log.e(LOGTAG,"Unsupported type: " + mTmpValues.type + ". Only float value is supported for Groups.");
      }
      continue;
    }
    if (propertyId < 0) {
      if (DBG_ANIMATION_VECTOR_DRAWABLE) {
        Log.e(LOGTAG,"Unsupported property: " + mTmpValues.propertyName + " for Vector Drawable Group");
      }
      continue;
    }
    long propertyPtr=nCreateGroupPropertyHolder(nativePtr,propertyId,(Float)mTmpValues.startValue,(Float)mTmpValues.endValue);
    if (mTmpValues.dataSource != null) {
      float[] dataPoints=createDataPoints(mTmpValues.dataSource,animator.getDuration());
      nSetPropertyHolderData(propertyPtr,dataPoints,dataPoints.length);
    }
    createNativeChildAnimator(propertyPtr,startTime,animator);
  }
}
