{
  mBuilder.append(VCardConstants.PROPERTY_TEL);
  mBuilder.append(VCARD_PARAM_SEPARATOR);
  final int type;
  if (typeAsInteger == null) {
    type=Phone.TYPE_OTHER;
  }
 else {
    type=typeAsInteger;
  }
  ArrayList<String> parameterList=new ArrayList<String>();
switch (type) {
case Phone.TYPE_HOME:
{
      parameterList.addAll(Arrays.asList(VCardConstants.PARAM_TYPE_HOME));
      break;
    }
case Phone.TYPE_WORK:
{
    parameterList.addAll(Arrays.asList(VCardConstants.PARAM_TYPE_WORK));
    break;
  }
case Phone.TYPE_FAX_HOME:
{
  parameterList.addAll(Arrays.asList(VCardConstants.PARAM_TYPE_HOME,VCardConstants.PARAM_TYPE_FAX));
  break;
}
case Phone.TYPE_FAX_WORK:
{
parameterList.addAll(Arrays.asList(VCardConstants.PARAM_TYPE_WORK,VCardConstants.PARAM_TYPE_FAX));
break;
}
case Phone.TYPE_MOBILE:
{
parameterList.add(VCardConstants.PARAM_TYPE_CELL);
break;
}
case Phone.TYPE_PAGER:
{
if (mIsDoCoMo) {
parameterList.add(VCardConstants.PARAM_TYPE_VOICE);
}
 else {
parameterList.add(VCardConstants.PARAM_TYPE_PAGER);
}
break;
}
case Phone.TYPE_OTHER:
{
parameterList.add(VCardConstants.PARAM_TYPE_VOICE);
break;
}
case Phone.TYPE_CAR:
{
parameterList.add(VCardConstants.PARAM_TYPE_CAR);
break;
}
case Phone.TYPE_COMPANY_MAIN:
{
parameterList.add(VCardConstants.PARAM_TYPE_WORK);
isPrimary=true;
break;
}
case Phone.TYPE_ISDN:
{
parameterList.add(VCardConstants.PARAM_TYPE_ISDN);
break;
}
case Phone.TYPE_MAIN:
{
isPrimary=true;
break;
}
case Phone.TYPE_OTHER_FAX:
{
parameterList.add(VCardConstants.PARAM_TYPE_FAX);
break;
}
case Phone.TYPE_TELEX:
{
parameterList.add(VCardConstants.PARAM_TYPE_TLX);
break;
}
case Phone.TYPE_WORK_MOBILE:
{
parameterList.addAll(Arrays.asList(VCardConstants.PARAM_TYPE_WORK,VCardConstants.PARAM_TYPE_CELL));
break;
}
case Phone.TYPE_WORK_PAGER:
{
parameterList.add(VCardConstants.PARAM_TYPE_WORK);
if (mIsDoCoMo) {
parameterList.add(VCardConstants.PARAM_TYPE_VOICE);
}
 else {
parameterList.add(VCardConstants.PARAM_TYPE_PAGER);
}
break;
}
case Phone.TYPE_MMS:
{
parameterList.add(VCardConstants.PARAM_TYPE_MSG);
break;
}
case Phone.TYPE_CUSTOM:
{
if (TextUtils.isEmpty(label)) {
parameterList.add(VCardConstants.PARAM_TYPE_VOICE);
}
 else if (VCardUtils.isMobilePhoneLabel(label)) {
parameterList.add(VCardConstants.PARAM_TYPE_CELL);
}
 else if (mIsV30) {
parameterList.add(label);
}
 else {
final String upperLabel=label.toUpperCase();
if (VCardUtils.isValidInV21ButUnknownToContactsPhoteType(upperLabel)) {
parameterList.add(upperLabel);
}
 else if (VCardUtils.containsOnlyAlphaDigitHyphen(label)) {
parameterList.add("X-" + label);
}
}
break;
}
case Phone.TYPE_RADIO:
case Phone.TYPE_TTY_TDD:
default :
{
break;
}
}
if (isPrimary) {
parameterList.add(VCardConstants.PARAM_TYPE_PREF);
}
if (parameterList.isEmpty()) {
appendUncommonPhoneType(mBuilder,type);
}
 else {
appendTypeParameters(parameterList);
}
mBuilder.append(VCARD_DATA_SEPARATOR);
mBuilder.append(encodedValue);
mBuilder.append(VCARD_END_OF_LINE);
}
