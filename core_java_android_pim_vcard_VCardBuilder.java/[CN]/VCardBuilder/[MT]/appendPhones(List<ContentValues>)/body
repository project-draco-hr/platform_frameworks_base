{
  boolean phoneLineExists=false;
  if (contentValuesList != null) {
    Set<String> phoneSet=new HashSet<String>();
    for (    ContentValues contentValues : contentValuesList) {
      final Integer typeAsObject=contentValues.getAsInteger(Phone.TYPE);
      final String label=contentValues.getAsString(Phone.LABEL);
      final Integer isPrimaryAsInteger=contentValues.getAsInteger(Phone.IS_PRIMARY);
      final boolean isPrimary=(isPrimaryAsInteger != null ? (isPrimaryAsInteger > 0) : false);
      String phoneNumber=contentValues.getAsString(Phone.NUMBER);
      if (phoneNumber != null) {
        phoneNumber=phoneNumber.trim();
      }
      if (TextUtils.isEmpty(phoneNumber)) {
        continue;
      }
      int type=(typeAsObject != null ? typeAsObject : DEFAULT_PHONE_TYPE);
      if (type == Phone.TYPE_PAGER) {
        phoneLineExists=true;
        if (!phoneSet.contains(phoneNumber)) {
          phoneSet.add(phoneNumber);
          appendTelLine(type,label,phoneNumber,isPrimary);
        }
      }
 else {
        List<String> phoneNumberList=splitIfSeveralPhoneNumbersExist(phoneNumber);
        if (phoneNumberList.isEmpty()) {
          continue;
        }
        phoneLineExists=true;
        for (        String actualPhoneNumber : phoneNumberList) {
          if (!phoneSet.contains(actualPhoneNumber)) {
            final int format=VCardUtils.getPhoneNumberFormat(mVCardType);
            final String formattedPhoneNumber=PhoneNumberUtils.formatNumber(actualPhoneNumber,format);
            phoneSet.add(actualPhoneNumber);
            appendTelLine(type,label,formattedPhoneNumber,isPrimary);
          }
        }
      }
    }
  }
  if (!phoneLineExists && mIsDoCoMo) {
    appendTelLine(Phone.TYPE_HOME,"","",false);
  }
  return this;
}
