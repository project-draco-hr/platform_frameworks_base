{
  if (!mChanged) {
    return true;
  }
  boolean result=false;
  PrintWriter writer=null;
  try {
    File file=new File(mGestureFileName);
    if (!file.getParentFile().exists()) {
      if (!file.getParentFile().mkdirs()) {
        return false;
      }
    }
    writer=new PrintWriter(new BufferedOutputStream(new FileOutputStream(mGestureFileName),GestureConstants.IO_BUFFER_SIZE));
    final XmlSerializer serializer=Xml.newSerializer();
    serializer.setOutput(writer);
    serializer.startDocument(Encoding.ISO_8859_1.name(),null);
    serializer.startTag(NAMESPACE,GestureConstants.XML_TAG_LIBRARY);
    final HashMap<String,ArrayList<Gesture>> maps=mEntryName2gestures;
    for (    String key : maps.keySet()) {
      ArrayList<Gesture> examples=maps.get(key);
      serializer.startTag(NAMESPACE,GestureConstants.XML_TAG_ENTRY);
      serializer.attribute(NAMESPACE,GestureConstants.XML_TAG_NAME,key);
      int count=examples.size();
      for (int i=0; i < count; i++) {
        Gesture gesture=examples.get(i);
        gesture.toXML(NAMESPACE,serializer);
      }
      serializer.endTag(NAMESPACE,GestureConstants.XML_TAG_ENTRY);
    }
    serializer.endTag(NAMESPACE,GestureConstants.XML_TAG_LIBRARY);
    serializer.endDocument();
    serializer.flush();
    mChanged=false;
    result=true;
  }
 catch (  IOException ex) {
    Log.d(LOG_TAG,"Failed to save gestures:",ex);
  }
 finally {
    GestureUtilities.closeStream(writer);
  }
  return result;
}
