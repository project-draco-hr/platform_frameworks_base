{
  mRoots.clear();
{
    final RootInfo root=new RootInfo();
    root.rootType=Root.ROOT_TYPE_SHORTCUT;
    root.icon=R.drawable.ic_dir;
    root.title=mContext.getString(R.string.root_recent);
    root.availableBytes=-1;
    mRoots.add(root);
    mRecentsRoot=root;
  }
  final ContentResolver resolver=mContext.getContentResolver();
  final PackageManager pm=mContext.getPackageManager();
  final List<ProviderInfo> providers=pm.queryContentProviders(null,-1,PackageManager.GET_META_DATA);
  for (  ProviderInfo info : providers) {
    if (info.metaData != null && info.metaData.containsKey(DocumentsContract.META_DATA_DOCUMENT_PROVIDER)) {
      final Uri rootsUri=DocumentsContract.buildRootsUri(info.authority);
      final ContentProviderClient client=resolver.acquireUnstableContentProviderClient(info.authority);
      Cursor cursor=null;
      try {
        cursor=client.query(rootsUri,null,null,null,null);
        while (cursor.moveToNext()) {
          final RootInfo root=RootInfo.fromRootsCursor(info.authority,cursor);
          mRoots.add(root);
        }
      }
 catch (      Exception e) {
        Log.w(TAG,"Failed to load some roots from " + info.authority + ": "+ e);
      }
 finally {
        IoUtils.closeQuietly(cursor);
        ContentProviderClient.closeQuietly(client);
      }
    }
  }
}
