{
  if (sCached)   return;
  sCached=true;
  sProviders.clear();
  sRoots.clear();
  sRootsList.clear();
{
    final Root root=Root.buildRecents(context);
    sRootsList.add(root);
    sRecentsRoot=root;
  }
  final PackageManager pm=context.getPackageManager();
  final List<ProviderInfo> providers=pm.queryContentProviders(null,-1,PackageManager.GET_META_DATA);
  for (  ProviderInfo providerInfo : providers) {
    if (providerInfo.metaData != null && providerInfo.metaData.containsKey(DocumentsContract.META_DATA_DOCUMENT_PROVIDER)) {
      final DocumentsProviderInfo info=DocumentsProviderInfo.parseInfo(context,providerInfo);
      if (info == null) {
        Log.w(TAG,"Missing info for " + providerInfo);
        continue;
      }
      sProviders.put(info.providerInfo.authority,info);
      final Uri uri=DocumentsContract.buildRootsUri(providerInfo.authority);
      final Cursor cursor=context.getContentResolver().query(uri,null,null,null,null);
      try {
        while (cursor.moveToNext()) {
          final Root root=Root.fromCursor(context,info,cursor);
          sRoots.put(Pair.create(info.providerInfo.authority,root.rootId),root);
          sRootsList.add(root);
        }
      }
  finally {
        cursor.close();
      }
    }
  }
}
