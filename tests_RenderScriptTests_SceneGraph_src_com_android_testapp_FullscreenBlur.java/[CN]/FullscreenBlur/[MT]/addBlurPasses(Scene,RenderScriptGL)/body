{
  SceneManager sceneManager=SceneManager.getInstance();
  ArrayList<RenderableBase> allDraw=scene.getRenderables();
  int numDraw=allDraw.size();
  ProgramRaster cullNone=ProgramRaster.CULL_NONE(rs);
  ProgramStore blendAdd=SceneManager.BLEND_ADD_DEPTH_NONE(rs);
  ProgramStore blendNone=ProgramStore.BLEND_NONE_DEPTH_NONE(rs);
  RenderState drawTex=new RenderState(mPV_Blur,mPF_Texture,blendAdd,cullNone);
  RenderState selectCol=new RenderState(mPV_Blur,mPF_SelectColor,blendNone,cullNone);
  RenderState hBlur=new RenderState(mPV_Blur,mPF_BlurH,blendNone,cullNone);
  RenderState vBlur=new RenderState(mPV_Blur,mPF_BlurV,blendNone,cullNone);
  RenderPass blurSourcePass=addPass(scene,sRenderTargetBlur0Color,sRenderTargetBlur0Depth);
  blurSourcePass.setClearColor(new Float4(1.0f,1.0f,1.0f,1.0f));
  blurSourcePass.setShouldClearColor(true);
  blurSourcePass.setClearDepth(1.0f);
  blurSourcePass.setShouldClearDepth(true);
  for (int i=0; i < numDraw; i++) {
    blurSourcePass.appendRenderable((Renderable)allDraw.get(i));
  }
  RenderPass selectColorPass=addPass(scene,sRenderTargetBlur2Color,sRenderTargetBlur2Depth);
  Renderable quad=sceneManager.getRenderableQuad("ScreenAlignedQuadS",selectCol);
  quad.appendSourceParams(new TextureParam("tex0",new Texture2D(sRenderTargetBlur0Color)));
  selectColorPass.appendRenderable(quad);
  RenderPass horizontalBlurPass=addPass(scene,sRenderTargetBlur1Color,sRenderTargetBlur1Depth);
  quad=sceneManager.getRenderableQuad("ScreenAlignedQuadH",hBlur);
  quad.appendSourceParams(new TextureParam("tex0",new Texture2D(sRenderTargetBlur2Color)));
  addOffsets(quad,1.0f / (float)sRenderTargetBlur0Color.getType().getX());
  horizontalBlurPass.appendRenderable(quad);
  RenderPass verticalBlurPass=addPass(scene,sRenderTargetBlur2Color,sRenderTargetBlur2Depth);
  quad=sceneManager.getRenderableQuad("ScreenAlignedQuadV",vBlur);
  quad.appendSourceParams(new TextureParam("tex0",new Texture2D(sRenderTargetBlur1Color)));
  addOffsets(quad,1.0f / (float)sRenderTargetBlur0Color.getType().getY());
  verticalBlurPass.appendRenderable(quad);
}
