{
  skipEmptyTextTags(parser);
  if (!accept(parser,XmlPullParser.START_TAG,TAG_JOB)) {
    return false;
  }
  parser.next();
  skipEmptyTextTags(parser);
  expect(parser,XmlPullParser.START_TAG,TAG_ID);
  parser.next();
  final int printJobId=Integer.parseInt(parser.getText());
  parser.next();
  skipEmptyTextTags(parser);
  expect(parser,XmlPullParser.END_TAG,TAG_ID);
  parser.next();
  skipEmptyTextTags(parser);
  expect(parser,XmlPullParser.START_TAG,TAG_TAG);
  parser.next();
  String tag=parser.getText();
  parser.next();
  skipEmptyTextTags(parser);
  expect(parser,XmlPullParser.END_TAG,TAG_TAG);
  parser.next();
  skipEmptyTextTags(parser);
  expect(parser,XmlPullParser.START_TAG,TAG_APP_ID);
  parser.next();
  final int appId=Integer.parseInt(parser.getText());
  parser.next();
  skipEmptyTextTags(parser);
  expect(parser,XmlPullParser.END_TAG,TAG_APP_ID);
  parser.next();
  skipEmptyTextTags(parser);
  expect(parser,XmlPullParser.START_TAG,TAG_LABEL);
  parser.next();
  String label=parser.getText();
  parser.next();
  skipEmptyTextTags(parser);
  expect(parser,XmlPullParser.END_TAG,TAG_LABEL);
  parser.next();
  skipEmptyTextTags(parser);
  expect(parser,XmlPullParser.START_TAG,TAG_STATE);
  parser.next();
  final int state=Integer.parseInt(parser.getText());
  parser.next();
  skipEmptyTextTags(parser);
  expect(parser,XmlPullParser.END_TAG,TAG_STATE);
  parser.next();
  skipEmptyTextTags(parser);
  expect(parser,XmlPullParser.START_TAG,TAG_PRINTER);
  parser.next();
  PrinterId printerId=PrinterId.unflattenFromString(parser.getText());
  parser.next();
  skipEmptyTextTags(parser);
  expect(parser,XmlPullParser.END_TAG,TAG_PRINTER);
  parser.next();
  skipEmptyTextTags(parser);
  expect(parser,XmlPullParser.START_TAG,TAG_ATTRIBUTES);
  final int attributeCount=parser.getAttributeCount();
  PrintAttributes attributes=null;
  if (attributeCount > 0) {
    PrintAttributes.Builder builder=new PrintAttributes.Builder();
    String colorMode=parser.getAttributeValue(null,ATTRIBUTE_COLOR_MODE);
    if (colorMode != null) {
      builder.setColorMode(Integer.parseInt(colorMode));
    }
    String fittingMode=parser.getAttributeValue(null,ATTRIBUTE_COLOR_MODE);
    if (fittingMode != null) {
      builder.setFittingMode(Integer.parseInt(fittingMode));
    }
  }
  parser.next();
  skipEmptyTextTags(parser);
  expect(parser,XmlPullParser.END_TAG,TAG_ATTRIBUTES);
  parser.next();
  PrintJobInfo printJob=new PrintJobInfo();
  printJob.setId(printJobId);
  printJob.setTag(tag);
  printJob.setAppId(appId);
  printJob.setLabel(label);
  printJob.setState(state);
  printJob.setAttributes(attributes);
  printJob.setPrinterId(printerId);
  mPrintJobs.add(printJob);
  if (DEBUG_PERSISTENCE) {
    Log.i(LOG_TAG,"[RESTORED] " + printJob);
  }
  skipEmptyTextTags(parser);
  expect(parser,XmlPullParser.END_TAG,TAG_JOB);
  return true;
}
