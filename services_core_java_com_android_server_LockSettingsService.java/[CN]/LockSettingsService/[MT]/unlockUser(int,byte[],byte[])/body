{
  final CountDownLatch latch=new CountDownLatch(1);
  final IProgressListener listener=new IProgressListener.Stub(){
    @Override public void onStarted(    int id,    Bundle extras) throws RemoteException {
    }
    @Override public void onProgress(    int id,    int progress,    Bundle extras) throws RemoteException {
    }
    @Override public void onFinished(    int id,    Bundle extras) throws RemoteException {
      Log.d(TAG,"unlockUser finished!");
      latch.countDown();
    }
  }
;
  try {
    ActivityManagerNative.getDefault().unlockUser(userId,token,secret,listener);
  }
 catch (  RemoteException e) {
    throw e.rethrowAsRuntimeException();
  }
  try {
    latch.await(15,TimeUnit.SECONDS);
  }
 catch (  InterruptedException e) {
    Thread.currentThread().interrupt();
  }
}
