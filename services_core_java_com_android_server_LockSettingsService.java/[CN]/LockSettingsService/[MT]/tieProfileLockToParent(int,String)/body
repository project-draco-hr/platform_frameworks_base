{
  if (DEBUG)   Slog.v(TAG,"tieProfileLockToParent for user: " + userId);
  byte[] randomLockSeed=password.getBytes(StandardCharsets.UTF_8);
  byte[] encryptionResult;
  byte[] iv;
  try {
    KeyGenerator keyGenerator=KeyGenerator.getInstance(KeyProperties.KEY_ALGORITHM_AES);
    keyGenerator.init(new SecureRandom());
    SecretKey secretKey=keyGenerator.generateKey();
    java.security.KeyStore keyStore=java.security.KeyStore.getInstance("AndroidKeyStore");
    keyStore.load(null);
    keyStore.setEntry(LockPatternUtils.PROFILE_KEY_NAME_ENCRYPT + userId,new java.security.KeyStore.SecretKeyEntry(secretKey),new KeyProtection.Builder(KeyProperties.PURPOSE_ENCRYPT).setBlockModes(KeyProperties.BLOCK_MODE_GCM).setEncryptionPaddings(KeyProperties.ENCRYPTION_PADDING_NONE).build());
    keyStore.setEntry(LockPatternUtils.PROFILE_KEY_NAME_DECRYPT + userId,new java.security.KeyStore.SecretKeyEntry(secretKey),new KeyProtection.Builder(KeyProperties.PURPOSE_DECRYPT).setBlockModes(KeyProperties.BLOCK_MODE_GCM).setEncryptionPaddings(KeyProperties.ENCRYPTION_PADDING_NONE).setUserAuthenticationRequired(true).setUserAuthenticationValidityDurationSeconds(30).build());
    SecretKey keyStoreEncryptionKey=(SecretKey)keyStore.getKey(LockPatternUtils.PROFILE_KEY_NAME_ENCRYPT + userId,null);
    Cipher cipher=Cipher.getInstance(KeyProperties.KEY_ALGORITHM_AES + "/" + KeyProperties.BLOCK_MODE_GCM+ "/"+ KeyProperties.ENCRYPTION_PADDING_NONE);
    cipher.init(Cipher.ENCRYPT_MODE,keyStoreEncryptionKey);
    encryptionResult=cipher.doFinal(randomLockSeed);
    iv=cipher.getIV();
  }
 catch (  CertificateException|UnrecoverableKeyException|IOException|BadPaddingException|IllegalBlockSizeException|KeyStoreException|NoSuchPaddingException|NoSuchAlgorithmException|InvalidKeyException e) {
    throw new RuntimeException("Failed to encrypt key",e);
  }
  ByteArrayOutputStream outputStream=new ByteArrayOutputStream();
  try {
    if (iv.length != PROFILE_KEY_IV_SIZE) {
      throw new RuntimeException("Invalid iv length: " + iv.length);
    }
    outputStream.write(iv);
    outputStream.write(encryptionResult);
  }
 catch (  IOException e) {
    throw new RuntimeException("Failed to concatenate byte arrays",e);
  }
  mStorage.writeChildProfileLock(userId,outputStream.toByteArray());
}
