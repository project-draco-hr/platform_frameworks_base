{
  if ((storedHash == null || storedHash.hash.length == 0) && TextUtils.isEmpty(credential)) {
    return VerifyCredentialResponse.OK;
  }
  if (TextUtils.isEmpty(credential)) {
    return VerifyCredentialResponse.ERROR;
  }
  if (storedHash.version == CredentialHash.VERSION_LEGACY) {
    byte[] hash=credentialUtil.toHash(credential,userId);
    if (Arrays.equals(hash,storedHash.hash)) {
      unlockKeystore(credential,userId);
      credentialUtil.setCredential(credential,null,userId);
      if (!hasChallenge) {
        return VerifyCredentialResponse.OK;
      }
    }
 else {
      return VerifyCredentialResponse.ERROR;
    }
  }
  VerifyCredentialResponse response;
  boolean shouldReEnroll=false;
  ;
  if (hasChallenge) {
    byte[] token=null;
    GateKeeperResponse gateKeeperResponse=getGateKeeperService().verifyChallenge(userId,challenge,storedHash.hash,credential.getBytes());
    int responseCode=gateKeeperResponse.getResponseCode();
    if (responseCode == GateKeeperResponse.RESPONSE_RETRY) {
      response=new VerifyCredentialResponse(gateKeeperResponse.getTimeout());
    }
 else     if (responseCode == GateKeeperResponse.RESPONSE_OK) {
      token=gateKeeperResponse.getPayload();
      if (token == null) {
        Slog.e(TAG,"verifyChallenge response had no associated payload");
        response=VerifyCredentialResponse.ERROR;
      }
 else {
        shouldReEnroll=gateKeeperResponse.getShouldReEnroll();
        response=new VerifyCredentialResponse(token);
      }
    }
 else {
      response=VerifyCredentialResponse.ERROR;
    }
  }
 else {
    GateKeeperResponse gateKeeperResponse=getGateKeeperService().verify(userId,storedHash.hash,credential.getBytes());
    int responseCode=gateKeeperResponse.getResponseCode();
    if (responseCode == GateKeeperResponse.RESPONSE_RETRY) {
      response=new VerifyCredentialResponse(gateKeeperResponse.getTimeout());
    }
 else     if (responseCode == GateKeeperResponse.RESPONSE_OK) {
      shouldReEnroll=gateKeeperResponse.getShouldReEnroll();
      response=VerifyCredentialResponse.OK;
    }
 else {
      response=VerifyCredentialResponse.ERROR;
    }
  }
  if (response.getResponseCode() == VerifyCredentialResponse.RESPONSE_OK) {
    unlockKeystore(credential,userId);
    if (shouldReEnroll) {
      credentialUtil.setCredential(credential,credential,userId);
    }
  }
  return response;
}
