{
  checkPasswordReadPermission(userId);
  CredentialHash storedHash=mStorage.readPasswordHash(userId);
  if ((storedHash == null || storedHash.hash.length == 0) && TextUtils.isEmpty(password)) {
    return null;
  }
  if (TextUtils.isEmpty(password)) {
    throw new VerificationFailedException();
  }
  if (storedHash.version == CredentialHash.VERSION_LEGACY) {
    byte[] hash=mLockPatternUtils.passwordToHash(password,userId);
    if (Arrays.equals(hash,storedHash.hash)) {
      unlockKeystore(password,userId);
      setLockPassword(password,null,userId);
      if (!hasChallenge) {
        return null;
      }
    }
 else {
      throw new VerificationFailedException();
    }
  }
  byte[] token=null;
  if (hasChallenge) {
    token=getGateKeeperService().verifyChallenge(userId,challenge,storedHash.hash,password.getBytes());
    if (token == null) {
      throw new VerificationFailedException();
    }
  }
 else   if (!getGateKeeperService().verify(userId,storedHash.hash,password.getBytes())) {
    throw new VerificationFailedException();
  }
  unlockKeystore(password,userId);
  return token;
}
