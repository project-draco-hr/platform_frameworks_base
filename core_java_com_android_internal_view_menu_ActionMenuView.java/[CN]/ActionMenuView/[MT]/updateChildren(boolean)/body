{
  final boolean reserveOverflow=mReserveOverflow;
  removeAllViews();
  final ArrayList<MenuItemImpl> itemsToShow=mMenu.getActionItems(reserveOverflow);
  final int itemCount=itemsToShow.size();
  boolean needsDivider=false;
  for (int i=0; i < itemCount; i++) {
    if (needsDivider) {
      addView(makeDividerView(),makeDividerLayoutParams());
    }
    final MenuItemImpl itemData=itemsToShow.get(i);
    View actionView=itemData.getActionView();
    if (actionView == null) {
      final int layoutId=itemData.getActionViewId();
      if (layoutId != 0) {
        LayoutInflater inflater=LayoutInflater.from(getContext());
        actionView=inflater.inflate(layoutId,this,false);
        itemData.setActionView(0);
        itemData.setActionView(actionView);
      }
    }
    if (actionView != null) {
      final ViewParent parent=actionView.getParent();
      if (parent instanceof ViewGroup) {
        ((ViewGroup)parent).removeView(actionView);
      }
      addView(actionView,makeActionViewLayoutParams(actionView));
    }
 else {
      needsDivider=addItemView(i == 0 || !needsDivider,(ActionMenuItemView)itemData.getItemView(MenuBuilder.TYPE_ACTION_BUTTON,this));
    }
  }
  if (reserveOverflow) {
    if (mMenu.getNonActionItems(true).size() > 0) {
      OverflowMenuButton button=new OverflowMenuButton(mContext);
      addView(button);
      mOverflowButton=button;
    }
 else {
      mOverflowButton=null;
    }
  }
}
