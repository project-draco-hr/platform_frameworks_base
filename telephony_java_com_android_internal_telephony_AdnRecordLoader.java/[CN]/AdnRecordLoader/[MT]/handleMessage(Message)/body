{
  AsyncResult ar;
  byte data[];
  AdnRecord adn;
  try {
switch (msg.what) {
case EVENT_EF_LINEAR_RECORD_SIZE_DONE:
      ar=(AsyncResult)(msg.obj);
    adn=(AdnRecord)(ar.userObj);
  if (ar.exception != null) {
    throw new RuntimeException("get EF record size failed",ar.exception);
  }
int[] recordSize=(int[])ar.result;
if (recordSize.length != 3 || recordNumber > recordSize[2]) {
throw new RuntimeException("get wrong EF record size format",ar.exception);
}
data=adn.buildAdnString(recordSize[0]);
if (data == null) {
throw new RuntimeException("wrong ADN format",ar.exception);
}
mFh.updateEFLinearFixed(ef,recordNumber,data,pin2,obtainMessage(EVENT_UPDATE_RECORD_DONE));
pendingExtLoads=1;
break;
case EVENT_UPDATE_RECORD_DONE:
ar=(AsyncResult)(msg.obj);
if (ar.exception != null) {
throw new RuntimeException("update EF adn record failed",ar.exception);
}
pendingExtLoads=0;
result=null;
break;
case EVENT_ADN_LOAD_DONE:
ar=(AsyncResult)(msg.obj);
data=(byte[])(ar.result);
if (ar.exception != null) {
throw new RuntimeException("load failed",ar.exception);
}
if (false) {
Log.d(LOG_TAG,"ADN EF: 0x" + Integer.toHexString(ef) + ":"+ recordNumber+ "\n"+ IccUtils.bytesToHexString(data));
}
adn=new AdnRecord(ef,recordNumber,data);
result=adn;
if (adn.hasExtendedRecord()) {
pendingExtLoads=1;
mFh.loadEFLinearFixed(extensionEF,adn.extRecord,obtainMessage(EVENT_EXT_RECORD_LOAD_DONE,adn));
}
break;
case EVENT_EXT_RECORD_LOAD_DONE:
ar=(AsyncResult)(msg.obj);
data=(byte[])(ar.result);
adn=(AdnRecord)(ar.userObj);
if (ar.exception != null) {
throw new RuntimeException("load failed",ar.exception);
}
Log.d(LOG_TAG,"ADN extension EF: 0x" + Integer.toHexString(extensionEF) + ":"+ adn.extRecord+ "\n"+ IccUtils.bytesToHexString(data));
adn.appendExtRecord(data);
pendingExtLoads--;
break;
case EVENT_ADN_LOAD_ALL_DONE:
ar=(AsyncResult)(msg.obj);
ArrayList<byte[]> datas=(ArrayList<byte[]>)(ar.result);
if (ar.exception != null) {
throw new RuntimeException("load failed",ar.exception);
}
adns=new ArrayList<AdnRecord>(datas.size());
result=adns;
pendingExtLoads=0;
for (int i=0, s=datas.size(); i < s; i++) {
adn=new AdnRecord(ef,1 + i,datas.get(i));
adns.add(adn);
if (adn.hasExtendedRecord()) {
pendingExtLoads++;
mFh.loadEFLinearFixed(extensionEF,adn.extRecord,obtainMessage(EVENT_EXT_RECORD_LOAD_DONE,adn));
}
}
break;
}
}
 catch (RuntimeException exc) {
if (userResponse != null) {
AsyncResult.forMessage(userResponse).exception=exc;
userResponse.sendToTarget();
userResponse=null;
}
return;
}
if (userResponse != null && pendingExtLoads == 0) {
AsyncResult.forMessage(userResponse).result=result;
userResponse.sendToTarget();
userResponse=null;
}
}
