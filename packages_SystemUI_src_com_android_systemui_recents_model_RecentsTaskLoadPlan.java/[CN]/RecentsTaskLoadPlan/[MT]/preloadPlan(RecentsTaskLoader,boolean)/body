{
  if (DEBUG)   Log.d(TAG,"preloadPlan");
  mActivityInfoCache.clear();
  Rect displayBounds=mSystemServicesProxy.getWindowRect();
  Resources res=mContext.getResources();
  SparseArray<ArrayList<Task>> stacksTasks=new SparseArray<>();
  if (mRawTasks == null) {
    preloadRawTasks(isTopTaskHome);
  }
  int firstStackId=-1;
  int taskCount=mRawTasks.size();
  for (int i=0; i < taskCount; i++) {
    ActivityManager.RecentTaskInfo t=mRawTasks.get(i);
    if (firstStackId < 0) {
      firstStackId=t.stackId;
    }
    Task.TaskKey taskKey=new Task.TaskKey(t.persistentId,t.stackId,t.baseIntent,t.userId,t.firstActiveTime,t.lastActiveTime);
    Task.ComponentNameKey cnKey=taskKey.getComponentNameKey();
    ActivityInfoHandle infoHandle;
    boolean hadCachedActivityInfo=false;
    if (mActivityInfoCache.containsKey(cnKey)) {
      infoHandle=mActivityInfoCache.get(cnKey);
      hadCachedActivityInfo=true;
    }
 else {
      infoHandle=new ActivityInfoHandle();
    }
    String activityLabel=loader.getAndUpdateActivityLabel(taskKey,t.taskDescription,mSystemServicesProxy,infoHandle);
    Drawable activityIcon=loader.getAndUpdateActivityIcon(taskKey,t.taskDescription,mSystemServicesProxy,res,infoHandle,false);
    int activityColor=loader.getActivityPrimaryColor(t.taskDescription,mConfig);
    if (!hadCachedActivityInfo && infoHandle.info != null) {
      mActivityInfoCache.put(cnKey,infoHandle);
    }
    Bitmap icon=t.taskDescription != null ? t.taskDescription.getInMemoryIcon() : null;
    String iconFilename=t.taskDescription != null ? t.taskDescription.getIconFilename() : null;
    Task task=new Task(taskKey,(t.id != RecentsTaskLoader.INVALID_TASK_ID),t.affiliatedTaskId,t.affiliatedTaskColor,activityLabel,activityIcon,activityColor,(i == (taskCount - 1)),mConfig.lockToAppEnabled,icon,iconFilename);
    task.thumbnail=loader.getAndUpdateThumbnail(taskKey,mSystemServicesProxy,false);
    if (DEBUG)     Log.d(TAG,"\tthumbnail: " + taskKey + ", "+ task.thumbnail);
    if (!mConfig.multiStackEnabled || Constants.DebugFlags.App.EnableMultiStackToSingleStack) {
      ArrayList<Task> stackTasks=stacksTasks.get(firstStackId);
      if (stackTasks == null) {
        stackTasks=new ArrayList<Task>();
        stacksTasks.put(firstStackId,stackTasks);
      }
      stackTasks.add(task);
    }
 else {
      ArrayList<Task> stackTasks=stacksTasks.get(t.stackId);
      if (stackTasks == null) {
        stackTasks=new ArrayList<Task>();
        stacksTasks.put(t.stackId,stackTasks);
      }
      stackTasks.add(task);
    }
  }
  SparseArray<ActivityManager.StackInfo> stackInfos=mSystemServicesProxy.getAllStackInfos();
  mStacks.clear();
  int stackCount=stacksTasks.size();
  for (int i=0; i < stackCount; i++) {
    int stackId=stacksTasks.keyAt(i);
    ActivityManager.StackInfo info=stackInfos.get(stackId);
    ArrayList<Task> stackTasks=stacksTasks.valueAt(i);
    TaskStack stack=new TaskStack(stackId);
    if (Constants.DebugFlags.App.EnableMultiStackToSingleStack) {
      stack.setBounds(displayBounds,displayBounds);
    }
 else {
      stack.setBounds(info.bounds,displayBounds);
    }
    stack.setTasks(stackTasks);
    stack.createAffiliatedGroupings(mConfig);
    mStacks.put(stackId,stack);
  }
}
