{
  RecentsConfiguration config=Recents.getConfiguration();
  SystemServicesProxy ssp=Recents.getSystemServices();
  Resources res=mContext.getResources();
  ArrayList<Task> allTasks=new ArrayList<>();
  if (mRawTasks == null) {
    preloadRawTasks(isTopTaskHome);
  }
  long lastStackActiveTime=Prefs.getLong(mContext,Prefs.Key.OVERVIEW_LAST_STACK_TASK_ACTIVE_TIME,0);
  long newLastStackActiveTime=-1;
  int taskCount=mRawTasks.size();
  for (int i=0; i < taskCount; i++) {
    ActivityManager.RecentTaskInfo t=mRawTasks.get(i);
    Task.TaskKey taskKey=new Task.TaskKey(t.persistentId,t.stackId,t.baseIntent,t.userId,t.firstActiveTime,t.lastActiveTime);
    boolean isFreeformTask=SystemServicesProxy.isFreeformStack(t.stackId);
    boolean isStackTask=isFreeformTask || (!isHistoricalTask(t) || (t.lastActiveTime >= lastStackActiveTime && i >= (taskCount - MIN_NUM_TASKS)));
    if (isStackTask && newLastStackActiveTime < 0) {
      newLastStackActiveTime=t.lastActiveTime;
    }
    String title=loader.getAndUpdateActivityTitle(taskKey,t.taskDescription);
    String contentDescription=loader.getAndUpdateContentDescription(taskKey,title,res);
    Drawable icon=isStackTask ? loader.getAndUpdateActivityIcon(taskKey,t.taskDescription,res,false) : null;
    Bitmap thumbnail=loader.getAndUpdateThumbnail(taskKey,false);
    int activityColor=loader.getActivityPrimaryColor(t.taskDescription);
    Task task=new Task(taskKey,t.affiliatedTaskId,t.affiliatedTaskColor,icon,thumbnail,title,contentDescription,activityColor,!isStackTask,t.bounds,t.taskDescription);
    allTasks.add(task);
  }
  if (newLastStackActiveTime != -1) {
    Prefs.putLong(mContext,Prefs.Key.OVERVIEW_LAST_STACK_TASK_ACTIVE_TIME,newLastStackActiveTime);
  }
  mStack=new TaskStack();
  mStack.setTasks(allTasks,false);
  mStack.createAffiliatedGroupings(mContext);
}
