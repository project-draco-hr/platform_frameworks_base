{
  if (DEBUG)   Log.d(TAG,"preloadPlan");
  mActivityInfoCache.clear();
  Resources res=mContext.getResources();
  ArrayList<Task> stackTasks=new ArrayList<>();
  if (mRawTasks == null) {
    preloadRawTasks(isTopTaskHome);
  }
  int taskCount=mRawTasks.size();
  for (int i=0; i < taskCount; i++) {
    ActivityManager.RecentTaskInfo t=mRawTasks.get(i);
    Task.TaskKey taskKey=new Task.TaskKey(t.persistentId,t.stackId,t.baseIntent,t.userId,t.firstActiveTime,t.lastActiveTime);
    Task.ComponentNameKey cnKey=taskKey.getComponentNameKey();
    ActivityInfoHandle infoHandle;
    boolean hadCachedActivityInfo=false;
    if (mActivityInfoCache.containsKey(cnKey)) {
      infoHandle=mActivityInfoCache.get(cnKey);
      hadCachedActivityInfo=true;
    }
 else {
      infoHandle=new ActivityInfoHandle();
    }
    String activityLabel=loader.getAndUpdateActivityLabel(taskKey,t.taskDescription,mSystemServicesProxy,infoHandle);
    String contentDescription=loader.getAndUpdateContentDescription(taskKey,activityLabel,mSystemServicesProxy,res);
    Drawable activityIcon=loader.getAndUpdateActivityIcon(taskKey,t.taskDescription,mSystemServicesProxy,res,infoHandle,false);
    int activityColor=loader.getActivityPrimaryColor(t.taskDescription,res);
    if (!hadCachedActivityInfo && infoHandle.info != null) {
      mActivityInfoCache.put(cnKey,infoHandle);
    }
    Bitmap icon=t.taskDescription != null ? t.taskDescription.getInMemoryIcon() : null;
    String iconFilename=t.taskDescription != null ? t.taskDescription.getIconFilename() : null;
    Task task=new Task(taskKey,(t.id != RecentsTaskLoader.INVALID_TASK_ID),t.affiliatedTaskId,t.affiliatedTaskColor,activityLabel,contentDescription,activityIcon,activityColor,(i == (taskCount - 1)),mConfig.lockToAppEnabled,icon,iconFilename);
    task.thumbnail=loader.getAndUpdateThumbnail(taskKey,mSystemServicesProxy,false);
    if (DEBUG)     Log.d(TAG,"\tthumbnail: " + taskKey + ", "+ task.thumbnail);
    stackTasks.add(task);
  }
  mStack=new TaskStack();
  mStack.setTasks(stackTasks);
  mStack.createAffiliatedGroupings(mContext);
}
