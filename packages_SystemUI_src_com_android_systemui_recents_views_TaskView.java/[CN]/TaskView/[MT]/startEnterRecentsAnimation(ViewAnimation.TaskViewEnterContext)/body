{
  RecentsConfiguration config=Recents.getConfiguration();
  RecentsActivityLaunchState launchState=config.getLaunchState();
  Resources res=mContext.getResources();
  final TaskViewTransform transform=ctx.currentTaskTransform;
  final int transitionEnterFromAppDelay=res.getInteger(R.integer.recents_enter_from_app_transition_duration);
  final int transitionEnterFromHomeDelay=res.getInteger(R.integer.recents_enter_from_home_transition_duration);
  final int taskViewEnterFromAppDuration=res.getInteger(R.integer.recents_task_enter_from_app_duration);
  final int taskViewEnterFromHomeDuration=res.getInteger(R.integer.recents_task_enter_from_home_duration);
  final int taskViewEnterFromHomeStaggerDelay=res.getInteger(R.integer.recents_task_enter_from_home_stagger_delay);
  final int taskViewAffiliateGroupEnterOffset=res.getDimensionPixelSize(R.dimen.recents_task_view_affiliate_group_enter_offset);
  if (launchState.launchedFromAppWithThumbnail) {
    if (mTask.isLaunchTarget) {
      if (Constants.DebugFlags.App.EnableThumbnailAlphaOnFrontmost) {
        mThumbnailView.startEnterRecentsAnimation(transitionEnterFromAppDelay,new Runnable(){
          @Override public void run(){
            animateDimToProgress(0,taskViewEnterFromAppDuration,ctx.postAnimationTrigger.decrementOnAnimationEnd());
          }
        }
);
      }
 else {
        animateDimToProgress(transitionEnterFromAppDelay,taskViewEnterFromAppDuration,ctx.postAnimationTrigger.decrementOnAnimationEnd());
      }
      ctx.postAnimationTrigger.increment();
      fadeInActionButton(transitionEnterFromAppDelay,taskViewEnterFromAppDuration);
    }
 else {
      if (ctx.currentTaskOccludesLaunchTarget) {
        setTranslationY(transform.translationY + taskViewAffiliateGroupEnterOffset);
        setAlpha(0f);
        animate().alpha(1f).translationY(transform.translationY).setStartDelay(transitionEnterFromAppDelay).setUpdateListener(null).setInterpolator(mFastOutSlowInInterpolator).setDuration(taskViewEnterFromHomeDuration).withEndAction(new Runnable(){
          @Override public void run(){
            ctx.postAnimationTrigger.decrement();
          }
        }
).start();
        ctx.postAnimationTrigger.increment();
      }
    }
  }
 else   if (launchState.launchedFromHome) {
    int frontIndex=(ctx.currentStackViewCount - ctx.currentStackViewIndex - 1);
    int delay=transitionEnterFromHomeDelay + frontIndex * taskViewEnterFromHomeStaggerDelay;
    setScaleX(transform.scale);
    setScaleY(transform.scale);
    if (!config.fakeShadows) {
      animate().translationZ(transform.translationZ);
    }
    animate().translationY(transform.translationY).setStartDelay(delay).setUpdateListener(ctx.updateListener).setInterpolator(mQuintOutInterpolator).setDuration(taskViewEnterFromHomeDuration + frontIndex * taskViewEnterFromHomeStaggerDelay).withEndAction(new Runnable(){
      @Override public void run(){
        ctx.postAnimationTrigger.decrement();
      }
    }
).start();
    ctx.postAnimationTrigger.increment();
  }
}
