{
  TaskViewTransform transform=ctx.currentTaskTransform;
  if (mConfig.launchedFromAppWithScreenshot) {
    if (ctx.isCurrentTaskFrontMost) {
      ctx.fullScreenshotView.animateOnEnterRecents(ctx,new Runnable(){
        @Override public void run(){
          mBarView.startEnterRecentsAnimation(0,mEnableThumbnailClip);
          setVisibility(View.VISIBLE);
          ctx.postAnimationTrigger.decrement();
        }
      }
);
    }
 else {
      animate().scaleX(transform.scale).scaleY(transform.scale).translationY(transform.translationY).setStartDelay(0).setUpdateListener(null).setInterpolator(mConfig.linearOutSlowInInterpolator).setDuration(475).withLayer().withEndAction(new Runnable(){
        @Override public void run(){
          mEnableThumbnailClip.run();
          ctx.postAnimationTrigger.decrement();
        }
      }
).start();
    }
    ctx.postAnimationTrigger.increment();
  }
 else   if (mConfig.launchedFromAppWithThumbnail) {
    if (ctx.isCurrentTaskFrontMost) {
      mBarView.startEnterRecentsAnimation(mConfig.taskBarEnterAnimDelay,mEnableThumbnailClip);
      ObjectAnimator anim=ObjectAnimator.ofInt(this,"dim",getDimOverlayFromScale());
      anim.setStartDelay(mConfig.taskBarEnterAnimDelay);
      anim.setDuration(mConfig.taskBarEnterAnimDuration);
      anim.setInterpolator(mConfig.fastOutLinearInInterpolator);
      anim.addListener(new AnimatorListenerAdapter(){
        @Override public void onAnimationEnd(        Animator animation){
          ctx.postAnimationTrigger.decrement();
        }
      }
);
      anim.start();
      ctx.postAnimationTrigger.increment();
    }
 else {
      mEnableThumbnailClip.run();
    }
  }
 else   if (mConfig.launchedFromHome) {
    int frontIndex=(ctx.currentStackViewCount - ctx.currentStackViewIndex - 1);
    int delay=mConfig.taskBarEnterAnimDelay + frontIndex * mConfig.taskViewEnterFromHomeDelay;
    if (Constants.DebugFlags.App.EnableShadows) {
      animate().translationZ(transform.translationZ);
    }
    animate().scaleX(transform.scale).scaleY(transform.scale).translationY(transform.translationY).setStartDelay(delay).setUpdateListener(null).setInterpolator(mConfig.quintOutInterpolator).setDuration(mConfig.taskViewEnterFromHomeDuration).withLayer().withEndAction(new Runnable(){
      @Override public void run(){
        mEnableThumbnailClip.run();
        ctx.postAnimationTrigger.decrement();
      }
    }
).start();
    ctx.postAnimationTrigger.increment();
  }
 else {
    mEnableThumbnailClip.run();
  }
}
