{
  RecentsConfiguration config=Recents.getConfiguration();
  Utilities.cancelAnimationWithoutCallbacks(mClipAnimation);
  toTransform.applyToTaskView(this,duration,interpolator,false,!config.fakeShadows,updateCallback);
  if (duration > 0) {
    mClipAnimation=new AnimatorSet();
    mClipAnimation.playTogether(ObjectAnimator.ofInt(mViewBounds,AnimateableViewBounds.CLIP_BOTTOM,mViewBounds.getClipBottom(),clipBottom),ObjectAnimator.ofInt(this,TaskViewTransform.LEFT,getLeft(),(int)toTransform.rect.left),ObjectAnimator.ofInt(this,TaskViewTransform.TOP,getTop(),(int)toTransform.rect.top),ObjectAnimator.ofInt(this,TaskViewTransform.RIGHT,getRight(),(int)toTransform.rect.right),ObjectAnimator.ofInt(this,TaskViewTransform.BOTTOM,getBottom(),(int)toTransform.rect.bottom),ObjectAnimator.ofFloat(mThumbnailView,TaskViewThumbnail.BITMAP_SCALE,mThumbnailView.getBitmapScale(),toTransform.thumbnailScale));
    mClipAnimation.setStartDelay(toTransform.startDelay);
    mClipAnimation.setDuration(duration);
    mClipAnimation.setInterpolator(interpolator);
    mClipAnimation.start();
  }
 else {
    mViewBounds.setClipBottom(clipBottom,false);
    mThumbnailView.setBitmapScale(toTransform.thumbnailScale);
    setLeftTopRightBottom((int)toTransform.rect.left,(int)toTransform.rect.top,(int)toTransform.rect.right,(int)toTransform.rect.bottom);
  }
  if (!config.useHardwareLayers) {
    mThumbnailView.updateThumbnailVisibility(clipBottom - getPaddingBottom());
  }
  Utilities.cancelAnimationWithoutCallbacks(mTaskProgressAnimator);
  if (duration <= 0) {
    setTaskProgress(toTransform.p);
  }
 else {
    mTaskProgressAnimator=ObjectAnimator.ofFloat(this,"taskProgress",toTransform.p);
    mTaskProgressAnimator.setDuration(duration);
    mTaskProgressAnimator.addUpdateListener(mUpdateDimListener);
    mTaskProgressAnimator.start();
  }
}
