{
  if (DEBUG) {
    Slog.d(TAG,"drawFrame: level=" + level);
  }
  if (!mPrepared) {
    return false;
  }
  if (mMode == MODE_FADE) {
    return showSurface(1.0f - level);
  }
  if (!attachEglContext()) {
    return false;
  }
  try {
    GLES20.glClearColor(0f,0f,0f,1f);
    GLES20.glClear(GLES20.GL_COLOR_BUFFER_BIT);
    double one_minus_level=1 - level;
    double cos=Math.cos(Math.PI * one_minus_level);
    double sign=cos < 0 ? -1 : 1;
    float opacity=(float)-Math.pow(one_minus_level,2) + 1;
    float saturation=(float)Math.pow(level,4);
    float scale=(float)((-Math.pow(one_minus_level,2) + 1) * 0.1d + 0.9d);
    float gamma=(float)((0.5d * sign * Math.pow(cos,2) + 0.5d) * 0.9d + 0.1d);
    drawFaded(opacity,1.f / gamma,saturation,scale);
    if (checkGlErrors("drawFrame")) {
      return false;
    }
    EGL14.eglSwapBuffers(mEglDisplay,mEglSurface);
  }
  finally {
    detachEglContext();
  }
  return showSurface(1.0f);
}
