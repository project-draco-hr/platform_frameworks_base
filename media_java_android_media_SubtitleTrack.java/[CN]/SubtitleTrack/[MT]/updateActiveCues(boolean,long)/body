{
  if (rebuild || mLastUpdateTimeMs > timeMs) {
    clearActiveCues();
  }
  for (Iterator<Pair<Long,Cue>> it=mCues.entriesBetween(mLastUpdateTimeMs,timeMs).iterator(); it.hasNext(); ) {
    Pair<Long,Cue> event=it.next();
    Cue cue=event.second;
    if (cue.mEndTimeMs == event.first) {
      if (DEBUG)       Log.v(TAG,"Removing " + cue);
      mActiveCues.remove(cue);
      if (cue.mRunID == 0) {
        it.remove();
      }
    }
 else     if (cue.mStartTimeMs == event.first) {
      if (DEBUG)       Log.v(TAG,"Adding " + cue);
      if (cue.mInnerTimesMs != null) {
        cue.onTime(timeMs);
      }
      mActiveCues.add(cue);
    }
 else     if (cue.mInnerTimesMs != null) {
      cue.onTime(timeMs);
    }
  }
  while (mRunsByEndTime.size() > 0 && mRunsByEndTime.keyAt(0) <= timeMs) {
    removeRunsByEndTimeIndex(0);
  }
  mLastUpdateTimeMs=timeMs;
}
