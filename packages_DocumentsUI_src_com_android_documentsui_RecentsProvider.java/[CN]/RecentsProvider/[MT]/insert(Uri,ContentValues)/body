{
  final SQLiteDatabase db=mHelper.getWritableDatabase();
switch (sMatcher.match(uri)) {
case URI_RECENT:
    values.put(RecentColumns.TIMESTAMP,System.currentTimeMillis());
  db.insert(TABLE_RECENT,null,values);
db.delete(TABLE_RECENT,RecentColumns.TIMESTAMP + ">" + MAX_HISTORY_IN_MILLIS,null);
return uri;
case URI_STATE:
final String authority=uri.getPathSegments().get(1);
final String rootId=uri.getPathSegments().get(2);
final String documentId=uri.getPathSegments().get(3);
final ContentValues key=new ContentValues();
key.put(StateColumns.AUTHORITY,authority);
key.put(StateColumns.ROOT_ID,rootId);
key.put(StateColumns.DOCUMENT_ID,documentId);
db.insertWithOnConflict(TABLE_STATE,null,key,SQLiteDatabase.CONFLICT_IGNORE);
db.update(TABLE_STATE,values,StateColumns.AUTHORITY + "=? AND " + StateColumns.ROOT_ID+ "=? AND "+ StateColumns.DOCUMENT_ID+ "=?",new String[]{authority,rootId,documentId});
return uri;
case URI_RESUME:
final String packageName=uri.getPathSegments().get(1);
values.put(ResumeColumns.PACKAGE_NAME,packageName);
values.put(ResumeColumns.TIMESTAMP,System.currentTimeMillis());
db.insert(TABLE_RESUME,null,values);
return uri;
default :
throw new UnsupportedOperationException("Unsupported Uri " + uri);
}
}
