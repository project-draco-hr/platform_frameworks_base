{
  mMemFactorLowered=memFactor < mLastMemOnlyState;
  mLastMemOnlyState=memFactor;
  if (screenOn) {
    memFactor+=ADJ_SCREEN_ON;
  }
  if (memFactor != mState.mMemFactor) {
    if (mState.mMemFactor != STATE_NOTHING) {
      mState.mMemFactorDurations[mState.mMemFactor]+=now - mState.mStartTime;
    }
    mState.mMemFactor=memFactor;
    mState.mStartTime=now;
    ArrayMap<String,SparseArray<PackageState>> pmap=mState.mPackages.getMap();
    for (int i=0; i < pmap.size(); i++) {
      SparseArray<PackageState> uids=pmap.valueAt(i);
      for (int j=0; j < uids.size(); j++) {
        PackageState pkg=uids.valueAt(j);
        ArrayMap<String,ServiceState> services=pkg.mServices;
        for (int k=0; k < services.size(); k++) {
          ServiceState service=services.valueAt(k);
          if (service.isActive()) {
            if (service.mStartedState != STATE_NOTHING) {
              service.setStarted(true,memFactor,now);
            }
            if (service.mBoundState != STATE_NOTHING) {
              service.setBound(true,memFactor,now);
            }
            if (service.mExecState != STATE_NOTHING) {
              service.setExecuting(true,memFactor,now);
            }
          }
        }
      }
    }
    return true;
  }
  return false;
}
