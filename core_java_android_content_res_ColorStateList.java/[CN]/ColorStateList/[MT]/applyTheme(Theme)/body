{
  if (mThemeAttrs == null) {
    return;
  }
  boolean hasUnresolvedAttrs=false;
  final int[][] themeAttrsList=mThemeAttrs;
  final int N=themeAttrsList.length;
  for (int i=0; i < N; i++) {
    if (themeAttrsList[i] != null) {
      final TypedArray a=t.resolveAttributes(themeAttrsList[i],R.styleable.ColorStateListItem);
      final int baseColor=a.getColor(R.styleable.ColorStateListItem_color,mColors[i]);
      final float alphaMod=a.getFloat(R.styleable.ColorStateListItem_alpha,1.0f);
      mColors[i]=modulateColorAlpha(baseColor,alphaMod);
      mChangingConfigurations|=a.getChangingConfigurations();
      themeAttrsList[i]=a.extractThemeAttrs(themeAttrsList[i]);
      if (themeAttrsList[i] != null) {
        hasUnresolvedAttrs=true;
      }
      a.recycle();
    }
  }
  if (!hasUnresolvedAttrs) {
    mThemeAttrs=null;
  }
  onColorsChanged();
}
