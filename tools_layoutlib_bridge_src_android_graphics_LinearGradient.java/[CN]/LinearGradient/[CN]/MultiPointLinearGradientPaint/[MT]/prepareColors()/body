{
  if (mGradient == null) {
    mGradient=new int[GRADIENT_SIZE + 1];
    int prevPos=0;
    int nextPos=1;
    for (int i=0; i <= GRADIENT_SIZE; i++) {
      float currentPos=(float)i / GRADIENT_SIZE;
      while (currentPos > mPositions[nextPos]) {
        prevPos=nextPos++;
      }
      float percent=(currentPos - mPositions[prevPos]) / (mPositions[nextPos] - mPositions[prevPos]);
      mGradient[i]=getColor(mColors[prevPos],mColors[nextPos],percent);
    }
  }
}
