{
  int currentPriority=Integer.MAX_VALUE;
  int currentType=Integer.MAX_VALUE;
  ContentValues currentContentValues=null;
  for (  final ContentValues contentValues : contentValuesList) {
    if (contentValues == null) {
      continue;
    }
    final Integer typeAsInteger=contentValues.getAsInteger(StructuredPostal.TYPE);
    final Integer priorityAsInteger=sPostalTypePriorityMap.get(typeAsInteger);
    final int priority=(priorityAsInteger != null ? priorityAsInteger : Integer.MAX_VALUE);
    if (priority < currentPriority) {
      currentPriority=priority;
      currentType=typeAsInteger;
      currentContentValues=contentValues;
      if (priority == 0) {
        break;
      }
    }
  }
  if (currentContentValues == null) {
    Log.w(LOG_TAG,"Should not come here. Must have at least one postal data.");
    return;
  }
  final String label=currentContentValues.getAsString(StructuredPostal.LABEL);
  appendPostalLine(currentType,label,currentContentValues,false,true);
}
