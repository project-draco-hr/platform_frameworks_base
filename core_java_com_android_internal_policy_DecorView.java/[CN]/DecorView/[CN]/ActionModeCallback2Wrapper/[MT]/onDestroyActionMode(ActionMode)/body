{
  mWrapped.onDestroyActionMode(mode);
  final boolean isMncApp=mContext.getApplicationInfo().targetSdkVersion >= M;
  final boolean isPrimary;
  final boolean isFloating;
  if (isMncApp) {
    isPrimary=mode == mPrimaryActionMode;
    isFloating=mode == mFloatingActionMode;
    if (!isPrimary && mode.getType() == ActionMode.TYPE_PRIMARY) {
      Log.e(mLogTag,"Destroying unexpected ActionMode instance of TYPE_PRIMARY; " + mode + " was not the current primary action mode! Expected "+ mPrimaryActionMode);
    }
    if (!isFloating && mode.getType() == ActionMode.TYPE_FLOATING) {
      Log.e(mLogTag,"Destroying unexpected ActionMode instance of TYPE_FLOATING; " + mode + " was not the current floating action mode! Expected "+ mFloatingActionMode);
    }
  }
 else {
    isPrimary=mode.getType() == ActionMode.TYPE_PRIMARY;
    isFloating=mode.getType() == ActionMode.TYPE_FLOATING;
  }
  if (isPrimary) {
    if (mPrimaryActionModePopup != null) {
      removeCallbacks(mShowPrimaryActionModePopup);
    }
    if (mPrimaryActionModeView != null) {
      endOnGoingFadeAnimation();
      mFadeAnim=ObjectAnimator.ofFloat(mPrimaryActionModeView,View.ALPHA,1f,0f);
      mFadeAnim.addListener(new Animator.AnimatorListener(){
        @Override public void onAnimationStart(        Animator animation){
        }
        @Override public void onAnimationEnd(        Animator animation){
          mPrimaryActionModeView.setVisibility(GONE);
          if (mPrimaryActionModePopup != null) {
            mPrimaryActionModePopup.dismiss();
          }
          mPrimaryActionModeView.removeAllViews();
          mFadeAnim=null;
        }
        @Override public void onAnimationCancel(        Animator animation){
        }
        @Override public void onAnimationRepeat(        Animator animation){
        }
      }
);
      mFadeAnim.start();
    }
    mPrimaryActionMode=null;
  }
 else   if (isFloating) {
    cleanupFloatingActionModeViews();
    mFloatingActionMode=null;
  }
  if (mWindow.getCallback() != null && !mWindow.isDestroyed()) {
    try {
      mWindow.getCallback().onActionModeFinished(mode);
    }
 catch (    AbstractMethodError ame) {
    }
  }
  requestFitSystemWindows();
}
