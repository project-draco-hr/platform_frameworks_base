{
  if (DBG)   Log.d(TAG,"start(" + sampleRateInHz + ","+ audioFormat+ ","+ channelCount+ ")");
  if (audioFormat != AudioFormat.ENCODING_PCM_8BIT && audioFormat != AudioFormat.ENCODING_PCM_16BIT && audioFormat != AudioFormat.ENCODING_PCM_FLOAT) {
    Log.w(TAG,"Audio format encoding " + audioFormat + " not supported. Please use one "+ "of AudioFormat.ENCODING_PCM_8BIT, AudioFormat.ENCODING_PCM_16BIT or "+ "AudioFormat.ENCODING_PCM_FLOAT");
  }
  mDispatcher.dispatchOnBeginSynthesis(sampleRateInHz,audioFormat,channelCount);
  int channelConfig=BlockingAudioTrack.getChannelConfig(channelCount);
synchronized (mStateLock) {
    if (channelConfig == 0) {
      Log.e(TAG,"Unsupported number of channels :" + channelCount);
      mStatusCode=TextToSpeech.ERROR_OUTPUT;
      return TextToSpeech.ERROR;
    }
    if (mStatusCode == TextToSpeech.STOPPED) {
      if (DBG)       Log.d(TAG,"stop() called before start(), returning.");
      return errorCodeOnStop();
    }
    if (mStatusCode != TextToSpeech.SUCCESS) {
      if (DBG)       Log.d(TAG,"Error was raised");
      return TextToSpeech.ERROR;
    }
    if (mItem != null) {
      Log.e(TAG,"Start called twice");
      return TextToSpeech.ERROR;
    }
    SynthesisPlaybackQueueItem item=new SynthesisPlaybackQueueItem(mAudioParams,sampleRateInHz,audioFormat,channelCount,mDispatcher,mCallerIdentity,mLogger);
    mAudioTrackHandler.enqueue(item);
    mItem=item;
  }
  return TextToSpeech.SUCCESS;
}
