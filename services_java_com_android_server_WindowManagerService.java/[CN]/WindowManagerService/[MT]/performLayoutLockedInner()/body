{
  final int dw=mDisplay.getWidth();
  final int dh=mDisplay.getHeight();
  final int N=mWindows.size();
  int repeats=0;
  int i;
  if (DEBUG_LAYOUT)   Slog.v(TAG,"performLayout: needed=" + mLayoutNeeded + " dw="+ dw+ " dh="+ dh);
  while (mLayoutNeeded) {
    mPolicy.beginLayoutLw(dw,dh);
    int seq=mLayoutSeq + 1;
    if (seq < 0)     seq=0;
    mLayoutSeq=seq;
    int topAttached=-1;
    for (i=N - 1; i >= 0; i--) {
      WindowState win=(WindowState)mWindows.get(i);
      final AppWindowToken atoken=win.mAppToken;
      final boolean gone=win.mViewVisibility == View.GONE || !win.mRelayoutCalled || win.mRootToken.hidden || (atoken != null && atoken.hiddenRequested) || win.mAttachedHidden || win.mExiting || win.mDestroying;
      if (!win.mLayoutAttached) {
        if (DEBUG_LAYOUT)         Slog.v(TAG,"First pass " + win + ": gone="+ gone+ " mHaveFrame="+ win.mHaveFrame+ " mLayoutAttached="+ win.mLayoutAttached);
        if (DEBUG_LAYOUT && gone)         Slog.v(TAG,"  (mViewVisibility=" + win.mViewVisibility + " mRelayoutCalled="+ win.mRelayoutCalled+ " hidden="+ win.mRootToken.hidden+ " hiddenRequested="+ (atoken != null && atoken.hiddenRequested)+ " mAttachedHidden="+ win.mAttachedHidden);
      }
      if (!gone || !win.mHaveFrame) {
        if (!win.mLayoutAttached) {
          mPolicy.layoutWindowLw(win,win.mAttrs,null);
          win.mLayoutSeq=seq;
          if (DEBUG_LAYOUT)           Slog.v(TAG,"-> mFrame=" + win.mFrame + " mContainingFrame="+ win.mContainingFrame+ " mDisplayFrame="+ win.mDisplayFrame);
        }
 else {
          if (topAttached < 0)           topAttached=i;
        }
      }
    }
    for (i=topAttached; i >= 0; i--) {
      WindowState win=(WindowState)mWindows.get(i);
      if (win.mLayoutAttached) {
        if (DEBUG_LAYOUT)         Slog.v(TAG,"Second pass " + win + " mHaveFrame="+ win.mHaveFrame+ " mViewVisibility="+ win.mViewVisibility+ " mRelayoutCalled="+ win.mRelayoutCalled);
        if ((win.mViewVisibility != View.GONE && win.mRelayoutCalled) || !win.mHaveFrame) {
          mPolicy.layoutWindowLw(win,win.mAttrs,win.mAttachedWindow);
          win.mLayoutSeq=seq;
          if (DEBUG_LAYOUT)           Slog.v(TAG,"-> mFrame=" + win.mFrame + " mContainingFrame="+ win.mContainingFrame+ " mDisplayFrame="+ win.mDisplayFrame);
        }
      }
    }
    int changes=mPolicy.finishLayoutLw();
    if ((changes & WindowManagerPolicy.FINISH_LAYOUT_REDO_WALLPAPER) != 0) {
      if ((adjustWallpaperWindowsLocked() & ADJUST_WALLPAPER_LAYERS_CHANGED) != 0) {
        assignLayersLocked();
      }
    }
    if (changes == 0) {
      mLayoutNeeded=false;
    }
 else     if (repeats > 2) {
      Slog.w(TAG,"Layout repeat aborted after too many iterations");
      mLayoutNeeded=false;
      if ((changes & WindowManagerPolicy.FINISH_LAYOUT_REDO_CONFIG) != 0) {
        if (updateOrientationFromAppTokensLocked()) {
          mH.sendEmptyMessage(H.SEND_NEW_CONFIGURATION);
        }
      }
    }
 else {
      if (DEBUG_LAYOUT)       Slog.v(TAG,"Repeating layout because changes=0x" + Integer.toHexString(changes));
      repeats++;
      if ((changes & WindowManagerPolicy.FINISH_LAYOUT_REDO_CONFIG) != 0) {
        if (DEBUG_LAYOUT)         Slog.v(TAG,"Computing new config from layout");
        if (updateOrientationFromAppTokensLocked()) {
          mH.sendEmptyMessage(H.SEND_NEW_CONFIGURATION);
        }
      }
    }
  }
}
