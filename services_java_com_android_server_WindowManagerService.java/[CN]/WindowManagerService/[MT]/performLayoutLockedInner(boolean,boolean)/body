{
  if (!mLayoutNeeded) {
    return 0;
  }
  mLayoutNeeded=false;
  final int dw=mDisplay.getWidth();
  final int dh=mDisplay.getHeight();
  final int N=mWindows.size();
  int i;
  if (DEBUG_LAYOUT)   Slog.v(TAG,"performLayout: needed=" + mLayoutNeeded + " dw="+ dw+ " dh="+ dh);
  mPolicy.beginLayoutLw(dw,dh);
  int seq=mLayoutSeq + 1;
  if (seq < 0)   seq=0;
  mLayoutSeq=seq;
  int topAttached=-1;
  for (i=N - 1; i >= 0; i--) {
    WindowState win=mWindows.get(i);
    final AppWindowToken atoken=win.mAppToken;
    final boolean gone=win.mViewVisibility == View.GONE || !win.mRelayoutCalled || (atoken == null && win.mRootToken.hidden) || (atoken != null && atoken.hiddenRequested) || win.mAttachedHidden || win.mExiting || win.mDestroying;
    if (DEBUG_LAYOUT && !win.mLayoutAttached) {
      Slog.v(TAG,"First pass " + win + ": gone="+ gone+ " mHaveFrame="+ win.mHaveFrame+ " mLayoutAttached="+ win.mLayoutAttached);
      if (gone)       Slog.v(TAG,"  (mViewVisibility=" + win.mViewVisibility + " mRelayoutCalled="+ win.mRelayoutCalled+ " hidden="+ win.mRootToken.hidden+ " hiddenRequested="+ (atoken != null && atoken.hiddenRequested)+ " mAttachedHidden="+ win.mAttachedHidden);
    }
    if (!gone || !win.mHaveFrame) {
      if (!win.mLayoutAttached) {
        if (initial) {
          win.mContentChanged=false;
        }
        mPolicy.layoutWindowLw(win,win.mAttrs,null);
        win.mLayoutSeq=seq;
        if (DEBUG_LAYOUT)         Slog.v(TAG,"-> mFrame=" + win.mFrame + " mContainingFrame="+ win.mContainingFrame+ " mDisplayFrame="+ win.mDisplayFrame);
      }
 else {
        if (topAttached < 0)         topAttached=i;
      }
    }
  }
  for (i=topAttached; i >= 0; i--) {
    WindowState win=mWindows.get(i);
    if (win.mLayoutAttached) {
      if (DEBUG_LAYOUT)       Slog.v(TAG,"Second pass " + win + " mHaveFrame="+ win.mHaveFrame+ " mViewVisibility="+ win.mViewVisibility+ " mRelayoutCalled="+ win.mRelayoutCalled);
      if ((win.mViewVisibility != View.GONE && win.mRelayoutCalled) || !win.mHaveFrame) {
        if (initial) {
          win.mContentChanged=false;
        }
        mPolicy.layoutWindowLw(win,win.mAttrs,win.mAttachedWindow);
        win.mLayoutSeq=seq;
        if (DEBUG_LAYOUT)         Slog.v(TAG,"-> mFrame=" + win.mFrame + " mContainingFrame="+ win.mContainingFrame+ " mDisplayFrame="+ win.mDisplayFrame);
      }
    }
  }
  mInputMonitor.setUpdateInputWindowsNeededLw();
  if (updateInputWindows) {
    mInputMonitor.updateInputWindowsLw(false);
  }
  return mPolicy.finishLayoutLw();
}
