{
  if (!mDisplayFrozen) {
    Animation a;
    if (lp != null && (lp.flags & FLAG_COMPATIBLE_WINDOW) != 0) {
      a=new FadeInOutAnimation(enter);
      if (DEBUG_ANIM)       Log.v(TAG,"applying FadeInOutAnimation for a window in compatibility mode");
    }
 else     if (mNextAppTransitionPackage != null) {
      a=loadAnimation(mNextAppTransitionPackage,enter ? mNextAppTransitionEnter : mNextAppTransitionExit);
    }
 else {
      int animAttr=0;
switch (transit) {
case WindowManagerPolicy.TRANSIT_ACTIVITY_OPEN:
        animAttr=enter ? com.android.internal.R.styleable.WindowAnimation_activityOpenEnterAnimation : com.android.internal.R.styleable.WindowAnimation_activityOpenExitAnimation;
      break;
case WindowManagerPolicy.TRANSIT_ACTIVITY_CLOSE:
    animAttr=enter ? com.android.internal.R.styleable.WindowAnimation_activityCloseEnterAnimation : com.android.internal.R.styleable.WindowAnimation_activityCloseExitAnimation;
  break;
case WindowManagerPolicy.TRANSIT_TASK_OPEN:
animAttr=enter ? com.android.internal.R.styleable.WindowAnimation_taskOpenEnterAnimation : com.android.internal.R.styleable.WindowAnimation_taskOpenExitAnimation;
break;
case WindowManagerPolicy.TRANSIT_TASK_CLOSE:
animAttr=enter ? com.android.internal.R.styleable.WindowAnimation_taskCloseEnterAnimation : com.android.internal.R.styleable.WindowAnimation_taskCloseExitAnimation;
break;
case WindowManagerPolicy.TRANSIT_TASK_TO_FRONT:
animAttr=enter ? com.android.internal.R.styleable.WindowAnimation_taskToFrontEnterAnimation : com.android.internal.R.styleable.WindowAnimation_taskToFrontExitAnimation;
break;
case WindowManagerPolicy.TRANSIT_TASK_TO_BACK:
animAttr=enter ? com.android.internal.R.styleable.WindowAnimation_taskToBackEnterAnimation : com.android.internal.R.styleable.WindowAnimation_taskToBackExitAnimation;
break;
case WindowManagerPolicy.TRANSIT_WALLPAPER_OPEN:
animAttr=enter ? com.android.internal.R.styleable.WindowAnimation_wallpaperOpenEnterAnimation : com.android.internal.R.styleable.WindowAnimation_wallpaperOpenExitAnimation;
break;
case WindowManagerPolicy.TRANSIT_WALLPAPER_CLOSE:
animAttr=enter ? com.android.internal.R.styleable.WindowAnimation_wallpaperCloseEnterAnimation : com.android.internal.R.styleable.WindowAnimation_wallpaperCloseExitAnimation;
break;
case WindowManagerPolicy.TRANSIT_WALLPAPER_INTRA_OPEN:
animAttr=enter ? com.android.internal.R.styleable.WindowAnimation_wallpaperIntraOpenEnterAnimation : com.android.internal.R.styleable.WindowAnimation_wallpaperIntraOpenExitAnimation;
break;
case WindowManagerPolicy.TRANSIT_WALLPAPER_INTRA_CLOSE:
animAttr=enter ? com.android.internal.R.styleable.WindowAnimation_wallpaperIntraCloseEnterAnimation : com.android.internal.R.styleable.WindowAnimation_wallpaperIntraCloseExitAnimation;
break;
}
a=animAttr != 0 ? loadAnimation(lp,animAttr) : null;
if (DEBUG_ANIM) Log.v(TAG,"applyAnimation: wtoken=" + wtoken + " anim="+ a+ " animAttr=0x"+ Integer.toHexString(animAttr)+ " transit="+ transit);
}
if (a != null) {
if (DEBUG_ANIM) {
RuntimeException e=new RuntimeException();
if (!HIDE_STACK_CRAWLS) e.fillInStackTrace();
Log.v(TAG,"Loaded animation " + a + " for "+ wtoken,e);
}
wtoken.setAnimation(a);
}
}
 else {
wtoken.clearAnimation();
}
return wtoken.animation != null;
}
