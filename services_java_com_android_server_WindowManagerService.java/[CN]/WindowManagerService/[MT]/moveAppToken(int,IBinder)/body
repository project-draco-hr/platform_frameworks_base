{
  if (!checkCallingPermission(android.Manifest.permission.MANAGE_APP_TOKENS,"moveAppToken()")) {
    throw new SecurityException("Requires MANAGE_APP_TOKENS permission");
  }
synchronized (mWindowMap) {
    if (DEBUG_REORDER)     Log.v(TAG,"Initial app tokens:");
    if (DEBUG_REORDER)     dumpAppTokensLocked();
    final AppWindowToken wtoken=findAppWindowToken(token);
    if (wtoken == null || !mAppTokens.remove(wtoken)) {
      Log.w(TAG,"Attempting to reorder token that doesn't exist: " + token + " ("+ wtoken+ ")");
      return;
    }
    mAppTokens.add(index,wtoken);
    if (DEBUG_REORDER)     Log.v(TAG,"Moved " + token + " to "+ index+ ":");
    if (DEBUG_REORDER)     dumpAppTokensLocked();
    final long origId=Binder.clearCallingIdentity();
    if (DEBUG_REORDER)     Log.v(TAG,"Removing windows in " + token + ":");
    if (DEBUG_REORDER)     dumpWindowsLocked();
    if (tmpRemoveAppWindowsLocked(wtoken)) {
      if (DEBUG_REORDER)       Log.v(TAG,"Adding windows back in:");
      if (DEBUG_REORDER)       dumpWindowsLocked();
      reAddAppWindowsLocked(findWindowOffsetLocked(index),wtoken);
      if (DEBUG_REORDER)       Log.v(TAG,"Final window list:");
      if (DEBUG_REORDER)       dumpWindowsLocked();
      updateFocusedWindowLocked(UPDATE_FOCUS_WILL_PLACE_SURFACES);
      mLayoutNeeded=true;
      performLayoutAndPlaceSurfacesLocked();
    }
    Binder.restoreCallingIdentity(origId);
  }
}
