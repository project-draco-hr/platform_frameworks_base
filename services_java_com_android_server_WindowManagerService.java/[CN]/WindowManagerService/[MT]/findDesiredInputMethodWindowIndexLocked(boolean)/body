{
  final ArrayList<WindowState> localmWindows=mWindows;
  final int N=localmWindows.size();
  WindowState w=null;
  int i=N;
  while (i > 0) {
    i--;
    w=localmWindows.get(i);
    if (canBeImeTarget(w)) {
      if (!willMove && w.mAttrs.type == WindowManager.LayoutParams.TYPE_APPLICATION_STARTING && i > 0) {
        WindowState wb=localmWindows.get(i - 1);
        if (wb.mAppToken == w.mAppToken && canBeImeTarget(wb)) {
          i--;
          w=wb;
        }
      }
      break;
    }
  }
  mUpcomingInputMethodTarget=w;
  if (DEBUG_INPUT_METHOD)   Slog.v(TAG,"Desired input method target=" + w + " willMove="+ willMove);
  if (willMove && w != null) {
    final WindowState curTarget=mInputMethodTarget;
    if (curTarget != null && curTarget.mAppToken != null) {
      AppWindowToken token=curTarget.mAppToken;
      WindowState highestTarget=null;
      int highestPos=0;
      if (token.animating || token.animation != null) {
        int pos=0;
        pos=localmWindows.indexOf(curTarget);
        while (pos >= 0) {
          WindowState win=localmWindows.get(pos);
          if (win.mAppToken != token) {
            break;
          }
          if (!win.mRemoved) {
            if (highestTarget == null || win.mAnimLayer > highestTarget.mAnimLayer) {
              highestTarget=win;
              highestPos=pos;
            }
          }
          pos--;
        }
      }
      if (highestTarget != null) {
        if (DEBUG_INPUT_METHOD)         Slog.v(TAG,"mNextAppTransition=" + mNextAppTransition + " "+ highestTarget+ " animating="+ highestTarget.isAnimating()+ " layer="+ highestTarget.mAnimLayer+ " new layer="+ w.mAnimLayer);
        if (mNextAppTransition != WindowManagerPolicy.TRANSIT_UNSET) {
          mInputMethodTargetWaitingAnim=true;
          mInputMethodTarget=highestTarget;
          return highestPos + 1;
        }
 else         if (highestTarget.isAnimating() && highestTarget.mAnimLayer > w.mAnimLayer) {
          mInputMethodTarget=highestTarget;
          return highestPos + 1;
        }
      }
    }
  }
  if (w != null) {
    if (willMove) {
      if (DEBUG_INPUT_METHOD) {
        RuntimeException e=null;
        if (!HIDE_STACK_CRAWLS) {
          e=new RuntimeException();
          e.fillInStackTrace();
        }
        Slog.w(TAG,"Moving IM target from " + mInputMethodTarget + " to "+ w,e);
      }
      mInputMethodTarget=w;
      if (w.mAppToken != null) {
        setInputMethodAnimLayerAdjustment(w.mAppToken.animLayerAdjustment);
      }
 else {
        setInputMethodAnimLayerAdjustment(0);
      }
    }
    return i + 1;
  }
  if (willMove) {
    if (DEBUG_INPUT_METHOD) {
      RuntimeException e=null;
      if (!HIDE_STACK_CRAWLS) {
        e=new RuntimeException();
        e.fillInStackTrace();
      }
      Slog.w(TAG,"Moving IM target from " + mInputMethodTarget + " to null",e);
    }
    mInputMethodTarget=null;
    setInputMethodAnimLayerAdjustment(0);
  }
  return -1;
}
