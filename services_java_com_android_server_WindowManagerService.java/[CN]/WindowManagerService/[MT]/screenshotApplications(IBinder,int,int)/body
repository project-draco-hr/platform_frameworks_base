{
  if (!checkCallingPermission(android.Manifest.permission.READ_FRAME_BUFFER,"screenshotApplications()")) {
    throw new SecurityException("Requires READ_FRAME_BUFFER permission");
  }
  Bitmap rawss;
  int maxLayer=0;
  boolean foundApp;
  final Rect frame=new Rect();
  float scale;
  int sw, sh, dw, dh;
  int rot;
synchronized (mWindowMap) {
    long ident=Binder.clearCallingIdentity();
    int aboveAppLayer=mPolicy.windowTypeToLayerLw(WindowManager.LayoutParams.TYPE_APPLICATION) * TYPE_LAYER_MULTIPLIER + TYPE_LAYER_OFFSET;
    aboveAppLayer+=TYPE_LAYER_MULTIPLIER;
    for (int i=0; i < mWindows.size(); i++) {
      WindowState ws=mWindows.get(i);
      if (ws.mSurface == null) {
        continue;
      }
      if (ws.mLayer >= aboveAppLayer) {
        break;
      }
      if (appToken != null && (ws.mAppToken == null || ws.mAppToken.token != appToken)) {
        continue;
      }
      if (maxLayer < ws.mAnimLayer) {
        maxLayer=ws.mAnimLayer;
      }
      final Rect wf=ws.mFrame;
      final Rect cr=ws.mContentInsets;
      int left=wf.left + cr.left;
      int top=wf.top + cr.top;
      int right=wf.right - cr.right;
      int bottom=wf.bottom - cr.bottom;
      frame.union(left,top,right,bottom);
    }
    Binder.restoreCallingIdentity(ident);
    if (frame.isEmpty() || maxLayer == 0) {
      return null;
    }
    rot=mDisplay.getRotation();
    int fw=frame.width();
    int fh=frame.height();
    scale=maxWidth / (float)fw;
    sw=maxWidth;
    sh=(int)(fh * scale);
    if (sh > maxHeight) {
      scale=maxHeight / (float)fh;
      sw=(int)(fw * scale);
      sh=maxHeight;
    }
    dw=(int)(mDisplay.getWidth() * scale);
    dh=(int)(mDisplay.getHeight() * scale);
    if (rot == Surface.ROTATION_90 || rot == Surface.ROTATION_270) {
      int tmp=dw;
      dw=dh;
      dh=tmp;
      rot=(rot == Surface.ROTATION_90) ? Surface.ROTATION_270 : Surface.ROTATION_90;
    }
    rawss=Surface.screenshot(dw,dh,0,maxLayer);
  }
  if (rawss == null) {
    return null;
  }
  Bitmap bm=Bitmap.createBitmap(sw,sh,rawss.getConfig());
  Matrix matrix=new Matrix();
  ScreenRotationAnimation.createRotationMatrix(rot,dw,dh,matrix);
  matrix.postTranslate(-(int)(frame.left * scale),-(int)(frame.top * scale));
  Canvas canvas=new Canvas(bm);
  canvas.drawBitmap(rawss,matrix,null);
  rawss.recycle();
  return bm;
}
