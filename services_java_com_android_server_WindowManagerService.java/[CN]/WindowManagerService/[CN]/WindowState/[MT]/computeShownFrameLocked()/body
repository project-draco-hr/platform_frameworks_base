{
  final boolean selfTransformation=mHasLocalTransformation;
  Transformation attachedTransformation=(mAttachedWindow != null && mAttachedWindow.mHasLocalTransformation) ? mAttachedWindow.mTransformation : null;
  Transformation appTransformation=(mAppToken != null && mAppToken.hasTransformation) ? mAppToken.transformation : null;
  if (selfTransformation || attachedTransformation != null || appTransformation != null) {
    final Rect frame=mFrame;
    final float tmpFloats[]=mTmpFloats;
    final Matrix tmpMatrix=mTmpMatrix;
    tmpMatrix.setTranslate(frame.left,frame.top);
    if (selfTransformation) {
      tmpMatrix.preConcat(mTransformation.getMatrix());
    }
    if (attachedTransformation != null) {
      tmpMatrix.preConcat(attachedTransformation.getMatrix());
    }
    if (appTransformation != null) {
      tmpMatrix.preConcat(appTransformation.getMatrix());
    }
    tmpMatrix.getValues(tmpFloats);
    mDsDx=tmpFloats[Matrix.MSCALE_X];
    mDtDx=tmpFloats[Matrix.MSKEW_X];
    mDsDy=tmpFloats[Matrix.MSKEW_Y];
    mDtDy=tmpFloats[Matrix.MSCALE_Y];
    int x=(int)tmpFloats[Matrix.MTRANS_X];
    int y=(int)tmpFloats[Matrix.MTRANS_Y];
    int w=frame.width();
    int h=frame.height();
    mShownFrame.set(x,y,x + w,y + h);
    mShownAlpha=mAlpha;
    if (!mLimitedAlphaCompositing || (!PixelFormat.formatHasAlpha(mAttrs.format) || (isIdentityMatrix(mDsDx,mDtDx,mDsDy,mDtDy) && x == frame.left && y == frame.top))) {
      if (selfTransformation) {
        mShownAlpha*=mTransformation.getAlpha();
      }
      if (attachedTransformation != null) {
        mShownAlpha*=attachedTransformation.getAlpha();
      }
      if (appTransformation != null) {
        mShownAlpha*=appTransformation.getAlpha();
      }
    }
 else {
    }
    if (localLOGV)     Log.v(TAG,"Continuing animation in " + this + ": "+ mShownFrame+ ", alpha="+ mTransformation.getAlpha());
    return;
  }
  mShownFrame.set(mFrame);
  mShownAlpha=mAlpha;
  mDsDx=1;
  mDtDx=0;
  mDsDy=0;
  mDtDy=1;
}
