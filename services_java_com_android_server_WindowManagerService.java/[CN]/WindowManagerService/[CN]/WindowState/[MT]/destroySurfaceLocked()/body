{
  mKeyWaiter.finishedKey(mSession,mClient,true,KeyWaiter.RETURN_NOTHING);
  mKeyWaiter.releasePendingPointerLocked(mSession);
  mKeyWaiter.releasePendingTrackballLocked(mSession);
  if (mAppToken != null && this == mAppToken.startingWindow) {
    mAppToken.startingDisplayed=false;
  }
  if (mSurface != null) {
    try {
      if (DEBUG_VISIBILITY) {
        RuntimeException e=new RuntimeException();
        if (!HIDE_STACK_CRAWLS)         e.fillInStackTrace();
        Log.w(TAG,"Window " + this + " destroying surface "+ mSurface+ ", session "+ mSession,e);
      }
      if (SHOW_TRANSACTIONS) {
        RuntimeException ex=new RuntimeException();
        if (!HIDE_STACK_CRAWLS)         ex.fillInStackTrace();
        Log.i(TAG,"  SURFACE " + mSurface + ": DESTROY ("+ mAttrs.getTitle()+ ")",ex);
      }
      mSurface.destroy();
    }
 catch (    RuntimeException e) {
      Log.w(TAG,"Exception thrown when destroying Window " + this + " surface "+ mSurface+ " session "+ mSession+ ": "+ e.toString());
    }
    mSurface=null;
    mDrawPending=false;
    mCommitDrawPending=false;
    mReadyToShow=false;
    int i=mChildWindows.size();
    while (i > 0) {
      i--;
      WindowState c=(WindowState)mChildWindows.get(i);
      c.mAttachedHidden=true;
    }
  }
}
