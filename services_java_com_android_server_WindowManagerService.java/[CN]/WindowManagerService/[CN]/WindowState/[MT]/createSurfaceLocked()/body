{
  if (mSurface == null) {
    mReportDestroySurface=false;
    mSurfacePendingDestroy=false;
    mDrawPending=true;
    mCommitDrawPending=false;
    mReadyToShow=false;
    if (mAppToken != null) {
      mAppToken.allDrawn=false;
    }
    int flags=0;
    if ((mAttrs.flags & WindowManager.LayoutParams.FLAG_SECURE) != 0) {
      flags|=Surface.SECURE;
    }
    if (DEBUG_VISIBILITY)     Slog.v(TAG,"Creating surface in session " + mSession.mSurfaceSession + " window "+ this+ " w="+ mFrame.width()+ " h="+ mFrame.height()+ " format="+ mAttrs.format+ " flags="+ flags);
    int w=mFrame.width();
    int h=mFrame.height();
    if ((mAttrs.flags & LayoutParams.FLAG_SCALED) != 0) {
      w=mRequestedWidth;
      h=mRequestedHeight;
    }
    if (w <= 0)     w=1;
    if (h <= 0)     h=1;
    mSurfaceShown=false;
    mSurfaceLayer=0;
    mSurfaceAlpha=1;
    mSurfaceX=0;
    mSurfaceY=0;
    mSurfaceW=w;
    mSurfaceH=h;
    try {
      final boolean isHwAccelerated=(mAttrs.flags & WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED) != 0;
      final int format=isHwAccelerated ? PixelFormat.TRANSLUCENT : mAttrs.format;
      if (isHwAccelerated && mAttrs.format == PixelFormat.OPAQUE) {
        flags|=Surface.OPAQUE;
      }
      mSurface=new Surface(mSession.mSurfaceSession,mSession.mPid,mAttrs.getTitle().toString(),0,w,h,format,flags);
      if (SHOW_TRANSACTIONS)       Slog.i(TAG,"  CREATE SURFACE " + mSurface + " IN SESSION "+ mSession.mSurfaceSession+ ": pid="+ mSession.mPid+ " format="+ mAttrs.format+ " flags=0x"+ Integer.toHexString(flags)+ " / "+ this);
    }
 catch (    Surface.OutOfResourcesException e) {
      Slog.w(TAG,"OutOfResourcesException creating surface");
      reclaimSomeSurfaceMemoryLocked(this,"create");
      return null;
    }
catch (    Exception e) {
      Slog.e(TAG,"Exception creating surface",e);
      return null;
    }
    if (localLOGV)     Slog.v(TAG,"Got surface: " + mSurface + ", set left="+ mFrame.left+ " top="+ mFrame.top+ ", animLayer="+ mAnimLayer);
    if (SHOW_TRANSACTIONS) {
      Slog.i(TAG,">>> OPEN TRANSACTION createSurfaceLocked");
      logSurface(this,"CREATE pos=(" + mFrame.left + ","+ mFrame.top+ ") ("+ mFrame.width()+ "x"+ mFrame.height()+ "), layer="+ mAnimLayer+ " HIDE",null);
    }
    Surface.openTransaction();
    try {
      try {
        mSurfaceX=mFrame.left + mXOffset;
        mSurfaceY=mFrame.top + mYOffset;
        mSurface.setPosition(mSurfaceX,mSurfaceY);
        mSurfaceLayer=mAnimLayer;
        mSurface.setLayer(mAnimLayer);
        mSurfaceShown=false;
        mSurface.hide();
        if ((mAttrs.flags & WindowManager.LayoutParams.FLAG_DITHER) != 0) {
          if (SHOW_TRANSACTIONS)           logSurface(this,"DITHER",null);
          mSurface.setFlags(Surface.SURFACE_DITHER,Surface.SURFACE_DITHER);
        }
      }
 catch (      RuntimeException e) {
        Slog.w(TAG,"Error creating surface in " + w,e);
        reclaimSomeSurfaceMemoryLocked(this,"create-init");
      }
      mLastHidden=true;
    }
  finally {
      Surface.closeTransaction();
      if (SHOW_TRANSACTIONS)       Slog.i(TAG,"<<< CLOSE TRANSACTION createSurfaceLocked");
    }
    if (localLOGV)     Slog.v(TAG,"Created surface " + this);
  }
  return mSurface;
}
