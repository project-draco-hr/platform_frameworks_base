{
  final int myPid=Process.myPid();
  mSurface.openTransaction();
  mSurface.setPosition((int)(x - mThumbOffsetX),(int)(y - mThumbOffsetY));
  mSurface.closeTransaction();
  WindowState touchedWin=getTouchedWinAtPointLw(x,y);
  try {
    if ((touchedWin != mTargetWindow) && (mTargetWindow != null)) {
      if (DEBUG_DRAG) {
        Slog.d(TAG,"sending DRAG_EXITED to " + mTargetWindow);
      }
      DragEvent evt=DragEvent.obtain(DragEvent.ACTION_DRAG_EXITED,x - mTargetWindow.mFrame.left,y - mTargetWindow.mFrame.top,null,null);
      mTargetWindow.mClient.dispatchDragEvent(evt);
      if (myPid != mTargetWindow.mSession.mPid) {
        evt.recycle();
      }
    }
    if (touchedWin != null) {
      if (DEBUG_DRAG) {
        Slog.d(TAG,"sending DRAG_LOCATION to " + touchedWin);
      }
      DragEvent evt=DragEvent.obtain(DragEvent.ACTION_DRAG_LOCATION,x - touchedWin.mFrame.left,y - touchedWin.mFrame.top,null,null);
      touchedWin.mClient.dispatchDragEvent(evt);
      if (myPid != touchedWin.mSession.mPid) {
        evt.recycle();
      }
    }
  }
 catch (  RemoteException e) {
    Slog.w(TAG,"can't send drag notification to windows");
  }
  mTargetWindow=touchedWin;
}
