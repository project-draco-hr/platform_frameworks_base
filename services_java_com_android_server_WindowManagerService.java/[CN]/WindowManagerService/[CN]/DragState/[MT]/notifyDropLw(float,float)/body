{
  WindowState touchedWin=getTouchedWinAtPointLw(x,y);
  if (touchedWin == null) {
    mDragResult=false;
    return true;
  }
  if (DEBUG_DRAG) {
    Slog.d(TAG,"sending DROP to " + touchedWin);
  }
  final int myPid=Process.myPid();
  final IBinder token=touchedWin.mClient.asBinder();
  DragEvent evt=DragEvent.obtain(DragEvent.ACTION_DROP,x - touchedWin.mFrame.left,y - touchedWin.mFrame.top,null,null,mData,false);
  try {
    touchedWin.mClient.dispatchDragEvent(evt);
    mH.removeMessages(H.DRAG_END_TIMEOUT,token);
    Message msg=mH.obtainMessage(H.DRAG_END_TIMEOUT,token);
    mH.sendMessageDelayed(msg,5000);
  }
 catch (  RemoteException e) {
    Slog.w(TAG,"can't send drop notification to win " + touchedWin);
    return true;
  }
 finally {
    if (myPid != touchedWin.mSession.mPid) {
      evt.recycle();
    }
  }
  mToken=token;
  return false;
}
