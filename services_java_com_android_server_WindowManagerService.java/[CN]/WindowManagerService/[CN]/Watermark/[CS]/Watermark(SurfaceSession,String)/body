{
  final DisplayMetrics dm=new DisplayMetrics();
  mDisplay.getMetrics(dm);
  int fontSize=getPropertyInt("ro.watermark.height",TypedValue.COMPLEX_UNIT_DIP,48,dm);
  mXPercent=getPropertyInt("ro.watermark.x",TypedValue.COMPLEX_UNIT_PX,50,dm);
  mYPercent=getPropertyInt("ro.watermark.y",TypedValue.COMPLEX_UNIT_PX,99,dm);
  int color=getPropertyInt("ro.watermark.color",TypedValue.COMPLEX_UNIT_PX,0x80ffffff,dm);
  int shadowRadius=getPropertyInt("ro.watermark.shadow.radius",TypedValue.COMPLEX_UNIT_PX,5,dm);
  int shadowDx=getPropertyInt("ro.watermark.shadow.dx",TypedValue.COMPLEX_UNIT_PX,0,dm);
  int shadowDy=getPropertyInt("ro.watermark.shadow.dy",TypedValue.COMPLEX_UNIT_PX,0,dm);
  int shadowColor=getPropertyInt("ro.watermark.shadow.color",TypedValue.COMPLEX_UNIT_PX,0xff000000,dm);
  Paint paint=new Paint(Paint.ANTI_ALIAS_FLAG);
  paint.setTextSize(fontSize);
  paint.setColor(color);
  paint.setShadowLayer(shadowRadius,shadowDx,shadowDy,shadowColor);
  paint.setTypeface(Typeface.create(Typeface.SANS_SERIF,Typeface.BOLD));
  FontMetricsInt fm=paint.getFontMetricsInt();
  mHeight=fm.descent - fm.ascent + 20;
  mWidth=(int)paint.measureText(text) + 20;
  try {
    mSurface=new Surface(session,0,"WatermarkSurface",-1,mWidth,mHeight,PixelFormat.TRANSLUCENT,0);
    mSurface.setLayer(TYPE_LAYER_MULTIPLIER * 100);
    Rect dirty=new Rect(0,0,mWidth,mHeight);
    Canvas c=mSurface.lockCanvas(dirty);
    c.drawText(text,10,-fm.ascent + 10,paint);
    mSurface.unlockCanvasAndPost(c);
    mSurface.show();
  }
 catch (  OutOfResourcesException e) {
  }
}
