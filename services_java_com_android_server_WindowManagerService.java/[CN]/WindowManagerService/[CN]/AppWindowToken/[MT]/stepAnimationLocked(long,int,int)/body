{
  if (!mDisplayFrozen) {
    if (animation == sDummyAnimation) {
      return false;
    }
    if ((allDrawn || animating || startingDisplayed) && animation != null) {
      if (!animating) {
        if (DEBUG_ANIM)         Log.v(TAG,"Starting animation in " + this + " @ "+ currentTime+ ": dw="+ dw+ " dh="+ dh+ " scale="+ mTransitionAnimationScale+ " allDrawn="+ allDrawn+ " animating="+ animating);
        animation.initialize(dw,dh,dw,dh);
        animation.setStartTime(currentTime);
        animating=true;
      }
      transformation.clear();
      final boolean more=animation.getTransformation(currentTime,transformation);
      if (DEBUG_ANIM)       Log.v(TAG,"Stepped animation in " + this + ": more="+ more+ ", xform="+ transformation);
      if (more) {
        hasTransformation=true;
        return true;
      }
      if (DEBUG_ANIM)       Log.v(TAG,"Finished animation in " + this + " @ "+ currentTime);
      animation=null;
    }
  }
 else   if (animation != null) {
    animating=true;
    animation=null;
  }
  hasTransformation=false;
  if (!animating) {
    return false;
  }
  clearAnimation();
  animating=false;
  if (mInputMethodTarget != null && mInputMethodTarget.mAppToken == this) {
    moveInputMethodWindowsIfNeededLocked(true);
  }
  if (DEBUG_ANIM)   Log.v(TAG,"Animation done in " + this + ": reportedVisible="+ reportedVisible);
  transformation.clear();
  if (animLayerAdjustment != 0) {
    animLayerAdjustment=0;
    updateLayers();
  }
  final int N=windows.size();
  for (int i=0; i < N; i++) {
    ((WindowState)windows.get(i)).finishExit();
  }
  updateReportedVisibilityLocked();
  return false;
}
