{
  int num;
  try {
    num=Integer.parseInt(parser.getAttributeValue(null,"num"));
  }
 catch (  NullPointerException e) {
    throw new XmlPullParserException("Need num attribute in byte-array");
  }
catch (  NumberFormatException e) {
    throw new XmlPullParserException("Not a number in num attribute in byte-array");
  }
  byte[] array=new byte[num];
  int eventType=parser.getEventType();
  do {
    if (eventType == parser.TEXT) {
      if (num > 0) {
        String values=parser.getText();
        if (values == null || values.length() != num * 2) {
          throw new XmlPullParserException("Invalid value found in byte-array: " + values);
        }
        for (int i=0; i < num; i++) {
          char nibbleHighChar=values.charAt(2 * i);
          char nibbleLowChar=values.charAt(2 * i + 1);
          int nibbleHigh=nibbleHighChar > 'a' ? (nibbleHighChar - 'a' + 10) : (nibbleHighChar - '0');
          int nibbleLow=nibbleLowChar > 'a' ? (nibbleLowChar - 'a' + 10) : (nibbleLowChar - '0');
          array[i]=(byte)((nibbleHigh & 0x0F) << 4 | (nibbleLow & 0x0F));
        }
      }
    }
 else     if (eventType == parser.END_TAG) {
      if (parser.getName().equals(endTag)) {
        return array;
      }
 else {
        throw new XmlPullParserException("Expected " + endTag + " end tag at: "+ parser.getName());
      }
    }
    eventType=parser.next();
  }
 while (eventType != parser.END_DOCUMENT);
  throw new XmlPullParserException("Document ended before " + endTag + " end tag");
}
