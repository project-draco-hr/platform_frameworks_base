{
  assertTrue("Should return NaN",Double.isNaN(Math.tanh(Double.NaN)));
  assertEquals("Should return +1.0",+1.0,Math.tanh(Double.POSITIVE_INFINITY),0D);
  assertEquals("Should return -1.0",-1.0,Math.tanh(Double.NEGATIVE_INFINITY),0D);
  assertEquals(Double.doubleToLongBits(0.0),Double.doubleToLongBits(Math.tanh(0.0)));
  assertEquals(Double.doubleToLongBits(+0.0),Double.doubleToLongBits(Math.tanh(+0.0)));
  assertEquals(Double.doubleToLongBits(-0.0),Double.doubleToLongBits(Math.tanh(-0.0)));
  assertEquals("Should return 1.0",1.0,Math.tanh(1234.56),0D);
  assertEquals("Should return -1.0",-1.0,Math.tanh(-1234.56),0D);
  assertEquals("Should return 9.999999999996666E-7",9.999999999996666E-7,Math.tanh(0.000001),0D);
  assertEquals("Should return 0.981422884124941",0.981422884124941,Math.tanh(2.33482),0D);
  assertEquals("Should return 1.0",1.0,Math.tanh(Double.MAX_VALUE),0D);
  assertEquals("Should return 4.9E-324",4.9E-324,Math.tanh(Double.MIN_VALUE),0D);
}
