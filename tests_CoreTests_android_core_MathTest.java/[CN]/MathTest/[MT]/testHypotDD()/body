{
  assertEquals("Should return POSITIVE_INFINITY",Double.POSITIVE_INFINITY,Math.hypot(Double.POSITIVE_INFINITY,1.0),0D);
  assertEquals("Should return POSITIVE_INFINITY",Double.POSITIVE_INFINITY,Math.hypot(Double.NEGATIVE_INFINITY,123.324),0D);
  assertEquals("Should return POSITIVE_INFINITY",Double.POSITIVE_INFINITY,Math.hypot(-758.2587,Double.POSITIVE_INFINITY),0D);
  assertEquals("Should return POSITIVE_INFINITY",Double.POSITIVE_INFINITY,Math.hypot(5687.21,Double.NEGATIVE_INFINITY),0D);
  assertEquals("Should return POSITIVE_INFINITY",Double.POSITIVE_INFINITY,Math.hypot(Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY),0D);
  assertEquals("Should return POSITIVE_INFINITY",Double.POSITIVE_INFINITY,Math.hypot(Double.NEGATIVE_INFINITY,Double.POSITIVE_INFINITY),0D);
  assertTrue("Should be NaN",Double.isNaN(Math.hypot(Double.NaN,2342301.89843)));
  assertTrue("Should be NaN",Double.isNaN(Math.hypot(-345.2680,Double.NaN)));
  assertEquals("Should return 2396424.905416697",2396424.905416697,Math.hypot(12322.12,-2396393.2258),0D);
  assertEquals("Should return 138.16958070558556",138.16958070558556,Math.hypot(-138.16951162,0.13817035864),0D);
  assertEquals("Should return 1.7976931348623157E308",1.7976931348623157E308,Math.hypot(Double.MAX_VALUE,211370.35),0D);
  assertEquals("Should return 5413.7185",5413.7185,Math.hypot(-5413.7185,Double.MIN_VALUE),0D);
}
