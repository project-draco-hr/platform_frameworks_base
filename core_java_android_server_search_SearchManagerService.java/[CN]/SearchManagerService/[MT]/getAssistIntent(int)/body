{
  try {
    if (userHandle != UserHandle.getCallingUserId()) {
      if (ActivityManager.checkComponentPermission(android.Manifest.permission.INTERACT_ACROSS_USERS_FULL,Binder.getCallingUid(),-1,true) == PackageManager.PERMISSION_GRANTED) {
        if (userHandle == UserHandle.USER_CURRENT) {
          long identity=Binder.clearCallingIdentity();
          userHandle=ActivityManagerNative.getDefault().getCurrentUser().id;
          Binder.restoreCallingIdentity(identity);
        }
      }
 else {
        String msg="Permission Denial: " + "Request to getAssistIntent for " + userHandle + " but is calling from user "+ UserHandle.getCallingUserId()+ "; this requires "+ android.Manifest.permission.INTERACT_ACROSS_USERS_FULL;
        Slog.w(TAG,msg);
        return null;
      }
    }
    IPackageManager pm=AppGlobals.getPackageManager();
    Intent assistIntent=new Intent(Intent.ACTION_ASSIST);
    ResolveInfo info=pm.resolveIntent(assistIntent,assistIntent.resolveTypeIfNeeded(mContext.getContentResolver()),PackageManager.MATCH_DEFAULT_ONLY,userHandle);
    if (info != null) {
      return new ComponentName(info.activityInfo.applicationInfo.packageName,info.activityInfo.name);
    }
  }
 catch (  RemoteException re) {
    Log.e(TAG,"RemoteException in getAssistIntent: " + re);
  }
catch (  Exception e) {
    Log.e(TAG,"Exception in getAssistIntent: " + e);
  }
  return null;
}
