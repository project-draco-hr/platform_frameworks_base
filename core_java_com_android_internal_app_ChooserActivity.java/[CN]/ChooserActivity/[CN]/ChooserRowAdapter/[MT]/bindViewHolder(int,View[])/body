{
  final int start=getFirstRowPosition(rowPosition);
  final int startType=mChooserListAdapter.getPositionTargetType(start);
  int end=start + mColumnCount - 1;
  while (mChooserListAdapter.getPositionTargetType(end) != startType && end >= start) {
    end--;
  }
  final ViewGroup row=(ViewGroup)holder[mColumnCount];
  if (startType == ChooserListAdapter.TARGET_SERVICE) {
    row.setBackgroundColor(getColor(R.color.chooser_service_row_background_color));
  }
 else {
    row.setBackground(null);
  }
  for (int i=0; i < mColumnCount; i++) {
    final View v=holder[i];
    if (start + i <= end) {
      v.setVisibility(View.VISIBLE);
      final int itemIndex=start + i;
      mChooserListAdapter.bindView(itemIndex,v);
      v.setOnClickListener(new OnClickListener(){
        @Override public void onClick(        View v){
          startSelected(itemIndex,false,true);
        }
      }
);
      v.setOnLongClickListener(new OnLongClickListener(){
        @Override public boolean onLongClick(        View v){
          showAppDetails(mChooserListAdapter.resolveInfoForPosition(itemIndex,true));
          return true;
        }
      }
);
    }
 else {
      v.setVisibility(View.GONE);
    }
  }
}
