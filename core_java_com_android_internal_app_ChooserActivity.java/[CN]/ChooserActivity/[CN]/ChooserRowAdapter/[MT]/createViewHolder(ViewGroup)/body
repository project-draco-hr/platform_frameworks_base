{
  final ViewGroup row=(ViewGroup)mLayoutInflater.inflate(R.layout.chooser_row,parent,false);
  final RowViewHolder holder=new RowViewHolder(row,mColumnCount);
  final int spec=MeasureSpec.makeMeasureSpec(0,MeasureSpec.UNSPECIFIED);
  for (int i=0; i < mColumnCount; i++) {
    final View v=mChooserListAdapter.createView(row);
    v.setOnClickListener(new OnClickListener(){
      @Override public void onClick(      View v){
        startSelected(holder.itemIndex,false,true);
      }
    }
);
    v.setOnLongClickListener(new OnLongClickListener(){
      @Override public boolean onLongClick(      View v){
        showAppDetails(mChooserListAdapter.resolveInfoForPosition(holder.itemIndex,true));
        return true;
      }
    }
);
    row.addView(v);
    holder.cells[i]=v;
    LayoutParams lp=v.getLayoutParams();
    v.measure(spec,spec);
    if (lp == null) {
      lp=new LayoutParams(LayoutParams.MATCH_PARENT,v.getMeasuredHeight());
      row.setLayoutParams(lp);
    }
 else {
      lp.height=v.getMeasuredHeight();
    }
  }
  holder.measure();
  LayoutParams lp=row.getLayoutParams();
  if (lp == null) {
    lp=new LayoutParams(LayoutParams.MATCH_PARENT,holder.measuredRowHeight);
    row.setLayoutParams(lp);
  }
 else {
    lp.height=holder.measuredRowHeight;
  }
  row.setTag(holder);
  return holder;
}
