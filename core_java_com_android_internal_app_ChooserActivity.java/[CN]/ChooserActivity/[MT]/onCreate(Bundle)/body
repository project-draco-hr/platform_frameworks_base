{
  Intent intent=getIntent();
  Parcelable targetParcelable=intent.getParcelableExtra(Intent.EXTRA_INTENT);
  if (!(targetParcelable instanceof Intent)) {
    Log.w("ChooserActivity","Target is not an intent: " + targetParcelable);
    finish();
    super.onCreate(null);
    return;
  }
  Intent target=(Intent)targetParcelable;
  if (target != null) {
    modifyTargetIntent(target);
  }
  Parcelable[] targetsParcelable=intent.getParcelableArrayExtra(Intent.EXTRA_ALTERNATE_INTENTS);
  if (targetsParcelable != null) {
    final boolean offset=target == null;
    Intent[] additionalTargets=new Intent[offset ? targetsParcelable.length - 1 : targetsParcelable.length];
    for (int i=0; i < targetsParcelable.length; i++) {
      if (!(targetsParcelable[i] instanceof Intent)) {
        Log.w(TAG,"EXTRA_ALTERNATE_INTENTS array entry #" + i + " is not an Intent: "+ targetsParcelable[i]);
        finish();
        super.onCreate(null);
        return;
      }
      final Intent additionalTarget=(Intent)targetsParcelable[i];
      if (i == 0 && target == null) {
        target=additionalTarget;
        modifyTargetIntent(target);
      }
 else {
        additionalTargets[offset ? i - 1 : i]=additionalTarget;
        modifyTargetIntent(additionalTarget);
      }
    }
    setAdditionalTargets(additionalTargets);
  }
  mReplacementExtras=intent.getBundleExtra(Intent.EXTRA_REPLACEMENT_EXTRAS);
  CharSequence title=intent.getCharSequenceExtra(Intent.EXTRA_TITLE);
  int defaultTitleRes=0;
  if (title == null) {
    defaultTitleRes=com.android.internal.R.string.chooseActivity;
  }
  Parcelable[] pa=intent.getParcelableArrayExtra(Intent.EXTRA_INITIAL_INTENTS);
  Intent[] initialIntents=null;
  if (pa != null) {
    initialIntents=new Intent[pa.length];
    for (int i=0; i < pa.length; i++) {
      if (!(pa[i] instanceof Intent)) {
        Log.w(TAG,"Initial intent #" + i + " not an Intent: "+ pa[i]);
        finish();
        super.onCreate(null);
        return;
      }
      final Intent in=(Intent)pa[i];
      modifyTargetIntent(in);
      initialIntents[i]=in;
    }
  }
  mReferrerFillInIntent=new Intent().putExtra(Intent.EXTRA_REFERRER,getReferrer());
  mChosenComponentSender=intent.getParcelableExtra(Intent.EXTRA_CHOSEN_COMPONENT_INTENT_SENDER);
  mRefinementIntentSender=intent.getParcelableExtra(Intent.EXTRA_CHOOSER_REFINEMENT_INTENT_SENDER);
  setSafeForwardingMode(true);
  mPinnedSharedPrefs=getPinnedSharedPrefs(this);
  super.onCreate(savedInstanceState,target,title,defaultTitleRes,initialIntents,null,false);
  MetricsLogger.action(this,MetricsEvent.ACTION_ACTIVITY_CHOOSER_SHOWN);
}
