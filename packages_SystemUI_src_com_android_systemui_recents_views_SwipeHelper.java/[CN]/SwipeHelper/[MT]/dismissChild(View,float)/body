{
  final boolean canAnimViewBeDismissed=mCallback.canChildBeDismissed(view);
  float newPos;
  if (velocity < 0 || (velocity == 0 && getTranslation(view) < 0) || (velocity == 0 && getTranslation(view) == 0 && mSwipeDirection == Y)) {
    newPos=-getSize(view);
  }
 else {
    newPos=getSize(view);
  }
  int duration=MAX_ESCAPE_ANIMATION_DURATION;
  if (velocity != 0) {
    duration=Math.min(duration,(int)(Math.abs(newPos - getTranslation(view)) * 1000f / Math.abs(velocity)));
  }
 else {
    duration=DEFAULT_ESCAPE_ANIMATION_DURATION;
  }
  ValueAnimator anim=createTranslationAnimation(view,newPos);
  anim.setInterpolator(sLinearInterpolator);
  anim.setDuration(duration);
  anim.addListener(new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator animation){
      mCallback.onChildDismissed(view);
      if (FADE_OUT_DURING_SWIPE && canAnimViewBeDismissed) {
        view.setAlpha(1.f);
      }
    }
  }
);
  anim.addUpdateListener(new AnimatorUpdateListener(){
    @Override public void onAnimationUpdate(    ValueAnimator animation){
      if (FADE_OUT_DURING_SWIPE && canAnimViewBeDismissed) {
        view.setAlpha(getAlphaForOffset(view));
      }
    }
  }
);
  anim.start();
}
