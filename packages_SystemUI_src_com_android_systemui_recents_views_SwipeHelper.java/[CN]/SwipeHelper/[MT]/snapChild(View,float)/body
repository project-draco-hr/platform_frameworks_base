{
  final boolean canAnimViewBeDismissed=mCallback.canChildBeDismissed(view);
  ValueAnimator anim=createTranslationAnimation(view,0);
  int duration=SNAP_ANIM_LEN;
  anim.setDuration(duration);
  anim.addUpdateListener(new AnimatorUpdateListener(){
    @Override public void onAnimationUpdate(    ValueAnimator animation){
      if (FADE_OUT_DURING_SWIPE && canAnimViewBeDismissed) {
        view.setAlpha(getAlphaForOffset(view));
      }
    }
  }
);
  anim.addListener(new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator animation){
      if (FADE_OUT_DURING_SWIPE && canAnimViewBeDismissed) {
        view.setAlpha(1.0f);
      }
      mCallback.onSnapBackCompleted(view);
    }
  }
);
  anim.start();
}
