{
  dest.writeInt(mType);
  Uri.writeToParcel(dest,mUri);
  if (mValues != null) {
    dest.writeInt(1);
    mValues.writeToParcel(dest,0);
  }
 else {
    dest.writeInt(0);
  }
  dest.writeParcelable(mEntity,0);
  if (mSelection != null) {
    dest.writeInt(1);
    dest.writeString(mSelection);
  }
 else {
    dest.writeInt(0);
  }
  if (mSelectionArgs != null) {
    dest.writeInt(1);
    dest.writeStringArray(mSelectionArgs);
  }
 else {
    dest.writeInt(0);
  }
  if (mExpectedCount != null) {
    dest.writeInt(1);
    dest.writeInt(mExpectedCount);
  }
 else {
    dest.writeInt(0);
  }
  if (mValuesBackReferences != null) {
    dest.writeInt(1);
    mValuesBackReferences.writeToParcel(dest,0);
  }
 else {
    dest.writeInt(0);
  }
  if (mSelectionArgsBackReferences != null) {
    dest.writeInt(1);
    dest.writeInt(mSelectionArgsBackReferences.size());
    for (    Map.Entry<Integer,Integer> entry : mSelectionArgsBackReferences.entrySet()) {
      dest.writeInt(entry.getKey());
      dest.writeInt(entry.getValue());
    }
  }
 else {
    dest.writeInt(0);
  }
}
