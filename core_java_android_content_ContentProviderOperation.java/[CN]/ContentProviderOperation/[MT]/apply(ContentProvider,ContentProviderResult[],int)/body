{
  ContentValues values=resolveValueBackReferences(backRefs,numBackRefs);
  String[] selectionArgs=resolveSelectionArgsBackReferences(backRefs,numBackRefs);
  if (mType == TYPE_INSERT) {
    Uri newUri=provider.insert(mUri,values);
    if (newUri == null) {
      throw new OperationApplicationException("insert failed");
    }
    return new ContentProviderResult(newUri);
  }
  int numRows;
  if (mType == TYPE_DELETE) {
    numRows=provider.delete(mUri,mSelection,selectionArgs);
  }
 else   if (mType == TYPE_UPDATE) {
    numRows=provider.update(mUri,values,mSelection,selectionArgs);
  }
 else   if (mType == TYPE_COUNT) {
    Cursor cursor=provider.query(mUri,COUNT_COLUMNS,mSelection,selectionArgs,null);
    try {
      if (!cursor.moveToNext()) {
        throw new RuntimeException("since we are doing a count query we should always " + "be able to move to the first row");
      }
      if (cursor.getCount() != 1) {
        throw new RuntimeException("since we are doing a count query there should " + "always be exacly row, found " + cursor.getCount());
      }
      numRows=cursor.getInt(0);
    }
  finally {
      cursor.close();
    }
  }
 else {
    throw new IllegalStateException("bad type, " + mType);
  }
  if (mExpectedCount != null && mExpectedCount != numRows) {
    throw new OperationApplicationException("wrong number of rows: " + numRows);
  }
  return new ContentProviderResult(numRows);
}
