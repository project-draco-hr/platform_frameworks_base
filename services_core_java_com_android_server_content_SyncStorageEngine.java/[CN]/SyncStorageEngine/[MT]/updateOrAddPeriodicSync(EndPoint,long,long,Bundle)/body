{
  if (Log.isLoggable(TAG,Log.VERBOSE)) {
    Log.v(TAG,"addPeriodicSync: " + info + " -> period "+ period+ ", flex "+ flextime+ ", extras "+ extras.toString());
  }
synchronized (mAuthorities) {
    if (period <= 0) {
      Log.e(TAG,"period < 0, should never happen in updateOrAddPeriodicSync");
    }
    if (extras == null) {
      Log.e(TAG,"null extras, should never happen in updateOrAddPeriodicSync:");
    }
    try {
      PeriodicSync toUpdate;
      if (info.target_provider) {
        toUpdate=new PeriodicSync(info.account,info.provider,extras,period,flextime);
      }
 else {
        toUpdate=new PeriodicSync(info.service,extras,period,flextime);
      }
      AuthorityInfo authority=getOrCreateAuthorityLocked(info,-1,false);
      boolean alreadyPresent=false;
      for (int i=0, N=authority.periodicSyncs.size(); i < N; i++) {
        PeriodicSync syncInfo=authority.periodicSyncs.get(i);
        if (SyncManager.syncExtrasEquals(syncInfo.extras,extras,true)) {
          if (period == syncInfo.period && flextime == syncInfo.flexTime) {
            return;
          }
          authority.periodicSyncs.set(i,toUpdate);
          alreadyPresent=true;
          break;
        }
      }
      if (!alreadyPresent) {
        authority.periodicSyncs.add(toUpdate);
        SyncStatusInfo status=getOrCreateSyncStatusLocked(authority.ident);
        status.setPeriodicSyncTime(authority.periodicSyncs.size() - 1,System.currentTimeMillis());
      }
    }
  finally {
      writeAccountInfoLocked();
      writeStatusLocked();
    }
  }
  reportChange(ContentResolver.SYNC_OBSERVER_TYPE_SETTINGS);
}
