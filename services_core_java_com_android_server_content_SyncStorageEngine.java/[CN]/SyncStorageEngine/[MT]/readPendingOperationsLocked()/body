{
  FileInputStream fis=null;
  if (!mPendingFile.getBaseFile().exists()) {
    if (Log.isLoggable(TAG_FILE,Log.VERBOSE)) {
      Log.v(TAG_FILE,"No pending operation file.");
    }
    return;
  }
  try {
    fis=mPendingFile.openRead();
    if (Log.isLoggable(TAG_FILE,Log.VERBOSE)) {
      Log.v(TAG_FILE,"Reading " + mPendingFile.getBaseFile());
    }
    XmlPullParser parser;
    parser=Xml.newPullParser();
    parser.setInput(fis,StandardCharsets.UTF_8.name());
    int eventType=parser.getEventType();
    while (eventType != XmlPullParser.START_TAG && eventType != XmlPullParser.END_DOCUMENT) {
      eventType=parser.next();
    }
    if (eventType == XmlPullParser.END_DOCUMENT)     return;
    do {
      PendingOperation pop=null;
      if (eventType == XmlPullParser.START_TAG) {
        try {
          String tagName=parser.getName();
          if (parser.getDepth() == 1 && "op".equals(tagName)) {
            String versionString=parser.getAttributeValue(null,XML_ATTR_VERSION);
            if (versionString == null || Integer.parseInt(versionString) != PENDING_OPERATION_VERSION) {
              Log.w(TAG,"Unknown pending operation version " + versionString);
              throw new java.io.IOException("Unknown version.");
            }
            int authorityId=Integer.parseInt(parser.getAttributeValue(null,XML_ATTR_AUTHORITYID));
            boolean expedited=Boolean.parseBoolean(parser.getAttributeValue(null,XML_ATTR_EXPEDITED));
            int syncSource=Integer.parseInt(parser.getAttributeValue(null,XML_ATTR_SOURCE));
            int reason=Integer.parseInt(parser.getAttributeValue(null,XML_ATTR_REASON));
            AuthorityInfo authority=mAuthorities.get(authorityId);
            if (Log.isLoggable(TAG_FILE,Log.VERBOSE)) {
              Log.v(TAG_FILE,authorityId + " " + expedited+ " "+ syncSource+ " "+ reason);
            }
            if (authority != null) {
              pop=new PendingOperation(authority,reason,syncSource,new Bundle(),expedited);
              pop.flatExtras=null;
              mPendingOperations.add(pop);
              if (Log.isLoggable(TAG_FILE,Log.VERBOSE)) {
                Log.v(TAG_FILE,"Adding pending op: " + pop.target + " src="+ pop.syncSource+ " reason="+ pop.reason+ " expedited="+ pop.expedited);
              }
            }
 else {
              pop=null;
              if (Log.isLoggable(TAG_FILE,Log.VERBOSE)) {
                Log.v(TAG_FILE,"No authority found for " + authorityId + ", skipping");
              }
            }
          }
 else           if (parser.getDepth() == 2 && pop != null && "extra".equals(tagName)) {
            parseExtra(parser,pop.extras);
          }
        }
 catch (        NumberFormatException e) {
          Log.d(TAG,"Invalid data in xml file.",e);
        }
      }
      eventType=parser.next();
    }
 while (eventType != XmlPullParser.END_DOCUMENT);
  }
 catch (  java.io.IOException e) {
    Log.w(TAG_FILE,"Error reading pending data.",e);
  }
catch (  XmlPullParserException e) {
    if (Log.isLoggable(TAG_FILE,Log.VERBOSE)) {
      Log.w(TAG_FILE,"Error parsing pending ops xml.",e);
    }
  }
 finally {
    if (fis != null) {
      try {
        fis.close();
      }
 catch (      java.io.IOException e1) {
      }
    }
  }
}
