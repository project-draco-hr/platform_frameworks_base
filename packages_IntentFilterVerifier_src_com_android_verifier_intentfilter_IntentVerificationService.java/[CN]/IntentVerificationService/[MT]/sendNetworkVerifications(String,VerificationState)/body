{
  final int verificationId=vs.verificationId;
  final String hosts=vs.hosts;
  String[] array=hosts.split(" ");
  for (  final String host : array) {
    try {
      final URL url=new URL(scheme,host,getAssociationPath());
      final String urlStr=url.toString();
      Log.d(TAG,"Using verification URL: " + urlStr);
      IntentVerificationRequest req=new IntentVerificationRequest(urlStr,new Response.Listener<JSONArray>(){
        @Override public void onResponse(        JSONArray response){
          Log.d(TAG,"From: " + urlStr + " received response: "+ response.toString());
          handleResponse(vs,host,response);
        }
      }
,new Response.ErrorListener(){
        @Override public void onErrorResponse(        VolleyError error){
          Slog.d(TAG,"From: " + urlStr + " got error: "+ error.getMessage()+ (error.networkResponse != null ? " with status code: " + error.networkResponse.statusCode : ""));
          handleError(vs,host);
        }
      }
);
      mRequestQueue.add(req);
    }
 catch (    MalformedURLException e) {
      Log.w(TAG,"Cannot send verificationId: " + verificationId + " to host: "+ host);
    }
  }
}
