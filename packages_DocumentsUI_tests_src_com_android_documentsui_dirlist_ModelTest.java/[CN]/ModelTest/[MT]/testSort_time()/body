{
  final int DL_COUNT=3;
  MatrixCursor c=new MatrixCursor(COLUMNS);
  Set<String> currentDownloads=new HashSet<>();
  for (int i=0; i < ITEM_COUNT; i++) {
    MatrixCursor.RowBuilder row=c.newRow();
    row.add(RootCursorWrapper.COLUMN_AUTHORITY,AUTHORITY);
    row.add(Document.COLUMN_DOCUMENT_ID,Integer.toString(i));
    row.add(Document.COLUMN_LAST_MODIFIED,System.currentTimeMillis());
  }
  for (int i=ITEM_COUNT; i < ITEM_COUNT + DL_COUNT; i++) {
    MatrixCursor.RowBuilder row=c.newRow();
    String id=Integer.toString(i);
    row.add(RootCursorWrapper.COLUMN_AUTHORITY,AUTHORITY);
    row.add(Document.COLUMN_DOCUMENT_ID,id);
    currentDownloads.add(Model.createModelId(AUTHORITY,id));
  }
  DirectoryResult r=new DirectoryResult();
  r.cursor=c;
  r.sortOrder=State.SORT_ORDER_LAST_MODIFIED;
  model.update(r);
  List<String> ids=model.getModelIds();
  assertEquals(ITEM_COUNT + DL_COUNT,ids.size());
  for (int i=0; i < DL_COUNT; i++) {
    assertTrue(currentDownloads.contains(ids.get(i)));
  }
}
