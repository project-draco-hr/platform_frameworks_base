{
  MatrixCursor cIn=new MatrixCursor(COLUMNS);
  final String AUTHORITY0="auth0";
  final String AUTHORITY1="auth1";
  for (int i=0; i < ITEM_COUNT; ++i) {
    MatrixCursor.RowBuilder row0=cIn.newRow();
    row0.add(RootCursorWrapper.COLUMN_AUTHORITY,AUTHORITY0);
    row0.add(Document.COLUMN_DOCUMENT_ID,Integer.toString(i));
    MatrixCursor.RowBuilder row1=cIn.newRow();
    row1.add(RootCursorWrapper.COLUMN_AUTHORITY,AUTHORITY1);
    row1.add(Document.COLUMN_DOCUMENT_ID,Integer.toString(i));
  }
  DirectoryResult r=new DirectoryResult();
  r.cursor=cIn;
  model.update(r);
  assertEquals(ITEM_COUNT * 2,model.getItemCount());
  BitSet b0=new BitSet(ITEM_COUNT);
  BitSet b1=new BitSet(ITEM_COUNT);
  for (  String id : model.getModelIds()) {
    Cursor cOut=model.getItem(id);
    String authority=DocumentInfo.getCursorString(cOut,RootCursorWrapper.COLUMN_AUTHORITY);
    String docId=DocumentInfo.getCursorString(cOut,Document.COLUMN_DOCUMENT_ID);
switch (authority) {
case AUTHORITY0:
      b0.set(Integer.parseInt(docId));
    break;
case AUTHORITY1:
  b1.set(Integer.parseInt(docId));
break;
default :
fail("Unrecognized authority string");
}
}
assertEquals(ITEM_COUNT,b0.cardinality());
assertEquals(ITEM_COUNT,b1.cardinality());
}
