{
  MatrixCursor c=new MatrixCursor(COLUMNS);
  for (int i=0; i < ITEM_COUNT; ++i) {
    MatrixCursor.RowBuilder row=c.newRow();
    row.add(RootCursorWrapper.COLUMN_AUTHORITY,AUTHORITY);
    row.add(Document.COLUMN_DOCUMENT_ID,Integer.toString(i));
    row.add(Document.COLUMN_SIZE,i);
    String mimeType=(i % 2 == 0) ? Document.MIME_TYPE_DIR : "text/*";
    row.add(Document.COLUMN_MIME_TYPE,mimeType);
  }
  DirectoryResult r=new DirectoryResult();
  r.cursor=c;
  r.sortOrder=State.SORT_ORDER_SIZE;
  model.update(r);
  boolean seenAllDirs=false;
  int previousSize=Integer.MAX_VALUE;
  BitSet seen=new BitSet(ITEM_COUNT);
  for (  String id : model.getModelIds()) {
    Cursor cOut=model.getItem(id);
    seen.set(cOut.getPosition());
    String mimeType=DocumentInfo.getCursorString(cOut,Document.COLUMN_MIME_TYPE);
    if (seenAllDirs) {
      assertFalse(Document.MIME_TYPE_DIR.equals(mimeType));
    }
 else {
      if (!Document.MIME_TYPE_DIR.equals(mimeType)) {
        seenAllDirs=true;
        previousSize=Integer.MAX_VALUE;
      }
    }
    int size=DocumentInfo.getCursorInt(c,Document.COLUMN_SIZE);
    assertTrue(previousSize >= size);
    previousSize=size;
  }
  assertEquals(ITEM_COUNT,seen.cardinality());
}
