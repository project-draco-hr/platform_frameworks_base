{
  SystemServicesProxy ssp=Recents.getSystemServices();
  RecentsActivityLaunchState launchState=Recents.getConfiguration().getLaunchState();
  mTaskIndexMap.clear();
  ArrayList<Task> tasks=stack.getStackTasks();
  if (tasks.isEmpty()) {
    mFrontMostTaskP=0;
    mMinScrollP=mMaxScrollP=mInitialScrollP=0;
    mNumStackTasks=mNumFreeformTasks=0;
    return;
  }
  ArrayList<Task> freeformTasks=new ArrayList<>();
  ArrayList<Task> stackTasks=new ArrayList<>();
  for (int i=0; i < tasks.size(); i++) {
    Task task=tasks.get(i);
    if (ignoreTasksSet.contains(task.key)) {
      continue;
    }
    if (task.isFreeformTask()) {
      freeformTasks.add(task);
    }
 else {
      stackTasks.add(task);
    }
  }
  mNumStackTasks=stackTasks.size();
  mNumFreeformTasks=freeformTasks.size();
  int taskCount=stackTasks.size();
  for (int i=0; i < taskCount; i++) {
    Task task=stackTasks.get(i);
    mTaskIndexMap.put(task.key.id,i);
  }
  if (!freeformTasks.isEmpty()) {
    mFreeformLayoutAlgorithm.update(freeformTasks,this);
  }
  Task launchTask=stack.getLaunchTarget();
  int launchTaskIndex=launchTask != null ? stack.indexOfStackTask(launchTask) : mNumStackTasks - 1;
  if (getInitialFocusState() == STATE_FOCUSED) {
    int maxBottomOffset=mStackBottomOffset + mTaskRect.height();
    float maxBottomNormX=getNormalizedXFromFocusedY(maxBottomOffset,FROM_BOTTOM);
    mFocusedRange.offset(0f);
    mMinScrollP=0;
    mMaxScrollP=Math.max(mMinScrollP,(mNumStackTasks - 1) - Math.max(0,mFocusedRange.getAbsoluteX(maxBottomNormX)));
    if (launchState.launchedFromHome) {
      mInitialScrollP=Utilities.clamp(launchTaskIndex,mMinScrollP,mMaxScrollP);
    }
 else {
      mInitialScrollP=Utilities.clamp(launchTaskIndex - 1,mMinScrollP,mMaxScrollP);
    }
    mInitialNormX=null;
  }
 else   if (!ssp.hasFreeformWorkspaceSupport() && mNumStackTasks == 1) {
    mMinScrollP=0;
    mMaxScrollP=0;
    mInitialScrollP=0;
    mInitialNormX=null;
  }
 else {
    int maxBottomOffset=mStackBottomOffset + mTaskRect.height();
    float maxBottomNormX=getNormalizedXFromUnfocusedY(maxBottomOffset,FROM_BOTTOM);
    mUnfocusedRange.offset(0f);
    mMinScrollP=0;
    mMaxScrollP=Math.max(mMinScrollP,(mNumStackTasks - 1) - Math.max(0,mUnfocusedRange.getAbsoluteX(maxBottomNormX)));
    boolean scrollToFront=launchState.launchedFromHome || launchState.launchedViaDockGesture;
    if (launchState.launchedWithAltTab) {
      mInitialScrollP=Utilities.clamp(launchTaskIndex,mMinScrollP,mMaxScrollP);
      mInitialNormX=null;
    }
 else     if (scrollToFront) {
      mInitialScrollP=Utilities.clamp(launchTaskIndex,mMinScrollP,mMaxScrollP);
      mInitialNormX=null;
    }
 else {
      float initialTopNormX=getNormalizedXFromUnfocusedY(mInitialTopOffset,FROM_TOP);
      mInitialScrollP=Math.max(mMinScrollP,Math.min(mMaxScrollP,(mNumStackTasks - 2)) - Math.max(0,mUnfocusedRange.getAbsoluteX(initialTopNormX)));
      mInitialNormX=new float[]{getNormalizedXFromUnfocusedY(mSystemInsets.bottom + mInitialBottomOffset,FROM_BOTTOM),initialTopNormX};
    }
  }
}
