{
  if (mNumStackTasks == 1) {
    float pTaskRelative=mMinScrollP - stackScroll;
    float scale=(mNumFreeformTasks > 0) ? 1f : SINGLE_TASK_SCALE;
    int topOffset=(mStackRect.height() - mTaskRect.height()) / 2;
    transformOut.scale=scale;
    transformOut.translationX=0;
    transformOut.translationY=(int)(topOffset + (pTaskRelative * mStackRect.height()));
    transformOut.translationZ=mMaxTranslationZ;
    transformOut.rect.set(mTaskRect);
    transformOut.rect.offset(0,transformOut.translationY);
    Utilities.scaleRectAboutCenter(transformOut.rect,transformOut.scale);
    transformOut.visible=true;
    transformOut.p=pTaskRelative;
    return transformOut;
  }
 else {
    int overscrollYOffset=0;
    if (mNumFreeformTasks > 0 && stackScroll > mStackEndScrollP) {
      float stackOverscroll=(stackScroll - mPreferredStackEndScrollP) / (mFreeformWorkspacePOffset - mFreeformWorkspaceGapPOffset);
      overscrollYOffset=(int)(Math.max(0,stackOverscroll) * (mFreeformWorkspaceOffset - mFreeformWorkspaceGapPOffset));
      stackScroll=Math.min(mPreferredStackEndScrollP,stackScroll);
    }
    float pTaskRelative=taskProgress - stackScroll;
    float pBounded=Math.max(0,Math.min(pTaskRelative,1f));
    if (pTaskRelative > 1f) {
      transformOut.reset();
      transformOut.rect.set(mTaskRect);
      return transformOut;
    }
    if (pTaskRelative < 0f) {
      if (prevTransform != null && Float.compare(prevTransform.p,0f) <= 0) {
        transformOut.reset();
        transformOut.rect.set(mTaskRect);
        return transformOut;
      }
    }
    float scale=sCurve.pToScale(pBounded);
    int scaleYOffset=(int)(((1f - scale) * mTaskRect.height()) / 2);
    transformOut.scale=scale;
    transformOut.translationX=0;
    transformOut.translationY=sCurve.pToX(pBounded,mStackRect) - mStackRect.top - scaleYOffset- overscrollYOffset;
    transformOut.translationZ=Math.max(mMinTranslationZ,mMinTranslationZ + (pBounded * (mMaxTranslationZ - mMinTranslationZ)));
    transformOut.rect.set(mTaskRect);
    transformOut.rect.offset(0,transformOut.translationY);
    Utilities.scaleRectAboutCenter(transformOut.rect,transformOut.scale);
    transformOut.visible=true;
    transformOut.p=pTaskRelative;
    if (DEBUG) {
      Log.d(TAG,"getStackTransform (normal): " + taskProgress + ", "+ stackScroll);
      Log.d(TAG,"\t" + transformOut);
    }
    return transformOut;
  }
}
