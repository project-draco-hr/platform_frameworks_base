{
  SystemServicesProxy ssp=Recents.getSystemServices();
  mUnfocusedRange.offset(stackScroll);
  float p=mUnfocusedRange.getNormalizedX(taskProgress);
  float yp=mUnfocusedCurveInterpolator.getInterpolation(p);
  float unfocusedP=p;
  int unFocusedY=(int)(Math.max(0f,(1f - yp)) * mCurrentStackRect.height());
  int focusedY=0;
  if (mFocusState > 0f) {
    mFocusedRange.offset(stackScroll);
    p=mFocusedRange.getNormalizedX(taskProgress);
    yp=mFocusedCurveInterpolator.getInterpolation(p);
    focusedY=(int)(Math.max(0f,(1f - yp)) * mCurrentStackRect.height());
  }
  if (frontTransform != null) {
    if (Float.compare(p,frontTransform.p) == 0) {
      transformOut.reset();
      return transformOut;
    }
  }
  if (!ssp.hasFreeformWorkspaceSupport() && mNumStackTasks == 1) {
    p=(mMinScrollP - stackScroll) / mNumStackTasks;
    int centerYOffset=(mCurrentStackRect.top - mTaskRect.top) + (mCurrentStackRect.height() - mTaskRect.height()) / 2;
    transformOut.translationY=(int)(centerYOffset + (p * mCurrentStackRect.height()));
    transformOut.translationZ=mMaxTranslationZ;
    transformOut.rect.set(mTaskRect);
    transformOut.p=p;
  }
 else {
    int y=unFocusedY + (int)(mFocusState * (focusedY - unFocusedY));
    transformOut.translationY=(mCurrentStackRect.top - mTaskRect.top) + y;
    transformOut.translationZ=Math.max(mMinTranslationZ,Math.min(mMaxTranslationZ,mMinTranslationZ + (p * (mMaxTranslationZ - mMinTranslationZ))));
    transformOut.rect.set(mTaskRect);
    transformOut.p=unfocusedP;
  }
  transformOut.scale=1f;
  transformOut.translationX=(mCurrentStackRect.width() - mTaskRect.width()) / 2;
  transformOut.rect.offset(transformOut.translationX,transformOut.translationY);
  Utilities.scaleRectAboutCenter(transformOut.rect,transformOut.scale);
  transformOut.visible=true;
  return transformOut;
}
