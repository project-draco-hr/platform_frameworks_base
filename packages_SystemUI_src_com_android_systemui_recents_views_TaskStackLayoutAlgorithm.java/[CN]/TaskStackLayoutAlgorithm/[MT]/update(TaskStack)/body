{
  if (DEBUG) {
    Log.d(TAG,"update");
  }
  mTaskProgressMap.clear();
  ArrayList<Task> tasks=stack.getTasks();
  if (tasks.isEmpty()) {
    mFrontMostTaskP=0;
    mMinScrollP=mMaxScrollP=mStackEndScrollP=mPreferredStackEndScrollP=0;
    mNumStackTasks=mNumFreeformTasks=0;
    return;
  }
  ArrayList<Task> freeformTasks=new ArrayList<>();
  ArrayList<Task> stackTasks=new ArrayList<>();
  for (int i=0; i < tasks.size(); i++) {
    Task task=tasks.get(i);
    if (task.isFreeformTask()) {
      freeformTasks.add(task);
    }
 else {
      stackTasks.add(task);
    }
  }
  mNumStackTasks=stackTasks.size();
  mNumFreeformTasks=freeformTasks.size();
  if (!stackTasks.isEmpty()) {
    float pAtBackMostTaskTop=0;
    float pAtFrontMostTaskTop=pAtBackMostTaskTop;
    int taskCount=stackTasks.size();
    for (int i=0; i < taskCount; i++) {
      Task task=stackTasks.get(i);
      mTaskProgressMap.put(task.key,pAtFrontMostTaskTop);
      if (i < (taskCount - 1)) {
        float pPeek=task.group.isFrontMostTask(task) ? mBetweenAffiliationPOffset : mWithinAffiliationPOffset;
        pAtFrontMostTaskTop+=pPeek;
      }
    }
    mFrontMostTaskP=pAtFrontMostTaskTop;
    mStackEndScrollP=alignToStackBottom(pAtFrontMostTaskTop,mTaskHeightPOffset);
    if (mNumStackTasks > 1) {
      mPreferredStackEndScrollP=mStackEndScrollP + mStackBottomPOffset;
      mMinScrollP=alignToStackBottom(pAtBackMostTaskTop,2 * mBetweenAffiliationPOffset);
    }
 else {
      mPreferredStackEndScrollP=mStackEndScrollP;
      mMinScrollP=mStackEndScrollP;
    }
  }
 else {
  }
  if (!freeformTasks.isEmpty()) {
    mFreeformLayoutAlgorithm.update(freeformTasks,this);
    mMaxScrollP=mStackEndScrollP + mFreeformWorkspacePOffset;
    mInitialScrollP=isInitialStateFreeform(stack) ? mMaxScrollP : mPreferredStackEndScrollP;
  }
 else {
    mMaxScrollP=mPreferredStackEndScrollP;
    mInitialScrollP=Math.max(mMinScrollP,mMaxScrollP - mTaskHalfHeightPOffset);
  }
  if (DEBUG) {
    Log.d(TAG,"mNumStackTasks: " + mNumStackTasks);
    Log.d(TAG,"mNumFreeformTasks: " + mNumFreeformTasks);
    Log.d(TAG,"mMinScrollP: " + mMinScrollP);
    Log.d(TAG,"mStackEndScrollP: " + mStackEndScrollP);
    Log.d(TAG,"mMaxScrollP: " + mMaxScrollP);
  }
}
