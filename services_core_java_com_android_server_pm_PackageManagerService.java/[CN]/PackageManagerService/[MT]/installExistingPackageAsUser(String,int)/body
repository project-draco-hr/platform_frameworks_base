{
  mContext.enforceCallingOrSelfPermission(android.Manifest.permission.INSTALL_PACKAGES,null);
  PackageSetting pkgSetting;
  final int uid=Binder.getCallingUid();
  enforceCrossUserPermission(uid,userId,true,true,"installExistingPackage for user " + userId);
  if (isUserRestricted(userId,UserManager.DISALLOW_INSTALL_APPS)) {
    return PackageManager.INSTALL_FAILED_USER_RESTRICTED;
  }
  long callingId=Binder.clearCallingIdentity();
  try {
    boolean installed=false;
synchronized (mPackages) {
      pkgSetting=mSettings.mPackages.get(packageName);
      if (pkgSetting == null) {
        return PackageManager.INSTALL_FAILED_INVALID_URI;
      }
      if (!pkgSetting.getInstalled(userId)) {
        pkgSetting.setInstalled(true,userId);
        pkgSetting.setHidden(false,userId);
        mSettings.writePackageRestrictionsLPr(userId);
        installed=true;
      }
    }
    if (installed) {
      if (pkgSetting.pkg != null) {
synchronized (mInstallLock) {
          prepareAppDataAfterInstallLIF(pkgSetting.pkg);
        }
      }
      sendPackageAddedForUser(packageName,pkgSetting,userId);
    }
  }
  finally {
    Binder.restoreCallingIdentity(callingId);
  }
  return PackageManager.INSTALL_SUCCEEDED;
}
