{
  if (existing.applicationInfo == null || update.applicationInfo == null) {
    return;
  }
  final File oldCodePath=new File(existing.applicationInfo.getCodePath());
  final File newCodePath=new File(update.applicationInfo.getCodePath());
  if (Objects.equals(oldCodePath,newCodePath)) {
    return;
  }
  File canonicalNewCodePath;
  try {
    canonicalNewCodePath=new File(PackageManagerServiceUtils.realpath(newCodePath));
  }
 catch (  IOException e) {
    Slog.w(TAG,"Failed to get canonical path.",e);
    return;
  }
  final File canonicalOldCodePath=new File(canonicalNewCodePath.getParentFile(),oldCodePath.getName());
  String oldMarkerPrefix=canonicalOldCodePath.getAbsolutePath().replace('/','@');
  if (!oldMarkerPrefix.endsWith("@")) {
    oldMarkerPrefix+="@";
  }
  String newMarkerPrefix=canonicalNewCodePath.getAbsolutePath().replace('/','@');
  if (!newMarkerPrefix.endsWith("@")) {
    newMarkerPrefix+="@";
  }
  List<String> updatedPaths=update.getAllCodePathsExcludingResourceOnly();
  List<String> markerSuffixes=new ArrayList<String>(updatedPaths.size());
  for (  String updatedPath : updatedPaths) {
    String updatedPathName=new File(updatedPath).getName();
    markerSuffixes.add(updatedPathName.replace('/','@'));
  }
  for (  int userId : resolveUserIds(user.getIdentifier())) {
    File profileDir=Environment.getDataProfilesDeForeignDexDirectory(userId);
    for (    String markerSuffix : markerSuffixes) {
      File oldForeignUseMark=new File(profileDir,oldMarkerPrefix + markerSuffix);
      File newForeignUseMark=new File(profileDir,newMarkerPrefix + markerSuffix);
      if (oldForeignUseMark.exists()) {
        try {
          Os.rename(oldForeignUseMark.getAbsolutePath(),newForeignUseMark.getAbsolutePath());
        }
 catch (        ErrnoException e) {
          Slog.w(TAG,"Failed to rename foreign use marker",e);
          oldForeignUseMark.delete();
        }
      }
    }
  }
}
