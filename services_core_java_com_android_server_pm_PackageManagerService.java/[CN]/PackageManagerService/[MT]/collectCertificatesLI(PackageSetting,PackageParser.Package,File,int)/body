{
  if (ps != null && ps.codePath.equals(srcFile) && ps.timeStamp == srcFile.lastModified() && !isCompatSignatureUpdateNeeded(pkg) && !isRecoverSignatureUpdateNeeded(pkg)) {
    long mSigningKeySetId=ps.keySetData.getProperSigningKeySet();
    KeySetManagerService ksms=mSettings.mKeySetManagerService;
    ArraySet<PublicKey> signingKs;
synchronized (mPackages) {
      signingKs=ksms.getPublicKeysFromKeySetLPr(mSigningKeySetId);
    }
    if (ps.signatures.mSignatures != null && ps.signatures.mSignatures.length != 0 && signingKs != null) {
      pkg.mSignatures=ps.signatures.mSignatures;
      pkg.mSigningKeys=signingKs;
      return;
    }
    Slog.w(TAG,"PackageSetting for " + ps.name + " is missing signatures.  Collecting certs again to recover them.");
  }
 else {
    Log.i(TAG,srcFile.toString() + " changed; collecting certs");
  }
  try {
    PackageParser.collectCertificates(pkg,policyFlags);
  }
 catch (  PackageParserException e) {
    throw PackageManagerException.from(e);
  }
}
