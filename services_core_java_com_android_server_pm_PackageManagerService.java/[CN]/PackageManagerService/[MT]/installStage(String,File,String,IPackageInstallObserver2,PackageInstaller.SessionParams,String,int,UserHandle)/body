{
  if (DEBUG_EPHEMERAL) {
    if ((sessionParams.installFlags & PackageManager.INSTALL_EPHEMERAL) != 0) {
      Slog.d(TAG,"Ephemeral install of " + packageName);
    }
  }
  final VerificationParams verifParams=new VerificationParams(null,sessionParams.originatingUri,sessionParams.referrerUri,sessionParams.originatingUid);
  verifParams.setInstallerUid(installerUid);
  final OriginInfo origin;
  if (stagedDir != null) {
    origin=OriginInfo.fromStagedFile(stagedDir);
  }
 else {
    origin=OriginInfo.fromStagedContainer(stagedCid);
  }
  final Message msg=mHandler.obtainMessage(INIT_COPY);
  final InstallParams params=new InstallParams(origin,null,observer,sessionParams.installFlags,installerPackageName,sessionParams.volumeUuid,verifParams,user,sessionParams.abiOverride,sessionParams.grantedRuntimePermissions);
  params.setTraceMethod("installStage").setTraceCookie(System.identityHashCode(params));
  msg.obj=params;
  Trace.asyncTraceBegin(TRACE_TAG_PACKAGE_MANAGER,"installStage",System.identityHashCode(msg.obj));
  Trace.asyncTraceBegin(TRACE_TAG_PACKAGE_MANAGER,"queueInstall",System.identityHashCode(msg.obj));
  mHandler.sendMessage(msg);
}
