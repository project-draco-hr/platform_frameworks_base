{
  Trace.traceBegin(TRACE_TAG_PACKAGE_MANAGER,"installNewPackage");
  String pkgName=pkg.packageName;
  if (DEBUG_INSTALL)   Slog.d(TAG,"installNewPackageLI: " + pkg);
synchronized (mPackages) {
    if (mSettings.mRenamedPackages.containsKey(pkgName)) {
      res.setError(INSTALL_FAILED_ALREADY_EXISTS,"Attempt to re-install " + pkgName + " without first uninstalling package running as "+ mSettings.mRenamedPackages.get(pkgName));
      return;
    }
    if (mPackages.containsKey(pkgName)) {
      res.setError(INSTALL_FAILED_ALREADY_EXISTS,"Attempt to re-install " + pkgName + " without first uninstalling.");
      return;
    }
  }
  try {
    PackageParser.Package newPackage=scanPackageTracedLI(pkg,parseFlags,scanFlags,System.currentTimeMillis(),user);
    updateSettingsLI(newPackage,installerPackageName,null,res,user);
    if (res.returnCode == PackageManager.INSTALL_SUCCEEDED) {
      prepareAppDataAfterInstall(newPackage);
    }
 else {
      deletePackageLI(pkgName,UserHandle.ALL,false,null,PackageManager.DELETE_KEEP_DATA,res.removedInfo,true,null);
    }
  }
 catch (  PackageManagerException e) {
    res.setError("Package couldn't be installed in " + pkg.codePath,e);
  }
  Trace.traceEnd(TRACE_TAG_PACKAGE_MANAGER);
}
