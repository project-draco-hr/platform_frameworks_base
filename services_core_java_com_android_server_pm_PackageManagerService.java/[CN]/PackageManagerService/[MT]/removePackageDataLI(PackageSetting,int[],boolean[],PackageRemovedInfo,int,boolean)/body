{
  String packageName=ps.name;
  if (DEBUG_REMOVE)   Slog.d(TAG,"removePackageDataLI: " + ps);
  removePackageLI(ps,(flags & REMOVE_CHATTY) != 0);
  final PackageSetting deletedPs;
synchronized (mPackages) {
    deletedPs=mSettings.mPackages.get(packageName);
    if (outInfo != null) {
      outInfo.removedPackage=packageName;
      outInfo.removedUsers=deletedPs != null ? deletedPs.queryInstalledUsers(sUserManager.getUserIds(),true) : null;
    }
  }
  if ((flags & PackageManager.DELETE_KEEP_DATA) == 0) {
    removeDataDirsLI(packageName);
    schedulePackageCleaning(packageName,UserHandle.USER_ALL,true);
  }
synchronized (mPackages) {
    if (deletedPs != null) {
      if ((flags & PackageManager.DELETE_KEEP_DATA) == 0) {
        if (outInfo != null) {
          outInfo.removedAppId=mSettings.removePackageLPw(packageName);
        }
        if (deletedPs != null) {
          updatePermissionsLPw(deletedPs.name,null,0);
          if (deletedPs.sharedUser != null) {
            mSettings.updateSharedUserPermsLPw(deletedPs,mGlobalGids);
          }
        }
        clearPackagePreferredActivitiesLPw(deletedPs.name,UserHandle.USER_ALL);
      }
      if (allUserHandles != null && perUserInstalled != null) {
        if (DEBUG_REMOVE) {
          Slog.d(TAG,"Propagating install state across downgrade");
        }
        for (int i=0; i < allUserHandles.length; i++) {
          if (DEBUG_REMOVE) {
            Slog.d(TAG,"    user " + allUserHandles[i] + " => "+ perUserInstalled[i]);
          }
          ps.setInstalled(perUserInstalled[i],allUserHandles[i]);
        }
      }
    }
    if (writeSettings) {
      mSettings.writeLPr();
    }
  }
  if (outInfo != null) {
    removeKeystoreDataIfNeeded(UserHandle.USER_ALL,outInfo.removedAppId);
  }
}
