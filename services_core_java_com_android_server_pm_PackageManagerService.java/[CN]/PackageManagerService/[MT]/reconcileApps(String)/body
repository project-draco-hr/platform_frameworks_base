{
  final File[] files=FileUtils.listFilesOrEmpty(Environment.getDataAppDirectory(volumeUuid));
  for (  File file : files) {
    final boolean isPackage=(isApkFile(file) || file.isDirectory()) && !PackageInstallerService.isStageName(file.getName());
    if (!isPackage) {
      continue;
    }
    boolean destroyApp=false;
    String packageName=null;
    try {
      final PackageLite pkg=PackageParser.parsePackageLite(file,PackageParser.PARSE_MUST_BE_APK);
      packageName=pkg.packageName;
synchronized (mPackages) {
        final PackageSetting ps=mSettings.mPackages.get(packageName);
        if (ps == null) {
          logCriticalInfo(Log.WARN,"Destroying " + packageName + " on + "+ volumeUuid+ " because we found no install record");
          destroyApp=true;
        }
 else         if (!TextUtils.equals(volumeUuid,ps.volumeUuid)) {
          logCriticalInfo(Log.WARN,"Destroying " + packageName + " on "+ volumeUuid+ " because we expected it on "+ ps.volumeUuid);
          destroyApp=true;
        }
      }
    }
 catch (    PackageParserException e) {
      logCriticalInfo(Log.WARN,"Destroying " + file + " due to parse failure: "+ e);
      destroyApp=true;
    }
    if (destroyApp) {
synchronized (mInstallLock) {
        if (packageName != null) {
          removeDataDirsLI(volumeUuid,packageName);
        }
        removeCodePathLI(file);
      }
    }
  }
}
