{
  MessageDigest digest=null;
  try {
    digest=MessageDigest.getInstance(EphemeralResolveInfo.SHA_ALGORITHM);
  }
 catch (  NoSuchAlgorithmException e) {
    return null;
  }
  final byte[] hostBytes=intent.getData().getHost().getBytes();
  final byte[] digestBytes=digest.digest(hostBytes);
  int shaPrefix=digestBytes[0] << 24 | digestBytes[1] << 16 | digestBytes[2] << 8 | digestBytes[3] << 0;
  final List<EphemeralResolveInfo> ephemeralResolveInfoList=mEphemeralResolverConnection.getEphemeralResolveInfoList(shaPrefix);
  if (ephemeralResolveInfoList == null || ephemeralResolveInfoList.size() == 0) {
    return null;
  }
  for (int i=ephemeralResolveInfoList.size() - 1; i >= 0; --i) {
    EphemeralResolveInfo ephemeralApplication=ephemeralResolveInfoList.get(i);
    if (!Arrays.equals(digestBytes,ephemeralApplication.getDigestBytes())) {
      continue;
    }
    final List<IntentFilter> filters=ephemeralApplication.getFilters();
    if (filters.isEmpty()) {
      continue;
    }
    final EphemeralIntentResolver ephemeralResolver=new EphemeralIntentResolver();
    for (int j=filters.size() - 1; j >= 0; --j) {
      final EphemeralResolveIntentInfo intentInfo=new EphemeralResolveIntentInfo(filters.get(j),ephemeralApplication);
      ephemeralResolver.addFilter(intentInfo);
    }
    List<EphemeralResolveInfo> matchedResolveInfoList=ephemeralResolver.queryIntent(intent,resolvedType,false,userId);
    if (!matchedResolveInfoList.isEmpty()) {
      return matchedResolveInfoList.get(0);
    }
  }
  return null;
}
