{
  final int userId=processName != null ? UserHandle.getUserId(uid) : UserHandle.getCallingUserId();
  if (!sUserManager.exists(userId))   return null;
  flags=augmentFlagsForUser(flags,userId,processName);
  ArrayList<ProviderInfo> finalList=null;
synchronized (mPackages) {
    final Iterator<PackageParser.Provider> i=mProviders.mProviders.values().iterator();
    while (i.hasNext()) {
      final PackageParser.Provider p=i.next();
      PackageSetting ps=mSettings.mPackages.get(p.owner.packageName);
      if (ps != null && p.info.authority != null && (processName == null || (p.info.processName.equals(processName) && UserHandle.isSameApp(p.info.applicationInfo.uid,uid))) && mSettings.isEnabledAndVisibleLPr(p.info,flags,userId) && (!mSafeMode || (p.info.applicationInfo.flags & ApplicationInfo.FLAG_SYSTEM) != 0)) {
        if (finalList == null) {
          finalList=new ArrayList<ProviderInfo>(3);
        }
        ProviderInfo info=PackageParser.generateProviderInfo(p,flags,ps.readUserState(userId),userId);
        if (info != null) {
          finalList.add(info);
        }
      }
    }
  }
  if (finalList != null) {
    Collections.sort(finalList,mProviderInitOrderSorter);
    return new ParceledListSlice<ProviderInfo>(finalList);
  }
  return null;
}
