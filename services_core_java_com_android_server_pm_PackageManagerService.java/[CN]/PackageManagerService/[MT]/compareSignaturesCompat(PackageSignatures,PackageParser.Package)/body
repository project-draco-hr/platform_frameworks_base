{
  if (!isCompatSignatureUpdateNeeded(scannedPkg)) {
    return PackageManager.SIGNATURE_NO_MATCH;
  }
  HashSet<Signature> existingSet=new HashSet<Signature>();
  for (  Signature sig : existingSigs.mSignatures) {
    existingSet.add(sig);
  }
  HashSet<Signature> scannedCompatSet=new HashSet<Signature>();
  for (  Signature sig : scannedPkg.mSignatures) {
    try {
      Signature[] chainSignatures=sig.getChainSignatures();
      for (      Signature chainSig : chainSignatures) {
        scannedCompatSet.add(chainSig);
      }
    }
 catch (    CertificateEncodingException e) {
      scannedCompatSet.add(sig);
    }
  }
  if (scannedCompatSet.equals(existingSet)) {
    existingSigs.assignSignatures(scannedPkg.mSignatures);
synchronized (mPackages) {
      mSettings.mKeySetManagerService.removeAppKeySetDataLPw(scannedPkg.packageName);
    }
    return PackageManager.SIGNATURE_MATCH;
  }
  return PackageManager.SIGNATURE_NO_MATCH;
}
