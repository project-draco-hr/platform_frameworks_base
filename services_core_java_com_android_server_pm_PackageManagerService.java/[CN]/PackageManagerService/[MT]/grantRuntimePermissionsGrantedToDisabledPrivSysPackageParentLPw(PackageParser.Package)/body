{
  if (pkg.parentPackage == null) {
    return;
  }
  if (pkg.requestedPermissions == null) {
    return;
  }
  final PackageSetting disabledSysParentPs=mSettings.getDisabledSystemPkgLPr(pkg.parentPackage.packageName);
  if (disabledSysParentPs == null || disabledSysParentPs.pkg == null || !disabledSysParentPs.isPrivileged() || (disabledSysParentPs.childPackageNames != null && !disabledSysParentPs.childPackageNames.isEmpty())) {
    return;
  }
  final int[] allUserIds=sUserManager.getUserIds();
  final int permCount=pkg.requestedPermissions.size();
  for (int i=0; i < permCount; i++) {
    String permission=pkg.requestedPermissions.get(i);
    BasePermission bp=mSettings.mPermissions.get(permission);
    if (bp == null || !(bp.isRuntime() || bp.isDevelopment())) {
      continue;
    }
    for (    int userId : allUserIds) {
      if (disabledSysParentPs.getPermissionsState().hasRuntimePermission(permission,userId)) {
        grantRuntimePermission(pkg.packageName,permission,userId);
      }
    }
  }
}
