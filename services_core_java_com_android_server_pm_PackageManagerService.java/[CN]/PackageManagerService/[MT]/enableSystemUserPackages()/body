{
  if (!UserManager.isSplitSystemUser()) {
    return;
  }
  AppsQueryHelper queryHelper=new AppsQueryHelper(this);
  Set<String> enableApps=new ArraySet<>();
  enableApps.addAll(queryHelper.queryApps(AppsQueryHelper.GET_NON_LAUNCHABLE_APPS | AppsQueryHelper.GET_APPS_WITH_INTERACT_ACROSS_USERS_PERM | AppsQueryHelper.GET_IMES,true,UserHandle.SYSTEM));
  ArraySet<String> wlApps=SystemConfig.getInstance().getSystemUserWhitelistedApps();
  enableApps.addAll(wlApps);
  enableApps.addAll(queryHelper.queryApps(AppsQueryHelper.GET_REQUIRED_FOR_SYSTEM_USER,false,UserHandle.SYSTEM));
  ArraySet<String> blApps=SystemConfig.getInstance().getSystemUserBlacklistedApps();
  enableApps.removeAll(blApps);
  Log.i(TAG,"Applications installed for system user: " + enableApps);
  List<String> allAps=queryHelper.queryApps(0,false,UserHandle.SYSTEM);
  final int allAppsSize=allAps.size();
synchronized (mPackages) {
    for (int i=0; i < allAppsSize; i++) {
      String pName=allAps.get(i);
      PackageSetting pkgSetting=mSettings.mPackages.get(pName);
      if (pkgSetting == null) {
        continue;
      }
      boolean install=enableApps.contains(pName);
      if (pkgSetting.getInstalled(UserHandle.USER_SYSTEM) != install) {
        Log.i(TAG,(install ? "Installing " : "Uninstalling ") + pName + " for system user");
        pkgSetting.setInstalled(install,UserHandle.USER_SYSTEM);
      }
    }
  }
}
