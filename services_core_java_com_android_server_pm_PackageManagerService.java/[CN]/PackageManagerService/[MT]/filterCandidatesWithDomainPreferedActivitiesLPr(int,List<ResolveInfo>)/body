{
  if (DEBUG_PREFERRED) {
    Slog.v("TAG","Filtering results with prefered activities. Candidates count: " + candidates.size());
  }
  final int userId=UserHandle.getCallingUserId();
  ArrayList<ResolveInfo> result=new ArrayList<ResolveInfo>();
  ArrayList<ResolveInfo> undefinedList=new ArrayList<ResolveInfo>();
  ArrayList<ResolveInfo> neverList=new ArrayList<ResolveInfo>();
  ArrayList<ResolveInfo> matchAllList=new ArrayList<ResolveInfo>();
synchronized (mPackages) {
    final int count=candidates.size();
    for (int n=0; n < count; n++) {
      ResolveInfo info=candidates.get(n);
      String packageName=info.activityInfo.packageName;
      PackageSetting ps=mSettings.mPackages.get(packageName);
      if (ps != null) {
        if (info.handleAllWebDataURI) {
          matchAllList.add(info);
          continue;
        }
        int status=getDomainVerificationStatusLPr(ps,userId);
        if (status == INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_ALWAYS) {
          result.add(info);
        }
 else         if (status == INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_NEVER) {
          neverList.add(info);
        }
 else         if (status == INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_UNDEFINED) {
          undefinedList.add(info);
        }
      }
    }
    if (result.size() == 0) {
      result.addAll(candidates);
    }
    result.removeAll(neverList);
    result.removeAll(matchAllList);
    result.removeAll(undefinedList);
    if (result.size() == 0) {
      result.addAll(undefinedList);
      if ((flags & MATCH_ALL) != 0) {
        result.addAll(matchAllList);
      }
 else {
        final String defaultBrowserPackageName=getDefaultBrowserPackageName(UserHandle.myUserId());
        if (!TextUtils.isEmpty(defaultBrowserPackageName)) {
          boolean defaultBrowserFound=false;
          final int browserCount=matchAllList.size();
          for (int n=0; n < browserCount; n++) {
            ResolveInfo browser=matchAllList.get(n);
            if (browser.activityInfo.packageName.equals(defaultBrowserPackageName)) {
              result.add(browser);
              defaultBrowserFound=true;
              break;
            }
          }
          if (!defaultBrowserFound) {
            result.addAll(matchAllList);
          }
        }
 else {
          result.addAll(matchAllList);
        }
      }
    }
  }
  if (DEBUG_PREFERRED) {
    Slog.v("TAG","Filtered results with prefered activities. New candidates count: " + result.size());
  }
  return result;
}
