{
  int numMatch=0;
  final PermissionsState permissionsState=ps.getPermissionsState();
  for (int i=0; i < permissions.length; i++) {
    final String permission=permissions[i];
    if (permissionsState.hasPermission(permission,userId)) {
      tmp[i]=true;
      numMatch++;
    }
 else {
      tmp[i]=false;
    }
  }
  if (numMatch == 0) {
    return;
  }
  PackageInfo pi;
  if (ps.pkg != null) {
    pi=generatePackageInfo(ps.pkg,flags,userId);
  }
 else {
    pi=generatePackageInfoFromSettingsLPw(ps.name,flags,userId);
  }
  if (pi != null) {
    if ((flags & PackageManager.GET_PERMISSIONS) == 0) {
      if (numMatch == permissions.length) {
        pi.requestedPermissions=permissions;
      }
 else {
        pi.requestedPermissions=new String[numMatch];
        numMatch=0;
        for (int i=0; i < permissions.length; i++) {
          if (tmp[i]) {
            pi.requestedPermissions[numMatch]=permissions[i];
            numMatch++;
          }
        }
      }
    }
    list.add(pi);
  }
}
