{
  Trace.traceBegin(TRACE_TAG_PACKAGE_MANAGER,"scanPackage");
  if ((scanFlags & SCAN_CHECK_ONLY) == 0) {
    if (pkg.childPackages != null && pkg.childPackages.size() > 0) {
      scanFlags|=SCAN_CHECK_ONLY;
    }
  }
 else {
    scanFlags&=~SCAN_CHECK_ONLY;
  }
  final PackageParser.Package scannedPkg;
  try {
    scannedPkg=scanPackageLI(pkg,parseFlags,scanFlags,currentTime,user);
    final int childCount=(pkg.childPackages != null) ? pkg.childPackages.size() : 0;
    for (int i=0; i < childCount; i++) {
      PackageParser.Package childPkg=pkg.childPackages.get(i);
      scanPackageLI(childPkg,parseFlags,scanFlags,currentTime,user);
    }
  }
  finally {
    Trace.traceEnd(TRACE_TAG_PACKAGE_MANAGER);
  }
  if ((scanFlags & SCAN_CHECK_ONLY) != 0) {
    return scanPackageTracedLI(pkg,parseFlags,scanFlags,currentTime,user);
  }
  return scannedPkg;
}
