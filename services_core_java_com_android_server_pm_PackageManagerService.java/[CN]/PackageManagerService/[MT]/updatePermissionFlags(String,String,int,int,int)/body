{
  if (!sUserManager.exists(userId)) {
    return;
  }
  mContext.enforceCallingOrSelfPermission(android.Manifest.permission.GRANT_REVOKE_PERMISSIONS,"updatePermissionFlags");
  enforceCrossUserPermission(Binder.getCallingUid(),userId,true,false,"updatePermissionFlags");
  enforceOnlySystemUpdatesPermissionPolicyFlags(flagMask,flagValues);
synchronized (mPackages) {
    final PackageParser.Package pkg=mPackages.get(packageName);
    if (pkg == null) {
      throw new IllegalArgumentException("Unknown package: " + packageName);
    }
    final BasePermission bp=mSettings.mPermissions.get(name);
    if (bp == null) {
      throw new IllegalArgumentException("Unknown permission: " + name);
    }
    SettingBase sb=(SettingBase)pkg.mExtras;
    if (sb == null) {
      throw new IllegalArgumentException("Unknown package: " + packageName);
    }
    PermissionsState permissionsState=sb.getPermissionsState();
    if (permissionsState.updatePermissionFlags(bp,userId,flagMask,flagValues)) {
      if (permissionsState.getInstallPermissionState(name) != null) {
        scheduleWriteSettingsLocked();
      }
 else       if (permissionsState.getRuntimePermissionState(name,userId) != null) {
        mSettings.writeRuntimePermissionsForUserLPr(userId,false);
      }
    }
  }
}
