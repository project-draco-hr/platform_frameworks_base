{
  PackageSetting requirer=null;
  for (  PackageSetting ps : packagesForUser) {
    if (ps.cpuAbiString != null) {
      final String instructionSet=VMRuntime.getInstructionSet(ps.cpuAbiString);
      if (requiredInstructionSet != null) {
        if (!instructionSet.equals(requiredInstructionSet)) {
          String errorMessage="Instruction set mismatch, " + ((requirer == null) ? "[caller]" : requirer.pkg) + " requires "+ requiredInstructionSet+ " whereas "+ ps.pkg+ " requires "+ instructionSet;
          Slog.e(TAG,errorMessage);
          reportSettingsProblem(Log.WARN,errorMessage);
          return false;
        }
      }
 else {
        requiredInstructionSet=instructionSet;
        requirer=ps;
      }
    }
  }
  if (requiredInstructionSet != null) {
    for (    PackageSetting ps : packagesForUser) {
      if (ps.cpuAbiString == null) {
        ps.cpuAbiString=requirer.cpuAbiString;
        if (ps.pkg != null) {
          ps.pkg.applicationInfo.cpuAbi=requirer.cpuAbiString;
          Slog.i(TAG,"Adjusting ABI for : " + ps.name + " to "+ ps.cpuAbiString);
          if (performDexOptLI(ps.pkg,forceDexOpt,deferDexOpt,true) == DEX_OPT_FAILED) {
            ps.cpuAbiString=null;
            ps.pkg.applicationInfo.cpuAbi=null;
            return false;
          }
 else {
            mInstaller.rmdex(ps.codePathString,getPreferredInstructionSet());
          }
        }
      }
    }
  }
  return true;
}
