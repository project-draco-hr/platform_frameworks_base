{
  final String[] packageArray=mContext.getResources().getStringArray(R.array.config_ephemeralResolverPackage);
  if (packageArray.length == 0) {
    if (DEBUG_EPHEMERAL) {
      Slog.d(TAG,"Ephemeral resolver NOT found; empty package list");
    }
    return null;
  }
  final Intent resolverIntent=new Intent(Intent.ACTION_RESOLVE_EPHEMERAL_PACKAGE);
  final List<ResolveInfo> resolvers=queryIntentServicesInternal(resolverIntent,null,MATCH_SYSTEM_ONLY | MATCH_ENCRYPTION_AWARE_AND_UNAWARE,UserHandle.USER_SYSTEM);
  final int N=resolvers.size();
  if (N == 0) {
    if (DEBUG_EPHEMERAL) {
      Slog.d(TAG,"Ephemeral resolver NOT found; no matching intent filters");
    }
    return null;
  }
  final Set<String> possiblePackages=new ArraySet<>(Arrays.asList(packageArray));
  for (int i=0; i < N; i++) {
    final ResolveInfo info=resolvers.get(i);
    if (info.serviceInfo == null) {
      continue;
    }
    final String packageName=info.serviceInfo.packageName;
    if (!possiblePackages.contains(packageName)) {
      if (DEBUG_EPHEMERAL) {
        Slog.d(TAG,"Ephemeral resolver not in allowed package list;" + " pkg: " + packageName + ", info:"+ info);
      }
      continue;
    }
    if (DEBUG_EPHEMERAL) {
      Slog.v(TAG,"Ephemeral resolver found;" + " pkg: " + packageName + ", info:"+ info);
    }
    return new ComponentName(packageName,info.serviceInfo.name);
  }
  if (DEBUG_EPHEMERAL) {
    Slog.v(TAG,"Ephemeral resolver NOT found");
  }
  return null;
}
