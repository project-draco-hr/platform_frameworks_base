{
  if (isSystemApp(pkg)) {
    PackageSetting ps=mSettings.mPackages.get(pkg.applicationInfo.packageName);
    if (!isUpdatedSystemApp(pkg)) {
      setBundledAppAbisAndRoots(pkg,ps);
    }
  }
  if (pkg.usesLibraries != null || pkg.usesOptionalLibraries != null) {
    final ArraySet<String> usesLibraryFiles=new ArraySet<>();
    int N=pkg.usesLibraries != null ? pkg.usesLibraries.size() : 0;
    for (int i=0; i < N; i++) {
      final SharedLibraryEntry file=mSharedLibraries.get(pkg.usesLibraries.get(i));
      if (file == null) {
        throw new PackageManagerException(INSTALL_FAILED_MISSING_SHARED_LIBRARY,"Package " + pkg.packageName + " requires unavailable shared library "+ pkg.usesLibraries.get(i)+ "; failing!");
      }
      addSharedLibraryLPw(usesLibraryFiles,file,changingLib);
    }
    N=pkg.usesOptionalLibraries != null ? pkg.usesOptionalLibraries.size() : 0;
    for (int i=0; i < N; i++) {
      final SharedLibraryEntry file=mSharedLibraries.get(pkg.usesOptionalLibraries.get(i));
      if (file == null) {
        Slog.w(TAG,"Package " + pkg.packageName + " desires unavailable shared library "+ pkg.usesOptionalLibraries.get(i)+ "; ignoring!");
      }
 else {
        addSharedLibraryLPw(usesLibraryFiles,file,changingLib);
      }
    }
    N=usesLibraryFiles.size();
    if (N > 0) {
      pkg.usesLibraryFiles=usesLibraryFiles.toArray(new String[N]);
    }
 else {
      pkg.usesLibraryFiles=null;
    }
  }
}
