{
  if (pkg.isForwardLocked()) {
    return;
  }
  for (  String path : pkg.getAllCodePathsExcludingResourceOnly()) {
    try {
      path=PackageManagerServiceUtils.realpath(new File(path));
    }
 catch (    IOException e) {
      Slog.w(TAG,"Failed to get canonical path",e);
      continue;
    }
    final String useMarker=path.replace('/','@');
    for (    int realUserId : resolveUserIds(userId)) {
      File profileDir=Environment.getDataProfilesDeForeignDexDirectory(realUserId);
      File foreignUseMark=new File(profileDir,useMarker);
      if (foreignUseMark.exists()) {
        if (!foreignUseMark.delete()) {
          Slog.w(TAG,"Unable to delete foreign user mark for package: " + pkg.packageName);
        }
      }
      File[] markers=profileDir.listFiles();
      if (markers != null) {
        final String searchString="@" + pkg.packageName + "@";
        for (        File marker : markers) {
          if (marker.getName().indexOf(searchString) > 0) {
            if (!marker.delete()) {
              Slog.w(TAG,"Unable to delete foreign user mark for package: " + pkg.packageName);
            }
          }
        }
      }
    }
  }
}
