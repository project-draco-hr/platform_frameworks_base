{
  if (UserHandle.getAppId(callingUid) == Process.SYSTEM_UID) {
    return;
  }
  int callingUserId=UserHandle.getUserId(callingUid);
  if (callingUserId != userId) {
    throw new SecurityException("calling uid " + callingUid + " pretends to own "+ pkg+ " on user "+ userId+ " but belongs to user "+ callingUserId);
  }
  PackageInfo pi=getPackageInfo(pkg,0,callingUserId);
  if (pi == null) {
    throw new IllegalArgumentException("Unknown package " + pkg + " on user "+ callingUserId);
  }
  if (!UserHandle.isSameApp(pi.applicationInfo.uid,callingUid)) {
    throw new SecurityException("Calling uid " + callingUid + " does not own package "+ pkg);
  }
}
