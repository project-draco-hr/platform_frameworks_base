{
  if (packageName == null) {
    Slog.w(TAG,"Attempt to delete null packageName.");
    return false;
  }
  if (DEBUG_REMOVE)   Slog.d(TAG,"deletePackageLI: " + packageName + " user "+ user);
  PackageSetting ps;
  boolean dataOnly=false;
  int removeUser=-1;
  int appId=-1;
synchronized (mPackages) {
    ps=mSettings.mPackages.get(packageName);
    if (ps == null) {
      Slog.w(TAG,"Package named '" + packageName + "' doesn't exist.");
      return false;
    }
    if ((!isSystemApp(ps) || (flags & PackageManager.DELETE_SYSTEM_APP) != 0) && user != null && user.getIdentifier() != UserHandle.USER_ALL) {
      if (DEBUG_REMOVE)       Slog.d(TAG,"Only deleting for single user");
      ps.setUserState(user.getIdentifier(),COMPONENT_ENABLED_STATE_DEFAULT,false,true,true,false,null,null,null,false,INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_UNDEFINED);
      if (!isSystemApp(ps)) {
        if (ps.isAnyInstalled(sUserManager.getUserIds())) {
          if (DEBUG_REMOVE)           Slog.d(TAG,"Still installed by other users");
          removeUser=user.getIdentifier();
          appId=ps.appId;
          scheduleWritePackageRestrictionsLocked(removeUser);
        }
 else {
          if (DEBUG_REMOVE)           Slog.d(TAG,"Not installed by other users, full delete");
          ps.setInstalled(true,user.getIdentifier());
        }
      }
 else {
        if (DEBUG_REMOVE)         Slog.d(TAG,"Deleting system app");
        removeUser=user.getIdentifier();
        appId=ps.appId;
        scheduleWritePackageRestrictionsLocked(removeUser);
      }
    }
  }
  if (removeUser >= 0) {
    if (DEBUG_REMOVE)     Slog.d(TAG,"Updating install state for user: " + removeUser);
    if (outInfo != null) {
      outInfo.removedPackage=packageName;
      outInfo.removedAppId=appId;
      outInfo.removedUsers=new int[]{removeUser};
    }
    mInstaller.clearUserData(ps.volumeUuid,packageName,removeUser);
    removeKeystoreDataIfNeeded(removeUser,appId);
    schedulePackageCleaning(packageName,removeUser,false);
synchronized (mPackages) {
      if (clearPackagePreferredActivitiesLPw(packageName,removeUser)) {
        scheduleWritePackageRestrictionsLocked(removeUser);
      }
      resetUserChangesToRuntimePermissionsAndFlagsLocked(ps,removeUser);
    }
    return true;
  }
  if (dataOnly) {
    if (DEBUG_REMOVE)     Slog.d(TAG,"Removing package data only");
    removePackageDataLI(ps,null,null,outInfo,flags,writeSettings);
    return true;
  }
  boolean ret=false;
  if (isSystemApp(ps)) {
    if (DEBUG_REMOVE)     Slog.d(TAG,"Removing system package:" + ps.name);
    ret=deleteSystemPackageLI(ps,allUserHandles,perUserInstalled,flags,outInfo,writeSettings);
  }
 else {
    if (DEBUG_REMOVE)     Slog.d(TAG,"Removing non-system package:" + ps.name);
    killApplication(packageName,ps.appId,"uninstall pkg");
    ret=deleteInstalledPackageLI(ps,deleteCodeAndResources,flags,allUserHandles,perUserInstalled,outInfo,writeSettings);
  }
  return ret;
}
