{
  mContext.enforceCallingOrSelfPermission(android.Manifest.permission.INTERACT_ACROSS_USERS_FULL,null);
  int callingUid=Binder.getCallingUid();
  enforceOwnerRights(ownerPackage,ownerUserId,callingUid);
  enforceShellRestriction(UserManager.DISALLOW_DEBUGGING_FEATURES,callingUid,sourceUserId);
  if (intentFilter.countActions() == 0) {
    Slog.w(TAG,"Cannot set a crossProfile intent filter with no filter actions");
    return;
  }
synchronized (mPackages) {
    CrossProfileIntentFilter newFilter=new CrossProfileIntentFilter(intentFilter,ownerPackage,UserHandle.getUserId(callingUid),targetUserId,flags);
    CrossProfileIntentResolver resolver=mSettings.editCrossProfileIntentResolverLPw(sourceUserId);
    ArrayList<CrossProfileIntentFilter> existing=resolver.findFilters(intentFilter);
    if (existing != null) {
      int size=existing.size();
      for (int i=0; i < size; i++) {
        if (newFilter.equalsIgnoreFilter(existing.get(i))) {
          return;
        }
      }
    }
    resolver.addFilter(newFilter);
    scheduleWritePackageRestrictionsLocked(sourceUserId);
  }
}
