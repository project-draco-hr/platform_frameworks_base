{
  boolean allowed;
  allowed=(compareSignatures(bp.packageSetting.signatures.mSignatures,pkg.mSignatures) == PackageManager.SIGNATURE_MATCH) || (compareSignatures(mPlatformPackage.mSignatures,pkg.mSignatures) == PackageManager.SIGNATURE_MATCH);
  if (!allowed && (bp.protectionLevel & PermissionInfo.PROTECTION_FLAG_PRIVILEGED) != 0) {
    if (isSystemApp(pkg)) {
      if (pkg.isUpdatedSystemApp()) {
        final PackageSetting sysPs=mSettings.getDisabledSystemPkgLPr(pkg.packageName);
        if (sysPs != null && sysPs.getPermissionsState().hasInstallPermission(perm)) {
          if (sysPs.isPrivileged()) {
            allowed=true;
          }
        }
 else {
          if (sysPs != null && sysPs.pkg != null && sysPs.isPrivileged()) {
            for (int j=0; j < sysPs.pkg.requestedPermissions.size(); j++) {
              if (perm.equals(sysPs.pkg.requestedPermissions.get(j))) {
                allowed=true;
                break;
              }
            }
          }
          if (pkg.parentPackage != null) {
            final PackageSetting disabledSysParentPs=mSettings.getDisabledSystemPkgLPr(pkg.parentPackage.packageName);
            if (disabledSysParentPs != null && disabledSysParentPs.pkg != null && disabledSysParentPs.isPrivileged()) {
              if (isPackageRequestingPermission(disabledSysParentPs.pkg,perm)) {
                allowed=true;
              }
 else               if (disabledSysParentPs.pkg.childPackages != null) {
                final int count=disabledSysParentPs.pkg.childPackages.size();
                for (int i=0; i < count; i++) {
                  PackageParser.Package disabledSysChildPkg=disabledSysParentPs.pkg.childPackages.get(i);
                  if (isPackageRequestingPermission(disabledSysChildPkg,perm)) {
                    allowed=true;
                    break;
                  }
                }
              }
            }
          }
        }
      }
 else {
        allowed=isPrivilegedApp(pkg);
      }
    }
  }
  if (!allowed) {
    if (!allowed && (bp.protectionLevel & PermissionInfo.PROTECTION_FLAG_PRE23) != 0 && pkg.applicationInfo.targetSdkVersion < Build.VERSION_CODES.M) {
      allowed=true;
    }
    if (!allowed && (bp.protectionLevel & PermissionInfo.PROTECTION_FLAG_INSTALLER) != 0 && pkg.packageName.equals(mRequiredInstallerPackage)) {
      allowed=true;
    }
    if (!allowed && (bp.protectionLevel & PermissionInfo.PROTECTION_FLAG_VERIFIER) != 0 && pkg.packageName.equals(mRequiredVerifierPackage)) {
      allowed=true;
    }
    if (!allowed && (bp.protectionLevel & PermissionInfo.PROTECTION_FLAG_PREINSTALLED) != 0 && isSystemApp(pkg)) {
      allowed=true;
    }
    if (!allowed && (bp.protectionLevel & PermissionInfo.PROTECTION_FLAG_DEVELOPMENT) != 0) {
      allowed=origPermissions.hasInstallPermission(perm);
    }
  }
  return allowed;
}
