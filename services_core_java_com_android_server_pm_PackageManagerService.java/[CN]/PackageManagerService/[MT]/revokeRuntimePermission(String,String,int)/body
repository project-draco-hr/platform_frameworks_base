{
  if (!sUserManager.exists(userId)) {
    Log.e(TAG,"No such user:" + userId);
    return;
  }
  mContext.enforceCallingOrSelfPermission(android.Manifest.permission.GRANT_REVOKE_PERMISSIONS,"revokeRuntimePermission");
  enforceCrossUserPermission(Binder.getCallingUid(),userId,true,false,"revokeRuntimePermission");
  final SettingBase sb;
synchronized (mPackages) {
    final PackageParser.Package pkg=mPackages.get(packageName);
    if (pkg == null) {
      throw new IllegalArgumentException("Unknown package: " + packageName);
    }
    final BasePermission bp=mSettings.mPermissions.get(name);
    if (bp == null) {
      throw new IllegalArgumentException("Unknown permission: " + name);
    }
    enforceDeclaredAsUsedAndRuntimePermission(pkg,bp);
    sb=(SettingBase)pkg.mExtras;
    if (sb == null) {
      throw new IllegalArgumentException("Unknown package: " + packageName);
    }
    final PermissionsState permissionsState=sb.getPermissionsState();
    final int flags=permissionsState.getPermissionFlags(name,userId);
    if ((flags & PackageManager.FLAG_PERMISSION_SYSTEM_FIXED) != 0) {
      throw new SecurityException("Cannot revoke system fixed permission: " + name + " for package: "+ packageName);
    }
    if (permissionsState.revokeRuntimePermission(bp,userId) == PermissionsState.PERMISSION_OPERATION_FAILURE) {
      return;
    }
    mOnPermissionChangeListeners.onPermissionsChanged(pkg.applicationInfo.uid);
    mSettings.writeRuntimePermissionsForUserLPr(userId,true);
  }
  killSettingPackagesForUser(sb,userId,KILL_APP_REASON_PERMISSIONS_REVOKED);
}
