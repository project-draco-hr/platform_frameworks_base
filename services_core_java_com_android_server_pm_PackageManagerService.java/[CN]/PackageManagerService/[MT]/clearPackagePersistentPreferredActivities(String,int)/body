{
  int callingUid=Binder.getCallingUid();
  if (callingUid != Process.SYSTEM_UID) {
    throw new SecurityException("clearPackagePersistentPreferredActivities can only be run by the system");
  }
  ArrayList<PersistentPreferredActivity> removed=null;
  boolean changed=false;
synchronized (mPackages) {
    for (int i=0; i < mSettings.mPersistentPreferredActivities.size(); i++) {
      final int thisUserId=mSettings.mPersistentPreferredActivities.keyAt(i);
      PersistentPreferredIntentResolver ppir=mSettings.mPersistentPreferredActivities.valueAt(i);
      if (userId != thisUserId) {
        continue;
      }
      Iterator<PersistentPreferredActivity> it=ppir.filterIterator();
      while (it.hasNext()) {
        PersistentPreferredActivity ppa=it.next();
        if (ppa.mComponent.getPackageName().equals(packageName)) {
          if (removed == null) {
            removed=new ArrayList<PersistentPreferredActivity>();
          }
          removed.add(ppa);
        }
      }
      if (removed != null) {
        for (int j=0; j < removed.size(); j++) {
          PersistentPreferredActivity ppa=removed.get(j);
          ppir.removeFilter(ppa);
        }
        changed=true;
      }
    }
    if (changed) {
      scheduleWritePackageRestrictionsLocked(userId);
    }
  }
}
