{
  if ((scanFlags & SCAN_CHECK_ONLY) == 0) {
    if (pkg.childPackages != null && pkg.childPackages.size() > 0) {
      scanFlags|=SCAN_CHECK_ONLY;
    }
  }
 else {
    scanFlags&=~SCAN_CHECK_ONLY;
  }
  PackageParser.Package scannedPkg=scanPackageInternalLI(pkg,scanFile,policyFlags,scanFlags,currentTime,user);
  final int childCount=(pkg.childPackages != null) ? pkg.childPackages.size() : 0;
  for (int i=0; i < childCount; i++) {
    PackageParser.Package childPackage=pkg.childPackages.get(i);
    scanPackageInternalLI(childPackage,scanFile,policyFlags,scanFlags,currentTime,user);
  }
  if ((scanFlags & SCAN_CHECK_ONLY) != 0) {
    return scanPackageLI(pkg,scanFile,policyFlags,scanFlags,currentTime,user);
  }
  return scannedPkg;
}
