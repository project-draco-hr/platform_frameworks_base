{
  if (info.legacyNativeLibraryDir != null) {
    if (DEBUG_ABI_SELECTION) {
      Log.i(TAG,"Set nativeLibraryDir [non_cluster] for: " + pkg.packageName + " to "+ info.legacyNativeLibraryDir);
    }
    info.nativeLibraryDir=info.legacyNativeLibraryDir;
  }
 else   if (info.primaryCpuAbi != null) {
    final boolean is64Bit=VMRuntime.is64BitAbi(info.primaryCpuAbi);
    if (info.apkRoot != null) {
      final String apkName=deriveCodePathName(pkg.applicationInfo.getCodePath());
      final String libDir=is64Bit ? LIB64_DIR_NAME : LIB_DIR_NAME;
      info.nativeLibraryDir=(new File(info.apkRoot,new File(libDir,apkName).getAbsolutePath())).getAbsolutePath();
      if (DEBUG_ABI_SELECTION) {
        Log.i(TAG,"Set nativeLibraryDir [system] for: " + pkg.packageName + " to "+ info.nativeLibraryDir);
      }
    }
 else {
      final String codePath=pkg.codePath;
      final File libPath=new File(new File(codePath,LIB_DIR_NAME),VMRuntime.getInstructionSet(info.primaryCpuAbi));
      info.nativeLibraryDir=libPath.getAbsolutePath();
      if (DEBUG_ABI_SELECTION) {
        Log.i(TAG,"Set nativeLibraryDir [cluster] for: " + pkg.packageName + " to "+ info.nativeLibraryDir);
      }
    }
  }
 else {
    if (DEBUG_ABI_SELECTION) {
      Log.i(TAG,"Setting nativeLibraryDir to null for: " + pkg.packageName);
    }
    info.nativeLibraryDir=null;
  }
}
