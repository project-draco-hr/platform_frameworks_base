{
  int size=pkg.activities.size();
  if (size == 0) {
    Slog.d(TAG,"No activity, so no need to verify any IntentFilter!");
    return;
  }
  final boolean hasDomainURLs=hasDomainURLs(pkg);
  if (!hasDomainURLs) {
    Slog.d(TAG,"No domain URLs, so no need to verify any IntentFilter!");
    return;
  }
  Slog.d(TAG,"Checking for userId:" + userId + " if any IntentFilter from the "+ size+ " Activities needs verification ...");
  final int verificationId=mIntentFilterVerificationToken++;
  int count=0;
  final String packageName=pkg.packageName;
  ArrayList<String> allHosts=new ArrayList<>();
synchronized (mPackages) {
    for (    PackageParser.Activity a : pkg.activities) {
      for (      ActivityIntentInfo filter : a.intents) {
        boolean needsFilterVerification=filter.needsVerification();
        if (needsFilterVerification && needsNetworkVerificationLPr(filter)) {
          Slog.d(TAG,"Verification needed for IntentFilter:" + filter.toString());
          mIntentFilterVerifier.addOneIntentFilterVerification(verifierUid,userId,verificationId,filter,packageName);
          count++;
        }
 else         if (!needsFilterVerification) {
          Slog.d(TAG,"No verification needed for IntentFilter:" + filter.toString());
          if (hasValidDomains(filter)) {
            ArrayList<String> hosts=filter.getHostsList();
            if (hosts.size() > 0) {
              allHosts.addAll(hosts);
            }
 else {
              if (allHosts.isEmpty()) {
                allHosts.add("*");
              }
            }
          }
        }
 else {
          Slog.d(TAG,"Verification already done for IntentFilter:" + filter.toString());
        }
      }
    }
  }
  if (count > 0) {
    mIntentFilterVerifier.startVerifications(userId);
    Slog.d(TAG,"Started " + count + " IntentFilter verification"+ (count > 1 ? "s" : "")+ " for userId:"+ userId+ "!");
  }
 else {
    Slog.d(TAG,"No need to start any IntentFilter verification!");
    if (allHosts.size() > 0 && mSettings.createIntentFilterVerificationIfNeededLPw(packageName,allHosts) != null) {
      scheduleWriteSettingsLocked();
    }
  }
}
