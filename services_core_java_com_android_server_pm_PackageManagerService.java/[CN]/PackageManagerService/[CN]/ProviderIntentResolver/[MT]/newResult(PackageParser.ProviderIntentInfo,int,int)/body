{
  if (!sUserManager.exists(userId))   return null;
  final PackageParser.ProviderIntentInfo info=filter;
  if (!mSettings.isEnabledLPr(info.provider.info,mFlags,userId)) {
    return null;
  }
  final PackageParser.Provider provider=info.provider;
  if (mSafeMode && (provider.info.applicationInfo.flags & ApplicationInfo.FLAG_SYSTEM) == 0) {
    return null;
  }
  PackageSetting ps=(PackageSetting)provider.owner.mExtras;
  if (ps == null) {
    return null;
  }
  ProviderInfo pi=PackageParser.generateProviderInfo(provider,mFlags,ps.readUserState(userId),userId);
  if (pi == null) {
    return null;
  }
  final ResolveInfo res=new ResolveInfo();
  res.providerInfo=pi;
  if ((mFlags & PackageManager.GET_RESOLVED_FILTER) != 0) {
    res.filter=filter;
  }
  res.priority=info.getPriority();
  res.preferredOrder=provider.owner.mPreferredOrder;
  res.match=match;
  res.isDefault=info.hasDefault;
  res.labelRes=info.labelRes;
  res.nonLocalizedLabel=info.nonLocalizedLabel;
  res.icon=info.icon;
  res.system=res.providerInfo.applicationInfo.isSystemApp();
  return res;
}
