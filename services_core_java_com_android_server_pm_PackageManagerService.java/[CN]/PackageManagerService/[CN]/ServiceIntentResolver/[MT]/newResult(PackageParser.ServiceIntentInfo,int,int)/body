{
  if (!sUserManager.exists(userId))   return null;
  final PackageParser.ServiceIntentInfo info=(PackageParser.ServiceIntentInfo)filter;
  if (!mSettings.isEnabledAndMatchLPr(info.service.info,mFlags,userId)) {
    return null;
  }
  final PackageParser.Service service=info.service;
  PackageSetting ps=(PackageSetting)service.owner.mExtras;
  if (ps == null) {
    return null;
  }
  ServiceInfo si=PackageParser.generateServiceInfo(service,mFlags,ps.readUserState(userId),userId);
  if (si == null) {
    return null;
  }
  final ResolveInfo res=new ResolveInfo();
  res.serviceInfo=si;
  if ((mFlags & PackageManager.GET_RESOLVED_FILTER) != 0) {
    res.filter=filter;
  }
  res.priority=info.getPriority();
  res.preferredOrder=service.owner.mPreferredOrder;
  res.match=match;
  res.isDefault=info.hasDefault;
  res.labelRes=info.labelRes;
  res.nonLocalizedLabel=info.nonLocalizedLabel;
  res.icon=info.icon;
  res.system=res.serviceInfo.applicationInfo.isSystemApp();
  return res;
}
