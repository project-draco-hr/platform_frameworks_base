{
  List<String> allCodePaths=Collections.EMPTY_LIST;
  if (codeFile != null && codeFile.exists()) {
    try {
      final PackageLite pkg=PackageParser.parsePackageLite(codeFile,0);
      allCodePaths=pkg.getAllCodePaths();
    }
 catch (    PackageParserException e) {
    }
  }
  cleanUp();
  if (!allCodePaths.isEmpty()) {
    if (instructionSets == null) {
      throw new IllegalStateException("instructionSet == null");
    }
    String[] dexCodeInstructionSets=getDexCodeInstructionSets(instructionSets);
    for (    String codePath : allCodePaths) {
      for (      String dexCodeInstructionSet : dexCodeInstructionSets) {
        int retCode=mInstaller.rmdex(codePath,dexCodeInstructionSet);
        if (retCode < 0) {
          Slog.w(TAG,"Couldn't remove dex file for package: " + " at location " + codePath + ", retcode="+ retCode);
        }
      }
    }
  }
}
