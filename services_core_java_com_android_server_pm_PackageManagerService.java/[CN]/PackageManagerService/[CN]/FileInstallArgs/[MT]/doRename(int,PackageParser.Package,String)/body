{
  if (status != PackageManager.INSTALL_SUCCEEDED) {
    cleanUp();
    return false;
  }
  final File targetDir=codeFile.getParentFile();
  final File beforeCodeFile=codeFile;
  final File afterCodeFile=getNextCodePath(targetDir,pkg.packageName);
  if (DEBUG_INSTALL)   Slog.d(TAG,"Renaming " + beforeCodeFile + " to "+ afterCodeFile);
  try {
    Os.rename(beforeCodeFile.getAbsolutePath(),afterCodeFile.getAbsolutePath());
  }
 catch (  ErrnoException e) {
    Slog.w(TAG,"Failed to rename",e);
    return false;
  }
  if (!SELinux.restoreconRecursive(afterCodeFile)) {
    Slog.w(TAG,"Failed to restorecon");
    return false;
  }
  codeFile=afterCodeFile;
  resourceFile=afterCodeFile;
  pkg.setCodePath(afterCodeFile.getAbsolutePath());
  pkg.setBaseCodePath(FileUtils.rewriteAfterRename(beforeCodeFile,afterCodeFile,pkg.baseCodePath));
  pkg.setSplitCodePaths(FileUtils.rewriteAfterRename(beforeCodeFile,afterCodeFile,pkg.splitCodePaths));
  pkg.setApplicationVolumeUuid(pkg.volumeUuid);
  pkg.setApplicationInfoCodePath(pkg.codePath);
  pkg.setApplicationInfoBaseCodePath(pkg.baseCodePath);
  pkg.setApplicationInfoSplitCodePaths(pkg.splitCodePaths);
  pkg.setApplicationInfoResourcePath(pkg.codePath);
  pkg.setApplicationInfoBaseResourcePath(pkg.baseCodePath);
  pkg.setApplicationInfoSplitResourcePaths(pkg.splitCodePaths);
  return true;
}
