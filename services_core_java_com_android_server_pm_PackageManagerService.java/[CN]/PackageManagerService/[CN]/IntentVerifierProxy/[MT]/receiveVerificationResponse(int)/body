{
  IntentFilterVerificationState ivs=mIntentFilterVerificationStates.get(verificationId);
  final boolean verified=ivs.isVerified();
  ArrayList<PackageParser.ActivityIntentInfo> filters=ivs.getFilters();
  final int count=filters.size();
  for (int n=0; n < count; n++) {
    PackageParser.ActivityIntentInfo filter=filters.get(n);
    filter.setVerified(verified);
    if (DEBUG_DOMAIN_VERIFICATION)     Slog.d(TAG,"IntentFilter " + filter.toString() + " verified with result:"+ verified+ " and hosts:"+ ivs.getHostsString());
  }
  mIntentFilterVerificationStates.remove(verificationId);
  final String packageName=ivs.getPackageName();
  IntentFilterVerificationInfo ivi=null;
synchronized (mPackages) {
    ivi=mSettings.getIntentFilterVerificationLPr(packageName);
  }
  if (ivi == null) {
    Slog.w(TAG,"IntentFilterVerificationInfo not found for verificationId:" + verificationId + " packageName:"+ packageName);
    return;
  }
  if (DEBUG_DOMAIN_VERIFICATION)   Slog.d(TAG,"Updating IntentFilterVerificationInfo for verificationId:" + verificationId);
synchronized (mPackages) {
    if (verified) {
      ivi.setStatus(INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_ALWAYS);
    }
 else {
      ivi.setStatus(INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_ASK);
    }
    scheduleWriteSettingsLocked();
    final int userId=ivs.getUserId();
    if (userId != UserHandle.USER_ALL) {
      final int userStatus=mSettings.getIntentFilterVerificationStatusLPr(packageName,userId);
      int updatedStatus=INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_UNDEFINED;
      boolean needUpdate=false;
switch (userStatus) {
case INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_UNDEFINED:
        if (verified) {
          updatedStatus=INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_ALWAYS;
        }
 else {
          updatedStatus=INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_ASK;
        }
      needUpdate=true;
    break;
case INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_ASK:
  if (verified) {
    updatedStatus=INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_ALWAYS;
    needUpdate=true;
  }
break;
default :
}
if (needUpdate) {
mSettings.updateIntentFilterVerificationStatusLPw(packageName,updatedStatus,userId);
scheduleWritePackageRestrictionsLocked(userId);
}
}
}
}
