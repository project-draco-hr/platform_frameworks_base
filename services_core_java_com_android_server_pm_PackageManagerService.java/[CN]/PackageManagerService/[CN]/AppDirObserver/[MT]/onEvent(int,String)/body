{
  String removedPackage=null;
  int removedAppId=-1;
  int[] removedUsers=null;
  String addedPackage=null;
  int addedAppId=-1;
  int[] addedUsers=null;
synchronized (mInstallLock) {
    String fullPathStr=null;
    File fullPath=null;
    if (path != null) {
      fullPath=new File(mRootDir,path);
      fullPathStr=fullPath.getPath();
    }
    if (DEBUG_APP_DIR_OBSERVER)     Log.v(TAG,"File " + fullPathStr + " changed: "+ Integer.toHexString(event));
    if (!isApkFile(fullPath)) {
      if (DEBUG_APP_DIR_OBSERVER)       Log.v(TAG,"Ignoring change of non-package file: " + fullPathStr);
      return;
    }
    if (ignoreCodePath(fullPathStr)) {
      return;
    }
    PackageParser.Package p=null;
    PackageSetting ps=null;
synchronized (mPackages) {
      p=mAppDirs.get(fullPathStr);
      if (p != null) {
        ps=mSettings.mPackages.get(p.applicationInfo.packageName);
        if (ps != null) {
          removedUsers=ps.queryInstalledUsers(sUserManager.getUserIds(),true);
        }
 else {
          removedUsers=sUserManager.getUserIds();
        }
      }
      addedUsers=sUserManager.getUserIds();
    }
    if ((event & REMOVE_EVENTS) != 0) {
      if (ps != null) {
        if (DEBUG_REMOVE)         Slog.d(TAG,"Package disappeared: " + ps);
        removePackageLI(ps,true);
        removedPackage=ps.name;
        removedAppId=ps.appId;
      }
    }
    if ((event & ADD_EVENTS) != 0) {
      if (p == null) {
        if (DEBUG_INSTALL)         Slog.d(TAG,"New file appeared: " + fullPath);
        int flags=PackageParser.PARSE_CHATTY | PackageParser.PARSE_MUST_BE_APK;
        if (mIsRom) {
          flags|=PackageParser.PARSE_IS_SYSTEM | PackageParser.PARSE_IS_SYSTEM_DIR;
          if (mIsPrivileged) {
            flags|=PackageParser.PARSE_IS_PRIVILEGED;
          }
        }
        try {
          p=scanPackageLI(fullPath,flags,SCAN_MONITOR | SCAN_NO_PATHS | SCAN_UPDATE_TIME,System.currentTimeMillis(),UserHandle.ALL,null);
        }
 catch (        PackageManagerException e) {
          Slog.w(TAG,"Failed to scan " + fullPath + ": "+ e.getMessage());
          p=null;
        }
        if (p != null) {
synchronized (mPackages) {
            updatePermissionsLPw(p.packageName,p,p.permissions.size() > 0 ? UPDATE_PERMISSIONS_ALL : 0);
          }
          addedPackage=p.applicationInfo.packageName;
          addedAppId=UserHandle.getAppId(p.applicationInfo.uid);
        }
      }
    }
synchronized (mPackages) {
      mSettings.writeLPr();
    }
  }
  if (removedPackage != null) {
    Bundle extras=new Bundle(1);
    extras.putInt(Intent.EXTRA_UID,removedAppId);
    extras.putBoolean(Intent.EXTRA_DATA_REMOVED,false);
    sendPackageBroadcast(Intent.ACTION_PACKAGE_REMOVED,removedPackage,extras,null,null,removedUsers);
  }
  if (addedPackage != null) {
    Bundle extras=new Bundle(1);
    extras.putInt(Intent.EXTRA_UID,addedAppId);
    sendPackageBroadcast(Intent.ACTION_PACKAGE_ADDED,addedPackage,extras,null,null,addedUsers);
  }
}
