{
  if (!(dk == DataKind.PIXEL_L || dk == DataKind.PIXEL_A || dk == DataKind.PIXEL_LA || dk == DataKind.PIXEL_RGB || dk == DataKind.PIXEL_RGBA || dk == DataKind.PIXEL_DEPTH || dk == DataKind.PIXEL_YUV)) {
    throw new RSIllegalArgumentException("Unsupported DataKind");
  }
  if (!(dt == DataType.UNSIGNED_8 || dt == DataType.UNSIGNED_16 || dt == DataType.UNSIGNED_5_6_5 || dt == DataType.UNSIGNED_4_4_4_4 || dt == DataType.UNSIGNED_5_5_5_1)) {
    throw new RSIllegalArgumentException("Unsupported DataType");
  }
  if (dt == DataType.UNSIGNED_5_6_5 && dk != DataKind.PIXEL_RGB) {
    throw new RSIllegalArgumentException("Bad kind and type combo");
  }
  if (dt == DataType.UNSIGNED_5_5_5_1 && dk != DataKind.PIXEL_RGBA) {
    throw new RSIllegalArgumentException("Bad kind and type combo");
  }
  if (dt == DataType.UNSIGNED_4_4_4_4 && dk != DataKind.PIXEL_RGBA) {
    throw new RSIllegalArgumentException("Bad kind and type combo");
  }
  if (dt == DataType.UNSIGNED_16 && dk != DataKind.PIXEL_DEPTH) {
    throw new RSIllegalArgumentException("Bad kind and type combo");
  }
  int size=1;
switch (dk) {
case PIXEL_LA:
    size=2;
  break;
case PIXEL_RGB:
size=3;
break;
case PIXEL_RGBA:
size=4;
break;
case PIXEL_DEPTH:
size=2;
break;
}
boolean norm=true;
int id=rs.nElementCreate(dt.mID,dk.mID,norm,size);
return new Element(id,rs,dt,dk,norm,size);
}
