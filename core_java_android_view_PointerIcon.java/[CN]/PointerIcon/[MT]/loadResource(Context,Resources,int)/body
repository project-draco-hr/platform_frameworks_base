{
  final XmlResourceParser parser=resources.getXml(resourceId);
  final int bitmapRes;
  final float hotSpotX;
  final float hotSpotY;
  try {
    XmlUtils.beginDocument(parser,"pointer-icon");
    final TypedArray a=resources.obtainAttributes(parser,com.android.internal.R.styleable.PointerIcon);
    bitmapRes=a.getResourceId(com.android.internal.R.styleable.PointerIcon_bitmap,0);
    hotSpotX=a.getDimension(com.android.internal.R.styleable.PointerIcon_hotSpotX,0);
    hotSpotY=a.getDimension(com.android.internal.R.styleable.PointerIcon_hotSpotY,0);
    a.recycle();
  }
 catch (  Exception ex) {
    throw new IllegalArgumentException("Exception parsing pointer icon resource.",ex);
  }
 finally {
    parser.close();
  }
  if (bitmapRes == 0) {
    throw new IllegalArgumentException("<pointer-icon> is missing bitmap attribute.");
  }
  Drawable drawable;
  if (context == null) {
    drawable=resources.getDrawable(bitmapRes);
  }
 else {
    drawable=context.getDrawable(bitmapRes);
  }
  if (!(drawable instanceof BitmapDrawable)) {
    throw new IllegalArgumentException("<pointer-icon> bitmap attribute must " + "refer to a bitmap drawable.");
  }
  mBitmap=((BitmapDrawable)drawable).getBitmap();
  mHotSpotX=hotSpotX;
  mHotSpotY=hotSpotY;
}
