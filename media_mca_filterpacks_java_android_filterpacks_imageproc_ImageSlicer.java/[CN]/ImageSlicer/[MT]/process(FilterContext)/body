{
  if (mSliceIndex == 0) {
    mOriginalFrame=pullInput("image");
    calcOutputFormatForInput(mOriginalFrame);
  }
  FrameFormat inputFormat=mOriginalFrame.getFormat();
  MutableFrameFormat outputFormat=inputFormat.mutableCopy();
  outputFormat.setDimensions(mOutputWidth,mOutputHeight);
  Frame output=context.getFrameManager().newFrame(outputFormat);
  if (mProgram == null) {
    mProgram=ShaderProgram.createIdentity(context);
  }
  int xSliceIndex=mSliceIndex % mXSlices;
  int ySliceIndex=mSliceIndex / mXSlices;
  float x0=(xSliceIndex * mSliceWidth - mPadSize) / ((float)mInputWidth);
  float y0=(ySliceIndex * mSliceHeight - mPadSize) / ((float)mInputHeight);
  ((ShaderProgram)mProgram).setSourceRect(x0,y0,((float)mOutputWidth) / mInputWidth,((float)mOutputHeight) / mInputHeight);
  mProgram.process(mOriginalFrame,output);
  mSliceIndex++;
  if (mSliceIndex == mXSlices * mYSlices) {
    mSliceIndex=0;
    mOriginalFrame.release();
    setWaitsOnInputPort("image",true);
  }
 else {
    mOriginalFrame.retain();
    setWaitsOnInputPort("image",false);
  }
  pushOutput("image",output);
  output.release();
}
