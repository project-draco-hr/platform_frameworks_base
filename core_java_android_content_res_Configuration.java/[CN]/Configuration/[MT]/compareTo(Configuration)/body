{
  int n;
  float a=this.fontScale;
  float b=that.fontScale;
  if (a < b)   return -1;
  if (a > b)   return 1;
  n=this.mcc - that.mcc;
  if (n != 0)   return n;
  n=this.mnc - that.mnc;
  if (n != 0)   return n;
  fixUpLocaleList();
  that.fixUpLocaleList();
  if (this.mLocaleList.isEmpty()) {
    if (!that.mLocaleList.isEmpty())     return 1;
  }
 else   if (that.mLocaleList.isEmpty()) {
    return -1;
  }
 else {
    final int minSize=Math.min(this.mLocaleList.size(),that.mLocaleList.size());
    for (int i=0; i < minSize; ++i) {
      final Locale thisLocale=this.mLocaleList.get(i);
      final Locale thatLocale=that.mLocaleList.get(i);
      n=thisLocale.getLanguage().compareTo(thatLocale.getLanguage());
      if (n != 0)       return n;
      n=thisLocale.getCountry().compareTo(thatLocale.getCountry());
      if (n != 0)       return n;
      n=thisLocale.getVariant().compareTo(thatLocale.getVariant());
      if (n != 0)       return n;
      n=thisLocale.toLanguageTag().compareTo(thatLocale.toLanguageTag());
      if (n != 0)       return n;
    }
    n=this.mLocaleList.size() - that.mLocaleList.size();
    if (n != 0)     return n;
  }
  n=this.touchscreen - that.touchscreen;
  if (n != 0)   return n;
  n=this.keyboard - that.keyboard;
  if (n != 0)   return n;
  n=this.keyboardHidden - that.keyboardHidden;
  if (n != 0)   return n;
  n=this.hardKeyboardHidden - that.hardKeyboardHidden;
  if (n != 0)   return n;
  n=this.navigation - that.navigation;
  if (n != 0)   return n;
  n=this.navigationHidden - that.navigationHidden;
  if (n != 0)   return n;
  n=this.orientation - that.orientation;
  if (n != 0)   return n;
  n=this.screenLayout - that.screenLayout;
  if (n != 0)   return n;
  n=this.uiMode - that.uiMode;
  if (n != 0)   return n;
  n=this.screenWidthDp - that.screenWidthDp;
  if (n != 0)   return n;
  n=this.screenHeightDp - that.screenHeightDp;
  if (n != 0)   return n;
  n=this.smallestScreenWidthDp - that.smallestScreenWidthDp;
  if (n != 0)   return n;
  n=this.densityDpi - that.densityDpi;
  return n;
}
