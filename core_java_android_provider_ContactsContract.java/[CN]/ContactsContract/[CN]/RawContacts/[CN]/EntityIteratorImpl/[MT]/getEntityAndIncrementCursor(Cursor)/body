{
  final int columnRawContactId=cursor.getColumnIndexOrThrow(RawContacts._ID);
  final long rawContactId=cursor.getLong(columnRawContactId);
  ContentValues cv=new ContentValues();
  DatabaseUtils.cursorStringToContentValuesIfPresent(cursor,cv,ACCOUNT_NAME);
  DatabaseUtils.cursorStringToContentValuesIfPresent(cursor,cv,ACCOUNT_TYPE);
  DatabaseUtils.cursorLongToContentValuesIfPresent(cursor,cv,_ID);
  DatabaseUtils.cursorLongToContentValuesIfPresent(cursor,cv,DIRTY);
  DatabaseUtils.cursorLongToContentValuesIfPresent(cursor,cv,VERSION);
  DatabaseUtils.cursorStringToContentValuesIfPresent(cursor,cv,SOURCE_ID);
  DatabaseUtils.cursorStringToContentValuesIfPresent(cursor,cv,SYNC1);
  DatabaseUtils.cursorStringToContentValuesIfPresent(cursor,cv,SYNC2);
  DatabaseUtils.cursorStringToContentValuesIfPresent(cursor,cv,SYNC3);
  DatabaseUtils.cursorStringToContentValuesIfPresent(cursor,cv,SYNC4);
  DatabaseUtils.cursorLongToContentValuesIfPresent(cursor,cv,DELETED);
  DatabaseUtils.cursorLongToContentValuesIfPresent(cursor,cv,CONTACT_ID);
  DatabaseUtils.cursorLongToContentValuesIfPresent(cursor,cv,STARRED);
  DatabaseUtils.cursorIntToContentValuesIfPresent(cursor,cv,IS_RESTRICTED);
  DatabaseUtils.cursorIntToContentValuesIfPresent(cursor,cv,NAME_VERIFIED);
  android.content.Entity contact=new android.content.Entity(cv);
  do {
    if (rawContactId != cursor.getLong(columnRawContactId)) {
      break;
    }
    cv=new ContentValues();
    cv.put(Data._ID,cursor.getLong(cursor.getColumnIndexOrThrow(Entity.DATA_ID)));
    DatabaseUtils.cursorStringToContentValuesIfPresent(cursor,cv,Data.RES_PACKAGE);
    DatabaseUtils.cursorStringToContentValuesIfPresent(cursor,cv,Data.MIMETYPE);
    DatabaseUtils.cursorLongToContentValuesIfPresent(cursor,cv,Data.IS_PRIMARY);
    DatabaseUtils.cursorLongToContentValuesIfPresent(cursor,cv,Data.IS_SUPER_PRIMARY);
    DatabaseUtils.cursorLongToContentValuesIfPresent(cursor,cv,Data.DATA_VERSION);
    DatabaseUtils.cursorStringToContentValuesIfPresent(cursor,cv,CommonDataKinds.GroupMembership.GROUP_SOURCE_ID);
    DatabaseUtils.cursorStringToContentValuesIfPresent(cursor,cv,Data.DATA_VERSION);
    for (    String key : DATA_KEYS) {
      final int columnIndex=cursor.getColumnIndexOrThrow(key);
      if (cursor.isNull(columnIndex)) {
      }
 else {
        try {
          cv.put(key,cursor.getString(columnIndex));
        }
 catch (        SQLiteException e) {
          cv.put(key,cursor.getBlob(columnIndex));
        }
      }
    }
    contact.addSubValue(ContactsContract.Data.CONTENT_URI,cv);
  }
 while (cursor.moveToNext());
  return contact;
}
