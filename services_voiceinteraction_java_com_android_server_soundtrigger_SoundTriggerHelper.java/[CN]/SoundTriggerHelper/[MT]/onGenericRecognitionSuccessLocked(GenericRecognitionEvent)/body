{
  MetricsLogger.count(mContext,"sth_generic_recognition_event",1);
  if (event.status != SoundTrigger.RECOGNITION_STATUS_SUCCESS) {
    return;
  }
  ModelData model=getModelDataForLocked(event.soundModelHandle);
  if (model == null) {
    Slog.w(TAG,"Generic recognition event: Model does not exist for handle: " + event.soundModelHandle);
    return;
  }
  IRecognitionStatusCallback callback=model.getCallback();
  if (callback == null) {
    Slog.w(TAG,"Generic recognition event: Null callback for model handle: " + event.soundModelHandle);
    return;
  }
  try {
    callback.onGenericSoundTriggerDetected((GenericRecognitionEvent)event);
  }
 catch (  RemoteException e) {
    Slog.w(TAG,"RemoteException in onGenericSoundTriggerDetected",e);
  }
  model.setStopped();
  RecognitionConfig config=model.getRecognitionConfig();
  if (config == null) {
    Slog.w(TAG,"Generic recognition event: Null RecognitionConfig for model handle: " + event.soundModelHandle);
    return;
  }
  model.setRequested(config.allowMultipleTriggers);
  if (model.getRequested()) {
    updateRecognitionLocked(model,isRecognitionAllowed(),true);
  }
}
