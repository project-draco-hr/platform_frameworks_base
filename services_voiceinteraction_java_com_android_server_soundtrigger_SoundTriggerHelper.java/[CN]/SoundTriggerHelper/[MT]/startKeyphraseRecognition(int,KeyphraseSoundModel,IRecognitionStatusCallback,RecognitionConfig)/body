{
  if (soundModel == null || listener == null || recognitionConfig == null) {
    return STATUS_ERROR;
  }
synchronized (mLock) {
    if (DBG) {
      Slog.d(TAG,"startKeyphraseRecognition for keyphraseId=" + keyphraseId + " soundModel="+ soundModel+ ", listener="+ listener.asBinder()+ ", recognitionConfig="+ recognitionConfig);
      Slog.d(TAG,"moduleProperties=" + mModuleProperties);
      Slog.d(TAG,"current listener=" + (mKeyphraseListener == null ? "null" : mKeyphraseListener.asBinder()));
      Slog.d(TAG,"current SoundModel handle=" + mCurrentKeyphraseModelHandle);
      Slog.d(TAG,"current SoundModel UUID=" + (mCurrentSoundModel == null ? null : mCurrentSoundModel.uuid));
    }
    if (!mRecognitionRunning) {
      initializeTelephonyAndPowerStateListeners();
    }
    if (mModuleProperties == null) {
      Slog.w(TAG,"Attempting startKeyphraseRecognition without the capability");
      return STATUS_ERROR;
    }
    if (mModule == null) {
      mModule=SoundTrigger.attachModule(mModuleProperties.id,this,null);
      if (mModule == null) {
        Slog.w(TAG,"startKeyphraseRecognition cannot attach to sound trigger module");
        return STATUS_ERROR;
      }
    }
    if (mCurrentKeyphraseModelHandle != INVALID_VALUE && !soundModel.equals(mCurrentSoundModel)) {
      Slog.w(TAG,"Unloading previous sound model");
      int status=mModule.unloadSoundModel(mCurrentKeyphraseModelHandle);
      if (status != SoundTrigger.STATUS_OK) {
        Slog.w(TAG,"unloadSoundModel call failed with " + status);
      }
      internalClearKeyphraseSoundModelLocked();
      mKeyphraseStarted=false;
    }
    if (mKeyphraseListener != null && mKeyphraseListener.asBinder() != listener.asBinder()) {
      Slog.w(TAG,"Canceling previous recognition");
      try {
        mKeyphraseListener.onError(STATUS_ERROR);
      }
 catch (      RemoteException e) {
        Slog.w(TAG,"RemoteException in onDetectionStopped",e);
      }
      mKeyphraseListener=null;
    }
    int soundModelHandle=mCurrentKeyphraseModelHandle;
    if (mCurrentKeyphraseModelHandle == INVALID_VALUE || mCurrentSoundModel == null) {
      int[] handle=new int[]{INVALID_VALUE};
      int status=mModule.loadSoundModel(soundModel,handle);
      if (status != SoundTrigger.STATUS_OK) {
        Slog.w(TAG,"loadSoundModel call failed with " + status);
        return status;
      }
      if (handle[0] == INVALID_VALUE) {
        Slog.w(TAG,"loadSoundModel call returned invalid sound model handle");
        return STATUS_ERROR;
      }
      soundModelHandle=handle[0];
    }
 else {
      if (DBG)       Slog.d(TAG,"Reusing previously loaded sound model");
    }
    mRequested=true;
    mKeyphraseId=keyphraseId;
    mCurrentKeyphraseModelHandle=soundModelHandle;
    mCurrentSoundModel=soundModel;
    mRecognitionConfig=recognitionConfig;
    mKeyphraseListener=listener;
    return updateRecognitionLocked(false);
  }
}
