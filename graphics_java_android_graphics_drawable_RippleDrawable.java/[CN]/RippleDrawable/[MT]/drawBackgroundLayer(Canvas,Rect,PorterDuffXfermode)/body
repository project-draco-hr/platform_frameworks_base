{
  final int rippleARGB;
  if (mState.mColor != null) {
    rippleARGB=mState.mColor.getColorForState(getState(),Color.TRANSPARENT);
  }
 else {
    rippleARGB=Color.TRANSPARENT;
  }
  if (mRipplePaint == null) {
    mRipplePaint=new Paint();
    mRipplePaint.setAntiAlias(true);
  }
  final int rippleAlpha=Color.alpha(rippleARGB);
  final Paint ripplePaint=mRipplePaint;
  ripplePaint.setColor(rippleARGB);
  ripplePaint.setAlpha(0xFF);
  boolean drewRipples=false;
  int restoreToCount=-1;
  int restoreTranslate=-1;
  final RippleBackground background=mBackground;
  if (background != null) {
    final Paint maskingPaint=getMaskingPaint(mode);
    maskingPaint.setAlpha(rippleAlpha);
    restoreToCount=canvas.saveLayer(bounds.left,bounds.top,bounds.right,bounds.bottom,maskingPaint);
    restoreTranslate=canvas.save();
    canvas.translate(mHotspotBounds.exactCenterX(),mHotspotBounds.exactCenterY());
    drewRipples=background.draw(canvas,ripplePaint);
  }
  if (restoreTranslate >= 0) {
    canvas.restoreToCount(restoreTranslate);
  }
  if (restoreToCount >= 0 && !drewRipples) {
    canvas.restoreToCount(restoreToCount);
    restoreToCount=-1;
  }
  return restoreToCount;
}
