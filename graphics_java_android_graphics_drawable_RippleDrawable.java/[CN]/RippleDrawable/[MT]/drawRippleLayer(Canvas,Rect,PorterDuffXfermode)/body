{
  final int count=mAnimatingRipplesCount;
  if (count == 0) {
    return -1;
  }
  final int rippleARGB;
  if (mState.mTint != null) {
    rippleARGB=mState.mTint.getColorForState(getState(),Color.TRANSPARENT);
  }
 else {
    rippleARGB=Color.TRANSPARENT;
  }
  final int rippleAlpha=Color.alpha(rippleARGB);
  final int rippleColor=rippleARGB | (0xFF << 24);
  if (mRipplePaint == null) {
    mRipplePaint=new Paint();
    mRipplePaint.setAntiAlias(true);
  }
  final Paint ripplePaint=mRipplePaint;
  ripplePaint.setColor(rippleColor);
  boolean drewRipples=false;
  int restoreToCount=-1;
  int restoreTranslate=-1;
  final Ripple[] ripples=mAnimatingRipples;
  for (int i=0; i < count; i++) {
    final Ripple ripple=ripples[i];
    if (restoreToCount < 0) {
      final Paint maskingPaint=getMaskingPaint(mode);
      maskingPaint.setAlpha(rippleAlpha);
      restoreToCount=canvas.saveLayer(bounds.left,bounds.top,bounds.right,bounds.bottom,maskingPaint);
      maskingPaint.setAlpha(255);
      restoreTranslate=canvas.save();
      canvas.translate(mHotspotBounds.exactCenterX(),mHotspotBounds.exactCenterY());
    }
    drewRipples|=ripple.draw(canvas,ripplePaint);
  }
  if (restoreTranslate >= 0) {
    canvas.restoreToCount(restoreTranslate);
  }
  if (restoreToCount >= 0 && !drewRipples) {
    canvas.restoreToCount(restoreToCount);
    restoreToCount=-1;
  }
  return restoreToCount;
}
