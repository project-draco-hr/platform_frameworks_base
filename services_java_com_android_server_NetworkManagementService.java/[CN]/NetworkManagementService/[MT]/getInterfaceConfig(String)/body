{
  String rsp=mConnector.doCommand("interface getcfg " + iface).get(0);
  Log.d(TAG,String.format("rsp <%s>",rsp));
  StringTokenizer st=new StringTokenizer(rsp);
  try {
    int code=Integer.parseInt(st.nextToken(" "));
    if (code != NetdResponseCode.InterfaceGetCfgResult) {
      throw new IllegalStateException(String.format("Expected code %d, but got %d",NetdResponseCode.InterfaceGetCfgResult,code));
    }
  }
 catch (  NumberFormatException nfe) {
    throw new IllegalStateException(String.format("Invalid response from daemon (%s)",rsp));
  }
  InterfaceConfiguration cfg=new InterfaceConfiguration();
  cfg.hwAddr=st.nextToken(" ");
  try {
    cfg.ipAddr=stringToIpAddr(st.nextToken(" "));
  }
 catch (  UnknownHostException uhe) {
    Log.e(TAG,"Failed to parse ipaddr",uhe);
    cfg.ipAddr=0;
  }
  try {
    cfg.netmask=stringToIpAddr(st.nextToken(" "));
  }
 catch (  UnknownHostException uhe) {
    Log.e(TAG,"Failed to parse netmask",uhe);
    cfg.netmask=0;
  }
  cfg.interfaceFlags=st.nextToken("]").trim() + "]";
  Log.d(TAG,String.format("flags <%s>",cfg.interfaceFlags));
  return cfg;
}
