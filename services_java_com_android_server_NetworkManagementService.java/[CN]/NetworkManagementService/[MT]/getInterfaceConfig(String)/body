{
  mContext.enforceCallingOrSelfPermission(ACCESS_NETWORK_STATE,TAG);
  String rsp;
  try {
    rsp=mConnector.doCommand("interface getcfg " + iface).get(0);
  }
 catch (  NativeDaemonConnectorException e) {
    throw new IllegalStateException("Cannot communicate with native daemon to get interface config");
  }
  Slog.d(TAG,String.format("rsp <%s>",rsp));
  StringTokenizer st=new StringTokenizer(rsp);
  InterfaceConfiguration cfg;
  try {
    try {
      int code=Integer.parseInt(st.nextToken(" "));
      if (code != NetdResponseCode.InterfaceGetCfgResult) {
        throw new IllegalStateException(String.format("Expected code %d, but got %d",NetdResponseCode.InterfaceGetCfgResult,code));
      }
    }
 catch (    NumberFormatException nfe) {
      throw new IllegalStateException(String.format("Invalid response from daemon (%s)",rsp));
    }
    cfg=new InterfaceConfiguration();
    cfg.setHardwareAddress(st.nextToken(" "));
    InetAddress addr=null;
    int prefixLength=0;
    try {
      addr=NetworkUtils.numericToInetAddress(st.nextToken(" "));
    }
 catch (    IllegalArgumentException iae) {
      Slog.e(TAG,"Failed to parse ipaddr",iae);
    }
    try {
      prefixLength=Integer.parseInt(st.nextToken(" "));
    }
 catch (    NumberFormatException nfe) {
      Slog.e(TAG,"Failed to parse prefixLength",nfe);
    }
    cfg.setLinkAddress(new LinkAddress(addr,prefixLength));
    while (st.hasMoreTokens()) {
      cfg.setFlag(st.nextToken());
    }
  }
 catch (  NoSuchElementException nsee) {
    throw new IllegalStateException(String.format("Invalid response from daemon (%s)",rsp));
  }
  Slog.d(TAG,String.format("flags <%s>",cfg.getFlags()));
  return cfg;
}
