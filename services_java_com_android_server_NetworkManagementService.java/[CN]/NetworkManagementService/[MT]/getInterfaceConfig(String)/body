{
  mContext.enforceCallingOrSelfPermission(ACCESS_NETWORK_STATE,TAG);
  final NativeDaemonEvent event;
  try {
    event=mConnector.execute("interface","getcfg",iface);
  }
 catch (  NativeDaemonConnectorException e) {
    throw e.rethrowAsParcelableException();
  }
  event.checkCode(InterfaceGetCfgResult);
  final StringTokenizer st=new StringTokenizer(event.getMessage());
  InterfaceConfiguration cfg;
  try {
    cfg=new InterfaceConfiguration();
    cfg.setHardwareAddress(st.nextToken(" "));
    InetAddress addr=null;
    int prefixLength=0;
    try {
      addr=NetworkUtils.numericToInetAddress(st.nextToken());
    }
 catch (    IllegalArgumentException iae) {
      Slog.e(TAG,"Failed to parse ipaddr",iae);
    }
    try {
      prefixLength=Integer.parseInt(st.nextToken());
    }
 catch (    NumberFormatException nfe) {
      Slog.e(TAG,"Failed to parse prefixLength",nfe);
    }
    cfg.setLinkAddress(new LinkAddress(addr,prefixLength));
    while (st.hasMoreTokens()) {
      cfg.setFlag(st.nextToken());
    }
  }
 catch (  NoSuchElementException nsee) {
    throw new IllegalStateException("Invalid response from daemon: " + event);
  }
  return cfg;
}
