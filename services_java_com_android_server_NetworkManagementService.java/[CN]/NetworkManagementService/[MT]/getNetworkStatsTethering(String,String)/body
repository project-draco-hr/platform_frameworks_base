{
  final StringBuilder command=new StringBuilder();
  command.append("bandwidth gettetherstats ").append(ifaceIn).append(" ").append(ifaceOut);
  final String rsp;
  try {
    rsp=mConnector.doCommand(command.toString()).get(0);
  }
 catch (  NativeDaemonConnectorException e) {
    throw new IllegalStateException("Error communicating to native daemon",e);
  }
  final String[] tok=rsp.split(" ");
  if (tok.length != 7) {
    throw new IllegalStateException("Native daemon returned unexpected result: " + rsp);
  }
  final int code;
  try {
    code=Integer.parseInt(tok[0]);
  }
 catch (  NumberFormatException e) {
    throw new IllegalStateException("Failed to parse native daemon return code for " + ifaceIn + " "+ ifaceOut);
  }
  if (code != NetdResponseCode.TetheringStatsResult) {
    throw new IllegalStateException("Unexpected return code from native daemon for " + ifaceIn + " "+ ifaceOut);
  }
  try {
    final NetworkStats.Entry entry=new NetworkStats.Entry();
    entry.iface=ifaceIn;
    entry.uid=UID_TETHERING;
    entry.set=SET_DEFAULT;
    entry.tag=TAG_NONE;
    entry.rxBytes=Long.parseLong(tok[3]);
    entry.rxPackets=Long.parseLong(tok[4]);
    entry.txBytes=Long.parseLong(tok[5]);
    entry.txPackets=Long.parseLong(tok[6]);
    return entry;
  }
 catch (  NumberFormatException e) {
    throw new IllegalStateException("problem parsing tethering stats for " + ifaceIn + " "+ ifaceOut+ ": "+ e);
  }
}
