{
  mContext.enforceCallingOrSelfPermission(CONNECTIVITY_INTERNAL,TAG);
  final NetworkStats stats=new NetworkStats(SystemClock.elapsedRealtime(),1);
  try {
    final NativeDaemonEvent[] events=mConnector.executeForList("bandwidth","gettetherstats");
    for (    NativeDaemonEvent event : events) {
      if (event.getCode() != TetheringStatsListResult)       continue;
      final StringTokenizer tok=new StringTokenizer(event.getMessage());
      try {
        final String ifaceIn=tok.nextToken();
        final String ifaceOut=tok.nextToken();
        final NetworkStats.Entry entry=new NetworkStats.Entry();
        entry.iface=ifaceOut;
        entry.uid=UID_TETHERING;
        entry.set=SET_DEFAULT;
        entry.tag=TAG_NONE;
        entry.rxBytes=Long.parseLong(tok.nextToken());
        entry.rxPackets=Long.parseLong(tok.nextToken());
        entry.txBytes=Long.parseLong(tok.nextToken());
        entry.txPackets=Long.parseLong(tok.nextToken());
        stats.combineValues(entry);
      }
 catch (      NoSuchElementException e) {
        throw new IllegalStateException("problem parsing tethering stats: " + event);
      }
catch (      NumberFormatException e) {
        throw new IllegalStateException("problem parsing tethering stats: " + event);
      }
    }
  }
 catch (  NativeDaemonConnectorException e) {
    throw e.rethrowAsParcelableException();
  }
  return stats;
}
