{
  ArrayList<RouteInfo> routes=new ArrayList<RouteInfo>();
  for (  String s : readRouteList("/proc/net/route")) {
    String[] fields=s.split("\t");
    if (fields.length > 7) {
      String iface=fields[0];
      if (interfaceName.equals(iface)) {
        String dest=fields[1];
        String gate=fields[2];
        String flags=fields[3];
        String mask=fields[7];
        try {
          InetAddress destAddr=NetworkUtils.intToInetAddress((int)Long.parseLong(dest,16));
          int prefixLength=NetworkUtils.netmaskIntToPrefixLength((int)Long.parseLong(mask,16));
          LinkAddress linkAddress=new LinkAddress(destAddr,prefixLength);
          InetAddress gatewayAddr=NetworkUtils.intToInetAddress((int)Long.parseLong(gate,16));
          RouteInfo route=new RouteInfo(linkAddress,gatewayAddr);
          routes.add(route);
        }
 catch (        Exception e) {
          Log.e(TAG,"Error parsing route " + s + " : "+ e);
          continue;
        }
      }
    }
  }
  for (  String s : readRouteList("/proc/net/ipv6_route")) {
    String[] fields=s.split("\\s+");
    if (fields.length > 9) {
      String iface=fields[9].trim();
      if (interfaceName.equals(iface)) {
        String dest=fields[0];
        String prefix=fields[1];
        String gate=fields[4];
        try {
          int prefixLength=Integer.parseInt(prefix,16);
          InetAddress destAddr=NetworkUtils.hexToInet6Address(dest);
          LinkAddress linkAddress=new LinkAddress(destAddr,prefixLength);
          InetAddress gateAddr=NetworkUtils.hexToInet6Address(gate);
          RouteInfo route=new RouteInfo(linkAddress,gateAddr);
          routes.add(route);
        }
 catch (        Exception e) {
          Log.e(TAG,"Error parsing route " + s + " : "+ e);
          continue;
        }
      }
    }
  }
  return (RouteInfo[])routes.toArray(new RouteInfo[0]);
}
