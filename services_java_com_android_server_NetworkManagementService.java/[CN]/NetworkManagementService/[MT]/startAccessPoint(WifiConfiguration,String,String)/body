{
  mContext.enforceCallingOrSelfPermission(android.Manifest.permission.CHANGE_NETWORK_STATE,"NetworkManagementService");
  mContext.enforceCallingOrSelfPermission(android.Manifest.permission.CHANGE_WIFI_STATE,"NetworkManagementService");
  try {
    mConnector.doCommand(String.format("softap stop " + wlanIface));
    mConnector.doCommand(String.format("softap fwreload " + wlanIface + " AP"));
    mConnector.doCommand(String.format("softap start " + wlanIface));
    if (wifiConfig == null) {
      mConnector.doCommand(String.format("softap set " + wlanIface + " "+ softapIface));
    }
 else {
      String str=String.format("softap set " + wlanIface + " "+ softapIface+ " %s %s %s",convertQuotedString(wifiConfig.SSID),wifiConfig.allowedKeyManagement.get(KeyMgmt.WPA_PSK) ? "wpa2-psk" : "open",convertQuotedString(wifiConfig.preSharedKey));
      mConnector.doCommand(str);
    }
    mConnector.doCommand(String.format("softap startap"));
  }
 catch (  NativeDaemonConnectorException e) {
    throw new IllegalStateException("Error communicating to native daemon to start softap",e);
  }
}
