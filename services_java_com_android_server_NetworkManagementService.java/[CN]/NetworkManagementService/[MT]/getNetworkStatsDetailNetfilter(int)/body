{
  final NetworkStats stats=new NetworkStats(SystemClock.elapsedRealtime(),24);
  BufferedReader reader=null;
  try {
    reader=new BufferedReader(new FileReader(STATS_NETFILTER));
    String line=reader.readLine();
    while ((line=reader.readLine()) != null) {
      final StringTokenizer t=new StringTokenizer(line);
      final String idx=t.nextToken();
      final String iface=t.nextToken();
      try {
        final int tag=(int)(Long.parseLong(t.nextToken().substring(2),16) >> 32);
        final int uid=Integer.parseInt(t.nextToken());
        final long rx=Long.parseLong(t.nextToken());
        final long tx=Long.parseLong(t.nextToken());
        if (limitUid == UID_ALL || limitUid == uid) {
          stats.addEntry(iface,uid,tag,rx,tx);
        }
      }
 catch (      NumberFormatException e) {
        Slog.w(TAG,"problem parsing stats for idx " + idx + ": "+ e);
      }
    }
  }
 catch (  IOException e) {
    Slog.w(TAG,"problem parsing stats: " + e);
  }
 finally {
    IoUtils.closeQuietly(reader);
  }
  return stats;
}
