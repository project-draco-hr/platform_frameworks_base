{
switch (code) {
case NetdResponseCode.InterfaceChange:
    if (cooked.length < 4 || !cooked[1].equals("Iface")) {
      throw new IllegalStateException(String.format("Invalid event from daemon (%s)",raw));
    }
  if (cooked[2].equals("added")) {
    notifyInterfaceAdded(cooked[3]);
    return true;
  }
 else   if (cooked[2].equals("removed")) {
    notifyInterfaceRemoved(cooked[3]);
    return true;
  }
 else   if (cooked[2].equals("changed") && cooked.length == 5) {
    notifyInterfaceStatusChanged(cooked[3],cooked[4].equals("up"));
    return true;
  }
 else   if (cooked[2].equals("linkstate") && cooked.length == 5) {
    notifyInterfaceLinkStateChanged(cooked[3],cooked[4].equals("up"));
    return true;
  }
throw new IllegalStateException(String.format("Invalid event from daemon (%s)",raw));
case NetdResponseCode.BandwidthControl:
if (cooked.length < 5 || !cooked[1].equals("limit")) {
throw new IllegalStateException(String.format("Invalid event from daemon (%s)",raw));
}
if (cooked[2].equals("alert")) {
notifyLimitReached(cooked[3],cooked[4]);
return true;
}
throw new IllegalStateException(String.format("Invalid event from daemon (%s)",raw));
default :
break;
}
return false;
}
