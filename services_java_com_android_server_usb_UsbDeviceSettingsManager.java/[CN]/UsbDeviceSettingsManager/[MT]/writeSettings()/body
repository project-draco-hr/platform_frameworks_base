{
  FileOutputStream fos=null;
  try {
    FileOutputStream fstr=new FileOutputStream(sSettingsFile);
    Log.d(TAG,"writing settings to " + fstr);
    BufferedOutputStream str=new BufferedOutputStream(fstr);
    FastXmlSerializer serializer=new FastXmlSerializer();
    serializer.setOutput(str,"utf-8");
    serializer.startDocument(null,true);
    serializer.setFeature("http://xmlpull.org/v1/doc/features.html#indent-output",true);
    serializer.startTag(null,"settings");
    int count=mDevicePermissionMap.size();
    for (int i=0; i < count; i++) {
      int uid=mDevicePermissionMap.keyAt(i);
      ArrayList<DeviceFilter> filters=mDevicePermissionMap.valueAt(i);
      serializer.startTag(null,"device-permission");
      serializer.attribute(null,"uid",Integer.toString(uid));
      int filterCount=filters.size();
      for (int j=0; j < filterCount; j++) {
        filters.get(j).write(serializer);
      }
      serializer.endTag(null,"device-permission");
    }
    count=mAccessoryPermissionMap.size();
    for (int i=0; i < count; i++) {
      int uid=mAccessoryPermissionMap.keyAt(i);
      ArrayList<AccessoryFilter> filters=mAccessoryPermissionMap.valueAt(i);
      serializer.startTag(null,"accessory-permission");
      serializer.attribute(null,"uid",Integer.toString(uid));
      int filterCount=filters.size();
      for (int j=0; j < filterCount; j++) {
        filters.get(j).write(serializer);
      }
      serializer.endTag(null,"accessory-permission");
    }
    for (    DeviceFilter filter : mDevicePreferenceMap.keySet()) {
      serializer.startTag(null,"preference");
      serializer.attribute(null,"package",mDevicePreferenceMap.get(filter));
      filter.write(serializer);
      serializer.endTag(null,"preference");
    }
    for (    AccessoryFilter filter : mAccessoryPreferenceMap.keySet()) {
      serializer.startTag(null,"preference");
      serializer.attribute(null,"package",mAccessoryPreferenceMap.get(filter));
      filter.write(serializer);
      serializer.endTag(null,"preference");
    }
    serializer.endTag(null,"settings");
    serializer.endDocument();
    str.flush();
    FileUtils.sync(fstr);
    str.close();
  }
 catch (  Exception e) {
    Log.e(TAG,"error writing settings file, deleting to start fresh",e);
    sSettingsFile.delete();
  }
}
