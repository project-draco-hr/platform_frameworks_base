{
  if (v == null) {
    writeInt(VAL_NULL);
  }
 else   if (v instanceof String) {
    writeInt(VAL_STRING);
    writeString((String)v);
  }
 else   if (v instanceof Integer) {
    writeInt(VAL_INTEGER);
    writeInt((Integer)v);
  }
 else   if (v instanceof Map) {
    writeInt(VAL_MAP);
    writeMap((Map)v);
  }
 else   if (v instanceof Bundle) {
    writeInt(VAL_BUNDLE);
    writeBundle((Bundle)v);
  }
 else   if (v instanceof Parcelable) {
    writeInt(VAL_PARCELABLE);
    writeParcelable((Parcelable)v,0);
  }
 else   if (v instanceof Short) {
    writeInt(VAL_SHORT);
    writeInt(((Short)v).intValue());
  }
 else   if (v instanceof Long) {
    writeInt(VAL_LONG);
    writeLong((Long)v);
  }
 else   if (v instanceof Float) {
    writeInt(VAL_FLOAT);
    writeFloat((Float)v);
  }
 else   if (v instanceof Double) {
    writeInt(VAL_DOUBLE);
    writeDouble((Double)v);
  }
 else   if (v instanceof Boolean) {
    writeInt(VAL_BOOLEAN);
    writeInt((Boolean)v ? 1 : 0);
  }
 else   if (v instanceof CharSequence) {
    writeInt(VAL_CHARSEQUENCE);
    TextUtils.writeToParcel((CharSequence)v,this,0);
  }
 else   if (v instanceof List) {
    writeInt(VAL_LIST);
    writeList((List)v);
  }
 else   if (v instanceof SparseArray) {
    writeInt(VAL_SPARSEARRAY);
    writeSparseArray((SparseArray)v);
  }
 else   if (v instanceof boolean[]) {
    writeInt(VAL_BOOLEANARRAY);
    writeBooleanArray((boolean[])v);
  }
 else   if (v instanceof byte[]) {
    writeInt(VAL_BYTEARRAY);
    writeByteArray((byte[])v);
  }
 else   if (v instanceof String[]) {
    writeInt(VAL_STRINGARRAY);
    writeStringArray((String[])v);
  }
 else   if (v instanceof IBinder) {
    writeInt(VAL_IBINDER);
    writeStrongBinder((IBinder)v);
  }
 else   if (v instanceof Parcelable[]) {
    writeInt(VAL_PARCELABLEARRAY);
    writeParcelableArray((Parcelable[])v,0);
  }
 else   if (v instanceof Object[]) {
    writeInt(VAL_OBJECTARRAY);
    writeArray((Object[])v);
  }
 else   if (v instanceof int[]) {
    writeInt(VAL_INTARRAY);
    writeIntArray((int[])v);
  }
 else   if (v instanceof long[]) {
    writeInt(VAL_LONGARRAY);
    writeLongArray((long[])v);
  }
 else   if (v instanceof Byte) {
    writeInt(VAL_BYTE);
    writeInt((Byte)v);
  }
 else   if (v instanceof Serializable) {
    writeInt(VAL_SERIALIZABLE);
    writeSerializable((Serializable)v);
  }
 else {
    throw new RuntimeException("Parcel: unable to marshal value " + v);
  }
}
