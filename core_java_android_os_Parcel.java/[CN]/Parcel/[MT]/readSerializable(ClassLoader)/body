{
  String name=readString();
  if (name == null) {
    return null;
  }
  byte[] serializedData=createByteArray();
  ByteArrayInputStream bais=new ByteArrayInputStream(serializedData);
  try {
    ObjectInputStream ois=new ObjectInputStream(bais){
      @Override protected Class<?> resolveClass(      ObjectStreamClass osClass) throws IOException, ClassNotFoundException {
        if (loader != null) {
          Class<?> c=Class.forName(osClass.getName(),false,loader);
          if (c != null) {
            return c;
          }
        }
        return super.resolveClass(osClass);
      }
    }
;
    return (Serializable)ois.readObject();
  }
 catch (  IOException ioe) {
    throw new RuntimeException("Parcelable encountered " + "IOException reading a Serializable object (name = " + name + ")",ioe);
  }
catch (  ClassNotFoundException cnfe) {
    throw new RuntimeException("Parcelable encountered " + "ClassNotFoundException reading a Serializable object (name = " + name + ")",cnfe);
  }
}
