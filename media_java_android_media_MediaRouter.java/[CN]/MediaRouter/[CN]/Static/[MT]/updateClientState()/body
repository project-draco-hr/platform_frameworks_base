{
  mClientState=null;
  if (mClient != null) {
    try {
      mClientState=mMediaRouterService.getState(mClient);
    }
 catch (    RemoteException ex) {
      Log.e(TAG,"Unable to retrieve media router client state.",ex);
    }
  }
  final ArrayList<MediaRouterClientState.RouteInfo> globalRoutes=mClientState != null ? mClientState.routes : null;
  final String globallySelectedRouteId=mClientState != null ? mClientState.globallySelectedRouteId : null;
  final int globalRouteCount=globalRoutes != null ? globalRoutes.size() : 0;
  for (int i=0; i < globalRouteCount; i++) {
    final MediaRouterClientState.RouteInfo globalRoute=globalRoutes.get(i);
    RouteInfo route=findGlobalRoute(globalRoute.id);
    if (route == null) {
      route=makeGlobalRoute(globalRoute);
      addRouteStatic(route);
    }
 else {
      updateGlobalRoute(route,globalRoute);
    }
  }
  if (globallySelectedRouteId != null) {
    final RouteInfo route=findGlobalRoute(globallySelectedRouteId);
    if (route == null) {
      Log.w(TAG,"Could not find new globally selected route: " + globallySelectedRouteId);
    }
 else     if (route != mSelectedRoute) {
      if (DEBUG) {
        Log.d(TAG,"Selecting new globally selected route: " + route);
      }
      selectRouteStatic(route.mSupportedTypes,route,false);
    }
  }
 else   if (mSelectedRoute != null && mSelectedRoute.mGlobalRouteId != null) {
    if (DEBUG) {
      Log.d(TAG,"Unselecting previous globally selected route: " + mSelectedRoute);
    }
    selectDefaultRouteStatic();
  }
  outer:   for (int i=mRoutes.size(); i-- > 0; ) {
    final RouteInfo route=mRoutes.get(i);
    final String globalRouteId=route.mGlobalRouteId;
    if (globalRouteId != null) {
      for (int j=0; j < globalRouteCount; j++) {
        MediaRouterClientState.RouteInfo globalRoute=globalRoutes.get(j);
        if (globalRouteId.equals(globalRoute.id)) {
          continue outer;
        }
      }
      removeRouteStatic(route);
    }
  }
}
