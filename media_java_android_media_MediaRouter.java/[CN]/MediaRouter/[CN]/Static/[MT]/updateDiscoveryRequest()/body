{
  int routeTypes=0;
  int passiveRouteTypes=0;
  boolean activeScan=false;
  boolean activeScanWifiDisplay=false;
  final int count=mCallbacks.size();
  for (int i=0; i < count; i++) {
    CallbackInfo cbi=mCallbacks.get(i);
    if ((cbi.flags & (CALLBACK_FLAG_PERFORM_ACTIVE_SCAN | CALLBACK_FLAG_REQUEST_DISCOVERY)) != 0) {
      routeTypes|=cbi.type;
    }
 else     if ((cbi.flags & CALLBACK_FLAG_PASSIVE_DISCOVERY) != 0) {
      passiveRouteTypes|=cbi.type;
    }
 else {
      routeTypes|=cbi.type;
    }
    if ((cbi.flags & CALLBACK_FLAG_PERFORM_ACTIVE_SCAN) != 0) {
      activeScan=true;
      if ((cbi.type & ROUTE_TYPE_REMOTE_DISPLAY) != 0) {
        activeScanWifiDisplay=true;
      }
    }
  }
  if (routeTypes != 0 || activeScan) {
    routeTypes|=passiveRouteTypes;
  }
  if (activeScanWifiDisplay && mCanConfigureWifiDisplays) {
    if (!mActivelyScanningWifiDisplays) {
      mActivelyScanningWifiDisplays=true;
      mHandler.post(mScanWifiDisplays);
    }
  }
 else {
    if (mActivelyScanningWifiDisplays) {
      mActivelyScanningWifiDisplays=false;
      mHandler.removeCallbacks(mScanWifiDisplays);
    }
  }
  if (routeTypes != mDiscoveryRequestRouteTypes || activeScan != mDiscoverRequestActiveScan) {
    mDiscoveryRequestRouteTypes=routeTypes;
    mDiscoverRequestActiveScan=activeScan;
    publishClientDiscoveryRequest();
  }
}
