{
  boolean changed=false;
  boolean volumeChanged=false;
  boolean presentationDisplayChanged=false;
  if (!Objects.equal(route.mName,globalRoute.name)) {
    route.mName=globalRoute.name;
    changed=true;
  }
  if (!Objects.equal(route.mDescription,globalRoute.description)) {
    route.mDescription=globalRoute.description;
    changed=true;
  }
  if (route.mSupportedTypes != globalRoute.supportedTypes) {
    route.mSupportedTypes=globalRoute.supportedTypes;
    changed=true;
  }
  if (route.mEnabled != globalRoute.enabled) {
    route.mEnabled=globalRoute.enabled;
    changed=true;
  }
  if (route.mStatusCode != globalRoute.statusCode) {
    route.setStatusCode(globalRoute.statusCode);
    changed=true;
  }
  if (route.mPlaybackType != globalRoute.playbackType) {
    route.mPlaybackType=globalRoute.playbackType;
    changed=true;
  }
  if (route.mPlaybackStream != globalRoute.playbackStream) {
    route.mPlaybackStream=globalRoute.playbackStream;
    changed=true;
  }
  if (route.mVolume != globalRoute.volume) {
    route.mVolume=globalRoute.volume;
    changed=true;
    volumeChanged=true;
  }
  if (route.mVolumeMax != globalRoute.volumeMax) {
    route.mVolumeMax=globalRoute.volumeMax;
    changed=true;
    volumeChanged=true;
  }
  if (route.mVolumeHandling != globalRoute.volumeHandling) {
    route.mVolumeHandling=globalRoute.volumeHandling;
    changed=true;
    volumeChanged=true;
  }
  final Display presentationDisplay=getDisplayForGlobalRoute(globalRoute);
  if (route.mPresentationDisplay != presentationDisplay) {
    route.mPresentationDisplay=presentationDisplay;
    changed=true;
    presentationDisplayChanged=true;
  }
  if (changed) {
    dispatchRouteChanged(route);
  }
  if (volumeChanged) {
    dispatchRouteVolumeChanged(route);
  }
  if (presentationDisplayChanged) {
    dispatchRoutePresentationDisplayChanged(route);
  }
}
