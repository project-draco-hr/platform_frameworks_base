{
  KeyCharacteristics keyCharacteristics=new KeyCharacteristics();
  int errorCode=keyStore.getKeyCharacteristics(secretKeyAlias,null,null,keyCharacteristics);
  if (errorCode != KeyStore.NO_ERROR) {
    throw (UnrecoverableKeyException)new UnrecoverableKeyException("Failed to obtain information about key").initCause(KeyStore.getKeyStoreException(errorCode));
  }
  int keymasterAlgorithm=keyCharacteristics.getInt(KeymasterDefs.KM_TAG_ALGORITHM,-1);
  if (keymasterAlgorithm == -1) {
    throw new UnrecoverableKeyException("Key algorithm unknown");
  }
  List<Integer> keymasterDigests=keyCharacteristics.getInts(KeymasterDefs.KM_TAG_DIGEST);
  int keymasterDigest;
  if (keymasterDigests.isEmpty()) {
    keymasterDigest=-1;
  }
 else {
    keymasterDigest=keymasterDigests.get(0);
  }
  @KeyProperties.KeyAlgorithmEnum String keyAlgorithmString;
  try {
    keyAlgorithmString=KeyProperties.KeyAlgorithm.fromKeymasterSecretKeyAlgorithm(keymasterAlgorithm,keymasterDigest);
  }
 catch (  IllegalArgumentException e) {
    throw (UnrecoverableKeyException)new UnrecoverableKeyException("Unsupported secret key type").initCause(e);
  }
  return new AndroidKeyStoreSecretKey(secretKeyAlias,keyAlgorithmString);
}
