{
  PublicKey publicKey;
  try {
    KeyFactory keyFactory=KeyFactory.getInstance(keyAlgorithm);
    publicKey=keyFactory.generatePublic(new X509EncodedKeySpec(x509EncodedForm));
  }
 catch (  NoSuchAlgorithmException e) {
    throw new ProviderException("Failed to obtain " + keyAlgorithm + " KeyFactory",e);
  }
catch (  InvalidKeySpecException e) {
    throw new ProviderException("Invalid X.509 encoding of public key",e);
  }
  if (KeyProperties.KEY_ALGORITHM_EC.equalsIgnoreCase(keyAlgorithm)) {
    return new AndroidKeyStoreECPublicKey(alias,(ECPublicKey)publicKey);
  }
 else   if (KeyProperties.KEY_ALGORITHM_RSA.equalsIgnoreCase(keyAlgorithm)) {
    return new AndroidKeyStoreRSAPublicKey(alias,(RSAPublicKey)publicKey);
  }
 else {
    throw new ProviderException("Unsupported Android Keystore public key algorithm: " + keyAlgorithm);
  }
}
