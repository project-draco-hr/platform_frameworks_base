{
  TaskStack stack=null;
  if (mFirst != null) {
switch (position) {
default :
case TASK_STACK_GOES_BEFORE:
case TASK_STACK_GOES_ABOVE:
      stack=mFirst.merge(position);
    stack.merge(mSecond.merge(position));
  break;
case TASK_STACK_GOES_AFTER:
case TASK_STACK_GOES_BELOW:
stack=mSecond.merge(position);
stack.merge(mFirst.merge(position));
break;
}
return stack;
}
return mStack;
}
