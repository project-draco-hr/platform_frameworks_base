{
  final int resolvedUserId=resolveCallingUserEnforcingPermissions(userId);
  final int appId=UserHandle.getAppId(Binder.getCallingUid());
  try {
    if (appId != Process.SYSTEM_UID && appId != UserHandle.getAppId(mContext.getPackageManager().getPackageUidAsUser(PrintManager.PRINT_SPOOLER_PACKAGE_NAME,resolvedUserId))) {
      throw new SecurityException("Only system and print spooler can call this");
    }
  }
 catch (  PackageManager.NameNotFoundException e) {
    Log.e(LOG_TAG,"Could not verify caller",e);
    return;
  }
  service=Preconditions.checkNotNull(service);
  final UserState userState;
synchronized (mLock) {
    if (resolveCallingProfileParentLocked(resolvedUserId) != getCurrentUserId()) {
      return;
    }
    userState=getOrCreateUserStateLocked(resolvedUserId,false);
  }
  final long identity=Binder.clearCallingIdentity();
  try {
    userState.setPrintServiceEnabled(service,isEnabled);
  }
  finally {
    Binder.restoreCallingIdentity(identity);
  }
}
