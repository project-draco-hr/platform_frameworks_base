{
  sb.append("sync enabled: ").append(isSyncEnabled()).append("\n");
  sb.append("data connected: ").append(mDataConnectionIsConnected).append("\n");
  sb.append("memory low: ").append(mStorageIsLow).append("\n");
  final Account[] accounts=mAccounts;
  sb.append("accounts: ");
  if (accounts != null) {
    sb.append(accounts.length);
  }
 else {
    sb.append("none");
  }
  sb.append("\n");
  final long now=SystemClock.elapsedRealtime();
  sb.append("now: ").append(now).append("\n");
  sb.append("uptime: ").append(DateUtils.formatElapsedTime(now / 1000)).append(" (HH:MM:SS)\n");
  sb.append("time spent syncing : ").append(DateUtils.formatElapsedTime(mSyncHandler.mSyncTimeTracker.timeSpentSyncing() / 1000)).append(" (HH:MM:SS), sync ").append(mSyncHandler.mSyncTimeTracker.mLastWasSyncing ? "" : "not ").append("in progress").append("\n");
  if (mSyncHandler.mAlarmScheduleTime != null) {
    sb.append("next alarm time: ").append(mSyncHandler.mAlarmScheduleTime).append(" (").append(DateUtils.formatElapsedTime((mSyncHandler.mAlarmScheduleTime - now) / 1000)).append(" (HH:MM:SS) from now)\n");
  }
 else {
    sb.append("no alarm is scheduled (there had better not be any pending syncs)\n");
  }
  sb.append("active sync: ").append(mActiveSyncContext).append("\n");
  sb.append("notification info: ");
  mSyncHandler.mSyncNotificationInfo.toString(sb);
  sb.append("\n");
synchronized (mSyncQueue) {
    sb.append("sync queue: ");
    mSyncQueue.dump(sb);
  }
  Cursor c=mSyncStorageEngine.query(Sync.Active.CONTENT_URI,SYNC_ACTIVE_PROJECTION,null,null,null);
  sb.append("\n");
  try {
    if (c.moveToNext()) {
      final long durationInSeconds=(now - c.getLong(2)) / 1000;
      sb.append("Active sync: ").append(c.getString(0)).append(" ").append(c.getString(1)).append(", duration is ").append(DateUtils.formatElapsedTime(durationInSeconds)).append(".\n");
    }
 else {
      sb.append("No sync is in progress.\n");
    }
  }
  finally {
    c.close();
  }
  c=mSyncStorageEngine.query(Sync.Pending.CONTENT_URI,SYNC_PENDING_PROJECTION,null,null,"account, authority");
  sb.append("\nPending Syncs\n");
  try {
    if (c.getCount() != 0) {
      dumpSyncPendingHeader(sb);
      while (c.moveToNext()) {
        dumpSyncPendingRow(sb,c);
      }
      dumpSyncPendingFooter(sb);
    }
 else {
      sb.append("none\n");
    }
  }
  finally {
    c.close();
  }
  Account currentAccount=null;
  c=mSyncStorageEngine.query(Sync.Status.CONTENT_URI,STATUS_PROJECTION,null,null,"account_type, account, authority");
  sb.append("\nSync history by account and authority\n");
  try {
    while (c.moveToNext()) {
      final Account account=new Account(c.getString(0),c.getString(13));
      if (!account.equals(currentAccount)) {
        if (currentAccount != null) {
          dumpSyncHistoryFooter(sb);
        }
        currentAccount=account;
        dumpSyncHistoryHeader(sb,currentAccount);
      }
      dumpSyncHistoryRow(sb,c);
    }
    if (c.getCount() > 0)     dumpSyncHistoryFooter(sb);
  }
  finally {
    c.close();
  }
}
