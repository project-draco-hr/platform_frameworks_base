{
  mContext=context;
  SyncStorageEngine.init(context);
  mSyncStorageEngine=SyncStorageEngine.getSingleton();
  mSyncStorageEngine.setOnSyncRequestListener(new OnSyncRequestListener(){
    public void onSyncRequest(    Account account,    int userId,    String authority,    Bundle extras){
      scheduleSync(account,userId,authority,extras,0,false);
    }
  }
);
  mSyncAdapters=new SyncAdaptersCache(mContext);
  mSyncQueue=new SyncQueue(mSyncStorageEngine,mSyncAdapters);
  HandlerThread syncThread=new HandlerThread("SyncHandlerThread",Process.THREAD_PRIORITY_BACKGROUND);
  syncThread.start();
  mSyncHandler=new SyncHandler(syncThread.getLooper());
  mSyncAdapters.setListener(new RegisteredServicesCacheListener<SyncAdapterType>(){
    public void onServiceChanged(    SyncAdapterType type,    boolean removed){
      if (!removed) {
        scheduleSync(null,UserId.USER_ALL,type.authority,null,0,false);
      }
    }
  }
,mSyncHandler);
  mSyncAlarmIntent=PendingIntent.getBroadcast(mContext,0,new Intent(ACTION_SYNC_ALARM),0);
  IntentFilter intentFilter=new IntentFilter(ConnectivityManager.CONNECTIVITY_ACTION);
  context.registerReceiver(mConnectivityIntentReceiver,intentFilter);
  if (!factoryTest) {
    intentFilter=new IntentFilter(Intent.ACTION_BOOT_COMPLETED);
    context.registerReceiver(mBootCompletedReceiver,intentFilter);
  }
  intentFilter=new IntentFilter(ConnectivityManager.ACTION_BACKGROUND_DATA_SETTING_CHANGED);
  context.registerReceiver(mBackgroundDataSettingChanged,intentFilter);
  intentFilter=new IntentFilter(Intent.ACTION_DEVICE_STORAGE_LOW);
  intentFilter.addAction(Intent.ACTION_DEVICE_STORAGE_OK);
  context.registerReceiver(mStorageIntentReceiver,intentFilter);
  intentFilter=new IntentFilter(Intent.ACTION_SHUTDOWN);
  intentFilter.setPriority(100);
  context.registerReceiver(mShutdownIntentReceiver,intentFilter);
  intentFilter=new IntentFilter();
  intentFilter.addAction(Intent.ACTION_USER_REMOVED);
  mContext.registerReceiver(mUserIntentReceiver,intentFilter);
  if (!factoryTest) {
    mNotificationMgr=(NotificationManager)context.getSystemService(Context.NOTIFICATION_SERVICE);
    context.registerReceiver(new SyncAlarmIntentReceiver(),new IntentFilter(ACTION_SYNC_ALARM));
  }
 else {
    mNotificationMgr=null;
  }
  mPowerManager=(PowerManager)context.getSystemService(Context.POWER_SERVICE);
  mHandleAlarmWakeLock=mPowerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,HANDLE_SYNC_ALARM_WAKE_LOCK);
  mHandleAlarmWakeLock.setReferenceCounted(false);
  mSyncManagerWakeLock=mPowerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,SYNC_LOOP_WAKE_LOCK);
  mSyncManagerWakeLock.setReferenceCounted(false);
  mSyncStorageEngine.addStatusChangeListener(ContentResolver.SYNC_OBSERVER_TYPE_SETTINGS,new ISyncStatusObserver.Stub(){
    public void onStatusChanged(    int which){
      sendCheckAlarmsMessage();
    }
  }
);
  if (!factoryTest) {
    AccountManager.get(mContext).addOnAccountsUpdatedListener(SyncManager.this,mSyncHandler,false);
    onAccountsUpdated(null);
  }
  mSyncRandomOffsetMillis=mSyncStorageEngine.getSyncRandomOffset() * 1000;
}
