{
  if (mOpsByKey.size() != mOpsByWhen.size()) {
    throw new IllegalStateException("size mismatch: " + mOpsByKey.size() + " != "+ mOpsByWhen.size());
  }
  for (  SyncOperation operation : mOpsByWhen) {
    if (!mOpsByKey.containsKey(operation.key)) {
      throw new IllegalStateException("operation " + operation + " is in mOpsByWhen but not mOpsByKey");
    }
  }
  for (  Map.Entry<String,SyncOperation> entry : mOpsByKey.entrySet()) {
    final SyncOperation operation=entry.getValue();
    final String key=entry.getKey();
    if (!key.equals(operation.key)) {
      throw new IllegalStateException("operation " + operation + " in mOpsByKey doesn't match key "+ key);
    }
    if (!mOpsByWhen.contains(operation)) {
      throw new IllegalStateException("operation " + operation + " is in mOpsByKey but not mOpsByWhen");
    }
  }
  if (checkDatabase) {
    Cursor cursor=mSyncStorageEngine.getPendingSyncsCursor(COLUMNS);
    try {
      if (mOpsByKey.size() != cursor.getCount()) {
        StringBuilder sb=new StringBuilder();
        DatabaseUtils.dumpCursor(cursor,sb);
        sb.append("\n");
        dump(sb);
        throw new IllegalStateException("DB size mismatch: " + mOpsByKey.size() + " != "+ cursor.getCount()+ "\n"+ sb.toString());
      }
    }
  finally {
      cursor.close();
    }
  }
}
