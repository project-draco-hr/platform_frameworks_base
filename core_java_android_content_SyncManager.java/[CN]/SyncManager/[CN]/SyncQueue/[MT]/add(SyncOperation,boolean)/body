{
  if (DEBUG_CHECK_DATA_CONSISTENCY)   debugCheckDataStructures(!fromDatabase);
  if (operation.delay < 0) {
    SyncOperation headOperation=head();
    if (headOperation != null) {
      operation.earliestRunTime=Math.min(SystemClock.elapsedRealtime(),headOperation.earliestRunTime - 1);
    }
 else {
      operation.earliestRunTime=SystemClock.elapsedRealtime();
    }
  }
  final String operationKey=operation.key;
  SyncOperation existingOperation=mOpsByKey.get(operationKey);
  if (existingOperation != null && existingOperation.delay > 0) {
    if (!operation.extras.getBoolean(ContentResolver.SYNC_EXTRAS_FORCE,false)) {
      return false;
    }
  }
  if (existingOperation != null && operation.earliestRunTime >= existingOperation.earliestRunTime) {
    if (DEBUG_CHECK_DATA_CONSISTENCY)     debugCheckDataStructures(!fromDatabase);
    return false;
  }
  if (existingOperation != null) {
    removeByKey(operationKey);
  }
  if (operation.rowId == null) {
    byte[] extrasData=null;
    Parcel parcel=Parcel.obtain();
    try {
      operation.extras.writeToParcel(parcel,0);
      extrasData=parcel.marshall();
    }
  finally {
      parcel.recycle();
    }
    ContentValues values=new ContentValues();
    values.put("account",operation.account.mName);
    values.put("account_type",operation.account.mType);
    values.put("authority",operation.authority);
    values.put("source",operation.syncSource);
    values.put("extras",extrasData);
    Uri pendingUri=mSyncStorageEngine.insertIntoPending(values);
    operation.rowId=pendingUri == null ? null : ContentUris.parseId(pendingUri);
    if (operation.rowId == null) {
      throw new IllegalStateException("error adding pending sync operation " + operation);
    }
  }
  if (DEBUG_CHECK_DATA_CONSISTENCY) {
    debugCheckDataStructures(false);
  }
  mOpsByKey.put(operationKey,operation);
  mOpsByWhen.add(operation);
  if (DEBUG_CHECK_DATA_CONSISTENCY)   debugCheckDataStructures(!fromDatabase);
  return true;
}
