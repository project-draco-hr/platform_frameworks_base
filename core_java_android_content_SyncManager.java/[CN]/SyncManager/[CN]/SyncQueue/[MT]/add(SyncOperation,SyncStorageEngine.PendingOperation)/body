{
  if (DEBUG_CHECK_DATA_CONSISTENCY)   debugCheckDataStructures(pop == null);
  if (operation.delay < 0) {
    SyncOperation headOperation=head();
    if (headOperation != null) {
      operation.earliestRunTime=Math.min(SystemClock.elapsedRealtime(),headOperation.earliestRunTime - 1);
    }
 else {
      operation.earliestRunTime=SystemClock.elapsedRealtime();
    }
  }
  final String operationKey=operation.key;
  SyncOperation existingOperation=mOpsByKey.get(operationKey);
  if (existingOperation != null && existingOperation.delay > 0) {
    if (!operation.extras.getBoolean(ContentResolver.SYNC_EXTRAS_MANUAL,false)) {
      return false;
    }
  }
  if (existingOperation != null && operation.earliestRunTime >= existingOperation.earliestRunTime) {
    if (DEBUG_CHECK_DATA_CONSISTENCY)     debugCheckDataStructures(pop == null);
    return false;
  }
  if (existingOperation != null) {
    removeByKey(operationKey);
  }
  operation.pendingOperation=pop;
  if (operation.pendingOperation == null) {
    pop=new SyncStorageEngine.PendingOperation(operation.account,operation.syncSource,operation.authority,operation.extras);
    pop=mSyncStorageEngine.insertIntoPending(pop);
    if (pop == null) {
      throw new IllegalStateException("error adding pending sync operation " + operation);
    }
    operation.pendingOperation=pop;
  }
  if (DEBUG_CHECK_DATA_CONSISTENCY) {
    debugCheckDataStructures(false);
  }
  mOpsByKey.put(operationKey,operation);
  mOpsByWhen.add(operation);
  if (DEBUG_CHECK_DATA_CONSISTENCY)   debugCheckDataStructures(pop == null);
  return true;
}
