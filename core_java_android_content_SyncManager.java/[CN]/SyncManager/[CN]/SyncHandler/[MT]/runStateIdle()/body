{
  boolean isLoggable=Log.isLoggable(TAG,Log.VERBOSE);
  if (isLoggable)   Log.v(TAG,"runStateIdle");
  if (!mDataConnectionIsConnected) {
    if (isLoggable) {
      Log.v(TAG,"runStateIdle: no data connection, skipping");
    }
    setStatusText("No data connection");
    return;
  }
  if (mStorageIsLow) {
    if (isLoggable) {
      Log.v(TAG,"runStateIdle: memory low, skipping");
    }
    setStatusText("Memory low");
    return;
  }
  Account[] accounts=mAccounts;
  if (accounts == null) {
    if (isLoggable) {
      Log.v(TAG,"runStateIdle: accounts not known, skipping");
    }
    setStatusText("Accounts not known yet");
    return;
  }
  SyncOperation op;
  final boolean backgroundDataUsageAllowed=mConnManager.getBackgroundDataSetting();
synchronized (mSyncQueue) {
    while (true) {
      op=mSyncQueue.head();
      if (op == null) {
        if (isLoggable) {
          Log.v(TAG,"runStateIdle: no more sync operations, returning");
        }
        return;
      }
      if (!isSyncEnabled()) {
        if (isLoggable) {
          Log.v(TAG,"runStateIdle: sync disabled, dropping " + op);
        }
        mSyncQueue.popHead();
        continue;
      }
      final boolean manualSync=op.extras.getBoolean(ContentResolver.SYNC_EXTRAS_MANUAL,false);
      final boolean syncAutomatically=mSyncStorageEngine.getSyncAutomatically(op.account,op.authority) && mSyncStorageEngine.getMasterSyncAutomatically();
      boolean syncAllowed=manualSync || (backgroundDataUsageAllowed && syncAutomatically);
      int isSyncable=mSyncStorageEngine.getIsSyncable(op.account,op.authority);
      if (isSyncable == 0) {
        syncAllowed=false;
      }
 else       if (isSyncable < 0) {
        syncAllowed=op.extras.getBoolean(ContentResolver.SYNC_EXTRAS_INITIALIZE,false);
      }
      if (!syncAllowed) {
        if (isLoggable) {
          Log.v(TAG,"runStateIdle: sync off, dropping " + op);
        }
        mSyncQueue.popHead();
        continue;
      }
      if (!ArrayUtils.contains(accounts,op.account)) {
        mSyncQueue.popHead();
        if (isLoggable) {
          Log.v(TAG,"runStateIdle: account not present, dropping " + op);
        }
        continue;
      }
      if (isLoggable) {
        Log.v(TAG,"runStateIdle: found sync candidate: " + op);
      }
      break;
    }
    final long now=SystemClock.elapsedRealtime();
    if (op.earliestRunTime > now) {
      if (Log.isLoggable(TAG,Log.DEBUG)) {
        Log.d(TAG,"runStateIdle: the time is " + now + " yet the next "+ "sync operation is for "+ op.earliestRunTime+ ": "+ op);
      }
      return;
    }
    if (isLoggable) {
      Log.v(TAG,"runStateIdle: we are going to sync " + op);
    }
    mSyncQueue.popHead();
  }
  SyncAdapterType syncAdapterType=SyncAdapterType.newKey(op.authority,op.account.type);
  RegisteredServicesCache.ServiceInfo<SyncAdapterType> syncAdapterInfo=mSyncAdapters.getServiceInfo(syncAdapterType);
  if (syncAdapterInfo == null) {
    if (Config.LOGD) {
      Log.d(TAG,"can't find a sync adapter for " + syncAdapterType);
    }
    runStateIdle();
    return;
  }
  ActiveSyncContext activeSyncContext=new ActiveSyncContext(op,insertStartSyncEvent(op));
  mActiveSyncContext=activeSyncContext;
  if (Log.isLoggable(TAG,Log.VERBOSE)) {
    Log.v(TAG,"runStateIdle: setting mActiveSyncContext to " + mActiveSyncContext);
  }
  mSyncStorageEngine.setActiveSync(mActiveSyncContext);
  if (!activeSyncContext.bindToSyncAdapter(syncAdapterInfo)) {
    Log.e(TAG,"Bind attempt failed to " + syncAdapterInfo);
    mActiveSyncContext=null;
    mSyncStorageEngine.setActiveSync(mActiveSyncContext);
    runStateIdle();
    return;
  }
  mSyncWakeLock.acquire();
}
