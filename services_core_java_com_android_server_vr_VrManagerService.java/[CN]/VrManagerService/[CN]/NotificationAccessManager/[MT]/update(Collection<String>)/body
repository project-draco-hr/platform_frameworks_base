{
  int currentUserId=ActivityManager.getCurrentUser();
  ArraySet<String> allowed=mAllowedPackages.get(currentUserId);
  if (allowed == null) {
    allowed=new ArraySet<>();
  }
  final int listenerCount=mNotificationAccessPackageToUserId.size();
  for (int i=listenerCount - 1; i >= 0; i--) {
    final int grantUserId=mNotificationAccessPackageToUserId.valueAt(i);
    if (grantUserId != currentUserId) {
      String packageName=mNotificationAccessPackageToUserId.keyAt(i);
      revokeNotificationListenerAccess(packageName,grantUserId);
      revokeNotificationPolicyAccess(packageName);
      revokeCoarseLocationPermissionIfNeeded(packageName,grantUserId);
      mNotificationAccessPackageToUserId.removeAt(i);
    }
  }
  for (  String pkg : allowed) {
    if (!packageNames.contains(pkg)) {
      revokeNotificationListenerAccess(pkg,currentUserId);
      revokeNotificationPolicyAccess(pkg);
      revokeCoarseLocationPermissionIfNeeded(pkg,currentUserId);
      mNotificationAccessPackageToUserId.remove(pkg);
    }
  }
  for (  String pkg : packageNames) {
    if (!allowed.contains(pkg)) {
      grantNotificationPolicyAccess(pkg);
      grantNotificationListenerAccess(pkg,currentUserId);
      grantCoarseLocationPermissionIfNeeded(pkg,currentUserId);
      mNotificationAccessPackageToUserId.put(pkg,currentUserId);
    }
  }
  allowed.clear();
  allowed.addAll(packageNames);
  mAllowedPackages.put(currentUserId,allowed);
}
