{
  ArraySet<ComponentName> vrComponents=SystemConfig.getInstance().getDefaultVrComponents();
  if (vrComponents == null) {
    return;
  }
  ArraySet<String> vrComponentPackageNames=new ArraySet<>();
  for (  ComponentName componentName : vrComponents) {
    vrComponentPackageNames.add(componentName.getPackageName());
  }
  PackageManager pm=mContext.getPackageManager();
  List<PackageInfo> packageInfos=pm.getInstalledPackages(PackageManager.GET_CONFIGURATIONS);
  boolean vrModeIsUsed=false;
  for (  PackageInfo packageInfo : packageInfos) {
    if (packageInfo != null && packageInfo.packageName != null && pm.getApplicationEnabledSetting(packageInfo.packageName) == PackageManager.COMPONENT_ENABLED_STATE_DEFAULT) {
      vrModeIsUsed=enableVrComponentsIfVrModeUsed(pm,packageInfo,vrComponentPackageNames,vrComponents);
      if (vrModeIsUsed) {
        break;
      }
    }
  }
  if (!vrModeIsUsed) {
    Slog.i(TAG,"No VR packages found, disabling VR components");
    setVrComponentsEnabledOrDisabled(vrComponents,false);
    IntentFilter intentFilter=new IntentFilter();
    intentFilter.addAction(Intent.ACTION_PACKAGE_ADDED);
    intentFilter.addDataScheme("package");
    mContext.registerReceiver(new BroadcastReceiver(){
      @Override public void onReceive(      Context context,      Intent intent){
        PackageManager pm=context.getPackageManager();
        final String packageName=intent.getData().getSchemeSpecificPart();
        if (packageName != null) {
          try {
            PackageInfo packageInfo=pm.getPackageInfo(packageName,PackageManager.GET_CONFIGURATIONS);
            enableVrComponentsIfVrModeUsed(pm,packageInfo,vrComponentPackageNames,vrComponents);
          }
 catch (          NameNotFoundException e) {
          }
        }
      }
    }
,intentFilter);
  }
}
