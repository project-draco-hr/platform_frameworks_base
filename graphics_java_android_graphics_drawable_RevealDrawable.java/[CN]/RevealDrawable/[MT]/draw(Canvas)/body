{
  final int layerCount=getNumberOfLayers();
  if (layerCount == 0) {
    return;
  }
  getDrawable(0).draw(canvas);
  final Rect bounds=getBounds();
  final ArrayList<Ripple> activeRipples=mActiveRipples;
  if (layerCount == 1 || bounds.isEmpty() || activeRipples == null || activeRipples.isEmpty()) {
    return;
  }
  if (mRipplePaint == null) {
    mRipplePaint=new Paint();
    mRipplePaint.setAntiAlias(true);
  }
  boolean needsMask=false;
  int layerSaveCount=-1;
  int n=activeRipples.size();
  for (int i=0; i < n; i++) {
    final Ripple ripple=activeRipples.get(i);
    if (!ripple.active()) {
      activeRipples.remove(i);
      i--;
      n--;
    }
 else {
      if (layerSaveCount < 0) {
        layerSaveCount=canvas.saveLayer(bounds.left,bounds.top,bounds.right,bounds.bottom,null,0);
        canvas.clipRect(bounds);
      }
      needsMask|=ripple.draw(canvas,mRipplePaint);
    }
  }
  if (layerSaveCount >= 0) {
    if (needsMask) {
      if (mMaskingPaint == null) {
        mMaskingPaint=new Paint();
        mMaskingPaint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));
      }
      canvas.saveLayer(bounds.left,bounds.top,bounds.right,bounds.bottom,mMaskingPaint,0);
      getDrawable(1).draw(canvas);
    }
    canvas.restoreToCount(layerSaveCount);
  }
}
