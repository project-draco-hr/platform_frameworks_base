{
  final Drawable lower=getDrawable(0);
  lower.draw(canvas);
  if (mActiveRipples == null || mActiveRipples.isEmpty()) {
    return;
  }
  final Rect bounds=getBounds();
  final int width=bounds.width();
  final int height=bounds.height();
  if (mMaskBitmap == null) {
    mMaskBitmap=Bitmap.createBitmap(width,height,Bitmap.Config.ALPHA_8);
    mMaskCanvas=new Canvas(mMaskBitmap);
    mMaskPaint=new Paint();
    mMaskPaint.setAntiAlias(true);
  }
 else   if (mMaskBitmap.getHeight() < height || mMaskBitmap.getWidth() < width) {
    mMaskBitmap.recycle();
    mMaskBitmap=Bitmap.createBitmap(width,height,Bitmap.Config.ALPHA_8);
  }
  if (mRevealBitmap == null) {
    mRevealBitmap=Bitmap.createBitmap(width,height,Bitmap.Config.ARGB_8888);
    mRevealCanvas=new Canvas(mRevealBitmap);
    mRevealPaint=new Paint();
    mRevealPaint.setAntiAlias(true);
    mRevealPaint.setShader(new BitmapShader(mRevealBitmap,TileMode.CLAMP,TileMode.CLAMP));
  }
 else   if (mRevealBitmap.getHeight() < height || mRevealBitmap.getWidth() < width) {
    mRevealBitmap.recycle();
    mRevealBitmap=Bitmap.createBitmap(width,height,Bitmap.Config.ARGB_8888);
  }
  mMaskCanvas.drawColor(Color.TRANSPARENT,Mode.CLEAR);
  int n=mActiveRipples.size();
  for (int i=0; i < n; i++) {
    final Ripple ripple=mActiveRipples.get(i);
    if (!ripple.active()) {
      mActiveRipples.remove(i);
      i--;
      n--;
    }
 else {
      ripple.draw(mMaskCanvas,mMaskPaint);
    }
  }
  mRevealCanvas.drawColor(Color.TRANSPARENT,Mode.CLEAR);
  final Drawable upper=getDrawable(1);
  upper.draw(mRevealCanvas);
  canvas.drawBitmap(mMaskBitmap,0,0,mRevealPaint);
}
