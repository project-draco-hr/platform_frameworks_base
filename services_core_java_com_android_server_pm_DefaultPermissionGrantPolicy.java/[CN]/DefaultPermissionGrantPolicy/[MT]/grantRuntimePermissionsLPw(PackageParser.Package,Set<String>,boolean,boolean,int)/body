{
  if (pkg.requestedPermissions.isEmpty()) {
    return;
  }
  List<String> requestedPermissions=pkg.requestedPermissions;
  Set<String> grantablePermissions=null;
  if (!isDefaultPhoneOrSms && pkg.isUpdatedSystemApp()) {
    PackageSetting sysPs=mService.mSettings.getDisabledSystemPkgLPr(pkg.packageName);
    if (sysPs != null) {
      if (sysPs.pkg.requestedPermissions.isEmpty()) {
        return;
      }
      if (!requestedPermissions.equals(sysPs.pkg.requestedPermissions)) {
        grantablePermissions=new ArraySet<>(requestedPermissions);
        requestedPermissions=sysPs.pkg.requestedPermissions;
      }
    }
  }
  final int grantablePermissionCount=requestedPermissions.size();
  for (int i=0; i < grantablePermissionCount; i++) {
    String permission=requestedPermissions.get(i);
    if (grantablePermissions != null && !grantablePermissions.contains(permission)) {
      continue;
    }
    if (permissions.contains(permission)) {
      final int flags=mService.getPermissionFlags(permission,pkg.packageName,userId);
      if (flags == 0 || isDefaultPhoneOrSms) {
        final int fixedFlags=PackageManager.FLAG_PERMISSION_SYSTEM_FIXED | PackageManager.FLAG_PERMISSION_POLICY_FIXED;
        if ((flags & fixedFlags) != 0) {
          continue;
        }
        mService.grantRuntimePermission(pkg.packageName,permission,userId);
        if (DEBUG) {
          Log.i(TAG,"Granted " + (systemFixed ? "fixed " : "not fixed ") + permission+ " to default handler "+ pkg.packageName);
        }
        int newFlags=PackageManager.FLAG_PERMISSION_GRANTED_BY_DEFAULT;
        if (systemFixed) {
          newFlags|=PackageManager.FLAG_PERMISSION_SYSTEM_FIXED;
        }
        mService.updatePermissionFlags(permission,pkg.packageName,newFlags,newFlags,userId);
      }
      if ((flags & PackageManager.FLAG_PERMISSION_GRANTED_BY_DEFAULT) != 0 && (flags & PackageManager.FLAG_PERMISSION_SYSTEM_FIXED) != 0 && !systemFixed) {
        if (DEBUG) {
          Log.i(TAG,"Granted not fixed " + permission + " to default handler "+ pkg.packageName);
        }
        mService.updatePermissionFlags(permission,pkg.packageName,PackageManager.FLAG_PERMISSION_SYSTEM_FIXED,0,userId);
      }
    }
  }
}
