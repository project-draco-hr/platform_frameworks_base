{
  Log.i(TAG,"Granting permissions to platform components for user " + userId);
synchronized (mService.mPackages) {
    for (    PackageParser.Package pkg : mService.mPackages.values()) {
      if (!isSysComponentOrPersistentPrivApp(pkg) || !doesPackageSupportRuntimePermissions(pkg)) {
        continue;
      }
      final int permissionCount=pkg.requestedPermissions.size();
      for (int i=0; i < permissionCount; i++) {
        String permission=pkg.requestedPermissions.get(i);
        BasePermission bp=mService.mSettings.mPermissions.get(permission);
        if (bp != null && bp.isRuntime()) {
          final int flags=mService.getPermissionFlags(permission,pkg.packageName,userId);
          if ((flags & PackageManager.FLAG_PERMISSION_SYSTEM_FIXED) == 0) {
            mService.grantRuntimePermission(pkg.packageName,permission,userId);
            mService.updatePermissionFlags(permission,pkg.packageName,PackageManager.MASK_PERMISSION_FLAGS,PackageManager.FLAG_PERMISSION_SYSTEM_FIXED | PackageManager.FLAG_PERMISSION_GRANTED_BY_DEFAULT,userId);
            if (DEBUG) {
              Log.i(TAG,"Granted " + permission + " to system component "+ pkg.packageName);
            }
          }
        }
      }
    }
  }
}
