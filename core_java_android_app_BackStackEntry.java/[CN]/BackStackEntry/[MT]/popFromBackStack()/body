{
  if (FragmentManager.DEBUG)   Log.v(TAG,"popFromBackStack: " + this);
  Op op=mTail;
  while (op != null) {
switch (op.cmd) {
case OP_ADD:
{
        Fragment f=op.fragment;
        if (mAddToBackStack) {
          f.mBackStackNesting--;
        }
        mManager.removeFragment(f,FragmentManager.reverseTransit(mTransition),mTransitionStyle);
      }
    break;
case OP_REPLACE:
{
    Fragment f=op.fragment;
    if (mAddToBackStack) {
      f.mBackStackNesting--;
    }
    mManager.removeFragment(f,FragmentManager.reverseTransit(mTransition),mTransitionStyle);
    if (op.removed != null) {
      for (int i=0; i < op.removed.size(); i++) {
        Fragment old=op.removed.get(i);
        if (mAddToBackStack) {
          old.mBackStackNesting--;
        }
        mManager.addFragment(old,false);
      }
    }
  }
break;
case OP_REMOVE:
{
Fragment f=op.fragment;
if (mAddToBackStack) {
  f.mBackStackNesting--;
}
mManager.addFragment(f,false);
}
break;
case OP_HIDE:
{
Fragment f=op.fragment;
if (mAddToBackStack) {
f.mBackStackNesting--;
}
mManager.showFragment(f,FragmentManager.reverseTransit(mTransition),mTransitionStyle);
}
break;
case OP_SHOW:
{
Fragment f=op.fragment;
if (mAddToBackStack) {
f.mBackStackNesting--;
}
mManager.hideFragment(f,FragmentManager.reverseTransit(mTransition),mTransitionStyle);
}
break;
default :
{
throw new IllegalArgumentException("Unknown cmd: " + op.cmd);
}
}
op=op.prev;
}
mManager.moveToState(mManager.mCurState,FragmentManager.reverseTransit(mTransition),mTransitionStyle,true);
if (mManager.mNeedMenuInvalidate && mManager.mActivity != null) {
mManager.mActivity.invalidateOptionsMenu();
mManager.mNeedMenuInvalidate=false;
}
if (mIndex >= 0) {
mManager.freeBackStackIndex(mIndex);
mIndex=-1;
}
}
