{
  Op op=mHead;
  while (op != null) {
switch (op.cmd) {
case OP_ADD:
{
        Fragment f=op.fragment;
        if (mAddToBackStack) {
          f.mBackStackNesting++;
        }
        f.mNextAnim=op.enterAnim;
        mManager.addFragment(f,false);
      }
    break;
case OP_REMOVE:
{
    Fragment f=op.fragment;
    if (mAddToBackStack) {
      f.mBackStackNesting++;
    }
    f.mNextAnim=op.exitAnim;
    mManager.removeFragment(f,mTransition,mTransitionStyle);
  }
break;
case OP_HIDE:
{
Fragment f=op.fragment;
if (mAddToBackStack) {
  f.mBackStackNesting++;
}
f.mNextAnim=op.exitAnim;
mManager.hideFragment(f,mTransition,mTransitionStyle);
}
break;
case OP_SHOW:
{
Fragment f=op.fragment;
if (mAddToBackStack) {
f.mBackStackNesting++;
}
f.mNextAnim=op.enterAnim;
mManager.showFragment(f,mTransition,mTransitionStyle);
}
break;
default :
{
throw new IllegalArgumentException("Unknown cmd: " + op.cmd);
}
}
op=op.next;
}
mManager.moveToState(mManager.mCurState,mTransition,mTransitionStyle,true);
if (mAddToBackStack) {
mManager.addBackStackState(this);
}
}
