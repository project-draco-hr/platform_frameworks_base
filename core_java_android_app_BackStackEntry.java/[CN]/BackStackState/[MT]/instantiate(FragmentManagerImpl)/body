{
  BackStackEntry bse=new BackStackEntry(fm);
  int pos=0;
  while (pos < mOps.length) {
    BackStackEntry.Op op=new BackStackEntry.Op();
    op.cmd=mOps[pos++];
    if (FragmentManagerImpl.DEBUG)     Log.v(FragmentManagerImpl.TAG,"BSE " + bse + " set base fragment #"+ mOps[pos]);
    Fragment f=fm.mActive.get(mOps[pos++]);
    op.fragment=f;
    op.enterAnim=mOps[pos++];
    op.exitAnim=mOps[pos++];
    final int N=mOps[pos++];
    if (N > 0) {
      op.removed=new ArrayList<Fragment>(N);
      for (int i=0; i < N; i++) {
        if (FragmentManagerImpl.DEBUG)         Log.v(FragmentManagerImpl.TAG,"BSE " + bse + " set remove fragment #"+ mOps[pos]);
        Fragment r=fm.mActive.get(mOps[pos++]);
        op.removed.add(r);
      }
    }
    bse.addOp(op);
  }
  bse.mTransition=mTransition;
  bse.mTransitionStyle=mTransitionStyle;
  bse.mName=mName;
  bse.mIndex=mIndex;
  bse.mAddToBackStack=true;
  bse.bumpBackStackNesting(1);
  return bse;
}
