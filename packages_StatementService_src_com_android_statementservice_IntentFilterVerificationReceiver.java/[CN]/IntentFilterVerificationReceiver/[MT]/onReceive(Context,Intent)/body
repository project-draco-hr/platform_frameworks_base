{
  final String action=intent.getAction();
  if (Intent.ACTION_INTENT_FILTER_NEEDS_VERIFICATION.equals(action)) {
    Bundle inputExtras=intent.getExtras();
    if (inputExtras != null) {
      Intent serviceIntent=new Intent(context,DirectStatementService.class);
      serviceIntent.setAction(DirectStatementService.CHECK_ALL_ACTION);
      int verificationId=inputExtras.getInt(PackageManager.EXTRA_INTENT_FILTER_VERIFICATION_ID);
      String scheme=inputExtras.getString(PackageManager.EXTRA_INTENT_FILTER_VERIFICATION_URI_SCHEME);
      String hosts=inputExtras.getString(PackageManager.EXTRA_INTENT_FILTER_VERIFICATION_HOSTS);
      String packageName=inputExtras.getString(PackageManager.EXTRA_INTENT_FILTER_VERIFICATION_PACKAGE_NAME);
      Log.i(TAG,"Verify IntentFilter for " + hosts);
      Bundle extras=new Bundle();
      extras.putString(DirectStatementService.EXTRA_RELATION,HANDLE_ALL_URLS_RELATION);
      String[] hostList=hosts.split(" ");
      if (hostList.length > MAX_HOSTS_PER_REQUEST) {
        Log.w(TAG,String.format(TOO_MANY_HOSTS_FORMAT,hostList.length,MAX_HOSTS_PER_REQUEST));
        sendErrorToPackageManager(context.getPackageManager(),verificationId);
        return;
      }
      try {
        ArrayList<String> sourceAssets=new ArrayList<String>();
        for (        String host : hostList) {
          sourceAssets.add(createWebAssetString(scheme,host));
        }
        extras.putStringArrayList(DirectStatementService.EXTRA_SOURCE_ASSET_DESCRIPTORS,sourceAssets);
      }
 catch (      MalformedURLException e) {
        Log.w(TAG,"Error when processing input host: " + e.getMessage());
        sendErrorToPackageManager(context.getPackageManager(),verificationId);
        return;
      }
      try {
        extras.putString(DirectStatementService.EXTRA_TARGET_ASSET_DESCRIPTOR,createAndroidAssetString(context,packageName));
      }
 catch (      NameNotFoundException e) {
        Log.w(TAG,"Error when processing input Android package: " + e.getMessage());
        sendErrorToPackageManager(context.getPackageManager(),verificationId);
        return;
      }
      extras.putParcelable(DirectStatementService.EXTRA_RESULT_RECEIVER,new IsAssociatedResultReceiver(new Handler(),context.getPackageManager(),verificationId));
      serviceIntent.putExtras(extras);
      context.startService(serviceIntent);
    }
  }
 else {
    Log.w(TAG,"Intent action not supported: " + action);
  }
}
