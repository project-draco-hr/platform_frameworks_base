{
  checkLock();
  SessionParams params=getParams();
  try {
    if (mViewRoot == null) {
      return ERROR_NOT_INFLATED.createResult();
    }
    int w_spec, h_spec;
    RenderingMode renderingMode=params.getRenderingMode();
    boolean newRenderSize=false;
    if (mMeasuredScreenWidth == -1) {
      newRenderSize=true;
      mMeasuredScreenWidth=params.getScreenWidth();
      mMeasuredScreenHeight=params.getScreenHeight();
      if (renderingMode != RenderingMode.NORMAL) {
        w_spec=MeasureSpec.makeMeasureSpec(mMeasuredScreenWidth,renderingMode.isHorizExpand() ? MeasureSpec.UNSPECIFIED : MeasureSpec.EXACTLY);
        h_spec=MeasureSpec.makeMeasureSpec(mMeasuredScreenHeight,renderingMode.isVertExpand() ? MeasureSpec.UNSPECIFIED : MeasureSpec.EXACTLY);
        mViewRoot.measure(w_spec,h_spec);
        if (renderingMode.isHorizExpand()) {
          int neededWidth=mViewRoot.getChildAt(0).getMeasuredWidth();
          if (neededWidth > mMeasuredScreenWidth) {
            mMeasuredScreenWidth=neededWidth;
          }
        }
        if (renderingMode.isVertExpand()) {
          int neededHeight=mViewRoot.getChildAt(0).getMeasuredHeight();
          if (neededHeight > mMeasuredScreenHeight) {
            mMeasuredScreenHeight=neededHeight;
          }
        }
      }
    }
    w_spec=MeasureSpec.makeMeasureSpec(mMeasuredScreenWidth,MeasureSpec.EXACTLY);
    h_spec=MeasureSpec.makeMeasureSpec(mMeasuredScreenHeight,MeasureSpec.EXACTLY);
    mViewRoot.measure(w_spec,h_spec);
    mViewRoot.layout(0,0,mMeasuredScreenWidth,mMeasuredScreenHeight);
    if (params.isLayoutOnly()) {
      mImage=null;
      mCanvas=null;
    }
 else {
      mViewRoot.mAttachInfo.mTreeObserver.dispatchOnPreDraw();
      boolean newImage=false;
      if (newRenderSize || mCanvas == null) {
        if (params.getImageFactory() != null) {
          mImage=params.getImageFactory().getImage(mMeasuredScreenWidth,mMeasuredScreenHeight);
        }
 else {
          mImage=new BufferedImage(mMeasuredScreenWidth,mMeasuredScreenHeight,BufferedImage.TYPE_INT_ARGB);
          newImage=true;
        }
        if (params.isBgColorOverridden()) {
          newImage=true;
          Graphics2D gc=mImage.createGraphics();
          gc.setColor(new Color(params.getOverrideBgColor(),true));
          gc.setComposite(AlphaComposite.Src);
          gc.fillRect(0,0,mMeasuredScreenWidth,mMeasuredScreenHeight);
          gc.dispose();
        }
        Bitmap bitmap=Bitmap_Delegate.createBitmap(mImage,true,params.getDensity());
        mCanvas=new Canvas(bitmap);
        mCanvas.setDensity(params.getDensity().getDpiValue());
      }
      if (freshRender && newImage == false) {
        Graphics2D gc=mImage.createGraphics();
        gc.setComposite(AlphaComposite.Src);
        gc.setColor(new Color(0x00000000,true));
        gc.fillRect(0,0,mMeasuredScreenWidth,mMeasuredScreenHeight);
        gc.dispose();
      }
      mViewRoot.draw(mCanvas);
    }
    mViewInfoList=startVisitingViews(mViewRoot,0);
    return SUCCESS.createResult();
  }
 catch (  Throwable e) {
    Throwable t=e;
    while (t.getCause() != null) {
      t=t.getCause();
    }
    return ERROR_UNKNOWN.createResult(t.getMessage(),t);
  }
}
