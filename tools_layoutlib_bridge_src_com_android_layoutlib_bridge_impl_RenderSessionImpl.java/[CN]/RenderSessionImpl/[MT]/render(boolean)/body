{
  checkLock();
  SessionParams params=getParams();
  try {
    if (mViewRoot == null) {
      return ERROR_NOT_INFLATED.createResult();
    }
    measure(params);
    HardwareConfig hardwareConfig=params.getHardwareConfig();
    Result renderResult=SUCCESS.createResult();
    if (params.isLayoutOnly()) {
      mImage=null;
      mCanvas=null;
    }
 else {
      boolean newImage=false;
      boolean disableBitmapCaching=Boolean.TRUE.equals(params.getFlag(RenderParamsFlags.FLAG_KEY_DISABLE_BITMAP_CACHING));
      if (mNewRenderSize || mCanvas == null || disableBitmapCaching) {
        mNewRenderSize=false;
        if (params.getImageFactory() != null) {
          mImage=params.getImageFactory().getImage(mMeasuredScreenWidth,mMeasuredScreenHeight);
        }
 else {
          mImage=new BufferedImage(mMeasuredScreenWidth,mMeasuredScreenHeight,BufferedImage.TYPE_INT_ARGB);
          newImage=true;
        }
        if (params.isBgColorOverridden()) {
          newImage=true;
          Graphics2D gc=mImage.createGraphics();
          gc.setColor(new Color(params.getOverrideBgColor(),true));
          gc.setComposite(AlphaComposite.Src);
          gc.fillRect(0,0,mMeasuredScreenWidth,mMeasuredScreenHeight);
          gc.dispose();
        }
        Bitmap bitmap=Bitmap_Delegate.createBitmap(mImage,true,hardwareConfig.getDensity());
        if (mCanvas == null) {
          mCanvas=new Canvas(bitmap);
        }
 else {
          mCanvas.setBitmap(bitmap);
        }
        mCanvas.setDensity(hardwareConfig.getDensity().getDpiValue());
      }
      if (freshRender && !newImage) {
        Graphics2D gc=mImage.createGraphics();
        gc.setComposite(AlphaComposite.Src);
        gc.setColor(new Color(0x00000000,true));
        gc.fillRect(0,0,mMeasuredScreenWidth,mMeasuredScreenHeight);
        gc.dispose();
      }
      if (mElapsedFrameTimeNanos >= 0) {
        long initialTime=System_Delegate.nanoTime();
        if (!mFirstFrameExecuted) {
          render(getContext(),mViewRoot,NOP_CANVAS,mMeasuredScreenWidth,mMeasuredScreenHeight);
          Choreographer_Delegate.doFrame(initialTime);
          mFirstFrameExecuted=true;
        }
        Choreographer_Delegate.doFrame(initialTime + mElapsedFrameTimeNanos);
      }
      renderResult=render(getContext(),mViewRoot,mCanvas,mMeasuredScreenWidth,mMeasuredScreenHeight);
    }
    mSystemViewInfoList=visitAllChildren(mViewRoot,0,params.getExtendedViewInfoMode(),false);
    return renderResult;
  }
 catch (  Throwable e) {
    Throwable t=e;
    while (t.getCause() != null) {
      t=t.getCause();
    }
    return ERROR_UNKNOWN.createResult(t.getMessage(),t);
  }
}
