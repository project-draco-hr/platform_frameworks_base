{
  Result result=acquireLock(timeout);
  if (result != null) {
    return result;
  }
  Bridge.setLog(mParams.getLog());
  DisplayMetrics metrics=new DisplayMetrics();
  metrics.densityDpi=mParams.getDensity();
  metrics.density=mParams.getDensity() / (float)DisplayMetrics.DENSITY_DEFAULT;
  metrics.scaledDensity=metrics.density;
  metrics.widthPixels=mParams.getScreenWidth();
  metrics.heightPixels=mParams.getScreenHeight();
  metrics.xdpi=mParams.getXdpi();
  metrics.ydpi=mParams.getYdpi();
  ResourceResolver resolver=ResourceResolver.create(new IFrameworkResourceIdProvider(){
    public Integer getId(    String resType,    String resName){
      return Bridge.getResourceValue(resType,resName);
    }
  }
,mParams.getProjectResources(),mParams.getFrameworkResources(),mParams.getThemeName(),mParams.isProjectTheme(),mParams.getLog());
  mContext=new BridgeContext(mParams.getProjectKey(),metrics,resolver,mParams.getProjectCallback());
  sCurrentContext=mContext;
  mContext.initResources();
  mWindowBackground=null;
  mScreenOffset=0;
  StyleResourceValue theme=resolver.getTheme();
  if (theme != null && mParams.isBgColorOverridden() == false) {
    mWindowBackground=resolver.findItemInTheme("windowBackground");
    mWindowBackground=resolver.resolveResValue(mWindowBackground);
    mScreenOffset=getScreenOffset(resolver,metrics);
  }
  mInflater=new BridgeInflater(mContext,mParams.getProjectCallback());
  mContext.setBridgeInflater(mInflater);
  mInflater.setFactory2(mContext);
  mBlockParser=new BridgeXmlBlockParser(mParams.getLayoutDescription(),mContext,false);
  return SUCCESS.createResult();
}
