{
  super(context,attrs,defStyle);
  TypedArray attributesArray=context.obtainStyledAttributes(attrs,R.styleable.DatePicker,defStyle,0);
  boolean spinnersShown=attributesArray.getBoolean(R.styleable.DatePicker_spinnersShown,DEFAULT_SPINNERS_SHOWN);
  boolean calendarViewShown=attributesArray.getBoolean(R.styleable.DatePicker_calendarViewShown,DEFAULT_CALENDAR_VIEW_SHOWN);
  int startYear=attributesArray.getInt(R.styleable.DatePicker_startYear,DEFAULT_START_YEAR);
  int endYear=attributesArray.getInt(R.styleable.DatePicker_endYear,DEFAULT_END_YEAR);
  String minDate=attributesArray.getString(R.styleable.DatePicker_minDate);
  String maxDate=attributesArray.getString(R.styleable.DatePicker_maxDate);
  int layoutResourceId=attributesArray.getResourceId(R.styleable.DatePicker_layout,R.layout.date_picker);
  attributesArray.recycle();
  LayoutInflater inflater=(LayoutInflater)context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
  inflater.inflate(layoutResourceId,this,true);
  OnValueChangedListener onChangeListener=new OnValueChangedListener(){
    public void onValueChange(    NumberPicker picker,    int oldVal,    int newVal){
      updateDate(mYearSpinner.getValue(),mMonthSpinner.getValue(),mDaySpinner.getValue());
    }
  }
;
  mSpinners=(LinearLayout)findViewById(R.id.pickers);
  mCalendarView=(CalendarView)findViewById(R.id.calendar_view);
  mCalendarView.setOnDateChangeListener(new CalendarView.OnDateChangeListener(){
    public void onSelectedDayChange(    CalendarView view,    int year,    int month,    int monthDay){
      updateDate(year,month,monthDay);
    }
  }
);
  mDaySpinner=(NumberPicker)findViewById(R.id.day);
  mDaySpinner.setFormatter(NumberPicker.TWO_DIGIT_FORMATTER);
  mDaySpinner.setOnLongPressUpdateInterval(100);
  mDaySpinner.setOnValueChangedListener(onChangeListener);
  mMonthSpinner=(NumberPicker)findViewById(R.id.month);
  mMonthSpinner.setMinValue(0);
  mMonthSpinner.setMaxValue(mNumberOfMonths - 1);
  mMonthSpinner.setDisplayedValues(getShortMonths());
  mMonthSpinner.setOnLongPressUpdateInterval(200);
  mMonthSpinner.setOnValueChangedListener(onChangeListener);
  mYearSpinner=(NumberPicker)findViewById(R.id.year);
  mYearSpinner.setOnLongPressUpdateInterval(100);
  mYearSpinner.setOnValueChangedListener(onChangeListener);
  if (!spinnersShown && !calendarViewShown) {
    setSpinnersShown(true);
  }
 else {
    setSpinnersShown(spinnersShown);
    setCalendarViewShown(calendarViewShown);
    mTempDate.clear();
    if (!TextUtils.isEmpty(minDate)) {
      if (!parseDate(minDate,mTempDate)) {
        mTempDate.set(startYear,0,1);
      }
    }
 else {
      mTempDate.set(startYear,0,1);
    }
    mMinDate.clear();
    setMinDate(mTempDate.getTimeInMillis());
    mTempDate.clear();
    if (!TextUtils.isEmpty(maxDate)) {
      if (!parseDate(maxDate,mTempDate)) {
        mTempDate.set(endYear,11,31);
      }
    }
 else {
      mTempDate.set(endYear,11,31);
    }
    mMaxDate.clear();
    setMaxDate(mTempDate.getTimeInMillis());
    mCurrentDate.setTimeInMillis(System.currentTimeMillis());
    init(mCurrentDate.get(Calendar.YEAR),mCurrentDate.get(Calendar.MONTH),mCurrentDate.get(Calendar.DAY_OF_MONTH),null);
  }
  reorderSpinners();
}
