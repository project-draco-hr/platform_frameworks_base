{
  super(context,attrs,defStyle);
  LayoutInflater inflater=(LayoutInflater)context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
  inflater.inflate(R.layout.date_picker,this,true);
  OnChangeListener onChangeListener=new OnChangeListener(){
    public void onChange(    NumberPicker picker,    int oldVal,    int newVal){
      updateDateUnchecked(mYearPicker.getCurrent(),mMonthPicker.getCurrent(),mDayPicker.getCurrent());
    }
  }
;
  mMiniMonthDayPicker=(DayPicker)findViewById(R.id.mini_month_day_picker);
  mMiniMonthDayPicker.setOnDateChangeListener(new DayPicker.OnSelectedDayChangeListener(){
    public void onSelectedDayChange(    DayPicker view,    int year,    int month,    int monthDay){
      updateDateUnchecked(year,month,monthDay);
    }
  }
);
  mDayPicker=(NumberPicker)findViewById(R.id.day);
  mDayPicker.setFormatter(NumberPicker.TWO_DIGIT_FORMATTER);
  mDayPicker.setOnLongPressUpdateInterval(100);
  mDayPicker.setOnChangeListener(onChangeListener);
  mMonthPicker=(NumberPicker)findViewById(R.id.month);
  mMonthPicker.setRange(0,mNumberOfMonths - 1,getShortMonths());
  mMonthPicker.setOnLongPressUpdateInterval(200);
  mMonthPicker.setOnChangeListener(onChangeListener);
  mYearPicker=(NumberPicker)findViewById(R.id.year);
  mYearPicker.setOnLongPressUpdateInterval(100);
  mYearPicker.setOnChangeListener(onChangeListener);
  TypedArray a=context.obtainStyledAttributes(attrs,R.styleable.DatePicker);
  int startYear=a.getInt(R.styleable.DatePicker_startYear,DEFAULT_START_YEAR);
  int endYear=a.getInt(R.styleable.DatePicker_endYear,DEFAULT_END_YEAR);
  setRange(startYear,endYear);
  a.recycle();
  mTempCalendar.setTimeInMillis(System.currentTimeMillis());
  init(mTempCalendar.get(Calendar.YEAR),mTempCalendar.get(Calendar.MONTH),mTempCalendar.get(Calendar.DAY_OF_MONTH),null);
  reorderPickers();
}
