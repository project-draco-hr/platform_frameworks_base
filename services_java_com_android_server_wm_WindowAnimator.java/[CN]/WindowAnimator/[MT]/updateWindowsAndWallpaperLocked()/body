{
  ++mTransactionSequence;
  for (int i=mService.mWindows.size() - 1; i >= 0; i--) {
    WindowState w=mService.mWindows.get(i);
    WindowStateAnimator winAnimator=w.mWinAnimator;
    final WindowManager.LayoutParams attrs=w.mAttrs;
    if (winAnimator.mSurface != null) {
      final boolean wasAnimating=winAnimator.mWasAnimating;
      final boolean nowAnimating=winAnimator.stepAnimationLocked(mCurrentTime);
      if (WindowManagerService.DEBUG_WALLPAPER) {
        Slog.v(TAG,w + ": wasAnimating=" + wasAnimating+ ", nowAnimating="+ nowAnimating);
      }
      if (nowAnimating) {
        if (winAnimator.mAnimation != null) {
          if ((attrs.flags & FLAG_SHOW_WALLPAPER) != 0 && winAnimator.mAnimation.getDetachWallpaper()) {
            mDetachedWallpaper=w;
          }
          if (winAnimator.mAnimation.getBackgroundColor() != 0) {
            if (mWindowAnimationBackground == null || (winAnimator.mAnimLayer < mWindowAnimationBackground.mWinAnimator.mAnimLayer)) {
              mWindowAnimationBackground=w;
              mWindowAnimationBackgroundColor=winAnimator.mAnimation.getBackgroundColor();
            }
          }
        }
        mAnimating=true;
      }
      if (w.mAppToken != null && w.mAppToken.animation != null && w.mAppToken.animating) {
        if ((attrs.flags & FLAG_SHOW_WALLPAPER) != 0 && w.mAppToken.animation.getDetachWallpaper()) {
          mDetachedWallpaper=w;
        }
        if (w.mAppToken.animation.getBackgroundColor() != 0) {
          if (mWindowAnimationBackground == null || (winAnimator.mAnimLayer < mWindowAnimationBackground.mWinAnimator.mAnimLayer)) {
            mWindowAnimationBackground=w;
            mWindowAnimationBackgroundColor=w.mAppToken.animation.getBackgroundColor();
          }
        }
      }
      if (wasAnimating && !winAnimator.mAnimating && mService.mWallpaperTarget == w) {
        mBulkUpdateParams|=SET_WALLPAPER_MAY_CHANGE;
        mPendingLayoutChanges|=WindowManagerPolicy.FINISH_LAYOUT_REDO_WALLPAPER;
        if (WindowManagerService.DEBUG_LAYOUT_REPEATS) {
          mService.debugLayoutRepeats("updateWindowsAndWallpaperLocked 2");
        }
      }
      if (mPolicy.doesForceHide(w,attrs)) {
        if (!wasAnimating && nowAnimating) {
          if (WindowManagerService.DEBUG_VISIBILITY)           Slog.v(TAG,"Animation started that could impact force hide: " + w);
          mService.mInnerFields.mWallpaperForceHidingChanged=true;
          mPendingLayoutChanges|=WindowManagerPolicy.FINISH_LAYOUT_REDO_WALLPAPER;
          if (WindowManagerService.DEBUG_LAYOUT_REPEATS) {
            mService.debugLayoutRepeats("updateWindowsAndWallpaperLocked 3");
          }
          mService.mFocusMayChange=true;
        }
 else         if (w.isReadyForDisplay() && winAnimator.mAnimation == null) {
          mForceHiding=true;
        }
      }
 else       if (mPolicy.canBeForceHidden(w,attrs)) {
        boolean changed;
        if (mForceHiding) {
          changed=w.hideLw(false,false);
          if (WindowManagerService.DEBUG_VISIBILITY && changed)           Slog.v(TAG,"Now policy hidden: " + w);
        }
 else {
          changed=w.showLw(false,false);
          if (WindowManagerService.DEBUG_VISIBILITY && changed)           Slog.v(TAG,"Now policy shown: " + w);
          if (changed) {
            if (mService.mInnerFields.mWallpaperForceHidingChanged && w.isVisibleNow()) {
              Animation a=mPolicy.createForceHideEnterAnimation();
              if (a != null) {
                winAnimator.setAnimation(a);
              }
            }
            if (mCurrentFocus == null || mCurrentFocus.mLayer < w.mLayer) {
              mService.mFocusMayChange=true;
            }
          }
        }
        if (changed && (attrs.flags & WindowManager.LayoutParams.FLAG_SHOW_WALLPAPER) != 0) {
          mBulkUpdateParams|=SET_WALLPAPER_MAY_CHANGE;
          mPendingLayoutChanges|=WindowManagerPolicy.FINISH_LAYOUT_REDO_WALLPAPER;
          if (WindowManagerService.DEBUG_LAYOUT_REPEATS) {
            mService.debugLayoutRepeats("updateWindowsAndWallpaperLocked 4");
          }
        }
      }
    }
    final AppWindowToken atoken=w.mAppToken;
    if (atoken != null && (!atoken.allDrawn || atoken.freezingScreen)) {
      if (atoken.lastTransactionSequence != mTransactionSequence) {
        atoken.lastTransactionSequence=mTransactionSequence;
        atoken.numInterestingWindows=atoken.numDrawnWindows=0;
        atoken.startingDisplayed=false;
      }
      if ((w.isOnScreen() || w.mAttrs.type == WindowManager.LayoutParams.TYPE_BASE_APPLICATION) && !w.mExiting && !w.mDestroying) {
        if (WindowManagerService.DEBUG_VISIBILITY || WindowManagerService.DEBUG_ORIENTATION) {
          Slog.v(TAG,"Eval win " + w + ": isDrawn="+ w.isDrawnLw()+ ", isAnimating="+ winAnimator.isAnimating());
          if (!w.isDrawnLw()) {
            Slog.v(TAG,"Not displayed: s=" + winAnimator.mSurface + " pv="+ w.mPolicyVisibility+ " mDrawState="+ winAnimator.mDrawState+ " ah="+ w.mAttachedHidden+ " th="+ atoken.hiddenRequested+ " a="+ winAnimator.mAnimating);
          }
        }
        if (w != atoken.startingWindow) {
          if (!atoken.freezingScreen || !w.mAppFreezing) {
            atoken.numInterestingWindows++;
            if (w.isDrawnLw()) {
              atoken.numDrawnWindows++;
              if (WindowManagerService.DEBUG_VISIBILITY || WindowManagerService.DEBUG_ORIENTATION)               Slog.v(TAG,"tokenMayBeDrawn: " + atoken + " freezingScreen="+ atoken.freezingScreen+ " mAppFreezing="+ w.mAppFreezing);
              mTokenMayBeDrawn=true;
            }
          }
        }
 else         if (w.isDrawnLw()) {
          atoken.startingDisplayed=true;
        }
      }
    }
 else     if (winAnimator.mDrawState == WindowStateAnimator.READY_TO_SHOW) {
      if (winAnimator.performShowLocked()) {
        mPendingLayoutChanges|=WindowManagerPolicy.FINISH_LAYOUT_REDO_ANIM;
        if (WindowManagerService.DEBUG_LAYOUT_REPEATS) {
          mService.debugLayoutRepeats("updateWindowsAndWallpaperLocked 5");
        }
      }
    }
    if (atoken != null && atoken.thumbnail != null) {
      if (atoken.thumbnailTransactionSeq != mTransactionSequence) {
        atoken.thumbnailTransactionSeq=mTransactionSequence;
        atoken.thumbnailLayer=0;
      }
      if (atoken.thumbnailLayer < winAnimator.mAnimLayer) {
        atoken.thumbnailLayer=winAnimator.mAnimLayer;
      }
    }
  }
}
