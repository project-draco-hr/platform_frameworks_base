{
  WindowStateAnimator windowAnimationBackground=null;
  int windowAnimationBackgroundColor=0;
  WindowState detachedWallpaper=null;
  for (int i=mWinAnimators.size() - 1; i >= 0; i--) {
    WindowStateAnimator winAnimator=mWinAnimators.get(i);
    if (winAnimator.mSurface == null) {
      continue;
    }
    final int flags=winAnimator.mAttrFlags;
    final WindowState win=winAnimator.mWin;
    if (winAnimator.mAnimating) {
      if (winAnimator.mAnimation != null) {
        if ((flags & FLAG_SHOW_WALLPAPER) != 0 && winAnimator.mAnimation.getDetachWallpaper()) {
          detachedWallpaper=win;
        }
        final int backgroundColor=winAnimator.mAnimation.getBackgroundColor();
        if (backgroundColor != 0) {
          if (windowAnimationBackground == null || (winAnimator.mAnimLayer < windowAnimationBackground.mAnimLayer)) {
            windowAnimationBackground=winAnimator;
            windowAnimationBackgroundColor=backgroundColor;
          }
        }
      }
      mAnimating=true;
    }
    final AppWindowAnimator appAnimator=win.mAppToken == null ? null : win.mAppToken.mAppAnimator;
    if (appAnimator != null && appAnimator.animation != null && appAnimator.animating) {
      if ((flags & FLAG_SHOW_WALLPAPER) != 0 && appAnimator.animation.getDetachWallpaper()) {
        detachedWallpaper=win;
      }
      final int backgroundColor=appAnimator.animation.getBackgroundColor();
      if (backgroundColor != 0) {
        if (windowAnimationBackground == null || (winAnimator.mAnimLayer < windowAnimationBackground.mAnimLayer)) {
          windowAnimationBackground=winAnimator;
          windowAnimationBackgroundColor=backgroundColor;
        }
      }
    }
  }
  if (mWindowDetachedWallpaper != detachedWallpaper) {
    if (WindowManagerService.DEBUG_WALLPAPER)     Slog.v(TAG,"Detached wallpaper changed from " + mWindowDetachedWallpaper + " to "+ detachedWallpaper);
    mWindowDetachedWallpaper=detachedWallpaper;
    mBulkUpdateParams|=SET_WALLPAPER_MAY_CHANGE;
  }
  if (windowAnimationBackgroundColor != 0) {
    int animLayer=windowAnimationBackground.mAnimLayer;
    WindowState win=windowAnimationBackground.mWin;
    if (windowAnimationBackground != null && mService.mWallpaperTarget == win || mService.mLowerWallpaperTarget == win || mService.mUpperWallpaperTarget == win) {
      final int N=mWinAnimators.size();
      for (int i=0; i < N; i++) {
        WindowStateAnimator winAnimator=mWinAnimators.get(i);
        if (winAnimator.mWin.mIsWallpaper) {
          animLayer=winAnimator.mAnimLayer;
          break;
        }
      }
    }
    mWindowAnimationBackgroundSurface.show(mDw,mDh,animLayer - WindowManagerService.LAYER_OFFSET_DIM,windowAnimationBackgroundColor);
  }
 else {
    mWindowAnimationBackgroundSurface.hide();
  }
}
