{
  final LayoutToAnimatorParams layoutToAnim=mService.mLayoutToAnim;
synchronized (layoutToAnim) {
    layoutToAnim.mAnimationScheduled=false;
    if (!layoutToAnim.mParamsModified) {
      return;
    }
    layoutToAnim.mParamsModified=false;
    if ((layoutToAnim.mChanges & LayoutToAnimatorParams.WALLPAPER_TOKENS_CHANGED) != 0) {
      layoutToAnim.mChanges&=~LayoutToAnimatorParams.WALLPAPER_TOKENS_CHANGED;
      mWallpaperTokens=new ArrayList<WindowToken>(layoutToAnim.mWallpaperTokens);
    }
    if (WindowManagerService.DEBUG_WALLPAPER_LIGHT) {
      if (mWallpaperTarget != layoutToAnim.mWallpaperTarget || mLowerWallpaperTarget != layoutToAnim.mLowerWallpaperTarget || mUpperWallpaperTarget != layoutToAnim.mUpperWallpaperTarget) {
        Slog.d(TAG,"Updating anim wallpaper: target=" + mWallpaperTarget + " lower="+ mLowerWallpaperTarget+ " upper="+ mUpperWallpaperTarget);
      }
    }
    mWallpaperTarget=layoutToAnim.mWallpaperTarget;
    mWpAppAnimator=mWallpaperTarget == null ? null : mWallpaperTarget.mAppToken == null ? null : mWallpaperTarget.mAppToken.mAppAnimator;
    mLowerWallpaperTarget=layoutToAnim.mLowerWallpaperTarget;
    mUpperWallpaperTarget=layoutToAnim.mUpperWallpaperTarget;
    final int numDisplays=mDisplayContentsAnimators.size();
    for (int i=0; i < numDisplays; i++) {
      final int displayId=mDisplayContentsAnimators.keyAt(i);
      DisplayContentsAnimator displayAnimator=mDisplayContentsAnimators.valueAt(i);
      displayAnimator.mWinAnimators.clear();
      final WinAnimatorList winAnimators=layoutToAnim.mWinAnimatorLists.get(displayId);
      if (winAnimators != null) {
        displayAnimator.mWinAnimators.addAll(winAnimators);
      }
      DimAnimator.Parameters dimParams=layoutToAnim.mDimParams.get(displayId);
      if (dimParams == null) {
        displayAnimator.mDimParams=null;
      }
 else {
        final WindowStateAnimator newWinAnimator=dimParams.mDimWinAnimator;
        final WindowStateAnimator existingDimWinAnimator=displayAnimator.mDimParams == null ? null : displayAnimator.mDimParams.mDimWinAnimator;
        if (newWinAnimator.mSurfaceShown && (existingDimWinAnimator == null || !existingDimWinAnimator.mSurfaceShown || existingDimWinAnimator.mAnimLayer < newWinAnimator.mAnimLayer)) {
          displayAnimator.mDimParams=new DimAnimator.Parameters(dimParams);
        }
      }
    }
    mAppAnimators.clear();
    final int N=layoutToAnim.mAppWindowAnimParams.size();
    for (int i=0; i < N; i++) {
      final AppWindowAnimParams params=layoutToAnim.mAppWindowAnimParams.get(i);
      AppWindowAnimator appAnimator=params.mAppAnimator;
      appAnimator.mAllAppWinAnimators.clear();
      appAnimator.mAllAppWinAnimators.addAll(params.mWinAnimators);
      mAppAnimators.add(appAnimator);
    }
  }
}
