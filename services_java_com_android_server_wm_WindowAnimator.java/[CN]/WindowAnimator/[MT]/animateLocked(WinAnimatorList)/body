{
  mPendingLayoutChanges=0;
  mCurrentTime=SystemClock.uptimeMillis();
  mBulkUpdateParams=SET_ORIENTATION_CHANGE_COMPLETE;
  boolean wasAnimating=mAnimating;
  mAnimating=false;
  if (WindowManagerService.DEBUG_WINDOW_TRACE) {
    Slog.i(TAG,"!!! animate: entry time=" + mCurrentTime);
  }
  Surface.openTransaction();
  try {
    updateWindowsAppsAndRotationAnimationsLocked();
    performAnimationsLocked(winAnimatorList);
    if (mScreenRotationAnimation != null) {
      mScreenRotationAnimation.updateSurfaces();
    }
    final int N=winAnimatorList.size();
    for (int i=0; i < N; i++) {
      winAnimatorList.get(i).prepareSurfaceLocked(true);
    }
    if (mDimParams != null) {
      mDimAnimator.updateParameters(mContext.getResources(),mDimParams,mCurrentTime);
    }
    if (mDimAnimator != null && mDimAnimator.mDimShown) {
      mAnimating|=mDimAnimator.updateSurface(isDimming(),mCurrentTime,!mService.okToDisplay());
    }
    if (mService.mBlackFrame != null) {
      if (mScreenRotationAnimation != null) {
        mService.mBlackFrame.setMatrix(mScreenRotationAnimation.getEnterTransformation().getMatrix());
      }
 else {
        mService.mBlackFrame.clearMatrix();
      }
    }
    if (mService.mWatermark != null) {
      mService.mWatermark.drawIfNeeded();
    }
  }
 catch (  RuntimeException e) {
    Log.wtf(TAG,"Unhandled exception in Window Manager",e);
  }
 finally {
    Surface.closeTransaction();
  }
  if (mBulkUpdateParams != 0 || mPendingLayoutChanges != 0) {
    updateAnimToLayoutLocked();
  }
  if (mAnimating) {
synchronized (mService.mLayoutToAnim) {
      mService.scheduleAnimationLocked();
    }
  }
 else   if (wasAnimating) {
    mService.requestTraversalLocked();
  }
  if (WindowManagerService.DEBUG_WINDOW_TRACE) {
    Slog.i(TAG,"!!! animate: exit mAnimating=" + mAnimating + " mBulkUpdateParams="+ Integer.toHexString(mBulkUpdateParams)+ " mPendingLayoutChanges="+ Integer.toHexString(mPendingLayoutChanges));
  }
}
