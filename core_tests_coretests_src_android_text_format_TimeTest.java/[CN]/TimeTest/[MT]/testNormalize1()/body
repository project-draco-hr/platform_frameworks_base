{
  Time local=new Time("America/Los_Angeles");
  int len=dayTests.length;
  for (int index=0; index < len; index++) {
    DateTest test=dayTests[index];
    local.set(0,test.minute1,test.hour1,test.day1,test.month1,test.year1);
    local.normalize(false);
    local.monthDay+=test.offset;
    local.normalize(true);
    if (local.year != test.year2 || local.month != test.month2 || local.monthDay != test.day2 || local.hour != test.hour2 || local.minute != test.minute2) {
      String expectedTime=String.format("%d-%02d-%02d %02d:%02d",test.year2,test.month2,test.day2,test.hour2,test.minute2);
      String actualTime=String.format("%d-%02d-%02d %02d:%02d",local.year,local.month,local.monthDay,local.hour,local.minute);
      throw new RuntimeException("day test index " + index + ", normalize(): expected local "+ expectedTime+ " got: "+ actualTime);
    }
    local.set(0,test.minute1,test.hour1,test.day1,test.month1,test.year1);
    local.normalize(false);
    local.monthDay+=test.offset;
    long millis=local.toMillis(true);
    local.set(millis);
    if (local.year != test.year2 || local.month != test.month2 || local.monthDay != test.day2 || local.hour != test.hour2 || local.minute != test.minute2) {
      String expectedTime=String.format("%d-%02d-%02d %02d:%02d",test.year2,test.month2,test.day2,test.hour2,test.minute2);
      String actualTime=String.format("%d-%02d-%02d %02d:%02d",local.year,local.month,local.monthDay,local.hour,local.minute);
      throw new RuntimeException("day test index " + index + ", toMillis(): expected local "+ expectedTime+ " got: "+ actualTime);
    }
  }
  len=minuteTests.length;
  for (int index=0; index < len; index++) {
    DateTest test=minuteTests[index];
    local.set(0,test.minute1,test.hour1,test.day1,test.month1,test.year1);
    local.isDst=test.dst1;
    local.normalize(false);
    if (test.dst2 == -1)     test.dst2=local.isDst;
    local.minute+=test.offset;
    local.normalize(false);
    if (local.year != test.year2 || local.month != test.month2 || local.monthDay != test.day2 || local.hour != test.hour2 || local.minute != test.minute2 || local.isDst != test.dst2) {
      String expectedTime=String.format("%d-%02d-%02d %02d:%02d isDst: %d",test.year2,test.month2,test.day2,test.hour2,test.minute2,test.dst2);
      String actualTime=String.format("%d-%02d-%02d %02d:%02d isDst: %d",local.year,local.month,local.monthDay,local.hour,local.minute,local.isDst);
      throw new RuntimeException("minute test index " + index + ", normalize(): expected local "+ expectedTime+ " got: "+ actualTime);
    }
    local.set(0,test.minute1,test.hour1,test.day1,test.month1,test.year1);
    local.isDst=test.dst1;
    local.normalize(false);
    if (test.dst2 == -1)     test.dst2=local.isDst;
    local.minute+=test.offset;
    long millis=local.toMillis(false);
    local.set(millis);
    if (local.year != test.year2 || local.month != test.month2 || local.monthDay != test.day2 || local.hour != test.hour2 || local.minute != test.minute2 || local.isDst != test.dst2) {
      String expectedTime=String.format("%d-%02d-%02d %02d:%02d isDst: %d",test.year2,test.month2,test.day2,test.hour2,test.minute2,test.dst2);
      String actualTime=String.format("%d-%02d-%02d %02d:%02d isDst: %d",local.year,local.month,local.monthDay,local.hour,local.minute,local.isDst);
      throw new RuntimeException("minute test index " + index + ", toMillis(): expected local "+ expectedTime+ " got: "+ actualTime);
    }
  }
}
