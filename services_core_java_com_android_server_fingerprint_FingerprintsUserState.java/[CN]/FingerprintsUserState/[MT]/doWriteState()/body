{
  AtomicFile destination=new AtomicFile(mFile);
  ArrayList<Fingerprint> fingerprints;
synchronized (this) {
    fingerprints=getCopy(mFingerprints);
  }
  FileOutputStream out=null;
  try {
    out=destination.startWrite();
    XmlSerializer serializer=Xml.newSerializer();
    serializer.setOutput(out,"utf-8");
    serializer.setFeature("http://xmlpull.org/v1/doc/features.html#indent-output",true);
    serializer.startDocument(null,true);
    serializer.startTag(null,TAG_FINGERPRINTS);
    final int count=fingerprints.size();
    for (int i=0; i < count; i++) {
      Fingerprint fp=fingerprints.get(i);
      serializer.startTag(null,TAG_FINGERPRINT);
      serializer.attribute(null,ATTR_FINGER_ID,Integer.toString(fp.getFingerId()));
      serializer.attribute(null,ATTR_NAME,fp.getName().toString());
      serializer.attribute(null,ATTR_GROUP_ID,Integer.toString(fp.getGroupId()));
      serializer.attribute(null,ATTR_DEVICE_ID,Long.toString(fp.getDeviceId()));
      serializer.endTag(null,TAG_FINGERPRINT);
    }
    serializer.endTag(null,TAG_FINGERPRINTS);
    serializer.endDocument();
    destination.finishWrite(out);
  }
 catch (  Throwable t) {
    Slog.wtf(TAG,"Failed to write settings, restoring backup",t);
    destination.failWrite(out);
    throw new IllegalStateException("Failed to write fingerprints",t);
  }
 finally {
    IoUtils.closeQuietly(out);
  }
}
