{
  mContext=context;
  SyncStorageEngine.init(context);
  mSyncStorageEngine=SyncStorageEngine.getSingleton();
  mSyncStorageEngine.setOnSyncRequestListener(new OnSyncRequestListener(){
    @Override public void onSyncRequest(    SyncStorageEngine.EndPoint info,    int reason,    Bundle extras){
      if (info.target_provider) {
        scheduleSync(info.account,info.userId,reason,info.provider,extras,0,0,false);
      }
 else       if (info.target_service) {
        scheduleSync(info.service,info.userId,reason,extras,0,0);
      }
    }
  }
);
  mSyncAdapters=new SyncAdaptersCache(mContext);
  mSyncQueue=new SyncQueue(mContext.getPackageManager(),mSyncStorageEngine,mSyncAdapters);
  mSyncHandler=new SyncHandler(BackgroundThread.get().getLooper());
  mSyncAdapters.setListener(new RegisteredServicesCacheListener<SyncAdapterType>(){
    @Override public void onServiceChanged(    SyncAdapterType type,    int userId,    boolean removed){
      if (!removed) {
        scheduleSync(null,UserHandle.USER_ALL,SyncOperation.REASON_SERVICE_CHANGED,type.authority,null,0,0,false);
      }
    }
  }
,mSyncHandler);
  mSyncAlarmIntent=PendingIntent.getBroadcast(mContext,0,new Intent(ACTION_SYNC_ALARM),0);
  IntentFilter intentFilter=new IntentFilter(ConnectivityManager.CONNECTIVITY_ACTION);
  context.registerReceiver(mConnectivityIntentReceiver,intentFilter);
  if (!factoryTest) {
    intentFilter=new IntentFilter(Intent.ACTION_BOOT_COMPLETED);
    context.registerReceiver(mBootCompletedReceiver,intentFilter);
  }
  intentFilter=new IntentFilter(Intent.ACTION_DEVICE_STORAGE_LOW);
  intentFilter.addAction(Intent.ACTION_DEVICE_STORAGE_OK);
  context.registerReceiver(mStorageIntentReceiver,intentFilter);
  intentFilter=new IntentFilter(Intent.ACTION_SHUTDOWN);
  intentFilter.setPriority(100);
  context.registerReceiver(mShutdownIntentReceiver,intentFilter);
  intentFilter=new IntentFilter();
  intentFilter.addAction(Intent.ACTION_USER_REMOVED);
  intentFilter.addAction(Intent.ACTION_USER_STARTING);
  intentFilter.addAction(Intent.ACTION_USER_STOPPING);
  mContext.registerReceiverAsUser(mUserIntentReceiver,UserHandle.ALL,intentFilter,null,null);
  if (!factoryTest) {
    mNotificationMgr=(NotificationManager)context.getSystemService(Context.NOTIFICATION_SERVICE);
    context.registerReceiver(new SyncAlarmIntentReceiver(),new IntentFilter(ACTION_SYNC_ALARM));
  }
 else {
    mNotificationMgr=null;
  }
  mPowerManager=(PowerManager)context.getSystemService(Context.POWER_SERVICE);
  mUserManager=(UserManager)mContext.getSystemService(Context.USER_SERVICE);
  mHandleAlarmWakeLock=mPowerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,HANDLE_SYNC_ALARM_WAKE_LOCK);
  mHandleAlarmWakeLock.setReferenceCounted(false);
  mSyncManagerWakeLock=mPowerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,SYNC_LOOP_WAKE_LOCK);
  mSyncManagerWakeLock.setReferenceCounted(false);
  mSyncStorageEngine.addStatusChangeListener(ContentResolver.SYNC_OBSERVER_TYPE_SETTINGS,new ISyncStatusObserver.Stub(){
    @Override public void onStatusChanged(    int which){
      sendCheckAlarmsMessage();
    }
  }
);
  if (!factoryTest) {
    mContext.registerReceiverAsUser(mAccountsUpdatedReceiver,UserHandle.ALL,new IntentFilter(AccountManager.LOGIN_ACCOUNTS_CHANGED_ACTION),null,null);
  }
  mSyncRandomOffsetMillis=mSyncStorageEngine.getSyncRandomOffset() * 1000;
}
