{
  final SyncOperation syncOperation=activeSyncContext.mSyncOperation;
  try {
    activeSyncContext.mIsLinkedToDeath=true;
    syncAdapter.linkToDeath(activeSyncContext,0);
    if (syncOperation.target.target_provider) {
      activeSyncContext.mSyncAdapter=ISyncAdapter.Stub.asInterface(syncAdapter);
      activeSyncContext.mSyncAdapter.startSync(activeSyncContext,syncOperation.target.provider,syncOperation.target.account,syncOperation.extras);
    }
 else     if (syncOperation.target.target_service) {
      activeSyncContext.mSyncServiceAdapter=ISyncServiceAdapter.Stub.asInterface(syncAdapter);
      activeSyncContext.mSyncServiceAdapter.startSync(activeSyncContext,syncOperation.extras);
    }
  }
 catch (  RemoteException remoteExc) {
    Log.d(TAG,"maybeStartNextSync: caught a RemoteException, rescheduling",remoteExc);
    closeActiveSyncContext(activeSyncContext);
    increaseBackoffSetting(syncOperation);
    scheduleSyncOperation(new SyncOperation(syncOperation,0L));
  }
catch (  RuntimeException exc) {
    closeActiveSyncContext(activeSyncContext);
    Log.e(TAG,"Caught RuntimeException while starting the sync " + syncOperation,exc);
  }
}
