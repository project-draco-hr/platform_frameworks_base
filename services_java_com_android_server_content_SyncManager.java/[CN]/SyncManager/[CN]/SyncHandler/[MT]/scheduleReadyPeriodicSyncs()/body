{
  final boolean backgroundDataUsageAllowed=getConnectivityManager().getBackgroundDataSetting();
  long earliestFuturePollTime=Long.MAX_VALUE;
  if (!backgroundDataUsageAllowed) {
    return earliestFuturePollTime;
  }
  AccountAndUser[] accounts=mRunningAccounts;
  final long nowAbsolute=System.currentTimeMillis();
  final long shiftedNowAbsolute=(0 < nowAbsolute - mSyncRandomOffsetMillis) ? (nowAbsolute - mSyncRandomOffsetMillis) : 0;
  ArrayList<Pair<AuthorityInfo,SyncStatusInfo>> infos=mSyncStorageEngine.getCopyOfAllAuthoritiesWithSyncStatus();
  for (  Pair<AuthorityInfo,SyncStatusInfo> info : infos) {
    final AuthorityInfo authorityInfo=info.first;
    final SyncStatusInfo status=info.second;
    if (!containsAccountAndUser(accounts,authorityInfo.account,authorityInfo.userId)) {
      continue;
    }
    if (!mSyncStorageEngine.getMasterSyncAutomatically(authorityInfo.userId) || !mSyncStorageEngine.getSyncAutomatically(authorityInfo.account,authorityInfo.userId,authorityInfo.authority)) {
      continue;
    }
    if (getIsSyncable(authorityInfo.account,authorityInfo.userId,authorityInfo.authority) == 0) {
      continue;
    }
    for (int i=0, N=authorityInfo.periodicSyncs.size(); i < N; i++) {
      final Bundle extras=authorityInfo.periodicSyncs.get(i).first;
      final Long periodInMillis=authorityInfo.periodicSyncs.get(i).second * 1000;
      if (periodInMillis <= 0) {
        continue;
      }
      final long lastPollTimeAbsolute=status.getPeriodicSyncTime(i);
      long remainingMillis=periodInMillis - (shiftedNowAbsolute % periodInMillis);
      if (remainingMillis == periodInMillis || lastPollTimeAbsolute > nowAbsolute || (nowAbsolute - lastPollTimeAbsolute >= periodInMillis)) {
        final Pair<Long,Long> backoff=mSyncStorageEngine.getBackoff(authorityInfo.account,authorityInfo.userId,authorityInfo.authority);
        final RegisteredServicesCache.ServiceInfo<SyncAdapterType> syncAdapterInfo;
        syncAdapterInfo=mSyncAdapters.getServiceInfo(SyncAdapterType.newKey(authorityInfo.authority,authorityInfo.account.type),authorityInfo.userId);
        if (syncAdapterInfo == null) {
          continue;
        }
        scheduleSyncOperation(new SyncOperation(authorityInfo.account,authorityInfo.userId,SyncOperation.REASON_PERIODIC,SyncStorageEngine.SOURCE_PERIODIC,authorityInfo.authority,extras,0,backoff != null ? backoff.first : 0,mSyncStorageEngine.getDelayUntilTime(authorityInfo.account,authorityInfo.userId,authorityInfo.authority),syncAdapterInfo.type.allowParallelSyncs()));
        mSyncStorageEngine.setPeriodicSyncTime(authorityInfo.ident,authorityInfo.periodicSyncs.get(i),nowAbsolute);
      }
      final long nextPollTimeAbsolute=nowAbsolute + remainingMillis;
      if (nextPollTimeAbsolute < earliestFuturePollTime) {
        earliestFuturePollTime=nextPollTimeAbsolute;
      }
    }
  }
  if (earliestFuturePollTime == Long.MAX_VALUE) {
    return Long.MAX_VALUE;
  }
  return SystemClock.elapsedRealtime() + ((earliestFuturePollTime < nowAbsolute) ? 0 : (earliestFuturePollTime - nowAbsolute));
}
