{
  int startIndex=0;
  int endIndex=mX.length - 1;
  if (t <= 0) {
    return mY[startIndex];
  }
 else   if (t >= 1) {
    return mY[endIndex];
  }
  while (endIndex - startIndex > 1) {
    int midIndex=(startIndex + endIndex) / 2;
    if (t < mX[midIndex]) {
      endIndex=midIndex;
    }
 else {
      startIndex=midIndex;
    }
  }
  float xRange=mX[endIndex] - mX[startIndex];
  if (xRange == 0) {
    return mY[startIndex];
  }
  float tInRange=t - mX[startIndex];
  float fraction=tInRange / xRange;
  float startY=mY[startIndex];
  float endY=mY[endIndex];
  return startY + (fraction * (endY - startY));
}
