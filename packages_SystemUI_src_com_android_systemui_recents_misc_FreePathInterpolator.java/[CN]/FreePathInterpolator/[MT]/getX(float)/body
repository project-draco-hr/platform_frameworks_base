{
  int startIndex=0;
  int endIndex=mY.length - 1;
  if (y <= 0) {
    return mX[endIndex];
  }
 else   if (y >= 1) {
    return mX[startIndex];
  }
  while (endIndex - startIndex > 1) {
    int midIndex=(startIndex + endIndex) / 2;
    if (y < mY[midIndex]) {
      startIndex=midIndex;
    }
 else {
      endIndex=midIndex;
    }
  }
  float yRange=mY[endIndex] - mY[startIndex];
  if (yRange == 0) {
    return mX[startIndex];
  }
  float tInRange=y - mY[startIndex];
  float fraction=tInRange / yRange;
  float startX=mX[startIndex];
  float endX=mX[endIndex];
  return startX + (fraction * (endX - startX));
}
