{
  mVSConst=new ScriptField_VertexShaderConstants_s(mRS,1);
  mFSConst=new ScriptField_FragentShaderConstants_s(mRS,1);
  mVSConstPixel=new ScriptField_VertexShaderConstants3_s(mRS,1);
  mFSConstPixel=new ScriptField_FragentShaderConstants3_s(mRS,1);
  ProgramVertex.Builder pvbCustom=new ProgramVertex.Builder(mRS);
  pvbCustom.setShader(mRes,R.raw.shaderv);
  pvbCustom.addInput(ScriptField_VertexShaderInputs_s.createElement(mRS));
  pvbCustom.addConstant(mVSConst.getAllocation().getType());
  mProgVertexCustom=pvbCustom.create();
  mProgVertexCustom.bindConstants(mVSConst.getAllocation(),0);
  ProgramFragment.Builder pfbCustom=new ProgramFragment.Builder(mRS);
  pfbCustom.setShader(mRes,R.raw.shaderf);
  pfbCustom.addTexture(Program.TextureType.TEXTURE_2D);
  pfbCustom.addConstant(mFSConst.getAllocation().getType());
  mProgFragmentCustom=pfbCustom.create();
  mProgFragmentCustom.bindConstants(mFSConst.getAllocation(),0);
  pvbCustom=new ProgramVertex.Builder(mRS);
  pvbCustom.setShader(mRes,R.raw.shader2v);
  pvbCustom.addInput(ScriptField_VertexShaderInputs_s.createElement(mRS));
  pvbCustom.addConstant(mVSConstPixel.getAllocation().getType());
  mProgVertexPixelLight=pvbCustom.create();
  mProgVertexPixelLight.bindConstants(mVSConstPixel.getAllocation(),0);
  pvbCustom=new ProgramVertex.Builder(mRS);
  pvbCustom.setShader(mRes,R.raw.shader2movev);
  pvbCustom.addInput(ScriptField_VertexShaderInputs_s.createElement(mRS));
  pvbCustom.addConstant(mVSConstPixel.getAllocation().getType());
  mProgVertexPixelLightMove=pvbCustom.create();
  mProgVertexPixelLightMove.bindConstants(mVSConstPixel.getAllocation(),0);
  pfbCustom=new ProgramFragment.Builder(mRS);
  pfbCustom.setShader(mRes,R.raw.shader2f);
  pfbCustom.addTexture(Program.TextureType.TEXTURE_2D);
  pfbCustom.addConstant(mFSConstPixel.getAllocation().getType());
  mProgFragmentPixelLight=pfbCustom.create();
  mProgFragmentPixelLight.bindConstants(mFSConstPixel.getAllocation(),0);
  pfbCustom=new ProgramFragment.Builder(mRS);
  pfbCustom.setShader(mRes,R.raw.multitexf);
  for (int texCount=0; texCount < 3; texCount++) {
    pfbCustom.addTexture(Program.TextureType.TEXTURE_2D);
  }
  mProgFragmentMultitex=pfbCustom.create();
  ProgramFragmentFixedFunction.Builder colBuilder=new ProgramFragmentFixedFunction.Builder(mRS);
  colBuilder.setVaryingColor(false);
  mProgFragmentColor=colBuilder.create();
  ProgramFragmentFixedFunction.Builder texBuilder=new ProgramFragmentFixedFunction.Builder(mRS);
  texBuilder.setTexture(ProgramFragmentFixedFunction.Builder.EnvMode.REPLACE,ProgramFragmentFixedFunction.Builder.Format.RGBA,0);
  mProgFragmentTexture=texBuilder.create();
  ProgramVertexFixedFunction.Builder pvb=new ProgramVertexFixedFunction.Builder(mRS);
  mProgVertex=pvb.create();
  ProgramVertexFixedFunction.Constants PVA=new ProgramVertexFixedFunction.Constants(mRS);
  ((ProgramVertexFixedFunction)mProgVertex).bindConstants(PVA);
  Matrix4f proj=new Matrix4f();
  proj.loadOrthoWindow(1280,720);
  PVA.setProjection(proj);
}
