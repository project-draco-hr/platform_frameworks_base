{
  mContext=context;
  mHandler=new Handler(looper){
    @Override public void handleMessage(    Message msg){
switch (msg.what) {
case MSG_UPDATE:
        onImportanceChanged(msg.arg1,msg.arg2 & 0xffff,msg.arg2 >> 16);
      break;
default :
    super.handleMessage(msg);
}
}
}
;
ActivityManager am=(ActivityManager)context.getSystemService(Context.ACTIVITY_SERVICE);
try {
ActivityManagerNative.getDefault().registerProcessObserver(mProcessObserver);
}
 catch (RemoteException e) {
}
List<ActivityManager.RunningAppProcessInfo> apps=am.getRunningAppProcesses();
if (apps != null) {
for (int i=0; i < apps.size(); i++) {
ActivityManager.RunningAppProcessInfo app=apps.get(i);
updateImportanceLocked(app.uid,app.pid,app.importance,false);
}
}
}
