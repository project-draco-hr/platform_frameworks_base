{
  if (handler == null) {
    throw new IllegalArgumentException("Handler must not be null");
  }
  if (listener == null) {
    throw new IllegalArgumentException("Listener must not be null");
  }
  final FileDescriptor fd=openInternal(file,mode);
  if (fd == null)   return null;
  final FileDescriptor[] comm=createCommSocketPair();
  final ParcelFileDescriptor pfd=new ParcelFileDescriptor(fd,comm[0]);
  final MessageQueue queue=handler.getLooper().getQueue();
  queue.registerFileDescriptorCallback(comm[1],FileDescriptorCallback.EVENT_INPUT,new FileDescriptorCallback(){
    @Override public int onFileDescriptorEvents(    FileDescriptor fd,    int events){
      Status status=null;
      if ((events & FileDescriptorCallback.EVENT_INPUT) != 0) {
        final byte[] buf=new byte[MAX_STATUS];
        status=readCommStatus(fd,buf);
      }
 else       if ((events & FileDescriptorCallback.EVENT_ERROR) != 0) {
        status=new Status(Status.DEAD);
      }
      if (status != null) {
        queue.unregisterFileDescriptorCallback(fd);
        IoUtils.closeQuietly(fd);
        listener.onClose(status.asIOException());
        return 0;
      }
      return EVENT_INPUT;
    }
  }
);
  return pfd;
}
