{
  HttpURLConnection urlConnection=null;
  int httpResponseCode=599;
  String redirectUrl=null;
  final Stopwatch probeTimer=new Stopwatch().start();
  try {
    urlConnection=(HttpURLConnection)mNetworkAgentInfo.network.openConnection(url);
    urlConnection.setInstanceFollowRedirects(probeType == ValidationProbeEvent.PROBE_PAC);
    urlConnection.setConnectTimeout(SOCKET_TIMEOUT_MS);
    urlConnection.setReadTimeout(SOCKET_TIMEOUT_MS);
    urlConnection.setUseCaches(false);
    long requestTimestamp=SystemClock.elapsedRealtime();
    httpResponseCode=urlConnection.getResponseCode();
    redirectUrl=urlConnection.getHeaderField("location");
    long responseTimestamp=SystemClock.elapsedRealtime();
    validationLog(ValidationProbeEvent.getProbeName(probeType) + " " + url+ " time="+ (responseTimestamp - requestTimestamp)+ "ms"+ " ret="+ httpResponseCode+ " headers="+ urlConnection.getHeaderFields());
    if (httpResponseCode == 200 && urlConnection.getContentLength() == 0) {
      validationLog("Empty 200 response interpreted as 204 response.");
      httpResponseCode=204;
    }
    if (httpResponseCode == 200 && probeType == ValidationProbeEvent.PROBE_PAC) {
      validationLog("PAC fetch 200 response interpreted as 204 response.");
      httpResponseCode=204;
    }
  }
 catch (  IOException e) {
    validationLog("Probably not a portal: exception " + e);
    if (httpResponseCode == 599) {
    }
  }
 finally {
    if (urlConnection != null) {
      urlConnection.disconnect();
    }
  }
  ValidationProbeEvent.logEvent(mNetId,probeTimer.stop(),probeType,httpResponseCode);
  return new CaptivePortalProbeResult(httpResponseCode,redirectUrl);
}
