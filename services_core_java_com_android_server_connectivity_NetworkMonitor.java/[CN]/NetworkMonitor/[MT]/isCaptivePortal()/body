{
  if (!mIsCaptivePortalCheckEnabled)   return 204;
  String urlString="http://" + mServer + "/generate_204";
  if (DBG) {
    log("Checking " + urlString + " on "+ mNetworkAgentInfo.networkInfo.getExtraInfo());
  }
  HttpURLConnection urlConnection=null;
  Socket socket=null;
  int httpResponseCode=599;
  try {
    URL url=new URL(urlString);
    if (false) {
      url=mNetworkAgentInfo.network.getBoundURL(url);
      urlConnection=(HttpURLConnection)url.openConnection();
      urlConnection.setInstanceFollowRedirects(false);
      urlConnection.setConnectTimeout(SOCKET_TIMEOUT_MS);
      urlConnection.setReadTimeout(SOCKET_TIMEOUT_MS);
      urlConnection.setUseCaches(false);
      urlConnection.getInputStream();
      httpResponseCode=urlConnection.getResponseCode();
    }
 else {
      InetAddress[] hostAddresses=mNetworkAgentInfo.network.getAllByName(url.getHost());
      for (int i=0; i < hostAddresses.length; i++) {
        socket=mNetworkAgentInfo.network.getSocketFactory().createSocket();
        socket.setSoTimeout(SOCKET_TIMEOUT_MS);
        if (DBG)         log("Connecting to " + hostAddresses[i]);
        try {
          socket.connect(new InetSocketAddress(hostAddresses[i],url.getDefaultPort()),SOCKET_TIMEOUT_MS);
          break;
        }
 catch (        IOException e) {
          if (i == (hostAddresses.length - 1))           throw e;
        }
      }
      if (DBG)       log("Requesting " + url.getFile());
      BufferedReader reader=new BufferedReader(new InputStreamReader(socket.getInputStream()));
      OutputStreamWriter writer=new OutputStreamWriter(socket.getOutputStream());
      writer.write("GET " + url.getFile() + " HTTP/1.1\r\nHost: "+ url.getHost()+ "\r\nUser-Agent: "+ System.getProperty("http.agent")+ "\r\nConnection: close\r\n\r\n");
      writer.flush();
      String response=reader.readLine();
      if (DBG)       log("Received \"" + response + "\"");
      if (response != null && (response.startsWith("HTTP/1.1 ") || response.startsWith("HTTP/1.0 "))) {
        httpResponseCode=Integer.parseInt(response.substring(9,12));
      }
 else {
        httpResponseCode=399;
        while (DBG && response != null && !response.isEmpty()) {
          try {
            response=reader.readLine();
          }
 catch (          IOException e) {
            break;
          }
          log("Received \"" + response + "\"");
        }
      }
    }
    if (DBG)     log("isCaptivePortal: ret=" + httpResponseCode);
  }
 catch (  IOException e) {
    if (DBG)     log("Probably not a portal: exception " + e);
    if (httpResponseCode == 599) {
    }
  }
 finally {
    if (urlConnection != null) {
      urlConnection.disconnect();
    }
    if (socket != null) {
      try {
        socket.close();
      }
 catch (      IOException e) {
      }
    }
  }
  return httpResponseCode;
}
