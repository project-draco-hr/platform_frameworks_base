{
  if (!mIsCaptivePortalCheckEnabled)   return 204;
  HttpURLConnection urlConnection=null;
  int httpResponseCode=599;
  try {
    URL url=new URL(getCaptivePortalServerUrl(mContext));
    boolean fetchPac=false;
    final ProxyInfo proxyInfo=mNetworkAgentInfo.linkProperties.getHttpProxy();
    if (proxyInfo != null && !Uri.EMPTY.equals(proxyInfo.getPacFileUrl())) {
      url=new URL(proxyInfo.getPacFileUrl().toString());
      fetchPac=true;
    }
    final StringBuffer connectInfo=new StringBuffer();
    String hostToResolve=null;
    if (proxyInfo == null || fetchPac) {
      hostToResolve=url.getHost();
    }
 else     if (proxyInfo != null) {
      hostToResolve=proxyInfo.getHost();
    }
    if (!TextUtils.isEmpty(hostToResolve)) {
      connectInfo.append(", " + hostToResolve + "=");
      final InetAddress[] addresses=mNetworkAgentInfo.network.getAllByName(hostToResolve);
      for (      InetAddress address : addresses) {
        connectInfo.append(address.getHostAddress());
        if (address != addresses[addresses.length - 1])         connectInfo.append(",");
      }
    }
    validationLog("Checking " + url.toString() + " on "+ mNetworkAgentInfo.networkInfo.getExtraInfo()+ connectInfo);
    urlConnection=(HttpURLConnection)mNetworkAgentInfo.network.openConnection(url);
    urlConnection.setInstanceFollowRedirects(fetchPac);
    urlConnection.setConnectTimeout(SOCKET_TIMEOUT_MS);
    urlConnection.setReadTimeout(SOCKET_TIMEOUT_MS);
    urlConnection.setUseCaches(false);
    long requestTimestamp=SystemClock.elapsedRealtime();
    urlConnection.getInputStream();
    long responseTimestamp=SystemClock.elapsedRealtime();
    httpResponseCode=urlConnection.getResponseCode();
    validationLog("isCaptivePortal: ret=" + httpResponseCode + " headers="+ urlConnection.getHeaderFields());
    if (httpResponseCode == 200 && urlConnection.getContentLength() == 0) {
      validationLog("Empty 200 response interpreted as 204 response.");
      httpResponseCode=204;
    }
    if (httpResponseCode == 200 && fetchPac) {
      validationLog("PAC fetch 200 response interpreted as 204 response.");
      httpResponseCode=204;
    }
    sendNetworkConditionsBroadcast(true,httpResponseCode != 204,requestTimestamp,responseTimestamp);
  }
 catch (  IOException e) {
    validationLog("Probably not a portal: exception " + e);
    if (httpResponseCode == 599) {
    }
  }
 finally {
    if (urlConnection != null) {
      urlConnection.disconnect();
    }
  }
  return httpResponseCode;
}
