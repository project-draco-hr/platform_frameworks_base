{
  if (!mIsCaptivePortalCheckEnabled)   return new CaptivePortalProbeResult(204,null);
  URL pacUrl=null, httpUrl=null, httpsUrl=null;
  final ProxyInfo proxyInfo=mNetworkAgentInfo.linkProperties.getHttpProxy();
  if (proxyInfo != null && !Uri.EMPTY.equals(proxyInfo.getPacFileUrl())) {
    try {
      pacUrl=new URL(proxyInfo.getPacFileUrl().toString());
    }
 catch (    MalformedURLException e) {
      validationLog("Invalid PAC URL: " + proxyInfo.getPacFileUrl().toString());
      return CaptivePortalProbeResult.FAILED;
    }
  }
  if (pacUrl == null) {
    try {
      httpUrl=new URL(getCaptivePortalServerUrl(mContext,false));
      httpsUrl=new URL(getCaptivePortalServerUrl(mContext,true));
    }
 catch (    MalformedURLException e) {
      validationLog("Bad validation URL: " + getCaptivePortalServerUrl(mContext,false));
      return CaptivePortalProbeResult.FAILED;
    }
  }
  long startTime=SystemClock.elapsedRealtime();
  String hostToResolve=null;
  if (pacUrl != null) {
    hostToResolve=pacUrl.getHost();
  }
 else   if (proxyInfo != null) {
    hostToResolve=proxyInfo.getHost();
  }
 else {
    hostToResolve=httpUrl.getHost();
  }
  if (!TextUtils.isEmpty(hostToResolve)) {
    String probeName=ValidationProbeEvent.getProbeName(ValidationProbeEvent.PROBE_DNS);
    final Stopwatch dnsTimer=new Stopwatch().start();
    try {
      InetAddress[] addresses=mNetworkAgentInfo.network.getAllByName(hostToResolve);
      long dnsLatency=dnsTimer.stop();
      ValidationProbeEvent.logEvent(mNetId,dnsLatency,ValidationProbeEvent.PROBE_DNS,ValidationProbeEvent.DNS_SUCCESS);
      final StringBuffer connectInfo=new StringBuffer(", " + hostToResolve + "=");
      for (      InetAddress address : addresses) {
        connectInfo.append(address.getHostAddress());
        if (address != addresses[addresses.length - 1])         connectInfo.append(",");
      }
      validationLog(probeName + " OK " + dnsLatency+ "ms"+ connectInfo);
    }
 catch (    UnknownHostException e) {
      long dnsLatency=dnsTimer.stop();
      ValidationProbeEvent.logEvent(mNetId,dnsLatency,ValidationProbeEvent.PROBE_DNS,ValidationProbeEvent.DNS_FAILURE);
      validationLog(probeName + " FAIL " + dnsLatency+ "ms, "+ hostToResolve);
    }
  }
  CaptivePortalProbeResult result;
  if (pacUrl != null) {
    result=sendHttpProbe(pacUrl,ValidationProbeEvent.PROBE_PAC);
  }
 else   if (mUseHttps) {
    result=sendParallelHttpProbes(httpsUrl,httpUrl);
  }
 else {
    result=sendHttpProbe(httpUrl,ValidationProbeEvent.PROBE_HTTP);
  }
  long endTime=SystemClock.elapsedRealtime();
  sendNetworkConditionsBroadcast(true,result.isPortal(),startTime,endTime);
  return result;
}
