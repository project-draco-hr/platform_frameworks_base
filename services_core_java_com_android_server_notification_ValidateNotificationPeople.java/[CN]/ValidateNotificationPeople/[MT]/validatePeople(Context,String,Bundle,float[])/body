{
  float affinity=NONE;
  if (extras == null) {
    return null;
  }
  final String[] people=getExtraPeople(extras);
  if (people == null || people.length == 0) {
    return null;
  }
  if (INFO)   Slog.i(TAG,"Validating: " + key + " for "+ context.getUserId());
  final LinkedList<String> pendingLookups=new LinkedList<String>();
  for (int personIdx=0; personIdx < people.length && personIdx < MAX_PEOPLE; personIdx++) {
    final String handle=people[personIdx];
    if (TextUtils.isEmpty(handle))     continue;
synchronized (mPeopleCache) {
      final String cacheKey=getCacheKey(context.getUserId(),handle);
      LookupResult lookupResult=mPeopleCache.get(cacheKey);
      if (lookupResult == null || lookupResult.isExpired()) {
        pendingLookups.add(handle);
      }
 else {
        if (DEBUG)         Slog.d(TAG,"using cached lookupResult");
      }
      if (lookupResult != null) {
        affinity=Math.max(affinity,lookupResult.getAffinity());
      }
    }
  }
  affinityOut[0]=affinity;
  if (pendingLookups.isEmpty()) {
    if (INFO)     Slog.i(TAG,"final affinity: " + affinity);
    if (affinity != NONE)     MetricsLogger.count(mBaseContext,"note_with_people",1);
    return null;
  }
  if (DEBUG)   Slog.d(TAG,"Pending: future work scheduled for: " + key);
  return new PeopleRankingReconsideration(context,key,pendingLookups);
}
