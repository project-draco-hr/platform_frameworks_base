{
  float affinity=NONE;
  Bundle extras=record.getNotification().extras;
  if (extras == null) {
    return null;
  }
  final String[] people=getExtraPeople(extras);
  if (people == null || people.length == 0) {
    return null;
  }
  if (INFO)   Slog.i(TAG,"Validating: " + record.sbn.getKey());
  final LinkedList<String> pendingLookups=new LinkedList<String>();
  for (int personIdx=0; personIdx < people.length && personIdx < MAX_PEOPLE; personIdx++) {
    final String handle=people[personIdx];
    if (TextUtils.isEmpty(handle))     continue;
synchronized (mPeopleCache) {
      LookupResult lookupResult=mPeopleCache.get(handle);
      if (lookupResult == null || lookupResult.isExpired()) {
        pendingLookups.add(handle);
      }
 else {
        if (DEBUG)         Slog.d(TAG,"using cached lookupResult: " + lookupResult.mId);
      }
      if (lookupResult != null) {
        affinity=Math.max(affinity,lookupResult.getAffinity());
      }
    }
  }
  record.setContactAffinity(affinity);
  if (pendingLookups.isEmpty()) {
    if (INFO)     Slog.i(TAG,"final affinity: " + affinity);
    return null;
  }
  if (DEBUG)   Slog.d(TAG,"Pending: future work scheduled for: " + record.sbn.getKey());
  return new RankingFuture(record){
    @Override public void work(){
      if (INFO)       Slog.i(TAG,"Executing: validation for: " + mRecord.sbn.getKey());
      float affinity=NONE;
      for (      final String handle : pendingLookups) {
        LookupResult lookupResult=null;
        final Uri uri=Uri.parse(handle);
        if ("tel".equals(uri.getScheme())) {
          if (DEBUG)           Slog.d(TAG,"checking telephone URI: " + handle);
          lookupResult=resolvePhoneContact(uri.getSchemeSpecificPart());
        }
 else         if ("mailto".equals(uri.getScheme())) {
          if (DEBUG)           Slog.d(TAG,"checking mailto URI: " + handle);
          lookupResult=resolveEmailContact(uri.getSchemeSpecificPart());
        }
 else         if (handle.startsWith(Contacts.CONTENT_LOOKUP_URI.toString())) {
          if (DEBUG)           Slog.d(TAG,"checking lookup URI: " + handle);
          lookupResult=searchContacts(uri);
        }
 else {
          lookupResult=new LookupResult();
          Slog.w(TAG,"unsupported URI " + handle);
        }
        if (lookupResult != null) {
synchronized (mPeopleCache) {
            mPeopleCache.put(handle,lookupResult);
          }
          affinity=Math.max(affinity,lookupResult.getAffinity());
        }
      }
      float affinityBound=mRecord.getContactAffinity();
      affinity=Math.max(affinity,affinityBound);
      mRecord.setContactAffinity(affinity);
      if (INFO)       Slog.i(TAG,"final affinity: " + affinity);
    }
  }
;
}
