{
  int rebootInterval=mReqRebootInterval >= 0 ? mReqRebootInterval : REBOOT_DEFAULT_INTERVAL;
  mRebootInterval=rebootInterval;
  if (rebootInterval <= 0) {
    if (localLOGV)     Slog.v(TAG,"No need to schedule a reboot alarm!");
    mAlarm.remove(mRebootIntent);
    return;
  }
  long rebootStartTime=mReqRebootStartTime >= 0 ? mReqRebootStartTime : REBOOT_DEFAULT_START_TIME;
  long rebootWindowMillis=(mReqRebootWindow >= 0 ? mReqRebootWindow : REBOOT_DEFAULT_WINDOW) * 1000;
  long recheckInterval=(mReqRecheckInterval >= 0 ? mReqRecheckInterval : MEMCHECK_DEFAULT_RECHECK_INTERVAL) * 1000;
  retrieveBrutalityAmount();
  long realStartTime;
  long now;
synchronized (this) {
    now=System.currentTimeMillis();
    realStartTime=computeCalendarTime(mCalendar,now,rebootStartTime);
    long rebootIntervalMillis=rebootInterval * 24 * 60* 60* 1000;
    if (DB || mReqRebootNoWait || (now - mBootTime) >= (rebootIntervalMillis - rebootWindowMillis)) {
      if (fromAlarm && rebootWindowMillis <= 0) {
        EventLog.writeEvent(EventLogTags.WATCHDOG_SCHEDULED_REBOOT,now,(int)rebootIntervalMillis,(int)rebootStartTime * 1000,(int)rebootWindowMillis,"");
        rebootSystem("Checkin scheduled forced");
        return;
      }
      if (now < realStartTime) {
        realStartTime=computeCalendarTime(mCalendar,now,rebootStartTime);
      }
 else       if (now < (realStartTime + rebootWindowMillis)) {
        String doit=shouldWeBeBrutalLocked(now);
        EventLog.writeEvent(EventLogTags.WATCHDOG_SCHEDULED_REBOOT,now,(int)rebootInterval,(int)rebootStartTime * 1000,(int)rebootWindowMillis,doit != null ? doit : "");
        if (doit == null) {
          rebootSystem("Checked scheduled range");
          return;
        }
        if ((now + recheckInterval) >= (realStartTime + rebootWindowMillis)) {
          realStartTime=computeCalendarTime(mCalendar,now + rebootIntervalMillis,rebootStartTime);
        }
 else {
          realStartTime=now + recheckInterval;
        }
      }
 else {
        realStartTime=computeCalendarTime(mCalendar,now + rebootIntervalMillis,rebootStartTime);
      }
    }
  }
  if (localLOGV)   Slog.v(TAG,"Scheduling next reboot alarm for " + ((realStartTime - now) / 1000 / 60) + "m from now");
  mAlarm.remove(mRebootIntent);
  mAlarm.set(AlarmManager.RTC_WAKEUP,realStartTime,mRebootIntent);
}
