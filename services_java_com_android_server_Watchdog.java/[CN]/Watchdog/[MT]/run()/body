{
  boolean waitedHalf=false;
  while (true) {
    mCompleted=false;
    mHandler.sendEmptyMessage(MONITOR);
synchronized (this) {
      long timeout=TIME_TO_WAIT;
      long start=SystemClock.uptimeMillis();
      while (timeout > 0 && !mForceKillSystem) {
        try {
          wait(timeout);
        }
 catch (        InterruptedException e) {
          Log.wtf(TAG,e);
        }
        timeout=TIME_TO_WAIT - (SystemClock.uptimeMillis() - start);
      }
      if (mCompleted && !mForceKillSystem) {
        waitedHalf=false;
        continue;
      }
      if (!waitedHalf) {
        ArrayList<Integer> pids=new ArrayList<Integer>();
        pids.add(Process.myPid());
        ActivityManagerService.dumpStackTraces(true,pids,null,null);
        waitedHalf=true;
        continue;
      }
    }
    final String name=(mCurrentMonitor != null) ? mCurrentMonitor.getClass().getName() : "null";
    EventLog.writeEvent(EventLogTags.WATCHDOG,name);
    ArrayList<Integer> pids=new ArrayList<Integer>();
    pids.add(Process.myPid());
    if (mPhonePid > 0)     pids.add(mPhonePid);
    final File stack=ActivityManagerService.dumpStackTraces(!waitedHalf,pids,null,null);
    SystemClock.sleep(2000);
    if (RECORD_KERNEL_THREADS) {
      dumpKernelStackTraces();
    }
    Thread dropboxThread=new Thread("watchdogWriteToDropbox"){
      public void run(){
        mActivity.addErrorToDropBox("watchdog",null,"system_server",null,null,name,null,stack,null);
      }
    }
;
    dropboxThread.start();
    try {
      dropboxThread.join(2000);
    }
 catch (    InterruptedException ignored) {
    }
    if (!Debug.isDebuggerConnected()) {
      Slog.w(TAG,"*** WATCHDOG KILLING SYSTEM PROCESS: " + name);
      Process.killProcess(Process.myPid());
      System.exit(10);
    }
 else {
      Slog.w(TAG,"Debugger connected: Watchdog is *not* killing the system process");
    }
    waitedHalf=false;
  }
}
