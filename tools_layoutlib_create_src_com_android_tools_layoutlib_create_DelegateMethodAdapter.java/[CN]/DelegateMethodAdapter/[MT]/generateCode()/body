{
  AnnotationVisitor aw=mParentVisitor.visitAnnotation(Type.getObjectType(Type.getInternalName(LayoutlibDelegate.class)).toString(),true);
  aw.visitEnd();
  if (!mVisitCodeCalled) {
    mParentVisitor.visitCode();
    mVisitCodeCalled=true;
  }
  int numVars=0;
  if (!mIsStatic) {
    mParentVisitor.visitVarInsn(Opcodes.ALOAD,numVars++);
  }
  Type[] argTypes=Type.getArgumentTypes(mDesc);
  for (  Type t : argTypes) {
    int size=t.getSize();
    mParentVisitor.visitVarInsn(t.getOpcode(Opcodes.ILOAD),numVars);
    numVars+=size;
  }
  String desc=mDesc;
  if (!mIsStatic) {
    Type[] argTypes2=new Type[argTypes.length + 1];
    argTypes2[0]=Type.getObjectType(mClassName);
    System.arraycopy(argTypes,0,argTypes2,1,argTypes.length);
    desc=Type.getMethodDescriptor(Type.getReturnType(mDesc),argTypes2);
  }
  String delegateClassName=mClassName + DELEGATE_SUFFIX;
  mParentVisitor.visitMethodInsn(Opcodes.INVOKESTATIC,delegateClassName,mMethodName,desc);
  Type returnType=Type.getReturnType(mDesc);
  mParentVisitor.visitInsn(returnType.getOpcode(Opcodes.IRETURN));
  mParentVisitor.visitMaxs(numVars,numVars);
  mParentVisitor.visitEnd();
  mLog.debug("Delegate: %1$s # %2$s %3$s",delegateClassName,mMethodName,desc);
}
