{
  AnnotationVisitor aw=mParentVisitor.visitAnnotation(Type.getObjectType(Type.getInternalName(LayoutlibDelegate.class)).toString(),true);
  aw.visitEnd();
  if (!mVisitCodeCalled) {
    mParentVisitor.visitCode();
    mVisitCodeCalled=true;
  }
  ArrayList<Type> paramTypes=new ArrayList<Type>();
  String delegateClassName=mClassName + DELEGATE_SUFFIX;
  boolean pushedArg0=false;
  int maxStack=0;
  if (!mIsStatic) {
    int slash=mClassName.lastIndexOf('/');
    int dol=mClassName.lastIndexOf('$');
    if (dol != -1 && dol > slash && dol == mClassName.indexOf('$')) {
      String outerClass=mClassName.substring(0,dol);
      Type outerType=Type.getObjectType(outerClass);
      delegateClassName=delegateClassName.replace('$','_');
      mParentVisitor.visitVarInsn(Opcodes.ALOAD,0);
      mParentVisitor.visitFieldInsn(Opcodes.GETFIELD,mClassName,"this$0",outerType.getDescriptor());
      maxStack++;
      paramTypes.add(outerType);
    }
    mParentVisitor.visitVarInsn(Opcodes.ALOAD,0);
    maxStack++;
    pushedArg0=true;
    paramTypes.add(Type.getObjectType(mClassName));
  }
  Type[] argTypes=Type.getArgumentTypes(mDesc);
  int maxLocals=pushedArg0 ? 1 : 0;
  for (  Type t : argTypes) {
    int size=t.getSize();
    mParentVisitor.visitVarInsn(t.getOpcode(Opcodes.ILOAD),maxLocals);
    maxLocals+=size;
    maxStack+=size;
    paramTypes.add(t);
  }
  String desc=Type.getMethodDescriptor(Type.getReturnType(mDesc),paramTypes.toArray(new Type[paramTypes.size()]));
  mParentVisitor.visitMethodInsn(Opcodes.INVOKESTATIC,delegateClassName,mMethodName,desc);
  Type returnType=Type.getReturnType(mDesc);
  mParentVisitor.visitInsn(returnType.getOpcode(Opcodes.IRETURN));
  mParentVisitor.visitMaxs(maxStack,maxLocals);
  mParentVisitor.visitEnd();
  mLog.debug("Delegate: %1$s # %2$s %3$s",delegateClassName,mMethodName,desc);
}
