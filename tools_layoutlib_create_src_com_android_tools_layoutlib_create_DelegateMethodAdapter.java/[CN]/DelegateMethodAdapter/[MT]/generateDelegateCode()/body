{
  AnnotationVisitor aw=mDelWriter.visitAnnotation(Type.getObjectType(Type.getInternalName(LayoutlibDelegate.class)).toString(),true);
  if (aw != null) {
    aw.visitEnd();
  }
  mDelWriter.visitCode();
  if (mDelegateLineNumber != null) {
    Object[] p=mDelegateLineNumber;
    mDelWriter.visitLineNumber((Integer)p[0],(Label)p[1]);
  }
  ArrayList<Type> paramTypes=new ArrayList<>();
  String delegateClassName=mClassName + DELEGATE_SUFFIX;
  boolean pushedArg0=false;
  int maxStack=0;
  Type outerType=null;
  int slash=mClassName.lastIndexOf('/');
  int dol=mClassName.lastIndexOf('$');
  if (dol != -1 && dol > slash && dol == mClassName.indexOf('$')) {
    String outerClass=mClassName.substring(0,dol);
    outerType=Type.getObjectType(outerClass);
    delegateClassName=delegateClassName.replace('$','_');
  }
  if (!mIsStatic) {
    if (outerType != null) {
      mDelWriter.visitVarInsn(Opcodes.ALOAD,0);
      mDelWriter.visitFieldInsn(Opcodes.GETFIELD,mClassName,"this$0",outerType.getDescriptor());
      maxStack++;
      paramTypes.add(outerType);
    }
    mDelWriter.visitVarInsn(Opcodes.ALOAD,0);
    maxStack++;
    pushedArg0=true;
    paramTypes.add(Type.getObjectType(mClassName));
  }
  Type[] argTypes=Type.getArgumentTypes(mDesc);
  int maxLocals=pushedArg0 ? 1 : 0;
  for (  Type t : argTypes) {
    int size=t.getSize();
    mDelWriter.visitVarInsn(t.getOpcode(Opcodes.ILOAD),maxLocals);
    maxLocals+=size;
    maxStack+=size;
    paramTypes.add(t);
  }
  String desc=Type.getMethodDescriptor(Type.getReturnType(mDesc),paramTypes.toArray(new Type[paramTypes.size()]));
  mDelWriter.visitMethodInsn(Opcodes.INVOKESTATIC,delegateClassName,mMethodName,desc,false);
  Type returnType=Type.getReturnType(mDesc);
  mDelWriter.visitInsn(returnType.getOpcode(Opcodes.IRETURN));
  mDelWriter.visitMaxs(maxStack,maxLocals);
  mDelWriter.visitEnd();
  mLog.debug("Delegate: %1$s # %2$s %3$s",delegateClassName,mMethodName,desc);
}
