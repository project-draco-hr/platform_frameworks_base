{
switch (message.what) {
case MSG_ADD_PENDING:
    if (message.obj != null) {
      ActiveTask pendingTask=(ActiveTask)message.obj;
      mPending.put(pendingTask.params.getTaskId(),pendingTask);
    }
case MSG_CHECK_PENDING:
  checkPendingTasksH();
break;
case MSG_CALLBACK:
ActiveTask receivedCallback=mPending.get(message.arg1);
removeMessages(MSG_TIMEOUT,receivedCallback);
if (Log.isLoggable(TaskManagerService.TAG,Log.DEBUG)) {
Log.d(TAG,"MSG_CALLBACK of : " + receivedCallback);
}
if (receivedCallback.verb == VERB_STARTING) {
final boolean workOngoing=message.arg2 == 1;
handleStartedH(receivedCallback,workOngoing);
}
 else if (receivedCallback.verb == VERB_EXECUTING || receivedCallback.verb == VERB_STOPPING) {
final boolean reschedule=message.arg2 == 1;
handleFinishedH(receivedCallback,reschedule);
}
 else {
if (Log.isLoggable(TaskManagerService.TAG,Log.DEBUG)) {
Log.d(TAG,"Unrecognised callback: " + receivedCallback);
}
}
break;
case MSG_CANCEL:
ActiveTask cancelled=mPending.get(message.arg1);
handleCancelH(cancelled);
break;
case MSG_TIMEOUT:
handleOpTimeoutH((ActiveTask)message.obj);
break;
case MSG_SHUTDOWN:
handleShutdownH();
break;
default :
Log.e(TAG,"Unrecognised message: " + message);
}
}
