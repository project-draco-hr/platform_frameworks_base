{
synchronized (mAvailableLock) {
    if (!mAvailable) {
      Slog.e(TAG,"Starting new runnable but context is unavailable > Error.");
      return false;
    }
    mAvailable=false;
  }
  final PowerManager pm=(PowerManager)mContext.getSystemService(Context.POWER_SERVICE);
  mWakeLock=pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,TM_WAKELOCK_PREFIX + ts.getServiceComponent().getPackageName());
  mWakeLock.setWorkSource(new WorkSource(ts.getUid()));
  mWakeLock.setReferenceCounted(false);
  mRunningTask=ts;
  mParams=new TaskParams(ts.getTaskId(),ts.getExtras(),this);
  mVerb=VERB_BINDING;
  final Intent intent=new Intent().setComponent(ts.getServiceComponent());
  boolean binding=mContext.bindServiceAsUser(intent,this,Context.BIND_AUTO_CREATE | Context.BIND_NOT_FOREGROUND,new UserHandle(ts.getUserId()));
  if (!binding) {
    if (DEBUG) {
      Slog.d(TAG,ts.getServiceComponent().getShortClassName() + " unavailable.");
    }
    return false;
  }
  return true;
}
