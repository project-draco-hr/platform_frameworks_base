{
  for (int i=mEntries.size() - 1; i >= 0; i--) {
    ArrayMap<String,PackageEntry> uidMap=mEntries.valueAt(i);
    for (int j=uidMap.size() - 1; j >= 0; j--) {
      PackageEntry pe=uidMap.valueAt(j);
      if (pe.activeNesting > 0 || pe.activeTopNesting > 0 || pe.pendingNesting > 0) {
        PackageEntry nextPe=next.getOrCreateEntry(mEntries.keyAt(i),uidMap.keyAt(j));
        nextPe.activeStartTime=now;
        nextPe.activeNesting=pe.activeNesting;
        nextPe.activeTopStartTime=now;
        nextPe.activeTopNesting=pe.activeTopNesting;
        nextPe.pendingStartTime=now;
        nextPe.pendingNesting=pe.pendingNesting;
        if (pe.activeNesting > 0) {
          pe.pastActiveTime+=now - pe.activeStartTime;
          pe.activeNesting=0;
        }
        if (pe.activeTopNesting > 0) {
          pe.pastActiveTopTime+=now - pe.activeTopStartTime;
          pe.activeTopNesting=0;
        }
        if (pe.pendingNesting > 0) {
          pe.pastPendingTime+=now - pe.pendingStartTime;
          pe.pendingNesting=0;
        }
      }
    }
  }
}
