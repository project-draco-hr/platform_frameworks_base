{
  FilterResults results=new FilterResults();
  if (mOriginalValues == null) {
synchronized (lock) {
      mOriginalValues=new ArrayList<ResolveInfo>(mActivitiesList);
    }
  }
  if (prefix == null || prefix.length() == 0) {
synchronized (lock) {
      ArrayList<ResolveInfo> list=new ArrayList<ResolveInfo>(mOriginalValues);
      results.values=list;
      results.count=list.size();
    }
  }
 else {
    final PackageManager pm=mContext.getPackageManager();
    final String prefixString=prefix.toString().toLowerCase();
    ArrayList<ResolveInfo> values=mOriginalValues;
    int count=values.size();
    ArrayList<ResolveInfo> newValues=new ArrayList<ResolveInfo>(count);
    for (int i=0; i < count; i++) {
      ResolveInfo value=values.get(i);
      final CharSequence label=value.loadLabel(pm);
      final CharSequence name=label != null ? label : value.activityInfo.name;
      String[] words=name.toString().toLowerCase().split(" ");
      int wordCount=words.length;
      for (int k=0; k < wordCount; k++) {
        final String word=words[k];
        if (word.startsWith(prefixString)) {
          newValues.add(value);
          break;
        }
      }
    }
    results.values=newValues;
    results.count=newValues.size();
  }
  return results;
}
