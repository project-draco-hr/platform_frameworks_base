{
  if (mCachedException != null) {
    throw (IllegalBlockSizeException)new IllegalBlockSizeException().initCause(mCachedException);
  }
  try {
    ensureKeystoreOperationInitialized();
  }
 catch (  InvalidKeyException|InvalidAlgorithmParameterException e) {
    throw (IllegalBlockSizeException)new IllegalBlockSizeException().initCause(e);
  }
  byte[] output;
  try {
    output=mMainDataStreamer.doFinal(input,inputOffset,inputLen);
  }
 catch (  KeyStoreException e) {
switch (e.getErrorCode()) {
case KeymasterDefs.KM_ERROR_INVALID_INPUT_LENGTH:
      throw (IllegalBlockSizeException)new IllegalBlockSizeException().initCause(e);
case KeymasterDefs.KM_ERROR_INVALID_ARGUMENT:
    throw (BadPaddingException)new BadPaddingException().initCause(e);
case KeymasterDefs.KM_ERROR_VERIFICATION_FAILED:
  throw (AEADBadTagException)new AEADBadTagException().initCause(e);
default :
throw (IllegalBlockSizeException)new IllegalBlockSizeException().initCause(e);
}
}
resetWhilePreservingInitState();
return output;
}
