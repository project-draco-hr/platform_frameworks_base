{
  if (!checkNotifyPermission("notifyDataConnection()")) {
    return;
  }
synchronized (mRecords) {
    boolean modified=false;
    if (state == TelephonyManager.DATA_CONNECTED) {
      if (!mConnectedApns.contains(apnType)) {
        mConnectedApns.add(apnType);
        if (mDataConnectionState != state) {
          mDataConnectionState=state;
          modified=true;
        }
      }
    }
 else {
      mConnectedApns.remove(apnType);
      if (mConnectedApns.isEmpty()) {
        mDataConnectionState=state;
        modified=true;
      }
 else {
        state=mDataConnectionState;
      }
    }
    mDataConnectionPossible=isDataConnectivityPossible;
    mDataConnectionReason=reason;
    mDataConnectionApn=apn;
    mDataConnectionInterfaceName=interfaceName;
    if (mDataConnectionNetworkType != networkType) {
      mDataConnectionNetworkType=networkType;
      modified=true;
    }
    if (modified) {
      for (      Record r : mRecords) {
        if ((r.events & PhoneStateListener.LISTEN_DATA_CONNECTION_STATE) != 0) {
          try {
            r.callback.onDataConnectionStateChanged(state,networkType);
          }
 catch (          RemoteException ex) {
            remove(r.binder);
          }
        }
      }
    }
  }
  broadcastDataConnectionStateChanged(state,isDataConnectivityPossible,reason,apn,apnType,interfaceName);
}
