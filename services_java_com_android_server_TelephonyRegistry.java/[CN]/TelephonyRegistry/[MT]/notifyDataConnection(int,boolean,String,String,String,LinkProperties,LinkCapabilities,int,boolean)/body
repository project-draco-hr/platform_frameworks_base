{
  if (!checkNotifyPermission("notifyDataConnection()")) {
    return;
  }
  if (DBG) {
    Slog.i(TAG,"notifyDataConnection: state=" + state + " isDataConnectivityPossible="+ isDataConnectivityPossible+ " reason='"+ reason+ "' apn='"+ apn+ "' apnType="+ apnType+ " networkType="+ networkType+ " mRecords.size()="+ mRecords.size()+ " mRecords="+ mRecords);
  }
synchronized (mRecords) {
    boolean modified=false;
    if (state == TelephonyManager.DATA_CONNECTED) {
      if (!mConnectedApns.contains(apnType)) {
        mConnectedApns.add(apnType);
        if (mDataConnectionState != state) {
          mDataConnectionState=state;
          modified=true;
        }
      }
    }
 else {
      if (mConnectedApns.remove(apnType)) {
        if (mConnectedApns.isEmpty()) {
          mDataConnectionState=state;
          modified=true;
        }
 else {
        }
      }
    }
    mDataConnectionPossible=isDataConnectivityPossible;
    mDataConnectionReason=reason;
    mDataConnectionLinkProperties=linkProperties;
    mDataConnectionLinkCapabilities=linkCapabilities;
    if (mDataConnectionNetworkType != networkType) {
      mDataConnectionNetworkType=networkType;
      modified=true;
    }
    if (modified) {
      if (DBG) {
        Slog.d(TAG,"onDataConnectionStateChanged(" + mDataConnectionState + ", "+ mDataConnectionNetworkType+ ")");
      }
      for (      Record r : mRecords) {
        if ((r.events & PhoneStateListener.LISTEN_DATA_CONNECTION_STATE) != 0) {
          try {
            r.callback.onDataConnectionStateChanged(mDataConnectionState,mDataConnectionNetworkType);
          }
 catch (          RemoteException ex) {
            mRemoveList.add(r.binder);
          }
        }
      }
      handleRemoveListLocked();
    }
  }
  broadcastDataConnectionStateChanged(state,isDataConnectivityPossible,reason,apn,apnType,linkProperties,linkCapabilities,roaming);
}
