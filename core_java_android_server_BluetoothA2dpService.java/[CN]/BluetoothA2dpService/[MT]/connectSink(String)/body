{
  mContext.enforceCallingOrSelfPermission(BLUETOOTH_ADMIN_PERM,"Need BLUETOOTH_ADMIN permission");
  if (DBG)   log("connectSink(" + address + ")");
  if (!BluetoothDevice.checkBluetoothAddress(address)) {
    return BluetoothError.ERROR;
  }
  if (mAudioDevices == null) {
    return BluetoothError.ERROR;
  }
  String path=lookupPath(address);
  if (path == null) {
    path=createHeadsetNative(address);
    if (DBG)     log("new bluez sink: " + address + " ("+ path+ ")");
  }
  if (path == null) {
    return BluetoothError.ERROR;
  }
  SinkState sink=mAudioDevices.get(path);
  int state=BluetoothA2dp.STATE_DISCONNECTED;
  if (sink != null) {
    state=sink.state;
  }
switch (state) {
case BluetoothA2dp.STATE_CONNECTED:
case BluetoothA2dp.STATE_PLAYING:
case BluetoothA2dp.STATE_DISCONNECTING:
    return BluetoothError.ERROR;
case BluetoothA2dp.STATE_CONNECTING:
  return BluetoothError.SUCCESS;
}
if (!connectSinkNative(path)) {
return BluetoothError.ERROR;
}
updateState(path,BluetoothA2dp.STATE_CONNECTING);
return BluetoothError.SUCCESS;
}
