{
  mContext.enforceCallingOrSelfPermission(BLUETOOTH_ADMIN_PERM,"Need BLUETOOTH_ADMIN permission");
  if (DBG)   log("connectSink(" + address + ")");
  if (!BluetoothDevice.checkBluetoothAddress(address)) {
    return BluetoothError.ERROR;
  }
  if (lookupSinksMatchingStates(new int[]{BluetoothA2dp.STATE_CONNECTING,BluetoothA2dp.STATE_CONNECTED,BluetoothA2dp.STATE_PLAYING,BluetoothA2dp.STATE_DISCONNECTING}).size() != 0) {
    return BluetoothError.ERROR;
  }
  if (mAudioDevices.get(address) == null && !addAudioSink(address))   return BluetoothError.ERROR;
  int state=mAudioDevices.get(address);
switch (state) {
case BluetoothA2dp.STATE_CONNECTED:
case BluetoothA2dp.STATE_PLAYING:
case BluetoothA2dp.STATE_DISCONNECTING:
    return BluetoothError.ERROR;
case BluetoothA2dp.STATE_CONNECTING:
  return BluetoothError.SUCCESS;
}
String path=mBluetoothService.getObjectPathFromAddress(address);
if (path == null) return BluetoothError.ERROR;
if (!connectSinkNative(path)) {
return BluetoothError.ERROR;
}
return BluetoothError.SUCCESS;
}
