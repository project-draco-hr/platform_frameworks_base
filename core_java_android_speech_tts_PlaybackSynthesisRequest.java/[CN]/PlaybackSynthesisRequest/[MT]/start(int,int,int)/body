{
  if (DBG) {
    Log.d(TAG,"start(" + sampleRateInHz + ","+ audioFormat+ ","+ channelCount+ ")");
  }
  int channelConfig;
  if (channelCount == 1) {
    channelConfig=AudioFormat.CHANNEL_OUT_MONO;
  }
 else   if (channelCount == 2) {
    channelConfig=AudioFormat.CHANNEL_OUT_STEREO;
  }
 else {
    Log.e(TAG,"Unsupported number of channels: " + channelCount);
    return TextToSpeech.ERROR;
  }
  int minBufferSizeInBytes=AudioTrack.getMinBufferSize(sampleRateInHz,channelConfig,audioFormat);
  int bufferSizeInBytes=Math.max(MIN_AUDIO_BUFFER_SIZE,minBufferSizeInBytes);
synchronized (mStateLock) {
    if (mStopped) {
      if (DBG)       Log.d(TAG,"Request has been aborted.");
      return TextToSpeech.ERROR;
    }
    if (mAudioTrack != null) {
      Log.e(TAG,"start() called twice");
      cleanUp();
      return TextToSpeech.ERROR;
    }
    mAudioTrack=new AudioTrack(mStreamType,sampleRateInHz,channelConfig,audioFormat,bufferSizeInBytes,AudioTrack.MODE_STREAM);
    if (mAudioTrack.getState() != AudioTrack.STATE_INITIALIZED) {
      cleanUp();
      return TextToSpeech.ERROR;
    }
    setupVolume();
  }
  return TextToSpeech.SUCCESS;
}
