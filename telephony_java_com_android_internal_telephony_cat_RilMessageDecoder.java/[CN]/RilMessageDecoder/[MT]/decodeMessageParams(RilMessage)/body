{
  boolean decodingStarted;
  mCurrentRilMessage=rilMsg;
switch (rilMsg.mId) {
case StkService.MSG_ID_SESSION_END:
case StkService.MSG_ID_CALL_SETUP:
    mCurrentRilMessage.mResCode=ResultCode.OK;
  sendCmdForExecution(mCurrentRilMessage);
decodingStarted=false;
break;
case StkService.MSG_ID_PROACTIVE_COMMAND:
case StkService.MSG_ID_EVENT_NOTIFY:
case StkService.MSG_ID_REFRESH:
byte[] rawData=null;
try {
rawData=IccUtils.hexStringToBytes((String)rilMsg.mData);
}
 catch (Exception e) {
StkLog.d(this,"decodeMessageParams dropping zombie messages");
decodingStarted=false;
break;
}
try {
mCmdParamsFactory.make(BerTlv.decode(rawData));
decodingStarted=true;
}
 catch (ResultException e) {
mCurrentRilMessage.mResCode=e.result();
sendCmdForExecution(mCurrentRilMessage);
decodingStarted=false;
}
break;
default :
decodingStarted=false;
break;
}
return decodingStarted;
}
