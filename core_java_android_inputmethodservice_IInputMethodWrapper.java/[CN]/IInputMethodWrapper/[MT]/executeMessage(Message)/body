{
switch (msg.what) {
case DO_ATTACH_TOKEN:
{
      mInputMethod.attachToken((IBinder)msg.obj);
      return;
    }
case DO_SET_INPUT_CONTEXT:
{
    mInputMethod.bindInput((InputBinding)msg.obj);
    return;
  }
case DO_UNSET_INPUT_CONTEXT:
mInputMethod.unbindInput();
return;
case DO_START_INPUT:
mInputMethod.startInput((EditorInfo)msg.obj);
return;
case DO_RESTART_INPUT:
mInputMethod.restartInput((EditorInfo)msg.obj);
return;
case DO_CREATE_SESSION:
{
mInputMethod.createSession(new InputMethodSessionCallbackWrapper(mCaller.mContext,(IInputMethodCallback)msg.obj));
return;
}
case DO_SET_SESSION_ENABLED:
mInputMethod.setSessionEnabled((InputMethodSession)msg.obj,msg.arg1 != 0);
return;
case DO_REVOKE_SESSION:
mInputMethod.revokeSession((InputMethodSession)msg.obj);
return;
case DO_SHOW_SOFT_INPUT:
mInputMethod.showSoftInput();
return;
case DO_HIDE_SOFT_INPUT:
mInputMethod.hideSoftInput();
return;
}
Log.w(TAG,"Unhandled message code: " + msg.what);
}
