{
  StringBuilder ret=new StringBuilder(lengthSeptets);
  if (languageTable < 0 || languageTable > sLanguageTables.length) {
    Log.w(TAG,"unknown language table " + languageTable + ", using default");
    languageTable=0;
  }
  if (shiftTable < 0 || shiftTable > sLanguageShiftTables.length) {
    Log.w(TAG,"unknown single shift table " + shiftTable + ", using default");
    shiftTable=0;
  }
  try {
    boolean prevCharWasEscape=false;
    String languageTableToChar=sLanguageTables[languageTable];
    String shiftTableToChar=sLanguageShiftTables[shiftTable];
    if (languageTableToChar.isEmpty()) {
      Log.w(TAG,"no language table for code " + languageTable + ", using default");
      languageTableToChar=sLanguageTables[0];
    }
    if (shiftTableToChar.isEmpty()) {
      Log.w(TAG,"no single shift table for code " + shiftTable + ", using default");
      shiftTableToChar=sLanguageShiftTables[0];
    }
    for (int i=0; i < lengthSeptets; i++) {
      int bitOffset=(7 * i) + numPaddingBits;
      int byteOffset=bitOffset / 8;
      int shift=bitOffset % 8;
      int gsmVal;
      gsmVal=(0x7f & (pdu[offset + byteOffset] >> shift));
      if (shift > 1) {
        gsmVal&=0x7f >> (shift - 1);
        gsmVal|=0x7f & (pdu[offset + byteOffset + 1] << (8 - shift));
      }
      if (prevCharWasEscape) {
        if (gsmVal == GSM_EXTENDED_ESCAPE) {
          ret.append(' ');
        }
 else {
          char c=shiftTableToChar.charAt(gsmVal);
          if (c == ' ') {
            ret.append(languageTableToChar.charAt(gsmVal));
          }
 else {
            ret.append(c);
          }
        }
        prevCharWasEscape=false;
      }
 else       if (gsmVal == GSM_EXTENDED_ESCAPE) {
        prevCharWasEscape=true;
      }
 else {
        ret.append(languageTableToChar.charAt(gsmVal));
      }
    }
  }
 catch (  RuntimeException ex) {
    Log.e(TAG,"Error GSM 7 bit packed: ",ex);
    return null;
  }
  return ret.toString();
}
