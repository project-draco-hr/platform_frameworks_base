{
  final Animation anim;
  if (enter) {
    final int appWidth=appFrame.width();
    final int appHeight=appFrame.height();
    Animation clipAnimLR=new ClipRectLRAnimation((appWidth - mNextAppTransitionStartWidth) / 2,(appWidth + mNextAppTransitionStartWidth) / 2,0,appWidth);
    clipAnimLR.setInterpolator(mLinearOutSlowInInterpolator);
    clipAnimLR.setDuration(DEFAULT_APP_TRANSITION_DURATION);
    Animation clipAnimTB=new ClipRectTBAnimation((appHeight - mNextAppTransitionStartHeight) / 2,(appHeight + mNextAppTransitionStartHeight) / 2,0,appHeight);
    clipAnimTB.setInterpolator(mFastOutSlowInInterpolator);
    clipAnimTB.setDuration(DEFAULT_APP_TRANSITION_DURATION);
    int startMiddleX=mNextAppTransitionStartX + (mNextAppTransitionStartWidth - appWidth) / 2 - appFrame.left;
    int startMiddleY=mNextAppTransitionStartY + (mNextAppTransitionStartHeight - appHeight) / 2 - appFrame.top;
    TranslateXAnimation translateX=new TranslateXAnimation(Animation.ABSOLUTE,startMiddleX,Animation.ABSOLUTE,0);
    translateX.setInterpolator(mLinearOutSlowInInterpolator);
    translateX.setDuration(DEFAULT_APP_TRANSITION_DURATION);
    TranslateYAnimation translateY=new TranslateYAnimation(Animation.ABSOLUTE,startMiddleY,Animation.ABSOLUTE,0);
    translateY.setInterpolator(mFastOutSlowInInterpolator);
    translateY.setDuration(DEFAULT_APP_TRANSITION_DURATION);
    final int alphaDuration=100;
    AlphaAnimation alpha=new AlphaAnimation(0.1f,1);
    alpha.setDuration(alphaDuration);
    alpha.setInterpolator(mLinearInterpolator);
    AnimationSet set=new AnimationSet(false);
    set.addAnimation(clipAnimLR);
    set.addAnimation(clipAnimTB);
    set.addAnimation(translateX);
    set.addAnimation(translateY);
    set.addAnimation(alpha);
    set.initialize(appWidth,appHeight,appWidth,appHeight);
    anim=set;
  }
 else {
    final long duration;
switch (transit) {
case TRANSIT_ACTIVITY_OPEN:
case TRANSIT_ACTIVITY_CLOSE:
      duration=mConfigShortAnimTime;
    break;
default :
  duration=DEFAULT_APP_TRANSITION_DURATION;
break;
}
if (transit == TRANSIT_WALLPAPER_INTRA_OPEN || transit == TRANSIT_WALLPAPER_INTRA_CLOSE) {
anim=new AlphaAnimation(1,0);
anim.setDetachWallpaper(true);
}
 else {
anim=new AlphaAnimation(1,1);
}
anim.setInterpolator(mDecelerateInterpolator);
anim.setDuration(duration);
anim.setFillAfter(true);
}
return anim;
}
