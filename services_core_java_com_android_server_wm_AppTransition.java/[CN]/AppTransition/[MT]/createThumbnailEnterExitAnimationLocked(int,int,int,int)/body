{
  Animation a;
  final int thumbWidthI=mNextAppTransitionThumbnail.getWidth();
  final float thumbWidth=thumbWidthI > 0 ? thumbWidthI : 1;
  final int thumbHeightI=mNextAppTransitionThumbnail.getHeight();
  final float thumbHeight=thumbHeightI > 0 ? thumbHeightI : 1;
switch (thumbTransitState) {
case THUMBNAIL_TRANSITION_ENTER_SCALE_UP:
{
      float scaleW=thumbWidth / appWidth;
      float scaleH=thumbHeight / appHeight;
      a=new ScaleAnimation(scaleW,1,scaleH,1,computePivot(mNextAppTransitionStartX,scaleW),computePivot(mNextAppTransitionStartY,scaleH));
      break;
    }
case THUMBNAIL_TRANSITION_EXIT_SCALE_UP:
{
    if (transit == TRANSIT_WALLPAPER_INTRA_OPEN) {
      a=new AlphaAnimation(1,0);
    }
 else {
      a=new AlphaAnimation(1,1);
    }
    break;
  }
case THUMBNAIL_TRANSITION_ENTER_SCALE_DOWN:
{
  a=new AlphaAnimation(1,1);
  break;
}
case THUMBNAIL_TRANSITION_EXIT_SCALE_DOWN:
{
float scaleW=thumbWidth / appWidth;
float scaleH=thumbHeight / appHeight;
Animation scale=new ScaleAnimation(1,scaleW,1,scaleH,computePivot(mNextAppTransitionStartX,scaleW),computePivot(mNextAppTransitionStartY,scaleH));
Animation alpha=new AlphaAnimation(1,0);
AnimationSet set=new AnimationSet(true);
set.addAnimation(scale);
set.addAnimation(alpha);
set.setZAdjustment(Animation.ZORDER_TOP);
a=set;
break;
}
default :
throw new RuntimeException("Invalid thumbnail transition state");
}
return prepareThumbnailAnimation(a,appWidth,appHeight,transit);
}
