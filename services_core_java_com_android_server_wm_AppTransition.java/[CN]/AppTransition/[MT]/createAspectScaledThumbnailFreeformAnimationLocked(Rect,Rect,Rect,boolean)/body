{
  final float sourceWidth=sourceFrame.width();
  final float sourceHeight=sourceFrame.height();
  final float destWidth=destFrame.width();
  final float destHeight=destFrame.height();
  final float scaleH=enter ? sourceWidth / destWidth : destWidth / sourceWidth;
  final float scaleV=enter ? sourceHeight / destHeight : destHeight / sourceHeight;
  AnimationSet set=new AnimationSet(true);
  final int surfaceInsetsH=surfaceInsets == null ? 0 : surfaceInsets.left + surfaceInsets.right;
  final int surfaceInsetsV=surfaceInsets == null ? 0 : surfaceInsets.top + surfaceInsets.bottom;
  final float scaleHCenter=((enter ? destWidth : sourceWidth) + surfaceInsetsH) / 2;
  final float scaleVCenter=((enter ? destHeight : sourceHeight) + surfaceInsetsV) / 2;
  final ScaleAnimation scale=enter ? new ScaleAnimation(scaleH,1,scaleV,1,scaleHCenter,scaleVCenter) : new ScaleAnimation(1,scaleH,1,scaleV,scaleHCenter,scaleVCenter);
  final int sourceHCenter=sourceFrame.left + sourceFrame.width() / 2;
  final int sourceVCenter=sourceFrame.top + sourceFrame.height() / 2;
  final int destHCenter=destFrame.left + destFrame.width() / 2;
  final int destVCenter=destFrame.top + destFrame.height() / 2;
  final int fromX=enter ? sourceHCenter - destHCenter : destHCenter - sourceHCenter;
  final int fromY=enter ? sourceVCenter - destVCenter : destVCenter - sourceVCenter;
  final TranslateAnimation translation=enter ? new TranslateAnimation(fromX,0,fromY,0) : new TranslateAnimation(0,fromX,0,fromY);
  set.addAnimation(scale);
  set.addAnimation(translation);
  return set;
}
