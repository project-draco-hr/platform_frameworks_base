{
  Animation a;
  getDefaultNextAppTransitionStartRect(mTmpStartRect);
  final int appWidth=containingFrame.width();
  final int appHeight=containingFrame.height();
  if (enter) {
    float scaleW=mTmpStartRect.width() / (float)appWidth;
    float scaleH=mTmpStartRect.height() / (float)appHeight;
    Animation scale=new ScaleAnimation(scaleW,1,scaleH,1,computePivot(mTmpStartRect.left,scaleW),computePivot(mTmpStartRect.right,scaleH));
    scale.setInterpolator(mDecelerateInterpolator);
    Animation alpha=new AlphaAnimation(0,1);
    alpha.setInterpolator(mThumbnailFadeOutInterpolator);
    AnimationSet set=new AnimationSet(false);
    set.addAnimation(scale);
    set.addAnimation(alpha);
    set.setDetachWallpaper(true);
    a=set;
  }
 else   if (transit == TRANSIT_WALLPAPER_INTRA_OPEN || transit == TRANSIT_WALLPAPER_INTRA_CLOSE) {
    a=new AlphaAnimation(1,0);
    a.setDetachWallpaper(true);
  }
 else {
    a=new AlphaAnimation(1,1);
  }
  final long duration;
switch (transit) {
case TRANSIT_ACTIVITY_OPEN:
case TRANSIT_ACTIVITY_CLOSE:
    duration=mConfigShortAnimTime;
  break;
default :
duration=DEFAULT_APP_TRANSITION_DURATION;
break;
}
a.setDuration(duration);
a.setFillAfter(true);
a.setInterpolator(mDecelerateInterpolator);
a.initialize(appWidth,appHeight,appWidth,appHeight);
return a;
}
