{
  InputStream in=null;
  OutputStream out=new FileOutputStream(mDestination);
  final byte[] buffer=new byte[8192];
  try {
    in=new FileInputStream(mSource);
    while (true) {
      final int readByteCount=in.read(buffer);
      if (readByteCount < 0) {
        break;
      }
      out.write(buffer,0,readByteCount);
    }
  }
 catch (  IOException ioe) {
    Log.e(LOG_TAG,"Error writing data!",ioe);
  }
 finally {
    IoUtils.closeQuietly(in);
    IoUtils.closeQuietly(out);
    if (!isCancelled()) {
      List<PageRange> pages=new ArrayList<PageRange>();
      pages.add(PageRange.ALL_PAGES);
      mResultCallback.onPrintFinished(pages);
    }
 else {
      mResultCallback.onPrintFailed("Cancelled");
    }
  }
  return null;
}
