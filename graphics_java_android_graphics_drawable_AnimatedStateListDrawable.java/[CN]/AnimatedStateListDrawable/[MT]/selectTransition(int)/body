{
  if (mAnim != null) {
    if (toIndex == mAnimToIndex) {
      return true;
    }
 else     if (toIndex == mAnimFromIndex) {
      mAnim.reverse();
      mAnimFromIndex=mAnimToIndex;
      mAnimToIndex=toIndex;
      return true;
    }
    mAnim.end();
  }
  final AnimatedStateListState state=mState;
  final int fromIndex=getCurrentIndex();
  final int fromId=state.getKeyframeIdAt(fromIndex);
  final int toId=state.getKeyframeIdAt(toIndex);
  if (toId == 0 || fromId == 0) {
    return false;
  }
  final int transitionIndex=state.indexOfTransition(fromId,toId);
  if (transitionIndex < 0 || !selectDrawable(transitionIndex)) {
    return false;
  }
  final Drawable d=getCurrent();
  if (!(d instanceof AnimationDrawable)) {
    return false;
  }
  final AnimationDrawable ad=(AnimationDrawable)d;
  final boolean reversed=mState.isTransitionReversed(fromId,toId);
  final int frameCount=ad.getNumberOfFrames();
  final int fromFrame=reversed ? frameCount - 1 : 0;
  final int toFrame=reversed ? 0 : frameCount - 1;
  final FrameInterpolator interp=new FrameInterpolator(ad,reversed);
  final ObjectAnimator anim=ObjectAnimator.ofInt(ad,"currentIndex",fromFrame,toFrame);
  anim.setAutoCancel(true);
  anim.setDuration(interp.getTotalDuration());
  anim.addListener(mAnimListener);
  anim.setInterpolator(interp);
  anim.start();
  mAnim=anim;
  mAnimFromIndex=fromIndex;
  mAnimToIndex=toIndex;
  return true;
}
