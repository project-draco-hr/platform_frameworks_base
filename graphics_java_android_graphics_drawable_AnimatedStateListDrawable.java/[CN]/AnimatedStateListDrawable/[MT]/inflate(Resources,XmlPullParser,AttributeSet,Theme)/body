{
  final TypedArray a=r.obtainAttributes(attrs,R.styleable.AnimatedStateListDrawable);
  super.inflateWithAttributes(r,parser,a,R.styleable.AnimatedStateListDrawable_visible);
  final StateListState stateListState=getStateListState();
  stateListState.setVariablePadding(a.getBoolean(R.styleable.AnimatedStateListDrawable_variablePadding,false));
  stateListState.setConstantSize(a.getBoolean(R.styleable.AnimatedStateListDrawable_constantSize,false));
  stateListState.setEnterFadeDuration(a.getInt(R.styleable.AnimatedStateListDrawable_enterFadeDuration,0));
  stateListState.setExitFadeDuration(a.getInt(R.styleable.AnimatedStateListDrawable_exitFadeDuration,0));
  setDither(a.getBoolean(R.styleable.AnimatedStateListDrawable_dither,true));
  setAutoMirrored(a.getBoolean(R.styleable.AnimatedStateListDrawable_autoMirrored,false));
  a.recycle();
  int type;
  final int innerDepth=parser.getDepth() + 1;
  int depth;
  while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && ((depth=parser.getDepth()) >= innerDepth || type != XmlPullParser.END_TAG)) {
    if (type != XmlPullParser.START_TAG) {
      continue;
    }
    if (depth > innerDepth) {
      continue;
    }
    if (parser.getName().equals(ELEMENT_ITEM)) {
      parseItem(r,parser,attrs,theme);
    }
 else     if (parser.getName().equals(ELEMENT_TRANSITION)) {
      parseTransition(r,parser,attrs,theme);
    }
  }
  onStateChange(getState());
}
