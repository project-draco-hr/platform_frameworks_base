{
  if ((audioSource < MediaRecorder.AudioSource.DEFAULT) || ((audioSource > MediaRecorder.getAudioSourceMax()) && (audioSource != MediaRecorder.AudioSource.HOTWORD))) {
    throw new IllegalArgumentException("Invalid audio source.");
  }
  mRecordSource=audioSource;
  if ((sampleRateInHz < 4000) || (sampleRateInHz > 48000)) {
    throw new IllegalArgumentException(sampleRateInHz + "Hz is not a supported sample rate.");
  }
  mSampleRate=sampleRateInHz;
switch (channelConfig) {
case AudioFormat.CHANNEL_IN_DEFAULT:
case AudioFormat.CHANNEL_IN_MONO:
case AudioFormat.CHANNEL_CONFIGURATION_MONO:
    mChannelCount=1;
  mChannelMask=AudioFormat.CHANNEL_IN_MONO;
break;
case AudioFormat.CHANNEL_IN_STEREO:
case AudioFormat.CHANNEL_CONFIGURATION_STEREO:
mChannelCount=2;
mChannelMask=AudioFormat.CHANNEL_IN_STEREO;
break;
case (AudioFormat.CHANNEL_IN_FRONT | AudioFormat.CHANNEL_IN_BACK):
mChannelCount=2;
mChannelMask=channelConfig;
break;
default :
throw new IllegalArgumentException("Unsupported channel configuration.");
}
switch (audioFormat) {
case AudioFormat.ENCODING_DEFAULT:
mAudioFormat=AudioFormat.ENCODING_PCM_16BIT;
break;
case AudioFormat.ENCODING_PCM_16BIT:
case AudioFormat.ENCODING_PCM_8BIT:
mAudioFormat=audioFormat;
break;
default :
throw new IllegalArgumentException("Unsupported sample encoding." + " Should be ENCODING_PCM_8BIT or ENCODING_PCM_16BIT.");
}
}
