{
  super.onCreate(icicle);
  mClipper=new DocumentClipper(this);
  RootsFragment.show(getFragmentManager(),null);
  final Intent intent=getIntent();
  final Uri uri=intent.getData();
  if (mState.restored) {
    if (DEBUG)     Log.d(TAG,"Stack already resolved for uri: " + intent.getData());
  }
 else   if (!mState.stack.isEmpty()) {
    if (DEBUG)     Log.d(TAG,"Launching with non-empty stack.");
    checkState(uri == null || uri.getAuthority() == null || LauncherActivity.isLaunchUri(uri));
    refreshCurrentRootAndDirectory(ANIM_NONE);
  }
 else   if (intent.getAction() == Intent.ACTION_VIEW) {
    checkArgument(uri != null);
    new OpenUriForViewTask(this).executeOnExecutor(ProviderExecutor.forAuthority(uri.getAuthority()),uri);
  }
 else   if (DocumentsContract.isRootUri(this,uri)) {
    if (DEBUG)     Log.d(TAG,"Launching with root URI.");
    loadRoot(uri);
  }
 else {
    if (DEBUG)     Log.d(TAG,"Launching into Home directory.");
    final Uri homeUri=DocumentsContract.buildHomeUri();
    loadRoot(homeUri);
  }
  final @DialogType int dialogType=intent.getIntExtra(FileOperationService.EXTRA_DIALOG_TYPE,DIALOG_TYPE_UNKNOWN);
  if (icicle == null && dialogType != DIALOG_TYPE_UNKNOWN) {
    final int opType=intent.getIntExtra(FileOperationService.EXTRA_OPERATION,FileOperationService.OPERATION_COPY);
    final ArrayList<DocumentInfo> srcList=intent.getParcelableArrayListExtra(FileOperationService.EXTRA_SRC_LIST);
    OperationDialogFragment.show(getFragmentManager(),dialogType,srcList,mState.stack,opType);
  }
}
