{
  super.onCreate(icicle);
  mToolbar=(Toolbar)findViewById(R.id.toolbar);
  mStackAdapter=new StackAdapter();
  mStackListener=new ItemSelectedListener();
  mToolbarStack=(Spinner)findViewById(R.id.stack);
  mToolbarStack.setOnItemSelectedListener(mStackListener);
  setActionBar(mToolbar);
  mClipper=new DocumentClipper(this);
  mDrawer=DrawerController.create(this);
  RootsFragment.show(getFragmentManager(),null);
  final Intent intent=getIntent();
  final Uri uri=intent.getData();
  if (mState.restored) {
    if (DEBUG)     Log.d(TAG,"Stack already resolved for uri: " + intent.getData());
    refreshCurrentRootAndDirectory(ANIM_NONE);
  }
 else   if (!mState.stack.isEmpty()) {
    if (DEBUG)     Log.d(TAG,"Launching with non-empty stack.");
    checkState(uri == null || LauncherActivity.isLaunchUri(uri));
    refreshCurrentRootAndDirectory(ANIM_NONE);
  }
 else   if (DocumentsContract.isRootUri(this,uri)) {
    if (DEBUG)     Log.d(TAG,"Launching with root URI.");
    new RestoreRootTask(uri).executeOnExecutor(ProviderExecutor.forAuthority(uri.getAuthority()));
  }
 else {
    if (DEBUG)     Log.d(TAG,"Launching into Home directory.");
    final Uri homeUri=DocumentsContract.buildHomeUri();
    new RestoreRootTask(homeUri).executeOnExecutor(ProviderExecutor.forAuthority(homeUri.getAuthority()));
  }
  final int failure=intent.getIntExtra(FileOperationService.EXTRA_FAILURE,0);
  final int opType=intent.getIntExtra(FileOperationService.EXTRA_OPERATION,FileOperationService.OPERATION_COPY);
  if (icicle == null && failure != 0) {
    final ArrayList<DocumentInfo> failedSrcList=intent.getParcelableArrayListExtra(FileOperationService.EXTRA_SRC_LIST);
    FailureDialogFragment.show(getFragmentManager(),failure,failedSrcList,mState.stack,opType);
  }
}
