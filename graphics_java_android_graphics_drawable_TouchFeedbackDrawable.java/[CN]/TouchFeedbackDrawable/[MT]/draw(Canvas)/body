{
  final ArrayList<Ripple> activeRipples=mActiveRipples;
  if (activeRipples == null || activeRipples.isEmpty()) {
    return;
  }
  final ColorStateList stateList=mState.mColorStateList;
  if (stateList == null) {
    return;
  }
  final int color=stateList.getColorForState(getState(),Color.TRANSPARENT);
  if (color == Color.TRANSPARENT) {
    return;
  }
  if (mRipplePaint == null) {
    mRipplePaint=new Paint();
    mRipplePaint.setAntiAlias(true);
  }
  mRipplePaint.setColor(color);
  final int restoreCount=canvas.save();
  int n=activeRipples.size();
  for (int i=0; i < n; i++) {
    final Ripple ripple=activeRipples.get(i);
    if (!ripple.active()) {
      activeRipples.remove(i);
      i--;
      n--;
    }
 else {
      ripple.draw(canvas,mRipplePaint);
    }
  }
  canvas.restoreToCount(restoreCount);
}
