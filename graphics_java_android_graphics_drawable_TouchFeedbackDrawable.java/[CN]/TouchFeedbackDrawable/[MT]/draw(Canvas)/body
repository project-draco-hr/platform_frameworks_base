{
  super.draw(canvas);
  if (mActiveRipples == null || mActiveRipples.size() == 0) {
    return;
  }
  final ArrayList<Ripple> activeRipples=mActiveRipples;
  final Drawable mask=mMask;
  final Rect bounds=mask == null ? null : mask.getBounds();
  boolean hasRipples=false;
  int rippleRestoreCount=-1;
  int n=activeRipples.size();
  for (int i=0; i < n; i++) {
    final Ripple ripple=activeRipples.get(i);
    if (!ripple.active()) {
      activeRipples.remove(i);
      i--;
      n--;
    }
 else {
      if (mask != null && rippleRestoreCount < 0) {
        rippleRestoreCount=canvas.saveLayer(bounds.left,bounds.top,bounds.right,bounds.bottom,getMaskingPaint(SRC_ATOP),0);
        canvas.clipRect(bounds);
      }
      hasRipples|=ripple.draw(canvas,getRipplePaint());
    }
  }
  if (mask != null && hasRipples) {
    canvas.saveLayer(bounds.left,bounds.top,bounds.right,bounds.bottom,getMaskingPaint(DST_IN),0);
    mask.draw(canvas);
  }
  if (rippleRestoreCount > 0) {
    canvas.restoreToCount(rippleRestoreCount);
  }
}
