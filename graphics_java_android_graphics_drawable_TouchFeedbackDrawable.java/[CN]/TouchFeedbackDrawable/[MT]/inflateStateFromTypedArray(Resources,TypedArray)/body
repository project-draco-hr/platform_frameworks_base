{
  final TouchFeedbackState state=mState;
  final int[] themeAttrs=a.extractThemeAttrs();
  state.mThemeAttrs=themeAttrs;
  if (themeAttrs == null || themeAttrs[R.styleable.TouchFeedbackDrawable_tint] == 0) {
    mState.mTint=a.getColorStateList(R.styleable.TouchFeedbackDrawable_tint);
    if (mState.mTint == null) {
      throw new RuntimeException("<touch-feedback> tag requires a 'tint' attribute");
    }
  }
  if (themeAttrs == null || themeAttrs[R.styleable.TouchFeedbackDrawable_tintMode] == 0) {
    mState.mTintMode=Drawable.parseTintMode(a.getInt(R.styleable.TouchFeedbackDrawable_tintMode,-1),Mode.SRC_ATOP);
  }
  if (themeAttrs == null || themeAttrs[R.styleable.TouchFeedbackDrawable_pinned] == 0) {
    mState.mPinned=a.getBoolean(R.styleable.TouchFeedbackDrawable_pinned,false);
  }
  Drawable mask=mMask;
  if (themeAttrs == null || themeAttrs[R.styleable.TouchFeedbackDrawable_mask] == 0) {
    mask=a.getDrawable(R.styleable.TouchFeedbackDrawable_mask);
  }
  Drawable dr=super.getDrawable();
  if (themeAttrs == null || themeAttrs[R.styleable.TouchFeedbackDrawable_drawable] == 0) {
    final int drawableRes=a.getResourceId(R.styleable.TouchFeedbackDrawable_drawable,0);
    if (drawableRes != 0) {
      dr=r.getDrawable(drawableRes);
    }
  }
  mState.mProjected=mask == null && dr == null;
  if (dr != null) {
    setDrawable(dr,r);
  }
 else {
    setDrawable(new ColorDrawable(Color.TRANSPARENT),r);
  }
  if (mask != null) {
    setMaskDrawable(mask,r);
  }
}
