{
  copyAssetToFile("backup_mock.dat","backup_read_mock_test.dat");
  openForReading();
  BackupDataInput bdi=new BackupDataInput(mDataFile.getFileDescriptor());
  BufferedReader truth=new BufferedReader(new InputStreamReader(mAssets.openFd("backup_mock.gld").createInputStream()));
  while (bdi.readNextHeader()) {
    String[] expected=truth.readLine().split(":");
    byte[] expectedBytes=null;
    if (expected.length > 1) {
      expectedBytes=Base64.decode(expected[1],Base64.DEFAULT);
    }
    String key=bdi.getKey();
    int dataSize=bdi.getDataSize();
    assertEquals("wrong key",expected[0],key);
    assertEquals("wrong length for key " + key,(expectedBytes == null ? -1 : expectedBytes.length),dataSize);
    if (dataSize != -1) {
      byte[] buffer=new byte[dataSize];
      bdi.readEntityData(buffer,0,dataSize);
      assertEquals("wrong data for key " + key,expected[1],Base64.encodeToString(buffer,0,dataSize,Base64.NO_WRAP));
    }
  }
  assertNull("there are unused entries in the golden file",truth.readLine());
}
