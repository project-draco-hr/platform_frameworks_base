{
  int available=w - mPaddingLeft - mPaddingRight;
  final int thumbWidth=thumb.getIntrinsicWidth();
  final int thumbHeight=thumb.getIntrinsicHeight();
  available-=thumbWidth;
  available+=mThumbOffset * 2;
  final int thumbPos=(int)(scale * available + 0.5f);
  final int top, bottom;
  if (offset == Integer.MIN_VALUE) {
    final Rect oldBounds=thumb.getBounds();
    top=oldBounds.top;
    bottom=oldBounds.bottom;
  }
 else {
    top=offset;
    bottom=offset + thumbHeight;
  }
  final int left=(isLayoutRtl() && mMirrorForRtl) ? available - thumbPos : thumbPos;
  final int right=left + thumbWidth;
  final Drawable background=getBackground();
  if (background != null && background.supportsHotspots()) {
    final Rect bounds=mThumb.getBounds();
    final int offsetX=mPaddingLeft - mThumbOffset;
    final int offsetY=mPaddingTop;
    background.setHotspotBounds(left + offsetX,bounds.top + offsetY,right + offsetX,bounds.bottom + offsetY);
  }
  thumb.setBounds(left,top,right,bottom);
}
