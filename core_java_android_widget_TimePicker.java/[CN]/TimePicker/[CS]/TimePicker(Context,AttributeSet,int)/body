{
  super(context,attrs,defStyle);
  LayoutInflater inflater=(LayoutInflater)context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
  inflater.inflate(R.layout.time_picker,this,true);
  mHourSpinner=(NumberPicker)findViewById(R.id.hour);
  mHourSpinner.setOnValueChangedListener(new NumberPicker.OnValueChangedListener(){
    public void onValueChange(    NumberPicker spinner,    int oldVal,    int newVal){
      mCurrentHour=newVal;
      if (!mIs24HourView) {
        if (mCurrentHour == 12) {
          mCurrentHour=0;
        }
        if (!mIsAm) {
          mCurrentHour+=12;
        }
      }
      onTimeChanged();
    }
  }
);
  mDivider=(TextView)findViewById(R.id.divider);
  mDivider.setText(R.string.time_picker_separator);
  mMinuteSpinner=(NumberPicker)findViewById(R.id.minute);
  mMinuteSpinner.setMinValue(0);
  mMinuteSpinner.setMaxValue(59);
  mMinuteSpinner.setOnLongPressUpdateInterval(100);
  mMinuteSpinner.setFormatter(NumberPicker.TWO_DIGIT_FORMATTER);
  mMinuteSpinner.setOnValueChangedListener(new NumberPicker.OnValueChangedListener(){
    public void onValueChange(    NumberPicker spinner,    int oldVal,    int newVal){
      mCurrentMinute=newVal;
      onTimeChanged();
    }
  }
);
  mAmPmSpinner=(NumberPicker)findViewById(R.id.amPm);
  mAmPmSpinner.setOnValueChangedListener(new OnValueChangedListener(){
    public void onValueChange(    NumberPicker picker,    int oldVal,    int newVal){
      picker.requestFocus();
      if (mIsAm) {
        if (mCurrentHour < 12) {
          mCurrentHour+=12;
        }
      }
 else {
        if (mCurrentHour >= 12) {
          mCurrentHour-=12;
        }
      }
      mIsAm=!mIsAm;
      onTimeChanged();
    }
  }
);
  mAmPmStrings=new DateFormatSymbols().getAmPmStrings();
  configurePickerRanges();
  Calendar cal=Calendar.getInstance();
  setOnTimeChangedListener(NO_OP_CHANGE_LISTENER);
  setCurrentHour(cal.get(Calendar.HOUR_OF_DAY));
  setCurrentMinute(cal.get(Calendar.MINUTE));
  if (!isEnabled()) {
    setEnabled(false);
  }
}
