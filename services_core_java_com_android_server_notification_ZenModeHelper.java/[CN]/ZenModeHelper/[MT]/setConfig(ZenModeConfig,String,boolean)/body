{
  if (config == null || !config.isValid()) {
    Log.w(TAG,"Invalid config in setConfig; " + config);
    return false;
  }
  if (config.user != mUser) {
    mConfigs.put(config.user,config);
    if (DEBUG)     Log.d(TAG,"setConfig: store config for user " + config.user);
    return true;
  }
  mConditions.evaluateConfig(config,false);
  mConfigs.put(config.user,config);
  if (config.equals(mConfig))   return true;
  if (DEBUG)   Log.d(TAG,"setConfig reason=" + reason,new Throwable());
  ZenLog.traceConfig(reason,mConfig,config);
  final boolean policyChanged=!Objects.equals(getNotificationPolicy(mConfig),getNotificationPolicy(config));
  mConfig=config;
  dispatchOnConfigChanged();
  if (policyChanged) {
    dispatchOnPolicyChanged();
  }
  final String val=Integer.toString(mConfig.hashCode());
  Global.putString(mContext.getContentResolver(),Global.ZEN_MODE_CONFIG_ETAG,val);
  if (!evaluateZenMode(reason,setRingerMode)) {
    applyRestrictions();
  }
  mConditions.evaluateConfig(config,true);
  return true;
}
