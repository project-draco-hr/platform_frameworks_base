{
  final int mode=Global.getInt(mContext.getContentResolver(),Global.ZEN_MODE,Global.ZEN_MODE_OFF);
  if (mode != mZenMode) {
    Slog.d(TAG,String.format("updateZenMode: %s -> %s",Global.zenModeToString(mZenMode),Global.zenModeToString(mode)));
  }
  mZenMode=mode;
  final boolean zen=mZenMode != Global.ZEN_MODE_OFF;
  final String[] exceptionPackages=null;
  final boolean muteCalls=zen && !mConfig.allowCalls;
  mAppOps.setRestriction(AppOpsManager.OP_VIBRATE,AudioManager.STREAM_RING,muteCalls ? AppOpsManager.MODE_IGNORED : AppOpsManager.MODE_ALLOWED,exceptionPackages);
  mAppOps.setRestriction(AppOpsManager.OP_PLAY_AUDIO,AudioManager.STREAM_RING,muteCalls ? AppOpsManager.MODE_IGNORED : AppOpsManager.MODE_ALLOWED,exceptionPackages);
  mAppOps.setRestriction(AppOpsManager.OP_VIBRATE,AudioManager.USE_DEFAULT_STREAM_TYPE,zen ? AppOpsManager.MODE_IGNORED : AppOpsManager.MODE_ALLOWED,exceptionPackages);
  final boolean muteAlarms=mZenMode == Global.ZEN_MODE_NO_INTERRUPTIONS;
  mAppOps.setRestriction(AppOpsManager.OP_VIBRATE,AudioManager.STREAM_ALARM,muteAlarms ? AppOpsManager.MODE_IGNORED : AppOpsManager.MODE_ALLOWED,exceptionPackages);
  mAppOps.setRestriction(AppOpsManager.OP_PLAY_AUDIO,AudioManager.STREAM_ALARM,muteAlarms ? AppOpsManager.MODE_IGNORED : AppOpsManager.MODE_ALLOWED,exceptionPackages);
  if (mAudioManager != null) {
    int ringerMode=mAudioManager.getRingerMode();
    if (mZenMode == Global.ZEN_MODE_NO_INTERRUPTIONS) {
      if (ringerMode != AudioManager.RINGER_MODE_SILENT) {
        mPreviousRingerMode=ringerMode;
        Slog.d(TAG,"Silencing ringer");
        mAudioManager.setRingerMode(AudioManager.RINGER_MODE_SILENT);
      }
    }
 else {
      if (ringerMode == AudioManager.RINGER_MODE_SILENT) {
        Slog.d(TAG,"Unsilencing ringer");
        mAudioManager.setRingerMode(mPreviousRingerMode != -1 ? mPreviousRingerMode : AudioManager.RINGER_MODE_NORMAL);
        mPreviousRingerMode=-1;
      }
    }
  }
  dispatchOnZenModeChanged();
}
