{
  final TaskRecord task=anyTaskForIdLocked(taskId);
  if (task == null) {
    Slog.w(TAG,"moveTaskToStack: no task for id=" + taskId);
    return;
  }
  if (task.stack != null && task.stack.mStackId == stackId) {
    Slog.i(TAG,"moveTaskToStack: taskId=" + taskId + " already in stackId="+ stackId);
    return;
  }
  final ActivityRecord topActivity=task.getTopActivity();
  final boolean mightReplaceWindow=StackId.preserveWindowOnTaskMove(stackId) && topActivity != null;
  if (mightReplaceWindow) {
    mWindowManager.setReplacingWindow(topActivity.appToken,animate);
  }
  final ActivityStack stack=moveTaskToStackUncheckedLocked(task,stackId,toTop,forceFocus,"moveTaskToStack:" + reason);
  if (!animate) {
    stack.mNoAnimActivities.add(topActivity);
  }
  boolean kept=true;
  if (stackId == FULLSCREEN_WORKSPACE_STACK_ID && task.mBounds != null) {
    kept=resizeTaskLocked(task,stack.mBounds,RESIZE_MODE_SYSTEM,!PRESERVE_WINDOWS);
  }
 else   if (stackId == FREEFORM_WORKSPACE_STACK_ID && task.mBounds == null && task.mLastNonFullscreenBounds != null) {
    kept=resizeTaskLocked(task,task.mLastNonFullscreenBounds,RESIZE_MODE_SYSTEM,!PRESERVE_WINDOWS);
  }
 else   if (stackId == DOCKED_STACK_ID || stackId == PINNED_STACK_ID) {
    kept=resizeTaskLocked(task,stack.mBounds,RESIZE_MODE_SYSTEM,!PRESERVE_WINDOWS);
  }
  if (mightReplaceWindow) {
    mWindowManager.scheduleClearReplacingWindowIfNeeded(topActivity.appToken,!kept || stackId == PINNED_STACK_ID);
  }
  ensureActivitiesVisibleLocked(null,0,!PRESERVE_WINDOWS);
  resumeFocusedStackTopActivityLocked();
  if (!task.mResizeable && isStackDockedInEffect(stackId)) {
    showNonResizeableDockToast(taskId);
  }
}
