{
  final ActivityStack stack=getStack(stackId);
  if (stack == null) {
    Slog.w(TAG,"resizeStack: stackId " + stackId + " not found.");
    return;
  }
  Trace.traceBegin(TRACE_TAG_ACTIVITY_MANAGER,"am.resizeStack_" + stackId);
  ActivityRecord r=stack.topRunningActivityLocked();
  mTmpBounds.clear();
  mTmpConfigs.clear();
  ArrayList<TaskRecord> tasks=stack.getAllTasks();
  for (int i=tasks.size() - 1; i >= 0; i--) {
    TaskRecord task=tasks.get(i);
    if (task.mResizeable) {
      if (stack.mStackId == FREEFORM_WORKSPACE_STACK_ID) {
        tempRect2.set(task.mBounds);
        fitWithinBounds(tempRect2,bounds);
        task.updateOverrideConfiguration(tempRect2);
      }
 else {
        task.updateOverrideConfiguration(bounds);
      }
    }
    mTmpConfigs.put(task.taskId,task.mOverrideConfig);
    mTmpBounds.put(task.taskId,task.mBounds);
  }
  stack.mFullscreen=mWindowManager.resizeStack(stackId,bounds,mTmpConfigs,mTmpBounds);
  if (stack.mStackId == DOCKED_STACK_ID) {
    if (stack.mFullscreen) {
      for (int i=FIRST_STATIC_STACK_ID; i <= LAST_STATIC_STACK_ID; i++) {
        if (i != DOCKED_STACK_ID && getStack(i) != null) {
          resizeStackLocked(i,null,preserveWindows);
        }
      }
      final int count=tasks.size();
      for (int i=0; i < count; i++) {
        moveTaskToStackLocked(tasks.get(i).taskId,FULLSCREEN_WORKSPACE_STACK_ID,ON_TOP,FORCE_FOCUS);
      }
      r=null;
    }
 else {
      final int leftChange=stack.mBounds.left - bounds.left;
      final int rightChange=stack.mBounds.right - bounds.right;
      final int topChange=stack.mBounds.top - bounds.top;
      final int bottomChange=stack.mBounds.bottom - bounds.bottom;
      for (int i=FIRST_STATIC_STACK_ID; i <= LAST_STATIC_STACK_ID; i++) {
        if (i != DOCKED_STACK_ID) {
          ActivityStack otherStack=getStack(i);
          if (otherStack != null) {
            tempRect.set(otherStack.mBounds);
            tempRect.left-=rightChange;
            tempRect.right-=leftChange;
            tempRect.top-=bottomChange;
            tempRect.bottom-=topChange;
            resizeStackLocked(i,tempRect,PRESERVE_WINDOWS);
          }
        }
      }
    }
    preserveWindows=true;
  }
  stack.setBounds(bounds);
  if (r != null) {
    final boolean updated=stack.ensureActivityConfigurationLocked(r,0,preserveWindows);
    ensureActivitiesVisibleLocked(r,0,preserveWindows);
    if (!updated) {
      resumeTopActivitiesLocked(stack,null,null);
    }
  }
  Trace.traceEnd(TRACE_TAG_ACTIVITY_MANAGER);
}
