{
  final int currentTaskId=mCurTaskIdForUser.get(userId,userId * MAX_TASK_IDS_PER_USER);
  int candidateTaskId=currentTaskId;
  while (mRecentTasks.taskIdTakenForUserLocked(candidateTaskId,userId) || anyTaskForIdLocked(candidateTaskId,!RESTORE_FROM_RECENTS,INVALID_STACK_ID) != null) {
    candidateTaskId++;
    if (candidateTaskId == (userId + 1) * MAX_TASK_IDS_PER_USER) {
      candidateTaskId-=MAX_TASK_IDS_PER_USER;
    }
    if (candidateTaskId == currentTaskId) {
      throw new IllegalStateException("Cannot get an available task id." + " Reached limit of " + MAX_TASK_IDS_PER_USER + " running tasks per user.");
    }
  }
  mCurTaskIdForUser.put(userId,candidateTaskId);
  return candidateTaskId;
}
