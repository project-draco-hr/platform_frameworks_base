{
  final TaskRecord task=anyTaskForIdLocked(taskId);
  if (task == null) {
    Slog.w(TAG,"moveTaskToStack: no task for id=" + taskId);
    return;
  }
  if (task.stack != null && task.stack.mStackId == stackId) {
    Slog.i(TAG,"moveTaskToStack: taskId=" + taskId + " already in stackId="+ stackId);
    return;
  }
  final ActivityRecord topActivity=task.getTopActivity();
  if (StackId.preserveWindowOnTaskMove(stackId) && topActivity != null) {
    mWindowManager.setReplacingWindow(topActivity.appToken,true);
  }
  final ActivityStack stack=moveTaskToStackUncheckedLocked(task,stackId,toTop,forceFocus,"moveTaskToStack:" + reason);
  if (stackId == FULLSCREEN_WORKSPACE_STACK_ID && task.mBounds != null) {
    resizeTaskLocked(task,stack.mBounds,RESIZE_MODE_SYSTEM,!PRESERVE_WINDOWS);
  }
 else   if (stackId == FREEFORM_WORKSPACE_STACK_ID && task.mBounds == null && task.mLastNonFullscreenBounds != null) {
    resizeTaskLocked(task,task.mLastNonFullscreenBounds,RESIZE_MODE_SYSTEM,!PRESERVE_WINDOWS);
  }
 else   if (stackId == DOCKED_STACK_ID || stackId == PINNED_STACK_ID) {
    resizeTaskLocked(task,stack.mBounds,RESIZE_MODE_SYSTEM,!PRESERVE_WINDOWS);
  }
  ensureActivitiesVisibleLocked(null,0,!PRESERVE_WINDOWS);
  resumeTopActivitiesLocked();
}
