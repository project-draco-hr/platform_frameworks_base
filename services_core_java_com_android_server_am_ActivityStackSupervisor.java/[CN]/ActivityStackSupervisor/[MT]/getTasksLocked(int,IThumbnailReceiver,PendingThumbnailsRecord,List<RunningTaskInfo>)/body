{
  ActivityRecord r=null;
  ArrayList<ArrayList<RunningTaskInfo>> runningTaskLists=new ArrayList<ArrayList<RunningTaskInfo>>();
  final int numDisplays=mDisplayInfos.size();
  for (int displayNdx=0; displayNdx < numDisplays; ++displayNdx) {
    ArrayList<ActivityStack> stacks=mDisplayInfos.valueAt(displayNdx).stacks;
    for (int stackNdx=stacks.size() - 1; stackNdx >= 0; --stackNdx) {
      final ActivityStack stack=stacks.get(stackNdx);
      ArrayList<RunningTaskInfo> stackTaskList=new ArrayList<RunningTaskInfo>();
      runningTaskLists.add(stackTaskList);
      final ActivityRecord ar=stack.getTasksLocked(receiver,pending,stackTaskList);
      if (r == null && isFrontStack(stack)) {
        r=ar;
      }
    }
  }
  while (maxNum > 0) {
    long mostRecentActiveTime=Long.MIN_VALUE;
    ArrayList<RunningTaskInfo> selectedStackList=null;
    final int numTaskLists=runningTaskLists.size();
    for (int stackNdx=0; stackNdx < numTaskLists; ++stackNdx) {
      ArrayList<RunningTaskInfo> stackTaskList=runningTaskLists.get(stackNdx);
      if (!stackTaskList.isEmpty()) {
        final long lastActiveTime=stackTaskList.get(0).lastActiveTime;
        if (lastActiveTime > mostRecentActiveTime) {
          mostRecentActiveTime=lastActiveTime;
          selectedStackList=stackTaskList;
        }
      }
    }
    if (selectedStackList != null) {
      list.add(selectedStackList.remove(0));
      --maxNum;
    }
 else {
      break;
    }
  }
  return r;
}
