{
  if (!task.mResizeable) {
    Slog.w(TAG,"resizeTask: task " + task + " not resizeable.");
    return;
  }
  adjustForMinimalTaskDimensions(task,bounds);
  final boolean forced=(resizeMode & RESIZE_MODE_FORCED) != 0;
  if (task.mBounds != null && task.mBounds.equals(bounds) && !forced) {
    return;
  }
  if (!mWindowManager.isValidTaskId(task.taskId)) {
    task.updateOverrideConfiguration(bounds);
    if (task.stack != null && task.stack.mStackId != FREEFORM_WORKSPACE_STACK_ID) {
      restoreRecentTaskLocked(task,FREEFORM_WORKSPACE_STACK_ID);
    }
    return;
  }
  Trace.traceBegin(TRACE_TAG_ACTIVITY_MANAGER,"am.resizeTask_" + task.taskId);
  final Configuration overrideConfig=task.updateOverrideConfiguration(bounds);
  boolean kept=true;
  if (overrideConfig != null) {
    ActivityRecord r=task.topRunningActivityLocked();
    if (r != null) {
      final ActivityStack stack=task.stack;
      kept=stack.ensureActivityConfigurationLocked(r,0,preserveWindow);
      ensureActivitiesVisibleLocked(r,0,!PRESERVE_WINDOWS);
      if (!kept) {
        resumeFocusedStackTopActivityLocked();
      }
    }
  }
  mWindowManager.resizeTask(task.taskId,bounds,task.mOverrideConfig,kept,forced);
  Trace.traceEnd(TRACE_TAG_ACTIVITY_MANAGER);
}
