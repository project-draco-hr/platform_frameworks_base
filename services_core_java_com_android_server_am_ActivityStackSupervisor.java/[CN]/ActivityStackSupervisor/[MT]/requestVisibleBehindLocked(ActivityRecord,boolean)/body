{
  final ActivityStack stack=r.task.stack;
  if (stack == null) {
    if (DEBUG_VISIBLE_BEHIND)     Slog.d(TAG_VISIBLE_BEHIND,"requestVisibleBehind: r=" + r + " visible="+ visible+ " stack is null");
    return false;
  }
  final boolean isVisible=stack.hasVisibleBehindActivity();
  if (DEBUG_VISIBLE_BEHIND)   Slog.d(TAG_VISIBLE_BEHIND,"requestVisibleBehind r=" + r + " visible="+ visible+ " isVisible="+ isVisible);
  final ActivityRecord top=topRunningActivityLocked();
  if (top == null || top == r || (visible == isVisible)) {
    if (DEBUG_VISIBLE_BEHIND)     Slog.d(TAG_VISIBLE_BEHIND,"requestVisibleBehind: quick return");
    stack.setVisibleBehindActivity(visible ? r : null);
    return true;
  }
  if (visible && top.fullscreen) {
    if (DEBUG_VISIBLE_BEHIND)     Slog.d(TAG_VISIBLE_BEHIND,"requestVisibleBehind: returning top.fullscreen=" + top.fullscreen + " top.state="+ top.state+ " top.app="+ top.app+ " top.app.thread="+ top.app.thread);
    return false;
  }
 else   if (!visible && stack.getVisibleBehindActivity() != r) {
    if (DEBUG_VISIBLE_BEHIND)     Slog.d(TAG_VISIBLE_BEHIND,"requestVisibleBehind: returning visible=" + visible + " stack.getVisibleBehindActivity()="+ stack.getVisibleBehindActivity()+ " r="+ r);
    return false;
  }
  stack.setVisibleBehindActivity(visible ? r : null);
  if (!visible) {
    final ActivityRecord next=stack.findNextTranslucentActivity(r);
    if (next != null) {
      mService.convertFromTranslucent(next.appToken);
    }
  }
  if (top.app != null && top.app.thread != null) {
    try {
      top.app.thread.scheduleBackgroundVisibleBehindChanged(top.appToken,visible);
    }
 catch (    RemoteException e) {
    }
  }
  return true;
}
