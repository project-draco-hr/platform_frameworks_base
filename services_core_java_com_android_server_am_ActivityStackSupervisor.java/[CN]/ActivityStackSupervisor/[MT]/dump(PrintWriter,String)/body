{
  pw.print(prefix);
  pw.print("mFocusedStack=" + mFocusedStack);
  pw.print(" mLastFocusedStack=");
  pw.println(mLastFocusedStack);
  pw.print(prefix);
  pw.println("mSleepTimeout=" + mSleepTimeout);
  pw.print(prefix);
  pw.println("mCurTaskIdForUser=" + mCurTaskIdForUser);
  pw.print(prefix);
  pw.println("mUserStackInFront=" + mUserStackInFront);
  pw.print(prefix);
  pw.println("mActivityContainers=" + mActivityContainers);
  pw.print(prefix);
  pw.print("mLockTaskModeState=" + lockTaskModeToString());
  final SparseArray<String[]> packages=mService.mLockTaskPackages;
  if (packages.size() > 0) {
    pw.println(" mLockTaskPackages (userId:packages)=");
    for (int i=0; i < packages.size(); ++i) {
      pw.print(prefix);
      pw.print(prefix);
      pw.print(packages.keyAt(i));
      pw.print(":");
      pw.println(Arrays.toString(packages.valueAt(i)));
    }
  }
  pw.println(" mLockTaskModeTasks" + mLockTaskModeTasks);
}
