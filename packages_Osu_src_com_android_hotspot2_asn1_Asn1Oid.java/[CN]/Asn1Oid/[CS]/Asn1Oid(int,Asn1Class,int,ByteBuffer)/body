{
  super(tag,asn1Class,false,length);
  if (length == 0)   throw new DecodeException("oid-encoding length is zero",data.position());
  mArcs=new ArrayList<>();
  ByteBuffer payload=data.duplicate();
  payload.limit(payload.position() + length);
  data.position(data.position() + length);
  byte current=payload.get();
  long seg01=current & Asn1Decoder.ByteMask;
  long segValue=seg01 / OidOctet1Modulus;
  int hashcode=(int)segValue;
  mArcs.add(segValue);
  segValue=seg01 - segValue * OidOctet1Modulus;
  hashcode=hashcode * 31 + (int)segValue;
  mArcs.add(segValue);
  current=0;
  segValue=0L;
  while (payload.hasRemaining()) {
    current=payload.get();
    segValue|=current & Asn1Decoder.MoreData;
    if ((current & Asn1Decoder.MoreBit) == 0) {
      hashcode=hashcode * 31 + (int)segValue;
      mArcs.add(segValue);
      segValue=0L;
    }
 else     segValue<<=Asn1Decoder.MoreWidth;
  }
  if ((current & Asn1Decoder.MoreBit) != 0)   throw new DecodeException("Illegal (end of) oid-encoding",payload.position());
  mHashcode=hashcode;
}
