{
  if (!mIsNfcEnabled) {
    return ErrorCodes.ERROR_NOT_INITIALIZED;
  }
  mContext.enforceCallingPermission(android.Manifest.permission.NFC_LLCP,"NFC_LLCP permission required for LLCP operations with NFC service");
  if (mNbSocketCreated < LLCP_SOCKET_NB_MAX) {
    int sockeHandle=mGeneratedSocketHandle;
    if (mLlcpLinkState == NfcManager.LLCP_LINK_STATE_ACTIVATED) {
      NativeLlcpConnectionlessSocket socket;
      socket=mManager.doCreateLlcpConnectionlessSocket(sap);
      if (socket != null) {
        mNbSocketCreated++;
        mSocketMap.put(sockeHandle,socket);
        return sockeHandle;
      }
 else {
        mGeneratedSocketHandle-=1;
        int errorStatus=mManager.doGetLastError();
switch (errorStatus) {
case ErrorCodes.ERROR_BUFFER_TO_SMALL:
          return ErrorCodes.ERROR_BUFFER_TO_SMALL;
case ErrorCodes.ERROR_INSUFFICIENT_RESOURCES:
        return ErrorCodes.ERROR_INSUFFICIENT_RESOURCES;
default :
      return ErrorCodes.ERROR_SOCKET_CREATION;
  }
}
}
 else {
if (!CheckSocketSap(sap)) {
  return ErrorCodes.ERROR_SAP_USED;
}
NativeLlcpConnectionlessSocket socket=new NativeLlcpConnectionlessSocket(sap);
mSocketMap.put(sockeHandle,socket);
mNbSocketCreated++;
RegisteredSocket registeredSocket=new RegisteredSocket(LLCP_CONNECTIONLESS_SOCKET_TYPE,sockeHandle,sap);
mRegisteredSocketList.add(registeredSocket);
}
mGeneratedSocketHandle++;
return sockeHandle;
}
 else {
return ErrorCodes.ERROR_INSUFFICIENT_RESOURCES;
}
}
