{
  if (payload.remaining() < 11) {
    throw new ProtocolException("Truncated OSU provider: " + payload.remaining());
  }
  mSSID=ssid;
  int length=payload.getShort() & SHORT_MASK;
  int namesLength=payload.getShort() & SHORT_MASK;
  ByteBuffer namesBuffer=payload.duplicate().order(ByteOrder.LITTLE_ENDIAN);
  namesBuffer.limit(namesBuffer.position() + namesLength);
  payload.position(payload.position() + namesLength);
  mNames=new ArrayList<>();
  while (namesBuffer.hasRemaining()) {
    mNames.add(new I18Name(namesBuffer));
  }
  mOSUServer=Constants.getPrefixedString(payload,1,StandardCharsets.UTF_8);
  int methodLength=payload.get() & BYTE_MASK;
  mOSUMethods=new ArrayList<>(methodLength);
  while (methodLength > 0) {
    int methodID=payload.get() & BYTE_MASK;
    mOSUMethods.add(methodID < OSUMethod.values().length ? OSUMethod.values()[methodID] : null);
    methodLength--;
  }
  int iconsLength=payload.getShort() & SHORT_MASK;
  ByteBuffer iconsBuffer=payload.duplicate().order(ByteOrder.LITTLE_ENDIAN);
  iconsBuffer.limit(iconsBuffer.position() + iconsLength);
  payload.position(payload.position() + iconsLength);
  mIcons=new ArrayList<>();
  while (iconsBuffer.hasRemaining()) {
    mIcons.add(new IconInfo(iconsBuffer));
  }
  mOsuNai=Constants.getPrefixedString(payload,1,StandardCharsets.UTF_8,true);
  int descriptionsLength=payload.getShort() & SHORT_MASK;
  ByteBuffer descriptionsBuffer=payload.duplicate().order(ByteOrder.LITTLE_ENDIAN);
  descriptionsBuffer.limit(descriptionsBuffer.position() + descriptionsLength);
  payload.position(payload.position() + descriptionsLength);
  mServiceDescriptions=new ArrayList<>();
  while (descriptionsBuffer.hasRemaining()) {
    mServiceDescriptions.add(new I18Name(descriptionsBuffer));
  }
  int result=mNames.hashCode();
  result=31 * result + mSSID.hashCode();
  result=31 * result + mOSUServer.hashCode();
  result=31 * result + mOSUMethods.hashCode();
  result=31 * result + mIcons.hashCode();
  result=31 * result + (mOsuNai != null ? mOsuNai.hashCode() : 0);
  result=31 * result + mServiceDescriptions.hashCode();
  mHashCode=result;
}
