{
  PackageSetting ps1=generateFakePackageSetting("packageA");
  mPackagesMap.put(ps1.name,ps1);
  PackageSetting ps2=generateFakePackageSetting("packageB");
  mPackagesMap.put(ps2.name,ps2);
  ArraySet<PublicKey> signingKeys=new ArraySet<PublicKey>();
  PublicKey keyA=PackageParser.parsePublicKey(KeySetStrings.ctsKeySetPublicKeyA);
  signingKeys.add(keyA);
  mKsms.addSigningKeySetToPackageLPw(ps1,signingKeys);
  mKsms.addSigningKeySetToPackageLPw(ps2,signingKeys);
  mKsms.removeAppKeySetDataLPw(ps1.name);
  assertEquals(1,KeySetUtils.getKeySetRefCount(mKsms,1));
  assertEquals(1,KeySetUtils.getPubKeyRefCount(mKsms,1));
  LongSparseArray<ArraySet<Long>> ksMapping=KeySetUtils.getKeySetMapping(mKsms);
  assertEquals(1,ksMapping.size());
  assertEquals(PackageKeySetData.KEYSET_UNASSIGNED,ps1.keySetData.getProperSigningKeySet());
  assertEquals(1,ps2.keySetData.getProperSigningKeySet());
}
