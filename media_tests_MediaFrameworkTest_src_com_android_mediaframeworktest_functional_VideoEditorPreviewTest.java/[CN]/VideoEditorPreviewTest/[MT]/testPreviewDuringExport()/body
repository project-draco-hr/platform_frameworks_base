{
  final String videoItemFileName=INPUT_FILE_PATH + "H264_BP_640x480_30fps_192kbps_1_5.mp4";
  final Semaphore blockTillPreviewCompletes=new Semaphore(1);
  final MediaVideoItem mediaVideoItem1=mVideoEditorHelper.createMediaItem(mVideoEditor,"m1",videoItemFileName,MediaItem.RENDERING_MODE_BLACK_BORDER);
  mediaVideoItem1.setExtractBoundaries(0,20000);
  mVideoEditor.addMediaItem(mediaVideoItem1);
  mVideoEditor.generatePreview(new MediaProcessingProgressListener(){
    public void onProgress(    Object item,    int action,    int progress){
    }
  }
);
  blockTillPreviewCompletes.acquire();
  final SurfaceHolder surfaceHolder=MediaFrameworkTest.mSurfaceView.getHolder();
  try {
    mVideoEditor.startPreview(surfaceHolder,5000,-1,false,1,new PreviewProgressListener(){
      final String fileName=mVideoEditor.getPath() + "\test.3gp";
      final int height=MediaProperties.HEIGHT_360;
      final int bitrate=MediaProperties.BITRATE_512K;
      public void onProgress(      VideoEditor videoEditor,      long timeMs,      boolean end){
        if (timeMs >= 10000)         try {
          videoEditor.export(fileName,height,bitrate,new ExportProgressListener(){
            public void onProgress(            VideoEditor ve,            String outFileName,            int progress){
              blockTillPreviewCompletes.release();
            }
          }
);
        }
 catch (        IOException e) {
          assertTrue("UnExpected Error in Export" + e.toString(),true);
        }
      }
    }
);
  }
 catch (  Exception e) {
    assertTrue("Expected Error in Preview" + e.toString(),true);
    blockTillPreviewCompletes.release();
  }
  blockTillPreviewCompletes.acquire();
  blockTillPreviewCompletes.release();
}
