{
  final String videoItemFileName1=INPUT_FILE_PATH + "H264_BP_1080x720_30fps_800kbps_1_17.mp4";
  final String videoItemFileName2=INPUT_FILE_PATH + "MPEG4_SP_800x480_515kbps_15fps_AMR_NB_8KHz_12.2kbps_m_0_26.mp4";
  final String videoItemFileName3=INPUT_FILE_PATH + "H264_BP_640x480_30fps_256kbps_1_17.mp4";
  final String imageItemFilename1=INPUT_FILE_PATH + "IMG_1600x1200.jpg";
  final String imageItemFilename2=INPUT_FILE_PATH + "IMG_176x144.jpg";
  final String audioFilename=INPUT_FILE_PATH + "AMRNB_8KHz_12.2Kbps_m_1_17.3gp";
  final MediaVideoItem mediaVideoItem1=mVideoEditorHelper.createMediaItem(mVideoEditor,"m1",videoItemFileName1,MediaItem.RENDERING_MODE_BLACK_BORDER);
  mediaVideoItem1.setExtractBoundaries(0,10000);
  mVideoEditor.addMediaItem(mediaVideoItem1);
  final MediaVideoItem mediaVideoItem2=mVideoEditorHelper.createMediaItem(mVideoEditor,"m2",videoItemFileName2,MediaItem.RENDERING_MODE_BLACK_BORDER);
  mediaVideoItem1.setExtractBoundaries(mediaVideoItem2.getDuration() / 4,mediaVideoItem2.getDuration() / 2);
  mVideoEditor.addMediaItem(mediaVideoItem2);
  final MediaVideoItem mediaVideoItem3=mVideoEditorHelper.createMediaItem(mVideoEditor,"m3",videoItemFileName3,MediaItem.RENDERING_MODE_BLACK_BORDER);
  mediaVideoItem1.setExtractBoundaries(mediaVideoItem2.getDuration() / 2,mediaVideoItem2.getDuration());
  mVideoEditor.addMediaItem(mediaVideoItem3);
  final MediaImageItem mediaImageItem4=mVideoEditorHelper.createMediaItem(mVideoEditor,"m4",imageItemFilename1,5000,MediaItem.RENDERING_MODE_BLACK_BORDER);
  final MediaImageItem mediaImageItem5=mVideoEditorHelper.createMediaItem(mVideoEditor,"m5",imageItemFilename2,5000,MediaItem.RENDERING_MODE_BLACK_BORDER);
  List<MediaItem> mediaList=mVideoEditor.getAllMediaItems();
  assertEquals("Media Item List Size",3,mediaList.size());
  mVideoEditor.insertMediaItem(mediaImageItem4,mediaVideoItem2.getId());
  mediaList=mVideoEditor.getAllMediaItems();
  assertEquals("Media Item List Size",4,mediaList.size());
  assertEquals("Media item 1",mediaVideoItem1,mediaList.get(0));
  assertEquals("Media item 2",mediaVideoItem2,mediaList.get(1));
  assertEquals("Media item 4",mediaImageItem4,mediaList.get(2));
  assertEquals("Media item 3",mediaVideoItem3,mediaList.get(3));
  mVideoEditor.insertMediaItem(mediaImageItem5,mediaImageItem4.getId());
  mediaList=mVideoEditor.getAllMediaItems();
  assertEquals("Media Item List Size",5,mediaList.size());
  assertEquals("Media item 1",mediaVideoItem1,mediaList.get(0));
  assertEquals("Media item 2",mediaVideoItem2,mediaList.get(1));
  assertEquals("Media item 4",mediaImageItem4,mediaList.get(2));
  assertEquals("Media item 5",mediaImageItem5,mediaList.get(3));
  assertEquals("Media item 3",mediaVideoItem3,mediaList.get(4));
  mVideoEditor.moveMediaItem(mediaVideoItem1.getId(),mediaImageItem5.getId());
  mediaList=mVideoEditor.getAllMediaItems();
  assertEquals("Media Item List Size",5,mediaList.size());
  assertEquals("Media item 2",mediaVideoItem2,mediaList.get(0));
  assertEquals("Media item 4",mediaImageItem4,mediaList.get(1));
  assertEquals("Media item 5",mediaImageItem5,mediaList.get(2));
  assertEquals("Media item 1",mediaVideoItem1,mediaList.get(3));
  assertEquals("Media item 3",mediaVideoItem3,mediaList.get(4));
  final TransitionCrossfade transition2And4CrossFade=mVideoEditorHelper.createTCrossFade("transition2And4CrossFade",mediaVideoItem2,mediaImageItem4,2000,Transition.BEHAVIOR_MIDDLE_FAST);
  mVideoEditor.addTransition(transition2And4CrossFade);
  final TransitionCrossfade transition1And3CrossFade=mVideoEditorHelper.createTCrossFade("transition1And3CrossFade",mediaVideoItem1,mediaVideoItem3,5000,Transition.BEHAVIOR_MIDDLE_FAST);
  mVideoEditor.addTransition(transition1And3CrossFade);
  final AudioTrack audioTrack=mVideoEditorHelper.createAudio(mVideoEditor,"a1",audioFilename);
  audioTrack.setExtractBoundaries(0,2000);
  mVideoEditor.addAudioTrack(audioTrack);
  audioTrack.enableLoop();
  final SurfaceHolder surfaceHolder=MediaFrameworkTest.mSurfaceView.getHolder();
  for (int i=0; i < mVideoEditor.getDuration(); i+=500) {
    assertEquals("Render PreviewFram",-1,mVideoEditor.renderPreviewFrame(surfaceHolder,i));
  }
}
