{
  super(context,attrs,defStyleAttr,defStyleRes);
  setWillNotDraw(false);
  SystemServicesProxy ssp=Recents.getSystemServices();
  mTransitionHelper=new RecentsTransitionHelper(getContext());
  mDividerSize=ssp.getDockedDividerSize(context);
  mTouchHandler=new RecentsViewTouchHandler(this);
  mFlingAnimationUtils=new FlingAnimationUtils(context,0.3f);
  LayoutInflater inflater=LayoutInflater.from(context);
  if (RecentsDebugFlags.Static.EnableStackActionButton) {
    float cornerRadius=context.getResources().getDimensionPixelSize(R.dimen.recents_task_view_rounded_corners_radius);
    mStackActionButton=(TextView)inflater.inflate(R.layout.recents_stack_action_button,this,false);
    mStackActionButton.forceHasOverlappingRendering(false);
    mStackActionButton.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        EventBus.getDefault().send(new DismissAllTaskViewsEvent());
      }
    }
);
    addView(mStackActionButton);
    mStackActionButton.setClipToOutline(true);
    mStackActionButton.setOutlineProvider(new ViewOutlineProvider(){
      @Override public void getOutline(      View view,      Outline outline){
        outline.setRoundRect(0,0,view.getWidth(),view.getHeight(),cornerRadius);
      }
    }
);
  }
  mEmptyView=(TextView)inflater.inflate(R.layout.recents_empty,this,false);
  addView(mEmptyView);
}
