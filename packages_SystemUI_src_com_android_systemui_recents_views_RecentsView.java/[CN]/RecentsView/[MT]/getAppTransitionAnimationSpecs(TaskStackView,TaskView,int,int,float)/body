{
  final int targetStackId=clickedTask.getTask().key.stackId;
  if (targetStackId != ActivityManager.FREEFORM_WORKSPACE_STACK_ID && targetStackId != ActivityManager.FULLSCREEN_WORKSPACE_STACK_ID) {
    return null;
  }
  List<AppTransitionAnimationSpec> specs=new ArrayList<>();
  if (targetStackId == ActivityManager.FULLSCREEN_WORKSPACE_STACK_ID) {
    specs.add(createThumbnailHeaderAnimationSpec(stackView,offsetX,offsetY,stackScroll,clickedTask,clickedTask.getTask().key.id,ADD_HEADER_BITMAP));
    return specs;
  }
  List<TaskView> taskViews=stackView.getTaskViews();
  int childCount=taskViews.size();
  TaskView topChild=taskViews.get(0);
  TaskView bottomChild=taskViews.get(childCount - 1);
  SparseArray<TaskView> taskViewsByTaskId=new SparseArray<>();
  for (int i=0; i < childCount; i++) {
    TaskView taskView=taskViews.get(i);
    taskViewsByTaskId.put(taskView.getTask().key.id,taskView);
  }
  TaskStack stack=stackView.getStack();
  ArrayList<Task> tasks=stack.getTasks();
  boolean passedClickedTask=false;
  for (int i=0, n=tasks.size(); i < n; i++) {
    Task task=tasks.get(i);
    TaskView taskView=taskViewsByTaskId.get(task.key.id);
    if (taskView != null) {
      specs.add(createThumbnailHeaderAnimationSpec(stackView,offsetX,offsetY,stackScroll,taskView,taskView.getTask().key.id,ADD_HEADER_BITMAP));
      if (taskView == clickedTask) {
        passedClickedTask=true;
      }
    }
 else {
      taskView=passedClickedTask ? bottomChild : topChild;
      specs.add(createThumbnailHeaderAnimationSpec(stackView,offsetX,offsetY,stackScroll,taskView,task.key.id,!ADD_HEADER_BITMAP));
    }
  }
  return specs;
}
