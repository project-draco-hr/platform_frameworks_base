{
  int width=MeasureSpec.getSize(widthMeasureSpec);
  int widthMode=MeasureSpec.getMode(widthMeasureSpec);
  int height=MeasureSpec.getSize(heightMeasureSpec);
  int heightMode=MeasureSpec.getMode(heightMeasureSpec);
  if (Console.Enabled) {
    Console.log(Constants.Log.UI.MeasureAndLayout,"[RecentsView|measure]","width: " + width + " height: "+ height,Console.AnsiGreen);
    Console.logTraceTime(Constants.Log.App.TimeRecentsStartup,Constants.Log.App.TimeRecentsStartupKey,"RecentsView.onMeasure");
  }
  RecentsConfiguration config=RecentsConfiguration.getInstance();
  if (mSearchBar != null) {
    Rect searchBarSpaceBounds=new Rect();
    config.getSearchBarBounds(width,height - config.systemInsets.top,searchBarSpaceBounds);
    mSearchBar.measure(MeasureSpec.makeMeasureSpec(searchBarSpaceBounds.width(),MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(searchBarSpaceBounds.height(),MeasureSpec.EXACTLY));
  }
  Rect taskStackBounds=new Rect();
  config.getTaskStackBounds(width,height,taskStackBounds);
  int childWidth=width - config.systemInsets.right;
  int childHeight=taskStackBounds.height() - config.systemInsets.top;
  int childCount=getChildCount();
  for (int i=0; i < childCount; i++) {
    View child=getChildAt(i);
    if (child instanceof TaskStackView && child.getVisibility() != GONE) {
      child.measure(MeasureSpec.makeMeasureSpec(childWidth,widthMode),MeasureSpec.makeMeasureSpec(childHeight,heightMode));
    }
  }
  setMeasuredDimension(width,height);
}
