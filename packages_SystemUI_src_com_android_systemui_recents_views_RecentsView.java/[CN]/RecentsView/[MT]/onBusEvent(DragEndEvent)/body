{
  if (event.dropTarget instanceof TaskStack.DockState) {
    final TaskStack.DockState dockState=(TaskStack.DockState)event.dropTarget;
    updateVisibleDockRegions(null,false,-1,-1,false,false);
    Utilities.setViewFrameFromTranslation(event.taskView);
    SystemServicesProxy ssp=Recents.getSystemServices();
    if (ssp.startTaskInDockedMode(event.task.key.id,dockState.createMode)) {
      final OnAnimationStartedListener startedListener=new OnAnimationStartedListener(){
        @Override public void onAnimationStarted(){
          EventBus.getDefault().send(new DockedFirstAnimationFrameEvent());
          mTaskStackView.getStack().removeTask(event.task,null,true);
        }
      }
;
      final Rect taskRect=getTaskRect(event.taskView);
      IAppTransitionAnimationSpecsFuture future=mTransitionHelper.getAppTransitionFuture(new AnimationSpecComposer(){
        @Override public List<AppTransitionAnimationSpec> composeSpecs(){
          return mTransitionHelper.composeDockAnimationSpec(event.taskView,taskRect);
        }
      }
);
      ssp.overridePendingAppTransitionMultiThumbFuture(future,mTransitionHelper.wrapStartedListener(startedListener),true);
      MetricsLogger.action(mContext,MetricsEvent.ACTION_WINDOW_DOCK_DRAG_DROP,event.task.getTopComponent().flattenToShortString());
    }
 else {
      EventBus.getDefault().send(new DragEndCancelledEvent(mStack,event.task,event.taskView));
    }
  }
 else {
    updateVisibleDockRegions(null,true,-1,-1,true,false);
  }
  if (mStackActionButton != null) {
    mStackActionButton.animate().alpha(1f).setDuration(SHOW_STACK_ACTION_BUTTON_DURATION).setInterpolator(Interpolators.ALPHA_IN).start();
  }
}
