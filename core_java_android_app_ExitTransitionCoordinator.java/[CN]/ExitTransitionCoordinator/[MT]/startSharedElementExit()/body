{
  Transition transition=getSharedElementExitTransition();
  final ArrayList<View> sharedElementSnapshots=createSnapshots(mExitSharedElementBundle,mSharedElementNames);
  mSharedElementSnapshots=createSnapshots(mExitSharedElementBundle,mSharedElementNames);
  transition.addListener(new Transition.TransitionListenerAdapter(){
    @Override public void onTransitionEnd(    Transition transition){
      setViewVisibility(mSharedElements,View.INVISIBLE);
      ViewGroupOverlay overlay=getDecor().getOverlay();
      if (mSharedElementSnapshots != null) {
        for (int i=0; i < mSharedElementSnapshots.size(); i++) {
          overlay.add(mSharedElementSnapshots.get(i));
        }
      }
    }
  }
);
  getDecor().getViewTreeObserver().addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener(){
    @Override public boolean onPreDraw(){
      getDecor().getViewTreeObserver().removeOnPreDrawListener(this);
      setSharedElementState(mExitSharedElementBundle,sharedElementSnapshots);
      return true;
    }
  }
);
  TransitionManager.beginDelayedTransition(getDecor(),transition);
  getDecor().invalidate();
}
