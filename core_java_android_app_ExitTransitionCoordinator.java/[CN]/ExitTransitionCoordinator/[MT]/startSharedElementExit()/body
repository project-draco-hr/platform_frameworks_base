{
  Transition transition=getSharedElementExitTransition();
  final ArrayList<View> sharedElementSnapshots=createSnapshots(mExitSharedElementBundle,mSharedElementNames);
  transition.addListener(new ContinueTransitionListener(){
    @Override public void onTransitionEnd(    Transition transition){
      transition.removeListener(this);
      super.onTransitionEnd(transition);
      int count=mSharedElements.size();
      for (int i=0; i < count; i++) {
        View sharedElement=mSharedElements.get(i);
        ((ViewGroup)sharedElement.getParent()).suppressLayout(true);
      }
    }
  }
);
  getDecor().getViewTreeObserver().addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener(){
    @Override public boolean onPreDraw(){
      getDecor().getViewTreeObserver().removeOnPreDrawListener(this);
      setSharedElementState(mExitSharedElementBundle,sharedElementSnapshots);
      return true;
    }
  }
);
  TransitionManager.beginDelayedTransition(getDecor(),transition);
  getDecor().invalidate();
}
