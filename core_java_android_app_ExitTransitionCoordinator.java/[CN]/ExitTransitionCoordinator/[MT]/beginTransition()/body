{
  Transition sharedElementTransition=configureTransition(getSharedElementTransition());
  Transition viewsTransition=configureTransition(getViewsTransition());
  viewsTransition=addTargets(viewsTransition,mTransitioningViews);
  if (sharedElementTransition == null || mSharedElements.isEmpty()) {
    sharedElementTransitionComplete();
    sharedElementTransition=null;
  }
 else {
    sharedElementTransition.addListener(new Transition.TransitionListenerAdapter(){
      @Override public void onTransitionEnd(      Transition transition){
        sharedElementTransitionComplete();
      }
    }
);
  }
  if (viewsTransition == null || mTransitioningViews.isEmpty()) {
    exitTransitionComplete();
    viewsTransition=null;
  }
 else {
    viewsTransition.addListener(new Transition.TransitionListenerAdapter(){
      @Override public void onTransitionEnd(      Transition transition){
        exitTransitionComplete();
      }
    }
);
  }
  Transition transition=mergeTransitions(sharedElementTransition,viewsTransition);
  TransitionManager.beginDelayedTransition(getDecor(),transition);
  if (viewsTransition == null && sharedElementTransition != null) {
    mSharedElements.get(0).requestLayout();
  }
}
