{
  if (!mIsExitStarted) {
    mIsExitStarted=true;
    if (getDecor() != null) {
      getDecor().suppressLayout(true);
    }
    mHandler=new Handler(){
      @Override public void handleMessage(      Message msg){
        mIsCanceled=true;
        finish();
      }
    }
;
    delayCancel();
    moveSharedElementsToOverlay();
    if (getDecor().getBackground() == null) {
      getWindow().setBackgroundDrawable(new ColorDrawable(Color.BLACK));
    }
    ActivityOptions options=ActivityOptions.makeSceneTransitionAnimation(mActivity,this,mAllSharedElementNames,resultCode,data);
    mActivity.convertToTranslucent(new Activity.TranslucentConversionListener(){
      @Override public void onTranslucentConversionComplete(      boolean drawComplete){
        if (!mIsCanceled) {
          fadeOutBackground();
        }
      }
    }
,options);
    startTransition(new Runnable(){
      @Override public void run(){
        startExitTransition();
      }
    }
);
  }
}
