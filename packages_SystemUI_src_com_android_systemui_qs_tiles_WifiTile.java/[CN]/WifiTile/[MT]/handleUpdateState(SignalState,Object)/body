{
  if (DEBUG)   Log.d(TAG,"handleUpdateState arg=" + arg);
  CallbackInfo cb=(CallbackInfo)arg;
  if (cb == null) {
    cb=mSignalCallback.mInfo;
  }
  boolean wifiConnected=cb.enabled && (cb.wifiSignalIconId > 0) && (cb.enabledDesc != null);
  boolean wifiNotConnected=(cb.wifiSignalIconId > 0) && (cb.enabledDesc == null);
  boolean enabledChanging=state.value != cb.enabled;
  if (enabledChanging) {
    mDetailAdapter.setItemsVisible(cb.enabled);
    fireToggleStateChanged(cb.enabled);
  }
  state.value=cb.enabled;
  state.connected=wifiConnected;
  state.activityIn=cb.enabled && cb.activityIn;
  state.activityOut=cb.enabled && cb.activityOut;
  state.filter=true;
  final StringBuffer minimalContentDescription=new StringBuffer();
  final StringBuffer expandedContentDescription=new StringBuffer();
  final Resources r=mContext.getResources();
  if (!state.value) {
    state.icon=ResourceIcon.get(R.drawable.ic_qs_wifi_disabled);
    state.label=r.getString(R.string.quick_settings_wifi_label);
  }
 else   if (wifiConnected) {
    state.icon=ResourceIcon.get(cb.wifiSignalIconId);
    state.label=removeDoubleQuotes(cb.enabledDesc);
  }
 else   if (wifiNotConnected) {
    state.icon=ResourceIcon.get(R.drawable.ic_qs_wifi_disconnected);
    state.label=r.getString(R.string.quick_settings_wifi_label);
  }
 else {
    state.icon=ResourceIcon.get(R.drawable.ic_qs_wifi_no_network);
    state.label=r.getString(R.string.quick_settings_wifi_label);
  }
  minimalContentDescription.append(mContext.getString(R.string.quick_settings_wifi_label)).append(",");
  if (state.value) {
    expandedContentDescription.append(r.getString(R.string.quick_settings_wifi_on_label)).append(",");
    if (wifiConnected) {
      minimalContentDescription.append(cb.wifiSignalContentDescription).append(",");
      minimalContentDescription.append(removeDoubleQuotes(cb.enabledDesc));
      expandedContentDescription.append(cb.wifiSignalContentDescription).append(",");
      expandedContentDescription.append(removeDoubleQuotes(cb.enabledDesc));
    }
  }
 else {
    expandedContentDescription.append(r.getString(R.string.quick_settings_wifi_off_label));
  }
  state.minimalContentDescription=minimalContentDescription;
  expandedContentDescription.append(",").append(r.getString(R.string.accessibility_quick_settings_open_settings,getTileLabel()));
  state.contentDescription=expandedContentDescription;
  CharSequence wifiName=state.label;
  if (state.connected) {
    wifiName=r.getString(R.string.accessibility_wifi_name,state.label);
  }
  state.dualLabelContentDescription=wifiName;
  state.expandedAccessibilityClassName=Button.class.getName();
  state.minimalAccessibilityClassName=Switch.class.getName();
}
