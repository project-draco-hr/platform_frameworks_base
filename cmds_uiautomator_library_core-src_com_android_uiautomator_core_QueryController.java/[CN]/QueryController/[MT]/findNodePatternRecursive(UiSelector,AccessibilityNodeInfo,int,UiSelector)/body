{
  if (subSelector.isMatchFor(fromNode,index)) {
    if (subSelector.isLeaf()) {
      if (mPatternIndexer == 0) {
        if (DEBUG)         Log.d(LOG_TAG,formatLog(String.format("%s",subSelector.dumpToString(false))));
        return fromNode;
      }
 else {
        if (DEBUG)         Log.d(LOG_TAG,formatLog(String.format("%s",subSelector.dumpToString(false))));
        mPatternCounter++;
        mPatternIndexer--;
        subSelector=originalPattern;
        mLogIndent=mLogParentIndent;
      }
    }
 else {
      if (DEBUG)       Log.d(LOG_TAG,formatLog(String.format("%s",subSelector.dumpToString(false))));
      if (subSelector.hasChildSelector()) {
        mLogIndent++;
        subSelector=subSelector.getChildSelector();
        if (subSelector == null) {
          Log.e(LOG_TAG,"Error: A child selector without content");
          return null;
        }
      }
 else       if (subSelector.hasParentSelector()) {
        mLogIndent++;
        subSelector=subSelector.getParentSelector();
        if (subSelector == null) {
          Log.e(LOG_TAG,"Error: A parent selector without content");
          return null;
        }
        fromNode=fromNode.getParent();
        if (fromNode == null)         return null;
      }
    }
  }
  int childCount=fromNode.getChildCount();
  boolean hasNullChild=false;
  for (int i=0; i < childCount; i++) {
    AccessibilityNodeInfo childNode=fromNode.getChild(i);
    if (childNode == null) {
      Log.w(LOG_TAG,String.format("AccessibilityNodeInfo returned a null child (%d of %d)",i,childCount));
      if (!hasNullChild) {
        Log.w(LOG_TAG,String.format("parent = %s",fromNode.toString()));
      }
      hasNullChild=true;
      continue;
    }
    if (!childNode.isVisibleToUser()) {
      if (DEBUG)       Log.d(LOG_TAG,String.format("Skipping invisible child: %s",childNode.toString()));
      continue;
    }
    AccessibilityNodeInfo retNode=findNodePatternRecursive(subSelector,childNode,i,originalPattern);
    if (retNode != null) {
      return retNode;
    }
  }
  return null;
}
