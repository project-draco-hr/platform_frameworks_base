{
  if (groupCode != 0) {
    return new MtpPropertyList(0,MtpConstants.RESPONSE_SPECIFICATION_BY_GROUP_UNSUPPORTED);
  }
  if (depth > 1) {
    return new MtpPropertyList(0,MtpConstants.RESPONSE_SPECIFICATION_BY_DEPTH_UNSUPPORTED);
  }
  String column=null;
  int type=MtpConstants.TYPE_UNDEFINED;
switch (property) {
case MtpConstants.PROPERTY_STORAGE_ID:
    type=MtpConstants.TYPE_UINT32;
  break;
case MtpConstants.PROPERTY_OBJECT_FORMAT:
column=Files.FileColumns.FORMAT;
type=MtpConstants.TYPE_UINT16;
break;
case MtpConstants.PROPERTY_PROTECTION_STATUS:
type=MtpConstants.TYPE_UINT16;
break;
case MtpConstants.PROPERTY_OBJECT_SIZE:
column=Files.FileColumns.SIZE;
type=MtpConstants.TYPE_UINT64;
break;
case MtpConstants.PROPERTY_OBJECT_FILE_NAME:
column=Files.FileColumns.DATA;
type=MtpConstants.TYPE_STR;
break;
case MtpConstants.PROPERTY_NAME:
column=MediaColumns.TITLE;
type=MtpConstants.TYPE_STR;
break;
case MtpConstants.PROPERTY_DATE_MODIFIED:
column=Files.FileColumns.DATE_MODIFIED;
type=MtpConstants.TYPE_STR;
break;
case MtpConstants.PROPERTY_DATE_ADDED:
column=Files.FileColumns.DATE_ADDED;
type=MtpConstants.TYPE_STR;
break;
case MtpConstants.PROPERTY_ORIGINAL_RELEASE_DATE:
column=Audio.AudioColumns.YEAR;
type=MtpConstants.TYPE_STR;
break;
case MtpConstants.PROPERTY_PARENT_OBJECT:
column=Files.FileColumns.PARENT;
type=MtpConstants.TYPE_UINT32;
break;
case MtpConstants.PROPERTY_PERSISTENT_UID:
type=MtpConstants.TYPE_UINT128;
break;
case MtpConstants.PROPERTY_DURATION:
column=Audio.AudioColumns.DURATION;
type=MtpConstants.TYPE_UINT32;
break;
case MtpConstants.PROPERTY_TRACK:
column=Audio.AudioColumns.TRACK;
type=MtpConstants.TYPE_UINT16;
break;
case MtpConstants.PROPERTY_DISPLAY_NAME:
column=MediaColumns.DISPLAY_NAME;
type=MtpConstants.TYPE_STR;
break;
case MtpConstants.PROPERTY_ARTIST:
type=MtpConstants.TYPE_STR;
break;
case MtpConstants.PROPERTY_ALBUM_NAME:
type=MtpConstants.TYPE_STR;
break;
case MtpConstants.PROPERTY_ALBUM_ARTIST:
column=Audio.AudioColumns.ALBUM_ARTIST;
type=MtpConstants.TYPE_STR;
break;
case MtpConstants.PROPERTY_GENRE:
type=MtpConstants.TYPE_STR;
break;
case MtpConstants.PROPERTY_COMPOSER:
column=Audio.AudioColumns.COMPOSER;
type=MtpConstants.TYPE_STR;
break;
case MtpConstants.PROPERTY_DESCRIPTION:
column=Images.ImageColumns.DESCRIPTION;
type=MtpConstants.TYPE_STR;
break;
default :
return new MtpPropertyList(0,MtpConstants.RESPONSE_OBJECT_PROP_NOT_SUPPORTED);
}
Cursor c=null;
try {
if (column != null) {
c=mMediaProvider.query(mObjectsUri,new String[]{Files.FileColumns._ID,column},(depth == 0 ? ID_WHERE : PARENT_WHERE),new String[]{Integer.toString(handle)},null);
if (c == null) {
return new MtpPropertyList(0,MtpConstants.RESPONSE_INVALID_OBJECT_HANDLE);
}
}
 else if (depth == 1) {
c=mMediaProvider.query(mObjectsUri,new String[]{Files.FileColumns._ID},PARENT_WHERE,new String[]{Integer.toString(handle)},null);
if (c == null) {
return new MtpPropertyList(0,MtpConstants.RESPONSE_INVALID_OBJECT_HANDLE);
}
}
int count=(c == null ? 1 : c.getCount());
MtpPropertyList result=new MtpPropertyList(count,MtpConstants.RESPONSE_OK);
for (int index=0; index < count; index++) {
if (c != null) {
c.moveToNext();
}
if (depth == 1) {
handle=(int)c.getLong(0);
}
switch (property) {
case MtpConstants.PROPERTY_STORAGE_ID:
result.setProperty(index,handle,property,MtpConstants.TYPE_UINT32,mStorageID);
break;
case MtpConstants.PROPERTY_PROTECTION_STATUS:
result.setProperty(index,handle,property,MtpConstants.TYPE_UINT16,0);
break;
case MtpConstants.PROPERTY_OBJECT_FILE_NAME:
String value=c.getString(1);
if (value != null) {
result.setProperty(index,handle,property,nameFromPath(value));
}
 else {
result.setResult(MtpConstants.RESPONSE_INVALID_OBJECT_HANDLE);
}
break;
case MtpConstants.PROPERTY_NAME:
String name=c.getString(1);
if (name == null) {
name=queryString(handle,Audio.PlaylistsColumns.NAME);
}
if (name == null) {
name=queryString(handle,Files.FileColumns.DATA);
if (name != null) {
name=nameFromPath(name);
}
}
if (name != null) {
result.setProperty(index,handle,property,name);
}
 else {
result.setResult(MtpConstants.RESPONSE_INVALID_OBJECT_HANDLE);
}
break;
case MtpConstants.PROPERTY_DATE_MODIFIED:
case MtpConstants.PROPERTY_DATE_ADDED:
result.setProperty(index,handle,property,formatDateTime(c.getInt(1)));
break;
case MtpConstants.PROPERTY_ORIGINAL_RELEASE_DATE:
int year=c.getInt(1);
String dateTime=Integer.toString(year) + "0101T000000";
result.setProperty(index,handle,property,dateTime);
break;
case MtpConstants.PROPERTY_PERSISTENT_UID:
long puid=mStorageID;
puid<<=32;
puid+=handle;
result.setProperty(index,handle,property,MtpConstants.TYPE_UINT128,puid);
break;
case MtpConstants.PROPERTY_TRACK:
result.setProperty(index,handle,property,MtpConstants.TYPE_UINT16,c.getInt(1) % 1000);
break;
case MtpConstants.PROPERTY_ARTIST:
result.setProperty(index,handle,property,queryAudio(handle,Audio.AudioColumns.ARTIST));
break;
case MtpConstants.PROPERTY_ALBUM_NAME:
result.setProperty(index,handle,property,queryAudio(handle,Audio.AudioColumns.ALBUM));
break;
case MtpConstants.PROPERTY_GENRE:
String genre=queryGenre(handle);
if (genre != null) {
result.setProperty(index,handle,property,genre);
}
 else {
result.setResult(MtpConstants.RESPONSE_INVALID_OBJECT_HANDLE);
}
break;
default :
if (type == MtpConstants.TYPE_STR) {
result.setProperty(index,handle,property,c.getString(1));
}
 else {
result.setProperty(index,handle,property,type,c.getLong(1));
}
}
}
return result;
}
 catch (RemoteException e) {
return new MtpPropertyList(0,MtpConstants.RESPONSE_GENERAL_ERROR);
}
 finally {
if (c != null) {
c.close();
}
}
}
