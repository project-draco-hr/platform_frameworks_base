{
  Log.d(TAG,"getObjectProperty: " + property);
  String column=null;
  boolean isString=false;
switch (property) {
case Mtp.Object.PROPERTY_STORAGE_ID:
    outIntValue[0]=mStorageID;
  return MTP_RESPONSE_OK;
case Mtp.Object.PROPERTY_OBJECT_FORMAT:
column=MtpObjects.ObjectColumns.FORMAT;
break;
case Mtp.Object.PROPERTY_PROTECTION_STATUS:
outIntValue[0]=0;
return MTP_RESPONSE_OK;
case Mtp.Object.PROPERTY_OBJECT_SIZE:
column=MtpObjects.ObjectColumns.SIZE;
break;
case Mtp.Object.PROPERTY_OBJECT_FILE_NAME:
column=MtpObjects.ObjectColumns.DATA;
isString=true;
break;
case Mtp.Object.PROPERTY_DATE_MODIFIED:
column=MtpObjects.ObjectColumns.DATE_MODIFIED;
break;
case Mtp.Object.PROPERTY_PARENT_OBJECT:
column=MtpObjects.ObjectColumns.PARENT;
break;
case Mtp.Object.PROPERTY_PERSISTENT_UID:
long puid=mStorageID;
puid<<=32;
puid+=handle;
outIntValue[0]=puid;
return MTP_RESPONSE_OK;
default :
return MTP_RESPONSE_OBJECT_PROP_NOT_SUPPORTED;
}
Cursor c=null;
try {
c=mMediaProvider.query(mObjectsUri,new String[]{MtpObjects.ObjectColumns._ID,column},ID_WHERE,new String[]{Integer.toString(handle)},null);
if (c != null && c.moveToNext()) {
if (isString) {
String value=c.getString(1);
int start=0;
if (property == Mtp.Object.PROPERTY_OBJECT_FILE_NAME) {
int lastSlash=value.lastIndexOf('/');
if (lastSlash >= 0) {
start=lastSlash + 1;
}
}
int end=value.length();
if (end - start > 255) {
end=start + 255;
}
value.getChars(start,end,outStringValue,0);
outStringValue[end - start]=0;
}
 else {
outIntValue[0]=c.getLong(1);
}
return MTP_RESPONSE_OK;
}
}
 catch (Exception e) {
return MTP_RESPONSE_GENERAL_ERROR;
}
 finally {
if (c != null) {
c.close();
}
}
return MTP_RESPONSE_INVALID_OBJECT_HANDLE;
}
