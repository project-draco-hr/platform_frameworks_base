{
  Log.d(TAG,"getObjectProperty: " + property);
  String column=null;
  boolean isString=false;
switch (property) {
case MtpConstants.PROPERTY_STORAGE_ID:
    outIntValue[0]=mStorageID;
  return MtpConstants.RESPONSE_OK;
case MtpConstants.PROPERTY_OBJECT_FORMAT:
column=Files.FileColumns.FORMAT;
break;
case MtpConstants.PROPERTY_PROTECTION_STATUS:
outIntValue[0]=0;
return MtpConstants.RESPONSE_OK;
case MtpConstants.PROPERTY_OBJECT_SIZE:
column=Files.FileColumns.SIZE;
break;
case MtpConstants.PROPERTY_OBJECT_FILE_NAME:
String value=queryString(handle,Files.FileColumns.DATA);
if (value != null) {
value=nameFromPath(value);
value.getChars(0,value.length(),outStringValue,0);
outStringValue[value.length()]=0;
return MtpConstants.RESPONSE_OK;
}
 else {
return MtpConstants.RESPONSE_INVALID_OBJECT_HANDLE;
}
case MtpConstants.PROPERTY_NAME:
String name=queryString(handle,MediaColumns.TITLE);
if (name == null) {
name=queryString(handle,Audio.PlaylistsColumns.NAME);
}
if (name == null) {
name=queryString(handle,Files.FileColumns.DATA);
if (name != null) {
name=nameFromPath(name);
}
}
if (name != null) {
name.getChars(0,name.length(),outStringValue,0);
outStringValue[name.length()]=0;
return MtpConstants.RESPONSE_OK;
}
 else {
return MtpConstants.RESPONSE_INVALID_OBJECT_HANDLE;
}
case MtpConstants.PROPERTY_DATE_MODIFIED:
column=Files.FileColumns.DATE_MODIFIED;
break;
case MtpConstants.PROPERTY_DATE_ADDED:
column=Files.FileColumns.DATE_ADDED;
break;
case MtpConstants.PROPERTY_ORIGINAL_RELEASE_DATE:
column=Audio.AudioColumns.YEAR;
break;
case MtpConstants.PROPERTY_PARENT_OBJECT:
column=Files.FileColumns.PARENT;
break;
case MtpConstants.PROPERTY_PERSISTENT_UID:
long puid=mStorageID;
puid<<=32;
puid+=handle;
outIntValue[0]=puid;
return MtpConstants.RESPONSE_OK;
case MtpConstants.PROPERTY_DURATION:
column=Audio.AudioColumns.DURATION;
break;
case MtpConstants.PROPERTY_TRACK:
if (queryInt(handle,Audio.AudioColumns.TRACK,outIntValue)) {
outIntValue[0]%=1000;
return MtpConstants.RESPONSE_OK;
}
 else {
return MtpConstants.RESPONSE_INVALID_OBJECT_HANDLE;
}
case MtpConstants.PROPERTY_DISPLAY_NAME:
column=MediaColumns.DISPLAY_NAME;
isString=true;
break;
case MtpConstants.PROPERTY_ARTIST:
column=Audio.AudioColumns.ARTIST;
isString=true;
break;
case MtpConstants.PROPERTY_ALBUM_NAME:
column=Audio.AudioColumns.ALBUM;
isString=true;
break;
case MtpConstants.PROPERTY_ALBUM_ARTIST:
column=Audio.AudioColumns.ALBUM_ARTIST;
isString=true;
break;
case MtpConstants.PROPERTY_GENRE:
String genre=queryGenre(handle);
if (genre != null) {
genre.getChars(0,genre.length(),outStringValue,0);
outStringValue[genre.length()]=0;
return MtpConstants.RESPONSE_OK;
}
 else {
return MtpConstants.RESPONSE_INVALID_OBJECT_HANDLE;
}
case MtpConstants.PROPERTY_COMPOSER:
column=Audio.AudioColumns.COMPOSER;
isString=true;
break;
case MtpConstants.PROPERTY_DESCRIPTION:
column=Images.ImageColumns.DESCRIPTION;
isString=true;
break;
default :
return MtpConstants.RESPONSE_OBJECT_PROP_NOT_SUPPORTED;
}
if (isString) {
String value=queryString(handle,column);
if (value != null) {
value.getChars(0,value.length(),outStringValue,0);
outStringValue[value.length()]=0;
return MtpConstants.RESPONSE_OK;
}
}
 else {
if (queryInt(handle,column,outIntValue)) {
return MtpConstants.RESPONSE_OK;
}
}
return MtpConstants.RESPONSE_INVALID_OBJECT_HANDLE;
}
