{
  if (TextUtils.isEmpty(searched)) {
    return Collections.emptyList();
  }
  String searchedLowerCase=searched.toLowerCase();
  List<AccessibilityNodeInfo> result=new ArrayList<AccessibilityNodeInfo>();
switch (virtualViewId) {
case View.NO_ID:
{
      findAccessibilityNodeInfosByTextInChild(searchedLowerCase,VIRTUAL_VIEW_ID_DECREMENT,result);
      findAccessibilityNodeInfosByTextInChild(searchedLowerCase,VIRTUAL_VIEW_ID_INPUT,result);
      findAccessibilityNodeInfosByTextInChild(searchedLowerCase,VIRTUAL_VIEW_ID_INCREMENT,result);
      return result;
    }
case VIRTUAL_VIEW_ID_DECREMENT:
case VIRTUAL_VIEW_ID_INCREMENT:
case VIRTUAL_VIEW_ID_INPUT:
{
    findAccessibilityNodeInfosByTextInChild(searchedLowerCase,virtualViewId,result);
    return result;
  }
}
return super.findAccessibilityNodeInfosByText(searched,virtualViewId);
}
