{
  super(context,attrs);
  setOrientation(VERTICAL);
  LayoutInflater inflater=(LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
  inflater.inflate(R.layout.number_picker,this,true);
  mHandler=new Handler();
  OnClickListener clickListener=new OnClickListener(){
    public void onClick(    View v){
      validateInput(mText);
      if (!mText.hasFocus())       mText.requestFocus();
      if (R.id.increment == v.getId()) {
        changeCurrent(mCurrent + 1);
      }
 else       if (R.id.decrement == v.getId()) {
        changeCurrent(mCurrent - 1);
      }
    }
  }
;
  OnFocusChangeListener focusListener=new OnFocusChangeListener(){
    public void onFocusChange(    View v,    boolean hasFocus){
      if (!hasFocus) {
        validateInput(v);
      }
    }
  }
;
  OnLongClickListener longClickListener=new OnLongClickListener(){
    /** 
 * We start the long click here but rely on the {@link NumberPickerButton}to inform us when the long click has ended.
 */
    public boolean onLongClick(    View v){
      mText.clearFocus();
      if (R.id.increment == v.getId()) {
        mIncrement=true;
        mHandler.post(mRunnable);
      }
 else       if (R.id.decrement == v.getId()) {
        mDecrement=true;
        mHandler.post(mRunnable);
      }
      return true;
    }
  }
;
  InputFilter inputFilter=new NumberPickerInputFilter();
  mNumberInputFilter=new NumberRangeKeyListener();
  mIncrementButton=(NumberPickerButton)findViewById(R.id.increment);
  mIncrementButton.setOnClickListener(clickListener);
  mIncrementButton.setOnLongClickListener(longClickListener);
  mIncrementButton.setNumberPicker(this);
  mDecrementButton=(NumberPickerButton)findViewById(R.id.decrement);
  mDecrementButton.setOnClickListener(clickListener);
  mDecrementButton.setOnLongClickListener(longClickListener);
  mDecrementButton.setNumberPicker(this);
  mText=(EditText)findViewById(R.id.timepicker_input);
  mText.setOnFocusChangeListener(focusListener);
  mText.setFilters(new InputFilter[]{inputFilter});
  mText.setRawInputType(InputType.TYPE_CLASS_NUMBER);
  if (!isEnabled()) {
    setEnabled(false);
  }
}
