{
  if (!mHasSelectorWheel) {
    super.onDraw(canvas);
    return;
  }
  final boolean showSelectorWheel=mHideWheelUntilFocused ? hasFocus() : true;
  float x=(mRight - mLeft) / 2;
  float y=mCurrentScrollOffset;
  if (showSelectorWheel && mVirtualButtonPressedDrawable != null && mScrollState == OnScrollListener.SCROLL_STATE_IDLE) {
    if (mDecrementVirtualButtonPressed) {
      mVirtualButtonPressedDrawable.setState(PRESSED_STATE_SET);
      mVirtualButtonPressedDrawable.setBounds(0,0,mRight,mTopSelectionDividerTop);
      mVirtualButtonPressedDrawable.draw(canvas);
    }
    if (mIncrementVirtualButtonPressed) {
      mVirtualButtonPressedDrawable.setState(PRESSED_STATE_SET);
      mVirtualButtonPressedDrawable.setBounds(0,mBottomSelectionDividerBottom,mRight,mBottom);
      mVirtualButtonPressedDrawable.draw(canvas);
    }
  }
  int[] selectorIndices=mSelectorIndices;
  for (int i=0; i < selectorIndices.length; i++) {
    int selectorIndex=selectorIndices[i];
    String scrollSelectorValue=mSelectorIndexToStringCache.get(selectorIndex);
    if ((showSelectorWheel && i != SELECTOR_MIDDLE_ITEM_INDEX) || (i == SELECTOR_MIDDLE_ITEM_INDEX && mInputText.getVisibility() != VISIBLE)) {
      canvas.drawText(scrollSelectorValue,x,y,mSelectorWheelPaint);
    }
    y+=mSelectorElementHeight;
  }
  if (showSelectorWheel && mSelectionDivider != null) {
    int topOfTopDivider=mTopSelectionDividerTop;
    int bottomOfTopDivider=topOfTopDivider + mSelectionDividerHeight;
    mSelectionDivider.setBounds(0,topOfTopDivider,mRight,bottomOfTopDivider);
    mSelectionDivider.draw(canvas);
    int bottomOfBottomDivider=mBottomSelectionDividerBottom;
    int topOfBottomDivider=bottomOfBottomDivider - mSelectionDividerHeight;
    mSelectionDivider.setBounds(0,topOfBottomDivider,mRight,bottomOfBottomDivider);
    mSelectionDivider.draw(canvas);
  }
}
