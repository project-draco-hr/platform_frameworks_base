{
  if (!mHasSelectorWheel || !isEnabled()) {
    return false;
  }
  final int action=event.getActionMasked();
switch (action) {
case MotionEvent.ACTION_DOWN:
{
      removeAllCallbacks();
      mInputText.setVisibility(View.INVISIBLE);
      mLastDownOrMoveEventY=mLastDownEventY=event.getY();
      mLastDownEventTime=event.getEventTime();
      mIngonreMoveEvents=false;
      mShowSoftInputOnTap=false;
      getParent().requestDisallowInterceptTouchEvent(true);
      if (!mFlingScroller.isFinished()) {
        mFlingScroller.forceFinished(true);
        mAdjustScroller.forceFinished(true);
        onScrollStateChange(OnScrollListener.SCROLL_STATE_IDLE);
      }
 else       if (!mAdjustScroller.isFinished()) {
        mFlingScroller.forceFinished(true);
        mAdjustScroller.forceFinished(true);
      }
 else       if (mLastDownEventY < mTopSelectionDividerTop) {
        hideSoftInput();
        postChangeCurrentByOneFromLongPress(false,ViewConfiguration.getLongPressTimeout());
      }
 else       if (mLastDownEventY > mBottomSelectionDividerBottom) {
        hideSoftInput();
        postChangeCurrentByOneFromLongPress(true,ViewConfiguration.getLongPressTimeout());
      }
 else {
        mShowSoftInputOnTap=true;
        postBeginSoftInputOnLongPressCommand();
      }
      return true;
    }
}
return false;
}
