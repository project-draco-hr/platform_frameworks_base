{
  if (!isEnabled() || !mFlingable) {
    return false;
  }
switch (event.getActionMasked()) {
case MotionEvent.ACTION_DOWN:
    mLastMotionEventY=mLastDownEventY=event.getY();
  removeAllCallbacks();
hideInputControls();
mBeginEditOnUpEvent=false;
mAdjustScrollerOnUpEvent=true;
if (mDrawSelectorWheel) {
boolean scrollersFinished=mFlingScroller.isFinished() && mAdjustScroller.isFinished();
if (!scrollersFinished) {
mFlingScroller.forceFinished(true);
mAdjustScroller.forceFinished(true);
onScrollStateChange(OnScrollListener.SCROLL_STATE_IDLE);
}
mBeginEditOnUpEvent=scrollersFinished;
mAdjustScrollerOnUpEvent=true;
return true;
}
if (isEventInViewHitRect(event,mInputText) || (!mIncrementButton.isShown() && isEventInViewHitRect(event,mIncrementButton)) || (!mDecrementButton.isShown() && isEventInViewHitRect(event,mDecrementButton))) {
mAdjustScrollerOnUpEvent=false;
setDrawSelectorWheel(true);
return true;
}
break;
case MotionEvent.ACTION_MOVE:
float currentMoveY=event.getY();
int deltaDownY=(int)Math.abs(currentMoveY - mLastDownEventY);
if (deltaDownY > mTouchSlop) {
mBeginEditOnUpEvent=false;
onScrollStateChange(OnScrollListener.SCROLL_STATE_TOUCH_SCROLL);
setDrawSelectorWheel(true);
return true;
}
break;
}
return false;
}
