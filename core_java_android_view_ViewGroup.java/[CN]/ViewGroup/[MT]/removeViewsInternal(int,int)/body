{
  final int end=start + count;
  if (start < 0 || count < 0 || end > mChildrenCount) {
    throw new IndexOutOfBoundsException();
  }
  final View focused=mFocused;
  final boolean detach=mAttachInfo != null;
  boolean clearChildFocus=false;
  final View[] children=mChildren;
  for (int i=start; i < end; i++) {
    final View view=children[i];
    if (mTransition != null) {
      mTransition.removeChild(this,view);
    }
    if (view == focused) {
      view.unFocus(null);
      clearChildFocus=true;
    }
    view.clearAccessibilityFocus();
    cancelTouchTarget(view);
    cancelHoverTarget(view);
    if (view.getAnimation() != null || (mTransitioningViews != null && mTransitioningViews.contains(view))) {
      addDisappearingView(view);
    }
 else     if (detach) {
      view.dispatchDetachedFromWindow();
    }
    if (view.hasTransientState()) {
      childHasTransientStateChanged(view,false);
    }
    needGlobalAttributesUpdate(false);
    dispatchViewRemoved(view);
  }
  removeFromArray(start,count);
  if (clearChildFocus) {
    clearChildFocus(focused);
    if (!rootViewRequestFocus()) {
      notifyGlobalFocusCleared(focused);
    }
  }
}
