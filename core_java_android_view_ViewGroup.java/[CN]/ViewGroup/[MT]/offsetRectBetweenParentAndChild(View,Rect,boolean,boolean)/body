{
  if (descendant == this) {
    return;
  }
  ViewParent theParent=descendant.mParent;
  while ((theParent != null) && (theParent instanceof View) && (theParent != this)) {
    if (offsetFromChildToParent) {
      rect.offset(descendant.mLeft - descendant.mScrollX,descendant.mTop - descendant.mScrollY);
      if (clipToBounds) {
        View p=(View)theParent;
        boolean intersected=rect.intersect(0,0,p.mRight - p.mLeft,p.mBottom - p.mTop);
        if (!intersected) {
          rect.setEmpty();
        }
      }
    }
 else {
      if (clipToBounds) {
        View p=(View)theParent;
        boolean intersected=rect.intersect(0,0,p.mRight - p.mLeft,p.mBottom - p.mTop);
        if (!intersected) {
          rect.setEmpty();
        }
      }
      rect.offset(descendant.mScrollX - descendant.mLeft,descendant.mScrollY - descendant.mTop);
    }
    descendant=(View)theParent;
    theParent=descendant.mParent;
  }
  if (theParent == this) {
    if (offsetFromChildToParent) {
      rect.offset(descendant.mLeft - descendant.mScrollX,descendant.mTop - descendant.mScrollY);
    }
 else {
      rect.offset(descendant.mScrollX - descendant.mLeft,descendant.mScrollY - descendant.mTop);
    }
  }
 else {
    throw new IllegalArgumentException("parameter must be a descendant of this view");
  }
}
