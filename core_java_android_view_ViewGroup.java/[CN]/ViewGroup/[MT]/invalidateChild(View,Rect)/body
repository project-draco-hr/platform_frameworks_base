{
  if (ViewDebug.TRACE_HIERARCHY) {
    ViewDebug.trace(this,ViewDebug.HierarchyTraceType.INVALIDATE_CHILD);
  }
  ViewParent parent=this;
  final AttachInfo attachInfo=mAttachInfo;
  if (attachInfo != null) {
    final int[] location=attachInfo.mInvalidateChildLocation;
    location[CHILD_LEFT_INDEX]=child.mLeft;
    location[CHILD_TOP_INDEX]=child.mTop;
    final boolean drawAnimation=(child.mPrivateFlags & DRAW_ANIMATION) == DRAW_ANIMATION;
    final boolean isOpaque=child.isOpaque();
    final int opaqueFlag=isOpaque ? DIRTY_OPAQUE : DIRTY;
    do {
      View view=null;
      if (parent instanceof View) {
        view=(View)parent;
      }
      if (drawAnimation) {
        if (view != null) {
          view.mPrivateFlags|=DRAW_ANIMATION;
        }
 else         if (parent instanceof ViewRoot) {
          ((ViewRoot)parent).mIsAnimating=true;
        }
      }
      if (view != null && (view.mPrivateFlags & DIRTY_MASK) != DIRTY) {
        view.mPrivateFlags=(view.mPrivateFlags & ~DIRTY_MASK) | opaqueFlag;
      }
      parent=parent.invalidateChildInParent(location,dirty);
    }
 while (parent != null);
  }
}
