{
  if (child.getParent() != null) {
    throw new IllegalStateException("The specified child already has a parent. " + "You must call removeView() on the child's parent first.");
  }
  if (mTransition != null) {
    mTransition.addChild(this,child);
  }
  if (!checkLayoutParams(params)) {
    params=generateLayoutParams(params);
  }
  if (preventRequestLayout) {
    child.mLayoutParams=params;
  }
 else {
    child.setLayoutParams(params);
  }
  if (index < 0) {
    index=mChildrenCount;
  }
  addInArray(child,index);
  if (preventRequestLayout) {
    child.assignParent(this);
  }
 else {
    child.mParent=this;
  }
  if (child.hasFocus()) {
    requestChildFocus(child,child.findFocus());
  }
  AttachInfo ai=mAttachInfo;
  if (ai != null) {
    boolean lastKeepOn=ai.mKeepScreenOn;
    ai.mKeepScreenOn=false;
    child.dispatchAttachedToWindow(mAttachInfo,(mViewFlags & VISIBILITY_MASK));
    if (ai.mKeepScreenOn) {
      needGlobalAttributesUpdate(true);
    }
    ai.mKeepScreenOn=lastKeepOn;
  }
  if (mOnHierarchyChangeListener != null) {
    mOnHierarchyChangeListener.onChildViewAdded(this,child);
  }
  if ((child.mViewFlags & DUPLICATE_PARENT_STATE) == DUPLICATE_PARENT_STATE) {
    mGroupFlags|=FLAG_NOTIFY_CHILDREN_ON_DRAWABLE_STATE_CHANGE;
  }
}
