{
  boolean handled=false;
  final boolean interceptHover;
  final int action=event.getAction();
  if (action == MotionEvent.ACTION_HOVER_EXIT) {
    interceptHover=true;
  }
 else {
    handled=super.dispatchHoverEvent(event);
    interceptHover=handled;
  }
  MotionEvent eventNoHistory=event;
  if (mHoveredChild != null) {
    final float x=event.getX();
    final float y=event.getY();
    if (interceptHover || !isTransformedTouchPointInView(x,y,mHoveredChild,null)) {
      eventNoHistory=obtainMotionEventNoHistoryOrSelf(eventNoHistory);
      eventNoHistory.setAction(MotionEvent.ACTION_HOVER_EXIT);
      handled|=dispatchTransformedGenericPointerEvent(eventNoHistory,mHoveredChild);
      eventNoHistory.setAction(action);
      mHoveredChild=null;
    }
 else {
      handled|=dispatchTransformedGenericPointerEvent(event,mHoveredChild);
    }
  }
  if (!interceptHover && mHoveredChild == null && (action == MotionEvent.ACTION_HOVER_ENTER || action == MotionEvent.ACTION_HOVER_MOVE)) {
    final int childrenCount=mChildrenCount;
    if (childrenCount != 0) {
      final View[] children=mChildren;
      final float x=event.getX();
      final float y=event.getY();
      for (int i=childrenCount - 1; i >= 0; i--) {
        final View child=children[i];
        if (!canViewReceivePointerEvents(child) || !isTransformedTouchPointInView(x,y,child,null)) {
          continue;
        }
        mHoveredChild=child;
        if (action == MotionEvent.ACTION_HOVER_MOVE) {
          eventNoHistory=obtainMotionEventNoHistoryOrSelf(eventNoHistory);
          eventNoHistory.setAction(MotionEvent.ACTION_HOVER_ENTER);
          handled|=dispatchTransformedGenericPointerEvent(eventNoHistory,child);
          eventNoHistory.setAction(action);
          handled|=dispatchTransformedGenericPointerEvent(eventNoHistory,child);
        }
 else {
          handled|=dispatchTransformedGenericPointerEvent(event,child);
        }
        break;
      }
    }
  }
  if (eventNoHistory != event) {
    eventNoHistory.recycle();
  }
  if (action == MotionEvent.ACTION_HOVER_EXIT) {
    handled|=super.dispatchHoverEvent(event);
  }
  return handled;
}
