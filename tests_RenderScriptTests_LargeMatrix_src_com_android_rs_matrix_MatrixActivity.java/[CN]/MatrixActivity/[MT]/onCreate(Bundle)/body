{
  super.onCreate(savedInstanceState);
  mRS=RenderScript.create(this);
  Type.Builder tb=new Type.Builder(mRS,Element.F32_4(mRS));
  tb.setX(2000);
  tb.setY(500);
  Type t=tb.create();
  mMatrix=Allocation.createTyped(mRS,t);
  mVectorIn=Allocation.createSized(mRS,Element.F32_4(mRS),500);
  mVectorOut=Allocation.createSized(mRS,Element.F32_4(mRS),500);
  mScript=new ScriptC_large_matrix(mRS,getResources(),R.raw.large_matrix);
  mScript.set_gMatrix(mMatrix);
  mRS.finish();
  long dt=java.lang.System.currentTimeMillis();
  for (int i=0; i < 100; i++) {
    mScript.forEach_multiply_row(mVectorIn,mVectorOut);
  }
  mRS.finish();
  dt=(java.lang.System.currentTimeMillis() - dt);
  Log.v("rs","LargeMatrix  mult time ms " + dt);
  float gflop=2000.f * 2000.f * 2.f / dt / 1000000.f;
  gflop*=100;
  Log.v("rs","LargeMatrix  gflop " + gflop);
}
