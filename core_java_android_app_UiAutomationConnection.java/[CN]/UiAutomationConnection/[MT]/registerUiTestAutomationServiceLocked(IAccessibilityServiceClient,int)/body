{
  IAccessibilityManager manager=IAccessibilityManager.Stub.asInterface(ServiceManager.getService(Context.ACCESSIBILITY_SERVICE));
  final AccessibilityServiceInfo info=new AccessibilityServiceInfo();
  info.eventTypes=AccessibilityEvent.TYPES_ALL_MASK;
  info.feedbackType=AccessibilityServiceInfo.FEEDBACK_GENERIC;
  info.flags|=AccessibilityServiceInfo.FLAG_INCLUDE_NOT_IMPORTANT_VIEWS | AccessibilityServiceInfo.FLAG_REPORT_VIEW_IDS | AccessibilityServiceInfo.FLAG_FORCE_DIRECT_BOOT_AWARE;
  info.setCapabilities(AccessibilityServiceInfo.CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT | AccessibilityServiceInfo.CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION | AccessibilityServiceInfo.CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY| AccessibilityServiceInfo.CAPABILITY_CAN_REQUEST_FILTER_KEY_EVENTS);
  try {
    manager.registerUiTestAutomationService(mToken,client,info,flags);
    mClient=client;
  }
 catch (  RemoteException re) {
    throw new IllegalStateException("Error while registering UiTestAutomationService.",re);
  }
}
