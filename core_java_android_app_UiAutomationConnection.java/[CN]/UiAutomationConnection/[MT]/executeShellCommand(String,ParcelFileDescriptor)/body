{
synchronized (mLock) {
    throwIfCalledByNotTrustedUidLocked();
    throwIfShutdownLocked();
    throwIfNotConnectedLocked();
  }
  Thread streamReader=new Thread(){
    public void run(){
      InputStream in=null;
      OutputStream out=null;
      java.lang.Process process=null;
      try {
        process=Runtime.getRuntime().exec(command);
        in=process.getInputStream();
        out=new FileOutputStream(sink.getFileDescriptor());
        final byte[] buffer=new byte[8192];
        while (true) {
          final int readByteCount=in.read(buffer);
          if (readByteCount < 0) {
            break;
          }
          out.write(buffer,0,readByteCount);
        }
      }
 catch (      IOException ioe) {
        throw new RuntimeException("Error running shell command",ioe);
      }
 finally {
        if (process != null) {
          process.destroy();
        }
        IoUtils.closeQuietly(out);
        IoUtils.closeQuietly(sink);
      }
    }
  }
;
  streamReader.start();
}
