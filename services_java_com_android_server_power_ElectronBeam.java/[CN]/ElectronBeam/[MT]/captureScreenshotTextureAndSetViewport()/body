{
  Bitmap bitmap=SurfaceControl.screenshot(mDisplayWidth,mDisplayHeight,0,ELECTRON_BEAM_LAYER - 1);
  if (bitmap == null) {
    Slog.e(TAG,"Could not take a screenshot!");
    return false;
  }
  try {
    if (!attachEglContext()) {
      return false;
    }
    try {
      if (!mTexNamesGenerated) {
        GLES10.glGenTextures(1,mTexNames,0);
        if (checkGlErrors("glGenTextures")) {
          return false;
        }
        mTexNamesGenerated=true;
      }
      GLES10.glBindTexture(GLES10.GL_TEXTURE_2D,mTexNames[0]);
      if (checkGlErrors("glBindTexture")) {
        return false;
      }
      float u=1.0f;
      float v=1.0f;
      GLUtils.texImage2D(GLES10.GL_TEXTURE_2D,0,bitmap,0);
      if (checkGlErrors("glTexImage2D, first try",false)) {
        int tw=nextPowerOfTwo(mDisplayWidth);
        int th=nextPowerOfTwo(mDisplayHeight);
        int format=GLUtils.getInternalFormat(bitmap);
        GLES10.glTexImage2D(GLES10.GL_TEXTURE_2D,0,format,tw,th,0,format,GLES10.GL_UNSIGNED_BYTE,null);
        if (checkGlErrors("glTexImage2D, second try")) {
          return false;
        }
        GLUtils.texSubImage2D(GLES10.GL_TEXTURE_2D,0,0,0,bitmap);
        if (checkGlErrors("glTexSubImage2D")) {
          return false;
        }
        u=(float)mDisplayWidth / tw;
        v=(float)mDisplayHeight / th;
      }
      mTexCoordBuffer.put(0,0f);
      mTexCoordBuffer.put(1,v);
      mTexCoordBuffer.put(2,0f);
      mTexCoordBuffer.put(3,0f);
      mTexCoordBuffer.put(4,u);
      mTexCoordBuffer.put(5,0f);
      mTexCoordBuffer.put(6,u);
      mTexCoordBuffer.put(7,v);
      GLES10.glViewport(0,0,mDisplayWidth,mDisplayHeight);
      GLES10.glMatrixMode(GLES10.GL_PROJECTION);
      GLES10.glLoadIdentity();
      GLES10.glOrthof(0,mDisplayWidth,0,mDisplayHeight,0,1);
      GLES10.glMatrixMode(GLES10.GL_MODELVIEW);
      GLES10.glLoadIdentity();
      GLES10.glMatrixMode(GLES10.GL_TEXTURE);
      GLES10.glLoadIdentity();
    }
  finally {
      detachEglContext();
    }
  }
  finally {
    bitmap.recycle();
  }
  return true;
}
