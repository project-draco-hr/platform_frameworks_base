{
  byte[] bcdNumber;
  byte[] byteTag;
  byte[] adnString;
  int footerOffset=recordSize - FOOTER_SIZE_BYTES;
  adnString=new byte[recordSize];
  for (int i=0; i < recordSize; i++) {
    adnString[i]=(byte)0xFF;
  }
  if (TextUtils.isEmpty(number)) {
    Log.w(LOG_TAG,"[buildAdnString] Empty dialing number");
    return adnString;
  }
 else   if (number.length() > (ADN_DIALING_NUMBER_END - ADN_DIALING_NUMBER_START + 1) * 2) {
    Log.w(LOG_TAG,"[buildAdnString] Max length of dialing number is 20");
    return null;
  }
 else   if (alphaTag != null && alphaTag.length() > footerOffset) {
    Log.w(LOG_TAG,"[buildAdnString] Max length of tag is " + footerOffset);
    return null;
  }
 else {
    bcdNumber=PhoneNumberUtils.numberToCalledPartyBCD(number);
    System.arraycopy(bcdNumber,0,adnString,footerOffset + ADN_TON_AND_NPI,bcdNumber.length);
    adnString[footerOffset + ADN_BCD_NUMBER_LENGTH]=(byte)(bcdNumber.length);
    adnString[footerOffset + ADN_CAPABILITY_ID]=(byte)0xFF;
    adnString[footerOffset + ADN_EXTENSION_ID]=(byte)0xFF;
    if (!TextUtils.isEmpty(alphaTag)) {
      byteTag=GsmAlphabet.stringToGsm8BitPacked(alphaTag);
      System.arraycopy(byteTag,0,adnString,0,byteTag.length);
    }
    return adnString;
  }
}
