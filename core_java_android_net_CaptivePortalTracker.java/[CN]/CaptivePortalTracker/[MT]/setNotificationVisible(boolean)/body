{
  if (!visible && !mNotificationShown) {
    return;
  }
  Resources r=Resources.getSystem();
  NotificationManager notificationManager=(NotificationManager)mContext.getSystemService(Context.NOTIFICATION_SERVICE);
  if (visible) {
    CharSequence title;
    CharSequence details;
switch (mNetworkInfo.getType()) {
case ConnectivityManager.TYPE_WIFI:
      title=r.getString(R.string.wifi_available_sign_in,0);
    details=r.getString(R.string.network_available_sign_in_detailed,mNetworkInfo.getExtraInfo());
  break;
case ConnectivityManager.TYPE_MOBILE:
title=r.getString(R.string.network_available_sign_in,0);
details=mTelephonyManager.getNetworkOperatorName();
break;
default :
title=r.getString(R.string.network_available_sign_in,0);
details=r.getString(R.string.network_available_sign_in_detailed,mNetworkInfo.getExtraInfo());
break;
}
Notification notification=new Notification();
notification.when=0;
notification.icon=com.android.internal.R.drawable.stat_notify_wifi_in_range;
notification.flags=Notification.FLAG_AUTO_CANCEL;
Intent intent=new Intent(Intent.ACTION_VIEW,Uri.parse(mUrl));
intent.setFlags(Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT | Intent.FLAG_ACTIVITY_NEW_TASK);
notification.contentIntent=PendingIntent.getActivity(mContext,0,intent,0);
notification.tickerText=title;
notification.setLatestEventInfo(mContext,title,details,notification.contentIntent);
notificationManager.notify(NOTIFICATION_ID,1,notification);
}
 else {
notificationManager.cancel(NOTIFICATION_ID,1);
}
mNotificationShown=visible;
}
