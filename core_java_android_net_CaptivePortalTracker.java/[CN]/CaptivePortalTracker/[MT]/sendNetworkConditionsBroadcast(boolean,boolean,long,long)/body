{
  if (Settings.Global.getInt(mContext.getContentResolver(),Settings.Global.WIFI_SCAN_ALWAYS_AVAILABLE,0) == 0) {
    if (DBG)     log("Don't send network conditions - lacking user consent.");
    return;
  }
  Intent latencyBroadcast=new Intent(ACTION_NETWORK_CONDITIONS_MEASURED);
switch (mNetworkInfo.getType()) {
case ConnectivityManager.TYPE_WIFI:
    WifiInfo currentWifiInfo=mWifiManager.getConnectionInfo();
  if (currentWifiInfo != null) {
    latencyBroadcast.putExtra(EXTRA_SSID,currentWifiInfo.getSSID());
    latencyBroadcast.putExtra(EXTRA_BSSID,currentWifiInfo.getBSSID());
  }
 else {
    if (DBG)     logw("network info is TYPE_WIFI but no ConnectionInfo found");
    return;
  }
break;
case ConnectivityManager.TYPE_MOBILE:
latencyBroadcast.putExtra(EXTRA_NETWORK_TYPE,mTelephonyManager.getNetworkType());
List<CellInfo> info=mTelephonyManager.getAllCellInfo();
if (info == null) return;
StringBuffer uniqueCellId=new StringBuffer();
int numRegisteredCellInfo=0;
for (CellInfo cellInfo : info) {
if (cellInfo.isRegistered()) {
numRegisteredCellInfo++;
if (numRegisteredCellInfo > 1) {
if (DBG) log("more than one registered CellInfo.  Can't " + "tell which is active.  Bailing.");
return;
}
if (cellInfo instanceof CellInfoCdma) {
CellIdentityCdma cellId=((CellInfoCdma)cellInfo).getCellIdentity();
latencyBroadcast.putExtra(EXTRA_CELL_ID,cellId);
}
 else if (cellInfo instanceof CellInfoGsm) {
CellIdentityGsm cellId=((CellInfoGsm)cellInfo).getCellIdentity();
latencyBroadcast.putExtra(EXTRA_CELL_ID,cellId);
}
 else if (cellInfo instanceof CellInfoLte) {
CellIdentityLte cellId=((CellInfoLte)cellInfo).getCellIdentity();
latencyBroadcast.putExtra(EXTRA_CELL_ID,cellId);
}
 else if (cellInfo instanceof CellInfoWcdma) {
CellIdentityWcdma cellId=((CellInfoWcdma)cellInfo).getCellIdentity();
latencyBroadcast.putExtra(EXTRA_CELL_ID,cellId);
}
 else {
if (DBG) logw("Registered cellinfo is unrecognized");
return;
}
}
}
break;
default :
return;
}
latencyBroadcast.putExtra(EXTRA_CONNECTIVITY_TYPE,mNetworkInfo.getType());
latencyBroadcast.putExtra(EXTRA_RESPONSE_RECEIVED,responseReceived);
latencyBroadcast.putExtra(EXTRA_REQUEST_TIMESTAMP_MS,requestTimestampMs);
if (responseReceived) {
latencyBroadcast.putExtra(EXTRA_IS_CAPTIVE_PORTAL,isCaptivePortal);
latencyBroadcast.putExtra(EXTRA_RESPONSE_TIMESTAMP_MS,responseTimestampMs);
}
mContext.sendBroadcast(latencyBroadcast,PERMISSION_ACCESS_NETWORK_CONDITIONS);
}
