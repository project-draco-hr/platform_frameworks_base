{
  Looper looper;
  if ((looper=Looper.myLooper()) == null) {
    looper=Looper.getMainLooper();
  }
  if (looper != null) {
    mHandler=new Handler(looper){
      @Override public void handleMessage(      Message msg){
switch (msg.what) {
case MSSG_FOCUS_CHANGE:
          OnAudioFocusChangeListener listener=null;
synchronized (mFocusListenerLock) {
          listener=findFocusListener((String)msg.obj);
        }
      if (listener != null) {
        Log.d(TAG,"AudioManager dispatching onAudioFocusChange(" + msg.what + ") for "+ msg.obj);
        listener.onAudioFocusChange(msg.arg1);
      }
    break;
case MSSG_RECORDING_CONFIG_CHANGE:
  AudioRecordingCallback singleCallback=null;
ArrayList<AudioRecordingCallback> multipleCallbacks=null;
synchronized (mRecordCallbackLock) {
if ((mRecordCallbackList != null) && (mRecordCallbackList.size() != 0)) {
  if (mRecordCallbackList.size() == 1) {
    singleCallback=mRecordCallbackList.get(0);
  }
 else {
    multipleCallbacks=new ArrayList<AudioRecordingCallback>(mRecordCallbackList);
  }
}
}
if (singleCallback != null) {
singleCallback.onRecordConfigChanged();
}
 else if (multipleCallbacks != null) {
for (int i=0; i < multipleCallbacks.size(); i++) {
multipleCallbacks.get(i).onRecordConfigChanged();
}
}
break;
default :
Log.e(TAG,"Unknown event " + msg.what);
}
}
}
;
}
 else {
mHandler=null;
}
}
