{
  if (requestAttributes == null) {
    throw new IllegalArgumentException("Illegal null AudioAttributes argument");
  }
  if ((durationHint < AUDIOFOCUS_GAIN) || (durationHint > AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE)) {
    throw new IllegalArgumentException("Invalid duration hint");
  }
  if (flags != (flags & AUDIOFOCUS_FLAGS_SYSTEM)) {
    throw new IllegalArgumentException("Illegal flags 0x" + Integer.toHexString(flags).toUpperCase());
  }
  if (((flags & AUDIOFOCUS_FLAG_DELAY_OK) == AUDIOFOCUS_FLAG_DELAY_OK) && (l == null)) {
    throw new IllegalArgumentException("Illegal null focus listener when flagged as accepting delayed focus grant");
  }
  if (((flags & AUDIOFOCUS_FLAG_LOCK) == AUDIOFOCUS_FLAG_LOCK) && (ap == null)) {
    throw new IllegalArgumentException("Illegal null audio policy when locking audio focus");
  }
  int status=AUDIOFOCUS_REQUEST_FAILED;
  registerAudioFocusListener(l);
  IAudioService service=getService();
  try {
    status=service.requestAudioFocus(requestAttributes,durationHint,mICallBack,mAudioFocusDispatcher,getIdForAudioFocusListener(l),getContext().getOpPackageName(),flags,ap != null ? ap.cb() : null);
  }
 catch (  RemoteException e) {
    throw e.rethrowFromSystemServer();
  }
  return status;
}
