{
  final String videoItemFileName=INPUT_FILE_PATH + "H264_BP_1080x720_30fps_800kbps_1_17.mp4";
  final String imageItemFileName=INPUT_FILE_PATH + "IMG_1600x1200.jpg";
  final int renderingMode=MediaItem.RENDERING_MODE_BLACK_BORDER;
  final int transitionBehavior=Transition.BEHAVIOR_MIDDLE_FAST;
  long averageTime=0;
  final String[] loggingInfo=new String[1];
  final MediaVideoItem mediaVideoItem=new MediaVideoItem(mVideoEditor,"mediaItem1",videoItemFileName,renderingMode);
  mediaVideoItem.setExtractBoundaries(0,10000);
  mVideoEditor.addMediaItem(mediaVideoItem);
  final MediaImageItem mediaImageItem=new MediaImageItem(mVideoEditor,"mediaItem2",imageItemFileName,10000,renderingMode);
  mVideoEditor.addMediaItem(mediaImageItem);
  final TransitionCrossfade transitionCrossFade=new TransitionCrossfade("transitionCrossFade",mediaVideoItem,mediaImageItem,5000,transitionBehavior);
  mVideoEditor.addTransition(transitionCrossFade);
  for (int i=0; i < NUM_OF_ITERATIONS; i++) {
    final long duration1=SystemClock.uptimeMillis();
    mVideoEditor.generatePreview(new MediaProcessingProgressListener(){
      public void onProgress(      Object item,      int action,      int progress){
      }
    }
);
    final long duration2=SystemClock.uptimeMillis();
    mVideoEditor.removeTransition(transitionCrossFade.getId());
    mVideoEditor.addTransition(transitionCrossFade);
    averageTime+=(duration2 - duration1);
  }
  final long durationToAddObjects=averageTime;
  final float timeTaken=(float)durationToAddObjects * 1.0f / (float)NUM_OF_ITERATIONS;
  loggingInfo[0]="Time taken to Generate Preview with transition\t" + timeTaken;
  writeTimingInfo("testPerformanceGeneratePreviewWithTransitions:",loggingInfo);
}
