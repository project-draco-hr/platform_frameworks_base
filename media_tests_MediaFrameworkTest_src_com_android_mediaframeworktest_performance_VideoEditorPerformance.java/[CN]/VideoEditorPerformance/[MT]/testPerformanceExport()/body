{
  final int renderingMode=MediaItem.RENDERING_MODE_BLACK_BORDER;
  final int outHeight=MediaProperties.HEIGHT_480;
  final int outBitrate=MediaProperties.BITRATE_256K;
  final int outVcodec=MediaProperties.VCODEC_H264BP;
  final String[] loggingInfo=new String[1];
  final String outFilename=mVideoEditorHelper.createRandomFile(mVideoEditor.getPath() + "/") + ".3gp";
  final String videoItemFileName1=INPUT_FILE_PATH + "H264_BP_1080x720_30fps_12Mbps_AACLC_44.1khz_64kbps_s_1_17.mp4";
  final String imageItemFileName1=INPUT_FILE_PATH + "IMG_1600x1200.jpg";
  final String videoItemFileName2=INPUT_FILE_PATH + "H264_BP_640x480_15fps_1200Kbps_AACLC_48KHz_32kbps_m_1_17.3gp";
  final String imageItemFileName2=INPUT_FILE_PATH + "IMG_176x144.jpg";
  final String videoItemFileName3=INPUT_FILE_PATH + "MPEG4_SP_720x480_30fps_280kbps_AACLC_48kHz_161kbps_s_0_26.mp4";
  final String overlayFile=INPUT_FILE_PATH + "IMG_640x480_Overlay1.png";
  final String audioTrackFilename=INPUT_FILE_PATH + "AMRNB_8KHz_12.2Kbps_m_1_17.3gp";
  final String maskFilename=INPUT_FILE_PATH + "TransitionSpiral_QVGA.jpg";
  final MediaVideoItem mediaItem1=new MediaVideoItem(mVideoEditor,"m1",videoItemFileName1,renderingMode);
  mediaItem1.setExtractBoundaries(0,20000);
  mVideoEditor.addMediaItem(mediaItem1);
  final MediaImageItem mediaItem2=new MediaImageItem(mVideoEditor,"m2",imageItemFileName1,10000,renderingMode);
  mVideoEditor.addMediaItem(mediaItem2);
  final MediaVideoItem mediaItem3=new MediaVideoItem(mVideoEditor,"m3",videoItemFileName2,renderingMode);
  mediaItem3.setExtractBoundaries(0,20000);
  mVideoEditor.addMediaItem(mediaItem3);
  final MediaImageItem mediaItem4=new MediaImageItem(mVideoEditor,"m4",imageItemFileName2,10000,renderingMode);
  mVideoEditor.addMediaItem(mediaItem4);
  final MediaVideoItem mediaItem5=new MediaVideoItem(mVideoEditor,"m5",videoItemFileName3,renderingMode);
  mediaItem5.setExtractBoundaries(0,20000);
  mVideoEditor.addMediaItem(mediaItem5);
  final TransitionAlpha transition1=mVideoEditorHelper.createTAlpha("transition1",null,mediaItem1,2000,Transition.BEHAVIOR_LINEAR,maskFilename,50,true);
  mVideoEditor.addTransition(transition1);
  final TransitionSliding transition2And3=mVideoEditorHelper.createTSliding("transition2",mediaItem2,mediaItem3,4000,Transition.BEHAVIOR_MIDDLE_FAST,TransitionSliding.DIRECTION_RIGHT_OUT_LEFT_IN);
  mVideoEditor.addTransition(transition2And3);
  final TransitionCrossfade transition3And4=mVideoEditorHelper.createTCrossFade("transition3",mediaItem3,mediaItem4,3500,Transition.BEHAVIOR_MIDDLE_SLOW);
  mVideoEditor.addTransition(transition3And4);
  final TransitionFadeBlack transition4And5=mVideoEditorHelper.createTFadeBlack("transition4",mediaItem4,mediaItem5,3500,Transition.BEHAVIOR_SPEED_DOWN);
  mVideoEditor.addTransition(transition4And5);
  final EffectColor effectColor1=mVideoEditorHelper.createEffectItem(mediaItem1,"effect1",1000,4000,EffectColor.TYPE_SEPIA,0);
  mediaItem1.addEffect(effectColor1);
  final Bitmap mBitmap=mVideoEditorHelper.getBitmap(overlayFile,640,480);
  final OverlayFrame overlayFrame=mVideoEditorHelper.createOverlay(mediaItem3,"overlay",mBitmap,1000,4000);
  mediaItem3.addOverlay(overlayFrame);
  final EffectColor effectColor2=mVideoEditorHelper.createEffectItem(mediaItem2,"effect2",8000,2000,EffectColor.TYPE_NEGATIVE,0);
  mediaItem2.addEffect(effectColor2);
  final EffectColor effectColor3=mVideoEditorHelper.createEffectItem(mediaItem3,"effect3",5000,3000,EffectColor.TYPE_COLOR,EffectColor.PINK);
  mediaItem3.addEffect(effectColor3);
  final EffectColor effectColor4=mVideoEditorHelper.createEffectItem(mediaItem4,"effect4",2000,1000,EffectColor.TYPE_FIFTIES,0);
  mediaItem4.addEffect(effectColor4);
  final Rect startRect=new Rect((mediaItem4.getHeight() / 3),(mediaItem4.getWidth() / 3),(mediaItem4.getHeight() / 2),(mediaItem4.getWidth() / 2));
  final Rect endRect=new Rect(0,0,mediaItem4.getWidth(),mediaItem4.getHeight());
  final EffectKenBurns kbEffectOnMediaItem=new EffectKenBurns(mediaItem4,"KBOnM2",startRect,endRect,4000,3000);
  mediaItem4.addEffect(kbEffectOnMediaItem);
  final AudioTrack audioTrack=mVideoEditorHelper.createAudio(mVideoEditor,"audioTrack",audioTrackFilename);
  mVideoEditor.addAudioTrack(audioTrack);
  audioTrack.enableLoop();
  float timeTaken=0.0f;
  final long beginTime=SystemClock.uptimeMillis();
  try {
    mVideoEditor.export(outFilename,outHeight,outBitrate,new ExportProgressListener(){
      public void onProgress(      VideoEditor ve,      String outFileName,      int progress){
      }
    }
);
  }
 catch (  Exception e) {
    assertTrue("Error in Export" + e.toString(),false);
  }
  mVideoEditorHelper.checkDeleteExistingFile(outFilename);
  timeTaken=calculateTimeTaken(beginTime,1);
  loggingInfo[0]="Time taken to do ONE export of storyboard duration " + mVideoEditor.getDuration() + " is :"+ timeTaken;
  writeTimingInfo("testPerformanceExport (in mSec)",loggingInfo);
  mVideoEditorHelper.deleteProject(new File(mVideoEditor.getPath()));
}
