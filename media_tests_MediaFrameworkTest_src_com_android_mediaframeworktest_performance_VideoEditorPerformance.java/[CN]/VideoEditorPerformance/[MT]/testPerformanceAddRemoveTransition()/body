{
  final String videoItemFileName1=INPUT_FILE_PATH + "H264_BP_1080x720_30fps_800kbps_1_17.mp4";
  final int videoItemStartTime1=0;
  final int videoItemEndTime1=20000;
  final String videoItemFileName2=INPUT_FILE_PATH + "MPEG4_SP_640x480_15fps_512kbps_AACLC_48khz_132kbps_s_0_26.mp4";
  final int videoItemStartTime2=0;
  final int videoItemEndTime2=20000;
  final int renderingMode=MediaItem.RENDERING_MODE_BLACK_BORDER;
  final int transitionDuration=5000;
  final int transitionBehavior=Transition.BEHAVIOR_MIDDLE_FAST;
  final String[] loggingInfo=new String[3];
  int timeTaken=0;
  final MediaVideoItem[] mediaVideoItem=new MediaVideoItem[(NUM_OF_ITERATIONS * 10) + 1];
  for (int i=0; i < (NUM_OF_ITERATIONS * 10); i+=2) {
    try {
      mediaVideoItem[i]=new MediaVideoItem(mVideoEditor,"m" + i,videoItemFileName1,renderingMode);
      mediaVideoItem[i + 1]=new MediaVideoItem(mVideoEditor,"m" + (i + 1),videoItemFileName2,renderingMode);
      mediaVideoItem[i].setExtractBoundaries(videoItemStartTime1,videoItemEndTime1);
      mediaVideoItem[i + 1].setExtractBoundaries(videoItemStartTime2,videoItemEndTime2);
    }
 catch (    Exception e1) {
      assertTrue("Can not create Video Object Item with file name = " + e1.toString(),false);
    }
    mVideoEditor.addMediaItem(mediaVideoItem[i]);
    mVideoEditor.addMediaItem(mediaVideoItem[i + 1]);
  }
  mediaVideoItem[(NUM_OF_ITERATIONS * 10)]=new MediaVideoItem(mVideoEditor,"m" + (NUM_OF_ITERATIONS * 10),videoItemFileName1,renderingMode);
  mediaVideoItem[(NUM_OF_ITERATIONS * 10)].setExtractBoundaries(videoItemStartTime1,videoItemEndTime1);
  mVideoEditor.addMediaItem(mediaVideoItem[(NUM_OF_ITERATIONS * 10)]);
  final TransitionCrossfade tranCrossfade[]=new TransitionCrossfade[(NUM_OF_ITERATIONS * 10)];
  long beginTime=SystemClock.uptimeMillis();
  for (int i=0; i < (NUM_OF_ITERATIONS * 10); i++) {
    tranCrossfade[i]=new TransitionCrossfade("transition" + i,mediaVideoItem[i],mediaVideoItem[i + 1],transitionDuration,transitionBehavior);
  }
  timeTaken=calculateTimeTaken(beginTime,(NUM_OF_ITERATIONS * 10));
  loggingInfo[0]="Time taken to Create CrossFade Transition :" + timeTaken;
  beginTime=SystemClock.uptimeMillis();
  for (int i=0; i < (NUM_OF_ITERATIONS * 10); i++) {
    mVideoEditor.addTransition(tranCrossfade[i]);
  }
  timeTaken=calculateTimeTaken(beginTime,(NUM_OF_ITERATIONS * 10));
  loggingInfo[1]="\n\tTime taken to add CrossFade Transition :" + timeTaken;
  beginTime=SystemClock.uptimeMillis();
  for (int i=0; i < (NUM_OF_ITERATIONS * 10); i++) {
    assertEquals("Removing Transitions",tranCrossfade[i],mVideoEditor.removeTransition(tranCrossfade[i].getId()));
  }
  timeTaken=calculateTimeTaken(beginTime,(NUM_OF_ITERATIONS * 10));
  loggingInfo[2]="\n\tTime taken to remove CrossFade Transition :" + timeTaken;
  writeTimingInfo("testPerformanceAddRemoveTransition (in mSec)",loggingInfo);
}
