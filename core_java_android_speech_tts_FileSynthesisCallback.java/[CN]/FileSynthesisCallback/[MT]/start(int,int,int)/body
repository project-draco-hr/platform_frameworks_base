{
  if (DBG) {
    Log.d(TAG,"FileSynthesisRequest.start(" + sampleRateInHz + ","+ audioFormat+ ","+ channelCount+ ")");
  }
  FileChannel fileChannel=null;
synchronized (mStateLock) {
    if (mStatusCode == TextToSpeech.STOPPED) {
      if (DBG)       Log.d(TAG,"Request has been aborted.");
      return errorCodeOnStop();
    }
    if (mStatusCode != TextToSpeech.SUCCESS) {
      if (DBG)       Log.d(TAG,"Error was raised");
      return TextToSpeech.ERROR;
    }
    if (mStarted) {
      Log.e(TAG,"Start called twice");
      return TextToSpeech.ERROR;
    }
    mStarted=true;
    mSampleRateInHz=sampleRateInHz;
    mAudioFormat=audioFormat;
    mChannelCount=channelCount;
    if (mDispatcher != null) {
      mDispatcher.dispatchOnStart();
    }
    fileChannel=mFileChannel;
  }
  try {
    fileChannel.write(ByteBuffer.allocate(WAV_HEADER_LENGTH));
    return TextToSpeech.SUCCESS;
  }
 catch (  IOException ex) {
    Log.e(TAG,"Failed to write wav header to output file descriptor",ex);
synchronized (mStateLock) {
      cleanUp();
      mStatusCode=TextToSpeech.ERROR_OUTPUT;
    }
    return TextToSpeech.ERROR;
  }
}
