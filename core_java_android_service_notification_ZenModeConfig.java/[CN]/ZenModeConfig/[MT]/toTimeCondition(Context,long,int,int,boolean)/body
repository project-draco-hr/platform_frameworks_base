{
  final int num;
  String summary, line1, line2;
  final CharSequence formattedTime=getFormattedTime(context,time,userHandle);
  final Resources res=context.getResources();
  if (minutes < 60) {
    num=minutes;
    int summaryResId=shortVersion ? R.plurals.zen_mode_duration_minutes_summary_short : R.plurals.zen_mode_duration_minutes_summary;
    summary=res.getQuantityString(summaryResId,num,num,formattedTime);
    int line1ResId=shortVersion ? R.plurals.zen_mode_duration_minutes_short : R.plurals.zen_mode_duration_minutes;
    line1=res.getQuantityString(line1ResId,num,num,formattedTime);
    line2=res.getString(R.string.zen_mode_until,formattedTime);
  }
 else   if (minutes < DAY_MINUTES) {
    num=Math.round(minutes / 60f);
    int summaryResId=shortVersion ? R.plurals.zen_mode_duration_hours_summary_short : R.plurals.zen_mode_duration_hours_summary;
    summary=res.getQuantityString(summaryResId,num,num,formattedTime);
    int line1ResId=shortVersion ? R.plurals.zen_mode_duration_hours_short : R.plurals.zen_mode_duration_hours;
    line1=res.getQuantityString(line1ResId,num,num,formattedTime);
    line2=res.getString(R.string.zen_mode_until,formattedTime);
  }
 else {
    summary=line1=line2=res.getString(R.string.zen_mode_until,formattedTime);
  }
  final Uri id=toCountdownConditionId(time);
  return new Condition(id,summary,line1,line2,0,Condition.STATE_TRUE,Condition.FLAG_RELEVANT_NOW);
}
