{
  int type=parser.getEventType();
  if (type != XmlPullParser.START_TAG)   return null;
  String tag=parser.getName();
  if (!ZEN_TAG.equals(tag))   return null;
  final ZenModeConfig rt=new ZenModeConfig();
  final int version=safeInt(parser,ZEN_ATT_VERSION,XML_VERSION);
  final ArrayList<ComponentName> conditionComponents=new ArrayList<ComponentName>();
  final ArrayList<Uri> conditionIds=new ArrayList<Uri>();
  while ((type=parser.next()) != XmlPullParser.END_DOCUMENT) {
    tag=parser.getName();
    if (type == XmlPullParser.END_TAG && ZEN_TAG.equals(tag)) {
      if (!conditionComponents.isEmpty()) {
        rt.conditionComponents=conditionComponents.toArray(new ComponentName[conditionComponents.size()]);
        rt.conditionIds=conditionIds.toArray(new Uri[conditionIds.size()]);
      }
      return rt;
    }
    if (type == XmlPullParser.START_TAG) {
      if (ALLOW_TAG.equals(tag)) {
        rt.allowCalls=safeBoolean(parser,ALLOW_ATT_CALLS,false);
        rt.allowMessages=safeBoolean(parser,ALLOW_ATT_MESSAGES,false);
        rt.allowEvents=safeBoolean(parser,ALLOW_ATT_EVENTS,DEFAULT_ALLOW_EVENTS);
        rt.allowFrom=safeInt(parser,ALLOW_ATT_FROM,SOURCE_ANYONE);
        if (rt.allowFrom < SOURCE_ANYONE || rt.allowFrom > MAX_SOURCE) {
          throw new IndexOutOfBoundsException("bad source in config:" + rt.allowFrom);
        }
      }
 else       if (SLEEP_TAG.equals(tag)) {
        final String mode=parser.getAttributeValue(null,SLEEP_ATT_MODE);
        rt.sleepMode=isValidSleepMode(mode) ? mode : null;
        final int startHour=safeInt(parser,SLEEP_ATT_START_HR,0);
        final int startMinute=safeInt(parser,SLEEP_ATT_START_MIN,0);
        final int endHour=safeInt(parser,SLEEP_ATT_END_HR,0);
        final int endMinute=safeInt(parser,SLEEP_ATT_END_MIN,0);
        rt.sleepStartHour=isValidHour(startHour) ? startHour : 0;
        rt.sleepStartMinute=isValidMinute(startMinute) ? startMinute : 0;
        rt.sleepEndHour=isValidHour(endHour) ? endHour : 0;
        rt.sleepEndMinute=isValidMinute(endMinute) ? endMinute : 0;
      }
 else       if (CONDITION_TAG.equals(tag)) {
        final ComponentName component=safeComponentName(parser,CONDITION_ATT_COMPONENT);
        final Uri conditionId=safeUri(parser,CONDITION_ATT_ID);
        if (component != null && conditionId != null) {
          conditionComponents.add(component);
          conditionIds.add(conditionId);
        }
      }
 else       if (EXIT_CONDITION_TAG.equals(tag)) {
        rt.exitCondition=readConditionXml(parser);
        if (rt.exitCondition != null) {
          rt.exitConditionComponent=safeComponentName(parser,EXIT_CONDITION_ATT_COMPONENT);
        }
      }
    }
  }
  throw new IllegalStateException("Failed to reach END_DOCUMENT");
}
