{
  if (PackageManager.PERMISSION_GRANTED == mContext.checkCallingOrSelfPermission(android.Manifest.permission.MEDIA_CONTENT_CONTROL)) {
    if (DEBUG_RC) {
      Log.d(TAG,"ok to register Rcd: has MEDIA_CONTENT_CONTROL permission");
    }
    return RCD_REG_SUCCESS_PERMISSION;
  }
  if (listenerComp != null) {
    final long ident=Binder.clearCallingIdentity();
    try {
      final int currentUser=ActivityManager.getCurrentUser();
      final String enabledNotifListeners=Settings.Secure.getStringForUser(mContext.getContentResolver(),Settings.Secure.ENABLED_NOTIFICATION_LISTENERS,currentUser);
      if (enabledNotifListeners != null) {
        final String[] components=enabledNotifListeners.split(":");
        for (int i=0; i < components.length; i++) {
          final ComponentName component=ComponentName.unflattenFromString(components[i]);
          if (component != null) {
            if (listenerComp.equals(component)) {
              if (DEBUG_RC) {
                Log.d(TAG,"ok to register RCC: " + component + " is authorized notification listener");
              }
              return RCD_REG_SUCCESS_ENABLED_NOTIF;
            }
          }
        }
      }
      if (DEBUG_RC) {
        Log.d(TAG,"not ok to register RCD, " + listenerComp + " is not in list of ENABLED_NOTIFICATION_LISTENERS");
      }
    }
  finally {
      Binder.restoreCallingIdentity(ident);
    }
  }
  return RCD_REG_FAILURE;
}
