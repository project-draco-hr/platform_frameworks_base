{
  int type;
  final int innerDepth=parser.getDepth() + 1;
  int depth;
  while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && ((depth=parser.getDepth()) >= innerDepth || type != XmlPullParser.END_TAG)) {
    if (type != XmlPullParser.START_TAG) {
      continue;
    }
    if (depth > innerDepth || !parser.getName().equals("item")) {
      continue;
    }
    final TypedArray a=obtainAttributes(r,theme,attrs,R.styleable.AnimationDrawableItem);
    final int duration=a.getInt(R.styleable.AnimationDrawableItem_duration,-1);
    if (duration < 0) {
      throw new XmlPullParserException(parser.getPositionDescription() + ": <item> tag requires a 'duration' attribute");
    }
    Drawable dr=a.getDrawable(R.styleable.AnimationDrawableItem_drawable);
    a.recycle();
    if (dr == null) {
      while ((type=parser.next()) == XmlPullParser.TEXT) {
      }
      if (type != XmlPullParser.START_TAG) {
        throw new XmlPullParserException(parser.getPositionDescription() + ": <item> tag requires a 'drawable' attribute or child tag" + " defining a drawable");
      }
      dr=Drawable.createFromXmlInner(r,parser,attrs,theme);
    }
    mAnimationState.addFrame(dr,duration);
    if (dr != null) {
      dr.setCallback(this);
    }
  }
}
