{
  final int widthMode=MeasureSpec.getMode(widthSpec);
  final int heightMode=MeasureSpec.getMode(heightSpec);
  if (DEBUG && widthMode != MeasureSpec.AT_MOST) {
    Log.w(TAG,"onMeasure: widthSpec " + MeasureSpec.toString(widthSpec) + " should be AT_MOST");
  }
  if (DEBUG && heightMode != MeasureSpec.AT_MOST) {
    Log.w(TAG,"onMeasure: heightSpec " + MeasureSpec.toString(heightSpec) + " should be AT_MOST");
  }
  final int widthSize=MeasureSpec.getSize(widthSpec);
  final int heightSize=MeasureSpec.getSize(heightSpec);
  int maxWidth=widthSize;
  int maxHeight=heightSize;
  final int count=getChildCount();
  for (int i=0; i < count; i++) {
    final View child=getChildAt(i);
    final LayoutParams lp=(LayoutParams)child.getLayoutParams();
    if (lp.maxWidth > 0 && lp.maxWidth < maxWidth) {
      maxWidth=lp.maxWidth;
    }
    if (lp.maxHeight > 0 && lp.maxHeight < maxHeight) {
      maxHeight=lp.maxHeight;
    }
  }
  final int wPadding=getPaddingLeft() + getPaddingRight();
  final int hPadding=getPaddingTop() + getPaddingBottom();
  maxWidth=Math.max(0,maxWidth - wPadding);
  maxHeight=Math.max(0,maxHeight - hPadding);
  int width=widthMode == MeasureSpec.EXACTLY ? widthSize : 0;
  int height=heightMode == MeasureSpec.EXACTLY ? heightSize : 0;
  for (int i=0; i < count; i++) {
    final View child=getChildAt(i);
    final LayoutParams lp=(LayoutParams)child.getLayoutParams();
    final int childWidthSpec=makeChildMeasureSpec(maxWidth,lp.width);
    final int childHeightSpec=makeChildMeasureSpec(maxHeight,lp.height);
    child.measure(childWidthSpec,childHeightSpec);
    width=Math.max(width,Math.min(child.getMeasuredWidth(),widthSize - wPadding));
    height=Math.max(height,Math.min(child.getMeasuredHeight(),heightSize - hPadding));
  }
  setMeasuredDimension(width + wPadding,height + hPadding);
}
