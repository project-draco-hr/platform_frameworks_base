{
switch (e.getActionMasked()) {
case MotionEvent.ACTION_DOWN:
    if (!mShowDecor) {
      return false;
    }
  if (!mDragging && (e.getToolType(e.getActionIndex()) != MotionEvent.TOOL_TYPE_MOUSE || (e.getButtonState() & MotionEvent.BUTTON_PRIMARY) != 0)) {
    mDragging=true;
    mWindowOriginalBounds.set(getActivityBounds());
    mLeftMouseButtonReleased=false;
    mStartDragX=e.getRawX();
    mStartDragY=e.getRawY();
  }
break;
case MotionEvent.ACTION_MOVE:
if (mDragging && !mLeftMouseButtonReleased) {
if (e.getToolType(e.getActionIndex()) == MotionEvent.TOOL_TYPE_MOUSE && (e.getButtonState() & MotionEvent.BUTTON_PRIMARY) == 0) {
  mLeftMouseButtonReleased=true;
  break;
}
mWindowDragBounds.set(mWindowOriginalBounds);
mWindowDragBounds.offset(Math.round(e.getRawX() - mStartDragX),Math.round(e.getRawY() - mStartDragY));
setActivityBounds(mWindowDragBounds);
}
break;
case MotionEvent.ACTION_UP:
if (mDragging) {
mDragging=false;
return true;
}
break;
case MotionEvent.ACTION_CANCEL:
if (mDragging) {
mDragging=false;
setActivityBounds(mWindowOriginalBounds);
return true;
}
break;
}
return mDragging;
}
