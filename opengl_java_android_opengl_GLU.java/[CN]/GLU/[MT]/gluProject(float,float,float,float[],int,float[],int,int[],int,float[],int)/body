{
  float[] scratch=sScratch;
synchronized (scratch) {
    final int M_OFFSET=0;
    final int V_OFFSET=16;
    final int V2_OFFSET=20;
    Matrix.multiplyMM(scratch,M_OFFSET,project,projectOffset,model,modelOffset);
    scratch[V_OFFSET + 0]=objX;
    scratch[V_OFFSET + 1]=objY;
    scratch[V_OFFSET + 2]=objZ;
    scratch[V_OFFSET + 3]=1.0f;
    Matrix.multiplyMV(scratch,V2_OFFSET,scratch,M_OFFSET,scratch,V_OFFSET);
    float w=scratch[V2_OFFSET + 3];
    if (w == 0.0f) {
      return GL10.GL_FALSE;
    }
    float rw=1.0f / w;
    win[winOffset]=view[viewOffset] + view[viewOffset + 2] * (scratch[V2_OFFSET + 0] * rw + 1.0f) * 0.5f;
    win[winOffset + 1]=view[viewOffset + 1] + view[viewOffset + 3] * (scratch[V2_OFFSET + 1] * rw + 1.0f) * 0.5f;
    win[winOffset + 2]=(scratch[V2_OFFSET + 2] * rw + 1.0f) * 0.5f;
  }
  return GL10.GL_TRUE;
}
