{
  float fx=centerX - eyeX;
  float fy=centerY - eyeY;
  float fz=centerZ - eyeZ;
  float rlf=1.0f / Matrix.length(fx,fy,fz);
  fx*=rlf;
  fy*=rlf;
  fz*=rlf;
  float rlup=1.0f / Matrix.length(upX,upY,upZ);
  upX*=rlup;
  upY*=rlup;
  upZ*=rlup;
  float sx=fy * upZ - fz * upY;
  float sy=fz * upX - fx * upZ;
  float sz=fx * upY - fy * upX;
  float ux=sy * fz - sz * fy;
  float uy=sz * fx - sx * fz;
  float uz=sx * fy - sy * fx;
  float[] m=new float[16];
  m[0]=sx;
  m[1]=ux;
  m[2]=-fx;
  m[3]=0.0f;
  m[4]=sy;
  m[5]=uy;
  m[6]=-fy;
  m[7]=0.0f;
  m[8]=sz;
  m[9]=uz;
  m[10]=-fz;
  m[11]=0.0f;
  m[12]=0.0f;
  m[13]=0.0f;
  m[14]=0.0f;
  m[15]=1.0f;
  gl.glMultMatrixf(m,0);
  gl.glTranslatef(-eyeX,-eyeY,-eyeZ);
}
