{
  float[] pm=new float[16];
  Matrix.multiplyMM(pm,0,project,projectOffset,model,modelOffset);
  float[] invPM=new float[16];
  if (!Matrix.invertM(invPM,0,pm,0)) {
    return GL10.GL_FALSE;
  }
  float[] v=new float[4];
  v[0]=2.0f * (winX - view[viewOffset + 0]) / view[viewOffset + 2] - 1.0f;
  v[1]=2.0f * (winY - view[viewOffset + 1]) / view[viewOffset + 3] - 1.0f;
  v[2]=2.0f * winZ - 1.0f;
  v[3]=1.0f;
  float[] v2=new float[4];
  Matrix.multiplyMV(v2,0,invPM,0,v,0);
  obj[objOffset]=v2[0];
  obj[objOffset + 1]=v2[1];
  obj[objOffset + 2]=v2[2];
  return GL10.GL_TRUE;
}
