{
  int numSharedElements=sharedElementNames.size();
  int targetIndex=0;
  for (int i=0; i < numSharedElements; i++) {
    String name=sharedElementNames.get(i);
    int index=mTargetSharedNames.indexOf(name);
    if (index >= 0) {
      if (index != targetIndex) {
        View temp=mSharedElements.get(index);
        mSharedElements.set(index,mSharedElements.get(targetIndex));
        mSharedElements.set(targetIndex,temp);
        mTargetSharedNames.set(index,mTargetSharedNames.get(targetIndex));
        mTargetSharedNames.set(targetIndex,name);
      }
      targetIndex++;
    }
  }
  for (int i=mSharedElements.size() - 1; i >= targetIndex; i--) {
    mSharedElements.remove(i);
    mTargetSharedNames.remove(i);
  }
  Rect epicenter=null;
  if (!mTargetSharedNames.isEmpty() && mTargetSharedNames.get(0).equals(sharedElementNames.get(0))) {
    epicenter=calcEpicenter(mSharedElements.get(0));
  }
  mEpicenterCallback.setEpicenter(epicenter);
}
