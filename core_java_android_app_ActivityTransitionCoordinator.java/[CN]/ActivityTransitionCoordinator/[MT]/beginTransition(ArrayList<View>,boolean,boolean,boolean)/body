{
  Transition sharedElementTransition=null;
  if (transitionSharedElement) {
    sharedElementTransition=getSharedElementTransition(isEnter);
    if (!isEnter && sharedElementTransition == null) {
      onSharedElementTransitionEnd();
    }
  }
  Transition viewsTransition=null;
  if (transitionViews) {
    viewsTransition=getViewsTransition(transitioningViews,isEnter);
    if (!isEnter && viewsTransition == null) {
      onExitTransitionEnd();
    }
  }
  Transition transition=null;
  if (sharedElementTransition == null) {
    transition=viewsTransition;
  }
 else   if (viewsTransition == null) {
    transition=sharedElementTransition;
  }
 else {
    TransitionSet set=new TransitionSet();
    set.addTransition(sharedElementTransition);
    set.addTransition(viewsTransition);
    transition=set;
  }
  if (transition != null) {
    TransitionManager.beginDelayedTransition(getDecor(),transition);
    if (transitionSharedElement && !mSharedElements.isEmpty()) {
      mSharedElements.get(0).invalidate();
    }
 else     if (transitionViews && !transitioningViews.isEmpty()) {
      transitioningViews.get(0).invalidate();
    }
  }
  return transition;
}
