{
  final int[] tempLoc=new int[2];
  if (sharedElementState != null) {
    for (int i=0; i < mSharedElements.size(); i++) {
      View sharedElement=mSharedElements.get(i);
      View parent=(View)sharedElement.getParent();
      parent.getLocationOnScreen(tempLoc);
      String name=mTargetSharedNames.get(i);
      setSharedElementState(sharedElement,name,sharedElementState,tempLoc);
      sharedElement.requestLayout();
    }
  }
  mListener.onCaptureSharedElementStart(mTargetSharedNames,mSharedElements,acceptedOverlayViews);
  getDecor().getViewTreeObserver().addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener(){
    @Override public boolean onPreDraw(){
      getDecor().getViewTreeObserver().removeOnPreDrawListener(this);
      mListener.onCaptureSharedElementEnd(mTargetSharedNames,mSharedElements,acceptedOverlayViews);
      mSharedElementTransitionStarted=true;
      return true;
    }
  }
);
}
