{
  Bundle sharedElementBundle=transitionArgs.getBundle(name);
  if (sharedElementBundle == null) {
    return;
  }
  if (view instanceof ImageView) {
    int scaleTypeInt=sharedElementBundle.getInt(KEY_SCALE_TYPE,-1);
    if (scaleTypeInt >= 0) {
      ImageView imageView=(ImageView)view;
      ImageView.ScaleType scaleType=SCALE_TYPE_VALUES[scaleTypeInt];
      imageView.setScaleType(scaleType);
      if (scaleType == ImageView.ScaleType.MATRIX) {
        float[] matrixValues=sharedElementBundle.getFloatArray(KEY_IMAGE_MATRIX);
        tempMatrix.setValues(matrixValues);
        imageView.setImageMatrix(tempMatrix);
      }
    }
  }
  float z=sharedElementBundle.getFloat(KEY_TRANSLATION_Z);
  view.setTranslationZ(z);
  float left=sharedElementBundle.getFloat(KEY_SCREEN_LEFT);
  float top=sharedElementBundle.getFloat(KEY_SCREEN_TOP);
  float right=sharedElementBundle.getFloat(KEY_SCREEN_RIGHT);
  float bottom=sharedElementBundle.getFloat(KEY_SCREEN_BOTTOM);
  if (decorLoc != null) {
    left-=decorLoc[0];
    top-=decorLoc[1];
  }
 else {
    ViewGroup parent=(ViewGroup)view.getParent();
    tempMatrix.reset();
    parent.transformMatrixToLocal(tempMatrix);
    tempRect.set(left,top,right,bottom);
    tempMatrix.mapRect(tempRect);
    float leftInParent=tempRect.left;
    float topInParent=tempRect.top;
    view.getInverseMatrix().mapRect(tempRect);
    float width=tempRect.width();
    float height=tempRect.height();
    view.setLeft(0);
    view.setTop(0);
    view.setRight(Math.round(width));
    view.setBottom(Math.round(height));
    tempRect.set(0,0,width,height);
    view.getMatrix().mapRect(tempRect);
    left=leftInParent - tempRect.left + parent.getScrollX();
    top=topInParent - tempRect.top + parent.getScrollY();
    right=left + width;
    bottom=top + height;
  }
  int x=Math.round(left);
  int y=Math.round(top);
  int width=Math.round(right) - x;
  int height=Math.round(bottom) - y;
  int widthSpec=View.MeasureSpec.makeMeasureSpec(width,View.MeasureSpec.EXACTLY);
  int heightSpec=View.MeasureSpec.makeMeasureSpec(height,View.MeasureSpec.EXACTLY);
  view.measure(widthSpec,heightSpec);
  view.layout(x,y,x + width,y + height);
}
