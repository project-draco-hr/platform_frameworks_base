{
  if (!mAllSharedElementNames.isEmpty()) {
    ArrayMap<String,View> sharedElements=new ArrayMap<String,View>();
    getDecor().findNamedViews(sharedElements);
    if (accepted != null) {
      for (int i=0; i < localNames.size(); i++) {
        String localName=localNames.get(i);
        String acceptedName=accepted.get(i);
        if (!localName.equals(acceptedName)) {
          View view=sharedElements.remove(localName);
          if (view != null) {
            sharedElements.put(acceptedName,view);
          }
        }
      }
    }
    sharedElements.retainAll(mAllSharedElementNames);
    mListener.remapSharedElements(mAllSharedElementNames,sharedElements);
    sharedElements.retainAll(mAllSharedElementNames);
    for (int i=0; i < mAllSharedElementNames.size(); i++) {
      String name=mAllSharedElementNames.get(i);
      View sharedElement=sharedElements.get(name);
      if (sharedElement != null) {
        if (sharedElement.getViewName() == null) {
          throw new IllegalArgumentException("Shared elements must have " + "non-null viewNames");
        }
        mSharedElementNames.add(name);
        mSharedElements.add(sharedElement);
      }
    }
  }
}
