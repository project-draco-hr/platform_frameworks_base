{
  Pair<View,String>[] sharedElements=mListener.getSharedElementsMapping();
  mSharedElements.clear();
  mTargetSharedNames.clear();
  if (sharedElements == null) {
    ArrayMap<String,View> map=new ArrayMap<String,View>();
    if (getViewsTransition() != null) {
      setViewVisibility(mEnteringViews,View.VISIBLE);
    }
    getDecor().findSharedElements(map);
    if (getViewsTransition() != null) {
      setViewVisibility(mEnteringViews,View.INVISIBLE);
    }
    for (int i=0; i < map.size(); i++) {
      View view=map.valueAt(i);
      String name=map.keyAt(i);
      mSharedElements.add(view);
      mTargetSharedNames.add(name);
    }
  }
 else {
    for (int i=0; i < sharedElements.length; i++) {
      Pair<View,String> viewStringPair=sharedElements[i];
      View view=viewStringPair.first;
      String name=viewStringPair.second;
      mSharedElements.add(view);
      mTargetSharedNames.add(name);
    }
  }
}
