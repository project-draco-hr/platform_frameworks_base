{
  if (opaquePart != null) {
    if (this.scheme == null) {
      throw new UnsupportedOperationException("An opaque URI must have a scheme.");
    }
    return new OpaqueUri(scheme,opaquePart,fragment);
  }
 else {
    PathPart path=this.path;
    if (path == null || path == PathPart.NULL) {
      path=PathPart.EMPTY;
    }
 else {
      if (hasSchemeOrAuthority()) {
        path=PathPart.makeAbsolute(path);
      }
    }
    return new HierarchicalUri(scheme,authority,path,query,fragment);
  }
}
