{
  mCursors=cursors;
  int length=mCursors.length;
  mSortColumns=new int[length];
  for (int i=0; i < length; i++) {
    if (mCursors[i] == null)     continue;
    mCursors[i].registerDataSetObserver(mObserver);
    mCursors[i].moveToFirst();
    mSortColumns[i]=mCursors[i].getColumnIndexOrThrow(sortcolumn);
  }
  mCursor=null;
  String smallest="";
  for (int j=0; j < length; j++) {
    if (mCursors[j] == null || mCursors[j].isAfterLast())     continue;
    String current=mCursors[j].getString(mSortColumns[j]);
    if (mCursor == null || current.compareToIgnoreCase(smallest) < 0) {
      smallest=current;
      mCursor=mCursors[j];
    }
  }
  for (int i=mRowNumCache.length - 1; i >= 0; i--) {
    mRowNumCache[i]=-2;
  }
  mCurRowNumCache=new int[ROWCACHESIZE][length];
}
