{
  final int action=event.getAction();
  mMouseX=event.getX();
  mMouseY=event.getY();
  boolean handled=false;
switch (action) {
case MotionEvent.ACTION_DOWN:
    removeCallbacks(mLockTimerActions);
  mFingerDown=true;
setGrabbedState(OnTriggerListener.CENTER_HANDLE);
{
float x=mMouseX - mUnlockHalo.getX();
float y=mMouseY - mUnlockHalo.getY();
float dist=(float)Math.hypot(x,y);
if (dist < mUnlockHalo.getWidth() * 0.5f) {
  if (mLockState == STATE_READY) {
    mLockState=STATE_START_ATTEMPT;
  }
}
}
handled=true;
break;
case MotionEvent.ACTION_MOVE:
handled=true;
break;
case MotionEvent.ACTION_UP:
if (DBG) Log.v(TAG,"ACTION_UP");
mFingerDown=false;
postDelayed(mLockTimerActions,RESET_TIMEOUT);
setGrabbedState(OnTriggerListener.NO_HANDLE);
waveUpdateFrame(mMouseX,mMouseY,mFingerDown);
handled=true;
break;
case MotionEvent.ACTION_CANCEL:
mFingerDown=false;
handled=true;
break;
}
invalidate();
return handled ? true : super.onTouchEvent(event);
}
