{
  CameraMetadata metadata=new CameraMetadata();
  assertTrue(metadata.isEmpty());
  CaptureRequest request=new CaptureRequest();
  assertTrue(request.isEmpty());
  int status=mCameraUser.createDefaultRequest(TEMPLATE_PREVIEW,metadata);
  assertEquals(CameraBinderTestUtils.NO_ERROR,status);
  assertFalse(metadata.isEmpty());
  request.swap(metadata);
  assertFalse(request.isEmpty());
  assertTrue(metadata.isEmpty());
  SurfaceTexture surfaceTexture=new SurfaceTexture(0);
  surfaceTexture.setDefaultBufferSize(640,480);
  Surface surface=new Surface(surfaceTexture);
  int streamId=mCameraUser.createStream(10,20,30,surface);
  assertEquals(0,streamId);
  request.addTarget(surface);
  int requestIdStreaming=mCameraUser.submitRequest(request,true);
  assertTrue("Request IDs should be non-negative",requestIdStreaming >= 0);
  status=mCameraUser.waitUntilIdle();
  assertEquals("waitUntilIdle is invalid operation when there is active repeating request",CameraBinderTestUtils.INVALID_OPERATION,status);
  status=mCameraUser.cancelRequest(requestIdStreaming);
  assertEquals(CameraBinderTestUtils.NO_ERROR,status);
  status=mCameraUser.waitUntilIdle();
  assertEquals(CameraBinderTestUtils.NO_ERROR,status);
}
