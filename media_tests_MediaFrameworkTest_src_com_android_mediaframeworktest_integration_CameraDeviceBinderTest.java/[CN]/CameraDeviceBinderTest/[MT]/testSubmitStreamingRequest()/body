{
  CaptureRequest.Builder builder=createDefaultBuilder(true);
  CaptureRequest request=builder.build();
  SubmitInfo requestInfo1=submitCameraRequest(request,false);
  SubmitInfo requestInfoStreaming=submitCameraRequest(request,true);
  assertNotSame("Request IDs should be unique for multiple requests",requestInfo1.getRequestId(),requestInfoStreaming.getRequestId());
  try {
    long lastFrameNumber=mCameraUser.cancelRequest(-1);
    fail("Expected exception");
  }
 catch (  ServiceSpecificException e) {
    assertEquals("Invalid request IDs should not be cancellable",ICameraService.ERROR_ILLEGAL_ARGUMENT,e.errorCode);
  }
  try {
    long lastFrameNumber=mCameraUser.cancelRequest(requestInfo1.getRequestId());
    fail("Expected exception");
  }
 catch (  ServiceSpecificException e) {
    assertEquals("Non-streaming request IDs should not be cancellable",ICameraService.ERROR_ILLEGAL_ARGUMENT,e.errorCode);
  }
  long lastFrameNumber=mCameraUser.cancelRequest(requestInfoStreaming.getRequestId());
}
