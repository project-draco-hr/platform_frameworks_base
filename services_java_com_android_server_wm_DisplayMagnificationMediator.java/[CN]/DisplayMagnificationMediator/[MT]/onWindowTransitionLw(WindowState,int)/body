{
  DisplayState displayState=mDisplayStates.get(windowState.getDisplayId());
  if (displayState == null) {
    return;
  }
  if (DEBUG_WINDOW_TRANSITIONS) {
    Slog.i(LOG_TAG,"Window transition: " + PhoneWindowManager.windowTransitionToString(transition) + " displayId: "+ windowState.getDisplayId());
  }
  final boolean magnifying=displayState.isMagnifyingLw();
  if (magnifying) {
switch (transition) {
case WindowManagerPolicy.TRANSIT_ACTIVITY_OPEN:
case WindowManagerPolicy.TRANSIT_TASK_OPEN:
case WindowManagerPolicy.TRANSIT_TASK_TO_FRONT:
case WindowManagerPolicy.TRANSIT_WALLPAPER_OPEN:
case WindowManagerPolicy.TRANSIT_WALLPAPER_CLOSE:
case WindowManagerPolicy.TRANSIT_WALLPAPER_INTRA_OPEN:
{
        mHandler.obtainMessage(MESSAGE_NOTIFY_USER_CONTEXT_CHANGED,displayState.mClient).sendToTarget();
      }
  }
}
final int type=windowState.mAttrs.type;
if (type == WindowManager.LayoutParams.TYPE_NAVIGATION_BAR || type == WindowManager.LayoutParams.TYPE_INPUT_METHOD || type == WindowManager.LayoutParams.TYPE_INPUT_METHOD_DIALOG || type == WindowManager.LayoutParams.TYPE_KEYGUARD || type == WindowManager.LayoutParams.TYPE_KEYGUARD_DIALOG) {
switch (transition) {
case WindowManagerPolicy.TRANSIT_ENTER:
case WindowManagerPolicy.TRANSIT_SHOW:
case WindowManagerPolicy.TRANSIT_EXIT:
case WindowManagerPolicy.TRANSIT_HIDE:
{
      displayState.mViewport.recomputeBoundsLw();
    }
  break;
}
}
switch (transition) {
case WindowManagerPolicy.TRANSIT_ENTER:
case WindowManagerPolicy.TRANSIT_SHOW:
{
if (!magnifying) {
  break;
}
switch (type) {
case WindowManager.LayoutParams.TYPE_APPLICATION:
case WindowManager.LayoutParams.TYPE_APPLICATION_PANEL:
case WindowManager.LayoutParams.TYPE_APPLICATION_MEDIA:
case WindowManager.LayoutParams.TYPE_APPLICATION_SUB_PANEL:
case WindowManager.LayoutParams.TYPE_APPLICATION_ATTACHED_DIALOG:
case WindowManager.LayoutParams.TYPE_SEARCH_BAR:
case WindowManager.LayoutParams.TYPE_PHONE:
case WindowManager.LayoutParams.TYPE_SYSTEM_ALERT:
case WindowManager.LayoutParams.TYPE_TOAST:
case WindowManager.LayoutParams.TYPE_SYSTEM_OVERLAY:
case WindowManager.LayoutParams.TYPE_PRIORITY_PHONE:
case WindowManager.LayoutParams.TYPE_SYSTEM_DIALOG:
case WindowManager.LayoutParams.TYPE_KEYGUARD_DIALOG:
case WindowManager.LayoutParams.TYPE_SYSTEM_ERROR:
case WindowManager.LayoutParams.TYPE_VOLUME_OVERLAY:
case WindowManager.LayoutParams.TYPE_NAVIGATION_BAR_PANEL:
case WindowManager.LayoutParams.TYPE_RECENTS_OVERLAY:
{
    Rect magnifiedRegionBounds=mTempRect1;
    displayState.getMagnifiedFrameInContentCoordsLw(magnifiedRegionBounds);
    Rect touchableRegionBounds=mTempRect;
    windowState.getTouchableRegion(mTempRegion);
    mTempRegion.getBounds(touchableRegionBounds);
    if (!magnifiedRegionBounds.intersect(touchableRegionBounds)) {
      SomeArgs args=SomeArgs.obtain();
      args.arg1=displayState.mClient;
      args.argi1=touchableRegionBounds.left;
      args.argi2=touchableRegionBounds.top;
      args.argi3=touchableRegionBounds.right;
      args.argi4=touchableRegionBounds.bottom;
      mHandler.obtainMessage(MESSAGE_NOTIFY_RECTANGLE_ON_SCREEN_REQUESTED,args).sendToTarget();
    }
  }
break;
}
break;
}
}
}
