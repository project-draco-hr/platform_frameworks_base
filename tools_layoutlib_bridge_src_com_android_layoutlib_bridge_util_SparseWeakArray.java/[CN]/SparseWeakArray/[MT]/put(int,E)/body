{
  int i=binarySearch(mKeys,0,mSize,key);
  if (i >= 0) {
    mValues[i]=new WeakReference(value);
  }
 else {
    i=~i;
    if (i < mSize && (mValues[i] == DELETED || mValues[i].get() == null)) {
      mKeys[i]=key;
      mValues[i]=new WeakReference(value);
      return;
    }
    if (mSize >= mKeys.length && (mGarbage || hasReclaimedRefs())) {
      gc();
      i=~binarySearch(mKeys,0,mSize,key);
    }
    if (mSize >= mKeys.length) {
      int n=ArrayUtils.idealIntArraySize(mSize + 1);
      int[] nkeys=new int[n];
      WeakReference<?>[] nvalues=new WeakReference[n];
      System.arraycopy(mKeys,0,nkeys,0,mKeys.length);
      System.arraycopy(mValues,0,nvalues,0,mValues.length);
      mKeys=nkeys;
      mValues=nvalues;
    }
    if (mSize - i != 0) {
      System.arraycopy(mKeys,i,mKeys,i + 1,mSize - i);
      System.arraycopy(mValues,i,mValues,i + 1,mSize - i);
    }
    mKeys[i]=key;
    mValues[i]=new WeakReference(value);
    mSize++;
  }
}
