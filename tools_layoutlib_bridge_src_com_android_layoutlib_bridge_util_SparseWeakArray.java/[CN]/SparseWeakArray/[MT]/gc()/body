{
  int n=mSize;
  int o=0;
  long[] keys=mKeys;
  WeakReference<?>[] values=mValues;
  for (int i=0; i < n; i++) {
    WeakReference<?> val=values[i];
    if (val != DELETED && val.get() != null) {
      if (i != o) {
        keys[o]=keys[i];
        values[o]=val;
      }
      o++;
    }
  }
  mGarbage=false;
  mSize=o;
  int newSize=ArrayUtils.idealLongArraySize(mSize);
  if (newSize < mKeys.length) {
    long[] nkeys=new long[newSize];
    WeakReference<?>[] nvalues=new WeakReference[newSize];
    System.arraycopy(mKeys,0,nkeys,0,newSize);
    System.arraycopy(mValues,0,nvalues,0,newSize);
    mKeys=nkeys;
    mValues=nvalues;
  }
}
