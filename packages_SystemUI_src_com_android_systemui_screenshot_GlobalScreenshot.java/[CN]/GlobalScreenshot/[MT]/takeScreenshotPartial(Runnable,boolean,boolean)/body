{
  mWindowManager.addView(mScreenshotLayout,mWindowLayoutParams);
  mScreenshotSelectorView.setOnTouchListener(new View.OnTouchListener(){
    @Override public boolean onTouch(    View v,    MotionEvent event){
      ScreenshotSelectorView view=(ScreenshotSelectorView)v;
switch (event.getAction()) {
case MotionEvent.ACTION_DOWN:
        view.startSelection((int)event.getX(),(int)event.getY());
      return true;
case MotionEvent.ACTION_MOVE:
    view.updateSelection((int)event.getX(),(int)event.getY());
  return true;
case MotionEvent.ACTION_UP:
view.setVisibility(View.GONE);
mWindowManager.removeView(mScreenshotLayout);
final Rect rect=view.getSelectionRect();
if (rect != null) {
if (rect.width() != 0 && rect.height() != 0) {
mScreenshotLayout.post(new Runnable(){
public void run(){
  takeScreenshot(finisher,statusBarVisible,navBarVisible,rect.left,rect.top,rect.width(),rect.height());
}
}
);
}
}
view.stopSelection();
return true;
}
return false;
}
}
);
mScreenshotLayout.post(new Runnable(){
@Override public void run(){
mScreenshotSelectorView.setVisibility(View.VISIBLE);
mScreenshotSelectorView.requestFocus();
}
}
);
}
