{
  ValueAnimator anim=ValueAnimator.ofFloat(0f,1f);
  anim.setStartDelay(SCREENSHOT_DROP_OUT_DELAY);
  anim.addListener(new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator animation){
      mBackgroundView.setVisibility(View.GONE);
      mScreenshotContainerView.setVisibility(View.GONE);
      mScreenshotContainerView.setLayerType(View.LAYER_TYPE_NONE,null);
    }
  }
);
  if (!statusBarVisible || !navBarVisible) {
    anim.setDuration(SCREENSHOT_FAST_DROP_OUT_DURATION);
    anim.addUpdateListener(new AnimatorUpdateListener(){
      @Override public void onAnimationUpdate(      ValueAnimator animation){
        float t=((Float)animation.getAnimatedValue()).floatValue();
        float scaleT=(SCREENSHOT_DROP_IN_MIN_SCALE + mBgPaddingScale) - (float)t * (SCREENSHOT_DROP_IN_MIN_SCALE - SCREENSHOT_FAST_DROP_OUT_MIN_SCALE);
        mBackgroundView.setFastAlpha((1f - t) * BACKGROUND_ALPHA);
        mBackgroundView.fastInvalidate();
        mScreenshotContainerView.setFastAlpha(1f - t);
        mScreenshotContainerView.setFastScaleX(scaleT);
        mScreenshotContainerView.setFastScaleY(scaleT);
        mScreenshotContainerView.fastInvalidate();
        mScreenshotLayout.invalidate();
      }
    }
);
  }
 else {
    final float scaleDurationPct=(float)SCREENSHOT_DROP_OUT_SCALE_DURATION / SCREENSHOT_DROP_OUT_DURATION;
    final Interpolator scaleInterpolator=new Interpolator(){
      @Override public float getInterpolation(      float x){
        if (x < scaleDurationPct) {
          return (float)(1f - Math.pow(1f - (x / scaleDurationPct),2f));
        }
        return 1f;
      }
    }
;
    float halfScreenWidth=(w - 2f * mBgPadding) / 2f;
    float halfScreenHeight=(h - 2f * mBgPadding) / 2f;
    final float offsetPct=SCREENSHOT_DROP_OUT_MIN_SCALE_OFFSET;
    final PointF finalPos=new PointF(-halfScreenWidth + (SCREENSHOT_DROP_OUT_MIN_SCALE + offsetPct) * halfScreenWidth,-halfScreenHeight + (SCREENSHOT_DROP_OUT_MIN_SCALE + offsetPct) * halfScreenHeight);
    anim.setDuration(SCREENSHOT_DROP_OUT_DURATION);
    anim.addUpdateListener(new AnimatorUpdateListener(){
      @Override public void onAnimationUpdate(      ValueAnimator animation){
        float t=((Float)animation.getAnimatedValue()).floatValue();
        float scaleT=(SCREENSHOT_DROP_IN_MIN_SCALE + mBgPaddingScale) - (float)scaleInterpolator.getInterpolation(t) * (SCREENSHOT_DROP_IN_MIN_SCALE - SCREENSHOT_DROP_OUT_MIN_SCALE);
        mBackgroundView.setFastAlpha((1f - t) * BACKGROUND_ALPHA);
        mBackgroundView.fastInvalidate();
        mScreenshotContainerView.setFastAlpha(1f - scaleInterpolator.getInterpolation(t));
        mScreenshotContainerView.setFastScaleX(scaleT);
        mScreenshotContainerView.setFastScaleY(scaleT);
        mScreenshotContainerView.setFastTranslationX(t * finalPos.x);
        mScreenshotContainerView.setFastTranslationY(t * finalPos.y);
        mScreenshotContainerView.fastInvalidate();
        mScreenshotLayout.invalidate();
      }
    }
);
  }
  return anim;
}
