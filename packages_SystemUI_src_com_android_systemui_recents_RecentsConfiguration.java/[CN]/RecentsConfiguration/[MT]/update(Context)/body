{
  Resources res=context.getResources();
  DisplayMetrics dm=res.getDisplayMetrics();
  mDisplayMetrics=dm;
  isLandscape=res.getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE;
  transposeRecentsLayoutWithOrientation=res.getBoolean(R.bool.recents_transpose_layout_with_orientation);
  if (Console.Enabled) {
    Console.log(Constants.Log.UI.MeasureAndLayout,"[RecentsConfiguration|orientation]",isLandscape ? "Landscape" : "Portrait",Console.AnsiGreen);
  }
  displayRect.set(0,0,dm.widthPixels,dm.heightPixels);
  animationPxMovementPerSecond=res.getDimensionPixelSize(R.dimen.recents_animation_movement_in_dps_per_second);
  filteringCurrentViewsMinAnimDuration=res.getInteger(R.integer.recents_filter_animate_current_views_min_duration);
  filteringNewViewsMinAnimDuration=res.getInteger(R.integer.recents_filter_animate_new_views_min_duration);
  taskStackScrollDismissInfoPaneDistance=res.getDimensionPixelSize(R.dimen.recents_task_stack_scroll_dismiss_info_pane_distance);
  taskStackMaxDim=res.getInteger(R.integer.recents_max_task_stack_view_dim);
  TypedValue widthPaddingPctValue=new TypedValue();
  res.getValue(R.dimen.recents_stack_width_padding_percentage,widthPaddingPctValue,true);
  taskStackWidthPaddingPct=widthPaddingPctValue.getFloat();
  taskStackTopPaddingPx=res.getDimensionPixelSize(R.dimen.recents_stack_top_padding);
  taskViewRemoveAnimDuration=res.getInteger(R.integer.recents_animate_task_view_remove_duration);
  taskViewRemoveAnimTranslationXPx=res.getDimensionPixelSize(R.dimen.recents_task_view_remove_anim_translation_x);
  taskViewRoundedCornerRadiusPx=res.getDimensionPixelSize(R.dimen.recents_task_view_rounded_corners_radius);
  taskViewHighlightPx=res.getDimensionPixelSize(R.dimen.recents_task_view_highlight);
  taskViewTranslationZMinPx=res.getDimensionPixelSize(R.dimen.recents_task_view_z_min);
  taskViewTranslationZIncrementPx=res.getDimensionPixelSize(R.dimen.recents_task_view_z_increment);
  taskViewShadowOutlineBottomInsetPx=res.getDimensionPixelSize(R.dimen.recents_task_view_shadow_outline_bottom_inset);
  searchBarSpaceHeightPx=res.getDimensionPixelSize(R.dimen.recents_search_bar_space_height);
  taskBarViewDefaultBackgroundColor=res.getColor(R.color.recents_task_bar_default_background_color);
  taskBarViewDefaultTextColor=res.getColor(R.color.recents_task_bar_default_text_color);
  taskBarViewLightTextColor=res.getColor(R.color.recents_task_bar_light_text_color);
  taskBarViewDarkTextColor=res.getColor(R.color.recents_task_bar_dark_text_color);
  taskBarViewHighlightColor=res.getColor(R.color.recents_task_bar_highlight_color);
  taskBarEnterAnimDuration=res.getInteger(R.integer.recents_animate_task_bar_enter_duration);
  taskBarEnterAnimDelay=res.getInteger(R.integer.recents_animate_task_bar_enter_delay);
  taskBarExitAnimDuration=res.getInteger(R.integer.recents_animate_task_bar_exit_duration);
  navBarScrimEnterDuration=res.getInteger(R.integer.recents_nav_bar_scrim_enter_duration);
  fastOutSlowInInterpolator=AnimationUtils.loadInterpolator(context,com.android.internal.R.interpolator.fast_out_slow_in);
  fastOutLinearInInterpolator=AnimationUtils.loadInterpolator(context,com.android.internal.R.interpolator.fast_out_linear_in);
  linearOutSlowInInterpolator=AnimationUtils.loadInterpolator(context,com.android.internal.R.interpolator.linear_out_slow_in);
  ContentResolver cr=context.getContentResolver();
  developerOptionsEnabled=Settings.Global.getInt(cr,Settings.Global.DEVELOPMENT_SETTINGS_ENABLED,0) != 0;
  SharedPreferences settings=context.getSharedPreferences(context.getPackageName(),0);
  searchBarAppWidgetId=settings.getInt(Constants.Values.App.Key_SearchAppWidgetId,-1);
}
