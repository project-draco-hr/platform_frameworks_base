{
  CancellationSignal canceller=new CancellationSignal();
  ParcelFileDescriptor srcFile=null;
  ParcelFileDescriptor dstFile=null;
  InputStream src=null;
  OutputStream dst=null;
  boolean errorOccurred=false;
  try {
    srcFile=mSrcClient.openFile(srcUri,"r",canceller);
    dstFile=mDstClient.openFile(dstUri,"w",canceller);
    src=new ParcelFileDescriptor.AutoCloseInputStream(srcFile);
    dst=new ParcelFileDescriptor.AutoCloseOutputStream(dstFile);
    byte[] buffer=new byte[8192];
    int len;
    while (!mIsCancelled && ((len=src.read(buffer)) != -1)) {
      dst.write(buffer,0,len);
      makeProgress(len);
    }
    srcFile.checkError();
    dstFile.checkError();
  }
 catch (  IOException e) {
    errorOccurred=true;
    Log.e(TAG,"Error while copying " + srcUri.toString(),e);
    mFailedFiles.add(srcUri);
  }
 finally {
    IoUtils.closeQuietly(src);
    IoUtils.closeQuietly(dst);
  }
  if (errorOccurred || mIsCancelled) {
    canceller.cancel();
    try {
      DocumentsContract.deleteDocument(mDstClient,dstUri);
    }
 catch (    RemoteException e) {
      Log.w(TAG,"Failed to clean up: " + srcUri,e);
      throw e;
    }
  }
}
