{
  if (intent.hasExtra(EXTRA_CANCEL)) {
    handleCancel(intent);
    return;
  }
  final ArrayList<DocumentInfo> srcs=intent.getParcelableArrayListExtra(EXTRA_SRC_LIST);
  final DocumentStack stack=intent.getParcelableExtra(EXTRA_STACK);
  try {
    mSrcClient=DocumentsApplication.acquireUnstableProviderOrThrow(getContentResolver(),srcs.get(0).authority);
    mDstClient=DocumentsApplication.acquireUnstableProviderOrThrow(getContentResolver(),stack.peek().authority);
    setupCopyJob(srcs,stack);
    for (int i=0; i < srcs.size() && !mIsCancelled; ++i) {
      copy(srcs.get(i),stack.peek());
    }
  }
 catch (  Exception e) {
    Log.e(TAG,"Exceptions occurred during copying",e);
  }
 finally {
    ContentProviderClient.releaseQuietly(mSrcClient);
    ContentProviderClient.releaseQuietly(mDstClient);
    mNotificationManager.cancel(mJobId,0);
    if (mFailedFiles.size() > 0) {
      final Context context=getApplicationContext();
      final Intent navigateIntent=new Intent(context,DocumentsActivity.class);
      navigateIntent.putExtra(EXTRA_STACK,(Parcelable)stack);
      navigateIntent.putExtra(EXTRA_FAILURE,FAILURE_COPY);
      navigateIntent.putParcelableArrayListExtra(EXTRA_SRC_LIST,mFailedFiles);
      final Notification.Builder errorBuilder=new Notification.Builder(this).setContentTitle(context.getResources().getQuantityString(R.plurals.copy_error_notification_title,mFailedFiles.size(),mFailedFiles.size())).setContentText(getString(R.string.notification_touch_for_details)).setContentIntent(PendingIntent.getActivity(context,0,navigateIntent,PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_ONE_SHOT)).setCategory(Notification.CATEGORY_ERROR).setSmallIcon(R.drawable.ic_menu_copy).setAutoCancel(true);
      mNotificationManager.notify(mJobId,0,errorBuilder.build());
    }
  }
}
