{
  String opDesc=mode == TRANSFER_MODE_COPY ? "copy" : "move";
  if (dstDirInfo.equals(srcInfo) || isDescendentOf(srcInfo,dstDirInfo)) {
    if (DEBUG)     Log.d(TAG,"Skipping recursive " + opDesc + " of directory "+ dstDirInfo.derivedUri);
    mFailedFiles.add(srcInfo);
    return;
  }
  if (DEBUG)   Log.d(TAG,"Performing " + opDesc + " of "+ srcInfo.displayName+ " ("+ srcInfo.derivedUri+ ")"+ " to "+ dstDirInfo.displayName+ " ("+ dstDirInfo.derivedUri+ ")");
  if (srcInfo.authority.equals(dstDirInfo.authority)) {
switch (mode) {
case TRANSFER_MODE_COPY:
      if ((srcInfo.flags & Document.FLAG_SUPPORTS_COPY) != 0) {
        if (DocumentsContract.copyDocument(mSrcClient,srcInfo.derivedUri,dstDirInfo.derivedUri) == null) {
          mFailedFiles.add(srcInfo);
        }
        return;
      }
    break;
case TRANSFER_MODE_MOVE:
  if ((srcInfo.flags & Document.FLAG_SUPPORTS_MOVE) != 0) {
    if (DocumentsContract.moveDocument(mSrcClient,srcInfo.derivedUri,dstDirInfo.derivedUri) == null) {
      mFailedFiles.add(srcInfo);
    }
    return;
  }
break;
default :
throw new IllegalArgumentException("Unknown transfer mode.");
}
}
final Uri dstUri=DocumentsContract.createDocument(mDstClient,dstDirInfo.derivedUri,srcInfo.mimeType,srcInfo.displayName);
if (dstUri == null) {
mFailedFiles.add(srcInfo);
return;
}
if (srcInfo.isDirectory()) {
copyDirectoryHelper(srcInfo.derivedUri,dstUri,mode);
}
 else {
copyFileHelper(srcInfo.derivedUri,dstUri,mode);
}
}
