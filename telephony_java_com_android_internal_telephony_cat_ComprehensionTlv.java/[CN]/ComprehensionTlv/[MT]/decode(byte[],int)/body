{
  try {
    int curIndex=startIndex;
    int endIndex=data.length;
    int tag;
    boolean cr;
    int temp=data[curIndex++] & 0xff;
switch (temp) {
case 0:
case 0xff:
case 0x80:
      return null;
case 0x7f:
    tag=((data[curIndex] & 0xff) << 8) | (data[curIndex + 1] & 0xff);
  cr=(tag & 0x8000) != 0;
tag&=~0x8000;
curIndex+=2;
break;
default :
tag=temp;
cr=(tag & 0x80) != 0;
tag&=~0x80;
break;
}
int length;
temp=data[curIndex++] & 0xff;
if (temp < 0x80) {
length=temp;
}
 else if (temp == 0x81) {
length=data[curIndex++] & 0xff;
if (length < 0x80) {
throw new ResultException(ResultCode.CMD_DATA_NOT_UNDERSTOOD);
}
}
 else if (temp == 0x82) {
length=((data[curIndex] & 0xff) << 8) | (data[curIndex + 1] & 0xff);
curIndex+=2;
if (length < 0x100) {
throw new ResultException(ResultCode.CMD_DATA_NOT_UNDERSTOOD);
}
}
 else if (temp == 0x83) {
length=((data[curIndex] & 0xff) << 16) | ((data[curIndex + 1] & 0xff) << 8) | (data[curIndex + 2] & 0xff);
curIndex+=3;
if (length < 0x10000) {
throw new ResultException(ResultCode.CMD_DATA_NOT_UNDERSTOOD);
}
}
 else {
throw new ResultException(ResultCode.CMD_DATA_NOT_UNDERSTOOD);
}
return new ComprehensionTlv(tag,cr,length,data,curIndex);
}
 catch (IndexOutOfBoundsException e) {
throw new ResultException(ResultCode.CMD_DATA_NOT_UNDERSTOOD);
}
}
