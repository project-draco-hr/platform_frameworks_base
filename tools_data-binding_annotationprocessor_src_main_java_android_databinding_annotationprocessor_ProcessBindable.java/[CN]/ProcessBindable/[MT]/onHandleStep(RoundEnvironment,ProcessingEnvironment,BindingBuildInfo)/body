{
  if (mProperties == null) {
    mProperties=new IntermediateV1(buildInfo.modulePackage());
    mergeLayoutVariables();
    mLayoutVariables.clear();
    for (    Element element : AnnotationUtil.getElementsAnnotatedWith(roundEnv,Bindable.class)) {
      Element enclosingElement=element.getEnclosingElement();
      ElementKind kind=enclosingElement.getKind();
      if (kind != ElementKind.CLASS && kind != ElementKind.INTERFACE) {
        L.e("Bindable must be on a member field or method. The enclosing type is %s",enclosingElement.getKind());
      }
      TypeElement enclosing=(TypeElement)enclosingElement;
      String name=getPropertyName(element);
      if (name != null) {
        Preconditions.checkNotNull(mProperties,"Must receive app / library info before " + "Bindable fields.");
        mProperties.addProperty(enclosing.getQualifiedName().toString(),name);
      }
    }
    if (mProperties.hasValues()) {
      GenerationalClassUtil.writeIntermediateFile(processingEnv,mProperties.getPackage(),createIntermediateFileName(mProperties.getPackage()),mProperties);
      generateBRClasses(!buildInfo.isLibrary(),mProperties.getPackage());
    }
  }
  return false;
}
