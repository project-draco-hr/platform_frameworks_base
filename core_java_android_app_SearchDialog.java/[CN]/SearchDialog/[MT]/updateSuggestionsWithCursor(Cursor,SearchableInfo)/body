{
  ListAdapter adapter=null;
  if ((c == null) || (c.getCount() == 0)) {
  }
 else   if ((searchable != mSearchable) || !isShowing()) {
  }
 else {
    int colId=c.getColumnIndex("_id");
    int col1=c.getColumnIndex(SearchManager.SUGGEST_COLUMN_TEXT_1);
    int col2=c.getColumnIndex(SearchManager.SUGGEST_COLUMN_TEXT_2);
    int colIc1=c.getColumnIndex(SearchManager.SUGGEST_COLUMN_ICON_1);
    int colIc2=c.getColumnIndex(SearchManager.SUGGEST_COLUMN_ICON_2);
    boolean minimal=(colId >= 0) && (col1 >= 0);
    boolean hasIcons=(colIc1 >= 0) && (colIc2 >= 0);
    boolean has2Lines=col2 >= 0;
    if (minimal) {
      int layout;
      String[] from;
      int[] to;
      if (hasIcons) {
        if (has2Lines) {
          layout=com.android.internal.R.layout.search_dropdown_item_icons_2line;
          from=TWO_LINE_ICONS_FROM;
          to=TWO_LINE_ICONS_TO;
        }
 else {
          layout=com.android.internal.R.layout.search_dropdown_item_icons_1line;
          from=ONE_LINE_ICONS_FROM;
          to=ONE_LINE_ICONS_TO;
        }
      }
 else {
        if (has2Lines) {
          layout=com.android.internal.R.layout.search_dropdown_item_2line;
          from=TWO_LINE_FROM;
          to=TWO_LINE_TO;
        }
 else {
          layout=com.android.internal.R.layout.search_dropdown_item_1line;
          from=ONE_LINE_FROM;
          to=ONE_LINE_TO;
        }
      }
      try {
        if (DBG_LOG_TIMING == 1) {
          dbgLogTiming("updateSuggestions(3)");
        }
        adapter=new SuggestionsCursorAdapter(getContext(),layout,c,from,to,mProviderContext);
        if (DBG_LOG_TIMING == 1) {
          dbgLogTiming("updateSuggestions(4)");
        }
      }
 catch (      RuntimeException e) {
        Log.e(LOG_TAG,"Exception while creating SuggestionsCursorAdapter",e);
      }
    }
    if ((colIc1 >= 0) != (colIc2 >= 0)) {
      Log.w(LOG_TAG,"Suggestion icon column(s) discarded, must be 0 or 2 columns.");
    }
 else     if (adapter == null) {
      Log.w(LOG_TAG,"Suggestions cursor discarded due to missing required columns.");
    }
  }
  if ((c != null) && (adapter == null)) {
    c.close();
    c=null;
  }
  discardListCursor(mSuggestionsList);
  if (adapter == null) {
    showSuggestions(false,!mSkipNextAnimate);
  }
 else {
    layoutSuggestionsList();
    showSuggestions(true,!mSkipNextAnimate);
  }
  mSkipNextAnimate=false;
  if (DBG_LOG_TIMING == 1) {
    dbgLogTiming("updateSuggestions(5)");
  }
  mSuggestionsList.setAdapter(adapter);
  if (mPresetSelection >= 0) {
    boolean bTouchMode=mSuggestionsList.isInTouchMode();
    mSuggestionsList.setSelection(mPresetSelection);
    mPresetSelection=-1;
  }
  if (DBG_LOG_TIMING == 1) {
    dbgLogTiming("updateSuggestions(6)");
  }
}
