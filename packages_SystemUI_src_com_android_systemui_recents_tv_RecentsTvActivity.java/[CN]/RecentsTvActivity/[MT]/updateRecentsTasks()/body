{
  RecentsTaskLoader loader=Recents.getTaskLoader();
  RecentsTaskLoadPlan plan=RecentsImpl.consumeInstanceLoadPlan();
  if (plan == null) {
    plan=loader.createLoadPlan(this);
  }
  RecentsConfiguration config=Recents.getConfiguration();
  RecentsActivityLaunchState launchState=config.getLaunchState();
  if (!plan.hasTasks()) {
    loader.preloadTasks(plan,-1,launchState.launchedFromHome);
  }
  mLaunchedFromHome=launchState.launchedFromHome;
  TaskStack stack=plan.getTaskStack();
  RecentsTaskLoadPlan.Options loadOpts=new RecentsTaskLoadPlan.Options();
  loadOpts.runningTaskId=launchState.launchedToTaskId;
  loadOpts.numVisibleTasks=stack.getStackTaskCount();
  loadOpts.numVisibleTaskThumbnails=stack.getStackTaskCount();
  loader.loadTasks(this,plan,loadOpts);
  mRecentsView.setTaskStack(stack);
  List stackTasks=stack.getStackTasks();
  Collections.reverse(stackTasks);
  if (mTaskStackViewAdapter == null) {
    mTaskStackViewAdapter=new TaskStackHorizontalViewAdapter(stackTasks);
    mTaskStackHorizontalGridView=mRecentsView.setTaskStackViewAdapter(mTaskStackViewAdapter);
  }
 else {
    mTaskStackViewAdapter.setNewStackTasks(stackTasks);
  }
  if (launchState.launchedToTaskId != -1) {
    ArrayList<Task> tasks=stack.getStackTasks();
    int taskCount=tasks.size();
    for (int i=0; i < taskCount; i++) {
      Task t=tasks.get(i);
      if (t.key.id == launchState.launchedToTaskId) {
        t.isLaunchTarget=true;
        break;
      }
    }
  }
}
