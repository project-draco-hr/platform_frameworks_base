{
  super.onCreate(savedInstanceState);
  mFinishedOnStartup=false;
  SystemServicesProxy ssp=Recents.getSystemServices();
  if (ssp == null) {
    mFinishedOnStartup=true;
    finish();
    return;
  }
  mPipManager=PipManager.getInstance();
  EventBus.getDefault().register(this,EVENT_BUS_PRIORITY);
  mPackageMonitor=new RecentsPackageMonitor();
  mPackageMonitor.register(this);
  setContentView(R.layout.recents_on_tv);
  mRecentsView=(RecentsTvView)findViewById(R.id.recents_view);
  mRecentsView.setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_STABLE | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION);
  mPipControlsView=(PipControlsView)findViewById(R.id.pip_controls);
  mPipControlsView.setListener(new PipControlsView.Listener(){
    @Override public void onClosed(){
      dismissRecentsToLaunchTargetTaskOrHome();
    }
  }
);
  mPipShadeView=findViewById(R.id.pip_shade);
  mPipControlsViewFadeInAnimator=(AnimatorSet)AnimatorInflater.loadAnimator(this,R.anim.tv_pip_controls_fade_in);
  mPipControlsViewFadeInAnimator.setTarget(mPipControlsView);
  mPipControlsViewFadeOutAnimator=(AnimatorSet)AnimatorInflater.loadAnimator(this,R.anim.tv_pip_controls_fade_out);
  mPipControlsViewFadeOutAnimator.setTarget(mPipControlsView);
  getWindow().getAttributes().privateFlags|=WindowManager.LayoutParams.PRIVATE_FLAG_FORCE_DECOR_VIEW_VISIBILITY;
  Intent homeIntent=new Intent(Intent.ACTION_MAIN,null);
  homeIntent.addCategory(Intent.CATEGORY_HOME);
  homeIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED);
  mFinishLaunchHomeRunnable=new FinishRecentsRunnable(homeIntent);
  updatePipUI();
  mPipManager.addListener(mPipListener);
}
