{
  if (field.getType() == java.lang.String.class) {
    int stringInfo=debugProperties.getStringInfo(propertyName);
switch (stringInfo) {
case TypedProperties.STRING_SET:
      break;
case TypedProperties.STRING_NULL:
    try {
      field.set(null,null);
    }
 catch (    IllegalAccessException ex) {
      throw new IllegalArgumentException("Cannot set field for " + propertyName,ex);
    }
  return;
case TypedProperties.STRING_NOT_SET:
return;
case TypedProperties.STRING_TYPE_MISMATCH:
throw new IllegalArgumentException("Type of " + propertyName + " "+ " does not match field type ("+ field.getType()+ ")");
default :
throw new IllegalStateException("Unexpected getStringInfo(" + propertyName + ") return value "+ stringInfo);
}
}
Object value=debugProperties.get(propertyName);
if (value != null) {
if (!fieldTypeMatches(field,value.getClass())) {
throw new IllegalArgumentException("Type of " + propertyName + " ("+ value.getClass()+ ") "+ " does not match field type ("+ field.getType()+ ")");
}
try {
field.set(null,value);
}
 catch (IllegalAccessException ex) {
throw new IllegalArgumentException("Cannot set field for " + propertyName,ex);
}
}
}
