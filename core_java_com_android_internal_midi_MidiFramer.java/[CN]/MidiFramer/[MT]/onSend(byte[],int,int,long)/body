{
  int sysExStartOffset=(mInSysEx ? offset : -1);
  for (int i=0; i < count; i++) {
    int b=data[offset] & 0xFF;
    if (b >= 0x80) {
      if (b < 0xF0) {
        mRunningStatus=(byte)b;
        mCount=1;
        mNeeded=MidiConstants.getBytesPerMessage(b) - 1;
      }
 else       if (b < 0xF8) {
        if (b == 0xF0) {
          mInSysEx=true;
          sysExStartOffset=offset;
        }
 else         if (b == 0xF7) {
          if (mInSysEx) {
            mReceiver.send(data,sysExStartOffset,offset - sysExStartOffset + 1,timestamp);
            mInSysEx=false;
            sysExStartOffset=-1;
          }
        }
 else {
          mBuffer[0]=(byte)b;
          mRunningStatus=0;
          mCount=1;
          mNeeded=MidiConstants.getBytesPerMessage(b) - 1;
        }
      }
 else {
        if (mInSysEx) {
          mReceiver.send(data,sysExStartOffset,offset - sysExStartOffset,timestamp);
          sysExStartOffset=offset + 1;
        }
        mReceiver.send(data,offset,1,timestamp);
      }
    }
 else {
      if (!mInSysEx) {
        mBuffer[mCount++]=(byte)b;
        if (--mNeeded == 0) {
          if (mRunningStatus != 0) {
            mBuffer[0]=(byte)mRunningStatus;
          }
          mReceiver.send(mBuffer,0,mCount,timestamp);
          mNeeded=MidiConstants.getBytesPerMessage(mBuffer[0]) - 1;
          mCount=1;
        }
      }
    }
    ++offset;
  }
  if (sysExStartOffset >= 0 && sysExStartOffset < offset) {
    mReceiver.send(data,sysExStartOffset,offset - sysExStartOffset,timestamp);
  }
}
