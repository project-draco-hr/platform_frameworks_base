{
  if (!mSystemReady)   return;
  if (LOGV)   Slog.v(TAG,"updateIfacesLocked()");
  performPollLocked(FLAG_PERSIST_NETWORK);
  final NetworkState[] states;
  final LinkProperties activeLink;
  try {
    states=mConnManager.getAllNetworkState();
    activeLink=mConnManager.getActiveLinkProperties();
  }
 catch (  RemoteException e) {
    return;
  }
  mActiveIface=activeLink != null ? activeLink.getInterfaceName() : null;
  mActiveIfaces.clear();
  mActiveUidIfaces.clear();
  final ArraySet<String> mobileIfaces=new ArraySet<>();
  for (  NetworkState state : states) {
    if (state.networkInfo.isConnected()) {
      final boolean isMobile=isNetworkTypeMobile(state.networkInfo.getType());
      final NetworkIdentity ident=NetworkIdentity.buildNetworkIdentity(mContext,state);
      final String baseIface=state.linkProperties.getInterfaceName();
      if (baseIface != null) {
        findOrCreateNetworkIdentitySet(mActiveIfaces,baseIface).add(ident);
        findOrCreateNetworkIdentitySet(mActiveUidIfaces,baseIface).add(ident);
        if (isMobile) {
          mobileIfaces.add(baseIface);
        }
      }
      final List<LinkProperties> stackedLinks=state.linkProperties.getStackedLinks();
      for (      LinkProperties stackedLink : stackedLinks) {
        final String stackedIface=stackedLink.getInterfaceName();
        if (stackedIface != null) {
          findOrCreateNetworkIdentitySet(mActiveUidIfaces,stackedIface).add(ident);
          if (isMobile) {
            mobileIfaces.add(stackedIface);
          }
        }
      }
    }
  }
  mMobileIfaces=mobileIfaces.toArray(new String[mobileIfaces.size()]);
}
