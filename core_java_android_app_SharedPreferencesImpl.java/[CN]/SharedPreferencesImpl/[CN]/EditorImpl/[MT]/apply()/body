{
  final MemoryCommitResult mcr=commitToMemory();
  final Runnable awaitCommit=new Runnable(){
    public void run(){
      try {
        mcr.writtenToDiskLatch.await();
      }
 catch (      InterruptedException ignored) {
      }
    }
  }
;
  QueuedWork.add(awaitCommit);
  Runnable postWriteRunnable=new Runnable(){
    public void run(){
      awaitCommit.run();
      QueuedWork.remove(awaitCommit);
    }
  }
;
  SharedPreferencesImpl.this.enqueueDiskWrite(mcr,postWriteRunnable);
  notifyListeners(mcr);
}
