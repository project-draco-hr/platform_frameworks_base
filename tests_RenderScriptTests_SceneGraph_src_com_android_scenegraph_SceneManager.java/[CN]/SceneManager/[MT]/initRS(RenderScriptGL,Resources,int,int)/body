{
  mRS=rs;
  mRes=res;
  mAllocationMap=new HashMap<String,Allocation>();
  mExportScript=new ScriptC_export(rs,res,R.raw.export);
  mTransformScript=new ScriptC_transform(rs,res,R.raw.transform);
  mTransformScript.set_gTransformScript(mTransformScript);
  mCameraScript=new ScriptC_camera(rs,res,R.raw.camera);
  mLightScript=new ScriptC_light(rs,res,R.raw.light);
  mObjectParamsScript=new ScriptC_object_params(rs,res,R.raw.object_params);
  mFragmentParamsScript=new ScriptC_object_params(rs,res,R.raw.fragment_params);
  mVertexParamsScript=new ScriptC_object_params(rs,res,R.raw.vertex_params);
  mCullScript=new ScriptC_cull(rs,res,R.raw.cull);
  mRenderLoop=new ScriptC_render(rs,res,R.raw.render);
  mRenderLoop.set_gTransformScript(mTransformScript);
  mRenderLoop.set_gCameraScript(mCameraScript);
  mRenderLoop.set_gLightScript(mLightScript);
  mRenderLoop.set_gObjectParamsScript(mObjectParamsScript);
  mRenderLoop.set_gFragmentParamsScript(mFragmentParamsScript);
  mRenderLoop.set_gVertexParamsScript(mVertexParamsScript);
  mRenderLoop.set_gCullScript(mCullScript);
  Allocation checker=Allocation.createFromBitmapResource(mRS,mRes,R.drawable.checker,MipmapControl.MIPMAP_ON_SYNC_TO_TEXTURE,Allocation.USAGE_GRAPHICS_TEXTURE);
  mRenderLoop.set_gTGrid(checker);
  mRenderLoop.set_gPFSBackground(ProgramStore.BLEND_NONE_DEPTH_TEST(mRS));
}
