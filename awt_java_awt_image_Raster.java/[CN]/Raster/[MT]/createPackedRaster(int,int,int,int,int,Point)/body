{
  if (w <= 0 || h <= 0) {
    throw new RasterFormatException(Messages.getString("awt.22E"));
  }
  if (location == null) {
    location=new Point(0,0);
  }
  if ((long)location.x + w > Integer.MAX_VALUE || (long)location.y + h > Integer.MAX_VALUE) {
    throw new RasterFormatException(Messages.getString("awt.276"));
  }
  if (bands < 1 || bitsPerBand < 1) {
    throw new IllegalArgumentException(Messages.getString("awt.27D"));
  }
  if (dataType != DataBuffer.TYPE_BYTE && dataType != DataBuffer.TYPE_USHORT && dataType != DataBuffer.TYPE_INT) {
    throw new IllegalArgumentException(Messages.getString("awt.230"));
  }
  if (bitsPerBand * bands > DataBuffer.getDataTypeSize(dataType)) {
    throw new IllegalArgumentException(Messages.getString("awt.27E"));
  }
  if (bands > 1) {
    int bandMasks[]=new int[bands];
    int mask=(1 << bitsPerBand) - 1;
    for (int i=0; i < bands; i++) {
      bandMasks[i]=mask << (bitsPerBand * (bands - 1 - i));
    }
    return createPackedRaster(dataType,w,h,bandMasks,location);
  }
  DataBuffer data=null;
  int size=((bitsPerBand * w + DataBuffer.getDataTypeSize(dataType) - 1) / DataBuffer.getDataTypeSize(dataType)) * h;
switch (dataType) {
case DataBuffer.TYPE_BYTE:
    data=new DataBufferByte(size);
  break;
case DataBuffer.TYPE_USHORT:
data=new DataBufferUShort(size);
break;
case DataBuffer.TYPE_INT:
data=new DataBufferInt(size);
break;
}
return createPackedRaster(data,w,h,bitsPerBand,location);
}
