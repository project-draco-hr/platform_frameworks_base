{
  float startIntensity=invert ? 0f : 1f;
  float endIntensity=invert ? 1f : 0f;
  ValueAnimator animator=ValueAnimator.ofFloat(startIntensity,endIntensity);
  animator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){
    @Override public void onAnimationUpdate(    ValueAnimator animation){
      updateInvertPaint((Float)animation.getAnimatedValue());
      for (int i=0; i < mTargets.size(); i++) {
        mTargets.get(i).setLayerType(View.LAYER_TYPE_HARDWARE,mDarkPaint);
      }
    }
  }
);
  animator.addListener(new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator animation){
      if (!invert) {
        for (int i=0; i < mTargets.size(); i++) {
          mTargets.get(i).setLayerType(View.LAYER_TYPE_NONE,null);
        }
      }
    }
  }
);
  animator.setDuration(mFadeDuration);
  animator.setInterpolator(Interpolators.LINEAR_OUT_SLOW_IN);
  animator.setStartDelay(delay);
  animator.start();
}
