{
  boolean valid=false;
  String arg;
  try {
    while ((arg=nextArg()) != null) {
      if ("--user".equals(arg)) {
        if (mUser != -1) {
          break;
        }
        mUser=Integer.parseInt(nextArg());
      }
 else       if (mVerb == CommandVerb.UNSPECIFIED) {
        if ("get".equalsIgnoreCase(arg)) {
          mVerb=CommandVerb.GET;
        }
 else         if ("put".equalsIgnoreCase(arg)) {
          mVerb=CommandVerb.PUT;
        }
 else         if ("delete".equalsIgnoreCase(arg)) {
          mVerb=CommandVerb.DELETE;
        }
 else         if ("list".equalsIgnoreCase(arg)) {
          mVerb=CommandVerb.LIST;
        }
 else {
          System.err.println("Invalid command: " + arg);
          break;
        }
      }
 else       if (mTable == null) {
        if (!"system".equalsIgnoreCase(arg) && !"secure".equalsIgnoreCase(arg) && !"global".equalsIgnoreCase(arg)) {
          System.err.println("Invalid namespace '" + arg + "'");
          break;
        }
        mTable=arg.toLowerCase();
        if (mVerb == CommandVerb.LIST) {
          valid=true;
          break;
        }
      }
 else       if (mVerb == CommandVerb.GET || mVerb == CommandVerb.DELETE) {
        mKey=arg;
        if (mNextArg >= mArgs.length) {
          valid=true;
        }
 else {
          System.err.println("Too many arguments");
        }
        break;
      }
 else       if (mKey == null) {
        mKey=arg;
      }
 else {
        mValue=arg;
        if (mNextArg >= mArgs.length) {
          valid=true;
        }
 else {
          System.err.println("Too many arguments");
        }
        break;
      }
    }
  }
 catch (  Exception e) {
    valid=false;
  }
  if (valid) {
    if (mUser < 0) {
      mUser=UserHandle.USER_OWNER;
    }
    try {
      IActivityManager activityManager=ActivityManagerNative.getDefault();
      IContentProvider provider=null;
      IBinder token=new Binder();
      try {
        ContentProviderHolder holder=activityManager.getContentProviderExternal("settings",UserHandle.USER_OWNER,token);
        if (holder == null) {
          throw new IllegalStateException("Could not find settings provider");
        }
        provider=holder.provider;
switch (mVerb) {
case GET:
          System.out.println(getForUser(provider,mUser,mTable,mKey));
        break;
case PUT:
      putForUser(provider,mUser,mTable,mKey,mValue);
    break;
case DELETE:
  System.out.println("Deleted " + deleteForUser(provider,mUser,mTable,mKey) + " rows");
break;
case LIST:
for (String line : listForUser(provider,mUser,mTable)) {
System.out.println(line);
}
break;
default :
System.err.println("Unspecified command");
break;
}
}
  finally {
if (provider != null) {
activityManager.removeContentProviderExternal("settings",token);
}
}
}
 catch (Exception e) {
System.err.println("Error while accessing settings provider");
e.printStackTrace();
}
}
 else {
printUsage();
}
}
