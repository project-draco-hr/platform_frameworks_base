{
  try {
    ByteArrayOutputStream baos=new ByteArrayOutputStream();
    XmlSerializer out=new FastXmlSerializer();
    out.setOutput(baos,"utf-8");
    out.startDocument(null,true);
    out.setFeature("http://xmlpull.org/v1/doc/features.html#indent-output",true);
    out.startTag(null,"task-info");
    out.attribute(null,"version",Integer.toString(TASKS_FILE_VERSION));
    for (int i=0; i < mTasksSet.size(); i++) {
      final TaskStatus taskStatus=mTasksSet.valueAt(i);
      if (DEBUG) {
        Slog.d(TAG,"Saving task " + taskStatus.getTaskId());
      }
      out.startTag(null,"task");
      addIdentifierAttributesToTaskTag(out,taskStatus);
      writeConstraintsToXml(out,taskStatus);
      writeExecutionCriteriaToXml(out,taskStatus);
      writeBundleToXml(taskStatus.getExtras(),out);
      out.endTag(null,"task");
    }
    out.endTag(null,"task-info");
    out.endDocument();
    FileOutputStream fos=mTasksFile.startWrite();
    fos.write(baos.toByteArray());
    mTasksFile.finishWrite(fos);
    mDirtyOperations=0;
  }
 catch (  IOException e) {
    if (DEBUG) {
      Slog.v(TAG,"Error writing out task data.",e);
    }
  }
catch (  XmlPullParserException e) {
    if (DEBUG) {
      Slog.d(TAG,"Error persisting bundle.",e);
    }
  }
}
