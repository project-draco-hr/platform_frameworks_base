{
  if (!(view.getParent() instanceof ViewGroup)) {
    throw new IllegalArgumentException("Ghosted views must be parented by a ViewGroup");
  }
  ViewGroupOverlay overlay=viewGroup.getOverlay();
  ViewOverlay.OverlayViewGroup overlayViewGroup=overlay.mOverlayViewGroup;
  GhostView ghostView=view.mGhostView;
  int previousRefCount=0;
  if (ghostView != null) {
    View oldParent=(View)ghostView.getParent();
    ViewGroup oldGrandParent=(ViewGroup)oldParent.getParent();
    if (oldGrandParent != overlayViewGroup) {
      previousRefCount=ghostView.mReferences;
      oldGrandParent.removeView(oldParent);
      ghostView=null;
    }
  }
  if (ghostView == null) {
    if (matrix == null) {
      matrix=new Matrix();
      calculateMatrix(view,viewGroup,matrix);
    }
    ghostView=new GhostView(view);
    ghostView.setMatrix(matrix);
    FrameLayout parent=new FrameLayout(view.getContext());
    parent.setClipChildren(false);
    copySize(viewGroup,parent);
    copySize(viewGroup,ghostView);
    parent.addView(ghostView);
    ArrayList<View> tempViews=new ArrayList<View>();
    int firstGhost=moveGhostViewsToTop(overlay.mOverlayViewGroup,tempViews);
    insertIntoOverlay(overlay.mOverlayViewGroup,parent,ghostView,tempViews,firstGhost);
    ghostView.mReferences=previousRefCount;
  }
 else   if (matrix != null) {
    ghostView.setMatrix(matrix);
  }
  ghostView.mReferences++;
  return ghostView;
}
