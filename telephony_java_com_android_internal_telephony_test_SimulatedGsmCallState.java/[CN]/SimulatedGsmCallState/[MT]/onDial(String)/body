{
  CallInfo call;
  int freeSlot=-1;
  Log.d("GSM","SC> dial '" + address + "'");
  if (nextDialFailImmediately) {
    nextDialFailImmediately=false;
    Log.d("GSM","SC< dial fail (per request)");
    return false;
  }
  String phNum=PhoneNumberUtils.extractNetworkPortion(address);
  if (phNum.length() == 0) {
    Log.d("GSM","SC< dial fail (invalid ph num)");
    return false;
  }
  if (phNum.startsWith("*99") && phNum.endsWith("#")) {
    Log.d("GSM","SC< dial ignored (gprs)");
    return true;
  }
  try {
    if (countActiveLines() > 1) {
      Log.d("GSM","SC< dial fail (invalid call state)");
      return false;
    }
  }
 catch (  InvalidStateEx ex) {
    Log.d("GSM","SC< dial fail (invalid call state)");
    return false;
  }
  for (int i=0; i < calls.length; i++) {
    if (freeSlot < 0 && calls[i] == null) {
      freeSlot=i;
    }
    if (calls[i] != null && !calls[i].isActiveOrHeld()) {
      Log.d("GSM","SC< dial fail (invalid call state)");
      return false;
    }
 else     if (calls[i] != null && calls[i].state == CallInfo.State.ACTIVE) {
      calls[i].state=CallInfo.State.HOLDING;
    }
  }
  if (freeSlot < 0) {
    Log.d("GSM","SC< dial fail (invalid call state)");
    return false;
  }
  calls[freeSlot]=CallInfo.createOutgoingCall(phNum);
  if (autoProgressConnecting) {
    sendMessageDelayed(obtainMessage(EVENT_PROGRESS_CALL_STATE,calls[freeSlot]),CONNECTING_PAUSE_MSEC);
  }
  Log.d("GSM","SC< dial (slot = " + freeSlot + ")");
  return true;
}
