{
  boolean ret;
  int callIndex=0;
  if (c1 != 0) {
    callIndex=c1 - '1';
    if (callIndex < 0 || callIndex >= calls.length) {
      return false;
    }
  }
switch (c0) {
case '0':
    ret=releaseHeldOrUDUB();
  break;
case '1':
if (c1 <= 0) {
  ret=releaseActiveAcceptHeldOrWaiting();
}
 else {
  if (calls[callIndex] == null) {
    ret=false;
  }
 else {
    calls[callIndex]=null;
    ret=true;
  }
}
break;
case '2':
if (c1 <= 0) {
ret=switchActiveAndHeldOrWaiting();
}
 else {
ret=separateCall(callIndex);
}
break;
case '3':
ret=conference();
break;
case '4':
ret=explicitCallTransfer();
break;
case '5':
if (true) {
ret=false;
}
break;
default :
ret=false;
}
return ret;
}
