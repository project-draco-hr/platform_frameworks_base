{
  pw.println();
  pw.println("Display Power Controller Thread State:");
  pw.println("  mPowerRequest=" + mPowerRequest);
  pw.println("  mWaitingForNegativeProximity=" + mWaitingForNegativeProximity);
  pw.println("  mProximitySensor=" + mProximitySensor);
  pw.println("  mProximitySensorEnabled=" + mProximitySensorEnabled);
  pw.println("  mProximityThreshold=" + mProximityThreshold);
  pw.println("  mProximity=" + proximityToString(mProximity));
  pw.println("  mPendingProximity=" + proximityToString(mPendingProximity));
  pw.println("  mPendingProximityDebounceTime=" + TimeUtils.formatUptime(mPendingProximityDebounceTime));
  pw.println("  mScreenOffBecauseOfProximity=" + mScreenOffBecauseOfProximity);
  pw.println("  mAppliedAutoBrightness=" + mAppliedAutoBrightness);
  pw.println("  mAppliedDimming=" + mAppliedDimming);
  pw.println("  mAppliedLowPower=" + mAppliedLowPower);
  pw.println("  mPendingScreenOnUnblocker=" + mPendingScreenOnUnblocker);
  pw.println("  mPendingScreenOff=" + mPendingScreenOff);
  pw.println("  mReportedToPolicy=" + reportedToPolicyToString(mReportedScreenStateToPolicy));
  pw.println("  mScreenBrightnessRampAnimator.isAnimating()=" + mScreenBrightnessRampAnimator.isAnimating());
  if (mColorFadeOnAnimator != null) {
    pw.println("  mColorFadeOnAnimator.isStarted()=" + mColorFadeOnAnimator.isStarted());
  }
  if (mColorFadeOffAnimator != null) {
    pw.println("  mColorFadeOffAnimator.isStarted()=" + mColorFadeOffAnimator.isStarted());
  }
  if (mPowerState != null) {
    mPowerState.dump(pw);
  }
  if (mAutomaticBrightnessController != null) {
    mAutomaticBrightnessController.dump(pw);
  }
}
