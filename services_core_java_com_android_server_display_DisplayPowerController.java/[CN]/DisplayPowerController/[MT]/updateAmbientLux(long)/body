{
  if (!mAmbientLuxValid) {
    final long timeWhenSensorWarmedUp=mLightSensorWarmUpTimeConfig + mLightSensorEnableTime;
    if (time < timeWhenSensorWarmedUp) {
      mHandler.sendEmptyMessageAtTime(MSG_LIGHT_SENSOR_DEBOUNCED,timeWhenSensorWarmedUp);
      return;
    }
    setAmbientLux(mRecentShortTermAverageLux);
    mAmbientLuxValid=true;
    mDebounceLuxDirection=0;
    mDebounceLuxTime=time;
    if (DEBUG) {
      Slog.d(TAG,"updateAmbientLux: Initializing: " + ", mRecentShortTermAverageLux=" + mRecentShortTermAverageLux + ", mRecentLongTermAverageLux="+ mRecentLongTermAverageLux+ ", mAmbientLux="+ mAmbientLux);
    }
    updateAutoBrightness(true);
  }
 else   if (mRecentShortTermAverageLux > mBrighteningLuxThreshold && mRecentLongTermAverageLux > mBrighteningLuxThreshold) {
    if (mDebounceLuxDirection <= 0) {
      mDebounceLuxDirection=1;
      mDebounceLuxTime=time;
      if (DEBUG) {
        Slog.d(TAG,"updateAmbientLux: Possibly brightened, waiting for " + BRIGHTENING_LIGHT_DEBOUNCE + " ms: "+ "mBrighteningLuxThreshold="+ mBrighteningLuxThreshold+ ", mRecentShortTermAverageLux="+ mRecentShortTermAverageLux+ ", mRecentLongTermAverageLux="+ mRecentLongTermAverageLux+ ", mAmbientLux="+ mAmbientLux);
      }
    }
    long debounceTime=mDebounceLuxTime + BRIGHTENING_LIGHT_DEBOUNCE;
    if (time < debounceTime) {
      mHandler.sendEmptyMessageAtTime(MSG_LIGHT_SENSOR_DEBOUNCED,debounceTime);
      return;
    }
    setAmbientLux(mRecentShortTermAverageLux);
    if (DEBUG) {
      Slog.d(TAG,"updateAmbientLux: Brightened: " + "mBrighteningLuxThreshold=" + mBrighteningLuxThreshold + ", mRecentShortTermAverageLux="+ mRecentShortTermAverageLux+ ", mRecentLongTermAverageLux="+ mRecentLongTermAverageLux+ ", mAmbientLux="+ mAmbientLux);
    }
    updateAutoBrightness(true);
  }
 else   if (mRecentShortTermAverageLux < mDarkeningLuxThreshold && mRecentLongTermAverageLux < mDarkeningLuxThreshold) {
    if (mDebounceLuxDirection >= 0) {
      mDebounceLuxDirection=-1;
      mDebounceLuxTime=time;
      if (DEBUG) {
        Slog.d(TAG,"updateAmbientLux: Possibly darkened, waiting for " + DARKENING_LIGHT_DEBOUNCE + " ms: "+ "mDarkeningLuxThreshold="+ mDarkeningLuxThreshold+ ", mRecentShortTermAverageLux="+ mRecentShortTermAverageLux+ ", mRecentLongTermAverageLux="+ mRecentLongTermAverageLux+ ", mAmbientLux="+ mAmbientLux);
      }
    }
    long debounceTime=mDebounceLuxTime + DARKENING_LIGHT_DEBOUNCE;
    if (time < debounceTime) {
      mHandler.sendEmptyMessageAtTime(MSG_LIGHT_SENSOR_DEBOUNCED,debounceTime);
      return;
    }
    setAmbientLux(Math.max(mRecentShortTermAverageLux,mRecentLongTermAverageLux));
    if (DEBUG) {
      Slog.d(TAG,"updateAmbientLux: Darkened: " + "mDarkeningLuxThreshold=" + mDarkeningLuxThreshold + ", mRecentShortTermAverageLux="+ mRecentShortTermAverageLux+ ", mRecentLongTermAverageLux="+ mRecentLongTermAverageLux+ ", mAmbientLux="+ mAmbientLux);
    }
    updateAutoBrightness(true);
  }
 else   if (mDebounceLuxDirection != 0) {
    mDebounceLuxDirection=0;
    mDebounceLuxTime=time;
    if (DEBUG) {
      Slog.d(TAG,"updateAmbientLux: Canceled debounce: " + "mBrighteningLuxThreshold=" + mBrighteningLuxThreshold + ", mDarkeningLuxThreshold="+ mDarkeningLuxThreshold+ ", mRecentShortTermAverageLux="+ mRecentShortTermAverageLux+ ", mRecentLongTermAverageLux="+ mRecentLongTermAverageLux+ ", mAmbientLux="+ mAmbientLux);
    }
  }
  if (mLastObservedLux > mBrighteningLuxThreshold || mLastObservedLux < mDarkeningLuxThreshold) {
    mHandler.sendEmptyMessageAtTime(MSG_LIGHT_SENSOR_DEBOUNCED,time + SYNTHETIC_LIGHT_SENSOR_RATE_MILLIS);
  }
}
