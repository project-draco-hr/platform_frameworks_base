{
  boolean result=false;
  boolean is64Bit=VMRuntime.getRuntime().is64Bit();
  try {
    if (args.length != 2 || args[0] == null || args[1] == null) {
      Log.e(LOGTAG,"Invalid RelroFileCreator args: " + Arrays.toString(args));
      return;
    }
    Log.v(LOGTAG,"RelroFileCreator (64bit = " + is64Bit + "), "+ " 32-bit lib: "+ args[0]+ ", 64-bit lib: "+ args[1]);
    if (!sAddressSpaceReserved) {
      Log.e(LOGTAG,"can't create relro file; address space not reserved");
      return;
    }
    result=nativeCreateRelroFile(args[0],args[1],CHROMIUM_WEBVIEW_NATIVE_RELRO_32,CHROMIUM_WEBVIEW_NATIVE_RELRO_64);
    if (DEBUG)     Log.v(LOGTAG,"created relro file");
  }
  finally {
    try {
      getUpdateService().notifyRelroCreationCompleted(is64Bit,result);
    }
 catch (    RemoteException e) {
      Log.e(LOGTAG,"error notifying update service",e);
    }
    if (!result)     Log.e(LOGTAG,"failed to create relro file");
    System.exit(0);
  }
}
