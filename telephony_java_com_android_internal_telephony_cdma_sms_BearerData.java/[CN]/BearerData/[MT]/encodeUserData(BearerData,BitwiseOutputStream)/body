{
  encodeUserDataPayload(bData.userData);
  bData.hasUserDataHeader=bData.userData.userDataHeader != null;
  if (bData.userData.payload.length > SmsMessage.MAX_USER_DATA_BYTES) {
    throw new CodingException("encoded user data too large (" + bData.userData.payload.length + " > "+ SmsMessage.MAX_USER_DATA_BYTES+ " bytes)");
  }
  int dataBits=(bData.userData.payload.length * 8) - bData.userData.paddingBits;
  int paramBits=dataBits + 13;
  if ((bData.userData.msgEncoding == UserData.ENCODING_IS91_EXTENDED_PROTOCOL) || (bData.userData.msgEncoding == UserData.ENCODING_GSM_DCS)) {
    paramBits+=8;
  }
  int paramBytes=(paramBits / 8) + ((paramBits % 8) > 0 ? 1 : 0);
  int paddingBits=(paramBytes * 8) - paramBits;
  outStream.write(8,paramBytes);
  outStream.write(5,bData.userData.msgEncoding);
  if ((bData.userData.msgEncoding == UserData.ENCODING_IS91_EXTENDED_PROTOCOL) || (bData.userData.msgEncoding == UserData.ENCODING_GSM_DCS)) {
    outStream.write(8,bData.userData.msgType);
  }
  outStream.write(8,bData.userData.numFields);
  outStream.writeByteArray(dataBits,bData.userData.payload);
  if (paddingBits > 0)   outStream.write(paddingBits,0);
}
