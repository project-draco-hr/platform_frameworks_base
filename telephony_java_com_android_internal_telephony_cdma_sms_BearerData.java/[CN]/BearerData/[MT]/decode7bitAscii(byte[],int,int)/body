{
  try {
    offset*=8;
    StringBuffer strBuf=new StringBuffer(numFields);
    BitwiseInputStream inStream=new BitwiseInputStream(data);
    int wantedBits=(offset * 8) + (numFields * 7);
    if (inStream.available() < wantedBits) {
      throw new CodingException("insufficient data (wanted " + wantedBits + " bits, but only have "+ inStream.available()+ ")");
    }
    inStream.skip(offset);
    for (int i=0; i < numFields; i++) {
      int charCode=inStream.read(7);
      if ((charCode >= UserData.ASCII_MAP_BASE_INDEX) && (charCode <= UserData.ASCII_MAP_MAX_INDEX)) {
        strBuf.append(UserData.ASCII_MAP[charCode - UserData.ASCII_MAP_BASE_INDEX]);
      }
 else       if (charCode == UserData.ASCII_NL_INDEX) {
        strBuf.append('\n');
      }
 else       if (charCode == UserData.ASCII_CR_INDEX) {
        strBuf.append('\r');
      }
 else {
        strBuf.append(' ');
      }
    }
    return strBuf.toString();
  }
 catch (  BitwiseInputStream.AccessException ex) {
    throw new CodingException("7bit ASCII decode failed: " + ex);
  }
}
