{
  if (inStream.available() < 13) {
    throw new CodingException("SERVICE_CATEGORY_PROGRAM_DATA decode failed: only " + inStream.available() + " bits available");
  }
  int paramBits=inStream.read(8) * 8;
  int msgEncoding=inStream.read(5);
  paramBits-=5;
  if (inStream.available() < paramBits) {
    throw new CodingException("SERVICE_CATEGORY_PROGRAM_DATA decode failed: only " + inStream.available() + " bits available ("+ paramBits+ " bits expected)");
  }
  ArrayList<CdmaSmsCbProgramData> programDataList=new ArrayList<CdmaSmsCbProgramData>();
  final int CATEGORY_FIELD_MIN_SIZE=6 * 8;
  boolean decodeSuccess=false;
  while (paramBits >= CATEGORY_FIELD_MIN_SIZE) {
    int operation=inStream.read(4);
    int category=(inStream.read(8) << 8) | inStream.read(8);
    String language=getLanguageCodeForValue(inStream.read(8));
    int maxMessages=inStream.read(8);
    int alertOption=inStream.read(4);
    int numFields=inStream.read(8);
    paramBits-=CATEGORY_FIELD_MIN_SIZE;
    int textBits=getBitsForNumFields(msgEncoding,numFields);
    if (paramBits < textBits) {
      throw new CodingException("category name is " + textBits + " bits in length,"+ " but there are only "+ paramBits+ " bits available");
    }
    UserData userData=new UserData();
    userData.msgEncoding=msgEncoding;
    userData.msgEncodingSet=true;
    userData.numFields=numFields;
    userData.payload=inStream.readByteArray(textBits);
    paramBits-=textBits;
    decodeUserDataPayload(userData,false);
    String categoryName=userData.payloadStr;
    CdmaSmsCbProgramData programData=new CdmaSmsCbProgramData(operation,category,language,maxMessages,alertOption,categoryName);
    programDataList.add(programData);
    decodeSuccess=true;
  }
  if ((!decodeSuccess) || (paramBits > 0)) {
    Log.d(LOG_TAG,"SERVICE_CATEGORY_PROGRAM_DATA decode " + (decodeSuccess ? "succeeded" : "failed") + " (extra bits = "+ paramBits+ ')');
  }
  inStream.skip(paramBits);
  bData.serviceCategoryProgramData=programDataList;
  return decodeSuccess;
}
