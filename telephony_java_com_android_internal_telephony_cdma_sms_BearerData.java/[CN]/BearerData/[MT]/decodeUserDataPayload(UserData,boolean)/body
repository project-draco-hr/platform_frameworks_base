{
  int offset=0;
  if (hasUserDataHeader) {
    int udhLen=userData.payload[0] & 0x00FF;
    offset+=udhLen + 1;
    byte[] headerData=new byte[udhLen];
    System.arraycopy(userData.payload,1,headerData,0,udhLen);
    userData.userDataHeader=SmsHeader.fromByteArray(headerData);
  }
switch (userData.msgEncoding) {
case UserData.ENCODING_OCTET:
    break;
case UserData.ENCODING_7BIT_ASCII:
  userData.payloadStr=decode7bitAscii(userData.payload,offset,userData.numFields);
break;
case UserData.ENCODING_IA5:
userData.payloadStr=decodeIa5(userData.payload,offset,userData.numFields);
break;
case UserData.ENCODING_UNICODE_16:
userData.payloadStr=decodeUtf16(userData.payload,offset,userData.numFields);
break;
case UserData.ENCODING_GSM_7BIT_ALPHABET:
userData.payloadStr=decode7bitGsm(userData.payload,offset,userData.numFields);
break;
default :
throw new CodingException("unsupported user data encoding (" + userData.msgEncoding + ")");
}
}
