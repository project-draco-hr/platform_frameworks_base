{
  int offset=0;
  if (hasUserDataHeader) {
    int UdhLen=userData.payload[0];
    byte[] headerData=new byte[UdhLen];
    System.arraycopy(userData.payload,1,headerData,0,UdhLen);
    userData.userDataHeader=SmsHeader.parse(headerData);
  }
switch (userData.msgEncoding) {
case UserData.ENCODING_OCTET:
    break;
case UserData.ENCODING_7BIT_ASCII:
  userData.payloadStr=decodePayloadStr(userData.payload,offset,userData.numFields,"US-ASCII");
break;
case UserData.ENCODING_IA5:
userData.payloadStr=decodeIa5(userData.payload,offset,userData.numFields);
break;
case UserData.ENCODING_UNICODE_16:
userData.payloadStr=decodePayloadStr(userData.payload,offset,userData.numFields * 2,"UTF-16");
break;
case UserData.ENCODING_GSM_7BIT_ALPHABET:
userData.payloadStr=GsmAlphabet.gsm7BitPackedToString(userData.payload,offset,userData.numFields);
break;
default :
throw new CodingException("unsupported user data encoding (" + userData.msgEncoding + ")");
}
}
