{
  try {
    offset*=8;
    StringBuffer strBuf=new StringBuffer(numFields);
    BitwiseInputStream inStream=new BitwiseInputStream(data);
    int wantedBits=(offset * 8) + (numFields * 7);
    if (inStream.available() < wantedBits) {
      throw new CodingException("insufficient data (wanted " + wantedBits + " bits, but only have "+ inStream.available()+ ")");
    }
    inStream.skip(offset);
    for (int i=0; i < numFields; i++) {
      int charCode=inStream.read(7);
      if ((charCode < UserData.IA5_MAP_BASE_INDEX) || (charCode > UserData.IA5_MAP_MAX_INDEX)) {
        throw new CodingException("unsupported AI5 character code (" + charCode + ")");
      }
      strBuf.append(UserData.IA5_MAP[charCode - UserData.IA5_MAP_BASE_INDEX]);
    }
    return strBuf.toString();
  }
 catch (  BitwiseInputStream.AccessException ex) {
    throw new CodingException("AI5 decode failed: " + ex);
  }
}
