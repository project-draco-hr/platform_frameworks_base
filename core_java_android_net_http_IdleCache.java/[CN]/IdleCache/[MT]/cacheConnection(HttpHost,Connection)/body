{
  boolean ret=false;
  if (HttpLog.LOGV) {
    HttpLog.v("IdleCache size " + mCount + " host "+ host);
  }
  if (mCount < IDLE_CACHE_MAX) {
    long time=SystemClock.uptimeMillis();
    for (int i=0; i < IDLE_CACHE_MAX; i++) {
      Entry entry=mEntries[i];
      if (entry.mHost == null) {
        entry.mHost=host;
        entry.mConnection=connection;
        entry.mTimeout=time + TIMEOUT;
        mCount++;
        if (HttpLog.LOGV)         mCached++;
        ret=true;
        if (mThread == null) {
          mThread=new IdleReaper();
          mThread.start();
        }
        break;
      }
    }
  }
  return ret;
}
