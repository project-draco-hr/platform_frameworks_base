{
  mHandler=new DisplayControllerHandler(looper);
  mNotifier=notifier;
  mSuspendBlocker=suspendBlocker;
  mCallbacks=callbacks;
  mCallbackHandler=callbackHandler;
  mLights=lights;
  mSensorManager=new SystemSensorManager(mHandler.getLooper());
  final Resources resources=context.getResources();
  mScreenBrightnessDimConfig=resources.getInteger(com.android.internal.R.integer.config_screenBrightnessDim);
  mUseSoftwareAutoBrightnessConfig=resources.getBoolean(com.android.internal.R.bool.config_automatic_brightness_available);
  if (mUseSoftwareAutoBrightnessConfig) {
    mAutoBrightnessLevelsConfig=resources.getIntArray(com.android.internal.R.array.config_autoBrightnessLevels);
    mAutoBrightnessLcdBacklightValuesConfig=resources.getIntArray(com.android.internal.R.array.config_autoBrightnessLcdBacklightValues);
    if (mAutoBrightnessLcdBacklightValuesConfig.length != mAutoBrightnessLevelsConfig.length + 1) {
      Slog.e(TAG,"Error in config.xml.  config_autoBrightnessLcdBacklightValues " + "(size " + mAutoBrightnessLcdBacklightValuesConfig.length + ") "+ "should have exactly one more entry than "+ "config_autoBrightnessLevels (size "+ mAutoBrightnessLevelsConfig.length+ ").  "+ "Auto-brightness will be disabled.");
      mUseSoftwareAutoBrightnessConfig=false;
    }
    mLightSensorWarmUpTimeConfig=resources.getInteger(com.android.internal.R.integer.config_lightSensorWarmupTime);
  }
  if (!DEBUG_PRETEND_PROXIMITY_SENSOR_ABSENT) {
    mProximitySensor=mSensorManager.getDefaultSensor(Sensor.TYPE_PROXIMITY);
    if (mProximitySensor != null) {
      mProximityThreshold=Math.min(mProximitySensor.getMaximumRange(),TYPICAL_PROXIMITY_THRESHOLD);
    }
  }
  if (mUseSoftwareAutoBrightnessConfig && !DEBUG_PRETEND_LIGHT_SENSOR_ABSENT) {
    mLightSensor=mSensorManager.getDefaultSensor(Sensor.TYPE_LIGHT);
  }
}
