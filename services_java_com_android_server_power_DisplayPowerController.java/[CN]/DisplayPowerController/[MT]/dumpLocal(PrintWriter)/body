{
  pw.println();
  pw.println("Display Controller Thread State:");
  pw.println("  mPowerRequest=" + mPowerRequest);
  pw.println("  mWaitingForNegativeProximity=" + mWaitingForNegativeProximity);
  pw.println("  mProximitySensor=" + mProximitySensor);
  pw.println("  mProximitySensorEnabled=" + mProximitySensorEnabled);
  pw.println("  mProximityThreshold=" + mProximityThreshold);
  pw.println("  mProximity=" + proximityToString(mProximity));
  pw.println("  mPendingProximity=" + proximityToString(mPendingProximity));
  pw.println("  mPendingProximityDebounceTime=" + TimeUtils.formatUptime(mPendingProximityDebounceTime));
  pw.println("  mScreenOffBecauseOfProximity=" + mScreenOffBecauseOfProximity);
  pw.println("  mLightSensor=" + mLightSensor);
  pw.println("  mLightSensorEnabled=" + mLightSensorEnabled);
  pw.println("  mLightSensorEnableTime=" + TimeUtils.formatUptime(mLightSensorEnableTime));
  pw.println("  mLightMeasurement=" + mLightMeasurement);
  pw.println("  mLightMeasurementValid=" + mLightMeasurementValid);
  pw.println("  mLastLightSample=" + mLastLightSample);
  pw.println("  mLastLightSampleTime=" + TimeUtils.formatUptime(mLastLightSampleTime));
  pw.println("  mRecentLightSamples=" + mRecentLightSamples);
  pw.println("  mRecentLightAverage=" + mRecentLightAverage);
  pw.println("  mRecentLightBrightening=" + mRecentLightBrightening);
  pw.println("  mRecentLightTimeConstant=" + mRecentLightTimeConstant);
  pw.println("  mPendingLightSensorDebounceTime=" + TimeUtils.formatUptime(mPendingLightSensorDebounceTime));
  pw.println("  mScreenAutoBrightness=" + mScreenAutoBrightness);
  pw.println("  mUsingScreenAutoBrightness=" + mUsingScreenAutoBrightness);
  if (mElectronBeamOnAnimator != null) {
    pw.println("  mElectronBeamOnAnimator.isStarted()=" + mElectronBeamOnAnimator.isStarted());
  }
  if (mElectronBeamOffAnimator != null) {
    pw.println("  mElectronBeamOffAnimator.isStarted()=" + mElectronBeamOffAnimator.isStarted());
  }
  if (mPowerState != null) {
    mPowerState.dump(pw);
  }
}
