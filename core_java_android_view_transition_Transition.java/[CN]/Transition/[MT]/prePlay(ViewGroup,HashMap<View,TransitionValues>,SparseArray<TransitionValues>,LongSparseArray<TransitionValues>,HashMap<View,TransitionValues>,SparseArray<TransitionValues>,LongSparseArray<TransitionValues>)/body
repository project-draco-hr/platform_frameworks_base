{
  mPlayStartValuesList.clear();
  mPlayEndValuesList.clear();
  HashMap<View,TransitionValues> endCopy=new HashMap<View,TransitionValues>(endValues);
  SparseArray<TransitionValues> endIdCopy=new SparseArray<TransitionValues>(endIdValues.size());
  for (int i=0; i < endIdValues.size(); ++i) {
    int id=endIdValues.keyAt(i);
    endIdCopy.put(id,endIdValues.valueAt(i));
  }
  LongSparseArray<TransitionValues> endItemIdCopy=new LongSparseArray<TransitionValues>(endItemIdValues.size());
  for (int i=0; i < endItemIdValues.size(); ++i) {
    long id=endItemIdValues.keyAt(i);
    endItemIdCopy.put(id,endItemIdValues.valueAt(i));
  }
  ArrayList<TransitionValues> startValuesList=new ArrayList<TransitionValues>();
  ArrayList<TransitionValues> endValuesList=new ArrayList<TransitionValues>();
  for (  View view : startValues.keySet()) {
    TransitionValues start=null;
    TransitionValues end=null;
    boolean isInListView=false;
    if (view.getParent() instanceof ListView) {
      isInListView=true;
    }
    if (!isInListView) {
      int id=view.getId();
      start=startValues.get(view) != null ? startValues.get(view) : startIdValues.get(id);
      if (endValues.get(view) != null) {
        end=endValues.get(view);
        endCopy.remove(view);
      }
 else {
        end=endIdValues.get(id);
        View removeView=null;
        for (        View viewToRemove : endCopy.keySet()) {
          if (viewToRemove.getId() == id) {
            removeView=viewToRemove;
          }
        }
        if (removeView != null) {
          endCopy.remove(removeView);
        }
      }
      endIdCopy.remove(id);
      if (isValidTarget(view,id)) {
        startValuesList.add(start);
        endValuesList.add(end);
      }
    }
 else {
      ListView parent=(ListView)view.getParent();
      if (parent.getAdapter().hasStableIds()) {
        int position=parent.getPositionForView(view);
        long itemId=parent.getItemIdAtPosition(position);
        start=startItemIdValues.get(itemId);
        endItemIdCopy.remove(itemId);
        startValuesList.add(start);
        endValuesList.add(end);
      }
    }
  }
  int startItemIdCopySize=startItemIdValues.size();
  for (int i=0; i < startItemIdCopySize; ++i) {
    long id=startItemIdValues.keyAt(i);
    if (isValidTarget(null,id)) {
      TransitionValues start=startItemIdValues.get(id);
      TransitionValues end=endItemIdValues.get(id);
      endItemIdCopy.remove(id);
      startValuesList.add(start);
      endValuesList.add(end);
    }
  }
  for (  View view : endCopy.keySet()) {
    int id=view.getId();
    if (isValidTarget(view,id)) {
      TransitionValues start=startValues.get(view) != null ? startValues.get(view) : startIdValues.get(id);
      TransitionValues end=endCopy.get(view);
      endIdCopy.remove(id);
      startValuesList.add(start);
      endValuesList.add(end);
    }
  }
  int endIdCopySize=endIdCopy.size();
  for (int i=0; i < endIdCopySize; ++i) {
    int id=endIdCopy.keyAt(i);
    if (isValidTarget(null,id)) {
      TransitionValues start=startIdValues.get(id);
      TransitionValues end=endIdCopy.get(id);
      startValuesList.add(start);
      endValuesList.add(end);
    }
  }
  int endItemIdCopySize=endItemIdCopy.size();
  for (int i=0; i < endItemIdCopySize; ++i) {
    long id=endItemIdCopy.keyAt(i);
    TransitionValues start=startItemIdValues.get(id);
    TransitionValues end=endItemIdCopy.get(id);
    startValuesList.add(start);
    endValuesList.add(end);
  }
  for (int i=0; i < startValuesList.size(); ++i) {
    TransitionValues start=startValuesList.get(i);
    TransitionValues end=endValuesList.get(i);
    if (prePlay(sceneRoot,start,end)) {
      mPlayStartValuesList.add(start);
      mPlayEndValuesList.add(end);
    }
  }
}
