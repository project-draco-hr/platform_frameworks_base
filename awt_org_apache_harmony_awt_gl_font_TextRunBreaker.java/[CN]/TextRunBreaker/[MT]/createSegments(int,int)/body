{
  int endStyleRun, endLevelRun;
  int pos=runStart, levelPos;
  aci.setIndex(pos);
  final int firstRunStart=aci.getRunStart();
  Object tdd=decorations.get(new Integer(firstRunStart));
  Object fontOrGAttr=fonts.get(new Integer(firstRunStart));
  logical2segment=new int[runEnd - runStart];
  do {
    endStyleRun=getStyleRunLimit(pos,runEnd);
    int ajustedPos=pos - runStart;
    int ajustedEndStyleRun=endStyleRun - runStart;
    levelPos=ajustedPos;
    do {
      endLevelRun=getLevelRunLimit(levelPos,ajustedEndStyleRun);
      if (fontOrGAttr instanceof GraphicAttribute) {
        runSegments.add(new TextRunSegmentImpl.TextRunSegmentGraphic((GraphicAttribute)fontOrGAttr,endLevelRun - levelPos,levelPos + runStart));
        Arrays.fill(logical2segment,levelPos,endLevelRun,runSegments.size() - 1);
      }
 else {
        TextRunSegmentImpl.TextSegmentInfo i=new TextRunSegmentImpl.TextSegmentInfo(levels == null ? 0 : levels[ajustedPos],(Font)fontOrGAttr,frc,text,levelPos + runStart,endLevelRun + runStart);
        runSegments.add(new TextRunSegmentImpl.TextRunSegmentCommon(i,(TextDecorator.Decoration)tdd));
        Arrays.fill(logical2segment,levelPos,endLevelRun,runSegments.size() - 1);
      }
      levelPos=endLevelRun;
    }
 while (levelPos < ajustedEndStyleRun);
    pos=endStyleRun;
    tdd=decorations.get(new Integer(pos));
    fontOrGAttr=fonts.get(new Integer(pos));
  }
 while (pos < runEnd);
}
