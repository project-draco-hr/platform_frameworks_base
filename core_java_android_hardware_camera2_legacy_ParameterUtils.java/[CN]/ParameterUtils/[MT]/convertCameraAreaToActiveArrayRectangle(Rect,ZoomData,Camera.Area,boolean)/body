{
  Rect previewCrop=zoomData.previewCrop;
  Rect reportedCrop=zoomData.reportedCrop;
  float scaleW=previewCrop.width() * 1.0f / (NORMALIZED_RECTANGLE_MAX - NORMALIZED_RECTANGLE_MIN);
  float scaleH=previewCrop.height() * 1.0f / (NORMALIZED_RECTANGLE_MAX - NORMALIZED_RECTANGLE_MIN);
  Matrix transform=new Matrix();
  transform.setTranslate(NORMALIZED_RECTANGLE_MAX,NORMALIZED_RECTANGLE_MAX);
  transform.postScale(scaleW,scaleH);
  transform.postTranslate(previewCrop.left,previewCrop.top);
  Rect cropToIntersectAgainst=usePreviewCrop ? previewCrop : reportedCrop;
  Rect reportedMetering=ParamsUtils.mapRect(transform,area.rect);
  if (!reportedMetering.intersect(cropToIntersectAgainst)) {
    reportedMetering.set(RECTANGLE_EMPTY);
  }
  int weight=area.weight;
  if (weight < MeteringRectangle.METERING_WEIGHT_MIN) {
    Log.w(TAG,"convertCameraAreaToMeteringRectangle - rectangle " + stringFromArea(area) + " has too small weight, clip to 0");
    weight=0;
  }
  return new WeightedRectangle(reportedMetering,area.weight);
}
