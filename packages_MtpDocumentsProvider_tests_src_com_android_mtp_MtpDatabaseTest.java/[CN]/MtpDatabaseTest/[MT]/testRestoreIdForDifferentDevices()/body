{
  final MtpDatabase database=new MtpDatabase(getContext());
  final String[] columns=new String[]{DocumentsContract.Document.COLUMN_DOCUMENT_ID,MtpDatabase.COLUMN_STORAGE_ID,DocumentsContract.Document.COLUMN_DISPLAY_NAME};
  database.putRootDocuments(0,resources,new MtpRoot[]{new MtpRoot(0,100,"Device","Storage",0,0,"")});
  database.putRootDocuments(1,resources,new MtpRoot[]{new MtpRoot(1,100,"Device","Storage",0,0,"")});
{
    final Cursor cursor=database.queryChildDocuments(columns);
    assertEquals(2,cursor.getCount());
    cursor.moveToNext();
    assertEquals("documentId",1,cursor.getInt(0));
    assertEquals("storageId",100,cursor.getInt(1));
    assertEquals("name","Device Storage",cursor.getString(2));
    cursor.moveToNext();
    assertEquals("documentId",2,cursor.getInt(0));
    assertEquals("storageId",100,cursor.getInt(1));
    assertEquals("name","Device Storage",cursor.getString(2));
    cursor.close();
  }
  database.clearMapping();
  database.putRootDocuments(0,resources,new MtpRoot[]{new MtpRoot(0,200,"Device","Storage",0,0,"")});
  database.putRootDocuments(1,resources,new MtpRoot[]{new MtpRoot(1,300,"Device","Storage",0,0,"")});
  database.resolveRootDocuments(0);
  database.resolveRootDocuments(1);
{
    final Cursor cursor=database.queryChildDocuments(columns);
    assertEquals(2,cursor.getCount());
    cursor.moveToNext();
    assertEquals("documentId",1,cursor.getInt(0));
    assertEquals("storageId",200,cursor.getInt(1));
    assertEquals("name","Device Storage",cursor.getString(2));
    cursor.moveToNext();
    assertEquals("documentId",2,cursor.getInt(0));
    assertEquals("storageId",300,cursor.getInt(1));
    assertEquals("name","Device Storage",cursor.getString(2));
    cursor.close();
  }
}
