{
  final String[] columns=new String[]{DocumentsContract.Document.COLUMN_DOCUMENT_ID,MtpDatabaseConstants.COLUMN_STORAGE_ID,DocumentsContract.Document.COLUMN_DISPLAY_NAME};
  final String[] rootColumns=new String[]{Root.COLUMN_ROOT_ID,Root.COLUMN_AVAILABLE_BYTES};
  addTestDevice();
  mDatabase.getMapper().startAddingDocuments("1");
  mDatabase.getMapper().putStorageDocuments("1",new MtpRoot[]{new MtpRoot(0,100,"Storage",0,0,"")});
  mDatabase.getMapper().clearMapping();
  mDatabase.getMapper().startAddingDocuments(null);
  mDatabase.getMapper().putDeviceDocument(new MtpDeviceRecord(0,"Device",false,new MtpRoot[0],null,null));
  mDatabase.getMapper().stopAddingDocuments(null);
  try (final Cursor cursor=mDatabase.queryRoots(resources,rootColumns)){
    assertEquals(1,cursor.getCount());
    cursor.moveToNext();
    assertEquals("1",getString(cursor,Root.COLUMN_ROOT_ID));
  }
   mDatabase.getMapper().startAddingDocuments("1");
  mDatabase.getMapper().putStorageDocuments("1",new MtpRoot[]{new MtpRoot(0,200,"Storage",2000,0,"")});
  mDatabase.getMapper().clearMapping();
  mDatabase.getMapper().startAddingDocuments(null);
  mDatabase.getMapper().putDeviceDocument(new MtpDeviceRecord(0,"Device",false,new MtpRoot[0],null,null));
  mDatabase.getMapper().stopAddingDocuments(null);
  mDatabase.getMapper().startAddingDocuments("1");
  mDatabase.getMapper().putStorageDocuments("1",new MtpRoot[]{new MtpRoot(0,300,"Storage",3000,0,"")});
  mDatabase.getMapper().stopAddingDocuments("1");
{
    final Cursor cursor=mDatabase.queryRootDocuments(columns);
    assertEquals(1,cursor.getCount());
    cursor.moveToNext();
    assertEquals(2,getInt(cursor,COLUMN_DOCUMENT_ID));
    assertEquals(300,getInt(cursor,COLUMN_STORAGE_ID));
    assertEquals("Storage",getString(cursor,COLUMN_DISPLAY_NAME));
    cursor.close();
  }
{
    final Cursor cursor=mDatabase.queryRoots(resources,rootColumns);
    assertEquals(1,cursor.getCount());
    cursor.moveToNext();
    assertEquals(1,getInt(cursor,Root.COLUMN_ROOT_ID));
    assertEquals(3000,getInt(cursor,Root.COLUMN_AVAILABLE_BYTES));
    cursor.close();
  }
}
