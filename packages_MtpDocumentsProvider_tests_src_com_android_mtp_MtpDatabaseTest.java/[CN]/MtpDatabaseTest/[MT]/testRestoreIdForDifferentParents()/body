{
  final String[] columns=new String[]{DocumentsContract.Document.COLUMN_DOCUMENT_ID,MtpDatabaseConstants.COLUMN_OBJECT_HANDLE};
  addTestDevice();
  addTestStorage("1");
  mDatabase.getMapper().startAddingDocuments("2");
  mDatabase.getMapper().putChildDocuments(0,"2",OPERATIONS_SUPPORTED,new MtpObjectInfo[]{createDocument(50,"A",MtpConstants.FORMAT_ASSOCIATION,0),createDocument(51,"B",MtpConstants.FORMAT_ASSOCIATION,0)},new long[]{0L,0L});
  mDatabase.getMapper().stopAddingDocuments("2");
  mDatabase.getMapper().startAddingDocuments("3");
  mDatabase.getMapper().startAddingDocuments("4");
  mDatabase.getMapper().putChildDocuments(0,"3",OPERATIONS_SUPPORTED,new MtpObjectInfo[]{createDocument(100,"note.txt",MtpConstants.FORMAT_TEXT,1024)},new long[]{1024L});
  mDatabase.getMapper().putChildDocuments(0,"4",OPERATIONS_SUPPORTED,new MtpObjectInfo[]{createDocument(101,"note.txt",MtpConstants.FORMAT_TEXT,1024)},new long[]{1024L});
  mDatabase.getMapper().clearMapping();
  addTestDevice();
  addTestStorage("1");
  mDatabase.getMapper().startAddingDocuments("2");
  mDatabase.getMapper().putChildDocuments(0,"2",OPERATIONS_SUPPORTED,new MtpObjectInfo[]{createDocument(50,"A",MtpConstants.FORMAT_ASSOCIATION,0),createDocument(51,"B",MtpConstants.FORMAT_ASSOCIATION,0)},new long[]{0L,0L});
  mDatabase.getMapper().stopAddingDocuments("2");
  mDatabase.getMapper().startAddingDocuments("3");
  mDatabase.getMapper().startAddingDocuments("4");
  mDatabase.getMapper().putChildDocuments(0,"3",OPERATIONS_SUPPORTED,new MtpObjectInfo[]{createDocument(200,"note.txt",MtpConstants.FORMAT_TEXT,1024)},new long[]{1024L});
  mDatabase.getMapper().putChildDocuments(0,"4",OPERATIONS_SUPPORTED,new MtpObjectInfo[]{createDocument(201,"note.txt",MtpConstants.FORMAT_TEXT,1024)},new long[]{1024L});
  mDatabase.getMapper().stopAddingDocuments("3");
  mDatabase.getMapper().stopAddingDocuments("4");
{
    final Cursor cursor=mDatabase.queryChildDocuments(columns,"3");
    assertEquals(1,cursor.getCount());
    cursor.moveToNext();
    assertEquals(5,getInt(cursor,COLUMN_DOCUMENT_ID));
    assertEquals(200,getInt(cursor,COLUMN_OBJECT_HANDLE));
    cursor.close();
  }
{
    final Cursor cursor=mDatabase.queryChildDocuments(columns,"4");
    assertEquals(1,cursor.getCount());
    cursor.moveToNext();
    assertEquals(6,getInt(cursor,COLUMN_DOCUMENT_ID));
    assertEquals(201,getInt(cursor,COLUMN_OBJECT_HANDLE));
    cursor.close();
  }
}
