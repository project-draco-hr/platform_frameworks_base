{
  final String[] columns=new String[]{DocumentsContract.Document.COLUMN_DOCUMENT_ID,MtpDatabaseConstants.COLUMN_OBJECT_HANDLE};
  mDatabase.getMapper().startAddingDocuments("parentId1");
  mDatabase.getMapper().startAddingDocuments("parentId2");
  mDatabase.getMapper().putChildDocuments(0,"parentId1",new MtpObjectInfo[]{createDocument(100,"note.txt",MtpConstants.FORMAT_TEXT,1024)});
  mDatabase.getMapper().putChildDocuments(0,"parentId2",new MtpObjectInfo[]{createDocument(101,"note.txt",MtpConstants.FORMAT_TEXT,1024)});
  mDatabase.getMapper().clearMapping();
  mDatabase.getMapper().startAddingDocuments("parentId1");
  mDatabase.getMapper().startAddingDocuments("parentId2");
  mDatabase.getMapper().putChildDocuments(0,"parentId1",new MtpObjectInfo[]{createDocument(200,"note.txt",MtpConstants.FORMAT_TEXT,1024)});
  mDatabase.getMapper().putChildDocuments(0,"parentId2",new MtpObjectInfo[]{createDocument(201,"note.txt",MtpConstants.FORMAT_TEXT,1024)});
  mDatabase.getMapper().stopAddingDocuments("parentId1");
{
    final Cursor cursor=mDatabase.queryChildDocuments(columns,"parentId1");
    assertEquals(1,cursor.getCount());
    cursor.moveToNext();
    assertEquals(1,getInt(cursor,COLUMN_DOCUMENT_ID));
    assertEquals(200,getInt(cursor,COLUMN_OBJECT_HANDLE));
    cursor.close();
  }
{
    final Cursor cursor=mDatabase.queryChildDocuments(columns,"parentId2");
    assertEquals(1,cursor.getCount());
    cursor.moveToNext();
    assertEquals(2,getInt(cursor,COLUMN_DOCUMENT_ID));
    assertEquals(201,getInt(cursor,COLUMN_OBJECT_HANDLE));
    cursor.close();
  }
}
