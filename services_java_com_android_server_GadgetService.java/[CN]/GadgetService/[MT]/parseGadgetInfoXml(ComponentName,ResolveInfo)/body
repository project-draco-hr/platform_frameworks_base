{
  Provider p=null;
  ActivityInfo activityInfo=ri.activityInfo;
  XmlResourceParser parser=null;
  try {
    parser=activityInfo.loadXmlMetaData(mPackageManager,GadgetManager.GADGET_PROVIDER_META_DATA);
    if (parser == null) {
      Log.w(TAG,"No " + GadgetManager.GADGET_PROVIDER_META_DATA + " meta-data for "+ "gadget provider '"+ component+ '\'');
      return null;
    }
    AttributeSet attrs=Xml.asAttributeSet(parser);
    int type;
    while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && type != XmlPullParser.START_TAG) {
    }
    String nodeName=parser.getName();
    if (!"gadget-provider".equals(nodeName)) {
      Log.w(TAG,"Meta-data does not start with gadget-provider tag for" + " gadget provider '" + component + '\'');
      return null;
    }
    p=new Provider();
    GadgetInfo info=p.info=new GadgetInfo();
    info.provider=component;
    p.uid=activityInfo.applicationInfo.uid;
    TypedArray sa=mContext.getResources().obtainAttributes(attrs,com.android.internal.R.styleable.GadgetProviderInfo);
    info.minWidth=sa.getDimensionPixelSize(com.android.internal.R.styleable.GadgetProviderInfo_minWidth,0);
    info.minHeight=sa.getDimensionPixelSize(com.android.internal.R.styleable.GadgetProviderInfo_minHeight,0);
    info.updatePeriodMillis=sa.getInt(com.android.internal.R.styleable.GadgetProviderInfo_updatePeriodMillis,0);
    info.initialLayout=sa.getResourceId(com.android.internal.R.styleable.GadgetProviderInfo_initialLayout,0);
    String className=sa.getString(com.android.internal.R.styleable.GadgetProviderInfo_configure);
    if (className != null) {
      info.configure=new ComponentName(component.getPackageName(),className);
    }
    info.label=activityInfo.loadLabel(mPackageManager).toString();
    info.icon=ri.getIconResource();
    sa.recycle();
  }
 catch (  Exception e) {
    Log.w(TAG,"XML parsing failed for gadget provider '" + component + '\'',e);
  }
 finally {
    if (parser != null)     parser.close();
  }
  return p;
}
