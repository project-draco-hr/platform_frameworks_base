{
  AppInfo appInfo=sAppsModel.getApp(indexOfChild(v));
  ComponentName component=appInfo.getComponentName();
  long appUserSerialNumber=appInfo.getUserSerialNumber();
  UserHandle appUser=null;
  if (appUserSerialNumber != AppInfo.USER_UNSPECIFIED) {
    appUser=mUserManager.getUserForSerialNumber(appUserSerialNumber);
  }
  int appUserId;
  if (appUser != null) {
    appUserId=appUser.getIdentifier();
  }
 else {
    appUserId=ActivityManager.getCurrentUser();
    appUser=new UserHandle(appUserId);
  }
  Rect sourceBounds=new Rect();
  v.getBoundsOnScreen(sourceBounds);
  ActivityOptions opts=ActivityOptions.makeScaleUpAnimation(v,0,0,v.getWidth(),v.getHeight());
  Bundle optsBundle=opts.toBundle();
  Intent launchIntent=new Intent(Intent.ACTION_MAIN);
  launchIntent.addCategory(Intent.CATEGORY_LAUNCHER);
  launchIntent.setSourceBounds(sourceBounds);
  launchIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
  launchIntent.setPackage(component.getPackageName());
  IPackageManager pm=AppGlobals.getPackageManager();
  try {
    ActivityInfo info=pm.getActivityInfo(component,0,appUserId);
    if (info == null) {
      Toast.makeText(getContext(),R.string.activity_not_found,Toast.LENGTH_SHORT).show();
      Log.e(TAG,"Can't start activity " + component + " because it's not installed.");
      return;
    }
    if (!info.exported) {
      Toast.makeText(getContext(),R.string.activity_not_found,Toast.LENGTH_SHORT).show();
      Log.e(TAG,"Can't start activity " + component + " because it doesn't have 'exported' attribute.");
      return;
    }
  }
 catch (  RemoteException e) {
    Toast.makeText(getContext(),R.string.activity_not_found,Toast.LENGTH_SHORT).show();
    Log.e(TAG,"Failed to get activity info for " + component,e);
    return;
  }
  List<ResolveInfo> apps=getContext().getPackageManager().queryIntentActivitiesAsUser(launchIntent,0,appUserId);
  final int size=apps.size();
  for (int i=0; i < size; ++i) {
    ActivityInfo activityInfo=apps.get(i).activityInfo;
    if (activityInfo.packageName.equals(component.getPackageName()) && activityInfo.name.equals(component.getClassName())) {
      launchIntent.setComponent(component);
      mContext.startActivityAsUser(launchIntent,optsBundle,appUser);
      return;
    }
  }
  Toast.makeText(getContext(),R.string.activity_not_found,Toast.LENGTH_SHORT).show();
  Log.e(TAG,"Attempt to launch activity without category Intent.CATEGORY_LAUNCHER " + component);
}
