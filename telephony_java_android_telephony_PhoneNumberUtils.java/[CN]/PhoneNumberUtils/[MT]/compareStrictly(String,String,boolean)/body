{
  if (a == null || b == null) {
    return a == b;
  }
 else   if (a.length() == 0 && b.length() == 0) {
    return false;
  }
  int forwardIndexA=0;
  int forwardIndexB=0;
  CountryCallingCodeAndNewIndex cccA=tryGetCountryCallingCodeAndNewIndex(a,acceptInvalidCCCPrefix);
  CountryCallingCodeAndNewIndex cccB=tryGetCountryCallingCodeAndNewIndex(b,acceptInvalidCCCPrefix);
  boolean bothHasCountryCallingCode=false;
  boolean okToIgnorePrefix=true;
  boolean trunkPrefixIsOmittedA=false;
  boolean trunkPrefixIsOmittedB=false;
  if (cccA != null && cccB != null) {
    if (cccA.countryCallingCode != cccB.countryCallingCode) {
      return false;
    }
    okToIgnorePrefix=false;
    bothHasCountryCallingCode=true;
    forwardIndexA=cccA.newIndex;
    forwardIndexB=cccB.newIndex;
  }
 else   if (cccA == null && cccB == null) {
    okToIgnorePrefix=false;
  }
 else {
    if (cccA != null) {
      forwardIndexA=cccA.newIndex;
    }
 else {
      int tmp=tryGetTrunkPrefixOmittedIndex(b,0);
      if (tmp >= 0) {
        forwardIndexA=tmp;
        trunkPrefixIsOmittedA=true;
      }
    }
    if (cccB != null) {
      forwardIndexB=cccB.newIndex;
    }
 else {
      int tmp=tryGetTrunkPrefixOmittedIndex(b,0);
      if (tmp >= 0) {
        forwardIndexB=tmp;
        trunkPrefixIsOmittedB=true;
      }
    }
  }
  int backwardIndexA=a.length() - 1;
  int backwardIndexB=b.length() - 1;
  while (backwardIndexA >= forwardIndexA && backwardIndexB >= forwardIndexB) {
    boolean skip_compare=false;
    final char chA=a.charAt(backwardIndexA);
    final char chB=b.charAt(backwardIndexB);
    if (isSeparator(chA)) {
      backwardIndexA--;
      skip_compare=true;
    }
    if (isSeparator(chB)) {
      backwardIndexB--;
      skip_compare=true;
    }
    if (!skip_compare) {
      if (chA != chB) {
        return false;
      }
      backwardIndexA--;
      backwardIndexB--;
    }
  }
  if (okToIgnorePrefix) {
    if ((trunkPrefixIsOmittedA && forwardIndexA <= backwardIndexA) || !checkPrefixIsIgnorable(a,forwardIndexA,backwardIndexA)) {
      if (acceptInvalidCCCPrefix) {
        return compare(a,b,false);
      }
 else {
        return false;
      }
    }
    if ((trunkPrefixIsOmittedB && forwardIndexB <= backwardIndexB) || !checkPrefixIsIgnorable(b,forwardIndexA,backwardIndexB)) {
      if (acceptInvalidCCCPrefix) {
        return compare(a,b,false);
      }
 else {
        return false;
      }
    }
  }
 else {
    boolean maybeNamp=!bothHasCountryCallingCode;
    while (backwardIndexA >= forwardIndexA) {
      final char chA=a.charAt(backwardIndexA);
      if (isDialable(chA)) {
        if (maybeNamp && tryGetISODigit(chA) == 1) {
          maybeNamp=false;
        }
 else {
          return false;
        }
      }
      backwardIndexA--;
    }
    while (backwardIndexB >= forwardIndexB) {
      final char chB=b.charAt(backwardIndexB);
      if (isDialable(chB)) {
        if (maybeNamp && tryGetISODigit(chB) == 1) {
          maybeNamp=false;
        }
 else {
          return false;
        }
      }
      backwardIndexB--;
    }
  }
  return true;
}
