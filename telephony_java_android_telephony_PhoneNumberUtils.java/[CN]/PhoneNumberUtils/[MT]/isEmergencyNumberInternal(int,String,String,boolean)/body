{
  if (number == null)   return false;
  if (isUriNumber(number)) {
    return false;
  }
  number=extractNetworkPortionAlt(number);
  Rlog.d(LOG_TAG,"subId:" + subId + ", defaultCountryIso:"+ ((defaultCountryIso == null) ? "NULL" : defaultCountryIso));
  String emergencyNumbers="";
  int slotId=SubscriptionManager.getSlotId(subId);
  String ecclist=(slotId <= 0) ? "ril.ecclist" : ("ril.ecclist" + slotId);
  emergencyNumbers=SystemProperties.get(ecclist,"");
  Rlog.d(LOG_TAG,"slotId:" + slotId + ", emergencyNumbers: "+ emergencyNumbers);
  if (TextUtils.isEmpty(emergencyNumbers)) {
    emergencyNumbers=SystemProperties.get("ro.ril.ecclist");
  }
  if (!TextUtils.isEmpty(emergencyNumbers)) {
    for (    String emergencyNum : emergencyNumbers.split(",")) {
      if (useExactMatch || "BR".equalsIgnoreCase(defaultCountryIso)) {
        if (number.equals(emergencyNum)) {
          return true;
        }
      }
 else {
        if (number.startsWith(emergencyNum)) {
          return true;
        }
      }
    }
    return false;
  }
  Rlog.d(LOG_TAG,"System property doesn't provide any emergency numbers." + " Use embedded logic for determining ones.");
  emergencyNumbers=((slotId < 0) ? "112,911,000,08,110,118,119,999" : "112,911");
  for (  String emergencyNum : emergencyNumbers.split(",")) {
    if (useExactMatch) {
      if (number.equals(emergencyNum)) {
        return true;
      }
    }
 else {
      if (number.startsWith(emergencyNum)) {
        return true;
      }
    }
  }
  if (defaultCountryIso != null) {
    ShortNumberUtil util=new ShortNumberUtil();
    if (useExactMatch) {
      return util.isEmergencyNumber(number,defaultCountryIso);
    }
 else {
      return util.connectsToEmergencyNumber(number,defaultCountryIso);
    }
  }
  return false;
}
