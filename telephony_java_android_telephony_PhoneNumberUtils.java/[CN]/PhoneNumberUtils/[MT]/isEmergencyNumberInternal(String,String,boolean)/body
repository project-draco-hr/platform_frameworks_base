{
  if (number == null)   return false;
  if (isUriNumber(number)) {
    return false;
  }
  number=extractNetworkPortionAlt(number);
  String numbers=SystemProperties.get("ril.ecclist");
  if (TextUtils.isEmpty(numbers)) {
    numbers=SystemProperties.get("ro.ril.ecclist");
  }
  if (!TextUtils.isEmpty(numbers)) {
    for (    String emergencyNum : numbers.split(",")) {
      if (useExactMatch || "BR".equalsIgnoreCase(defaultCountryIso)) {
        if (number.equals(emergencyNum)) {
          return true;
        }
      }
 else {
        if (number.startsWith(emergencyNum)) {
          return true;
        }
      }
    }
    return false;
  }
  Log.d(LOG_TAG,"System property doesn't provide any emergency numbers." + " Use embedded logic for determining emergency numbers." + " number: " + toLogSafePhoneNumber(number) + ", Iso: "+ defaultCountryIso+ ", useExactMatch: "+ useExactMatch);
  if (defaultCountryIso != null) {
    ShortNumberUtil util=new ShortNumberUtil();
    if (useExactMatch) {
      return util.isEmergencyNumber(number,defaultCountryIso);
    }
 else {
      return util.connectsToEmergencyNumber(number,defaultCountryIso);
    }
  }
 else {
    if (useExactMatch) {
      return (number.equals("112") || number.equals("911"));
    }
 else {
      return (number.startsWith("112") || number.startsWith("911"));
    }
  }
}
