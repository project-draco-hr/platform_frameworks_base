{
  assertTrue(mKeyStore.password(TEST_PASSWD));
  assertFalse(mKeyStore.contains(TEST_KEYNAME));
  assertTrue(mKeyStore.generate(TEST_KEYNAME,KeyStore.UID_SELF,NativeCrypto.EVP_PKEY_RSA,1024,KeyStore.FLAG_ENCRYPTED,null));
  assertTrue(mKeyStore.contains(TEST_KEYNAME));
  assertFalse(mKeyStore.contains(TEST_KEYNAME,Process.WIFI_UID));
  assertFalse(mKeyStore.duplicate(TEST_KEYNAME1,-1,TEST_KEYNAME1,Process.WIFI_UID));
  assertFalse(mKeyStore.contains(TEST_KEYNAME1,Process.WIFI_UID));
  assertTrue(mKeyStore.duplicate(TEST_KEYNAME,-1,TEST_KEYNAME1,Process.WIFI_UID));
  assertTrue(mKeyStore.contains(TEST_KEYNAME));
  assertFalse(mKeyStore.contains(TEST_KEYNAME1));
  assertFalse(mKeyStore.contains(TEST_KEYNAME,Process.WIFI_UID));
  assertTrue(mKeyStore.contains(TEST_KEYNAME1,Process.WIFI_UID));
  assertFalse(mKeyStore.duplicate(TEST_KEYNAME,-1,TEST_KEYNAME1,Process.WIFI_UID));
  assertTrue(mKeyStore.duplicate(TEST_KEYNAME1,Process.WIFI_UID,TEST_KEYNAME2,Process.WIFI_UID));
  assertFalse(mKeyStore.contains(TEST_KEYNAME,Process.WIFI_UID));
  assertTrue(mKeyStore.contains(TEST_KEYNAME1,Process.WIFI_UID));
  assertTrue(mKeyStore.contains(TEST_KEYNAME2,Process.WIFI_UID));
  assertFalse(mKeyStore.duplicate(TEST_KEYNAME1,Process.WIFI_UID,TEST_KEYNAME2,Process.WIFI_UID));
  assertTrue(mKeyStore.duplicate(TEST_KEYNAME,-1,TEST_KEYNAME2,-1));
  assertTrue(mKeyStore.contains(TEST_KEYNAME));
  assertFalse(mKeyStore.contains(TEST_KEYNAME1));
  assertTrue(mKeyStore.contains(TEST_KEYNAME2));
  assertFalse(mKeyStore.duplicate(TEST_KEYNAME,-1,TEST_KEYNAME2,-1));
}
