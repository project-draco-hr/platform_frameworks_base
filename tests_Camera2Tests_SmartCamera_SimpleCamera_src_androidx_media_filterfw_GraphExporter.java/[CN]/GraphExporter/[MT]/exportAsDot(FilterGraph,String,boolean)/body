{
  Context myAppContext=graph.getContext().getApplicationContext();
  Filter[] filters=graph.getAllFilters();
  FileOutputStream fOut=myAppContext.openFileOutput(filename,Context.MODE_PRIVATE);
  OutputStreamWriter dotFile=new OutputStreamWriter(fOut);
  dotFile.write("digraph graphname {\n");
  dotFile.write("  node [shape=record];\n");
  for (  Filter filter : filters) {
    dotFile.write(getDotName("  " + filter.getName()) + " [label=\"{");
    Set<String> inputPorts=getInputPorts(filter,includeUnconnectedOptionalPorts);
    if (inputPorts.size() > 0) {
      dotFile.write(" { ");
      int counter=0;
      for (      String p : inputPorts) {
        dotFile.write("<" + getDotName(p) + "_IN>"+ p);
        if (++counter != inputPorts.size())         dotFile.write(" | ");
      }
      dotFile.write(" } | ");
    }
    dotFile.write(filter.getName());
    Set<String> outputPorts=getOutputPorts(filter,includeUnconnectedOptionalPorts);
    if (outputPorts.size() > 0) {
      dotFile.write(" | { ");
      int counter=0;
      for (      String p : outputPorts) {
        dotFile.write("<" + getDotName(p) + "_OUT>"+ p);
        if (++counter != outputPorts.size())         dotFile.write(" | ");
      }
      dotFile.write(" } ");
    }
    dotFile.write("}\"];\n");
  }
  dotFile.write("\n");
  int dummyNodeCounter=0;
  for (  Filter filter : filters) {
    Set<String> outputPorts=getOutputPorts(filter,includeUnconnectedOptionalPorts);
    for (    String portName : outputPorts) {
      OutputPort source=filter.getConnectedOutputPort(portName);
      if (source != null) {
        InputPort target=source.getTarget();
        dotFile.write("  " + getDotName(source.getFilter().getName()) + ":"+ getDotName(source.getName())+ "_OUT -> "+ getDotName(target.getFilter().getName())+ ":"+ getDotName(target.getName())+ "_IN;\n");
      }
 else {
        String color=filter.getSignature().getOutputPortInfo(portName).isRequired() ? "red" : "blue";
        dotFile.write("  " + "dummy" + (++dummyNodeCounter) + " [shape=point,label=\"\",color="+ color+ "];\n"+ "  "+ getDotName(filter.getName())+ ":"+ getDotName(portName)+ "_OUT -> "+ "dummy"+ dummyNodeCounter+ " [color="+ color+ "];\n");
      }
    }
    Set<String> inputPorts=getInputPorts(filter,includeUnconnectedOptionalPorts);
    for (    String portName : inputPorts) {
      InputPort target=filter.getConnectedInputPort(portName);
      if (target != null) {
      }
 else {
        String color=filter.getSignature().getInputPortInfo(portName).isRequired() ? "red" : "blue";
        dotFile.write("  " + "dummy" + (++dummyNodeCounter) + " [shape=point,label=\"\",color="+ color+ "];\n"+ "  dummy"+ dummyNodeCounter+ " -> "+ getDotName(filter.getName())+ ":"+ getDotName(portName)+ "_IN [color="+ color+ "];\n");
      }
    }
  }
  dotFile.write("}\n");
  dotFile.flush();
  dotFile.close();
}
