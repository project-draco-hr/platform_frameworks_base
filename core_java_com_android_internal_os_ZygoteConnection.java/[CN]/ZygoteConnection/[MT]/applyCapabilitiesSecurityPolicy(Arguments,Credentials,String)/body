{
  if (args.permittedCapabilities == 0 && args.effectiveCapabilities == 0) {
    return;
  }
  boolean allowed=SELinux.checkSELinuxAccess(peerSecurityContext,peerSecurityContext,"zygote","specifycapabilities");
  if (!allowed) {
    throw new ZygoteSecurityException("Peer may not specify capabilities");
  }
  if (peer.getUid() == 0) {
    return;
  }
  long permittedCaps;
  try {
    permittedCaps=ZygoteInit.capgetPermitted(peer.getPid());
  }
 catch (  IOException ex) {
    throw new ZygoteSecurityException("Error retrieving peer's capabilities.");
  }
  if (((~args.permittedCapabilities) & args.effectiveCapabilities) != 0) {
    throw new ZygoteSecurityException("Effective capabilities cannot be superset of " + " permitted capabilities");
  }
  if (((~permittedCaps) & args.permittedCapabilities) != 0) {
    throw new ZygoteSecurityException("Peer specified unpermitted capabilities");
  }
}
