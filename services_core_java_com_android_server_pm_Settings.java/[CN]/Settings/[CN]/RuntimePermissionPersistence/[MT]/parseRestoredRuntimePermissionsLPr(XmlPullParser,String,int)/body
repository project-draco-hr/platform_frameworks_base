{
  final int outerDepth=parser.getDepth();
  int type;
  while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && (type != XmlPullParser.END_TAG || parser.getDepth() > outerDepth)) {
    if (type == XmlPullParser.END_TAG || type == XmlPullParser.TEXT) {
      continue;
    }
switch (parser.getName()) {
case TAG_PERMISSION_ENTRY:
{
        final String permName=parser.getAttributeValue(null,ATTR_NAME);
        final boolean isGranted="true".equals(parser.getAttributeValue(null,ATTR_GRANTED));
        int permBits=0;
        if ("true".equals(parser.getAttributeValue(null,ATTR_USER_SET))) {
          permBits|=FLAG_PERMISSION_USER_SET;
        }
        if ("true".equals(parser.getAttributeValue(null,ATTR_USER_FIXED))) {
          permBits|=FLAG_PERMISSION_USER_FIXED;
        }
        if ("true".equals(parser.getAttributeValue(null,ATTR_REVOKE_ON_UPGRADE))) {
          permBits|=FLAG_PERMISSION_REVOKE_ON_UPGRADE;
        }
        if (isGranted || permBits != 0) {
          rememberRestoredUserGrantLPr(pkgName,permName,isGranted,permBits,userId);
        }
      }
    break;
}
}
}
