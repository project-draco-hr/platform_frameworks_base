{
  final int outerDepth=parser.getDepth();
  int type;
  while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && (type != XmlPullParser.END_TAG || parser.getDepth() > outerDepth)) {
    if (type == XmlPullParser.END_TAG || type == XmlPullParser.TEXT) {
      continue;
    }
switch (parser.getName()) {
case TAG_ITEM:
{
        String name=parser.getAttributeValue(null,ATTR_NAME);
        BasePermission bp=mPermissions.get(name);
        if (bp == null) {
          Slog.w(PackageManagerService.TAG,"Unknown permission:" + name);
          XmlUtils.skipCurrentTag(parser);
          continue;
        }
        String grantedStr=parser.getAttributeValue(null,ATTR_GRANTED);
        final boolean granted=grantedStr == null || Boolean.parseBoolean(grantedStr);
        String flagsStr=parser.getAttributeValue(null,ATTR_FLAGS);
        final int flags=(flagsStr != null) ? Integer.parseInt(flagsStr,16) : 0;
        if (granted) {
          if (permissionsState.grantRuntimePermission(bp,userId) == PermissionsState.PERMISSION_OPERATION_FAILURE) {
            Slog.w(PackageManagerService.TAG,"Duplicate permission:" + name);
          }
 else {
            permissionsState.updatePermissionFlags(bp,userId,PackageManager.MASK_PERMISSION_FLAGS,flags);
          }
        }
 else {
          if (permissionsState.revokeRuntimePermission(bp,userId) == PermissionsState.PERMISSION_OPERATION_FAILURE) {
            Slog.w(PackageManagerService.TAG,"Duplicate permission:" + name);
          }
 else {
            permissionsState.updatePermissionFlags(bp,userId,PackageManager.MASK_PERMISSION_FLAGS,flags);
          }
        }
      }
    break;
}
}
}
