{
  String[] volumeUuids;
  String[] names;
  int[] uids;
  String[] seinfos;
  int packagesCount;
synchronized (mPackages) {
    Collection<PackageSetting> packages=mPackages.values();
    packagesCount=packages.size();
    volumeUuids=new String[packagesCount];
    names=new String[packagesCount];
    uids=new int[packagesCount];
    seinfos=new String[packagesCount];
    Iterator<PackageSetting> packagesIterator=packages.iterator();
    for (int i=0; i < packagesCount; i++) {
      PackageSetting ps=packagesIterator.next();
      if (ps.pkg == null || ps.pkg.applicationInfo == null) {
        continue;
      }
      ps.setInstalled(ps.isSystem(),userHandle);
      volumeUuids[i]=ps.volumeUuid;
      names[i]=ps.name;
      uids[i]=UserHandle.getUid(userHandle,ps.appId);
      seinfos[i]=ps.pkg.applicationInfo.seinfo;
    }
  }
  for (int i=0; i < packagesCount; i++) {
    if (names[i] == null) {
      continue;
    }
    installer.createUserData(volumeUuids[i],names[i],uids[i],userHandle,seinfos[i]);
  }
synchronized (mPackages) {
    applyDefaultPreferredAppsLPw(service,userHandle);
    writePackageRestrictionsLPr(userHandle);
    writePackageListLPr(userHandle);
  }
}
