{
  if ((deletedPs == null) || (deletedPs.pkg == null)) {
    Slog.i(PackageManagerService.TAG,"Trying to update info for null package. Just ignoring");
    return UserHandle.USER_NULL;
  }
  if (deletedPs.sharedUser == null) {
    return UserHandle.USER_NULL;
  }
  SharedUserSetting sus=deletedPs.sharedUser;
  for (  String eachPerm : deletedPs.pkg.requestedPermissions) {
    BasePermission bp=mPermissions.get(eachPerm);
    if (bp == null) {
      continue;
    }
    if (!sus.getPermissionsState().hasPermission(bp.name,userId)) {
      continue;
    }
    boolean used=false;
    for (    PackageSetting pkg : sus.packages) {
      if (pkg.pkg != null && !pkg.pkg.packageName.equals(deletedPs.pkg.packageName) && pkg.pkg.requestedPermissions.contains(eachPerm)) {
        used=true;
        break;
      }
    }
    if (!used) {
      PermissionsState permissionsState=sus.getPermissionsState();
      permissionsState.updatePermissionFlags(bp,userId,PackageManager.MASK_PERMISSION_FLAGS,0);
      if (permissionsState.revokeInstallPermission(bp) == PermissionsState.PERMISSION_OPERATION_SUCCESS_GIDS_CHANGED) {
        return UserHandle.USER_ALL;
      }
      if (permissionsState.revokeRuntimePermission(bp,userId) == PermissionsState.PERMISSION_OPERATION_SUCCESS_GIDS_CHANGED) {
        return userId;
      }
    }
  }
  return UserHandle.USER_NULL;
}
