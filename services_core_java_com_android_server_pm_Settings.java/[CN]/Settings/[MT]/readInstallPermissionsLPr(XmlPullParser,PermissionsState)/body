{
  int outerDepth=parser.getDepth();
  int type;
  while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && (type != XmlPullParser.END_TAG || parser.getDepth() > outerDepth)) {
    if (type == XmlPullParser.END_TAG || type == XmlPullParser.TEXT) {
      continue;
    }
    String tagName=parser.getName();
    if (tagName.equals(TAG_ITEM)) {
      String name=parser.getAttributeValue(null,ATTR_NAME);
      BasePermission bp=mPermissions.get(name);
      if (bp == null) {
        Slog.w(PackageManagerService.TAG,"Unknown permission: " + name);
        XmlUtils.skipCurrentTag(parser);
        continue;
      }
      String grantedStr=parser.getAttributeValue(null,ATTR_GRANTED);
      final boolean granted=grantedStr == null || Boolean.parseBoolean(grantedStr);
      String flagsStr=parser.getAttributeValue(null,ATTR_FLAGS);
      final int flags=(flagsStr != null) ? Integer.parseInt(flagsStr,16) : 0;
      if (granted) {
        if (permissionsState.grantInstallPermission(bp) == PermissionsState.PERMISSION_OPERATION_FAILURE) {
          Slog.w(PackageManagerService.TAG,"Permission already added: " + name);
          XmlUtils.skipCurrentTag(parser);
        }
 else {
          permissionsState.updatePermissionFlags(bp,UserHandle.USER_ALL,PackageManager.MASK_PERMISSION_FLAGS,flags);
        }
      }
 else {
        if (permissionsState.revokeInstallPermission(bp) == PermissionsState.PERMISSION_OPERATION_FAILURE) {
          Slog.w(PackageManagerService.TAG,"Permission already added: " + name);
          XmlUtils.skipCurrentTag(parser);
        }
 else {
          permissionsState.updatePermissionFlags(bp,UserHandle.USER_ALL,PackageManager.MASK_PERMISSION_FLAGS,flags);
        }
      }
    }
 else {
      Slog.w(PackageManagerService.TAG,"Unknown element under <permissions>: " + parser.getName());
      XmlUtils.skipCurrentTag(parser);
    }
  }
}
