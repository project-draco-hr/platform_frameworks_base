{
  PropertyChangeRegistry propertyChangeRegistry=new PropertyChangeRegistry();
  final Observable observableObj=new Observable(){
    @Override public void addOnPropertyChangedListener(    OnPropertyChangedListener onPropertyChangedListener){
    }
    @Override public void removeOnPropertyChangedListener(    OnPropertyChangedListener onPropertyChangedListener){
    }
  }
;
  final int expectedId=100;
  OnPropertyChangedListener listener=new OnPropertyChangedListener(){
    @Override public void onPropertyChanged(    Observable observable,    int id){
      notificationCount++;
      assertEquals(expectedId,id);
      assertEquals(observableObj,observable);
    }
  }
;
  propertyChangeRegistry.add(listener);
  assertEquals(0,notificationCount);
  propertyChangeRegistry.notifyChange(observableObj,expectedId);
  assertEquals(1,notificationCount);
}
