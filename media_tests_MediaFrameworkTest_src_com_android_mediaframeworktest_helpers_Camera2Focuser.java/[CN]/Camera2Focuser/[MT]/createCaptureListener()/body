{
  int thisAfRun;
synchronized (this) {
    thisAfRun=mAfRun;
  }
  final int finalAfRun=thisAfRun;
  return new CaptureCallback(){
    private long mLatestFrameCount=-1;
    @Override public void onCaptureProgressed(    CameraCaptureSession session,    CaptureRequest request,    CaptureResult result){
      if (result.get(CaptureResult.CONTROL_AF_STATE) != null && result.get(CaptureResult.CONTROL_AF_MODE) != null) {
        if (VERBOSE) {
          Log.v(TAG,"Focuser - got early AF state");
        }
        dispatchToFocuser(result);
      }
    }
    @Override public void onCaptureCompleted(    CameraCaptureSession session,    CaptureRequest request,    TotalCaptureResult result){
      dispatchToFocuser(result);
    }
    private void dispatchToFocuser(    CaptureResult result){
      int afRun;
synchronized (Camera2Focuser.this) {
        long frameCount=result.getFrameNumber();
        if (frameCount <= mLatestFrameCount)         return;
        mLatestFrameCount=frameCount;
        afRun=mAfRun;
      }
      if (afRun != finalAfRun) {
        if (VERBOSE) {
          Log.w(TAG,"onCaptureCompleted - Ignoring results from previous AF run " + finalAfRun);
        }
        return;
      }
      mAutoFocus.onCaptureCompleted(result);
    }
  }
;
}
