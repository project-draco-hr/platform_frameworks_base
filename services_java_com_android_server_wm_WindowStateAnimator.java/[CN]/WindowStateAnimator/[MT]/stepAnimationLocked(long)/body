{
  mWasAnimating=mAnimating;
  if (mService.okToDisplay()) {
    if (mWin.isDrawnLw() && mAnimation != null) {
      mHasTransformation=true;
      mHasLocalTransformation=true;
      if (!mLocalAnimating) {
        if (WindowManagerService.DEBUG_ANIM)         Slog.v(WindowManagerService.TAG,"Starting animation in " + this + " @ "+ currentTime+ ": ww="+ mWin.mFrame.width()+ " wh="+ mWin.mFrame.height()+ " dw="+ mWin.mAnimDw+ " dh="+ mWin.mAnimDh+ " scale="+ mService.mWindowAnimationScale);
        mAnimation.initialize(mWin.mFrame.width(),mWin.mFrame.height(),mWin.mAnimDw,mWin.mAnimDh);
        mAnimation.setStartTime(currentTime);
        mLocalAnimating=true;
        mAnimating=true;
      }
      if ((mAnimation != null) && mLocalAnimating) {
        if (stepAnimation(currentTime)) {
          return true;
        }
      }
      if (WindowManagerService.DEBUG_ANIM)       Slog.v(WindowManagerService.TAG,"Finished animation in " + this + " @ "+ currentTime);
    }
    mHasLocalTransformation=false;
    if ((!mLocalAnimating || mAnimationIsEntrance) && mWin.mAppToken != null && mWin.mAppToken.animation != null) {
      mAnimating=true;
      mHasTransformation=true;
      mTransformation.clear();
      return false;
    }
 else     if (mHasTransformation) {
      mAnimating=true;
    }
 else     if (isAnimating()) {
      mAnimating=true;
    }
  }
 else   if (mAnimation != null) {
    mAnimating=true;
    mLocalAnimating=true;
    mAnimation.cancel();
    mAnimation=null;
  }
  if (!mAnimating && !mLocalAnimating) {
    return false;
  }
  if (WindowManagerService.DEBUG_ANIM)   Slog.v(WindowManagerService.TAG,"Animation done in " + this + ": exiting="+ mWin.mExiting+ ", reportedVisible="+ (mWin.mAppToken != null ? mWin.mAppToken.reportedVisible : false));
  mAnimating=false;
  mLocalAnimating=false;
  if (mAnimation != null) {
    mAnimation.cancel();
    mAnimation=null;
  }
  if (mService.mWindowDetachedWallpaper == mWin) {
    mService.mWindowDetachedWallpaper=null;
  }
  mWin.mAnimLayer=mWin.mLayer;
  if (mWin.mIsImWindow) {
    mWin.mAnimLayer+=mService.mInputMethodAnimLayerAdjustment;
  }
 else   if (mWin.mIsWallpaper) {
    mWin.mAnimLayer+=mService.mWallpaperAnimLayerAdjustment;
  }
  if (WindowManagerService.DEBUG_LAYERS)   Slog.v(WindowManagerService.TAG,"Stepping win " + this + " anim layer: "+ mWin.mAnimLayer);
  mHasTransformation=false;
  mHasLocalTransformation=false;
  if (mWin.mPolicyVisibility != mWin.mPolicyVisibilityAfterAnim) {
    if (WindowState.DEBUG_VISIBILITY) {
      Slog.v(WindowManagerService.TAG,"Policy visibility changing after anim in " + this + ": "+ mWin.mPolicyVisibilityAfterAnim);
    }
    mWin.mPolicyVisibility=mWin.mPolicyVisibilityAfterAnim;
    mService.mLayoutNeeded=true;
    if (!mWin.mPolicyVisibility) {
      if (mService.mCurrentFocus == mWin) {
        mService.mFocusMayChange=true;
      }
      mService.enableScreenIfNeededLocked();
    }
  }
  mTransformation.clear();
  if (mWin.mHasDrawn && mWin.mAttrs.type == WindowManager.LayoutParams.TYPE_APPLICATION_STARTING && mWin.mAppToken != null && mWin.mAppToken.firstWindowDrawn && mWin.mAppToken.startingData != null) {
    if (WindowManagerService.DEBUG_STARTING_WINDOW)     Slog.v(WindowManagerService.TAG,"Finish starting " + mWin.mToken + ": first real window done animating");
    mService.mFinishedStarting.add(mWin.mAppToken);
    mService.mH.sendEmptyMessage(H.FINISHED_STARTING);
  }
  finishExit();
  mService.mPendingLayoutChanges|=WindowManagerPolicy.FINISH_LAYOUT_REDO_ANIM;
  if (WindowManagerService.DEBUG_LAYOUT_REPEATS)   mService.debugLayoutRepeats("WindowState");
  if (mWin.mAppToken != null) {
    mWin.mAppToken.updateReportedVisibilityLocked();
  }
  return false;
}
