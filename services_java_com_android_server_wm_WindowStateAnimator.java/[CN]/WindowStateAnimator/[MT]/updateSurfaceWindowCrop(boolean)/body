{
  final WindowState w=mWin;
  if ((w.mAttrs.flags & LayoutParams.FLAG_SCALED) != 0) {
    w.mSystemDecorRect.set(0,0,w.mRequestedWidth,w.mRequestedHeight);
  }
 else   if (w.mLayer >= mService.mSystemDecorLayer) {
    w.mSystemDecorRect.set(0,0,w.mCompatFrame.width(),w.mCompatFrame.height());
  }
 else {
    final Rect decorRect=mService.mSystemDecorRect;
    final int offX=w.mXOffset + w.mFrame.left;
    final int offY=w.mYOffset + w.mFrame.top;
    w.mSystemDecorRect.set(0,0,w.mFrame.width(),w.mFrame.height());
    w.mSystemDecorRect.intersect(decorRect.left - offX,decorRect.top - offY,decorRect.right - offX,decorRect.bottom - offY);
    if (w.mEnforceSizeCompat && w.mInvGlobalScale != 1.0f) {
      final float scale=w.mInvGlobalScale;
      w.mSystemDecorRect.left=(int)(w.mSystemDecorRect.left * scale - 0.5f);
      w.mSystemDecorRect.top=(int)(w.mSystemDecorRect.top * scale - 0.5f);
      w.mSystemDecorRect.right=(int)((w.mSystemDecorRect.right + 1) * scale - 0.5f);
      w.mSystemDecorRect.bottom=(int)((w.mSystemDecorRect.bottom + 1) * scale - 0.5f);
    }
  }
  if (!w.mSystemDecorRect.equals(w.mLastSystemDecorRect)) {
    w.mLastSystemDecorRect.set(w.mSystemDecorRect);
    try {
      if (WindowManagerService.SHOW_TRANSACTIONS)       WindowManagerService.logSurface(w,"CROP " + w.mSystemDecorRect.toShortString(),null);
      mSurface.setWindowCrop(w.mSystemDecorRect);
    }
 catch (    RuntimeException e) {
      Slog.w(TAG,"Error setting crop surface of " + w + " crop="+ w.mSystemDecorRect.toShortString(),e);
      if (!recoveringMemory) {
        mService.reclaimSomeSurfaceMemoryLocked(this,"crop",true);
      }
    }
  }
}
