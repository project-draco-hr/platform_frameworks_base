{
  final WindowState w=mWin;
  DisplayInfo displayInfo=w.mDisplayContent.getDisplayInfo();
  if ((w.mAttrs.flags & LayoutParams.FLAG_SCALED) != 0) {
    w.mSystemDecorRect.set(0,0,w.mRequestedWidth,w.mRequestedHeight);
  }
 else   if (!w.isDefaultDisplay()) {
    w.mSystemDecorRect.set(0,0,w.mCompatFrame.width(),w.mCompatFrame.height());
    w.mSystemDecorRect.intersect(-w.mFrame.left,-w.mFrame.top,displayInfo.logicalWidth - w.mFrame.left,displayInfo.logicalHeight - w.mFrame.top);
  }
 else   if (w.mLayer >= mService.mSystemDecorLayer) {
    if (mAnimator.mUniverseBackground == null) {
      w.mSystemDecorRect.set(0,0,w.mCompatFrame.width(),w.mCompatFrame.height());
    }
 else {
      applyDecorRect(mService.mScreenRect);
    }
  }
 else   if (w.mAttrs.type == WindowManager.LayoutParams.TYPE_UNIVERSE_BACKGROUND) {
    w.mSystemDecorRect.set(0,0,w.mCompatFrame.width(),w.mCompatFrame.height());
  }
 else {
    applyDecorRect(mService.mSystemDecorRect);
  }
  if (!w.mSystemDecorRect.equals(w.mLastSystemDecorRect)) {
    w.mLastSystemDecorRect.set(w.mSystemDecorRect);
    try {
      if (WindowManagerService.SHOW_TRANSACTIONS)       WindowManagerService.logSurface(w,"CROP " + w.mSystemDecorRect.toShortString(),null);
      mSurface.setWindowCrop(w.mSystemDecorRect);
    }
 catch (    RuntimeException e) {
      Slog.w(TAG,"Error setting crop surface of " + w + " crop="+ w.mSystemDecorRect.toShortString(),e);
      if (!recoveringMemory) {
        mService.reclaimSomeSurfaceMemoryLocked(this,"crop",true);
      }
    }
  }
}
