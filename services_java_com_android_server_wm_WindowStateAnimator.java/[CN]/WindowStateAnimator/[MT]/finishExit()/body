{
  if (WindowManagerService.DEBUG_ANIM)   Slog.v(TAG,"finishExit in " + this + ": exiting="+ mWin.mExiting+ " remove="+ mWin.mRemoveOnExit+ " windowAnimating="+ isWindowAnimating());
  final int N=mWin.mChildWindows.size();
  for (int i=0; i < N; i++) {
    mWin.mChildWindows.get(i).mWinAnimator.finishExit();
  }
  if (!mWin.mExiting) {
    return;
  }
  if (isWindowAnimating()) {
    return;
  }
  if (WindowManagerService.localLOGV)   Slog.v(TAG,"Exit animation finished in " + this + ": remove="+ mWin.mRemoveOnExit);
  if (mSurface != null) {
    mService.mDestroySurface.add(mWin);
    mWin.mDestroying=true;
    if (WindowState.SHOW_TRANSACTIONS)     WindowManagerService.logSurface(mWin,"HIDE (finishExit)",null);
    mSurfaceShown=false;
    try {
      mSurface.hide();
    }
 catch (    RuntimeException e) {
      Slog.w(TAG,"Error hiding surface in " + this,e);
    }
    mLastHidden=true;
  }
  mWin.mExiting=false;
  if (mWin.mRemoveOnExit) {
    mService.mPendingRemove.add(mWin);
    mWin.mRemoveOnExit=false;
  }
}
