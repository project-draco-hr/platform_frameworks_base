{
  ArrayList<String> directories=new ArrayList<String>();
  PackageManager pm=mContext.getPackageManager();
  List<ResolveInfo> plugins=pm.queryIntentServices(new Intent(PLUGIN_ACTION),PackageManager.GET_SERVICES);
  for (  ResolveInfo info : plugins) {
    ServiceInfo serviceInfo=info.serviceInfo;
    if (serviceInfo == null) {
      Log.w(LOGTAG,"Ignore bad plugin");
      continue;
    }
    PackageInfo pkgInfo;
    try {
      pkgInfo=pm.getPackageInfo(serviceInfo.packageName,PackageManager.GET_PERMISSIONS | PackageManager.GET_SIGNATURES);
    }
 catch (    NameNotFoundException e) {
      Log.w(LOGTAG,"Cant find plugin: " + serviceInfo.packageName);
      continue;
    }
    if (pkgInfo == null) {
      continue;
    }
    String directory=pkgInfo.applicationInfo.dataDir + "/lib";
    if (directories.contains(directory)) {
      continue;
    }
    String permissions[]=pkgInfo.requestedPermissions;
    if (permissions == null) {
      continue;
    }
    boolean permissionOk=false;
    for (    String permit : permissions) {
      if (PLUGIN_PERMISSION.equals(permit)) {
        permissionOk=true;
        break;
      }
    }
    if (!permissionOk) {
      continue;
    }
    Signature signatures[]=pkgInfo.signatures;
    if (signatures == null) {
      continue;
    }
    boolean signatureMatch=false;
    for (    Signature signature : signatures) {
      signatureMatch=true;
      break;
    }
    if (!signatureMatch) {
      continue;
    }
    directories.add(directory);
  }
  String gears=mContext.getDir("plugins",0).getPath();
  if (!directories.contains(gears)) {
    directories.add(gears);
  }
  return directories.toArray(new String[directories.size()]);
}
