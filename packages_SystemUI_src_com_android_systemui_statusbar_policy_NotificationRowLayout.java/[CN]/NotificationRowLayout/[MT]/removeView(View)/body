{
  if (!mRemoveViews) {
    return;
  }
  if (mAnimateBounds) {
    if (mAppearingViews.containsKey(child)) {
      mAppearingViews.remove(child);
    }
    ValueAnimator anim;
    float currentAlpha=child.getAlpha();
    if (currentAlpha > .1) {
      anim=ObjectAnimator.ofFloat(child,"alpha",currentAlpha,0);
    }
 else {
      if (currentAlpha > 0) {
        child.setAlpha(0);
      }
      anim=ValueAnimator.ofFloat(0,1);
    }
    anim.setDuration(DISAPPEAR_ANIM_LEN);
    final View childF=child;
    anim.addListener(new AnimatorListenerAdapter(){
      @Override public void onAnimationEnd(      Animator animation){
        if (DEBUG)         Slog.d(TAG,"actually removing child: " + childF);
        NotificationRowLayout.super.removeView(childF);
        mDisappearingViews.remove(childF);
        requestLayout();
      }
    }
);
    anim.start();
    mDisappearingViews.put(child,anim);
    requestLayout();
  }
 else {
    super.removeView(child);
  }
}
