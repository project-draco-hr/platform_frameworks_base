{
  final View childF=child;
  if (ANIMATE_LAYOUT) {
    if (mAppearingViews.contains(child)) {
      mAppearingViews.remove(child);
    }
    mDisappearingViews.add(child);
    child.setPivotY(0);
    final float velocity=(mSlidingChild == child) ? mLiftoffVelocity : SWIPE_ESCAPE_VELOCITY;
    final TimeAnimator zoom=new TimeAnimator();
    zoom.setTimeListener(new TimeAnimator.TimeListener(){
      @Override public void onTimeUpdate(      TimeAnimator animation,      long totalTime,      long deltaTime){
        childF.setTranslationX(childF.getTranslationX() + deltaTime / 1000f * velocity);
      }
    }
);
    final ObjectAnimator alphaFade=ObjectAnimator.ofFloat(child,"alpha",0f);
    alphaFade.addListener(new AnimatorListenerAdapter(){
      @Override public void onAnimationEnd(      Animator animation){
        zoom.cancel();
        if (DEBUG)         Slog.d(TAG,"actually removing child: " + childF);
        NotificationRowLayout.super.removeView(childF);
        childF.setAlpha(1f);
        mDisappearingViews.remove(childF);
      }
    }
);
    AnimatorSet a=new AnimatorSet();
    a.playTogether(alphaFade,zoom);
    a.setDuration(DISAPPEAR_ANIM_LEN);
    a.start();
    requestLayout();
  }
 else {
    super.removeView(child);
  }
}
