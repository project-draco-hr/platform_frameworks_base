{
  try {
switch (msg.what) {
case MSG_NDEF_TAG:
      Log.d(TAG,"Checking for NDEF tag message");
    NativeNfcTag tag=(NativeNfcTag)msg.obj;
  if (tag.doConnect()) {
    if (tag.checkNDEF()) {
      byte[] buff=tag.doRead();
      if (buff != null) {
        NdefMessage msgNdef=new NdefMessage(buff);
        if (msgNdef != null) {
          Intent NdefMessageIntent=new Intent();
          NdefMessageIntent.setAction(NfcManager.NDEF_TAG_DISCOVERED_ACTION);
          NdefMessageIntent.putExtra(NfcManager.NDEF_MESSAGE_EXTRA,msgNdef);
          Log.d(TAG,"NDEF message found, broadcasting to applications");
          mContext.sendOrderedBroadcast(NdefMessageIntent,android.Manifest.permission.NFC_NOTIFY);
          tag.doAsyncDisconnect();
        }
      }
 else {
        Log.w(TAG,"Unable to read NDEF message (tag empty or not well formated)");
        tag.doAsyncDisconnect();
      }
    }
 else {
      Log.d(TAG,"Tag is *not* NDEF compliant");
      tag.doAsyncDisconnect();
    }
  }
 else {
    tag.doAsyncDisconnect();
  }
break;
case MSG_CARD_EMULATION:
Log.d(TAG,"Card Emulation message");
byte[] aid=(byte[])msg.obj;
Intent TransactionIntent=new Intent();
TransactionIntent.setAction(NfcManager.TRANSACTION_DETECTED_ACTION);
TransactionIntent.putExtra(NfcManager.AID_EXTRA,aid);
Log.d(TAG,"Broadcasting Card Emulation event");
mContext.sendOrderedBroadcast(TransactionIntent,android.Manifest.permission.NFC_NOTIFY);
break;
case MSG_LLCP_LINK_ACTIVATION:
NativeP2pDevice device=(NativeP2pDevice)msg.obj;
Log.d(TAG,"LLCP Activation message");
if (device.getMode() == NativeP2pDevice.MODE_P2P_TARGET) {
if (device.doConnect()) {
if (doCheckLlcp()) {
if (doActivateLlcp()) {
Log.d(TAG,"Initiator Activate LLCP OK");
Intent LlcpLinkIntent=new Intent();
LlcpLinkIntent.setAction(INTERNAL_LLCP_LINK_STATE_CHANGED_ACTION);
LlcpLinkIntent.putExtra(INTERNAL_LLCP_LINK_STATE_CHANGED_EXTRA,NfcManager.LLCP_LINK_STATE_ACTIVATED);
Log.d(TAG,"Broadcasting internal LLCP activation");
mContext.sendBroadcast(LlcpLinkIntent);
}
}
 else {
device.doDisconnect();
}
}
}
 else if (device.getMode() == NativeP2pDevice.MODE_P2P_INITIATOR) {
if (doCheckLlcp()) {
if (doActivateLlcp()) {
Log.d(TAG,"Target Activate LLCP OK");
Intent LlcpLinkIntent=new Intent();
LlcpLinkIntent.setAction(INTERNAL_LLCP_LINK_STATE_CHANGED_ACTION);
LlcpLinkIntent.putExtra(INTERNAL_LLCP_LINK_STATE_CHANGED_EXTRA,NfcManager.LLCP_LINK_STATE_ACTIVATED);
Log.d(TAG,"Broadcasting internal LLCP activation");
mContext.sendBroadcast(LlcpLinkIntent);
}
}
}
break;
case MSG_LLCP_LINK_DEACTIVATED:
Log.d(TAG,"LLCP Link Deactivated message");
Intent LlcpLinkIntent=new Intent();
LlcpLinkIntent.setAction(NfcManager.LLCP_LINK_STATE_CHANGED_ACTION);
LlcpLinkIntent.putExtra(NfcManager.LLCP_LINK_STATE_CHANGED_EXTRA,NfcManager.LLCP_LINK_STATE_DEACTIVATED);
Log.d(TAG,"Broadcasting LLCP deactivation");
mContext.sendOrderedBroadcast(LlcpLinkIntent,android.Manifest.permission.NFC_LLCP);
break;
case MSG_TARGET_DESELECTED:
Log.d(TAG,"Target Deselected");
Intent TargetDeselectedIntent=new Intent();
TargetDeselectedIntent.setAction(INTERNAL_TARGET_DESELECTED_ACTION);
Log.d(TAG,"Broadcasting Intent");
mContext.sendOrderedBroadcast(TargetDeselectedIntent,android.Manifest.permission.NFC_LLCP);
break;
default :
Log.e(TAG,"Unknown message received");
break;
}
}
 catch (Exception e) {
Log.e(TAG,"Exception in NfcHandler.handleMessage:",e);
}
}
