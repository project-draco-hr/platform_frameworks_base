{
  final UserManager um=(UserManager)mContext.getSystemService(Context.USER_SERVICE);
  if (um == null) {
    Throwable t=new Throwable();
    t.fillInStackTrace();
    Log.e(TAG,"user service is null.",t);
    return;
  }
  if (!um.isUserSwitcherEnabled()) {
    return;
  }
  final View multiUserView=findViewById(R.id.keyguard_user_selector);
  if (multiUserView == null) {
    if (DEBUG)     Log.d(TAG,"can't find user_selector in layout.");
    return;
  }
  if (multiUserView instanceof KeyguardMultiUserSelectorView) {
    mKeyguardMultiUserSelectorView=(KeyguardMultiUserSelectorView)multiUserView;
    mKeyguardMultiUserSelectorView.setVisibility(View.VISIBLE);
    mKeyguardMultiUserSelectorView.addUsers(um.getUsers(true));
    UserSwitcherCallback callback=new UserSwitcherCallback(){
      @Override public void hideSecurityView(      int duration){
        getSecurityContainer().animate().alpha(0).setDuration(duration);
      }
      @Override public void showSecurityView(){
        getSecurityContainer().setAlpha(1.0f);
      }
      @Override public void showUnlockHint(){
        if (getSecurityContainer() != null) {
          getSecurityContainer().showUsabilityHint();
        }
      }
      @Override public void userActivity(){
        if (mViewMediatorCallback != null) {
          mViewMediatorCallback.userActivity();
        }
      }
    }
;
    mKeyguardMultiUserSelectorView.setCallback(callback);
  }
 else {
    Throwable t=new Throwable();
    t.fillInStackTrace();
    if (multiUserView == null) {
      Log.e(TAG,"could not find the user_selector.",t);
    }
 else {
      Log.e(TAG,"user_selector is the wrong type.",t);
    }
  }
}
