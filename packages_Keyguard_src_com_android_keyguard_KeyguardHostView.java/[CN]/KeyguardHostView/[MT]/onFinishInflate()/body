{
  super.onFinishInflate();
  View deleteDropTarget=findViewById(R.id.keyguard_widget_pager_delete_target);
  mAppWidgetContainer=(KeyguardWidgetPager)findViewById(R.id.app_widget_container);
  mAppWidgetContainer.setVisibility(VISIBLE);
  mAppWidgetContainer.setCallbacks(mWidgetCallbacks);
  mAppWidgetContainer.setDeleteDropTarget(deleteDropTarget);
  mAppWidgetContainer.setMinScale(0.5f);
  mSlidingChallengeLayout=(SlidingChallengeLayout)findViewById(R.id.sliding_layout);
  if (mSlidingChallengeLayout != null) {
    mSlidingChallengeLayout.setOnChallengeScrolledListener(mViewStateManager);
  }
  mAppWidgetContainer.setViewStateManager(mViewStateManager);
  mAppWidgetContainer.setLockPatternUtils(mLockPatternUtils);
  mMultiPaneChallengeLayout=(MultiPaneChallengeLayout)findViewById(R.id.multi_pane_challenge);
  ChallengeLayout challenge=mSlidingChallengeLayout != null ? mSlidingChallengeLayout : mMultiPaneChallengeLayout;
  challenge.setOnBouncerStateChangedListener(mViewStateManager);
  mAppWidgetContainer.setBouncerAnimationDuration(challenge.getBouncerAnimationDuration());
  mViewStateManager.setPagedView(mAppWidgetContainer);
  mViewStateManager.setChallengeLayout(challenge);
  mViewStateManager.setSecurityViewContainer(getSecurityContainer());
  if (KeyguardUpdateMonitor.getInstance(mContext).hasBootCompleted()) {
    updateAndAddWidgets();
  }
 else {
    mPostBootCompletedRunnable=new Runnable(){
      @Override public void run(){
        updateAndAddWidgets();
      }
    }
;
  }
  getSecurityContainer().updateSecurityViews(mViewStateManager.isBouncing());
  enableUserSelectorIfNecessary();
}
