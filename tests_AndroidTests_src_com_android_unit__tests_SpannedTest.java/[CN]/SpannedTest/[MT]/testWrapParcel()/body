{
  SpannableString s=new SpannableString("Hello there world");
  CharacterStyle mark=new StyleSpan(Typeface.BOLD);
  s.setSpan(mark,1,2,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
  s.setSpan(CharacterStyle.wrap(mark),3,7,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
  s.setSpan(new TextAppearanceSpan("mono",0,-1,null,null),7,8,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
  s.setSpan(CharacterStyle.wrap(new TypefaceSpan("mono")),8,9,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
  Parcel p=Parcel.obtain();
  TextUtils.writeToParcel(s,p,0);
  p.setDataPosition(0);
  Spanned s2=(Spanned)TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(p);
  StyleSpan[] style;
  style=s2.getSpans(1,2,StyleSpan.class);
  assertEquals(1,style.length);
  assertEquals(1,s2.getSpanStart(style[0]));
  assertEquals(2,s2.getSpanEnd(style[0]));
  style=s2.getSpans(3,7,StyleSpan.class);
  assertEquals(1,style.length);
  assertEquals(3,s2.getSpanStart(style[0]));
  assertEquals(7,s2.getSpanEnd(style[0]));
  TextAppearanceSpan[] appearance=s2.getSpans(7,8,TextAppearanceSpan.class);
  assertEquals(1,appearance.length);
  assertEquals(7,s2.getSpanStart(appearance[0]));
  assertEquals(8,s2.getSpanEnd(appearance[0]));
  TypefaceSpan[] tf=s2.getSpans(8,9,TypefaceSpan.class);
  assertEquals(1,tf.length);
  assertEquals(8,s2.getSpanStart(tf[0]));
  assertEquals(9,s2.getSpanEnd(tf[0]));
}
