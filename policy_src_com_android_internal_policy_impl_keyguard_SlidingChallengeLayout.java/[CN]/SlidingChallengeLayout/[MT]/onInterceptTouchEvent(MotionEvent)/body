{
  if (mVelocityTracker == null) {
    mVelocityTracker=VelocityTracker.obtain();
  }
  mVelocityTracker.addMovement(ev);
  final int action=ev.getActionMasked();
switch (action) {
case MotionEvent.ACTION_DOWN:
    mGestureStartX=ev.getX();
  mGestureStartY=ev.getY();
mBlockDrag=false;
break;
case MotionEvent.ACTION_CANCEL:
case MotionEvent.ACTION_UP:
resetTouch();
break;
case MotionEvent.ACTION_MOVE:
final int count=ev.getPointerCount();
for (int i=0; i < count; i++) {
final float x=ev.getX(i);
final float y=ev.getY(i);
if (!mIsBouncing && (isInDragHandle(x,y) || crossedDragHandle(x,y,mGestureStartY) || (isInChallengeView(x,y) && mScrollState == SCROLL_STATE_SETTLING)) && mActivePointerId == INVALID_POINTER) {
mActivePointerId=ev.getPointerId(i);
mGestureStartX=x;
mGestureStartY=y;
mGestureStartChallengeBottom=getChallengeBottom();
mDragging=true;
mChallengeView.setLayerType(LAYER_TYPE_HARDWARE,null);
}
 else if (isInChallengeView(x,y)) {
mBlockDrag=true;
}
}
break;
}
if (mBlockDrag) {
mActivePointerId=INVALID_POINTER;
mDragging=false;
}
return mDragging;
}
