{
  if (mFrameDrawable == null)   return;
  final float targetAlpha=visible ? (full ? 1.f : 0.5f) : 0.f;
  if (mFrameAnimation != null && targetAlpha != mFrameAnimationTarget) {
    mFrameAnimation.cancel();
    mFrameAnimationTarget=Float.MIN_VALUE;
  }
  if (targetAlpha == mFrameAlpha || targetAlpha == mFrameAnimationTarget) {
    return;
  }
  mFrameAnimationTarget=targetAlpha;
  mFrameAnimation=ObjectAnimator.ofFloat(this,FRAME_ALPHA,targetAlpha);
  mFrameAnimation.setInterpolator(sHandleFadeInterpolator);
  mFrameAnimation.setDuration(HANDLE_ANIMATE_DURATION);
  mFrameAnimation.addListener(new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator animation){
      mFrameAnimationTarget=Float.MIN_VALUE;
      if (!visible && full && mChallengeView != null) {
        mChallengeView.setPadding(0,0,0,0);
        LayoutParams lp=(LayoutParams)mChallengeView.getLayoutParams();
        lp.leftMargin=lp.rightMargin=getChallengeMargin(true);
        mChallengeView.setLayoutParams(lp);
      }
      mFrameAnimation=null;
    }
    @Override public void onAnimationCancel(    Animator animation){
      mFrameAnimationTarget=Float.MIN_VALUE;
      mFrameAnimation=null;
    }
  }
);
  mFrameAnimation.start();
}
