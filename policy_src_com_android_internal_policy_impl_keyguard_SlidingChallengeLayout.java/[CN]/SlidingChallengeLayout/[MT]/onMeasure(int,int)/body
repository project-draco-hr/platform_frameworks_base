{
  if (MeasureSpec.getMode(widthSpec) != MeasureSpec.EXACTLY || MeasureSpec.getMode(heightSpec) != MeasureSpec.EXACTLY) {
    throw new IllegalArgumentException("SlidingChallengeLayout must be measured with an exact size");
  }
  final int width=MeasureSpec.getSize(widthSpec);
  final int height=MeasureSpec.getSize(heightSpec);
  setMeasuredDimension(width,height);
  final View oldChallengeView=mChallengeView;
  mChallengeView=null;
  final int count=getChildCount();
  for (int i=0; i < count; i++) {
    final View child=getChildAt(i);
    final LayoutParams lp=(LayoutParams)child.getLayoutParams();
    if (lp.childType == LayoutParams.CHILD_TYPE_CHALLENGE) {
      if (mChallengeView != null) {
        throw new IllegalStateException("There may only be one child with layout_isChallenge=\"true\"");
      }
      mChallengeView=child;
      if (mChallengeView != oldChallengeView) {
        mChallengeView.setVisibility(mChallengeShowing ? VISIBLE : INVISIBLE);
      }
      mFrameDrawable=mChallengeView.getBackground();
    }
 else     if (lp.childType == LayoutParams.CHILD_TYPE_SCRIM) {
      setScrimView(child);
    }
    if (child.getVisibility() == GONE)     continue;
    measureChildWithMargins(child,widthSpec,0,heightSpec,0);
  }
}
