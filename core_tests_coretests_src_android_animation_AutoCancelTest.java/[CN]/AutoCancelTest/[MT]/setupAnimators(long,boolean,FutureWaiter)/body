{
  final ObjectAnimator animX1=setupAnimator(startDelay,"x");
  final ObjectAnimator animY1=setupAnimator(startDelay,"y");
  final ObjectAnimator animXY1=setupAnimator(startDelay,"x","y");
  final ObjectAnimator animXZ1=setupAnimator(startDelay,"x","z");
  animX1.start();
  animY1.start();
  animXY1.start();
  animXZ1.start();
  final ObjectAnimator animX2=setupAnimator(0,"x");
  animX2.addListener(new AnimatorListenerAdapter(){
    @Override public void onAnimationStart(    Animator animation){
      if (mCanceledMap.get(animX1) == null || mCanceledMap.get(animX1) != true || mCanceledMap.get(animY1) != null || mCanceledMap.get(animXY1) != null || mCanceledMap.get(animXZ1) != null) {
        future.set(false);
      }
    }
  }
);
  final ObjectAnimator animXY2=setupAnimator(0,"x","y");
  animXY2.addListener(new AnimatorListenerAdapter(){
    @Override public void onAnimationStart(    Animator animation){
      if (mCanceledMap.get(animXY1) == null || mCanceledMap.get(animXY1) != true || mCanceledMap.get(animY1) != null || mCanceledMap.get(animXZ1) != null) {
        future.set(false);
      }
    }
    @Override public void onAnimationEnd(    Animator animation){
      future.release();
    }
  }
);
  if (startLater) {
    Handler handler=new Handler();
    handler.postDelayed(new Runnable(){
      @Override public void run(){
        animX2.start();
        animXY2.start();
      }
    }
,DELAYED_START_DURATION);
  }
 else {
    animX2.start();
    animXY2.start();
  }
}
