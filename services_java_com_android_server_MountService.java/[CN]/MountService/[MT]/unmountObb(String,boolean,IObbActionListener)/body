{
  if (filename == null) {
    throw new IllegalArgumentException("filename cannot be null");
  }
 else   if (token == null) {
    throw new IllegalArgumentException("token cannot be null");
  }
  final ObbState obbState;
synchronized (mObbMounts) {
    if (!isObbMounted(filename)) {
      try {
        token.onObbResult(filename,Environment.MEDIA_UNMOUNTED);
      }
 catch (      RemoteException e) {
        Slog.d(TAG,"Could not send unmount notification for: " + filename);
      }
      return;
    }
    obbState=mObbPathToStateMap.get(filename);
    if (Binder.getCallingUid() != obbState.callerUid) {
      throw new SecurityException("caller UID does not match original mount caller UID");
    }
 else     if (!token.asBinder().equals(obbState.getBinder())) {
      throw new SecurityException("caller does not match original mount caller");
    }
  }
  ObbAction action=new UnmountObbAction(obbState,force);
  mObbActionHandler.sendMessage(mObbActionHandler.obtainMessage(OBB_RUN_ACTION,action));
  if (DEBUG_OBB)   Slog.i(TAG,"Send to OBB handler: " + action.toString());
}
