{
  if (mContext.checkCallingOrSelfPermission(android.Manifest.permission.SHUTDOWN) != PackageManager.PERMISSION_GRANTED) {
    throw new SecurityException("Requires SHUTDOWN permission");
  }
  Log.d(TAG,"Shutting down");
  String state=Environment.getExternalStorageState();
  if (state.equals(Environment.MEDIA_SHARED)) {
    try {
      setMassStorageEnabled(false);
    }
 catch (    Exception e) {
      Log.e(TAG,"ums disable failed",e);
    }
  }
 else   if (state.equals(Environment.MEDIA_CHECKING)) {
    int retries=30;
    while (state.equals(Environment.MEDIA_CHECKING) && (retries-- >= 0)) {
      try {
        Thread.sleep(1000);
      }
 catch (      InterruptedException iex) {
        Log.e(TAG,"Interrupted while waiting for media",iex);
        break;
      }
      state=Environment.getExternalStorageState();
    }
    if (retries == 0) {
      Log.e(TAG,"Timed out waiting for media to check");
    }
  }
  if (state.equals(Environment.MEDIA_MOUNTED)) {
    try {
      String m=Environment.getExternalStorageDirectory().toString();
      unmountMedia(m);
    }
 catch (    Exception e) {
      Log.e(TAG,"external storage unmount failed",e);
    }
  }
}
