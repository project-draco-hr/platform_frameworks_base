{
  final int toolbarWidth=getAdjustedToolbarWidth(mContext,mSuggestedWidth) - getEstimatedOpenOverflowButtonWidth(mContext);
  int availableWidth=toolbarWidth;
  LinkedList<MenuItem> remainingMenuItems=new LinkedList<MenuItem>(menuItems);
  mMenuItemButtonsContainer.removeAllViews();
  boolean isFirstItem=true;
  while (!remainingMenuItems.isEmpty()) {
    final MenuItem menuItem=remainingMenuItems.peek();
    Button menuItemButton=createMenuItemButton(mContext,menuItem);
    if (isFirstItem) {
      menuItemButton.setPadding(2 * menuItemButton.getPaddingLeft(),menuItemButton.getPaddingTop(),menuItemButton.getPaddingRight(),menuItemButton.getPaddingBottom());
      isFirstItem=false;
    }
    if (remainingMenuItems.size() == 1) {
      menuItemButton.setPadding(menuItemButton.getPaddingLeft(),menuItemButton.getPaddingTop(),2 * menuItemButton.getPaddingRight(),menuItemButton.getPaddingBottom());
    }
    menuItemButton.measure(MeasureSpec.UNSPECIFIED,MeasureSpec.UNSPECIFIED);
    int menuItemButtonWidth=Math.min(menuItemButton.getMeasuredWidth(),toolbarWidth);
    if (menuItemButtonWidth <= availableWidth) {
      menuItemButton.setTag(menuItem);
      menuItemButton.setOnClickListener(mMenuItemButtonOnClickListener);
      mMenuItemButtonsContainer.addView(menuItemButton);
      menuItemButton.getLayoutParams().width=menuItemButtonWidth;
      availableWidth-=menuItemButtonWidth;
      remainingMenuItems.pop();
    }
 else {
      createOpenOverflowButtonIfNotExists();
      mMenuItemButtonsContainer.addView(mOpenOverflowButton);
      break;
    }
  }
  mPopup.setContentView(mMenuItemButtonsContainer);
}
