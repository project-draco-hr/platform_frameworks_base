{
  final int targetWidth=mOverflowPanelSize.getWidth();
  final int targetHeight=mOverflowPanelSize.getHeight();
  final int startWidth=mContentContainer.getWidth();
  final int startHeight=mContentContainer.getHeight();
  final float startY=mContentContainer.getY();
  final float left=mContentContainer.getX();
  final float right=left + mContentContainer.getWidth();
  Animation widthAnimation=new Animation(){
    @Override protected void applyTransformation(    float interpolatedTime,    Transformation t){
      int deltaWidth=(int)(interpolatedTime * (targetWidth - startWidth));
      setWidth(mContentContainer,startWidth + deltaWidth);
      if (isRTL()) {
        mContentContainer.setX(left);
        mMainPanel.setX(0);
        mOverflowPanel.setX(0);
      }
 else {
        mContentContainer.setX(right - mContentContainer.getWidth());
        mMainPanel.setX(mContentContainer.getWidth() - startWidth);
        mOverflowPanel.setX(mContentContainer.getWidth() - targetWidth);
      }
    }
  }
;
  Animation heightAnimation=new Animation(){
    @Override protected void applyTransformation(    float interpolatedTime,    Transformation t){
      int deltaHeight=(int)(interpolatedTime * (targetHeight - startHeight));
      setHeight(mContentContainer,startHeight + deltaHeight);
      if (mOpenOverflowUpwards) {
        mContentContainer.setY(startY - (mContentContainer.getHeight() - startHeight));
        positionContentYCoordinatesIfOpeningOverflowUpwards();
      }
    }
  }
;
  final float overflowButtonStartX=mOverflowButton.getX();
  final float overflowButtonTargetX=isRTL() ? overflowButtonStartX + targetWidth - mOverflowButton.getWidth() : overflowButtonStartX - targetWidth + mOverflowButton.getWidth();
  Animation overflowButtonAnimation=new Animation(){
    @Override protected void applyTransformation(    float interpolatedTime,    Transformation t){
      float overflowButtonX=overflowButtonStartX + interpolatedTime * (overflowButtonTargetX - overflowButtonStartX);
      float deltaContainerWidth=isRTL() ? 0 : mContentContainer.getWidth() - startWidth;
      float actualOverflowButtonX=overflowButtonX + deltaContainerWidth;
      mOverflowButton.setX(actualOverflowButtonX);
    }
  }
;
  widthAnimation.setInterpolator(mLogAccelerateInterpolator);
  widthAnimation.setDuration(getAdjustedDuration(250));
  heightAnimation.setInterpolator(mFastOutSlowInInterpolator);
  heightAnimation.setDuration(getAdjustedDuration(250));
  overflowButtonAnimation.setInterpolator(mFastOutSlowInInterpolator);
  overflowButtonAnimation.setDuration(getAdjustedDuration(250));
  mOpenOverflowAnimation.getAnimations().clear();
  mOpenOverflowAnimation.getAnimations().clear();
  mOpenOverflowAnimation.addAnimation(widthAnimation);
  mOpenOverflowAnimation.addAnimation(heightAnimation);
  mOpenOverflowAnimation.addAnimation(overflowButtonAnimation);
  mContentContainer.startAnimation(mOpenOverflowAnimation);
  mIsOverflowOpen=true;
  mMainPanel.animate().alpha(0).withLayer().setInterpolator(mLinearOutSlowInInterpolator).setDuration(250).start();
  mOverflowPanel.setAlpha(1);
}
