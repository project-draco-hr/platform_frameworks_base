{
  Preconditions.checkNotNull(mMainPanel);
  Preconditions.checkNotNull(mOverflowPanel);
  mOverflowPanel.fadeOut(true);
  Size mainPanelSize=mMainPanel.measure();
  final int targetWidth=mainPanelSize.getWidth();
  final int targetHeight=mainPanelSize.getHeight();
  final int startWidth=mContentContainer.getWidth();
  final int startHeight=mContentContainer.getHeight();
  final float right=mContentContainer.getX() + mContentContainer.getWidth();
  final float bottom=mContentContainer.getY() + mContentContainer.getHeight();
  final boolean morphedUpwards=(mOverflowDirection == OVERFLOW_DIRECTION_UP);
  Animation widthAnimation=new Animation(){
    @Override protected void applyTransformation(    float interpolatedTime,    Transformation t){
      ViewGroup.LayoutParams params=mContentContainer.getLayoutParams();
      int deltaWidth=(int)(interpolatedTime * (targetWidth - startWidth));
      params.width=startWidth + deltaWidth;
      mContentContainer.setLayoutParams(params);
      mContentContainer.setX(right - mContentContainer.getWidth());
    }
  }
;
  Animation heightAnimation=new Animation(){
    @Override protected void applyTransformation(    float interpolatedTime,    Transformation t){
      ViewGroup.LayoutParams params=mContentContainer.getLayoutParams();
      int deltaHeight=(int)(interpolatedTime * (targetHeight - startHeight));
      params.height=startHeight + deltaHeight;
      mContentContainer.setLayoutParams(params);
      if (morphedUpwards) {
        mContentContainer.setY(bottom - mContentContainer.getHeight());
      }
    }
  }
;
  widthAnimation.setDuration(150);
  widthAnimation.setStartOffset(150);
  heightAnimation.setDuration(210);
  AnimationSet animation=new AnimationSet(true);
  animation.setAnimationListener(mOnOverflowClosed);
  animation.addAnimation(widthAnimation);
  animation.addAnimation(heightAnimation);
  mContentContainer.startAnimation(animation);
}
