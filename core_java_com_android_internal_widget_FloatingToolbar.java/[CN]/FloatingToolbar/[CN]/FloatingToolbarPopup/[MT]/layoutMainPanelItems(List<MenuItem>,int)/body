{
  Preconditions.checkNotNull(menuItems);
  int availableWidth=toolbarWidth;
  final LinkedList<MenuItem> remainingMenuItems=new LinkedList<MenuItem>(menuItems);
  mMainPanel.removeAllViews();
  boolean isFirstItem=true;
  while (!remainingMenuItems.isEmpty()) {
    final MenuItem menuItem=remainingMenuItems.peek();
    View menuItemButton=createMenuItemButton(mContext,menuItem);
    if (isFirstItem) {
      menuItemButton.setPaddingRelative((int)(1.5 * menuItemButton.getPaddingStart()),menuItemButton.getPaddingTop(),menuItemButton.getPaddingEnd(),menuItemButton.getPaddingBottom());
      isFirstItem=false;
    }
    if (remainingMenuItems.size() == 1) {
      menuItemButton.setPaddingRelative(menuItemButton.getPaddingStart(),menuItemButton.getPaddingTop(),(int)(1.5 * menuItemButton.getPaddingEnd()),menuItemButton.getPaddingBottom());
    }
    menuItemButton.measure(MeasureSpec.UNSPECIFIED,MeasureSpec.UNSPECIFIED);
    int menuItemButtonWidth=Math.min(menuItemButton.getMeasuredWidth(),toolbarWidth);
    boolean canFitWithOverflow=menuItemButtonWidth <= availableWidth - mOverflowButtonSize.getWidth();
    boolean canFitNoOverflow=remainingMenuItems.size() == 1 && menuItemButtonWidth <= availableWidth;
    if (canFitWithOverflow || canFitNoOverflow) {
      setButtonTagAndClickListener(menuItemButton,menuItem);
      mMainPanel.addView(menuItemButton);
      ViewGroup.LayoutParams params=menuItemButton.getLayoutParams();
      params.width=menuItemButtonWidth;
      menuItemButton.setLayoutParams(params);
      availableWidth-=menuItemButtonWidth;
      remainingMenuItems.pop();
    }
 else {
      mMainPanel.setPaddingRelative(0,0,mOverflowButtonSize.getWidth(),0);
      break;
    }
  }
  mMainPanelSize=measure(mMainPanel);
  return remainingMenuItems;
}
