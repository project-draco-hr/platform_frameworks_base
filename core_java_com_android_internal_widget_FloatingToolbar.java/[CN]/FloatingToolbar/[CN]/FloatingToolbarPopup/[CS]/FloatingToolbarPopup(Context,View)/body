{
  mParent=Preconditions.checkNotNull(parent);
  mContext=Preconditions.checkNotNull(context);
  mContentContainer=createContentContainer(context);
  mPopupWindow=createPopupWindow(mContentContainer);
  mMarginHorizontal=parent.getResources().getDimensionPixelSize(R.dimen.floating_toolbar_horizontal_margin);
  mMarginVertical=parent.getResources().getDimensionPixelSize(R.dimen.floating_toolbar_vertical_margin);
  mLogAccelerateInterpolator=new LogAccelerateInterpolator();
  mFastOutSlowInInterpolator=AnimationUtils.loadInterpolator(mContext,android.R.interpolator.fast_out_slow_in);
  mLinearOutSlowInInterpolator=AnimationUtils.loadInterpolator(mContext,android.R.interpolator.linear_out_slow_in);
  mFastOutLinearInInterpolator=AnimationUtils.loadInterpolator(mContext,android.R.interpolator.fast_out_linear_in);
  mArrow=mContext.getResources().getDrawable(R.drawable.ft_avd_tooverflow,mContext.getTheme());
  mArrow.setAutoMirrored(true);
  mOverflow=mContext.getResources().getDrawable(R.drawable.ft_avd_toarrow,mContext.getTheme());
  mOverflow.setAutoMirrored(true);
  mToArrow=(AnimatedVectorDrawable)mContext.getResources().getDrawable(R.drawable.ft_avd_toarrow_animation,mContext.getTheme());
  mToArrow.setAutoMirrored(true);
  mToOverflow=(AnimatedVectorDrawable)mContext.getResources().getDrawable(R.drawable.ft_avd_tooverflow_animation,mContext.getTheme());
  mToOverflow.setAutoMirrored(true);
  mOverflowButton=createOverflowButton();
  mOverflowButtonSize=measure(mOverflowButton);
  mMainPanel=createMainPanel();
  mOverflowPanelViewHelper=new OverflowPanelViewHelper(mContext);
  mOverflowPanel=createOverflowPanel();
  mOverflowAnimationListener=createOverflowAnimationListener();
  mOpenOverflowAnimation=new AnimationSet(true);
  mOpenOverflowAnimation.setAnimationListener(mOverflowAnimationListener);
  mCloseOverflowAnimation=new AnimationSet(true);
  mCloseOverflowAnimation.setAnimationListener(mOverflowAnimationListener);
  mShowAnimation=createEnterAnimation(mContentContainer);
  mDismissAnimation=createExitAnimation(mContentContainer,150,new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator animation){
      mPopupWindow.dismiss();
      mContentContainer.removeAllViews();
    }
  }
);
  mHideAnimation=createExitAnimation(mContentContainer,0,new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator animation){
      mPopupWindow.dismiss();
    }
  }
);
}
