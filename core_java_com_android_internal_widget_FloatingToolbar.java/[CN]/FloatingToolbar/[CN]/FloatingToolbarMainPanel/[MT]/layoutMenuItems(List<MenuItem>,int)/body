{
  final int toolbarWidth=getAdjustedToolbarWidth(mContext,suggestedWidth) - getEstimatedOpenOverflowButtonWidth(mContext);
  int availableWidth=toolbarWidth;
  final LinkedList<MenuItem> remainingMenuItems=new LinkedList<MenuItem>(menuItems);
  mContentView.removeAllViews();
  boolean isFirstItem=true;
  while (!remainingMenuItems.isEmpty()) {
    final MenuItem menuItem=remainingMenuItems.peek();
    Button menuItemButton=createMenuItemButton(mContext,menuItem);
    if (isFirstItem) {
      menuItemButton.setPaddingRelative((int)(1.5 * menuItemButton.getPaddingStart()),menuItemButton.getPaddingTop(),menuItemButton.getPaddingEnd(),menuItemButton.getPaddingBottom());
      isFirstItem=false;
    }
    if (remainingMenuItems.size() == 1) {
      menuItemButton.setPaddingRelative(menuItemButton.getPaddingStart(),menuItemButton.getPaddingTop(),(int)(1.5 * menuItemButton.getPaddingEnd()),menuItemButton.getPaddingBottom());
    }
    menuItemButton.measure(MeasureSpec.UNSPECIFIED,MeasureSpec.UNSPECIFIED);
    int menuItemButtonWidth=Math.min(menuItemButton.getMeasuredWidth(),toolbarWidth);
    if (menuItemButtonWidth <= availableWidth) {
      menuItemButton.setTag(menuItem);
      menuItemButton.setOnClickListener(mMenuItemButtonOnClickListener);
      mContentView.addView(menuItemButton);
      ViewGroup.LayoutParams params=menuItemButton.getLayoutParams();
      params.width=menuItemButtonWidth;
      menuItemButton.setLayoutParams(params);
      availableWidth-=menuItemButtonWidth;
      remainingMenuItems.pop();
    }
 else {
      if (mOpenOverflowButton == null) {
        mOpenOverflowButton=(ImageButton)LayoutInflater.from(mContext).inflate(R.layout.floating_popup_open_overflow_button,null);
        mOpenOverflowButton.setOnClickListener(new View.OnClickListener(){
          @Override public void onClick(          View v){
            if (mOpenOverflowButton != null) {
              mOpenOverflow.run();
            }
          }
        }
);
      }
      mContentView.addView(mOpenOverflowButton);
      break;
    }
  }
  return remainingMenuItems;
}
