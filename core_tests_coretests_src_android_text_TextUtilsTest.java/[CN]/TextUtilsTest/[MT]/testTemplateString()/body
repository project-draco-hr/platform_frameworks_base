{
  CharSequence result;
  result=TextUtils.expandTemplate("This is a ^1 of the ^2 broadcast ^3.","test","emergency","system");
  assertEquals("This is a test of the emergency broadcast system.",result.toString());
  result=TextUtils.expandTemplate("^^^1^^^2^3^a^1^^b^^^c","one","two","three");
  assertEquals("^one^twothree^aone^b^^c",result.toString());
  result=TextUtils.expandTemplate("^");
  assertEquals("^",result.toString());
  result=TextUtils.expandTemplate("^^");
  assertEquals("^",result.toString());
  result=TextUtils.expandTemplate("^^^");
  assertEquals("^^",result.toString());
  result=TextUtils.expandTemplate("shorter ^1 values ^2.","a","");
  assertEquals("shorter a values .",result.toString());
  try {
    TextUtils.expandTemplate("Only ^1 value given, but ^2 used.","foo");
    fail();
  }
 catch (  IllegalArgumentException e) {
  }
  try {
    TextUtils.expandTemplate("^1 value given, and ^0 used.","foo");
    fail();
  }
 catch (  IllegalArgumentException e) {
  }
  result=TextUtils.expandTemplate("^1 value given, and ^9 used.","one","two","three","four","five","six","seven","eight","nine");
  assertEquals("one value given, and nine used.",result.toString());
  try {
    TextUtils.expandTemplate("^1 value given, and ^10 used.","one","two","three","four","five","six","seven","eight","nine","ten");
    fail();
  }
 catch (  IllegalArgumentException e) {
  }
  result=TextUtils.expandTemplate("^2","foo","^^");
  assertEquals("^^",result.toString());
  result=TextUtils.expandTemplate("^^2","foo","1");
  assertEquals("^2",result.toString());
  result=TextUtils.expandTemplate("^1","value with ^2 in it","foo");
  assertEquals("value with ^2 in it",result.toString());
}
