{
  if (mCreatingLoader) {
    throw new IllegalStateException("Called while creating a loader");
  }
  LoaderInfo info=mLoaders.get(id);
  if (DEBUG)   Log.v(TAG,"restartLoader in " + this + ": args="+ args);
  if (info != null) {
    LoaderInfo inactive=mInactiveLoaders.get(id);
    if (inactive != null) {
      if (info.mHaveData) {
        if (DEBUG)         Log.v(TAG,"  Removing last inactive loader: " + info);
        inactive.mDeliveredData=false;
        inactive.destroy();
        mInactiveLoaders.put(id,info);
      }
 else {
        if (!info.mStarted) {
          if (DEBUG)           Log.v(TAG,"  Current loader is stopped; replacing");
          mLoaders.put(id,null);
          info.destroy();
        }
 else {
          if (info.mPendingLoader != null) {
            if (DEBUG)             Log.v(TAG,"  Removing pending loader: " + info.mPendingLoader);
            info.mPendingLoader.destroy();
            info.mPendingLoader=null;
          }
          if (DEBUG)           Log.v(TAG,"  Enqueuing as new pending loader");
          info.mPendingLoader=createLoader(id,args,(LoaderManager.LoaderCallbacks<Object>)callback);
          return (Loader<D>)info.mPendingLoader.mLoader;
        }
      }
    }
 else {
      if (DEBUG)       Log.v(TAG,"  Making last loader inactive: " + info);
      mInactiveLoaders.put(id,info);
    }
  }
  info=createAndInstallLoader(id,args,(LoaderManager.LoaderCallbacks<Object>)callback);
  return (Loader<D>)info.mLoader;
}
