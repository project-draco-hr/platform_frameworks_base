{
  if (DEBUG) {
    Log.d(TAG,"openDocument: " + documentId);
  }
  final Identifier identifier=mDatabase.createIdentifier(documentId);
  try {
    openDevice(identifier.mDeviceId);
    final MtpDeviceRecord device=getDeviceToolkit(identifier.mDeviceId).mDeviceRecord;
    final int modeFlag=ParcelFileDescriptor.parseMode(mode) & ~ParcelFileDescriptor.MODE_CREATE;
    if ((modeFlag & ParcelFileDescriptor.MODE_READ_ONLY) != 0) {
      long fileSize;
      try {
        fileSize=getFileSize(documentId);
      }
 catch (      UnsupportedOperationException exception) {
        fileSize=-1;
      }
      if (MtpDeviceRecord.isPartialReadSupported(device.operationsSupported,fileSize)) {
        return mAppFuse.openFile(Integer.parseInt(documentId),modeFlag);
      }
 else {
        return getPipeManager(identifier).readDocument(mMtpManager,identifier);
      }
    }
 else     if ((modeFlag & ParcelFileDescriptor.MODE_WRITE_ONLY) != 0) {
      if (MtpDeviceRecord.isWritingSupported(device.operationsSupported)) {
        return mAppFuse.openFile(Integer.parseInt(documentId),modeFlag);
      }
 else {
        throw new UnsupportedOperationException("The device does not support writing operation.");
      }
    }
 else {
      throw new UnsupportedOperationException("The provider does not support 'rw' mode.");
    }
  }
 catch (  FileNotFoundException|RuntimeException error) {
    Log.e(MtpDocumentsProvider.TAG,"openDocument",error);
    throw error;
  }
catch (  IOException error) {
    Log.e(MtpDocumentsProvider.TAG,"openDocument",error);
    throw new IllegalStateException(error);
  }
}
