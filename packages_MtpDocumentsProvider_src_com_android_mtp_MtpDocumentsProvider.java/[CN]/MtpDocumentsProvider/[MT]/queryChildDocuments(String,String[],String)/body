{
  if (DEBUG) {
    Log.d(TAG,"queryChildDocuments: " + parentDocumentId);
  }
  if (projection == null) {
    projection=MtpDocumentsProvider.DEFAULT_DOCUMENT_PROJECTION;
  }
  Identifier parentIdentifier=mDatabase.createIdentifier(parentDocumentId);
  try {
    openDevice(parentIdentifier.mDeviceId);
    if (parentIdentifier.mDocumentType == MtpDatabaseConstants.DOCUMENT_TYPE_DEVICE) {
      final Identifier singleStorageIdentifier=mDatabase.getSingleStorageIdentifier(parentDocumentId);
      if (singleStorageIdentifier == null) {
        return mDatabase.queryChildDocuments(projection,parentDocumentId);
      }
      parentIdentifier=singleStorageIdentifier;
    }
    return getDocumentLoader(parentIdentifier).queryChildDocuments(projection,parentIdentifier);
  }
 catch (  BusyDeviceException exception) {
    final Bundle bundle=new Bundle();
    bundle.putString(DocumentsContract.EXTRA_ERROR,mResources.getString(R.string.error_busy_device));
    final Cursor cursor=new MatrixCursor(projection);
    cursor.setExtras(bundle);
    return cursor;
  }
catch (  IOException exception) {
    Log.e(MtpDocumentsProvider.TAG,"queryChildDocuments",exception);
    throw new FileNotFoundException(exception.getMessage());
  }
}
