{
  if (DEBUG) {
    Log.d(TAG,"queryChildDocuments: " + parentDocumentId);
  }
  if (projection == null) {
    projection=MtpDocumentsProvider.DEFAULT_DOCUMENT_PROJECTION;
  }
  Identifier parentIdentifier=mDatabase.createIdentifier(parentDocumentId);
  try {
    openDevice(parentIdentifier.mDeviceId);
    if (parentIdentifier.mDocumentType == MtpDatabaseConstants.DOCUMENT_TYPE_DEVICE) {
      final String[] storageDocIds=mDatabase.getStorageDocumentIds(parentDocumentId);
      if (storageDocIds.length == 0) {
        return createErrorCursor(projection,R.string.error_locked_device);
      }
 else       if (storageDocIds.length > 1) {
        return mDatabase.queryChildDocuments(projection,parentDocumentId);
      }
      parentIdentifier=mDatabase.createIdentifier(storageDocIds[0]);
    }
    return getDocumentLoader(parentIdentifier).queryChildDocuments(projection,parentIdentifier);
  }
 catch (  BusyDeviceException exception) {
    return createErrorCursor(projection,R.string.error_busy_device);
  }
catch (  IOException exception) {
    Log.e(MtpDocumentsProvider.TAG,"queryChildDocuments",exception);
    throw new FileNotFoundException(exception.getMessage());
  }
}
