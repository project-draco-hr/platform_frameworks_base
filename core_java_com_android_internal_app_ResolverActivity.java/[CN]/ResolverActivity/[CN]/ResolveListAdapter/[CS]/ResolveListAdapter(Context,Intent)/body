{
  mIntent=new Intent(intent);
  mIntent.setComponent(null);
  mInflater=(LayoutInflater)context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
  List<ResolveInfo> rList=mPm.queryIntentActivities(intent,PackageManager.MATCH_DEFAULT_ONLY | (mAlwaysCheck != null ? PackageManager.GET_RESOLVED_FILTER : 0));
  int N;
  if ((rList != null) && ((N=rList.size()) > 0)) {
    ResolveInfo r0=rList.get(0);
    for (int i=1; i < N; i++) {
      ResolveInfo ri=rList.get(i);
      if (Config.LOGV)       Log.v("ResolveListActivity",r0.activityInfo.name + "=" + r0.priority+ "/"+ r0.isDefault+ " vs "+ ri.activityInfo.name+ "="+ ri.priority+ "/"+ ri.isDefault);
      if (r0.priority != ri.priority || r0.isDefault != ri.isDefault) {
        while (i < N) {
          rList.remove(i);
          N--;
        }
      }
    }
    if (N > 1) {
      ResolveInfo.DisplayNameComparator rComparator=new ResolveInfo.DisplayNameComparator(mPm);
      Collections.sort(rList,rComparator);
    }
    mList=new ArrayList<DisplayResolveInfo>();
    r0=rList.get(0);
    int start=0;
    CharSequence r0Label=r0.loadLabel(mPm);
    for (int i=1; i < N; i++) {
      if (r0Label == null) {
        r0Label=r0.activityInfo.packageName;
      }
      ResolveInfo ri=rList.get(i);
      CharSequence riLabel=ri.loadLabel(mPm);
      if (riLabel == null) {
        riLabel=ri.activityInfo.packageName;
      }
      if (riLabel.equals(r0Label)) {
        continue;
      }
      processGroup(rList,start,(i - 1),r0,r0Label);
      r0=ri;
      r0Label=riLabel;
      start=i;
    }
    processGroup(rList,start,(N - 1),r0,r0Label);
  }
}
