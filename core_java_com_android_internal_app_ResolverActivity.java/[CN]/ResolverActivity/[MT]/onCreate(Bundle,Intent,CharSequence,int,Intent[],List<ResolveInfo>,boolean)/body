{
  setTheme(R.style.Theme_DeviceDefault_Resolver);
  super.onCreate(savedInstanceState);
  setProfileSwitchMessageId(intent.getContentUserHint());
  try {
    mLaunchedFromUid=ActivityManagerNative.getDefault().getLaunchedFromUid(getActivityToken());
  }
 catch (  RemoteException e) {
    mLaunchedFromUid=-1;
  }
  mPm=getPackageManager();
  mUsm=(UsageStatsManager)getSystemService(Context.USAGE_STATS_SERVICE);
  final long sinceTime=System.currentTimeMillis() - USAGE_STATS_PERIOD;
  mStats=mUsm.queryAndAggregateUsageStats(sinceTime,System.currentTimeMillis());
  Log.d(TAG,"sinceTime=" + sinceTime);
  mMaxColumns=getResources().getInteger(R.integer.config_maxResolverActivityColumns);
  mPackageMonitor.register(this,getMainLooper(),false);
  mRegistered=true;
  final ActivityManager am=(ActivityManager)getSystemService(ACTIVITY_SERVICE);
  mIconDpi=am.getLauncherLargeIconDensity();
  mIconSize=am.getLauncherLargeIconSize();
  mAdapter=new ResolveListAdapter(this,intent,initialIntents,rList,mLaunchedFromUid,alwaysUseOption);
  final int layoutId;
  final boolean useHeader;
  if (mAdapter.hasFilteredItem()) {
    layoutId=R.layout.resolver_list_with_default;
    alwaysUseOption=false;
    useHeader=true;
  }
 else {
    useHeader=false;
    layoutId=R.layout.resolver_list;
  }
  mAlwaysUseOption=alwaysUseOption;
  int count=mAdapter.mList.size();
  if (mLaunchedFromUid < 0 || UserHandle.isIsolated(mLaunchedFromUid)) {
    finish();
    return;
  }
 else   if (count > 1) {
    setContentView(layoutId);
    mListView=(ListView)findViewById(R.id.resolver_list);
    mListView.setAdapter(mAdapter);
    mListView.setOnItemClickListener(this);
    mListView.setOnItemLongClickListener(new ItemLongClickListener());
    if (alwaysUseOption) {
      mListView.setChoiceMode(ListView.CHOICE_MODE_SINGLE);
    }
    if (useHeader) {
      mListView.addHeaderView(LayoutInflater.from(this).inflate(R.layout.resolver_different_item_header,mListView,false));
    }
  }
 else   if (count == 1) {
    safelyStartActivity(mAdapter.intentForPosition(0,false));
    mPackageMonitor.unregister();
    mRegistered=false;
    finish();
    return;
  }
 else {
    setContentView(R.layout.resolver_list);
    final TextView empty=(TextView)findViewById(R.id.empty);
    empty.setVisibility(View.VISIBLE);
    mListView=(ListView)findViewById(R.id.resolver_list);
    mListView.setVisibility(View.GONE);
  }
  getWindow().clearFlags(FLAG_LAYOUT_IN_SCREEN | FLAG_LAYOUT_INSET_DECOR);
  final ResolverDrawerLayout rdl=(ResolverDrawerLayout)findViewById(R.id.contentPanel);
  if (rdl != null) {
    rdl.setOnClickOutsideListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        finish();
      }
    }
);
  }
  if (title == null) {
    title=getTitleForAction(intent.getAction(),defaultTitleRes);
  }
  if (!TextUtils.isEmpty(title)) {
    final TextView titleView=(TextView)findViewById(R.id.title);
    if (titleView != null) {
      titleView.setText(title);
    }
    setTitle(title);
  }
  final ImageView iconView=(ImageView)findViewById(R.id.icon);
  final DisplayResolveInfo iconInfo=mAdapter.getFilteredItem();
  if (iconView != null && iconInfo != null) {
    new LoadIconIntoViewTask(iconView).execute(iconInfo);
  }
  if (alwaysUseOption || mAdapter.hasFilteredItem()) {
    final ViewGroup buttonLayout=(ViewGroup)findViewById(R.id.button_bar);
    if (buttonLayout != null) {
      buttonLayout.setVisibility(View.VISIBLE);
      mAlwaysButton=(Button)buttonLayout.findViewById(R.id.button_always);
      mOnceButton=(Button)buttonLayout.findViewById(R.id.button_once);
    }
 else {
      mAlwaysUseOption=false;
    }
  }
  if (mAdapter.hasFilteredItem()) {
    setAlwaysButtonEnabled(true,mAdapter.getFilteredPosition(),false);
    mOnceButton.setEnabled(true);
  }
}
