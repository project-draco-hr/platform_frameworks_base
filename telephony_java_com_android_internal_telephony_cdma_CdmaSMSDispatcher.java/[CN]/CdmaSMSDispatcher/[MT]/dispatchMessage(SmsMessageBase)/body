{
  if (smsb == null) {
    Log.e(TAG,"dispatchMessage: message is null");
    return Intents.RESULT_SMS_GENERIC_ERROR;
  }
  String inEcm=SystemProperties.get(TelephonyProperties.PROPERTY_INECM_MODE,"false");
  if (inEcm.equals("true")) {
    return Activity.RESULT_OK;
  }
  if (mSmsReceiveDisabled) {
    Log.d(TAG,"Received short message on device which doesn't support " + "receiving SMS. Ignored.");
    return Intents.RESULT_SMS_HANDLED;
  }
  SmsMessage sms=(SmsMessage)smsb;
  if (SmsEnvelope.MESSAGE_TYPE_BROADCAST == sms.getMessageType()) {
    Log.d(TAG,"Broadcast type message");
    SmsCbMessage message=sms.parseBroadcastSms();
    if (message != null) {
      dispatchBroadcastMessage(message);
    }
    return Intents.RESULT_SMS_HANDLED;
  }
  mLastDispatchedSmsFingerprint=sms.getIncomingSmsFingerprint();
  if (mLastAcknowledgedSmsFingerprint != null && Arrays.equals(mLastDispatchedSmsFingerprint,mLastAcknowledgedSmsFingerprint)) {
    return Intents.RESULT_SMS_HANDLED;
  }
  sms.parseSms();
  int teleService=sms.getTeleService();
  boolean handled=false;
  if ((SmsEnvelope.TELESERVICE_VMN == teleService) || (SmsEnvelope.TELESERVICE_MWI == teleService)) {
    int voicemailCount=sms.getNumOfVoicemails();
    Log.d(TAG,"Voicemail count=" + voicemailCount);
    SharedPreferences sp=PreferenceManager.getDefaultSharedPreferences(mContext);
    SharedPreferences.Editor editor=sp.edit();
    editor.putInt(CDMAPhone.VM_COUNT_CDMA,voicemailCount);
    editor.apply();
    mPhone.setVoiceMessageWaiting(1,voicemailCount);
    handled=true;
  }
 else   if (((SmsEnvelope.TELESERVICE_WMT == teleService) || (SmsEnvelope.TELESERVICE_WEMT == teleService)) && sms.isStatusReportMessage()) {
    handleCdmaStatusReport(sms);
    handled=true;
  }
 else   if (SmsEnvelope.TELESERVICE_SCPT == teleService) {
    handleServiceCategoryProgramData(sms);
    handled=true;
  }
 else   if ((sms.getUserData() == null)) {
    if (false) {
      Log.d(TAG,"Received SMS without user data");
    }
    handled=true;
  }
  if (handled) {
    return Intents.RESULT_SMS_HANDLED;
  }
  if (!mStorageMonitor.isStorageAvailable() && sms.getMessageClass() != MessageClass.CLASS_0) {
    return Intents.RESULT_SMS_OUT_OF_MEMORY;
  }
  if (SmsEnvelope.TELESERVICE_WAP == teleService) {
    return processCdmaWapPdu(sms.getUserData(),sms.messageRef,sms.getOriginatingAddress());
  }
  if ((SmsEnvelope.TELESERVICE_WMT != teleService) && (SmsEnvelope.TELESERVICE_WEMT != teleService) && (SmsEnvelope.MESSAGE_TYPE_BROADCAST != sms.getMessageType())) {
    return Intents.RESULT_SMS_UNSUPPORTED;
  }
  return dispatchNormalMessage(smsb);
}
