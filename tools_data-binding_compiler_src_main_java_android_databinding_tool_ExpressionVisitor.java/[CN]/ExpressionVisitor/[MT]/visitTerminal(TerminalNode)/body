{
  final int type=node.getSymbol().getType();
  Class classType;
switch (type) {
case BindingExpressionParser.IntegerLiteral:
    classType=int.class;
  break;
case BindingExpressionParser.FloatingPointLiteral:
classType=float.class;
break;
case BindingExpressionParser.BooleanLiteral:
classType=boolean.class;
break;
case BindingExpressionParser.CharacterLiteral:
classType=char.class;
break;
case BindingExpressionParser.SingleQuoteString:
case BindingExpressionParser.DoubleQuoteString:
classType=String.class;
break;
case BindingExpressionParser.NullLiteral:
classType=Object.class;
break;
default :
throw new RuntimeException("cannot create expression from terminal node " + node.toString());
}
return mModel.symbol(node.getText(),classType);
}
