{
  rs.validate();
  int height=b.getHeight();
  int width=b.getWidth();
  if (layout != CubemapLayout.VERTICAL_FACE_LIST) {
    throw new RSIllegalArgumentException("Only vertical face list supported");
  }
  if (height % 6 != 0) {
    throw new RSIllegalArgumentException("Cubemap height must be multiple of 6");
  }
  if (height / 6 != width) {
    throw new RSIllegalArgumentException("Only square cobe map faces supported");
  }
  boolean isPow2=(width & (width - 1)) == 0;
  if (!isPow2) {
    throw new RSIllegalArgumentException("Only power of 2 cube faces supported");
  }
  Element e=elementFromBitmap(rs,b);
  Type.Builder tb=new Type.Builder(rs,e);
  tb.setX(width);
  tb.setY(width);
  tb.setFaces(true);
  tb.setMipmaps(mips == MipmapControl.MIPMAP_FULL);
  Type t=tb.create();
  int id=rs.nAllocationCubeCreateFromBitmap(t.getID(),mips.mID,b,usage);
  if (id == 0) {
    throw new RSRuntimeException("Load failed for bitmap " + b + " element "+ e);
  }
  return new Allocation(id,rs,t,usage);
}
