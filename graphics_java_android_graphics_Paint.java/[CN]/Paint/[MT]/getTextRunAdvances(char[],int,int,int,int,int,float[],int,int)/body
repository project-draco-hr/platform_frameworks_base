{
  if ((index | count | contextIndex| contextCount| advancesIndex| (index - contextIndex)| ((contextIndex + contextCount) - (index + count))| (chars.length - (contextIndex + contextCount))| (advances == null ? 0 : (advances.length - (advancesIndex + count)))) < 0) {
    throw new IndexOutOfBoundsException();
  }
  if (flags != DIRECTION_LTR && flags != DIRECTION_RTL) {
    throw new IllegalArgumentException("unknown flags value: " + flags);
  }
  if (!mHasCompatScaling) {
    return native_getTextRunAdvances(mNativePaint,chars,index,count,contextIndex,contextCount,flags,advances,advancesIndex,reserved);
  }
  final float oldSize=getTextSize();
  setTextSize(oldSize * mCompatScaling);
  float res=native_getTextRunAdvances(mNativePaint,chars,index,count,contextIndex,contextCount,flags,advances,advancesIndex,reserved);
  setTextSize(oldSize);
  if (advances != null) {
    for (int i=advancesIndex, e=i + count; i < e; i++) {
      advances[i]*=mInvCompatScaling;
    }
  }
  return res * mInvCompatScaling;
}
