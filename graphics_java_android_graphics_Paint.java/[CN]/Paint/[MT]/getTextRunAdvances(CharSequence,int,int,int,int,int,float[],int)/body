{
  if (text == null) {
    throw new IllegalArgumentException("text cannot be null");
  }
  if ((start | end | contextStart| contextEnd| advancesIndex| (end - start)| (start - contextStart)| (contextEnd - end)| (text.length() - contextEnd)| (advances == null ? 0 : (advances.length - advancesIndex - (end - start)))) < 0) {
    throw new IndexOutOfBoundsException();
  }
  if (text instanceof String) {
    return getTextRunAdvances((String)text,start,end,contextStart,contextEnd,flags,advances,advancesIndex);
  }
  if (text instanceof SpannedString || text instanceof SpannableString) {
    return getTextRunAdvances(text.toString(),start,end,contextStart,contextEnd,flags,advances,advancesIndex);
  }
  if (text instanceof GraphicsOperations) {
    return ((GraphicsOperations)text).getTextRunAdvances(start,end,contextStart,contextEnd,flags,advances,advancesIndex,this);
  }
  if (text.length() == 0 || end == start) {
    return 0f;
  }
  int contextLen=contextEnd - contextStart;
  int len=end - start;
  char[] buf=TemporaryBuffer.obtain(contextLen);
  TextUtils.getChars(text,contextStart,contextEnd,buf,0);
  float result=getTextRunAdvances(buf,start - contextStart,len,0,contextLen,flags,advances,advancesIndex);
  TemporaryBuffer.recycle(buf);
  return result;
}
