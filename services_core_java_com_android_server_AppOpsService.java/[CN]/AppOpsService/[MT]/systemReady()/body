{
synchronized (this) {
    boolean changed=false;
    for (int i=0; i < mUidOps.size(); i++) {
      HashMap<String,Ops> pkgs=mUidOps.valueAt(i);
      Iterator<Ops> it=pkgs.values().iterator();
      while (it.hasNext()) {
        Ops ops=it.next();
        int curUid;
        try {
          curUid=mContext.getPackageManager().getPackageUid(ops.packageName,UserHandle.getUserId(ops.uid));
        }
 catch (        NameNotFoundException e) {
          curUid=-1;
        }
        if (curUid != ops.uid) {
          Slog.i(TAG,"Pruning old package " + ops.packageName + "/"+ ops.uid+ ": new uid="+ curUid);
          it.remove();
          changed=true;
        }
      }
      if (pkgs.size() <= 0) {
        mUidOps.removeAt(i);
      }
    }
    if (changed) {
      scheduleWriteLocked();
    }
  }
}
