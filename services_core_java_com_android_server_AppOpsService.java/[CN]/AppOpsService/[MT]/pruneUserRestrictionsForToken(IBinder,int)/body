{
  SparseArray<Pair<boolean[],SparseArray<ArraySet<String>>>> perTokenRestrictions=mOpUserRestrictions.get(token);
  if (perTokenRestrictions != null) {
    final Pair<boolean[],SparseArray<ArraySet<String>>> restrictions=perTokenRestrictions.get(userHandle);
    if (restrictions != null) {
      final boolean[] opRestrictions=restrictions.first;
      final SparseArray<ArraySet<String>> opExceptions=restrictions.second;
      boolean stillHasRestrictions=false;
      if (opRestrictions != null) {
        for (int i=0; i < opRestrictions.length; i++) {
          boolean restriction=opRestrictions[i];
          if (restriction) {
            stillHasRestrictions=true;
          }
 else {
            opExceptions.remove(i);
          }
        }
      }
      if (stillHasRestrictions) {
        return;
      }
      perTokenRestrictions.remove(userHandle);
      if (perTokenRestrictions.size() <= 0) {
        mOpUserRestrictions.remove(token);
      }
    }
  }
}
