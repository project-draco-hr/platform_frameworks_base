{
  int uid=Integer.parseInt(parser.getAttributeValue(null,"n"));
  String isPrivilegedString=parser.getAttributeValue(null,"p");
  boolean isPrivileged=false;
  if (isPrivilegedString == null) {
    try {
      IPackageManager packageManager=ActivityThread.getPackageManager();
      if (packageManager != null) {
        ApplicationInfo appInfo=ActivityThread.getPackageManager().getApplicationInfo(pkgName,0,UserHandle.getUserId(uid));
        if (appInfo != null) {
          isPrivileged=(appInfo.privateFlags & ApplicationInfo.PRIVATE_FLAG_PRIVILEGED) != 0;
        }
      }
 else {
        return;
      }
    }
 catch (    RemoteException e) {
      Slog.w(TAG,"Could not contact PackageManager",e);
    }
  }
 else {
    isPrivileged=Boolean.parseBoolean(isPrivilegedString);
  }
  int outerDepth=parser.getDepth();
  int type;
  while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && (type != XmlPullParser.END_TAG || parser.getDepth() > outerDepth)) {
    if (type == XmlPullParser.END_TAG || type == XmlPullParser.TEXT) {
      continue;
    }
    String tagName=parser.getName();
    if (tagName.equals("op")) {
      Op op=new Op(uid,pkgName,Integer.parseInt(parser.getAttributeValue(null,"n")));
      String mode=parser.getAttributeValue(null,"m");
      if (mode != null) {
        op.mode=Integer.parseInt(mode);
      }
      String time=parser.getAttributeValue(null,"t");
      if (time != null) {
        op.time=Long.parseLong(time);
      }
      time=parser.getAttributeValue(null,"r");
      if (time != null) {
        op.rejectTime=Long.parseLong(time);
      }
      String dur=parser.getAttributeValue(null,"d");
      if (dur != null) {
        op.duration=Integer.parseInt(dur);
      }
      HashMap<String,Ops> pkgOps=mUidOps.get(uid);
      if (pkgOps == null) {
        pkgOps=new HashMap<String,Ops>();
        mUidOps.put(uid,pkgOps);
      }
      Ops ops=pkgOps.get(pkgName);
      if (ops == null) {
        ops=new Ops(pkgName,uid,isPrivileged);
        pkgOps.put(pkgName,ops);
      }
      ops.put(op.op,op);
    }
 else {
      Slog.w(TAG,"Unknown element under <pkg>: " + parser.getName());
      XmlUtils.skipCurrentTag(parser);
    }
  }
}
