{
  if (!mService.getPackageManagerInternalLocked().isPermissionsReviewRequired(receivingPackageName,receivingUserId)) {
    return true;
  }
  final boolean callerForeground=receiverRecord.callerApp != null ? receiverRecord.callerApp.setSchedGroup != ProcessList.SCHED_GROUP_BACKGROUND : true;
  if (callerForeground && receiverRecord.intent.getComponent() != null) {
    IIntentSender target=mService.getIntentSenderLocked(ActivityManager.INTENT_SENDER_BROADCAST,receiverRecord.callerPackage,receiverRecord.callingUid,receiverRecord.userId,null,null,0,new Intent[]{receiverRecord.intent},new String[]{receiverRecord.intent.resolveType(mService.mContext.getContentResolver())},PendingIntent.FLAG_CANCEL_CURRENT | PendingIntent.FLAG_ONE_SHOT | PendingIntent.FLAG_IMMUTABLE,null);
    final Intent intent=new Intent(Intent.ACTION_REVIEW_PERMISSIONS);
    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS);
    intent.putExtra(Intent.EXTRA_PACKAGE_NAME,receivingPackageName);
    intent.putExtra(Intent.EXTRA_INTENT,new IntentSender(target));
    if (DEBUG_PERMISSIONS_REVIEW) {
      Slog.i(TAG,"u" + receivingUserId + " Launching permission review for package "+ receivingPackageName);
    }
    mHandler.post(new Runnable(){
      @Override public void run(){
        mService.mContext.startActivityAsUser(intent,new UserHandle(receivingUserId));
      }
    }
);
  }
 else {
    Slog.w(TAG,"u" + receivingUserId + " Receiving a broadcast in package"+ receivingPackageName+ " requires a permissions review");
  }
  return false;
}
