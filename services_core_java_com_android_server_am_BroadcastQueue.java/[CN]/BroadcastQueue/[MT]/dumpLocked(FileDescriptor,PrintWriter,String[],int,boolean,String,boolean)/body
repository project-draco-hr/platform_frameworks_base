{
  SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
  if (mParallelBroadcasts.size() > 0 || mOrderedBroadcasts.size() > 0 || mPendingBroadcast != null) {
    boolean printed=false;
    for (int i=mParallelBroadcasts.size() - 1; i >= 0; i--) {
      BroadcastRecord br=mParallelBroadcasts.get(i);
      if (dumpPackage != null && !dumpPackage.equals(br.callerPackage)) {
        continue;
      }
      if (!printed) {
        if (needSep) {
          pw.println();
        }
        needSep=true;
        printed=true;
        pw.println("  Active broadcasts [" + mQueueName + "]:");
      }
      pw.println("  Active Broadcast " + mQueueName + " #"+ i+ ":");
      br.dump(pw,"    ",sdf);
    }
    printed=false;
    needSep=true;
    for (int i=mOrderedBroadcasts.size() - 1; i >= 0; i--) {
      BroadcastRecord br=mOrderedBroadcasts.get(i);
      if (dumpPackage != null && !dumpPackage.equals(br.callerPackage)) {
        continue;
      }
      if (!printed) {
        if (needSep) {
          pw.println();
        }
        needSep=true;
        printed=true;
        pw.println("  Active ordered broadcasts [" + mQueueName + "]:");
      }
      pw.println("  Active Ordered Broadcast " + mQueueName + " #"+ i+ ":");
      mOrderedBroadcasts.get(i).dump(pw,"    ",sdf);
    }
    if (dumpPackage == null || (mPendingBroadcast != null && dumpPackage.equals(mPendingBroadcast.callerPackage))) {
      if (needSep) {
        pw.println();
      }
      pw.println("  Pending broadcast [" + mQueueName + "]:");
      if (mPendingBroadcast != null) {
        mPendingBroadcast.dump(pw,"    ",sdf);
      }
 else {
        pw.println("    (null)");
      }
      needSep=true;
    }
  }
  int i;
  boolean printed=false;
  i=-1;
  int lastIndex=mHistoryNext;
  int ringIndex=lastIndex;
  do {
    ringIndex=ringAdvance(ringIndex,-1,MAX_BROADCAST_HISTORY);
    BroadcastRecord r=mBroadcastHistory[ringIndex];
    if (r == null) {
      continue;
    }
    i++;
    if (dumpPackage != null && !dumpPackage.equals(r.callerPackage)) {
      continue;
    }
    if (!printed) {
      if (needSep) {
        pw.println();
      }
      needSep=true;
      pw.println("  Historical broadcasts [" + mQueueName + "]:");
      printed=true;
    }
    if (dumpAll) {
      pw.print("  Historical Broadcast " + mQueueName + " #");
      pw.print(i);
      pw.println(":");
      r.dump(pw,"    ",sdf);
    }
 else {
      pw.print("  #");
      pw.print(i);
      pw.print(": ");
      pw.println(r);
      pw.print("    ");
      pw.println(r.intent.toShortString(false,true,true,false));
      if (r.targetComp != null && r.targetComp != r.intent.getComponent()) {
        pw.print("    targetComp: ");
        pw.println(r.targetComp.toShortString());
      }
      Bundle bundle=r.intent.getExtras();
      if (bundle != null) {
        pw.print("    extras: ");
        pw.println(bundle.toString());
      }
    }
  }
 while (ringIndex != lastIndex);
  if (dumpPackage == null) {
    lastIndex=ringIndex=mSummaryHistoryNext;
    if (dumpAll) {
      printed=false;
      i=-1;
    }
 else {
      for (int j=i; j > 0 && ringIndex != lastIndex; ) {
        ringIndex=ringAdvance(ringIndex,-1,MAX_BROADCAST_SUMMARY_HISTORY);
        BroadcastRecord r=mBroadcastHistory[ringIndex];
        if (r == null) {
          continue;
        }
        j--;
      }
    }
    do {
      ringIndex=ringAdvance(ringIndex,-1,MAX_BROADCAST_SUMMARY_HISTORY);
      Intent intent=mBroadcastSummaryHistory[ringIndex];
      if (intent == null) {
        continue;
      }
      if (!printed) {
        if (needSep) {
          pw.println();
        }
        needSep=true;
        pw.println("  Historical broadcasts summary [" + mQueueName + "]:");
        printed=true;
      }
      if (!dumpAll && i >= 50) {
        pw.println("  ...");
        break;
      }
      i++;
      pw.print("  #");
      pw.print(i);
      pw.print(": ");
      pw.println(intent.toShortString(false,true,true,false));
      pw.print("    ");
      TimeUtils.formatDuration(mSummaryHistoryDispatchTime[ringIndex] - mSummaryHistoryEnqueueTime[ringIndex],pw);
      pw.print(" dispatch ");
      TimeUtils.formatDuration(mSummaryHistoryFinishTime[ringIndex] - mSummaryHistoryDispatchTime[ringIndex],pw);
      pw.println(" finish");
      pw.print("    enq=");
      pw.print(sdf.format(new Date(mSummaryHistoryEnqueueTime[ringIndex])));
      pw.print(" disp=");
      pw.print(sdf.format(new Date(mSummaryHistoryDispatchTime[ringIndex])));
      pw.print(" fin=");
      pw.println(sdf.format(new Date(mSummaryHistoryFinishTime[ringIndex])));
      Bundle bundle=intent.getExtras();
      if (bundle != null) {
        pw.print("    extras: ");
        pw.println(bundle.toString());
      }
    }
 while (ringIndex != lastIndex);
  }
  return needSep;
}
