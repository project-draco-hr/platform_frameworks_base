{
  if (DEBUG_BROADCAST)   Slog.v(TAG_BROADCAST,"Process cur broadcast " + r + " for app "+ app);
  if (app.thread == null) {
    throw new RemoteException();
  }
  if (app.inFullBackup) {
    skipReceiverLocked(r);
    return;
  }
  r.receiver=app.thread.asBinder();
  r.curApp=app;
  app.curReceivers.add(r);
  app.forceProcessStateUpTo(ActivityManager.PROCESS_STATE_RECEIVER);
  mService.updateLruProcessLocked(app,false,null);
  mService.updateOomAdjLocked();
  r.intent.setComponent(r.curComponent);
  boolean started=false;
  try {
    if (DEBUG_BROADCAST_LIGHT)     Slog.v(TAG_BROADCAST,"Delivering to component " + r.curComponent + ": "+ r);
    mService.notifyPackageUse(r.intent.getComponent().getPackageName(),PackageManager.NOTIFY_PACKAGE_USE_BROADCAST_RECEIVER);
    app.thread.scheduleReceiver(new Intent(r.intent),r.curReceiver,mService.compatibilityInfoForPackageLocked(r.curReceiver.applicationInfo),r.resultCode,r.resultData,r.resultExtras,r.ordered,r.userId,app.repProcState);
    if (DEBUG_BROADCAST)     Slog.v(TAG_BROADCAST,"Process cur broadcast " + r + " DELIVERED for app "+ app);
    started=true;
  }
  finally {
    if (!started) {
      if (DEBUG_BROADCAST)       Slog.v(TAG_BROADCAST,"Process cur broadcast " + r + ": NOT STARTED!");
      r.receiver=null;
      r.curApp=null;
      app.curReceivers.remove(r);
    }
  }
}
