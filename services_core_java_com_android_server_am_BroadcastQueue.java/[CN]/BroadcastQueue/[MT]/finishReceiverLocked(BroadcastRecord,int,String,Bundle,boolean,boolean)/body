{
  final int state=r.state;
  final ActivityInfo receiver=r.curReceiver;
  r.state=BroadcastRecord.IDLE;
  if (state == BroadcastRecord.IDLE) {
    Slog.w(TAG,"finishReceiver [" + mQueueName + "] called but state is IDLE");
  }
  r.receiver=null;
  r.intent.setComponent(null);
  if (r.curApp != null && r.curApp.curReceiver == r) {
    r.curApp.curReceiver=null;
  }
  if (r.curFilter != null) {
    r.curFilter.receiverList.curBroadcast=null;
  }
  r.curFilter=null;
  r.curReceiver=null;
  r.curApp=null;
  mPendingBroadcast=null;
  r.resultCode=resultCode;
  r.resultData=resultData;
  r.resultExtras=resultExtras;
  if (resultAbort && (r.intent.getFlags() & Intent.FLAG_RECEIVER_NO_ABORT) == 0) {
    r.resultAbort=resultAbort;
  }
 else {
    r.resultAbort=false;
  }
  if (waitForServices && r.curComponent != null && r.queue.mDelayBehindServices && r.queue.mOrderedBroadcasts.size() > 0 && r.queue.mOrderedBroadcasts.get(0) == r) {
    ActivityInfo nextReceiver;
    if (r.nextReceiver < r.receivers.size()) {
      Object obj=r.receivers.get(r.nextReceiver);
      nextReceiver=(obj instanceof ActivityInfo) ? (ActivityInfo)obj : null;
    }
 else {
      nextReceiver=null;
    }
    if (receiver == null || nextReceiver == null || receiver.applicationInfo.uid != nextReceiver.applicationInfo.uid || !receiver.processName.equals(nextReceiver.processName)) {
      if (mService.mServices.hasBackgroundServices(r.userId)) {
        Slog.i(TAG,"Delay finish: " + r.curComponent.flattenToShortString());
        r.state=BroadcastRecord.WAITING_SERVICES;
        return false;
      }
    }
  }
  r.curComponent=null;
  return state == BroadcastRecord.APP_RECEIVE || state == BroadcastRecord.CALL_DONE_RECEIVE;
}
