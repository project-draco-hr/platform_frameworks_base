{
synchronized (mMethodMap) {
    buildInputMethodListLocked(mMethodList,mMethodMap);
    InputMethodInfo curIm=null;
    String curInputMethodId=Settings.Secure.getString(context.getContentResolver(),Settings.Secure.DEFAULT_INPUT_METHOD);
    final int N=mMethodList.size();
    if (curInputMethodId != null) {
      for (int i=0; i < N; i++) {
        if (mMethodList.get(i).getId().equals(curInputMethodId)) {
          curIm=mMethodList.get(i);
        }
      }
    }
    boolean changed=false;
    Uri uri=intent.getData();
    String pkg=uri != null ? uri.getSchemeSpecificPart() : null;
    if (curIm != null && curIm.getPackageName().equals(pkg)) {
      ServiceInfo si=null;
      try {
        si=mContext.getPackageManager().getServiceInfo(curIm.getComponent(),0);
      }
 catch (      PackageManager.NameNotFoundException ex) {
      }
      if (si == null) {
        Log.i(TAG,"Current input method removed: " + curInputMethodId);
        if (!chooseNewDefaultIME()) {
          changed=true;
          curIm=null;
          curInputMethodId="";
          Log.i(TAG,"Unsetting current input method");
          Settings.Secure.putString(mContext.getContentResolver(),Settings.Secure.DEFAULT_INPUT_METHOD,curInputMethodId);
        }
      }
    }
 else     if (curIm == null) {
      changed=chooseNewDefaultIME();
    }
    if (changed) {
      updateFromSettingsLocked();
    }
  }
}
