{
  mContext=context;
  mRes=context.getResources();
  mHandler=new Handler(this);
  mIWindowManager=IWindowManager.Stub.asInterface(ServiceManager.getService(Context.WINDOW_SERVICE));
  mCaller=new HandlerCaller(context,new HandlerCaller.Callback(){
    @Override public void executeMessage(    Message msg){
      handleMessage(msg);
    }
  }
);
  mKeyguardManager=(KeyguardManager)mContext.getSystemService(Context.KEYGUARD_SERVICE);
  mNotificationManager=(NotificationManager)mContext.getSystemService(Context.NOTIFICATION_SERVICE);
  mImeSwitcherNotification=new Notification();
  mImeSwitcherNotification.icon=com.android.internal.R.drawable.ic_notification_ime_default;
  mImeSwitcherNotification.when=0;
  mImeSwitcherNotification.flags=Notification.FLAG_ONGOING_EVENT;
  mImeSwitcherNotification.tickerText=null;
  mImeSwitcherNotification.defaults=0;
  mImeSwitcherNotification.sound=null;
  mImeSwitcherNotification.vibrate=null;
  Intent intent=new Intent(Settings.ACTION_SHOW_INPUT_METHOD_PICKER);
  mImeSwitchPendingIntent=PendingIntent.getBroadcast(mContext,0,intent,0);
  mShowOngoingImeSwitcherForPhones=mRes.getBoolean(com.android.internal.R.bool.show_ongoing_ime_switcher);
synchronized (mMethodMap) {
    mFileManager=new InputMethodFileManager(mMethodMap);
  }
  (new MyPackageMonitor()).register(mContext,true);
  IntentFilter screenOnOffFilt=new IntentFilter();
  screenOnOffFilt.addAction(Intent.ACTION_SCREEN_ON);
  screenOnOffFilt.addAction(Intent.ACTION_SCREEN_OFF);
  screenOnOffFilt.addAction(Intent.ACTION_CLOSE_SYSTEM_DIALOGS);
  mContext.registerReceiver(new ScreenOnOffReceiver(),screenOnOffFilt);
  mStatusBar=statusBar;
  statusBar.setIconVisibility("ime",false);
  mNotificationShown=false;
  mSettings=new InputMethodSettings(mRes,context.getContentResolver(),mMethodMap,mMethodList);
  buildInputMethodListLocked(mMethodList,mMethodMap);
  mSettings.enableAllIMEsIfThereIsNoEnabledIME();
  if (TextUtils.isEmpty(Settings.Secure.getString(mContext.getContentResolver(),Settings.Secure.DEFAULT_INPUT_METHOD))) {
    InputMethodInfo defIm=null;
    for (    InputMethodInfo imi : mMethodList) {
      if (defIm == null && imi.getIsDefaultResourceId() != 0) {
        try {
          Resources res=context.createPackageContext(imi.getPackageName(),0).getResources();
          if (res.getBoolean(imi.getIsDefaultResourceId())) {
            defIm=imi;
            Slog.i(TAG,"Selected default: " + imi.getId());
          }
        }
 catch (        PackageManager.NameNotFoundException ex) {
        }
catch (        Resources.NotFoundException ex) {
        }
      }
    }
    if (defIm == null && mMethodList.size() > 0) {
      defIm=mMethodList.get(0);
      Slog.i(TAG,"No default found, using " + defIm.getId());
    }
    if (defIm != null) {
      setSelectedInputMethodAndSubtypeLocked(defIm,NOT_A_SUBTYPE_ID,false);
    }
  }
  mSettingsObserver=new SettingsObserver(mHandler);
  updateFromSettingsLocked();
}
