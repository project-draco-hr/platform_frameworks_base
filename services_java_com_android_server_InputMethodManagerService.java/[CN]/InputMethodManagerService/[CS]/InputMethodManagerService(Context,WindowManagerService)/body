{
  mContext=context;
  mRes=context.getResources();
  mHandler=new Handler(this);
  mIWindowManager=IWindowManager.Stub.asInterface(ServiceManager.getService(Context.WINDOW_SERVICE));
  mCaller=new HandlerCaller(context,new HandlerCaller.Callback(){
    @Override public void executeMessage(    Message msg){
      handleMessage(msg);
    }
  }
);
  mWindowManagerService=windowManager;
  mHardKeyboardListener=new HardKeyboardListener();
  mImeSwitcherNotification=new Notification();
  mImeSwitcherNotification.icon=com.android.internal.R.drawable.ic_notification_ime_default;
  mImeSwitcherNotification.when=0;
  mImeSwitcherNotification.flags=Notification.FLAG_ONGOING_EVENT;
  mImeSwitcherNotification.tickerText=null;
  mImeSwitcherNotification.defaults=0;
  mImeSwitcherNotification.sound=null;
  mImeSwitcherNotification.vibrate=null;
  Intent intent=new Intent(Settings.ACTION_SHOW_INPUT_METHOD_PICKER);
  mImeSwitchPendingIntent=PendingIntent.getBroadcast(mContext,0,intent,0);
  mShowOngoingImeSwitcherForPhones=false;
synchronized (mMethodMap) {
    mFileManager=new InputMethodFileManager(mMethodMap);
  }
  mImListManager=new InputMethodAndSubtypeListManager(context,this);
  (new MyPackageMonitor()).register(mContext,null,true);
  IntentFilter screenOnOffFilt=new IntentFilter();
  screenOnOffFilt.addAction(Intent.ACTION_SCREEN_ON);
  screenOnOffFilt.addAction(Intent.ACTION_SCREEN_OFF);
  screenOnOffFilt.addAction(Intent.ACTION_CLOSE_SYSTEM_DIALOGS);
  mContext.registerReceiver(new ScreenOnOffReceiver(),screenOnOffFilt);
  mNotificationShown=false;
  mSettings=new InputMethodSettings(mRes,context.getContentResolver(),mMethodMap,mMethodList);
  final String defaultImiId=Settings.Secure.getString(mContext.getContentResolver(),Settings.Secure.DEFAULT_INPUT_METHOD);
  mImeSelectedOnBoot=!TextUtils.isEmpty(defaultImiId);
  buildInputMethodListLocked(mMethodList,mMethodMap);
  mSettings.enableAllIMEsIfThereIsNoEnabledIME();
  if (!mImeSelectedOnBoot) {
    Slog.w(TAG,"No IME selected. Choose the most applicable IME.");
    resetDefaultImeLocked(context);
  }
  mSettingsObserver=new SettingsObserver(mHandler);
  updateFromSettingsLocked();
  final IntentFilter filter=new IntentFilter();
  filter.addAction(Intent.ACTION_LOCALE_CHANGED);
  mContext.registerReceiver(new BroadcastReceiver(){
    @Override public void onReceive(    Context context,    Intent intent){
synchronized (mMethodMap) {
        checkCurrentLocaleChangedLocked();
      }
    }
  }
,filter);
}
