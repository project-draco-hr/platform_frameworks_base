{
  if (mCurMethodId == null) {
    return null;
  }
  boolean subtypeIsSelected=false;
  try {
    subtypeIsSelected=Settings.Secure.getInt(mContext.getContentResolver(),Settings.Secure.SELECTED_INPUT_METHOD_SUBTYPE) != NOT_A_SUBTYPE_ID;
  }
 catch (  SettingNotFoundException e) {
  }
synchronized (mMethodMap) {
    final InputMethodInfo imi=mMethodMap.get(mCurMethodId);
    if (imi == null || imi.getSubtypeCount() == 0) {
      return null;
    }
    if (!subtypeIsSelected || mCurrentSubtype == null || !isValidSubtypeId(imi,mCurrentSubtype.hashCode())) {
      int subtypeId=getSelectedInputMethodSubtypeId(mCurMethodId);
      if (subtypeId == NOT_A_SUBTYPE_ID) {
        List<InputMethodSubtype> explicitlyOrImplicitlyEnabledSubtypes=getEnabledInputMethodSubtypeList(imi,true);
        if (explicitlyOrImplicitlyEnabledSubtypes.size() == 1) {
          mCurrentSubtype=explicitlyOrImplicitlyEnabledSubtypes.get(0);
        }
 else         if (explicitlyOrImplicitlyEnabledSubtypes.size() > 1) {
          mCurrentSubtype=findLastResortApplicableSubtypeLocked(mRes,explicitlyOrImplicitlyEnabledSubtypes,SUBTYPE_MODE_KEYBOARD,null,true);
          if (mCurrentSubtype == null) {
            mCurrentSubtype=findLastResortApplicableSubtypeLocked(mRes,explicitlyOrImplicitlyEnabledSubtypes,null,null,true);
          }
        }
      }
 else {
        mCurrentSubtype=getSubtypes(imi).get(subtypeId);
      }
    }
    return mCurrentSubtype;
  }
}
