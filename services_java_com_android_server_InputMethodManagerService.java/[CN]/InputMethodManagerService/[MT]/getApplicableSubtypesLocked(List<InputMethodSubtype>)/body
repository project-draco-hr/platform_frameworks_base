{
  ArrayList<InputMethodSubtype> applicableSubtypes=new ArrayList<InputMethodSubtype>();
  final String systemLocale=mRes.getConfiguration().locale.toString();
  if (TextUtils.isEmpty(systemLocale))   return applicableSubtypes;
  final int N=subtypes.size();
  boolean containsKeyboardSubtype=false;
  for (int i=0; i < N; ++i) {
    InputMethodSubtype subtype=subtypes.get(i);
    if (subtype.getLocale().equals(systemLocale)) {
      applicableSubtypes.add(subtype);
      if (!containsKeyboardSubtype && SUBTYPE_MODE_KEYBOARD.equalsIgnoreCase(subtype.getMode())) {
        containsKeyboardSubtype=true;
      }
    }
  }
  if (!containsKeyboardSubtype) {
    InputMethodSubtype lastResortKeyboardSubtype=findLastResortApplicableSubtypeLocked(subtypes,SUBTYPE_MODE_KEYBOARD,systemLocale,DEFAULT_SUBTYPE_ID);
    if (lastResortKeyboardSubtype != null) {
      applicableSubtypes.add(lastResortKeyboardSubtype);
    }
  }
  return applicableSubtypes;
}
