{
  if (mCurMethodId == null) {
    return mNoBinding;
  }
  ClientState cs=mClients.get(client.asBinder());
  if (cs == null) {
    throw new IllegalArgumentException("unknown client " + client.asBinder());
  }
  try {
    if (!mIWindowManager.inputMethodClientHasFocus(cs.client)) {
      Slog.w(TAG,"Starting input on non-focused client " + cs.client + " (uid="+ cs.uid+ " pid="+ cs.pid+ ")");
      return null;
    }
  }
 catch (  RemoteException e) {
  }
  if (mCurClient != cs) {
    unbindCurrentClientLocked();
    if (DEBUG)     Slog.v(TAG,"switching to client: client = " + cs.client.asBinder());
    if (mScreenOn) {
      try {
        cs.client.setActive(mScreenOn);
      }
 catch (      RemoteException e) {
        Slog.w(TAG,"Got RemoteException sending setActive notification to pid " + cs.pid + " uid "+ cs.uid);
      }
    }
  }
  mCurSeq++;
  if (mCurSeq <= 0)   mCurSeq=1;
  mCurClient=cs;
  mCurInputContext=inputContext;
  mCurAttribute=attribute;
  if (mCurId != null && mCurId.equals(mCurMethodId)) {
    if (cs.curSession != null) {
      return attachNewInputLocked(initial,needResult);
    }
    if (mHaveConnection) {
      if (mCurMethod != null) {
        if (!cs.sessionRequested) {
          cs.sessionRequested=true;
          if (DEBUG)           Slog.v(TAG,"Creating new session for client " + cs);
          executeOrSendMessage(mCurMethod,mCaller.obtainMessageOO(MSG_CREATE_SESSION,mCurMethod,new MethodCallback(mCurMethod)));
        }
        return new InputBindResult(null,mCurId,mCurSeq);
      }
 else       if (SystemClock.uptimeMillis() < (mLastBindTime + TIME_TO_RECONNECT)) {
        return new InputBindResult(null,mCurId,mCurSeq);
      }
 else {
        EventLog.writeEvent(EventLogTags.IMF_FORCE_RECONNECT_IME,mCurMethodId,SystemClock.uptimeMillis() - mLastBindTime,0);
      }
    }
  }
  return startInputInnerLocked();
}
