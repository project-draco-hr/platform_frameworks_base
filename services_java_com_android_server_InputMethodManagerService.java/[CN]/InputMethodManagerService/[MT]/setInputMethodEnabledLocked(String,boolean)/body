{
  InputMethodInfo imm=mMethodMap.get(id);
  if (imm == null) {
    throw new IllegalArgumentException("Unknown id: " + mCurMethodId);
  }
  List<Pair<String,ArrayList<String>>> enabledInputMethodsList=mSettings.getEnabledInputMethodsAndSubtypeListLocked();
  if (enabled) {
    for (    Pair<String,ArrayList<String>> pair : enabledInputMethodsList) {
      if (pair.first.equals(id)) {
        return true;
      }
    }
    mSettings.appendAndPutEnabledInputMethodLocked(id,false);
    return false;
  }
 else {
    StringBuilder builder=new StringBuilder();
    if (mSettings.buildAndPutEnabledInputMethodsStrRemovingIdLocked(builder,enabledInputMethodsList,id)) {
      String selId=Settings.Secure.getString(mContext.getContentResolver(),Settings.Secure.DEFAULT_INPUT_METHOD);
      if (id.equals(selId)) {
        resetSelectedInputMethodAndSubtypeLocked(enabledInputMethodsList.size() > 0 ? enabledInputMethodsList.get(0).first : "");
      }
      return true;
    }
 else {
      return false;
    }
  }
}
