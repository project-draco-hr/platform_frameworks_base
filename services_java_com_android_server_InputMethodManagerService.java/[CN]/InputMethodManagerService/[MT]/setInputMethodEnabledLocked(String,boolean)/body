{
  InputMethodInfo imm=mMethodMap.get(id);
  if (imm == null) {
    if (imm == null) {
      throw new IllegalArgumentException("Unknown id: " + mCurMethodId);
    }
  }
  StringBuilder builder=new StringBuilder(256);
  boolean removed=false;
  String firstId=null;
  String enabledStr=Settings.Secure.getString(mContext.getContentResolver(),Settings.Secure.ENABLED_INPUT_METHODS);
  if (enabledStr != null) {
    final TextUtils.SimpleStringSplitter splitter=mStringColonSplitter;
    splitter.setString(enabledStr);
    while (splitter.hasNext()) {
      String curId=splitter.next();
      if (curId.equals(id)) {
        if (enabled) {
          return true;
        }
        removed=true;
      }
 else       if (!enabled) {
        if (firstId == null)         firstId=curId;
        if (builder.length() > 0)         builder.append(':');
        builder.append(curId);
      }
    }
  }
  if (!enabled) {
    if (!removed) {
      return false;
    }
    Settings.Secure.putString(mContext.getContentResolver(),Settings.Secure.ENABLED_INPUT_METHODS,builder.toString());
    String selId=Settings.Secure.getString(mContext.getContentResolver(),Settings.Secure.DEFAULT_INPUT_METHOD);
    if (id.equals(selId)) {
      Settings.Secure.putString(mContext.getContentResolver(),Settings.Secure.DEFAULT_INPUT_METHOD,firstId != null ? firstId : "");
      resetSelectedInputMethodSubtype();
    }
    return true;
  }
  if (enabledStr == null || enabledStr.length() == 0) {
    enabledStr=id;
  }
 else {
    enabledStr=enabledStr + ':' + id;
  }
  Settings.Secure.putString(mContext.getContentResolver(),Settings.Secure.ENABLED_INPUT_METHODS,enabledStr);
  return false;
}
