{
  int uid=Binder.getCallingUid();
  long ident=Binder.clearCallingIdentity();
  try {
    if (token == null || mCurToken != token) {
      Slog.w(TAG,"Ignoring setImeWindowStatus of uid " + uid + " token: "+ token);
      return;
    }
synchronized (mMethodMap) {
      mImeWindowVis=vis;
      mBackDisposition=backDisposition;
      if (mStatusBar != null) {
        mStatusBar.setImeWindowStatus(token,vis,backDisposition);
      }
      final boolean iconVisibility=(vis & InputMethodService.IME_ACTIVE) != 0;
      final InputMethodInfo imi=mMethodMap.get(mCurMethodId);
      if (imi != null && iconVisibility && needsToShowImeSwitchOngoingNotification()) {
        final PackageManager pm=mContext.getPackageManager();
        final CharSequence title=mRes.getText(com.android.internal.R.string.select_input_method);
        final CharSequence imiLabel=imi.loadLabel(pm);
        final CharSequence summary=mCurrentSubtype != null ? TextUtils.concat(mCurrentSubtype.getDisplayName(mContext,imi.getPackageName(),imi.getServiceInfo().applicationInfo),(TextUtils.isEmpty(imiLabel) ? "" : " (" + imiLabel + ")")) : imiLabel;
        mImeSwitcherNotification.setLatestEventInfo(mContext,title,summary,mImeSwitchPendingIntent);
        if (mNotificationManager != null) {
          mNotificationManager.notify(com.android.internal.R.string.select_input_method,mImeSwitcherNotification);
          mNotificationShown=true;
        }
      }
 else {
        if (mNotificationShown && mNotificationManager != null) {
          mNotificationManager.cancel(com.android.internal.R.string.select_input_method);
          mNotificationShown=false;
        }
      }
    }
  }
  finally {
    Binder.restoreCallingIdentity(ident);
  }
}
