{
  InputMethodInfo info=mMethodMap.get(id);
  if (info == null) {
    throw new IllegalArgumentException("Unknown id: " + id);
  }
  if (id.equals(mCurMethodId)) {
    ArrayList<InputMethodSubtype> subtypes=info.getSubtypes();
    if (subtypeId >= 0 && subtypeId < subtypes.size()) {
      InputMethodSubtype subtype=subtypes.get(subtypeId);
      if (subtype != mCurrentSubtype) {
synchronized (mMethodMap) {
          if (mCurMethod != null) {
            try {
              setSelectedInputMethodAndSubtypeLocked(info,subtypeId,true);
              if (mInputShown) {
                mStatusBar.setIMEButtonVisible(true);
              }
              mCurMethod.changeInputMethodSubtype(subtype);
            }
 catch (            RemoteException e) {
              return;
            }
          }
        }
      }
    }
    return;
  }
  final long ident=Binder.clearCallingIdentity();
  try {
    setSelectedInputMethodAndSubtypeLocked(info,subtypeId,false);
    mCurMethodId=id;
    if (ActivityManagerNative.isSystemReady()) {
      Intent intent=new Intent(Intent.ACTION_INPUT_METHOD_CHANGED);
      intent.addFlags(Intent.FLAG_RECEIVER_REPLACE_PENDING);
      intent.putExtra("input_method_id",id);
      mContext.sendBroadcast(intent);
    }
    unbindCurrentClientLocked();
  }
  finally {
    Binder.restoreCallingIdentity(ident);
  }
}
