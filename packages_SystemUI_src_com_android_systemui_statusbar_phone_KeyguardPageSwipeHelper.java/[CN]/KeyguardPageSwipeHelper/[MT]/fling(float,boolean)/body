{
  float target=mTranslation < 0 ? -mCallback.getPageWidth() : mCallback.getPageWidth();
  target=snapBack ? 0 : target;
  startTranslationAnimations(vel,target);
  startIconAnimation(vel,snapBack,target);
  ValueAnimator animator=ValueAnimator.ofFloat(mTranslation,target);
  mFlingAnimationUtils.apply(animator,mTranslation,target,vel);
  animator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){
    @Override public void onAnimationUpdate(    ValueAnimator animation){
      mTranslation=(float)animation.getAnimatedValue();
    }
  }
);
  animator.addListener(new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator animation){
      mSwipeAnimator=null;
      mSwipingInProgress=false;
      if (!snapBack && !mCallbackCalled) {
        mCallback.onAnimationToSideStarted(mTranslation < 0);
        mCallbackCalled=true;
      }
    }
  }
);
  if (!snapBack) {
    mCallbackCalled=false;
    animator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){
      int frameNumber;
      @Override public void onAnimationUpdate(      ValueAnimator animation){
        if (frameNumber == 2 && !mCallbackCalled) {
          mCallback.onAnimationToSideStarted(mTranslation < 0);
          mCallbackCalled=true;
        }
        frameNumber++;
      }
    }
);
  }
 else {
    showAllIcons(true);
  }
  animator.start();
  mSwipeAnimator=animator;
}
