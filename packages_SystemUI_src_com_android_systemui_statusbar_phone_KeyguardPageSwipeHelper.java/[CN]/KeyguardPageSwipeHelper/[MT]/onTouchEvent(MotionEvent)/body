{
  int pointerIndex=event.findPointerIndex(mTrackingPointer);
  if (pointerIndex < 0) {
    pointerIndex=0;
    mTrackingPointer=event.getPointerId(pointerIndex);
  }
  final float y=event.getY(pointerIndex);
  final float x=event.getX(pointerIndex);
switch (event.getActionMasked()) {
case MotionEvent.ACTION_DOWN:
    if (mSwipingInProgress) {
      cancelAnimations();
    }
  mInitialTouchY=y;
mInitialTouchX=x;
mTranslationOnDown=mTranslation;
initVelocityTracker();
trackMovement(event);
break;
case MotionEvent.ACTION_POINTER_UP:
final int upPointer=event.getPointerId(event.getActionIndex());
if (mTrackingPointer == upPointer) {
final int newIndex=event.getPointerId(0) != upPointer ? 0 : 1;
final float newY=event.getY(newIndex);
final float newX=event.getX(newIndex);
mTrackingPointer=event.getPointerId(newIndex);
mInitialTouchY=newY;
mInitialTouchX=newX;
mTranslationOnDown=mTranslation;
}
break;
case MotionEvent.ACTION_MOVE:
final float w=x - mInitialTouchX;
trackMovement(event);
if (((leftSwipePossible() && w > mTouchSlop) || (rightSwipePossible() && w < -mTouchSlop)) && Math.abs(w) > Math.abs(y - mInitialTouchY) && !mSwipingInProgress) {
cancelAnimations();
mInitialTouchY=y;
mInitialTouchX=x;
mTranslationOnDown=mTranslation;
mSwipingInProgress=true;
}
if (mSwipingInProgress) {
setTranslation(mTranslationOnDown + x - mInitialTouchX,false);
onUserActivity(event.getEventTime());
}
break;
case MotionEvent.ACTION_UP:
case MotionEvent.ACTION_CANCEL:
mTrackingPointer=-1;
trackMovement(event);
if (mSwipingInProgress) {
flingWithCurrentVelocity();
}
if (mVelocityTracker != null) {
mVelocityTracker.recycle();
mVelocityTracker=null;
}
break;
}
return true;
}
