{
  float target=right ? -mHintDistance : mHintDistance;
  startHintTranslationAnimations(target,HINT_PHASE1_DURATION,mFastOutSlowIn);
  ValueAnimator animator=ValueAnimator.ofFloat(mTranslation,target);
  animator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){
    @Override public void onAnimationUpdate(    ValueAnimator animation){
      mTranslation=(float)animation.getAnimatedValue();
    }
  }
);
  animator.addListener(new AnimatorListenerAdapter(){
    private boolean mCancelled;
    @Override public void onAnimationCancel(    Animator animation){
      mCancelled=true;
    }
    @Override public void onAnimationEnd(    Animator animation){
      if (mCancelled) {
        mSwipeAnimator=null;
        onFinishedListener.run();
      }
 else {
        startUnlockHintAnimationPhase2(onFinishedListener);
      }
    }
  }
);
  animator.setInterpolator(mFastOutSlowIn);
  animator.setDuration(HINT_PHASE1_DURATION);
  animator.start();
  mSwipeAnimator=animator;
}
