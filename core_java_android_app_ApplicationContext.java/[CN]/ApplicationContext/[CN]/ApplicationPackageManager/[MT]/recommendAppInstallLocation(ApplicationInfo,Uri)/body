{
  if ((packageURI == null) || (appInfo == null)) {
    return INSTALL_PARSE_FAILED_NOT_APK;
  }
  StatFs internalFlashStats=new StatFs(Environment.getDataDirectory().getPath());
  StatFs sdcardStats=new StatFs(Environment.getExternalStorageDirectory().getPath());
  long totalInternalFlashSize=(long)internalFlashStats.getBlockCount() * (long)internalFlashStats.getBlockSize();
  long availInternalFlashSize=(long)internalFlashStats.getAvailableBlocks() * (long)internalFlashStats.getBlockSize();
  long availSDSize=(long)sdcardStats.getAvailableBlocks() * (long)sdcardStats.getBlockSize();
  double pctNandFree=(double)availInternalFlashSize / (double)totalInternalFlashSize;
  final String archiveFilePath=packageURI.getPath();
  File apkFile=new File(archiveFilePath);
  long pkgLen=apkFile.length();
  boolean installOnlyOnSD=((appInfo.flags & PackageManager.INSTALL_ON_SDCARD) != 0);
  boolean fitsOnSD=(pkgLen < availSDSize) && ((2 * pkgLen) < availInternalFlashSize);
  boolean fitsOnInternalFlash=((pkgLen * 3) < availInternalFlashSize);
  if (!fitsOnSD && !fitsOnInternalFlash) {
    return INSTALL_FAILED_INSUFFICIENT_STORAGE;
  }
  if (pkgLen < (INSTALL_ON_SD_THRESHOLD) && fitsOnInternalFlash && !(installOnlyOnSD)) {
    if (pctNandFree < LOW_NAND_FLASH_TRESHOLD) {
      return INSTALL_ON_SDCARD;
    }
    return INSTALL_ON_INTERNAL_FLASH;
  }
 else {
    if (fitsOnSD) {
      return INSTALL_ON_SDCARD;
    }
 else     if (fitsOnInternalFlash && (pctNandFree >= LOW_NAND_FLASH_TRESHOLD) && !(installOnlyOnSD)) {
      return INSTALL_ON_INTERNAL_FLASH;
    }
 else {
      return INSTALL_FAILED_INSUFFICIENT_STORAGE;
    }
  }
}
