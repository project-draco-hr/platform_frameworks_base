{
  boolean returnValue;
  boolean hasListeners;
  List<String> keysModified=null;
  Set<OnSharedPreferenceChangeListener> listeners=null;
synchronized (SharedPreferencesImpl.this) {
    hasListeners=mListeners.size() > 0;
    if (hasListeners) {
      keysModified=new ArrayList<String>();
      listeners=new HashSet<OnSharedPreferenceChangeListener>(mListeners.keySet());
    }
synchronized (this) {
      if (mClear) {
        mMap.clear();
        mClear=false;
      }
      for (      Entry<String,Object> e : mModified.entrySet()) {
        String k=e.getKey();
        Object v=e.getValue();
        if (v == this) {
          mMap.remove(k);
        }
 else {
          mMap.put(k,v);
        }
        if (hasListeners) {
          keysModified.add(k);
        }
      }
      mModified.clear();
    }
    returnValue=writeFileLocked();
  }
  if (hasListeners) {
    for (int i=keysModified.size() - 1; i >= 0; i--) {
      final String key=keysModified.get(i);
      for (      OnSharedPreferenceChangeListener listener : listeners) {
        if (listener != null) {
          listener.onSharedPreferenceChanged(SharedPreferencesImpl.this,key);
        }
      }
    }
  }
  return returnValue;
}
