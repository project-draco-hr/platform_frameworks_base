{
  final String videoItemFileName1=INPUT_FILE_PATH + "H264_BP_1080x720_30fps_800kbps_1_17.mp4";
  final String audioFilename1=INPUT_FILE_PATH + "AACLC_44.1kHz_256kbps_s_1_17.mp4";
  final String audioFilename2=INPUT_FILE_PATH + "AMRNB_8KHz_12.2Kbps_m_1_17.3gp";
  final int renderingMode=MediaItem.RENDERING_MODE_BLACK_BORDER;
  final int audioVolume=50;
  final String[] loggingInfo=new String[4];
  System.gc();
  final Runtime runtimeObjStart=Runtime.getRuntime();
  final long javaMemStart=runtimeObjStart.totalMemory();
  final long nativeMemStart=Debug.getNativeHeapAllocatedSize();
  final MediaVideoItem mediaVideoItem=new MediaVideoItem(mVideoEditor,"mediaItem1",videoItemFileName1,renderingMode);
  mVideoEditor.addMediaItem(mediaVideoItem);
  final AudioTrack audioTrack1=new AudioTrack(mVideoEditor,"Audio Track1",audioFilename1);
  audioTrack1.disableDucking();
  audioTrack1.setVolume(audioVolume);
  mVideoEditor.addAudioTrack(audioTrack1);
  mVideoEditor.generatePreview(new MediaProcessingProgressListener(){
    public void onProgress(    Object item,    int action,    int progress){
    }
  }
);
  mVideoEditor.removeAudioTrack("Audio Track1");
  final AudioTrack audioTrack2=new AudioTrack(mVideoEditor,"Audio Track2",audioFilename2);
  audioTrack2.enableLoop();
  mVideoEditor.generatePreview(new MediaProcessingProgressListener(){
    public void onProgress(    Object item,    int action,    int progress){
    }
  }
);
  System.gc();
  Thread.sleep(2500);
  final Runtime runtimeObjEnd=Runtime.getRuntime();
  final long javaMemEnd=runtimeObjEnd.totalMemory();
  final long nativeMemEnd=Debug.getNativeHeapAllocatedSize();
  loggingInfo[0]="Java Memory at Start = " + javaMemStart + "\t\tJava Memory at End = "+ javaMemEnd+ "\t\tJava Memory (End - Start) = "+ (javaMemEnd - javaMemStart);
  loggingInfo[1]="Native Memory at Start = " + nativeMemStart + "\tNative Memory at End = "+ nativeMemEnd+ "\t\tNative Memory (End-Start) = "+ (nativeMemEnd - nativeMemStart);
  System.gc();
  final Runtime runtimeObjStart1=Runtime.getRuntime();
  final long javaMemStart1=runtimeObjStart.totalMemory();
  final long nativeMemStart1=Debug.getNativeHeapAllocatedSize();
  mVideoEditor.removeMediaItem("mediaItem1");
  System.gc();
  Thread.sleep(2500);
  final Runtime runtimeObjEnd1=Runtime.getRuntime();
  final long javaMemEnd1=runtimeObjEnd.totalMemory();
  final long nativeMemEnd1=Debug.getNativeHeapAllocatedSize();
  loggingInfo[2]="\nAfter removal:\nJava Memory at Start = " + javaMemStart1 + "\n\tJava Memory at End = "+ javaMemEnd1+ "\n\tJava Memory (End - Start) = "+ (javaMemEnd1 - javaMemStart1);
  loggingInfo[3]="Native Memory at Start = " + nativeMemStart1 + "\n\tNative Memory at End = "+ nativeMemEnd1+ "\n\tNative Memory (End-Start)= "+ (nativeMemEnd1 - nativeMemStart1);
  writeTimingInfo("testStressAudioTrackVideo",loggingInfo);
}
