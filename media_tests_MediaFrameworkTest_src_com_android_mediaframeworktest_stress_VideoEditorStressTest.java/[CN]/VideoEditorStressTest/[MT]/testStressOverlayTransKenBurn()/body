{
  final int renderingMode=MediaItem.RENDERING_MODE_BLACK_BORDER;
  final String VideoItemFileName1=INPUT_FILE_PATH + "H264_BP_640x480_30fps_256kbps_1_17.mp4";
  final String ImageItemFileName2=INPUT_FILE_PATH + "IMG_640x480.jpg";
  final String OverlayFile3=INPUT_FILE_PATH + "IMG_640x480_Overlay1.png";
  final String audioFilename4=INPUT_FILE_PATH + "AACLC_44.1kHz_256kbps_s_1_17.mp4";
  final String[] loggingInfo=new String[4];
  System.gc();
  final Runtime runtimeObjStart=Runtime.getRuntime();
  final long javaMemStart=runtimeObjStart.totalMemory();
  final long nativeMemStart=Debug.getNativeHeapAllocatedSize();
  for (int i=0; i < 10; i++) {
    final MediaVideoItem mediaItem1=new MediaVideoItem(mVideoEditor,"m1" + i,VideoItemFileName1,renderingMode);
    mVideoEditor.addMediaItem(mediaItem1);
    mediaItem1.setExtractBoundaries(0,10000);
    final MediaImageItem mediaItem2=new MediaImageItem(mVideoEditor,"m2" + i,ImageItemFileName2,10000,renderingMode);
    mVideoEditor.addMediaItem(mediaItem2);
    final EffectColor effectColor1=mVideoEditorHelper.createEffectItem(mediaItem1,"effect1" + i,(mediaItem1.getDuration() - 4000),4000,EffectColor.TYPE_SEPIA,0);
    mediaItem1.addEffect(effectColor1);
    final TransitionCrossfade tranCrossfade=new TransitionCrossfade("transCF" + i,mediaItem1,mediaItem2,4000,Transition.BEHAVIOR_MIDDLE_FAST);
    mVideoEditor.addTransition(tranCrossfade);
    final Bitmap mBitmap=mVideoEditorHelper.getBitmap(OverlayFile3,640,480);
    final OverlayFrame overlayFrame=mVideoEditorHelper.createOverlay(mediaItem1,"overlay" + i,mBitmap,1000,5000);
    mediaItem1.addOverlay(overlayFrame);
    final Rect startRect=new Rect((mediaItem2.getHeight() / 3),(mediaItem2.getWidth() / 3),(mediaItem2.getHeight() / 2),(mediaItem2.getWidth() / 2));
    final Rect endRect=new Rect(0,0,mediaItem2.getWidth(),mediaItem2.getHeight());
    final EffectKenBurns kbEffectOnMediaItem=new EffectKenBurns(mediaItem2,"KBOnM2" + i,startRect,endRect,500,(mediaItem2.getDuration() - 500));
    mediaItem2.addEffect(kbEffectOnMediaItem);
    if (i == 5) {
      final AudioTrack audioTrack1=new AudioTrack(mVideoEditor,"Audio Track1",audioFilename4);
      mVideoEditor.addAudioTrack(audioTrack1);
    }
  }
  System.gc();
  Thread.sleep(2500);
  final Runtime runtimeObjEnd=Runtime.getRuntime();
  final long javaMemEnd=runtimeObjEnd.totalMemory();
  final long nativeMemEnd=Debug.getNativeHeapAllocatedSize();
  loggingInfo[0]="Java Memory at Start = " + javaMemStart + "\n\tJava Memory at End = "+ javaMemEnd+ "\n\tJava Memory (End - Start) = "+ (javaMemEnd - javaMemStart);
  loggingInfo[1]="Native Memory at Start = " + nativeMemStart + "\n\tNative Memory at End = "+ nativeMemEnd+ "\n\tNative Memory (End-Start)= "+ (nativeMemEnd - nativeMemStart);
  System.gc();
  final Runtime runtimeObjStart1=Runtime.getRuntime();
  final long javaMemStart1=runtimeObjStart.totalMemory();
  final long nativeMemStart1=Debug.getNativeHeapAllocatedSize();
  for (int i=0; i < 10; i++) {
    MediaImageItem m2=(MediaImageItem)mVideoEditor.getMediaItem("m2" + i);
    MediaVideoItem m1=(MediaVideoItem)mVideoEditor.getMediaItem("m1" + i);
    m2.removeEffect("KBOnM2" + i);
    m1.removeOverlay("overlay" + i);
    mVideoEditor.removeTransition("transCF" + i);
    m1.removeEffect("effect1" + i);
    mVideoEditor.removeMediaItem("m2" + i);
    mVideoEditor.removeMediaItem("m1" + i);
    if (i == 5) {
      mVideoEditor.removeAudioTrack("Audio Track1");
    }
  }
  System.gc();
  Thread.sleep(2500);
  final Runtime runtimeObjEnd1=Runtime.getRuntime();
  final long javaMemEnd1=runtimeObjEnd.totalMemory();
  final long nativeMemEnd1=Debug.getNativeHeapAllocatedSize();
  loggingInfo[2]="\nAfter removal:\nJava Memory at Start = " + javaMemStart1 + "\n\tJava Memory at End = "+ javaMemEnd1+ "\n\tJava Memory (End - Start) = "+ (javaMemEnd1 - javaMemStart1);
  loggingInfo[3]="Native Memory at Start = " + nativeMemStart1 + "\n\tNative Memory at End = "+ nativeMemEnd1+ "\n\tNative Memory (End-Start)= "+ (nativeMemEnd1 - nativeMemStart1);
  writeTimingInfo("testStressOverlayTransKenBurn",loggingInfo);
}
