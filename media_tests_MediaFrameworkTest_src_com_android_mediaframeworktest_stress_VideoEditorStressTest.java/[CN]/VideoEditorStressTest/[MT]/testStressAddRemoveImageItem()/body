{
  final int renderingMode=MediaItem.RENDERING_MODE_BLACK_BORDER;
  final String ImageItemFileName1=INPUT_FILE_PATH + "IMG_1600x1200.jpg";
  final String ImageItemFileName2=INPUT_FILE_PATH + "IMG_640x480.jpg";
  final String ImageItemFileName3=INPUT_FILE_PATH + "IMG_320x240.jpg";
  final String ImageItemFileName4=INPUT_FILE_PATH + "IMG_176x144.jpg";
  final String[] loggingInfo=new String[4];
  System.gc();
  final Runtime runtimeObjStart=Runtime.getRuntime();
  final long javaMemStart=runtimeObjStart.totalMemory();
  final long nativeMemStart=Debug.getNativeHeapAllocatedSize();
  for (int i=0; i < 500; i++) {
    if (i % 4 == 0) {
      final MediaImageItem mediaItem1=new MediaImageItem(mVideoEditor,"m1" + i,ImageItemFileName1,5000,renderingMode);
      mVideoEditor.addMediaItem(mediaItem1);
    }
    if (i % 4 == 1) {
      final MediaImageItem mediaItem2=new MediaImageItem(mVideoEditor,"m2" + i,ImageItemFileName2,10000,renderingMode);
      mVideoEditor.addMediaItem(mediaItem2);
    }
    if (i % 4 == 2) {
      final MediaImageItem mediaItem3=new MediaImageItem(mVideoEditor,"m3" + i,ImageItemFileName3,15000,renderingMode);
      mVideoEditor.addMediaItem(mediaItem3);
    }
    if (i % 4 == 3) {
      final MediaImageItem mediaItem4=new MediaImageItem(mVideoEditor,"m4" + i,ImageItemFileName4,20000,renderingMode);
      mVideoEditor.addMediaItem(mediaItem4);
    }
  }
  System.gc();
  Thread.sleep(2500);
  final Runtime runtimeObjEnd=Runtime.getRuntime();
  final long javaMemEnd=runtimeObjEnd.totalMemory();
  final long nativeMemEnd=Debug.getNativeHeapAllocatedSize();
  loggingInfo[0]="Java Memory at Start = " + javaMemStart + "\n\tJava Memory at End = "+ javaMemEnd+ "\n\tJava Memory (End - Start) = "+ (javaMemEnd - javaMemStart);
  loggingInfo[1]="Native Memory at Start = " + nativeMemStart + "\n\tNative Memory at End = "+ nativeMemEnd+ "\n\tNative Memory (End-Start) = "+ (nativeMemEnd - nativeMemStart);
  System.gc();
  final Runtime runtimeObjStart1=Runtime.getRuntime();
  final long javaMemStart1=runtimeObjStart.totalMemory();
  final long nativeMemStart1=Debug.getNativeHeapAllocatedSize();
  for (int i=0; i < 500; i++) {
    if (i % 4 == 0) {
      mVideoEditor.removeMediaItem("m1" + i);
    }
    if (i % 4 == 1) {
      mVideoEditor.removeMediaItem("m2" + i);
    }
    if (i % 4 == 2) {
      mVideoEditor.removeMediaItem("m3" + i);
    }
    if (i % 4 == 3) {
      mVideoEditor.removeMediaItem("m4" + i);
    }
  }
  System.gc();
  Thread.sleep(2500);
  final Runtime runtimeObjEnd1=Runtime.getRuntime();
  final long javaMemEnd1=runtimeObjEnd.totalMemory();
  final long nativeMemEnd1=Debug.getNativeHeapAllocatedSize();
  loggingInfo[2]="\nAfter removal:\nJava Memory at Start = " + javaMemStart1 + "\n\tJava Memory at End = "+ javaMemEnd1+ "\n\tJava Memory (End - Start) = "+ (javaMemEnd1 - javaMemStart1);
  loggingInfo[3]="Native Memory at Start = " + nativeMemStart1 + "\n\tNative Memory at End = "+ nativeMemEnd1+ "\n\tNative Memory (End-Start) = "+ (nativeMemEnd1 - nativeMemStart1);
  writeTimingInfo("testStressAddRemoveImageItem",loggingInfo);
}
