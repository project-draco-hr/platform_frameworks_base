{
  try {
    String requestLine=getLine(connection.getInputStream());
    String[] splitLine=requestLine.split(" ");
    if (splitLine.length < 3) {
      connection.close();
      return;
    }
    String requestType=splitLine[0];
    String urlString=splitLine[1];
    String httpVersion=splitLine[2];
    URI url=null;
    String host;
    int port;
    if (requestType.equals(CONNECT)) {
      String[] hostPortSplit=urlString.split(":");
      host=hostPortSplit[0];
      if (hostPortSplit.length < 2) {
        port=443;
      }
 else {
        try {
          port=Integer.parseInt(hostPortSplit[1]);
        }
 catch (        NumberFormatException nfe) {
          connection.close();
          return;
        }
      }
      urlString="Https://" + host + ":"+ port;
    }
 else {
      try {
        url=new URI(urlString);
        host=url.getHost();
        port=url.getPort();
        if (port < 0) {
          port=80;
        }
      }
 catch (      URISyntaxException e) {
        connection.close();
        return;
      }
    }
    List<Proxy> list=Lists.newArrayList();
    try {
      list=ProxySelector.getDefault().select(new URI(urlString));
    }
 catch (    URISyntaxException e) {
      e.printStackTrace();
    }
    Socket server=null;
    for (    Proxy proxy : list) {
      try {
        if (!proxy.equals(Proxy.NO_PROXY)) {
          InetSocketAddress inetSocketAddress=(InetSocketAddress)proxy.address();
          server=new Socket(inetSocketAddress.getHostName(),inetSocketAddress.getPort());
          sendLine(server,requestLine);
        }
 else {
          server=new Socket(host,port);
          if (requestType.equals(CONNECT)) {
            skipToRequestBody(connection);
            sendLine(connection,HTTP_OK);
          }
 else {
            sendAugmentedRequestToHost(connection,server,requestType,url,httpVersion);
          }
        }
      }
 catch (      IOException ioe) {
        if (Log.isLoggable(TAG,Log.VERBOSE)) {
          Log.v(TAG,"Unable to connect to proxy " + proxy,ioe);
        }
      }
      if (server != null) {
        break;
      }
    }
    if (list.isEmpty()) {
      server=new Socket(host,port);
      if (requestType.equals(CONNECT)) {
        skipToRequestBody(connection);
        sendLine(connection,HTTP_OK);
      }
 else {
        sendAugmentedRequestToHost(connection,server,requestType,url,httpVersion);
      }
    }
    if (server != null) {
      SocketConnect.connect(connection,server);
    }
  }
 catch (  Exception e) {
    Log.d(TAG,"Problem Proxying",e);
  }
  try {
    connection.close();
  }
 catch (  IOException ioe) {
  }
}
