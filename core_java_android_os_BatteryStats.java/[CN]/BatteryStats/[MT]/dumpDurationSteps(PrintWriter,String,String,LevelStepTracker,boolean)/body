{
  if (steps == null) {
    return false;
  }
  int count=steps.mNumStepDurations;
  if (count <= 0) {
    return false;
  }
  if (!checkin) {
    pw.println(header);
  }
  String[] lineArgs=new String[4];
  for (int i=0; i < count; i++) {
    long duration=steps.getDurationAt(i);
    int level=steps.getLevelAt(i);
    long initMode=steps.getInitModeAt(i);
    long modMode=steps.getModModeAt(i);
    if (checkin) {
      lineArgs[0]=Long.toString(duration);
      lineArgs[1]=Integer.toString(level);
      if ((modMode & STEP_LEVEL_MODE_SCREEN_STATE) == 0) {
switch ((int)(initMode & STEP_LEVEL_MODE_SCREEN_STATE) + 1) {
case Display.STATE_OFF:
          lineArgs[2]="s-";
        break;
case Display.STATE_ON:
      lineArgs[2]="s+";
    break;
case Display.STATE_DOZE:
  lineArgs[2]="sd";
break;
case Display.STATE_DOZE_SUSPEND:
lineArgs[2]="sds";
break;
default :
lineArgs[1]="?";
break;
}
}
 else {
lineArgs[2]="";
}
if ((modMode & STEP_LEVEL_MODE_POWER_SAVE) == 0) {
lineArgs[3]=(initMode & STEP_LEVEL_MODE_POWER_SAVE) != 0 ? "p+" : "p-";
}
 else {
lineArgs[3]="";
}
dumpLine(pw,0,"i",header,(Object[])lineArgs);
}
 else {
pw.print(prefix);
pw.print("#");
pw.print(i);
pw.print(": ");
TimeUtils.formatDuration(duration,pw);
pw.print(" to ");
pw.print(level);
boolean haveModes=false;
if ((modMode & STEP_LEVEL_MODE_SCREEN_STATE) == 0) {
pw.print(" (");
switch ((int)(initMode & STEP_LEVEL_MODE_SCREEN_STATE) + 1) {
case Display.STATE_OFF:
pw.print("screen-off");
break;
case Display.STATE_ON:
pw.print("screen-on");
break;
case Display.STATE_DOZE:
pw.print("screen-doze");
break;
case Display.STATE_DOZE_SUSPEND:
pw.print("screen-doze-suspend");
break;
default :
lineArgs[1]="screen-?";
break;
}
haveModes=true;
}
if ((modMode & STEP_LEVEL_MODE_POWER_SAVE) == 0) {
pw.print(haveModes ? ", " : " (");
pw.print((initMode & STEP_LEVEL_MODE_POWER_SAVE) != 0 ? "power-save-on" : "power-save-off");
haveModes=true;
}
if (haveModes) {
pw.print(")");
}
pw.println();
}
}
return true;
}
