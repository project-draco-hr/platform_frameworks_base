{
  for (; ; ) {
    String eventStr=mWifiNative.waitForEvent();
    if (DBG && eventStr.indexOf(SCAN_RESULTS_STR) == -1) {
      Log.d(TAG,"Event [" + eventStr + "]");
    }
    String iface="p2p0";
    WifiMonitor m=null;
    mStateMachine=null;
    if (eventStr.startsWith("IFNAME=")) {
      int space=eventStr.indexOf(' ');
      if (space != -1) {
        iface=eventStr.substring(7,space);
        m=mWifiMonitorSingleton.getMonitor(iface);
        if (m == null && iface.startsWith("p2p-")) {
          m=mWifiMonitorSingleton.getMonitor("p2p0");
        }
        eventStr=eventStr.substring(space + 1);
      }
    }
 else {
      m=mWifiMonitorSingleton.getMonitor("p2p0");
    }
    if (m != null) {
      if (m.mMonitoring) {
        mStateMachine=m.mWifiStateMachine;
      }
 else {
        if (DBG)         Log.d(TAG,"Dropping event because monitor (" + iface + ") is stopped");
        continue;
      }
    }
    if (mStateMachine != null) {
      if (dispatchEvent(eventStr)) {
        break;
      }
    }
 else {
      if (DBG)       Log.d(TAG,"Sending to all monitors because there's no interface id");
      boolean done=false;
      Iterator<Map.Entry<String,WifiMonitor>> it=mWifiMonitorSingleton.mIfaceMap.entrySet().iterator();
      while (it.hasNext()) {
        Map.Entry<String,WifiMonitor> e=it.next();
        m=e.getValue();
        mStateMachine=m.mWifiStateMachine;
        if (dispatchEvent(eventStr)) {
          done=true;
        }
      }
      if (done) {
        if (DBG)         Log.d(TAG,"Disconnecting from the supplicant, no more events");
        mWifiMonitorSingleton.mConnected=false;
        break;
      }
    }
  }
}
