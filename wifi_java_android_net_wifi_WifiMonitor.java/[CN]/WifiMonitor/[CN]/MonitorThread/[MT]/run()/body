{
  if (connectToSupplicant()) {
    mStateMachine.sendMessage(SUP_CONNECTION_EVENT);
  }
 else {
    mStateMachine.sendMessage(SUP_DISCONNECTION_EVENT);
    return;
  }
  for (; ; ) {
    String eventStr=mWifiNative.waitForEvent();
    if (false && eventStr.indexOf(SCAN_RESULTS_STR) == -1) {
      Log.d(TAG,"Event [" + eventStr + "]");
    }
    if (!eventStr.startsWith(EVENT_PREFIX_STR)) {
      if (eventStr.startsWith(WPA_EVENT_PREFIX_STR) && 0 < eventStr.indexOf(PASSWORD_MAY_BE_INCORRECT_STR)) {
        mStateMachine.sendMessage(AUTHENTICATION_FAILURE_EVENT);
      }
 else       if (eventStr.startsWith(WPS_OVERLAP_STR)) {
        mStateMachine.sendMessage(WPS_OVERLAP_EVENT);
      }
 else       if (eventStr.startsWith(P2P_EVENT_PREFIX_STR)) {
        handleP2pEvents(eventStr);
      }
 else       if (eventStr.startsWith(HOST_AP_EVENT_PREFIX_STR)) {
        handleHostApEvents(eventStr);
      }
      continue;
    }
    String eventName=eventStr.substring(EVENT_PREFIX_LEN_STR);
    int nameEnd=eventName.indexOf(' ');
    if (nameEnd != -1)     eventName=eventName.substring(0,nameEnd);
    if (eventName.length() == 0) {
      if (false)       Log.i(TAG,"Received wpa_supplicant event with empty event name");
      continue;
    }
    int event;
    if (eventName.equals(CONNECTED_STR))     event=CONNECTED;
 else     if (eventName.equals(DISCONNECTED_STR))     event=DISCONNECTED;
 else     if (eventName.equals(STATE_CHANGE_STR))     event=STATE_CHANGE;
 else     if (eventName.equals(SCAN_RESULTS_STR))     event=SCAN_RESULTS;
 else     if (eventName.equals(LINK_SPEED_STR))     event=LINK_SPEED;
 else     if (eventName.equals(TERMINATING_STR))     event=TERMINATING;
 else     if (eventName.equals(DRIVER_STATE_STR))     event=DRIVER_STATE;
 else     if (eventName.equals(EAP_FAILURE_STR))     event=EAP_FAILURE;
 else     event=UNKNOWN;
    String eventData=eventStr;
    if (event == DRIVER_STATE || event == LINK_SPEED)     eventData=eventData.split(" ")[1];
 else     if (event == STATE_CHANGE || event == EAP_FAILURE) {
      int ind=eventStr.indexOf(" ");
      if (ind != -1) {
        eventData=eventStr.substring(ind + 1);
      }
    }
 else {
      int ind=eventStr.indexOf(" - ");
      if (ind != -1) {
        eventData=eventStr.substring(ind + 3);
      }
    }
    if (event == STATE_CHANGE) {
      handleSupplicantStateChange(eventData);
    }
 else     if (event == DRIVER_STATE) {
      handleDriverEvent(eventData);
    }
 else     if (event == TERMINATING) {
      if (eventData.startsWith(WPA_RECV_ERROR_STR)) {
        if (++mRecvErrors > MAX_RECV_ERRORS) {
          if (false) {
            Log.d(TAG,"too many recv errors, closing connection");
          }
        }
 else {
          continue;
        }
      }
      mStateMachine.sendMessage(SUP_DISCONNECTION_EVENT);
      break;
    }
 else     if (event == EAP_FAILURE) {
      if (eventData.startsWith(EAP_AUTH_FAILURE_STR)) {
        mStateMachine.sendMessage(AUTHENTICATION_FAILURE_EVENT);
      }
    }
 else {
      handleEvent(event,eventData);
    }
    mRecvErrors=0;
  }
}
