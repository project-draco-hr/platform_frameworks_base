{
  if (connectToSupplicant()) {
    mWifiStateTracker.notifySupplicantConnection();
  }
 else {
    mWifiStateTracker.notifySupplicantLost();
    return;
  }
  for (; ; ) {
    String eventStr=WifiNative.waitForEvent();
    if (Config.LOGD && eventStr.indexOf(scanResultsEvent) == -1) {
      Log.v(TAG,"Event [" + eventStr + "]");
    }
    if (!eventStr.startsWith(eventPrefix)) {
      if (eventStr.startsWith(wpaEventPrefix) && 0 < eventStr.indexOf(passwordKeyMayBeIncorrectEvent)) {
        handlePasswordKeyMayBeIncorrect();
      }
      continue;
    }
    String eventName=eventStr.substring(eventPrefixLen);
    int nameEnd=eventName.indexOf(' ');
    if (nameEnd != -1)     eventName=eventName.substring(0,nameEnd);
    if (eventName.length() == 0) {
      if (Config.LOGD)       Log.i(TAG,"Received wpa_supplicant event with empty event name");
      continue;
    }
    int event;
    if (eventName.equals(connectedEvent))     event=CONNECTED;
 else     if (eventName.equals(disconnectedEvent))     event=DISCONNECTED;
 else     if (eventName.equals(stateChangeEvent))     event=STATE_CHANGE;
 else     if (eventName.equals(scanResultsEvent))     event=SCAN_RESULTS;
 else     if (eventName.equals(linkSpeedEvent))     event=LINK_SPEED;
 else     if (eventName.equals(terminatingEvent))     event=TERMINATING;
 else     if (eventName.equals(driverStateEvent)) {
      event=DRIVER_STATE;
    }
 else     event=UNKNOWN;
    String eventData=eventStr;
    if (event == DRIVER_STATE || event == LINK_SPEED)     eventData=eventData.split(" ")[1];
 else     if (event == STATE_CHANGE) {
      int ind=eventStr.indexOf(" ");
      if (ind != -1) {
        eventData=eventStr.substring(ind + 1);
      }
    }
 else {
      int ind=eventStr.indexOf(" - ");
      if (ind != -1) {
        eventData=eventStr.substring(ind + 3);
      }
    }
    if (event == STATE_CHANGE) {
      handleSupplicantStateChange(eventData);
    }
 else     if (event == DRIVER_STATE) {
      handleDriverEvent(eventData);
    }
 else     if (event == TERMINATING) {
      if (eventData.startsWith(monitorSocketClosed)) {
        if (Config.LOGD) {
          Log.d(TAG,"Monitor socket is closed, exiting thread");
        }
        break;
      }
      if (eventData.startsWith(wpaRecvError)) {
        if (++mRecvErrors > MAX_RECV_ERRORS) {
          if (Config.LOGD) {
            Log.d(TAG,"too many recv errors, closing connection");
          }
        }
 else {
          continue;
        }
      }
      mWifiStateTracker.notifySupplicantLost();
      break;
    }
 else {
      handleEvent(event,eventData);
    }
    mRecvErrors=0;
  }
}
