{
  if (mViewTransformationAnimation != null) {
    mViewTransformationAnimation.cancel();
  }
  mViewTransformationAnimation=ValueAnimator.ofFloat(0.0f,1.0f);
  mViewTransformationAnimation.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){
    @Override public void onAnimationUpdate(    ValueAnimator animation){
      transformTo(notification,animation.getAnimatedFraction());
    }
  }
);
  mViewTransformationAnimation.setInterpolator(Interpolators.LINEAR);
  mViewTransformationAnimation.setDuration(StackStateAnimator.ANIMATION_DURATION_STANDARD);
  if (endRunnable != null) {
    mViewTransformationAnimation.addListener(new AnimatorListenerAdapter(){
      public boolean mCancelled;
      @Override public void onAnimationEnd(      Animator animation){
        endRunnable.run();
        if (!mCancelled) {
          setVisible(false);
        }
 else {
          abortTransformations();
        }
      }
      @Override public void onAnimationCancel(      Animator animation){
        mCancelled=true;
      }
    }
);
  }
  mViewTransformationAnimation.start();
}
