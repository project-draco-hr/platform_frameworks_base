{
  int numValues=mTransformedViews.size();
  for (int i=0; i < numValues; i++) {
    View view=mTransformedViews.valueAt(i);
    while (view != viewRoot.getParent()) {
      view.setTag(TAG_CONTAINS_TRANSFORMED_VIEW,true);
      view=(View)view.getParent();
    }
  }
  Stack<View> stack=new Stack<>();
  stack.push(viewRoot);
  while (!stack.isEmpty()) {
    View child=stack.pop();
    if (child.getVisibility() == View.GONE) {
      continue;
    }
    Boolean containsView=(Boolean)child.getTag(TAG_CONTAINS_TRANSFORMED_VIEW);
    if (containsView == null) {
      int id=child.getId();
      if (id != View.NO_ID) {
        addTransformedView(id,child);
        continue;
      }
    }
    child.setTag(TAG_CONTAINS_TRANSFORMED_VIEW,null);
    if (child instanceof ViewGroup && !mTransformedViews.containsValue(child)) {
      ViewGroup group=(ViewGroup)child;
      for (int i=0; i < group.getChildCount(); i++) {
        stack.push(group.getChildAt(i));
      }
    }
  }
}
