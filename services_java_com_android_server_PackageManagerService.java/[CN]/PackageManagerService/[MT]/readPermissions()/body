{
  File libraryDir=new File(Environment.getRootDirectory(),"etc/permissions");
  if (!libraryDir.exists() || !libraryDir.isDirectory()) {
    Slog.w(TAG,"No directory " + libraryDir + ", skipping");
    return;
  }
  if (!libraryDir.canRead()) {
    Slog.w(TAG,"Directory " + libraryDir + " cannot be read");
    return;
  }
  for (  File f : libraryDir.listFiles()) {
    if (f.getPath().endsWith("etc/permissions/platform.xml")) {
      continue;
    }
    if (!f.getPath().endsWith(".xml")) {
      Slog.i(TAG,"Non-xml file " + f + " in "+ libraryDir+ " directory, ignoring");
      continue;
    }
    if (!f.canRead()) {
      Slog.w(TAG,"Permissions library file " + f + " cannot be read");
      continue;
    }
    readPermissionsFromXml(f);
  }
  final File permFile=new File(Environment.getRootDirectory(),"etc/permissions/platform.xml");
  readPermissionsFromXml(permFile);
  StringBuilder sb=new StringBuilder(128);
  sb.append("Libs:");
  Iterator<String> it=mSharedLibraries.keySet().iterator();
  while (it.hasNext()) {
    sb.append(' ');
    String name=it.next();
    sb.append(name);
    sb.append(':');
    sb.append(mSharedLibraries.get(name));
  }
  Log.i(TAG,sb.toString());
  sb.setLength(0);
  sb.append("Features:");
  it=mAvailableFeatures.keySet().iterator();
  while (it.hasNext()) {
    sb.append(' ');
    sb.append(it.next());
  }
  Log.i(TAG,sb.toString());
}
