{
  boolean dataDirExists;
  if (useEncryptedFilesystemForPackage(pkg)) {
    dataDirExists=(new File(mSecureAppDataDir,pkgName)).exists();
  }
 else {
    dataDirExists=(new File(mAppDataDir,pkgName)).exists();
  }
  res.name=pkgName;
synchronized (mPackages) {
    if (mPackages.containsKey(pkgName) || mAppDirs.containsKey(destFilePath)) {
      Log.w(TAG,"Attempt to re-install " + pkgName + " without first uninstalling.");
      res.returnCode=PackageManager.INSTALL_FAILED_ALREADY_EXISTS;
      return;
    }
  }
  if (destPackageFile.exists()) {
    destPackageFile.delete();
  }
  mLastScanError=PackageManager.INSTALL_SUCCEEDED;
  PackageParser.Package newPackage=scanPackageLI(tmpPackageFile,destPackageFile,destResourceFile,pkg,0,SCAN_MONITOR | SCAN_FORCE_DEX | SCAN_UPDATE_SIGNATURE| (forwardLocked ? SCAN_FORWARD_LOCKED : 0)| (newInstall ? SCAN_NEW_INSTALL : 0));
  if (newPackage == null) {
    Log.w(TAG,"Package couldn't be installed in " + destPackageFile);
    if ((res.returnCode=mLastScanError) == PackageManager.INSTALL_SUCCEEDED) {
      res.returnCode=PackageManager.INSTALL_FAILED_INVALID_APK;
    }
  }
 else {
    updateSettingsLI(pkgName,tmpPackageFile,destFilePath,destPackageFile,destResourceFile,pkg,newPackage,true,forwardLocked,installerPackageName,res);
    if (res.returnCode != PackageManager.INSTALL_SUCCEEDED) {
      deletePackageLI(pkgName,true,dataDirExists ? PackageManager.DONT_DELETE_DATA : 0,res.removedInfo);
    }
  }
}
