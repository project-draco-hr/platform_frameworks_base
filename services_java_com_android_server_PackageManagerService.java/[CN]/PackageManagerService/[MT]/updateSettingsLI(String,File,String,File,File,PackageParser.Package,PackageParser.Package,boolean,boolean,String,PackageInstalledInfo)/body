{
synchronized (mPackages) {
    mSettings.setInstallStatus(pkgName,PKG_INSTALL_INCOMPLETE);
    mSettings.writeLP();
  }
  int retCode=0;
  if ((pkg.applicationInfo.flags & ApplicationInfo.FLAG_HAS_CODE) != 0) {
    retCode=mInstaller.movedex(tmpPackageFile.toString(),destPackageFile.toString());
    if (retCode != 0) {
      Log.e(TAG,"Couldn't rename dex file: " + destPackageFile);
      res.returnCode=PackageManager.INSTALL_FAILED_INSUFFICIENT_STORAGE;
      return;
    }
  }
  if (!tmpPackageFile.renameTo(destPackageFile)) {
    Log.e(TAG,"Couldn't move package file to: " + destPackageFile);
    res.returnCode=PackageManager.INSTALL_FAILED_INSUFFICIENT_STORAGE;
  }
 else {
    res.returnCode=setPermissionsLI(pkgName,newPackage,destFilePath,destResourceFile,forwardLocked);
    if (res.returnCode != PackageManager.INSTALL_SUCCEEDED) {
      return;
    }
 else {
      Log.d(TAG,"New package installed in " + destPackageFile);
    }
  }
  if (res.returnCode != PackageManager.INSTALL_SUCCEEDED) {
    if (mInstaller != null) {
      mInstaller.rmdex(tmpPackageFile.getPath());
    }
  }
synchronized (mPackages) {
    grantPermissionsLP(newPackage,true);
    res.name=pkgName;
    res.uid=newPackage.applicationInfo.uid;
    res.pkg=newPackage;
    mSettings.setInstallStatus(pkgName,PKG_INSTALL_COMPLETE);
    mSettings.setInstallerPackageName(pkgName,installerPackageName);
    res.returnCode=PackageManager.INSTALL_SUCCEEDED;
    mSettings.writeLP();
  }
}
