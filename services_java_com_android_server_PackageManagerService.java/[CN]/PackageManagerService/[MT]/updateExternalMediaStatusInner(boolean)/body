{
  final String list[]=getSecureContainerList();
  if (list == null || list.length == 0) {
    return;
  }
  HashMap<SdInstallArgs,String> processCids=new HashMap<SdInstallArgs,String>();
  int uidList[]=new int[list.length];
  int num=0;
  for (int i=0; i < uidList.length; i++) {
    uidList[i]=Process.LAST_APPLICATION_UID;
  }
synchronized (mPackages) {
    Set<String> appList=mSettings.findPackagesWithFlag(ApplicationInfo.FLAG_ON_SDCARD);
    for (    String cid : list) {
      SdInstallArgs args=new SdInstallArgs(cid);
      String removeEntry=null;
      for (      String app : appList) {
        if (args.matchContainer(app)) {
          removeEntry=app;
          break;
        }
      }
      if (removeEntry == null) {
        continue;
      }
      appList.remove(removeEntry);
      PackageSetting ps=mSettings.mPackages.get(removeEntry);
      processCids.put(args,ps.codePathString);
      int uid=ps.userId;
      if (uid != -1) {
        int idx=Arrays.binarySearch(uidList,uid);
        if (idx < 0) {
          uidList[-idx]=uid;
          num++;
        }
      }
    }
  }
  int uidArr[]=uidList;
  if ((num > 0) && (num < uidList.length)) {
    uidArr=new int[num];
    for (int i=0; i < num; i++) {
      uidArr[i]=uidList[i];
    }
  }
  if (mediaStatus) {
    loadMediaPackages(processCids,uidArr);
  }
 else {
    unloadMediaPackages(processCids,uidArr);
  }
}
