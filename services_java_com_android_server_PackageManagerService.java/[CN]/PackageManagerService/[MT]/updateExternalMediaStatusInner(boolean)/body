{
  final String list[]=getSecureContainerList();
  if (list == null || list.length == 0) {
    return;
  }
  HashMap<SdInstallArgs,String> processCids=new HashMap<SdInstallArgs,String>();
  int uidList[]=new int[list.length];
  int num=0;
synchronized (mPackages) {
    Set<String> appList=mSettings.findPackagesWithFlag(ApplicationInfo.FLAG_ON_SDCARD);
    for (    String cid : list) {
      SdInstallArgs args=new SdInstallArgs(cid);
      String removeEntry=null;
      for (      String app : appList) {
        if (args.matchContainer(app)) {
          removeEntry=app;
          break;
        }
      }
      if (removeEntry == null) {
        continue;
      }
      appList.remove(removeEntry);
      PackageSetting ps=mSettings.mPackages.get(removeEntry);
      processCids.put(args,ps.codePathString);
      int uid=ps.userId;
      if (uid != -1) {
        uidList[num++]=uid;
      }
    }
  }
  int uidArr[]=null;
  if (num > 0) {
    Arrays.sort(uidList,0,num);
    uidArr=new int[num];
    uidArr[0]=uidList[0];
    int di=0;
    for (int i=1; i < num; i++) {
      if (uidList[i - 1] != uidList[i]) {
        uidArr[di++]=uidList[i];
      }
    }
    if (true) {
      for (int j=0; j < num; j++) {
        Log.i(TAG,"uidArr[" + j + "]="+ uidArr[j]);
      }
    }
  }
  if (mediaStatus) {
    if (DEBUG_SD_INSTALL)     Log.i(TAG,"Loading packages");
    loadMediaPackages(processCids,uidArr);
  }
 else {
    if (DEBUG_SD_INSTALL)     Log.i(TAG,"Unloading packages");
    unloadMediaPackages(processCids,uidArr);
  }
}
