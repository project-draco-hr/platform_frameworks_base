{
  if (mediaStatus == mMediaMounted) {
    return;
  }
  mMediaMounted=mediaStatus;
  mHandler.post(new Runnable(){
    public void run(){
      mHandler.removeCallbacks(this);
      final String list[]=getSecureContainerList();
      if (list == null || list.length == 0) {
        return;
      }
      for (int i=0; i < list.length; i++) {
        String mountPkg=list[i];
synchronized (mPackages) {
          PackageSetting ps=mSettings.mPackages.get(mountPkg);
          if (ps != null && (ps.pkgFlags & ApplicationInfo.FLAG_ON_SDCARD) != 0) {
            if (mediaStatus) {
              String pkgPath=getSdDir(mountPkg);
              if (pkgPath == null) {
                continue;
              }
              pkgPath=ps.codePathString;
              int parseFlags=PackageParser.PARSE_CHATTY | PackageParser.PARSE_ON_SDCARD | mDefParseFlags;
              PackageParser pp=new PackageParser(pkgPath);
              pp.setSeparateProcesses(mSeparateProcesses);
              final PackageParser.Package pkg=pp.parsePackage(new File(pkgPath),null,mMetrics,parseFlags);
              if (pkg == null) {
                Log.w(TAG,"Failed to install package : " + mountPkg + " from sd card");
                continue;
              }
              int scanMode=SCAN_MONITOR;
              if (scanPackageLI(pkg,parseFlags,scanMode) != null) {
                grantPermissionsLP(pkg,false);
                mSettings.writeLP();
              }
 else {
                Log.i(TAG,"Failed to install package: " + mountPkg + " from sdcard");
              }
            }
 else {
              PackageRemovedInfo outInfo=new PackageRemovedInfo();
              boolean res=deletePackageLI(mountPkg,false,PackageManager.DONT_DELETE_DATA,outInfo);
              if (!res) {
                Log.e(TAG,"Failed to delete pkg  from sdcard : " + mountPkg);
              }
            }
          }
        }
      }
    }
  }
);
}
