{
  PackageParser.Package newPackage=null;
  boolean updatedSettings=false;
  int parseFlags=PackageManager.INSTALL_REPLACE_EXISTING | PackageParser.PARSE_IS_SYSTEM;
  String packageName=deletedPackage.packageName;
  res.returnCode=PackageManager.INSTALL_FAILED_REPLACE_COULDNT_DELETE;
  if (packageName == null) {
    Log.w(TAG,"Attempt to delete null packageName.");
    return;
  }
  PackageParser.Package oldPkg;
  PackageSetting oldPkgSetting;
synchronized (mPackages) {
    oldPkg=mPackages.get(packageName);
    oldPkgSetting=mSettings.mPackages.get(packageName);
    if ((oldPkg == null) || (oldPkg.applicationInfo == null) || (oldPkgSetting == null)) {
      Log.w(TAG,"Could'nt find package:" + packageName + " information");
      return;
    }
  }
  res.removedInfo.uid=oldPkg.applicationInfo.uid;
  res.removedInfo.removedPackage=packageName;
  removePackageLI(oldPkg,true);
synchronized (mPackages) {
    res.removedInfo.removedUid=mSettings.disableSystemPackageLP(packageName);
  }
  mLastScanError=PackageManager.INSTALL_SUCCEEDED;
  pkg.applicationInfo.flags|=ApplicationInfo.FLAG_UPDATED_SYSTEM_APP;
  newPackage=scanPackageLI(tmpPackageFile,destPackageFile,destResourceFile,pkg,parseFlags,SCAN_MONITOR | SCAN_FORCE_DEX | SCAN_UPDATE_SIGNATURE| (forwardLocked ? SCAN_FORWARD_LOCKED : 0)| (newInstall ? SCAN_NEW_INSTALL : 0));
  if (newPackage == null) {
    Log.w(TAG,"Package couldn't be installed in " + destPackageFile);
    if ((res.returnCode=mLastScanError) == PackageManager.INSTALL_SUCCEEDED) {
      res.returnCode=PackageManager.INSTALL_FAILED_INVALID_APK;
    }
  }
 else {
    updateSettingsLI(packageName,tmpPackageFile,destFilePath,destPackageFile,destResourceFile,pkg,newPackage,true,forwardLocked,installerPackageName,res);
    updatedSettings=true;
  }
  if (res.returnCode == PackageManager.INSTALL_SUCCEEDED) {
synchronized (mPackages) {
      verifySignaturesLP(mSettings.mPackages.get(packageName),pkg,parseFlags,true);
    }
  }
 else {
    removePackageLI(newPackage,true);
    scanPackageLI(oldPkgSetting.codePath,oldPkgSetting.codePath,oldPkgSetting.resourcePath,oldPkg,parseFlags,SCAN_MONITOR | SCAN_UPDATE_SIGNATURE);
synchronized (mPackages) {
      if (updatedSettings) {
        mSettings.enableSystemPackageLP(packageName);
        mSettings.setInstallerPackageName(packageName,oldPkgSetting.installerPackageName);
      }
      mSettings.writeLP();
    }
  }
}
