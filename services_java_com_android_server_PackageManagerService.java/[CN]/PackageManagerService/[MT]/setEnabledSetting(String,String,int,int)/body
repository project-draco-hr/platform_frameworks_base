{
  if (!(newState == COMPONENT_ENABLED_STATE_DEFAULT || newState == COMPONENT_ENABLED_STATE_ENABLED || newState == COMPONENT_ENABLED_STATE_DISABLED)) {
    throw new IllegalArgumentException("Invalid new component state: " + newState);
  }
  PackageSetting pkgSetting;
  final int uid=Binder.getCallingUid();
  final int permission=mContext.checkCallingPermission(android.Manifest.permission.CHANGE_COMPONENT_ENABLED_STATE);
  final boolean allowedByPermission=(permission == PackageManager.PERMISSION_GRANTED);
  boolean sendNow=false;
  boolean isApp=(className == null);
  String key=isApp ? packageName : className;
  int packageUid=-1;
synchronized (mPackages) {
    pkgSetting=mSettings.mPackages.get(packageName);
    if (pkgSetting == null) {
      if (className == null) {
        throw new IllegalArgumentException("Unknown package: " + packageName);
      }
      throw new IllegalArgumentException("Unknown component: " + packageName + "/"+ className);
    }
    if (!allowedByPermission && (uid != pkgSetting.userId)) {
      throw new SecurityException("Permission Denial: attempt to change component state from pid=" + Binder.getCallingPid() + ", uid="+ uid+ ", package uid="+ pkgSetting.userId);
    }
    if (className == null) {
      pkgSetting.enabled=newState;
    }
 else {
switch (newState) {
case COMPONENT_ENABLED_STATE_ENABLED:
        pkgSetting.enableComponentLP(className);
      break;
case COMPONENT_ENABLED_STATE_DISABLED:
    pkgSetting.disableComponentLP(className);
  break;
case COMPONENT_ENABLED_STATE_DEFAULT:
pkgSetting.restoreComponentLP(className);
break;
default :
Log.e(TAG,"Invalid new component state: " + newState);
return;
}
}
mSettings.writeLP();
packageUid=pkgSetting.userId;
if ((flags & PackageManager.DONT_KILL_APP) == 0) {
sendNow=true;
if (mPendingBroadcasts.get(key) != null) {
mPendingBroadcasts.remove(key);
}
}
 else {
if (mPendingBroadcasts.get(key) == null) {
mPendingBroadcasts.put(key,packageName);
}
if (!mHandler.hasMessages(SEND_PENDING_BROADCAST)) {
mHandler.sendEmptyMessageDelayed(SEND_PENDING_BROADCAST,BROADCAST_DELAY);
}
}
}
long callingId=Binder.clearCallingIdentity();
try {
if (sendNow) {
sendPackageChangedBroadcast(packageName,(flags & PackageManager.DONT_KILL_APP) != 0,key,packageUid);
}
}
  finally {
Binder.restoreCallingIdentity(callingId);
}
}
