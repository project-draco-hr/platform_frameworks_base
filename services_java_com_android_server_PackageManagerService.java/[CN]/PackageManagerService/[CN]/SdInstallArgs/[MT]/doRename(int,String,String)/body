{
  String newCacheId=getNextCodePath(oldCodePath,pkgName,"/" + RES_FILE_NAME);
  String newCachePath=null;
  boolean enableRename=false;
  if (enableRename) {
    if (PackageHelper.isContainerMounted(cid)) {
      if (!PackageHelper.unMountSdDir(cid)) {
        Log.i(TAG,"Failed to unmount " + cid + " before renaming");
        return false;
      }
    }
    if (!PackageHelper.renameSdDir(cid,newCacheId)) {
      Log.e(TAG,"Failed to rename " + cid + " to "+ newCacheId);
      return false;
    }
    if (!PackageHelper.isContainerMounted(newCacheId)) {
      Log.w(TAG,"Mounting container " + newCacheId);
      newCachePath=PackageHelper.mountSdDir(newCacheId,getEncryptKey(),Process.SYSTEM_UID);
    }
 else {
      newCachePath=PackageHelper.getSdDir(newCacheId);
    }
    if (newCachePath == null) {
      Log.w(TAG,"Failed to get cache path for  " + newCacheId);
      return false;
    }
    Log.i(TAG,"Succesfully renamed " + cid + " at path: "+ cachePath+ " to "+ newCacheId+ " at new path: "+ newCachePath);
    cid=newCacheId;
    cachePath=newCachePath;
    return true;
  }
 else {
    Log.i(TAG,"Copying instead of renaming");
    File srcFile=new File(getCodePath());
    newCachePath=PackageHelper.createSdDir(srcFile,newCacheId,getEncryptKey(),Process.SYSTEM_UID);
    Log.i(TAG,"Created rename container " + newCacheId);
    File destFile=new File(newCachePath + "/" + RES_FILE_NAME);
    if (!FileUtils.copyFile(srcFile,destFile)) {
      Log.e(TAG,"Failed to copy " + srcFile + " to "+ destFile);
      return false;
    }
    Log.i(TAG,"Successfully copied resource to " + newCachePath);
    if (!PackageHelper.finalizeSdDir(newCacheId)) {
      Log.e(TAG,"Failed to finalize " + newCacheId);
      PackageHelper.destroySdDir(newCacheId);
      return false;
    }
    Log.i(TAG,"Finalized " + newCacheId);
    Runtime.getRuntime().gc();
    PackageHelper.unMountSdDir(cid);
    PackageHelper.destroySdDir(cid);
    cid=newCacheId;
    cachePath=newCachePath;
    return true;
  }
}
