{
  String newCacheId=getNextCodePath(oldCodePath,pkgName,"/" + RES_FILE_NAME);
  String newCachePath=null;
  if (PackageHelper.isContainerMounted(cid)) {
    if (!PackageHelper.unMountSdDir(cid)) {
      Slog.i(TAG,"Failed to unmount " + cid + " before renaming");
      return false;
    }
  }
  if (!PackageHelper.renameSdDir(cid,newCacheId)) {
    Slog.e(TAG,"Failed to rename " + cid + " to "+ newCacheId+ " which might be stale. Will try to clean up.");
    if (!PackageHelper.destroySdDir(newCacheId)) {
      Slog.e(TAG,"Very strange. Cannot clean up stale container " + newCacheId);
      return false;
    }
    if (!PackageHelper.renameSdDir(cid,newCacheId)) {
      Slog.e(TAG,"Failed to rename " + cid + " to "+ newCacheId+ " inspite of cleaning it up.");
      return false;
    }
  }
  if (!PackageHelper.isContainerMounted(newCacheId)) {
    Slog.w(TAG,"Mounting container " + newCacheId);
    newCachePath=PackageHelper.mountSdDir(newCacheId,getEncryptKey(),Process.SYSTEM_UID);
  }
 else {
    newCachePath=PackageHelper.getSdDir(newCacheId);
  }
  if (newCachePath == null) {
    Slog.w(TAG,"Failed to get cache path for  " + newCacheId);
    return false;
  }
  Log.i(TAG,"Succesfully renamed " + cid + " at path: "+ cachePath+ " to "+ newCacheId+ " at new path: "+ newCachePath);
  cid=newCacheId;
  cachePath=newCachePath;
  return true;
}
