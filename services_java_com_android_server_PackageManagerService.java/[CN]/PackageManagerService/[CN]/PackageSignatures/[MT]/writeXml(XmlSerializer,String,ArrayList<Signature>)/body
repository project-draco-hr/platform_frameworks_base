{
  if (mSignatures == null) {
    return;
  }
  serializer.startTag(null,tagName);
  serializer.attribute(null,"count",Integer.toString(mSignatures.length));
  for (int i=0; i < mSignatures.length; i++) {
    serializer.startTag(null,"cert");
    final Signature sig=mSignatures[i];
    final int sigHash=sig.hashCode();
    final int numPast=pastSignatures.size();
    int j;
    for (j=0; j < numPast; j++) {
      Signature pastSig=pastSignatures.get(j);
      if (pastSig.hashCode() == sigHash && pastSig.equals(sig)) {
        serializer.attribute(null,"index",Integer.toString(j));
        break;
      }
    }
    if (j >= numPast) {
      pastSignatures.add(sig);
      serializer.attribute(null,"index",Integer.toString(numPast));
      serializer.attribute(null,"key",sig.toCharsString());
    }
    serializer.endTag(null,"cert");
  }
  serializer.endTag(null,tagName);
}
