{
  if (mSignatures == null) {
    if (update) {
      assignSignatures(sigs);
    }
    return true;
  }
  if (sigs == null) {
    return false;
  }
  Signature[] added=null;
  int addedCount=0;
  boolean haveMatch=false;
  for (int i=0; i < sigs.length; i++) {
    Signature sig=sigs[i];
    boolean found=false;
    for (int j=0; j < mSignatures.length; j++) {
      if (mSignatures[j].equals(sig)) {
        found=true;
        haveMatch=true;
        break;
      }
    }
    if (!found) {
      if (added == null) {
        added=new Signature[sigs.length];
      }
      added[i]=sig;
      addedCount++;
    }
  }
  if (!haveMatch) {
    return false;
  }
  if (added == null) {
    return true;
  }
  if (update) {
    Signature[] total=new Signature[addedCount + mSignatures.length];
    System.arraycopy(mSignatures,0,total,0,mSignatures.length);
    int j=mSignatures.length;
    for (int i=0; i < added.length; i++) {
      if (added[i] != null) {
        total[j]=added[i];
        j++;
      }
    }
    mSignatures=total;
  }
  return true;
}
