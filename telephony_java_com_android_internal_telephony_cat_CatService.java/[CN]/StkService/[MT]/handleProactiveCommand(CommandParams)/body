{
  StkLog.d(this,cmdParams.getCommandType().name());
  StkCmdMessage cmdMsg=new StkCmdMessage(cmdParams);
switch (cmdParams.getCommandType()) {
case SET_UP_MENU:
    if (removeMenu(cmdMsg.getMenu())) {
      mMenuCmd=null;
    }
 else {
      mMenuCmd=cmdMsg;
    }
  sendTerminalResponse(cmdParams.cmdDet,ResultCode.OK,false,0,null);
break;
case DISPLAY_TEXT:
if (!cmdMsg.geTextMessage().responseNeeded) {
sendTerminalResponse(cmdParams.cmdDet,ResultCode.OK,false,0,null);
}
break;
case REFRESH:
cmdParams.cmdDet.typeOfCommand=CommandType.SET_UP_IDLE_MODE_TEXT.value();
break;
case SET_UP_IDLE_MODE_TEXT:
sendTerminalResponse(cmdParams.cmdDet,ResultCode.OK,false,0,null);
break;
case LAUNCH_BROWSER:
case SELECT_ITEM:
case GET_INPUT:
case GET_INKEY:
case SEND_DTMF:
case SEND_SMS:
case SEND_SS:
case SEND_USSD:
case PLAY_TONE:
case SET_UP_CALL:
break;
default :
StkLog.d(this,"Unsupported command");
return;
}
mCurrntCmd=cmdMsg;
Intent intent=new Intent(AppInterface.STK_CMD_ACTION);
intent.putExtra("STK CMD",cmdMsg);
mContext.sendBroadcast(intent);
}
