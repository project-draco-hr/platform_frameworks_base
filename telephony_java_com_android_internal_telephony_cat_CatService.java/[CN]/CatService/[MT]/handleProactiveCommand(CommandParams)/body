{
  CatLog.d(this,cmdParams.getCommandType().name());
  CharSequence message;
  CatCmdMessage cmdMsg=new CatCmdMessage(cmdParams);
switch (cmdParams.getCommandType()) {
case SET_UP_MENU:
    if (removeMenu(cmdMsg.getMenu())) {
      mMenuCmd=null;
    }
 else {
      mMenuCmd=cmdMsg;
    }
  sendTerminalResponse(cmdParams.cmdDet,ResultCode.OK,false,0,null);
break;
case DISPLAY_TEXT:
if (!cmdMsg.geTextMessage().responseNeeded) {
sendTerminalResponse(cmdParams.cmdDet,ResultCode.OK,false,0,null);
}
break;
case REFRESH:
cmdParams.cmdDet.typeOfCommand=CommandType.SET_UP_IDLE_MODE_TEXT.value();
break;
case SET_UP_IDLE_MODE_TEXT:
sendTerminalResponse(cmdParams.cmdDet,ResultCode.OK,false,0,null);
break;
case PROVIDE_LOCAL_INFORMATION:
ResponseData resp;
switch (cmdParams.cmdDet.commandQualifier) {
case CommandParamsFactory.DTTZ_SETTING:
resp=new DTTZResponseData(null);
sendTerminalResponse(cmdParams.cmdDet,ResultCode.OK,false,0,resp);
return;
case CommandParamsFactory.LANGUAGE_SETTING:
resp=new LanguageResponseData(Locale.getDefault().getLanguage());
sendTerminalResponse(cmdParams.cmdDet,ResultCode.OK,false,0,resp);
return;
default :
sendTerminalResponse(cmdParams.cmdDet,ResultCode.OK,false,0,null);
return;
}
case LAUNCH_BROWSER:
if ((((LaunchBrowserParams)cmdParams).confirmMsg.text != null) && (((LaunchBrowserParams)cmdParams).confirmMsg.text.equals(STK_DEFAULT))) {
message=mContext.getText(com.android.internal.R.string.launchBrowserDefault);
((LaunchBrowserParams)cmdParams).confirmMsg.text=message.toString();
}
break;
case SELECT_ITEM:
case GET_INPUT:
case GET_INKEY:
break;
case SEND_DTMF:
case SEND_SMS:
case SEND_SS:
case SEND_USSD:
if ((((DisplayTextParams)cmdParams).textMsg.text != null) && (((DisplayTextParams)cmdParams).textMsg.text.equals(STK_DEFAULT))) {
message=mContext.getText(com.android.internal.R.string.sending);
((DisplayTextParams)cmdParams).textMsg.text=message.toString();
}
break;
case PLAY_TONE:
break;
case SET_UP_CALL:
if ((((CallSetupParams)cmdParams).confirmMsg.text != null) && (((CallSetupParams)cmdParams).confirmMsg.text.equals(STK_DEFAULT))) {
message=mContext.getText(com.android.internal.R.string.SetupCallDefault);
((CallSetupParams)cmdParams).confirmMsg.text=message.toString();
}
break;
default :
CatLog.d(this,"Unsupported command");
return;
}
mCurrntCmd=cmdMsg;
Intent intent=new Intent(AppInterface.CAT_CMD_ACTION);
intent.putExtra("STK CMD",cmdMsg);
mContext.sendBroadcast(intent);
}
