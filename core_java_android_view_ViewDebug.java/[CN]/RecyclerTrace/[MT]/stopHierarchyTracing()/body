{
  if (!TRACE_HIERARCHY) {
    return;
  }
  if (sHierarhcyRoot == null || sHierarchyTraces == null) {
    throw new IllegalStateException("You must call startHierarchyTracing() before" + " stopHierarchyTracing()!");
  }
  try {
    sHierarchyTraces.close();
  }
 catch (  IOException e) {
    Log.e("View","Could not write view traces");
  }
  sHierarchyTraces=null;
  File hierarchyDump=new File("/tmp/view-hierarchy/");
  hierarchyDump.mkdirs();
  hierarchyDump=new File(hierarchyDump,sHierarchyTracePrefix + ".tree");
  BufferedWriter out;
  try {
    out=new BufferedWriter(new FileWriter(hierarchyDump),8 * 1024);
  }
 catch (  IOException e) {
    Log.e("View","Could not dump view hierarchy");
    return;
  }
  View view=sHierarhcyRoot.getView();
  if (view instanceof ViewGroup) {
    ViewGroup group=(ViewGroup)view;
    dumpViewHierarchy(group,out,0);
    try {
      out.close();
    }
 catch (    IOException e) {
      Log.e("View","Could not dump view hierarchy");
    }
  }
  sHierarhcyRoot=null;
}
