{
  final IntToString[] indexMapping=property.indexMapping();
  final boolean hasIndexMapping=indexMapping.length > 0;
  final IntToString[] mapping=property.mapping();
  final boolean hasMapping=mapping.length > 0;
  final boolean resolveId=property.resolveId() && context != null;
  final int valuesCount=array.length;
  for (int j=0; j < valuesCount; j++) {
    String name;
    String value=null;
    final int intValue=array[j];
    name=String.valueOf(j);
    if (hasIndexMapping) {
      int mappingCount=indexMapping.length;
      for (int k=0; k < mappingCount; k++) {
        final IntToString mapped=indexMapping[k];
        if (mapped.from() == j) {
          name=mapped.to();
          break;
        }
      }
    }
    if (hasMapping) {
      int mappingCount=mapping.length;
      for (int k=0; k < mappingCount; k++) {
        final IntToString mapped=mapping[k];
        if (mapped.from() == intValue) {
          value=mapped.to();
          break;
        }
      }
    }
    if (resolveId) {
      if (value == null)       value=(String)resolveId(context,intValue);
    }
 else {
      value=String.valueOf(intValue);
    }
    writeEntry(out,prefix,name,suffix,value);
  }
}
