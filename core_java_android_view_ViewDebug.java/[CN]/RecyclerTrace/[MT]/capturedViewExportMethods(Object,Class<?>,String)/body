{
  if (obj == null) {
    return "null";
  }
  StringBuilder sb=new StringBuilder();
  final Method[] methods=capturedViewGetPropertyMethods(klass);
  int count=methods.length;
  for (int i=0; i < count; i++) {
    final Method method=methods[i];
    try {
      Object methodValue=method.invoke(obj,(Object[])null);
      final Class<?> returnType=method.getReturnType();
      CapturedViewProperty property=method.getAnnotation(CapturedViewProperty.class);
      if (property.retrieveReturn()) {
        sb.append(capturedViewExportMethods(methodValue,returnType,method.getName() + "#"));
      }
 else {
        sb.append(prefix);
        sb.append(method.getName());
        sb.append("()=");
        if (methodValue != null) {
          final String value=methodValue.toString().replace("\n","\\n");
          sb.append(value);
        }
 else {
          sb.append("null");
        }
        sb.append("; ");
      }
    }
 catch (    IllegalAccessException e) {
    }
catch (    InvocationTargetException e) {
    }
  }
  return sb.toString();
}
