{
  super.onMeasure(widthMeasureSpec,heightMeasureSpec);
  int dividerCount=0;
  if ((mShowDividers & SHOW_DIVIDER_MIDDLE) == SHOW_DIVIDER_MIDDLE) {
    final int childCount=getChildCount();
    for (int i=0; i < childCount; i++) {
      if (getChildAt(i).getVisibility() != GONE) {
        dividerCount++;
      }
    }
    dividerCount=Math.max(0,dividerCount);
  }
  if ((mShowDividers & SHOW_DIVIDER_BEGINNING) == SHOW_DIVIDER_BEGINNING) {
    dividerCount++;
  }
  if ((mShowDividers & SHOW_DIVIDER_END) == SHOW_DIVIDER_END) {
    dividerCount++;
  }
  if (getOrientation() == VERTICAL) {
    final int dividerSize=mDividerHeight * dividerCount;
    setMeasuredDimension(getMeasuredWidthAndState(),resolveSizeAndState(getMeasuredHeight() + dividerSize,heightMeasureSpec,getMeasuredHeightAndState()));
  }
 else {
    final int dividerSize=mDividerWidth * dividerCount;
    setMeasuredDimension(resolveSizeAndState(getMeasuredWidth() + dividerSize,widthMeasureSpec,getMeasuredWidthAndState()),getMeasuredHeightAndState());
  }
}
