{
  if (url == null) {
    Log.w(LOG_TAG,"readDataFromUrl(): url is null!");
    return null;
  }
  HttpGet httpRequest=new HttpGet(url.toString());
  ResponseHandler<byte[]> handler=new ResponseHandler<byte[]>(){
    @Override public byte[] handleResponse(    HttpResponse response) throws IOException {
      if (response.getStatusLine().getStatusCode() != HttpStatus.SC_OK) {
        return null;
      }
      HttpEntity entity=response.getEntity();
      return (entity == null ? null : EntityUtils.toByteArray(entity));
    }
  }
;
  byte[] bytes=null;
  try {
    boolean timedOut;
    do {
      timedOut=false;
      try {
        bytes=getHttpClient().execute(httpRequest,handler);
      }
 catch (      SocketTimeoutException e) {
        timedOut=true;
        Log.w(LOG_TAG,"Expected SocketTimeoutException: " + url,e);
      }
    }
 while (timedOut);
  }
 catch (  IOException e) {
    Log.e(LOG_TAG,"url=" + url,e);
  }
  return bytes;
}
