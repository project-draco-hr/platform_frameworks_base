{
  final NetworkStats stats=new NetworkStats(TEST_START,3);
  assertEquals(0,stats.size());
  assertEquals(3,stats.internalSize());
  stats.addValues(TEST_IFACE,TEST_UID,SET_DEFAULT,TAG_NONE,ROAMING_DEFAULT,1L,1L,2L,2L,3);
  stats.addValues(TEST_IFACE,TEST_UID,SET_DEFAULT,TAG_NONE,ROAMING_DEFAULT,2L,2L,2L,2L,4);
  stats.addValues(TEST_IFACE,TEST_UID,SET_DEFAULT,TAG_NONE,ROAMING_ROAMING,3L,3L,2L,2L,5);
  assertEquals(3,stats.size());
  assertEquals(3,stats.internalSize());
  stats.addValues(TEST_IFACE,TEST_UID,SET_DEFAULT,TAG_NONE,ROAMING_DEFAULT,4L,40L,4L,40L,7);
  stats.addValues(TEST_IFACE,TEST_UID,SET_DEFAULT,TAG_NONE,ROAMING_DEFAULT,5L,50L,4L,40L,8);
  stats.addValues(TEST_IFACE,TEST_UID,SET_DEFAULT,TAG_NONE,ROAMING_DEFAULT,6L,60L,5L,50L,10);
  stats.addValues(TEST_IFACE,TEST_UID,SET_DEFAULT,TAG_NONE,ROAMING_ROAMING,7L,70L,5L,50L,11);
  assertEquals(7,stats.size());
  assertTrue(stats.internalSize() >= 7);
  assertValues(stats,0,TEST_IFACE,TEST_UID,SET_DEFAULT,TAG_NONE,ROAMING_DEFAULT,1L,1L,2L,2L,3);
  assertValues(stats,1,TEST_IFACE,TEST_UID,SET_DEFAULT,TAG_NONE,ROAMING_DEFAULT,2L,2L,2L,2L,4);
  assertValues(stats,2,TEST_IFACE,TEST_UID,SET_DEFAULT,TAG_NONE,ROAMING_ROAMING,3L,3L,2L,2L,5);
  assertValues(stats,3,TEST_IFACE,TEST_UID,SET_DEFAULT,TAG_NONE,ROAMING_DEFAULT,4L,40L,4L,40L,7);
  assertValues(stats,4,TEST_IFACE,TEST_UID,SET_DEFAULT,TAG_NONE,ROAMING_DEFAULT,5L,50L,4L,40L,8);
  assertValues(stats,5,TEST_IFACE,TEST_UID,SET_DEFAULT,TAG_NONE,ROAMING_DEFAULT,6L,60L,5L,50L,10);
  assertValues(stats,6,TEST_IFACE,TEST_UID,SET_DEFAULT,TAG_NONE,ROAMING_ROAMING,7L,70L,5L,50L,11);
}
