{
  final NetworkStats stats=new NetworkStats(TEST_START,3).addValues(TEST_IFACE,100,SET_DEFAULT,TAG_NONE,ROAMING_DEFAULT,1024L,8L,0L,0L,10).addValues(TEST_IFACE,101,SET_DEFAULT,TAG_NONE,ROAMING_DEFAULT,0L,0L,1024L,8L,11).addValues(TEST_IFACE,102,SET_DEFAULT,TAG_NONE,ROAMING_DEFAULT,1024L,8L,1024L,8L,12).addValues(TEST_IFACE2,100,SET_FOREGROUND,TAG_NONE,ROAMING_DEFAULT,1024L,8L,0L,0L,10).addValues(TEST_IFACE2,101,SET_DEFAULT,0xF00D,ROAMING_DEFAULT,0L,0L,1024L,8L,11).addValues(TEST_IFACE2,102,SET_DEFAULT,TAG_NONE,ROAMING_DEFAULT,1024L,8L,1024L,8L,12).addValues(TEST_IFACE2,102,SET_DEFAULT,TAG_NONE,ROAMING_ROAMING,1024L,8L,1024L,8L,12);
  for (int hint=0; hint < stats.size(); hint++) {
    assertEquals(0,stats.findIndexHinted(TEST_IFACE,100,SET_DEFAULT,TAG_NONE,ROAMING_DEFAULT,hint));
    assertEquals(1,stats.findIndexHinted(TEST_IFACE,101,SET_DEFAULT,TAG_NONE,ROAMING_DEFAULT,hint));
    assertEquals(2,stats.findIndexHinted(TEST_IFACE,102,SET_DEFAULT,TAG_NONE,ROAMING_DEFAULT,hint));
    assertEquals(3,stats.findIndexHinted(TEST_IFACE2,100,SET_FOREGROUND,TAG_NONE,ROAMING_DEFAULT,hint));
    assertEquals(4,stats.findIndexHinted(TEST_IFACE2,101,SET_DEFAULT,0xF00D,ROAMING_DEFAULT,hint));
    assertEquals(5,stats.findIndexHinted(TEST_IFACE2,102,SET_DEFAULT,TAG_NONE,ROAMING_DEFAULT,hint));
    assertEquals(6,stats.findIndexHinted(TEST_IFACE2,102,SET_DEFAULT,TAG_NONE,ROAMING_ROAMING,hint));
    assertEquals(-1,stats.findIndexHinted(TEST_IFACE,6,SET_DEFAULT,TAG_NONE,ROAMING_DEFAULT,hint));
  }
}
