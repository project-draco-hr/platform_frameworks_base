{
  int here=mTrie[TRIE_ROOT];
  for (int i=start; i < end; i++) {
    char c=src.charAt(i);
    for (; here != TRIE_NULL; here=mTrie[here + TRIE_NEXT]) {
      if (c == mTrie[here + TRIE_C]) {
        if ((i == end - 1) && (mTrie[here + TRIE_OFF] != TRIE_NULL)) {
          int off=mTrie[here + TRIE_OFF];
          int len=mText.charAt(off);
          return mText.substring(off + 1,off + 1 + len);
        }
        here=mTrie[here + TRIE_CHILD];
        break;
      }
    }
    if (here == TRIE_NULL) {
      return null;
    }
  }
  return null;
}
