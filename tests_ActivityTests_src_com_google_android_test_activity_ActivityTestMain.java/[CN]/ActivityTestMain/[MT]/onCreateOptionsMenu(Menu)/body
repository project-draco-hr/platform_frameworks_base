{
  menu.add("Animate!").setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener(){
    @Override public boolean onMenuItemClick(    MenuItem item){
      AlertDialog.Builder builder=new AlertDialog.Builder(ActivityTestMain.this,R.style.SlowDialog);
      builder.setTitle("This is a title");
      builder.show();
      return true;
    }
  }
);
  menu.add("Bind!").setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener(){
    @Override public boolean onMenuItemClick(    MenuItem item){
      Intent intent=new Intent(ActivityTestMain.this,SingleUserService.class);
      ServiceConnection conn=new ServiceConnection(){
        @Override public void onServiceConnected(        ComponentName name,        IBinder service){
          Log.i(TAG,"Service connected " + name + " "+ service);
        }
        @Override public void onServiceDisconnected(        ComponentName name){
          Log.i(TAG,"Service disconnected " + name);
        }
      }
;
      bindService(intent,conn,Context.BIND_AUTO_CREATE);
      return true;
    }
  }
);
  menu.add("Start!").setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener(){
    @Override public boolean onMenuItemClick(    MenuItem item){
      Intent intent=new Intent(ActivityTestMain.this,SingleUserService.class);
      startService(intent);
      return true;
    }
  }
);
  menu.add("Send!").setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener(){
    @Override public boolean onMenuItemClick(    MenuItem item){
      Intent intent=new Intent(ActivityTestMain.this,UserTarget.class);
      sendBroadcastToUser(intent,1);
      return true;
    }
  }
);
  return true;
}
