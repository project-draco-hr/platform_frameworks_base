{
  isTTypeIntegral=true;
  nColorChannels=sm.getNumBands();
  channelMinValues=new float[nColorChannels];
  channelMulipliers=new float[nColorChannels];
  invChannelMulipliers=new float[nColorChannels];
  boolean isSignedShort=(sm.getTransferType() == DataBuffer.TYPE_SHORT);
  float maxVal;
  for (int i=0; i < nColorChannels; i++) {
    channelMinValues[i]=0;
    if (isSignedShort) {
      channelMulipliers[i]=MAX_SHORT / MAX_SIGNED_SHORT;
      invChannelMulipliers[i]=MAX_SIGNED_SHORT / MAX_SHORT;
    }
 else {
      maxVal=((1 << sm.getSampleSize(i)) - 1);
      channelMulipliers[i]=MAX_SHORT / maxVal;
      invChannelMulipliers[i]=maxVal / MAX_SHORT;
    }
  }
}
