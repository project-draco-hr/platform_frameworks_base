{
  if (DBG) {
    Slog.v(TAG,"enqueueNotificationInternal: pkg=" + pkg + " id="+ id+ " notification="+ notification);
  }
  checkCallerIsSystemOrSameApp(pkg);
  final boolean isSystemNotification=isUidSystem(callingUid) || ("android".equals(pkg));
  final boolean isNotificationFromListener=mListeners.isListenerPackage(pkg);
  final int userId=ActivityManager.handleIncomingUser(callingPid,callingUid,incomingUserId,true,false,"enqueueNotification",pkg);
  final UserHandle user=new UserHandle(userId);
  try {
    final ApplicationInfo ai=getContext().getPackageManager().getApplicationInfoAsUser(pkg,PackageManager.MATCH_DEBUG_TRIAGED_MISSING,(userId == UserHandle.USER_ALL) ? UserHandle.USER_SYSTEM : userId);
    Notification.addFieldsFromContext(ai,userId,notification);
  }
 catch (  NameNotFoundException e) {
    Slog.e(TAG,"Cannot create a context for sending app",e);
    return;
  }
  if (!isSystemNotification && !isNotificationFromListener) {
synchronized (mNotificationList) {
      final float appEnqueueRate=mUsageStats.getAppEnqueueRate(pkg);
      if (appEnqueueRate > MAX_PACKAGE_ENQUEUE_RATE) {
        mUsageStats.registerOverRateQuota(pkg);
        final long now=SystemClock.elapsedRealtime();
        if ((now - mLastOverRateLogTime) > MIN_PACKAGE_OVERRATE_LOG_INTERVAL) {
          Slog.e(TAG,"Package enqueue rate is " + appEnqueueRate + ". Shedding events. package="+ pkg);
          mLastOverRateLogTime=now;
        }
        return;
      }
      int count=0;
      final int N=mNotificationList.size();
      for (int i=0; i < N; i++) {
        final NotificationRecord r=mNotificationList.get(i);
        if (r.sbn.getPackageName().equals(pkg) && r.sbn.getUserId() == userId) {
          if (r.sbn.getId() == id && TextUtils.equals(r.sbn.getTag(),tag)) {
            break;
          }
          count++;
          if (count >= MAX_PACKAGE_NOTIFICATIONS) {
            mUsageStats.registerOverCountQuota(pkg);
            Slog.e(TAG,"Package has already posted " + count + " notifications.  Not showing more.  package="+ pkg);
            return;
          }
        }
      }
    }
  }
  if (pkg == null || notification == null) {
    throw new IllegalArgumentException("null not allowed: pkg=" + pkg + " id="+ id+ " notification="+ notification);
  }
  notification.priority=clamp(notification.priority,Notification.PRIORITY_MIN,Notification.PRIORITY_MAX);
  final StatusBarNotification n=new StatusBarNotification(pkg,opPkg,id,tag,callingUid,callingPid,0,notification,user);
  final NotificationRecord r=new NotificationRecord(getContext(),n);
  mHandler.post(new EnqueueNotificationRunnable(userId,r));
  idOut[0]=id;
}
