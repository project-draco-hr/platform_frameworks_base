{
  final XmlPullParser parser=Xml.newPullParser();
  parser.setInput(stream,StandardCharsets.UTF_8.name());
  int type;
  String tag;
  int version=DB_VERSION;
  while ((type=parser.next()) != END_DOCUMENT) {
    tag=parser.getName();
    if (type == START_TAG) {
      if (TAG_NOTIFICATION_POLICY.equals(tag)) {
        version=Integer.parseInt(parser.getAttributeValue(null,ATTR_VERSION));
      }
 else       if (TAG_BLOCKED_PKGS.equals(tag)) {
        while ((type=parser.next()) != END_DOCUMENT) {
          tag=parser.getName();
          if (TAG_PACKAGE.equals(tag)) {
            mBlockedPackages.add(parser.getAttributeValue(null,ATTR_NAME));
          }
 else           if (TAG_BLOCKED_PKGS.equals(tag) && type == END_TAG) {
            break;
          }
        }
      }
    }
    mZenModeHelper.readXml(parser,forRestore);
    mRankingHelper.readXml(parser,forRestore);
  }
}
