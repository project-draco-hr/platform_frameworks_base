{
  pw.println("Current Notification Manager state:");
  mListeners.dump(pw);
  mConditionProviders.dump(pw);
  int N;
synchronized (mToastQueue) {
    N=mToastQueue.size();
    if (N > 0) {
      pw.println("  Toast Queue:");
      for (int i=0; i < N; i++) {
        mToastQueue.get(i).dump(pw,"    ");
      }
      pw.println("  ");
    }
  }
synchronized (mNotificationList) {
    N=mNotificationList.size();
    if (N > 0) {
      pw.println("  Notification List:");
      for (int i=0; i < N; i++) {
        mNotificationList.get(i).dump(pw,"    ",getContext());
      }
      pw.println("  ");
    }
    N=mLights.size();
    if (N > 0) {
      pw.println("  Lights List:");
      for (int i=0; i < N; i++) {
        pw.println("    " + mLights.get(i));
      }
      pw.println("  ");
    }
    pw.println("  mSoundNotification=" + mSoundNotification);
    pw.println("  mVibrateNotification=" + mVibrateNotification);
    pw.println("  mDisableNotificationAlerts=" + mDisableNotificationAlerts);
    pw.println("  mSystemReady=" + mSystemReady);
    pw.println("  mArchive=" + mArchive.toString());
    Iterator<StatusBarNotification> iter=mArchive.descendingIterator();
    int i=0;
    while (iter.hasNext()) {
      pw.println("    " + iter.next());
      if (++i >= 5) {
        if (iter.hasNext())         pw.println("    ...");
        break;
      }
    }
    pw.println("\n  Usage Stats:");
    mUsageStats.dump(pw,"    ");
    pw.println("\n  Zen Mode:");
    mZenModeHelper.dump(pw,"    ");
  }
}
