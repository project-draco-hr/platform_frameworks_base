{
  loadPolicyFile();
  Map<Integer,String> packageBans=mRankingHelper.getPackageBans();
  for (  Entry<Integer,String> ban : packageBans.entrySet()) {
    final int uid=ban.getKey();
    final String packageName=ban.getValue();
    setNotificationsEnabledForPackageImpl(packageName,uid,false);
  }
  packageBans.clear();
  for (  UserInfo user : UserManager.get(getContext()).getUsers()) {
    final int userId=user.getUserHandle().getIdentifier();
    final PackageManager packageManager=getContext().getPackageManager();
    List<PackageInfo> packages=packageManager.getInstalledPackagesAsUser(0,userId);
    final int packageCount=packages.size();
    for (int p=0; p < packageCount; p++) {
      final String packageName=packages.get(p).packageName;
      try {
        final int uid=packageManager.getPackageUidAsUser(packageName,userId);
        if (!checkNotificationOp(packageName,uid)) {
          packageBans.put(uid,packageName);
        }
      }
 catch (      NameNotFoundException e) {
      }
    }
  }
  for (  Entry<Integer,String> ban : packageBans.entrySet()) {
    mRankingHelper.setImportance(ban.getValue(),ban.getKey(),IMPORTANCE_NONE);
  }
  savePolicyFile();
}
