{
  if (topLocale == null) {
    throw new NullPointerException("topLocale is null");
  }
  final int inputLength=(otherLocales == null) ? 0 : otherLocales.mList.length;
  int topLocaleIndex=-1;
  for (int i=0; i < inputLength; i++) {
    if (topLocale.equals(otherLocales.mList[i])) {
      topLocaleIndex=i;
      break;
    }
  }
  final int outputLength=inputLength + (topLocaleIndex == -1 ? 1 : 0);
  final Locale[] localeList=new Locale[outputLength];
  localeList[0]=(Locale)topLocale.clone();
  if (topLocaleIndex == -1) {
    for (int i=0; i < inputLength; i++) {
      localeList[i + 1]=(Locale)otherLocales.mList[i].clone();
    }
  }
 else {
    for (int i=0; i < topLocaleIndex; i++) {
      localeList[i + 1]=(Locale)otherLocales.mList[i].clone();
    }
    for (int i=topLocaleIndex + 1; i < inputLength; i++) {
      localeList[i]=(Locale)otherLocales.mList[i].clone();
    }
  }
  final StringBuilder sb=new StringBuilder();
  for (int i=0; i < outputLength; i++) {
    sb.append(localeList[i].toLanguageTag());
    if (i < outputLength - 1) {
      sb.append(',');
    }
  }
  mList=localeList;
  mStringRepresentation=sb.toString();
}
