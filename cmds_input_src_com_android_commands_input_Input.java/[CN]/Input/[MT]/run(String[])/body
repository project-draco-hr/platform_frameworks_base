{
  if (args.length < 1) {
    showUsage();
    return;
  }
  int index=0;
  String command=args[index];
  int inputSource=InputDevice.SOURCE_UNKNOWN;
  if (SOURCES.containsKey(command)) {
    inputSource=SOURCES.get(command);
    index++;
    command=args[index];
  }
  final int length=args.length - index;
  try {
    if (command.equals("text")) {
      if (length == 2) {
        inputSource=getSource(inputSource,InputDevice.SOURCE_KEYBOARD);
        sendText(inputSource,args[index + 1]);
        return;
      }
    }
 else     if (command.equals("keyevent")) {
      if (length >= 2) {
        final boolean longpress="--longpress".equals(args[index + 1]);
        final int start=longpress ? index + 2 : index + 1;
        inputSource=getSource(inputSource,InputDevice.SOURCE_KEYBOARD);
        if (length > start) {
          for (int i=start; i < length; i++) {
            int keyCode=KeyEvent.keyCodeFromString(args[i]);
            if (keyCode == KeyEvent.KEYCODE_UNKNOWN) {
              keyCode=KeyEvent.keyCodeFromString("KEYCODE_" + args[i]);
            }
            sendKeyEvent(inputSource,keyCode,longpress);
          }
          return;
        }
      }
    }
 else     if (command.equals("tap")) {
      if (length == 3) {
        inputSource=getSource(inputSource,InputDevice.SOURCE_TOUCHSCREEN);
        sendTap(inputSource,Float.parseFloat(args[index + 1]),Float.parseFloat(args[index + 2]));
        return;
      }
    }
 else     if (command.equals("swipe")) {
      int duration=-1;
      inputSource=getSource(inputSource,InputDevice.SOURCE_TOUCHSCREEN);
switch (length) {
case 6:
        duration=Integer.parseInt(args[index + 5]);
case 5:
      sendSwipe(inputSource,Float.parseFloat(args[index + 1]),Float.parseFloat(args[index + 2]),Float.parseFloat(args[index + 3]),Float.parseFloat(args[index + 4]),duration);
    return;
}
}
 else if (command.equals("press")) {
inputSource=getSource(inputSource,InputDevice.SOURCE_TRACKBALL);
if (length == 1) {
  sendTap(inputSource,0.0f,0.0f);
  return;
}
}
 else if (command.equals("roll")) {
inputSource=getSource(inputSource,InputDevice.SOURCE_TRACKBALL);
if (length == 3) {
  sendMove(inputSource,Float.parseFloat(args[index + 1]),Float.parseFloat(args[index + 2]));
  return;
}
}
 else {
System.err.println("Error: Unknown command: " + command);
showUsage();
return;
}
}
 catch (NumberFormatException ex) {
}
System.err.println(INVALID_ARGUMENTS + command);
showUsage();
}
