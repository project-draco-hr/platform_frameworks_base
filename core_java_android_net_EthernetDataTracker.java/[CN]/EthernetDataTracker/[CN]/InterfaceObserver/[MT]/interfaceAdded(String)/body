{
  if (!iface.matches("eth\\d"))   return;
  android.util.Log.e(TAG,"Adding " + iface);
  mIface=iface;
  Thread dhcpThread=new Thread(new Runnable(){
    public void run(){
      DhcpInfo dhcpInfo=new DhcpInfo();
      if (!NetworkUtils.runDhcp(mIface,dhcpInfo)) {
        Log.e(TAG,"DHCP request error:" + NetworkUtils.getDhcpError());
        return;
      }
      mLinkProperties.addLinkAddress(new LinkAddress(NetworkUtils.intToInetAddress(dhcpInfo.ipAddress),NetworkUtils.intToInetAddress(dhcpInfo.netmask)));
      mLinkProperties.setGateway(NetworkUtils.intToInetAddress(dhcpInfo.gateway));
      InetAddress dns1Addr=NetworkUtils.intToInetAddress(dhcpInfo.dns1);
      if (dns1Addr == null || dns1Addr.equals("0.0.0.0")) {
        mLinkProperties.addDns(dns1Addr);
      }
      InetAddress dns2Addr=NetworkUtils.intToInetAddress(dhcpInfo.dns2);
      if (dns2Addr == null || dns2Addr.equals("0.0.0.0")) {
        mLinkProperties.addDns(dns2Addr);
      }
      mLinkProperties.setInterfaceName(mIface);
      mNetworkInfo.setIsAvailable(true);
      mNetworkInfo.setDetailedState(DetailedState.CONNECTED,null,null);
      Message msg=mCsHandler.obtainMessage(EVENT_CONFIGURATION_CHANGED,mNetworkInfo);
      msg.sendToTarget();
      msg=mCsHandler.obtainMessage(EVENT_STATE_CHANGED,mNetworkInfo);
      msg.sendToTarget();
    }
  }
);
  dhcpThread.start();
}
