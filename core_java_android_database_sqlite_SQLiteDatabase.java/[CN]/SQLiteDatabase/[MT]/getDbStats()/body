{
  ArrayList<DbStats> dbStatsList=new ArrayList<DbStats>();
  ArrayList<WeakReference<SQLiteDatabase>> tempList;
synchronized (mActiveDatabases) {
    tempList=(ArrayList<WeakReference<SQLiteDatabase>>)mActiveDatabases.clone();
  }
  for (  WeakReference<SQLiteDatabase> w : tempList) {
    SQLiteDatabase db=w.get();
    if (db == null || !db.isOpen()) {
      continue;
    }
synchronized (db) {
      try {
        int lookasideUsed=db.native_getDbLookaside();
        String path=db.getPath();
        int indx=path.lastIndexOf("/");
        String lastnode=path.substring((indx != -1) ? ++indx : 0);
        ArrayList<Pair<String,String>> attachedDbs=db.getAttachedDbs();
        if (attachedDbs == null) {
          continue;
        }
        for (int i=0; i < attachedDbs.size(); i++) {
          Pair<String,String> p=attachedDbs.get(i);
          long pageCount=DatabaseUtils.longForQuery(db,"PRAGMA " + p.first + ".page_count;",null);
          String dbName;
          if (i == 0) {
            dbName=lastnode;
          }
 else {
            lookasideUsed=0;
            dbName="  (attached) " + p.first;
            if (p.second.trim().length() > 0) {
              int idx=p.second.lastIndexOf("/");
              dbName+=" : " + p.second.substring((idx != -1) ? ++idx : 0);
            }
          }
          if (pageCount > 0) {
            dbStatsList.add(new DbStats(dbName,pageCount,db.getPageSize(),lookasideUsed,db.mNumCacheHits,db.mNumCacheMisses,db.mCompiledQueries.size()));
          }
        }
        if (db.mConnectionPool != null) {
          for (          SQLiteDatabase pDb : db.mConnectionPool.getConnectionList()) {
            dbStatsList.add(new DbStats("(pooled # " + pDb.mConnectionNum + ") "+ lastnode,0,0,0,pDb.mNumCacheHits,pDb.mNumCacheMisses,pDb.mCompiledQueries.size()));
          }
        }
      }
 catch (      SQLiteException e) {
      }
    }
  }
  return dbStatsList;
}
