{
  if (r.curState == RESTORED || r.curState == DESTROYED) {
    return;
  }
  if (r.curState == INITIALIZING) {
    HashMap<String,Object> lastNonConfigurationInstances=mParent.getLastNonConfigurationChildInstances();
    Object instance=null;
    if (lastNonConfigurationInstances != null) {
      instance=lastNonConfigurationInstances.get(r.id);
    }
    if (localLOGV)     Log.v(TAG,r.id + ": starting " + r.intent);
    if (r.activityInfo == null) {
      r.activityInfo=mActivityThread.resolveActivityInfo(r.intent);
    }
    r.activity=mActivityThread.startActivityNow(mParent,r.id,r.intent,r.activityInfo,r,r.instanceState,instance);
    if (r.activity == null) {
      return;
    }
    r.window=r.activity.getWindow();
    r.instanceState=null;
    r.curState=STARTED;
    if (desiredState == RESUMED) {
      if (localLOGV)       Log.v(TAG,r.id + ": resuming");
      mActivityThread.performResumeActivity(r,true);
      r.curState=RESUMED;
    }
    return;
  }
switch (r.curState) {
case CREATED:
    if (desiredState == STARTED) {
      if (localLOGV)       Log.v(TAG,r.id + ": restarting");
      mActivityThread.performRestartActivity(r);
      r.curState=STARTED;
    }
  if (desiredState == RESUMED) {
    if (localLOGV)     Log.v(TAG,r.id + ": restarting and resuming");
    mActivityThread.performRestartActivity(r);
    mActivityThread.performResumeActivity(r,true);
    r.curState=RESUMED;
  }
return;
case STARTED:
if (desiredState == RESUMED) {
if (localLOGV) Log.v(TAG,r.id + ": resuming");
mActivityThread.performResumeActivity(r,true);
r.instanceState=null;
r.curState=RESUMED;
}
if (desiredState == CREATED) {
if (localLOGV) Log.v(TAG,r.id + ": stopping");
mActivityThread.performStopActivity(r);
r.curState=CREATED;
}
return;
case RESUMED:
if (desiredState == STARTED) {
if (localLOGV) Log.v(TAG,r.id + ": pausing");
performPause(r,mFinishing);
r.curState=STARTED;
}
if (desiredState == CREATED) {
if (localLOGV) Log.v(TAG,r.id + ": pausing");
performPause(r,mFinishing);
if (localLOGV) Log.v(TAG,r.id + ": stopping");
mActivityThread.performStopActivity(r);
r.curState=CREATED;
}
return;
}
}
