{
  AsyncResult ar;
switch (msg.what) {
case EVENT_SETUP_PDP_DONE:
    ar=(AsyncResult)msg.obj;
  if (ar.exception != null) {
    Log.e(LOG_TAG,"PDP Context Init failed " + ar.exception);
    if (receivedDisconnectReq) {
      notifyDisconnect(onDisconnect);
    }
 else {
      if (ar.exception instanceof CommandException && ((CommandException)(ar.exception)).getCommandError() == CommandException.Error.RADIO_NOT_AVAILABLE) {
        notifyFail(PdpFailCause.RADIO_NOT_AVIALABLE,onConnectCompleted);
      }
 else {
        phone.mCM.getLastPdpFailCause(obtainMessage(EVENT_GET_LAST_FAIL_DONE));
      }
    }
  }
 else {
    if (receivedDisconnectReq) {
      state=PdpState.ACTIVE;
      disconnect(onDisconnect);
    }
 else {
      String[] response=((String[])ar.result);
      cid=Integer.parseInt(response[0]);
      if (response.length > 2) {
        interfaceName=response[1];
        ipAddress=response[2];
        String prefix="net." + interfaceName + ".";
        gatewayAddress=SystemProperties.get(prefix + "gw");
        dnsServers[0]=SystemProperties.get(prefix + "dns1");
        dnsServers[1]=SystemProperties.get(prefix + "dns2");
        if (DBG) {
          log("interface=" + interfaceName + " ipAddress="+ ipAddress+ " gateway="+ gatewayAddress+ " DNS1="+ dnsServers[0]+ " DNS2="+ dnsServers[1]);
        }
        if (NULL_IP.equals(dnsServers[0]) && NULL_IP.equals(dnsServers[1])) {
          if (!apn.types[0].equals(Phone.APN_TYPE_MMS) || !isIpAddress(apn.mmsProxy)) {
            EventLog.writeEvent(EVENT_LOG_BAD_DNS_ADDRESS,dnsServers[0]);
            phone.mCM.deactivateDefaultPDP(cid,obtainMessage(EVENT_FORCE_RETRY));
            break;
          }
        }
      }
      if (dataLink != null) {
        dataLink.connect();
      }
 else {
        onLinkStateChanged(DataLink.LinkState.LINK_UP);
      }
      if (DBG)       log("PDP setup on cid = " + cid);
    }
  }
break;
case EVENT_FORCE_RETRY:
if (receivedDisconnectReq) {
notifyDisconnect(onDisconnect);
}
 else {
ar=(AsyncResult)msg.obj;
notifyFail(PdpFailCause.RADIO_ERROR_RETRY,onConnectCompleted);
}
break;
case EVENT_GET_LAST_FAIL_DONE:
if (receivedDisconnectReq) {
notifyDisconnect(onDisconnect);
}
 else {
ar=(AsyncResult)msg.obj;
PdpFailCause cause=PdpFailCause.UNKNOWN;
if (ar.exception == null) {
int rilFailCause=((int[])(ar.result))[0];
cause=getFailCauseFromRequest(rilFailCause);
}
notifyFail(cause,onConnectCompleted);
}
break;
case EVENT_LINK_STATE_CHANGED:
ar=(AsyncResult)msg.obj;
DataLink.LinkState ls=(DataLink.LinkState)ar.result;
onLinkStateChanged(ls);
break;
case EVENT_DEACTIVATE_DONE:
ar=(AsyncResult)msg.obj;
notifyDisconnect((Message)ar.userObj);
break;
}
}
