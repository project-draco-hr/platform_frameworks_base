{
  mContext.enforceCallingOrSelfPermission(android.Manifest.permission.BACKUP,"performRestore");
  if (DEBUG) {
    StringBuilder b=new StringBuilder(128);
    b.append("restoreSome token=");
    b.append(Long.toHexString(token));
    b.append(" observer=");
    b.append(observer.toString());
    b.append(" packages=");
    if (packages == null) {
      b.append("null");
    }
 else {
      b.append('{');
      boolean first=true;
      for (      String s : packages) {
        if (!first) {
          b.append(", ");
        }
 else         first=false;
        b.append(s);
      }
      b.append('}');
    }
    Slog.d(TAG,b.toString());
  }
  if (mEnded) {
    throw new IllegalStateException("Restore session already ended");
  }
  if (mRestoreTransport == null || mRestoreSets == null) {
    Slog.e(TAG,"Ignoring restoreAll() with no restore set");
    return -1;
  }
  if (mPackageName != null) {
    Slog.e(TAG,"Ignoring restoreAll() on single-package session");
    return -1;
  }
  String dirName;
  try {
    dirName=mRestoreTransport.transportDirName();
  }
 catch (  RemoteException e) {
    Slog.e(TAG,"Unable to contact transport for restore");
    return -1;
  }
synchronized (mQueueLock) {
    for (int i=0; i < mRestoreSets.length; i++) {
      if (token == mRestoreSets[i].token) {
        long oldId=Binder.clearCallingIdentity();
        mWakelock.acquire();
        Message msg=mBackupHandler.obtainMessage(MSG_RUN_RESTORE);
        msg.obj=new RestoreParams(mRestoreTransport,dirName,observer,token,packages,true);
        mBackupHandler.sendMessage(msg);
        Binder.restoreCallingIdentity(oldId);
        return 0;
      }
    }
  }
  Slog.w(TAG,"Restore token " + Long.toHexString(token) + " not found");
  return -1;
}
