{
  out.write((response.getStatus() + "\r\n").getBytes(ASCII));
  boolean doCloseConnectionAfterHeader=(response.getCloseConnectionAfterHeader() != null);
  String closeConnectionAfterHeader=response.getCloseConnectionAfterHeader();
  for (  String header : response.getHeaders()) {
    out.write((header + "\r\n").getBytes(ASCII));
    if (doCloseConnectionAfterHeader && header.startsWith(closeConnectionAfterHeader)) {
      Log.i(LOG_TAG,"Closing connection after header" + header);
      break;
    }
  }
  if (!doCloseConnectionAfterHeader) {
    out.write(("\r\n").getBytes(ASCII));
    InputStream body=response.getBody();
    final int READ_BLOCK_SIZE=10000;
    byte[] currentBlock=new byte[READ_BLOCK_SIZE];
    int currentBlockSize=0;
    int writtenSoFar=0;
    boolean shouldPause=response.getShouldPause();
    boolean shouldClose=response.getShouldClose();
    int pause=response.getPauseConnectionAfterXBytes();
    int close=response.getCloseConnectionAfterXBytes();
    if (shouldPause && shouldClose && (pause > close)) {
      shouldPause=false;
    }
    while ((currentBlockSize=body.read(currentBlock)) != -1) {
      int startIndex=0;
      int writeLength=currentBlockSize;
      if (shouldPause && (writtenSoFar + currentBlockSize >= pause)) {
        writeLength=pause - writtenSoFar;
        out.write(currentBlock,0,writeLength);
        out.flush();
        writtenSoFar+=writeLength;
        try {
          Log.i(LOG_TAG,"Pausing connection after " + pause + " bytes");
synchronized (downloadPauseLock) {
            while (!downloadResume) {
              downloadPauseLock.wait();
            }
            downloadResume=false;
          }
        }
 catch (        InterruptedException e) {
          Log.e(LOG_TAG,"Server was interrupted during pause in download.");
        }
        startIndex=writeLength;
        writeLength=currentBlockSize - writeLength;
      }
      if (shouldClose && (writtenSoFar + writeLength > close)) {
        writeLength=close - writtenSoFar;
        out.write(currentBlock,startIndex,writeLength);
        writtenSoFar+=writeLength;
        Log.i(LOG_TAG,"Closing connection after " + close + " bytes");
        break;
      }
      out.write(currentBlock,startIndex,writeLength);
      writtenSoFar+=writeLength;
    }
  }
  out.flush();
}
