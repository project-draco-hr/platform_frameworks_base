{
  super(delegator,context);
  final TypedArray a=mContext.obtainStyledAttributes(attrs,R.styleable.TimePicker,defStyleAttr,defStyleRes);
  final Resources res=mContext.getResources();
  mHourPickerDescription=res.getString(R.string.hour_picker_description);
  mSelectHours=res.getString(R.string.select_hours);
  mMinutePickerDescription=res.getString(R.string.minute_picker_description);
  mSelectMinutes=res.getString(R.string.select_minutes);
  mHeaderSelectedColor=a.getColor(R.styleable.TimePicker_headerSelectedTextColor,android.R.color.holo_blue_light);
  mHeaderUnSelectedColor=getUnselectedColor(R.color.timepicker_default_text_color_holo_light);
  if (mHeaderUnSelectedColor == -1) {
    mHeaderUnSelectedColor=a.getColor(R.styleable.TimePicker_headerUnselectedTextColor,R.color.timepicker_default_text_color_holo_light);
  }
  final int headerBackgroundColor=a.getColor(R.styleable.TimePicker_headerBackgroundColor,0);
  final int layoutResourceId=a.getResourceId(R.styleable.TimePicker_internalLayout,R.layout.time_picker_holo);
  a.recycle();
  final LayoutInflater inflater=(LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
  mMainView=inflater.inflate(layoutResourceId,null);
  mDelegator.addView(mMainView);
  if (headerBackgroundColor != 0) {
    RelativeLayout header=(RelativeLayout)mMainView.findViewById(R.id.time_header);
    header.setBackgroundColor(headerBackgroundColor);
  }
  mHourView=(TextView)mMainView.findViewById(R.id.hours);
  mMinuteView=(TextView)mMainView.findViewById(R.id.minutes);
  mAmPmTextView=(TextView)mMainView.findViewById(R.id.ampm_label);
  mSeparatorView=(TextView)mMainView.findViewById(R.id.separator);
  mRadialTimePickerView=(RadialTimePickerView)mMainView.findViewById(R.id.radial_picker);
  mLayoutButtons=(ViewGroup)mMainView.findViewById(R.id.layout_buttons);
  mDoneButton=(Button)mMainView.findViewById(R.id.done_button);
  String[] amPmTexts=new DateFormatSymbols().getAmPmStrings();
  mAmText=amPmTexts[0];
  mPmText=amPmTexts[1];
  setupListeners();
  mAllowAutoAdvance=true;
  mDoublePlaceholderText=res.getString(R.string.time_placeholder);
  mDeletedKeyFormat=res.getString(R.string.deleted_key);
  mPlaceholderText=mDoublePlaceholderText.charAt(0);
  mAmKeyCode=mPmKeyCode=-1;
  generateLegalTimesTree();
  final Calendar calendar=Calendar.getInstance(mCurrentLocale);
  final int currentHour=calendar.get(Calendar.HOUR_OF_DAY);
  final int currentMinute=calendar.get(Calendar.MINUTE);
  initialize(currentHour,currentMinute,false,HOUR_INDEX,false);
}
