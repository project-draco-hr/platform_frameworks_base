{
  if (mIs24HourView) {
    mAmPmTextView.setVisibility(View.GONE);
  }
 else {
    mAmPmTextView.setVisibility(View.VISIBLE);
    final String bestDateTimePattern=DateFormat.getBestDateTimePattern(mCurrentLocale,"hm");
    boolean amPmOnLeft=bestDateTimePattern.startsWith("a");
    if (TextUtils.getLayoutDirectionFromLocale(mCurrentLocale) == View.LAYOUT_DIRECTION_RTL) {
      amPmOnLeft=!amPmOnLeft;
    }
    RelativeLayout.LayoutParams layoutParams=(RelativeLayout.LayoutParams)mAmPmTextView.getLayoutParams();
    if (amPmOnLeft) {
      layoutParams.rightMargin=computeMaxWidthOfNumbers(12);
      layoutParams.removeRule(RelativeLayout.RIGHT_OF);
      layoutParams.addRule(RelativeLayout.LEFT_OF,R.id.separator);
    }
 else {
      layoutParams.leftMargin=computeMaxWidthOfNumbers(60);
      layoutParams.removeRule(RelativeLayout.LEFT_OF);
      layoutParams.addRule(RelativeLayout.RIGHT_OF,R.id.separator);
    }
    updateAmPmDisplay(mInitialHourOfDay < 12 ? AM : PM);
    mAmPmTextView.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        tryVibrate();
        int amOrPm=mRadialTimePickerView.getAmOrPm();
        if (amOrPm == AM) {
          amOrPm=PM;
        }
 else         if (amOrPm == PM) {
          amOrPm=AM;
        }
        updateAmPmDisplay(amOrPm);
        mRadialTimePickerView.setAmOrPm(amOrPm);
      }
    }
);
  }
}
