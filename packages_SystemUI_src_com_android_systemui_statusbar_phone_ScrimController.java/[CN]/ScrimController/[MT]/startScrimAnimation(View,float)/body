{
  float current=getCurrentScrimAlpha(scrim);
  ValueAnimator anim=ValueAnimator.ofFloat(current,target);
  anim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){
    @Override public void onAnimationUpdate(    ValueAnimator animation){
      float alpha=(float)animation.getAnimatedValue();
      setCurrentScrimAlpha(scrim,alpha);
      updateScrimColor(scrim);
    }
  }
);
  anim.setInterpolator(getInterpolator());
  anim.setStartDelay(mAnimationDelay);
  anim.setDuration(mDurationOverride != -1 ? mDurationOverride : ANIMATION_DURATION);
  anim.addListener(new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator animation){
      if (mOnAnimationFinished != null) {
        mOnAnimationFinished.run();
        mOnAnimationFinished=null;
      }
      mKeyguardFadingOutInProgress=false;
      scrim.setTag(TAG_KEY_ANIM,null);
      scrim.setTag(TAG_KEY_ANIM_TARGET,null);
    }
  }
);
  anim.start();
  if (mAnimateKeyguardFadingOut) {
    mKeyguardFadingOutInProgress=true;
  }
  if (mSkipFirstFrame) {
    anim.setCurrentPlayTime(16);
  }
  scrim.setTag(TAG_KEY_ANIM,anim);
  scrim.setTag(TAG_KEY_ANIM_TARGET,target);
}
