{
  float alpha=calculateHeadsUpAlpha();
  ValueAnimator previousAnimator=StackStateAnimator.getChildTag(mHeadsUpScrim,TAG_KEY_ANIM);
  float animEndValue=-1;
  if (previousAnimator != null) {
    if ((animate || alpha == mCurrentHeadsUpAlpha)) {
      previousAnimator.cancel();
    }
    animEndValue=StackStateAnimator.getChildTag(mHeadsUpScrim,TAG_HUN_START_ALPHA);
  }
  if (alpha != mCurrentHeadsUpAlpha && alpha != animEndValue) {
    if (animate) {
      startScrimAnimation(mHeadsUpScrim,alpha);
      mHeadsUpScrim.setTag(TAG_HUN_START_ALPHA,mCurrentHeadsUpAlpha);
      mHeadsUpScrim.setTag(TAG_HUN_END_ALPHA,alpha);
    }
 else {
      if (previousAnimator != null) {
        float previousStartValue=StackStateAnimator.getChildTag(mHeadsUpScrim,TAG_HUN_START_ALPHA);
        float previousEndValue=StackStateAnimator.getChildTag(mHeadsUpScrim,TAG_HUN_END_ALPHA);
        PropertyValuesHolder[] values=previousAnimator.getValues();
        float relativeDiff=alpha - previousEndValue;
        float newStartValue=previousStartValue + relativeDiff;
        values[0].setFloatValues(newStartValue,alpha);
        mHeadsUpScrim.setTag(TAG_HUN_START_ALPHA,newStartValue);
        mHeadsUpScrim.setTag(TAG_HUN_END_ALPHA,alpha);
        previousAnimator.setCurrentPlayTime(previousAnimator.getCurrentPlayTime());
      }
 else {
        setCurrentScrimAlpha(mHeadsUpScrim,alpha);
        updateScrimColor(mHeadsUpScrim);
      }
    }
  }
}
