{
  int current=getBackgroundAlpha(scrim);
  int target=Color.alpha(targetColor);
  if (current == targetColor) {
    return;
  }
  Object runningAnim=scrim.getTag(TAG_KEY_ANIM);
  if (runningAnim instanceof ValueAnimator) {
    ((ValueAnimator)runningAnim).cancel();
  }
  ValueAnimator anim=ValueAnimator.ofInt(current,target);
  anim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){
    @Override public void onAnimationUpdate(    ValueAnimator animation){
      int value=(int)animation.getAnimatedValue();
      scrim.setBackgroundColor(Color.argb(value,0,0,0));
    }
  }
);
  anim.setInterpolator(mAnimateKeyguardFadingOut ? mLinearOutSlowInInterpolator : mInterpolator);
  anim.setStartDelay(mAnimationDelay);
  anim.setDuration(mDurationOverride != -1 ? mDurationOverride : ANIMATION_DURATION);
  anim.addListener(new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator animation){
      if (mOnAnimationFinished != null) {
        mOnAnimationFinished.run();
        mOnAnimationFinished=null;
      }
      scrim.setTag(TAG_KEY_ANIM,null);
    }
  }
);
  anim.start();
  scrim.setTag(TAG_KEY_ANIM,anim);
  mAnimationStarted=true;
}
