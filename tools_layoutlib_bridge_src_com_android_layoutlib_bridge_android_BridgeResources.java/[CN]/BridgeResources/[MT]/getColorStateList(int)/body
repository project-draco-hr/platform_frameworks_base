{
  ResourceValue resValue=getResourceValue(id,mPlatformResourceFlag);
  if (resValue != null) {
    String value=resValue.getValue();
    if (value != null) {
      File f=new File(value);
      if (f.isFile()) {
        try {
          KXmlParser parser=new KXmlParser();
          parser.setFeature(XmlPullParser.FEATURE_PROCESS_NAMESPACES,true);
          parser.setInput(new FileReader(f));
          return ColorStateList.createFromXml(this,new BridgeXmlBlockParser(parser,mContext,resValue.isFramework()));
        }
 catch (        XmlPullParserException e) {
          Bridge.getLog().error(LayoutLog.TAG_BROKEN,"Failed to configure parser for " + value,e,null);
        }
catch (        Exception e) {
          Bridge.getLog().error(LayoutLog.TAG_RESOURCES_READ,"Failed to parse file " + value,e,null);
          return null;
        }
      }
 else {
        try {
          int color=ResourceHelper.getColor(value);
          return ColorStateList.valueOf(color);
        }
 catch (        NumberFormatException e) {
          Bridge.getLog().error(LayoutLog.TAG_RESOURCES_FORMAT,"Failed to convert " + value + " into a ColorStateList",e,null);
          return null;
        }
      }
    }
  }
  throwException(id);
  return null;
}
