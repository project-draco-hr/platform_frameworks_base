{
  StackTraceElement stackTrace[]=Thread.currentThread().getStackTrace();
  if (stackTrace.length < MIN_STACK_TRACE_LENGTH) {
    return UNKNOWN_METHOD_STRING;
  }
  StackTraceElement caller=stackTrace[METHOD_TO_TRACE_LOCATION];
  StackTraceElement previousCaller=stackTrace[CALLER_LOCATION];
  if (previousCaller.getClassName().startsWith(UIAUTOMATOR_PACKAGE)) {
    return null;
  }
  int indexOfDot=caller.getClassName().lastIndexOf('.');
  if (indexOfDot < 0) {
    indexOfDot=0;
  }
  if (indexOfDot + 1 >= caller.getClassName().length()) {
    return UNKNOWN_METHOD_STRING;
  }
  String shortClassName=caller.getClassName().substring(indexOfDot + 1);
  return String.format("%s.%s from %s() at %s:%d",shortClassName,caller.getMethodName(),previousCaller.getMethodName(),previousCaller.getFileName(),previousCaller.getLineNumber());
}
