{
  FontFamily_Delegate ffd=sManager.getDelegate(nativeFamily);
  ffd.mValid=true;
  if (mgr == null) {
    return false;
  }
  if (mgr instanceof BridgeAssetManager) {
    InputStream fontStream=null;
    try {
      AssetRepository assetRepository=((BridgeAssetManager)mgr).getAssetRepository();
      if (assetRepository == null) {
        Bridge.getLog().error(LayoutLog.TAG_MISSING_ASSET,"Asset not found: " + path,null);
        return false;
      }
      if (!assetRepository.isSupported()) {
        return false;
      }
      FontInfo fontInfo=sCache.get(path);
      if (fontInfo != null) {
        sCache.put(path,fontInfo);
        ffd.addFont(fontInfo);
        return true;
      }
      fontStream=assetRepository.openAsset(path,AssetManager.ACCESS_STREAMING);
      if (fontStream == null) {
        Bridge.getLog().error(LayoutLog.TAG_MISSING_ASSET,"Asset not found: " + path,path);
        return false;
      }
      Font font=Font.createFont(Font.TRUETYPE_FONT,fontStream);
      fontInfo=new FontInfo();
      fontInfo.mFont=font;
      fontInfo.mWeight=font.isBold() ? BOLD_FONT_WEIGHT : DEFAULT_FONT_WEIGHT;
      fontInfo.mIsItalic=font.isItalic();
      ffd.addFont(fontInfo);
      return true;
    }
 catch (    IOException e) {
      Bridge.getLog().error(LayoutLog.TAG_MISSING_ASSET,"Unable to load font " + path,e,path);
    }
catch (    FontFormatException e) {
      if (path.endsWith(EXTENSION_OTF)) {
        Bridge.getLog().fidelityWarning(LayoutLog.TAG_UNSUPPORTED,"OpenType fonts are not supported yet: " + path,null,path);
      }
 else {
        Bridge.getLog().error(LayoutLog.TAG_BROKEN,"Unable to load font " + path,e,path);
      }
    }
 finally {
      if (fontStream != null) {
        try {
          fontStream.close();
        }
 catch (        IOException ignored) {
        }
      }
    }
    return false;
  }
  Bridge.getLog().error(LayoutLog.TAG_BROKEN,"You have found a bug in the rendering library. Please file a bug at b.android.com.",new RuntimeException("Asset Manager is not an instance of BridgeAssetManager"),null);
  return false;
}
