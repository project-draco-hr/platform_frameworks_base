{
  final HashMap<String,ScoreEntry> scoreboard=new HashMap<>();
  final byte[] score=new byte[preferredLanguages.size()];
  final int sourceSize=sources.size();
  for (int i=0; i < sourceSize; ++i) {
    final Locale locale=extractor.get(sources.get(i));
    if (locale == null || !calculateMatchingScore(ULocale.addLikelySubtags(ULocale.forLocale(locale)),preferredLanguages,score)) {
      continue;
    }
    final String lang=locale.getLanguage();
    final ScoreEntry bestScore=scoreboard.get(lang);
    if (bestScore == null) {
      scoreboard.put(lang,new ScoreEntry(score,i));
    }
 else {
      bestScore.updateIfBetter(score,i);
    }
  }
  final ScoreEntry[] result=scoreboard.values().toArray(new ScoreEntry[scoreboard.size()]);
  Arrays.sort(result);
  for (  final ScoreEntry entry : result) {
    dest.add(sources.get(entry.mIndex));
  }
}
