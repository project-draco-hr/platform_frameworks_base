{
  final HashMap<String,ScoreEntry> scoreboard=new HashMap<>();
  final byte[] score=new byte[preferredLanguages.size()];
  for (int i=0; i < sources.size(); ++i) {
    final Locale loc=extractor.get(sources.get(i));
    if (loc == null || !calculateMatchingScore(ULocale.addLikelySubtags(ULocale.forLocale(loc)),preferredLanguages,score)) {
      continue;
    }
    final String lang=loc.getLanguage();
    ScoreEntry bestScore=scoreboard.get(lang);
    if (bestScore == null) {
      bestScore=new ScoreEntry(score.length);
      scoreboard.put(lang,bestScore);
    }
    bestScore.updateIfBetter(score,i);
  }
  final ScoreEntry[] result=scoreboard.values().toArray(new ScoreEntry[scoreboard.size()]);
  Arrays.sort(result);
  for (  final ScoreEntry entry : result) {
    dest.add(sources.get(entry.index));
  }
}
