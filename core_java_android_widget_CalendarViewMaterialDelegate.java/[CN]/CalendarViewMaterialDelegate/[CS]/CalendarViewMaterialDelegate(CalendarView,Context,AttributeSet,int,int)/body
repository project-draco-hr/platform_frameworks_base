{
  super(delegator,context);
  final TypedArray a=context.obtainStyledAttributes(attrs,R.styleable.CalendarView,defStyleAttr,defStyleRes);
  final int firstDayOfWeek=a.getInt(R.styleable.CalendarView_firstDayOfWeek,LocaleData.get(Locale.getDefault()).firstDayOfWeek);
  final long minDate=parseDateToMillis(a.getString(R.styleable.CalendarView_minDate),DEFAULT_MIN_DATE);
  final long maxDate=parseDateToMillis(a.getString(R.styleable.CalendarView_maxDate),DEFAULT_MAX_DATE);
  if (maxDate < minDate) {
    throw new IllegalArgumentException("max date cannot be before min date");
  }
  final long setDate=MathUtils.constrain(System.currentTimeMillis(),minDate,maxDate);
  final int dateTextAppearanceResId=a.getResourceId(R.styleable.CalendarView_dateTextAppearance,R.style.TextAppearance_DeviceDefault_Small);
  a.recycle();
  mDayPickerView=new DayPickerView(context);
  mDayPickerView.setFirstDayOfWeek(firstDayOfWeek);
  mDayPickerView.setCalendarTextAppearance(dateTextAppearanceResId);
  mDayPickerView.setMinDate(minDate);
  mDayPickerView.setMaxDate(maxDate);
  mDayPickerView.setDate(setDate,false,true);
  mDayPickerView.setOnDaySelectedListener(mOnDaySelectedListener);
  delegator.addView(mDayPickerView);
}
