{
  super(notifier,context,unitTestMode);
  h=new MyHandler();
  mCM=ci;
  if (ci instanceof SimulatedRadioControl) {
    mSimulatedRadioControl=(SimulatedRadioControl)ci;
  }
  mCT=new CallTracker(this);
  mSST=new ServiceStateTracker(this);
  mSMS=new SMSDispatcher(this);
  mSIMFileHandler=new SIMFileHandler(this);
  mSIMRecords=new SIMRecords(this);
  mDataConnection=new DataConnectionTracker(this);
  mSimCard=new GsmSimCard(this);
  if (!unitTestMode) {
    mSimPhoneBookIntManager=new SimPhoneBookInterfaceManager(this);
    mSimSmsIntManager=new SimSmsInterfaceManager(this);
    mSubInfo=new PhoneSubInfo(this);
  }
  mStkService=Service.getInstance(mCM,mSIMRecords,mContext,mSIMFileHandler,mSimCard);
  mCM.registerForAvailable(h,EVENT_RADIO_AVAILABLE,null);
  mSIMRecords.registerForRecordsLoaded(h,EVENT_SIM_RECORDS_LOADED,null);
  mCM.registerForOffOrNotAvailable(h,EVENT_RADIO_OFF_OR_NOT_AVAILABLE,null);
  mCM.registerForOn(h,EVENT_RADIO_ON,null);
  mCM.setOnUSSD(h,EVENT_USSD,null);
  mCM.setOnSuppServiceNotification(h,EVENT_SSN,null);
  mCM.setOnCallRing(h,EVENT_CALL_RING,null);
  mSST.registerForNetworkAttach(h,EVENT_REGISTERED_TO_NETWORK,null);
  if (false) {
    try {
      debugSocket=new ServerSocket();
      debugSocket.setReuseAddress(true);
      debugSocket.bind(new InetSocketAddress("127.0.0.1",6666));
      debugPortThread=new Thread(new Runnable(){
        public void run(){
          for (; ; ) {
            try {
              Socket sock;
              sock=debugSocket.accept();
              Log.i(LOG_TAG,"New connection; resetting radio");
              mCM.resetRadio(null);
              sock.close();
            }
 catch (            IOException ex) {
              Log.w(LOG_TAG,"Exception accepting socket",ex);
            }
          }
        }
      }
,"GSMPhone debug");
      debugPortThread.start();
    }
 catch (    IOException ex) {
      Log.w(LOG_TAG,"Failure to open com.android.internal.telephony.debug socket",ex);
    }
  }
}
