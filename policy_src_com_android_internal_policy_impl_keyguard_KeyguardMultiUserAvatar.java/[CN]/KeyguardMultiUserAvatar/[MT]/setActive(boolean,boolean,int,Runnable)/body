{
  if (mActive != active || mInit) {
    mActive=active;
    final int finalFilterAlpha=mActive ? 0 : INACTIVE_ALPHA;
    final int initFilterAlpha=mActive ? INACTIVE_ALPHA : 0;
    final float finalScale=mActive ? ACTIVE_SCALE : 1.0f;
    final float initScale=mActive ? 1.0f : ACTIVE_SCALE;
    if (active) {
      KeyguardSubdivisionLayout parent=(KeyguardSubdivisionLayout)getParent();
      parent.setTopChild(parent.indexOfChild(this));
    }
    if (animate) {
      ValueAnimator va=ValueAnimator.ofFloat(0f,1f);
      va.addUpdateListener(new AnimatorUpdateListener(){
        @Override public void onAnimationUpdate(        ValueAnimator animation){
          float r=animation.getAnimatedFraction();
          float scale=(1 - r) * initScale + r * finalScale;
          int filterAlpha=(int)((1 - r) * initFilterAlpha + r * finalFilterAlpha);
          setScaleX(scale);
          setScaleY(scale);
          mUserImage.setColorFilter(Color.argb(filterAlpha,INACTIVE_COLOR,INACTIVE_COLOR,INACTIVE_COLOR));
          mUserSelector.invalidate();
        }
      }
);
      va.addListener(new AnimatorListenerAdapter(){
        @Override public void onAnimationEnd(        Animator animation){
          if (onComplete != null) {
            onComplete.run();
          }
        }
      }
);
      va.setDuration(duration);
      va.start();
    }
 else {
      setScaleX(finalScale);
      setScaleY(finalScale);
      mUserImage.setColorFilter(Color.argb(finalFilterAlpha,INACTIVE_COLOR,INACTIVE_COLOR,INACTIVE_COLOR));
      if (onComplete != null) {
        post(onComplete);
      }
    }
  }
}
