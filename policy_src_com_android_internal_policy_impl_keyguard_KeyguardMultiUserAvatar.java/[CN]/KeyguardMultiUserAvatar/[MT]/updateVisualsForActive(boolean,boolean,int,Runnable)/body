{
  final float finalAlpha=active ? mActiveAlpha : mInactiveAlpha;
  final float initAlpha=active ? mInactiveAlpha : mActiveAlpha;
  final float finalScale=active ? mActiveScale : 1.0f;
  final float initScale=getScaleX();
  final int finalTextBgAlpha=active ? (int)(mActiveTextBacgroundAlpha * 255) : (int)(mInactiveTextBacgroundAlpha * 255);
  final int initTextBgAlpha=active ? (int)(mInactiveTextBacgroundAlpha * 255) : (int)(mActiveTextBacgroundAlpha * 255);
  int textColor=active ? mActiveTextColor : mInactiveTextColor;
  mUserName.setTextColor(textColor);
  if (animate && mTouched) {
    ValueAnimator va=ValueAnimator.ofFloat(0f,1f);
    va.addUpdateListener(new AnimatorUpdateListener(){
      @Override public void onAnimationUpdate(      ValueAnimator animation){
        float r=animation.getAnimatedFraction();
        float scale=(1 - r) * initScale + r * finalScale;
        float alpha=(1 - r) * initAlpha + r * finalAlpha;
        int textBgAlpha=(int)((1 - r) * initTextBgAlpha + r * finalTextBgAlpha);
        setScaleX(scale);
        setScaleY(scale);
        mUserImage.setAlpha(alpha);
        mUserName.setBackgroundColor(Color.argb(textBgAlpha,0,0,0));
        mUserSelector.invalidate();
      }
    }
);
    va.addListener(new AnimatorListenerAdapter(){
      @Override public void onAnimationEnd(      Animator animation){
        if (onComplete != null) {
          onComplete.run();
        }
      }
    }
);
    va.setDuration(duration);
    va.start();
  }
 else {
    setScaleX(finalScale);
    setScaleY(finalScale);
    mUserImage.setAlpha(finalAlpha);
    mUserName.setBackgroundColor(Color.argb(finalTextBgAlpha,0,0,0));
    if (onComplete != null) {
      post(onComplete);
    }
  }
  mTouched=true;
}
