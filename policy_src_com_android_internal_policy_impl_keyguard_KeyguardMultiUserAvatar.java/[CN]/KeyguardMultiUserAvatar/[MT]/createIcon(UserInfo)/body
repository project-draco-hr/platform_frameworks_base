{
  Bitmap icon=BitmapFactory.decodeFile(rewriteIconPath(user.iconPath));
  final int width=icon.getWidth();
  final int height=icon.getHeight();
  final int square=Math.min(width,height);
  final float size=(float)Math.floor(mIconSize * mActiveScale);
  final Bitmap output=Bitmap.createBitmap((int)size,(int)size,Bitmap.Config.ARGB_8888);
  final Canvas canvas=new Canvas(output);
  final Rect srcRect=new Rect((width - square) / 2,(height - square) / 2,square,square);
  final RectF dstRect=new RectF(0f,0f,size,size);
  final RectF frameRect=new RectF(0f,0f,size - mStroke,size - mStroke);
  frameRect.offset(mStroke / 2f,mStroke / 2f);
  final Path fillPath=new Path();
  fillPath.addArc(dstRect,0f,360f);
  final Path framePath=new Path();
  framePath.addArc(frameRect,0f,360f);
  canvas.drawARGB(0,0,0,0);
  final Paint paint=new Paint();
  paint.setAntiAlias(true);
  paint.setStrokeWidth(mStroke);
  paint.setColor(mMatteColor);
  paint.setStyle(Paint.Style.FILL);
  canvas.drawPath(fillPath,paint);
  paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));
  canvas.drawBitmap(icon,srcRect,dstRect,paint);
  paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_ATOP));
  paint.setStyle(Paint.Style.STROKE);
  paint.setColor(mFrameColor);
  paint.setShadowLayer(mShadowRadius,mShadowDx,mShadowDy,mFrameShadowColor);
  canvas.drawPath(framePath,paint);
  return new BitmapDrawable(output);
}
