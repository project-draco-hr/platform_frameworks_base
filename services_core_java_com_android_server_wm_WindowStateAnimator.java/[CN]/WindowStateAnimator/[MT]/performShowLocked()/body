{
  if (mWin.isHiddenFromUserLocked()) {
    if (DEBUG_VISIBILITY)     Slog.w(TAG,"hiding " + mWin + ", belonging to "+ mWin.mOwnerUid);
    mWin.hideLw(false);
    return false;
  }
  if (DEBUG_VISIBILITY || (DEBUG_STARTING_WINDOW && mWin.mAttrs.type == WindowManager.LayoutParams.TYPE_APPLICATION_STARTING)) {
    Slog.v(TAG,"performShow on " + this + ": mDrawState="+ drawStateToString()+ " readyForDisplay="+ mWin.isReadyForDisplayIgnoringKeyguard()+ " starting="+ (mWin.mAttrs.type == TYPE_APPLICATION_STARTING)+ " during animation: policyVis="+ mWin.mPolicyVisibility+ " attHidden="+ mWin.mAttachedHidden+ " tok.hiddenRequested="+ (mWin.mAppToken != null ? mWin.mAppToken.hiddenRequested : false)+ " tok.hidden="+ (mWin.mAppToken != null ? mWin.mAppToken.hidden : false)+ " animating="+ mAnimating+ " tok animating="+ (mAppAnimator != null ? mAppAnimator.animating : false)+ " Callers="+ Debug.getCallers(3));
  }
  if (mDrawState == READY_TO_SHOW && mWin.isReadyForDisplayIgnoringKeyguard()) {
    if (SHOW_TRANSACTIONS || DEBUG_ORIENTATION)     WindowManagerService.logSurface(mWin,"SHOW (performShowLocked)",null);
    if (DEBUG_VISIBILITY || (DEBUG_STARTING_WINDOW && mWin.mAttrs.type == WindowManager.LayoutParams.TYPE_APPLICATION_STARTING)) {
      Slog.v(TAG,"Showing " + this + " during animation: policyVis="+ mWin.mPolicyVisibility+ " attHidden="+ mWin.mAttachedHidden+ " tok.hiddenRequested="+ (mWin.mAppToken != null ? mWin.mAppToken.hiddenRequested : false)+ " tok.hidden="+ (mWin.mAppToken != null ? mWin.mAppToken.hidden : false)+ " animating="+ mAnimating+ " tok animating="+ (mAppAnimator != null ? mAppAnimator.animating : false));
    }
    mService.enableScreenIfNeededLocked();
    applyEnterAnimationLocked();
    mLastAlpha=-1;
    if (DEBUG_SURFACE_TRACE || DEBUG_ANIM)     Slog.v(TAG,"performShowLocked: mDrawState=HAS_DRAWN in " + this);
    mDrawState=HAS_DRAWN;
    mService.scheduleAnimationLocked();
    int i=mWin.mChildWindows.size();
    while (i > 0) {
      i--;
      WindowState c=mWin.mChildWindows.get(i);
      if (c.mAttachedHidden) {
        c.mAttachedHidden=false;
        if (c.mWinAnimator.mSurfaceControl != null) {
          c.mWinAnimator.performShowLocked();
          final DisplayContent displayContent=c.getDisplayContent();
          if (displayContent != null) {
            displayContent.layoutNeeded=true;
          }
        }
      }
    }
    if (mWin.mAttrs.type != TYPE_APPLICATION_STARTING && mWin.mAppToken != null) {
      mWin.mAppToken.firstWindowDrawn=true;
      if (mWin.mAppToken.startingData != null) {
        if (WindowManagerService.DEBUG_STARTING_WINDOW || WindowManagerService.DEBUG_ANIM)         Slog.v(TAG,"Finish starting " + mWin.mToken + ": first real window is shown, no animation");
        clearAnimation();
        mService.mFinishedStarting.add(mWin.mAppToken);
        mService.mH.sendEmptyMessage(H.FINISHED_STARTING);
      }
      mWin.mAppToken.updateReportedVisibilityLocked();
    }
    return true;
  }
  return false;
}
