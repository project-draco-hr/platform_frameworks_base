{
  if (WindowManagerService.DEBUG_ANIM)   Slog.v(TAG,"finishExit in " + this + ": exiting="+ mWin.mExiting+ " remove="+ mWin.mRemoveOnExit+ " windowAnimating="+ isWindowAnimating());
  final int N=mWin.mChildWindows.size();
  for (int i=0; i < N; i++) {
    mWin.mChildWindows.get(i).mWinAnimator.finishExit();
  }
  if (mEnteringAnimation && mWin.mAppToken == null) {
    try {
      mEnteringAnimation=false;
      mWin.mClient.dispatchWindowShown();
    }
 catch (    RemoteException e) {
    }
  }
  if (!isWindowAnimating()) {
    if (mService.mAccessibilityController != null && mWin.getDisplayId() == Display.DEFAULT_DISPLAY) {
      mService.mAccessibilityController.onSomeWindowResizedOrMovedLocked();
    }
  }
  if (!mWin.mExiting) {
    return;
  }
  if (isWindowAnimating()) {
    return;
  }
  if (WindowManagerService.localLOGV)   Slog.v(TAG,"Exit animation finished in " + this + ": remove="+ mWin.mRemoveOnExit);
  if (mSurfaceControl != null) {
    mService.mDestroySurface.add(mWin);
    mWin.mDestroying=true;
    if (SHOW_TRANSACTIONS)     WindowManagerService.logSurface(mWin,"HIDE (finishExit)",null);
    hide();
  }
  mWin.mExiting=false;
  if (mWin.mRemoveOnExit) {
    mService.mPendingRemove.add(mWin);
    mWin.mRemoveOnExit=false;
  }
  mAnimator.hideWallpapersLocked(mWin);
}
