{
  if (DEBUG_ANIM)   Slog.v(TAG,"finishExit in " + this + ": exiting="+ mWin.mExiting+ " remove="+ mWin.mRemoveOnExit+ " windowAnimating="+ isWindowAnimating());
  final int N=mWin.mChildWindows.size();
  for (int i=0; i < N; i++) {
    mWin.mChildWindows.get(i).mWinAnimator.finishExit();
  }
  if (mEnteringAnimation) {
    mEnteringAnimation=false;
    mService.requestTraversal();
    if (mWin.mAppToken == null) {
      try {
        mWin.mClient.dispatchWindowShown();
      }
 catch (      RemoteException e) {
      }
    }
  }
  if (!isWindowAnimating()) {
    if (mService.mAccessibilityController != null && mWin.getDisplayId() == DEFAULT_DISPLAY) {
      mService.mAccessibilityController.onSomeWindowResizedOrMovedLocked();
    }
  }
  if (!mWin.mExiting) {
    return;
  }
  if (isWindowAnimating()) {
    return;
  }
  if (WindowManagerService.localLOGV)   Slog.v(TAG,"Exit animation finished in " + this + ": remove="+ mWin.mRemoveOnExit);
  mWin.mDestroying=true;
  if (mWin.mAppToken != null) {
    if (hasSurface()) {
      hide("finishExit");
    }
    mWin.mAppToken.destroySurfaces();
  }
 else {
    if (hasSurface()) {
      mService.mDestroySurface.add(mWin);
      hide("finishExit");
    }
    mWin.mExiting=false;
    if (mWin.mRemoveOnExit) {
      mService.mPendingRemove.add(mWin);
      mWin.mRemoveOnExit=false;
    }
  }
  mWallpaperControllerLocked.hideWallpapers(mWin);
}
