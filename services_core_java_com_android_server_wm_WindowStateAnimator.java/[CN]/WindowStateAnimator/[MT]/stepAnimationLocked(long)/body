{
  mWasAnimating=mAnimating;
  final DisplayContent displayContent=mWin.getDisplayContent();
  if (displayContent != null && mService.okToDisplay()) {
    if (mWin.isDrawnLw() && mAnimation != null) {
      mHasTransformation=true;
      mHasLocalTransformation=true;
      if (!mLocalAnimating) {
        if (DEBUG_ANIM)         Slog.v(TAG,"Starting animation in " + this + " @ "+ currentTime+ ": ww="+ mWin.mFrame.width()+ " wh="+ mWin.mFrame.height()+ " dx="+ mAnimDx+ " dy="+ mAnimDy+ " scale="+ mService.getWindowAnimationScaleLocked());
        final DisplayInfo displayInfo=displayContent.getDisplayInfo();
        if (mAnimateMove) {
          mAnimateMove=false;
          mAnimation.initialize(mWin.mFrame.width(),mWin.mFrame.height(),mAnimDx,mAnimDy);
        }
 else {
          mAnimation.initialize(mWin.mFrame.width(),mWin.mFrame.height(),displayInfo.appWidth,displayInfo.appHeight);
        }
        mAnimDx=displayInfo.appWidth;
        mAnimDy=displayInfo.appHeight;
        mAnimation.setStartTime(mAnimationStartTime != -1 ? mAnimationStartTime : currentTime);
        mLocalAnimating=true;
        mAnimating=true;
      }
      if ((mAnimation != null) && mLocalAnimating) {
        mLastAnimationTime=currentTime;
        if (stepAnimation(currentTime)) {
          return true;
        }
      }
      if (DEBUG_ANIM)       Slog.v(TAG,"Finished animation in " + this + " @ "+ currentTime);
    }
    mHasLocalTransformation=false;
    if ((!mLocalAnimating || mAnimationIsEntrance) && mAppAnimator != null && mAppAnimator.animation != null) {
      mAnimating=true;
      mHasTransformation=true;
      mTransformation.clear();
      return false;
    }
 else     if (mHasTransformation) {
      mAnimating=true;
    }
 else     if (isAnimating()) {
      mAnimating=true;
    }
  }
 else   if (mAnimation != null) {
    mAnimating=true;
  }
  if (!mAnimating && !mLocalAnimating) {
    return false;
  }
  if (DEBUG_ANIM)   Slog.v(TAG,"Animation done in " + this + ": exiting="+ mWin.mExiting+ ", reportedVisible="+ (mWin.mAppToken != null ? mWin.mAppToken.reportedVisible : false));
  mAnimating=false;
  mKeyguardGoingAwayAnimation=false;
  mLocalAnimating=false;
  if (mAnimation != null) {
    mAnimation.cancel();
    mAnimation=null;
  }
  if (mAnimator.mWindowDetachedWallpaper == mWin) {
    mAnimator.mWindowDetachedWallpaper=null;
  }
  mAnimLayer=mWin.mLayer;
  if (mWin.mIsImWindow) {
    mAnimLayer+=mService.mInputMethodAnimLayerAdjustment;
  }
 else   if (mIsWallpaper) {
    mAnimLayer+=mWallpaperControllerLocked.getAnimLayerAdjustment();
  }
  if (DEBUG_LAYERS)   Slog.v(TAG,"Stepping win " + this + " anim layer: "+ mAnimLayer);
  mHasTransformation=false;
  mHasLocalTransformation=false;
  mWin.checkPolicyVisibilityChange();
  mTransformation.clear();
  if (mDrawState == HAS_DRAWN && mWin.mAttrs.type == WindowManager.LayoutParams.TYPE_APPLICATION_STARTING && mWin.mAppToken != null && mWin.mAppToken.firstWindowDrawn && mWin.mAppToken.startingData != null) {
    if (DEBUG_STARTING_WINDOW)     Slog.v(TAG,"Finish starting " + mWin.mToken + ": first real window done animating");
    mService.mFinishedStarting.add(mWin.mAppToken);
    mService.mH.sendEmptyMessage(H.FINISHED_STARTING);
  }
 else   if (mAttrType == LayoutParams.TYPE_STATUS_BAR && mWin.mPolicyVisibility) {
    if (displayContent != null) {
      displayContent.layoutNeeded=true;
    }
  }
  finishExit();
  final int displayId=mWin.getDisplayId();
  mAnimator.setPendingLayoutChanges(displayId,WindowManagerPolicy.FINISH_LAYOUT_REDO_ANIM);
  if (DEBUG_LAYOUT_REPEATS)   mService.mWindowPlacerLocked.debugLayoutRepeats("WindowStateAnimator",mAnimator.getPendingLayoutChanges(displayId));
  if (mWin.mAppToken != null) {
    mWin.mAppToken.updateReportedVisibilityLocked();
  }
  return false;
}
