{
  final WindowState w=mWin;
  if (mSurfaceControl == null) {
    if (DEBUG_ANIM || DEBUG_ORIENTATION)     Slog.i(TAG,"createSurface " + this + ": mDrawState=DRAW_PENDING");
    mDrawState=DRAW_PENDING;
    if (w.mAppToken != null) {
      if (w.mAppToken.mAppAnimator.animation == null) {
        w.mAppToken.allDrawn=false;
        w.mAppToken.deferClearAllDrawn=false;
      }
 else {
        w.mAppToken.deferClearAllDrawn=true;
      }
    }
    mService.makeWindowFreezingScreenIfNeededLocked(w);
    int flags=SurfaceControl.HIDDEN;
    final WindowManager.LayoutParams attrs=w.mAttrs;
    if ((attrs.flags & WindowManager.LayoutParams.FLAG_SECURE) != 0) {
      flags|=SurfaceControl.SECURE;
    }
    if (mService.isScreenCaptureDisabledLocked(UserHandle.getUserId(mWin.mOwnerUid))) {
      flags|=SurfaceControl.SECURE;
    }
    int width;
    int height;
    if ((attrs.flags & LayoutParams.FLAG_SCALED) != 0) {
      width=w.mRequestedWidth;
      height=w.mRequestedHeight;
    }
 else {
      width=w.mCompatFrame.width();
      height=w.mCompatFrame.height();
    }
    if (width <= 0) {
      width=1;
    }
    if (height <= 0) {
      height=1;
    }
    float left=w.mFrame.left + w.mXOffset;
    float top=w.mFrame.top + w.mYOffset;
    width+=attrs.surfaceInsets.left + attrs.surfaceInsets.right;
    height+=attrs.surfaceInsets.top + attrs.surfaceInsets.bottom;
    left-=attrs.surfaceInsets.left;
    top-=attrs.surfaceInsets.top;
    if (DEBUG_VISIBILITY) {
      Slog.v(TAG,"Creating surface in session " + mSession.mSurfaceSession + " window "+ this+ " w="+ width+ " h="+ height+ " x="+ left+ " y="+ top+ " format="+ attrs.format+ " flags="+ flags);
    }
    mSurfaceShown=false;
    mSurfaceLayer=0;
    mSurfaceAlpha=0;
    mSurfaceX=0;
    mSurfaceY=0;
    w.mLastSystemDecorRect.set(0,0,0,0);
    try {
      mSurfaceW=width;
      mSurfaceH=height;
      final boolean isHwAccelerated=(attrs.flags & WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED) != 0;
      final int format=isHwAccelerated ? PixelFormat.TRANSLUCENT : attrs.format;
      if (!PixelFormat.formatHasAlpha(attrs.format)) {
        flags|=SurfaceControl.OPAQUE;
      }
      if (DEBUG_SURFACE_TRACE) {
        mSurfaceControl=new SurfaceTrace(mSession.mSurfaceSession,attrs.getTitle().toString(),width,height,format,flags);
      }
 else {
        mSurfaceControl=new SurfaceControl(mSession.mSurfaceSession,attrs.getTitle().toString(),width,height,format,flags);
      }
      w.mHasSurface=true;
      if (SHOW_TRANSACTIONS || SHOW_SURFACE_ALLOC) {
        Slog.i(TAG,"  CREATE SURFACE " + mSurfaceControl + " IN SESSION "+ mSession.mSurfaceSession+ ": pid="+ mSession.mPid+ " format="+ attrs.format+ " flags=0x"+ Integer.toHexString(flags)+ " / "+ this);
      }
    }
 catch (    OutOfResourcesException e) {
      w.mHasSurface=false;
      Slog.w(TAG,"OutOfResourcesException creating surface");
      mService.reclaimSomeSurfaceMemoryLocked(this,"create",true);
      mDrawState=NO_SURFACE;
      return null;
    }
catch (    Exception e) {
      w.mHasSurface=false;
      Slog.e(TAG,"Exception creating surface",e);
      mDrawState=NO_SURFACE;
      return null;
    }
    if (WindowManagerService.localLOGV) {
      Slog.v(TAG,"Got surface: " + mSurfaceControl + ", set left="+ w.mFrame.left+ " top="+ w.mFrame.top+ ", animLayer="+ mAnimLayer);
    }
    if (SHOW_LIGHT_TRANSACTIONS) {
      Slog.i(TAG,">>> OPEN TRANSACTION createSurfaceLocked");
      WindowManagerService.logSurface(w,"CREATE pos=(" + w.mFrame.left + ","+ w.mFrame.top+ ") ("+ w.mCompatFrame.width()+ "x"+ w.mCompatFrame.height()+ "), layer="+ mAnimLayer+ " HIDE",null);
    }
    SurfaceControl.openTransaction();
    try {
      mSurfaceX=left;
      mSurfaceY=top;
      try {
        mSurfaceControl.setPosition(left,top);
        mSurfaceLayer=mAnimLayer;
        final DisplayContent displayContent=w.getDisplayContent();
        if (displayContent != null) {
          mSurfaceControl.setLayerStack(displayContent.getDisplay().getLayerStack());
        }
        mSurfaceControl.setLayer(mAnimLayer);
        mSurfaceControl.setAlpha(0);
        mSurfaceShown=false;
      }
 catch (      RuntimeException e) {
        Slog.w(TAG,"Error creating surface in " + w,e);
        mService.reclaimSomeSurfaceMemoryLocked(this,"create-init",true);
      }
      mLastHidden=true;
    }
  finally {
      SurfaceControl.closeTransaction();
      if (SHOW_LIGHT_TRANSACTIONS)       Slog.i(TAG,"<<< CLOSE TRANSACTION createSurfaceLocked");
    }
    if (WindowManagerService.localLOGV)     Slog.v(TAG,"Created surface " + this);
  }
  return mSurfaceControl;
}
