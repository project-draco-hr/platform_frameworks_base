{
  final WindowState w=mWin;
  if (mSurfaceController == null) {
    if (DEBUG_ANIM || DEBUG_ORIENTATION)     Slog.i(TAG,"createSurface " + this + ": mDrawState=DRAW_PENDING");
    mDrawState=DRAW_PENDING;
    if (w.mAppToken != null) {
      if (w.mAppToken.mAppAnimator.animation == null) {
        w.mAppToken.allDrawn=false;
        w.mAppToken.deferClearAllDrawn=false;
      }
 else {
        w.mAppToken.deferClearAllDrawn=true;
      }
    }
    mService.makeWindowFreezingScreenIfNeededLocked(w);
    int flags=SurfaceControl.HIDDEN;
    final WindowManager.LayoutParams attrs=w.mAttrs;
    if (mService.isSecureLocked(w)) {
      flags|=SurfaceControl.SECURE;
    }
    float left=w.mFrame.left + w.mXOffset;
    float top=w.mFrame.top + w.mYOffset;
    int width;
    int height;
    if ((attrs.flags & LayoutParams.FLAG_SCALED) != 0) {
      width=w.mRequestedWidth;
      height=w.mRequestedHeight;
    }
 else {
      final DisplayInfo displayInfo=w.getDisplayInfo();
      if (displayInfo != null && w.isDragResizing()) {
        left=0;
        top=0;
        width=displayInfo.logicalWidth;
        height=displayInfo.logicalHeight;
      }
 else {
        width=w.mCompatFrame.width();
        height=w.mCompatFrame.height();
      }
    }
    if (width <= 0) {
      width=1;
    }
    if (height <= 0) {
      height=1;
    }
    width+=attrs.surfaceInsets.left + attrs.surfaceInsets.right;
    height+=attrs.surfaceInsets.top + attrs.surfaceInsets.bottom;
    left-=attrs.surfaceInsets.left;
    top-=attrs.surfaceInsets.top;
    if (DEBUG_VISIBILITY) {
      Slog.v(TAG,"Creating surface in session " + mSession.mSurfaceSession + " window "+ this+ " w="+ width+ " h="+ height+ " x="+ left+ " y="+ top+ " format="+ attrs.format+ " flags="+ flags);
    }
    w.mLastSystemDecorRect.set(0,0,0,0);
    mHasClipRect=false;
    mClipRect.set(0,0,0,0);
    mLastClipRect.set(0,0,0,0);
    try {
      final boolean isHwAccelerated=(attrs.flags & FLAG_HARDWARE_ACCELERATED) != 0;
      final int format=isHwAccelerated ? PixelFormat.TRANSLUCENT : attrs.format;
      if (!PixelFormat.formatHasAlpha(attrs.format) && attrs.surfaceInsets.left == 0 && attrs.surfaceInsets.top == 0 && attrs.surfaceInsets.right == 0 && attrs.surfaceInsets.bottom == 0 && !w.isDragResizing()) {
        flags|=SurfaceControl.OPAQUE;
      }
      mSurfaceController=new WindowSurfaceController(mSession.mSurfaceSession,attrs.getTitle().toString(),width,height,format,flags,this);
      w.mHasSurface=true;
      if (SHOW_TRANSACTIONS || SHOW_SURFACE_ALLOC) {
        Slog.i(TAG,"  CREATE SURFACE " + mSurfaceController + " IN SESSION "+ mSession.mSurfaceSession+ ": pid="+ mSession.mPid+ " format="+ attrs.format+ " flags=0x"+ Integer.toHexString(flags)+ " / "+ this);
      }
    }
 catch (    OutOfResourcesException e) {
      w.mHasSurface=false;
      Slog.w(TAG,"OutOfResourcesException creating surface");
      mService.reclaimSomeSurfaceMemoryLocked(this,"create",true);
      mDrawState=NO_SURFACE;
      return null;
    }
catch (    Exception e) {
      w.mHasSurface=false;
      Slog.e(TAG,"Exception creating surface",e);
      mDrawState=NO_SURFACE;
      return null;
    }
    if (WindowManagerService.localLOGV) {
      Slog.v(TAG,"Got surface: " + mSurfaceController + ", set left="+ w.mFrame.left+ " top="+ w.mFrame.top+ ", animLayer="+ mAnimLayer);
    }
    if (SHOW_LIGHT_TRANSACTIONS) {
      Slog.i(TAG,">>> OPEN TRANSACTION createSurfaceLocked");
      WindowManagerService.logSurface(w,"CREATE pos=(" + w.mFrame.left + ","+ w.mFrame.top+ ") ("+ w.mCompatFrame.width()+ "x"+ w.mCompatFrame.height()+ "), layer="+ mAnimLayer+ " HIDE",null);
    }
    final int layerStack=w.getDisplayContent().getDisplay().getLayerStack();
    if (WindowManagerService.SHOW_TRANSACTIONS)     WindowManagerService.logSurface(w,"POS " + left + ", "+ top,null);
    mSurfaceController.setPositionAndLayer(left,top,layerStack,mAnimLayer);
    mLastHidden=true;
    if (WindowManagerService.localLOGV)     Slog.v(TAG,"Created surface " + this);
  }
  return mSurfaceController;
}
