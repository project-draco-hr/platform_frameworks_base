{
  final AppWindowToken wtoken=mWin.mAppToken;
  if (wtoken != null) {
    wtoken.mAnimatingWithSavedSurface=false;
    if (mWin == wtoken.startingWindow) {
      wtoken.startingDisplayed=false;
    }
  }
  mWin.mSurfaceSaved=false;
  if (mSurfaceController != null) {
    int i=mWin.mChildWindows.size();
    while (!mDestroyPreservedSurfaceUponRedraw && i > 0) {
      i--;
      WindowState c=mWin.mChildWindows.get(i);
      c.mAttachedHidden=true;
    }
    try {
      if (DEBUG_VISIBILITY) {
        RuntimeException e=null;
        if (!HIDE_STACK_CRAWLS) {
          e=new RuntimeException();
          e.fillInStackTrace();
        }
        Slog.w(TAG,"Window " + this + " destroying surface "+ mSurfaceController+ ", session "+ mSession,e);
      }
      if (mSurfaceDestroyDeferred) {
        if (mSurfaceController != null && mPendingDestroySurface != mSurfaceController) {
          if (mPendingDestroySurface != null) {
            if (SHOW_TRANSACTIONS || SHOW_SURFACE_ALLOC) {
              RuntimeException e=null;
              if (!HIDE_STACK_CRAWLS) {
                e=new RuntimeException();
                e.fillInStackTrace();
              }
              WindowManagerService.logSurface(mWin,"DESTROY PENDING",e);
            }
            mPendingDestroySurface.destroyInTransaction();
          }
          mPendingDestroySurface=mSurfaceController;
        }
      }
 else {
        if (SHOW_TRANSACTIONS || SHOW_SURFACE_ALLOC) {
          RuntimeException e=null;
          if (!HIDE_STACK_CRAWLS) {
            e=new RuntimeException();
            e.fillInStackTrace();
          }
          WindowManagerService.logSurface(mWin,"DESTROY",null);
        }
        destroySurface();
      }
      if (!(mSurfaceDestroyDeferred && mDestroyPreservedSurfaceUponRedraw)) {
        mWallpaperControllerLocked.hideWallpapers(mWin);
      }
    }
 catch (    RuntimeException e) {
      Slog.w(TAG,"Exception thrown when destroying Window " + this + " surface "+ mSurfaceController+ " session "+ mSession+ ": "+ e.toString());
    }
    mWin.setHasSurface(false);
    if (mSurfaceController != null) {
      mSurfaceController.setShown(false);
    }
    mSurfaceController=null;
    mDrawState=NO_SURFACE;
  }
}
