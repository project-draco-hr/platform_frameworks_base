{
  final Task task=w.getTask();
  if (task == null || !task.cropWindowsToStackBounds()) {
    return;
  }
  final int stackClip=resolveStackClip();
  if (isAnimating() && stackClip == STACK_CLIP_NONE) {
    return;
  }
  final WindowState winShowWhenLocked=(WindowState)mPolicy.getWinShowWhenLockedLw();
  if (w == winShowWhenLocked) {
    return;
  }
  final TaskStack stack=task.mStack;
  stack.getDimBounds(mTmpStackBounds);
  final int frameX=isFreeformResizing ? (int)mSurfaceController.getX() : w.mFrame.left + mWin.mXOffset - w.getAttrs().surfaceInsets.left;
  final int frameY=isFreeformResizing ? (int)mSurfaceController.getY() : w.mFrame.top + mWin.mYOffset - w.getAttrs().surfaceInsets.top;
  final boolean useFinalClipRect=isAnimating() && stackClip == STACK_CLIP_AFTER_ANIM;
  if (useFinalClipRect) {
    finalClipRect.set(mTmpStackBounds);
  }
 else {
    clipRect.left=Math.max(0,Math.max(mTmpStackBounds.left,frameX + clipRect.left) - frameX);
    clipRect.top=Math.max(0,Math.max(mTmpStackBounds.top,frameY + clipRect.top) - frameY);
    clipRect.right=Math.max(0,Math.min(mTmpStackBounds.right,frameX + clipRect.right) - frameX);
    clipRect.bottom=Math.max(0,Math.min(mTmpStackBounds.bottom,frameY + clipRect.bottom) - frameY);
  }
}
