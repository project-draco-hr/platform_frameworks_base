{
  if (mService.okToDisplay()) {
    if (animation == sDummyAnimation) {
      return false;
    }
    if ((mAppToken.allDrawn || animating || mAppToken.startingDisplayed) && animation != null) {
      if (!animating) {
        if (DEBUG_ANIM)         Slog.v(TAG,"Starting animation in " + mAppToken + " @ "+ currentTime+ " scale="+ mService.getTransitionAnimationScaleLocked()+ " allDrawn="+ mAppToken.allDrawn+ " animating="+ animating);
        long correction=getStartTimeCorrection();
        animation.setStartTime(currentTime + correction);
        animating=true;
        if (thumbnail != null) {
          thumbnail.show();
          thumbnailAnimation.setStartTime(currentTime + correction);
        }
        mSkipFirstFrame=false;
      }
      if (stepAnimation(currentTime)) {
        if (thumbnail != null) {
          stepThumbnailAnimation(currentTime);
        }
        return true;
      }
    }
  }
 else   if (animation != null) {
    animating=true;
    animation=null;
  }
  hasTransformation=false;
  if (!animating && animation == null) {
    return false;
  }
  mAnimator.setAppLayoutChanges(this,WindowManagerPolicy.FINISH_LAYOUT_REDO_ANIM,"AppWindowToken",displayId);
  clearAnimation();
  animating=false;
  if (animLayerAdjustment != 0) {
    animLayerAdjustment=0;
    updateLayers();
  }
  if (mService.mInputMethodTarget != null && mService.mInputMethodTarget.mAppToken == mAppToken) {
    mService.moveInputMethodWindowsIfNeededLocked(true);
  }
  if (DEBUG_ANIM)   Slog.v(TAG,"Animation done in " + mAppToken + ": reportedVisible="+ mAppToken.reportedVisible);
  transformation.clear();
  final int numAllAppWinAnimators=mAllAppWinAnimators.size();
  for (int i=0; i < numAllAppWinAnimators; i++) {
    mAllAppWinAnimators.get(i).finishExit();
  }
  mService.mAppTransition.notifyAppTransitionFinishedLocked(mAppToken.token);
  return false;
}
