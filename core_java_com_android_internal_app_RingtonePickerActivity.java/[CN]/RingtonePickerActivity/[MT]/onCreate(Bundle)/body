{
  super.onCreate(savedInstanceState);
  mHandler=new Handler();
  Intent intent=getIntent();
  mHasDefaultItem=intent.getBooleanExtra(RingtoneManager.EXTRA_RINGTONE_SHOW_DEFAULT,true);
  mUriForDefaultItem=intent.getParcelableExtra(RingtoneManager.EXTRA_RINGTONE_DEFAULT_URI);
  if (mUriForDefaultItem == null) {
    mUriForDefaultItem=Settings.System.DEFAULT_RINGTONE_URI;
  }
  mHasSilentItem=intent.getBooleanExtra(RingtoneManager.EXTRA_RINGTONE_SHOW_SILENT,true);
  mRingtoneManager=new RingtoneManager(this);
  boolean includeDrm=intent.getBooleanExtra(RingtoneManager.EXTRA_RINGTONE_INCLUDE_DRM,true);
  mRingtoneManager.setIncludeDrm(includeDrm);
  int types=intent.getIntExtra(RingtoneManager.EXTRA_RINGTONE_TYPE,-1);
  if (types != -1) {
    mRingtoneManager.setType(types);
  }
  mCursor=mRingtoneManager.getCursor();
  setVolumeControlStream(mRingtoneManager.inferStreamType());
  mExistingUri=intent.getParcelableExtra(RingtoneManager.EXTRA_RINGTONE_EXISTING_URI);
  final AlertController.AlertParams p=mAlertParams;
  p.mCursor=mCursor;
  p.mOnClickListener=mRingtoneClickListener;
  p.mLabelColumn=MediaStore.Audio.Media.TITLE;
  p.mIsSingleChoice=true;
  p.mOnItemSelectedListener=this;
  p.mPositiveButtonText=getString(com.android.internal.R.string.ok);
  p.mPositiveButtonListener=this;
  p.mNegativeButtonText=getString(com.android.internal.R.string.cancel);
  p.mPositiveButtonListener=this;
  p.mOnPrepareListViewListener=this;
  p.mTitle=intent.getCharSequenceExtra(RingtoneManager.EXTRA_RINGTONE_TITLE);
  if (p.mTitle == null) {
    p.mTitle=getString(com.android.internal.R.string.ringtone_picker_title);
  }
  setupAlert();
}
