{
  if (linkProperties == null || TextUtils.isEmpty(linkProperties.getInterfaceName())) {
    Log.e(TAG,"attempted to reverse tether with empty interface");
    return;
  }
synchronized (mLinkPropertiesLock) {
    if (mLinkProperties.getInterfaceName() != null) {
      Log.e(TAG,"attempted to reverse tether while already in process");
      return;
    }
    mLinkProperties=linkProperties;
  }
  Thread dhcpThread=new Thread(new Runnable(){
    public void run(){
      DhcpResults dhcpResults=new DhcpResults();
      boolean success=NetworkUtils.runDhcp(linkProperties.getInterfaceName(),dhcpResults);
synchronized (mLinkPropertiesLock) {
        if (linkProperties.getInterfaceName() != mLinkProperties.getInterfaceName()) {
          Log.e(TAG,"obsolete DHCP run aborted");
          return;
        }
        if (!success) {
          Log.e(TAG,"DHCP request error:" + NetworkUtils.getDhcpError());
          return;
        }
        mLinkProperties=dhcpResults.linkProperties;
synchronized (mNetworkInfoLock) {
          mNetworkInfo.setIsAvailable(true);
          mNetworkInfo.setDetailedState(DetailedState.CONNECTED,null,null);
          if (mCsHandler != null) {
            Message msg=mCsHandler.obtainMessage(EVENT_STATE_CHANGED,new NetworkInfo(mNetworkInfo));
            msg.sendToTarget();
          }
        }
        return;
      }
    }
  }
);
  dhcpThread.start();
}
