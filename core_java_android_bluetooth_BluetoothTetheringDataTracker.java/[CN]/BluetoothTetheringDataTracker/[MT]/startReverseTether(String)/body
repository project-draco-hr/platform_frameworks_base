{
  mIface=iface;
  if (DBG)   Log.d(TAG,"startReverseTether mCsHandler: " + mCsHandler);
  mDhcpThread=new Thread(new Runnable(){
    public void run(){
      if (DBG)       Log.d(TAG,"startReverseTether mCsHandler: " + mCsHandler);
      String DhcpResultName="dhcp." + mIface + ".result";
      ;
      String result="";
      if (VDBG)       Log.d(TAG,"waiting for change of sys prop dhcp result: " + DhcpResultName);
      for (int i=0; i < 30 * 5; i++) {
        try {
          Thread.sleep(200);
        }
 catch (        InterruptedException ie) {
          return;
        }
        result=SystemProperties.get(DhcpResultName);
        if (VDBG)         Log.d(TAG,"read " + DhcpResultName + ": "+ result);
        if (result.equals("failed")) {
          Log.e(TAG,"startReverseTether, failed to start dhcp service");
          return;
        }
        if (result.equals("ok")) {
          if (VDBG)           Log.d(TAG,"startReverseTether, dhcp resut: " + result);
          if (readLinkProperty(mIface)) {
            mNetworkInfo.setIsAvailable(true);
            mNetworkInfo.setDetailedState(DetailedState.CONNECTED,null,null);
            if (VDBG)             Log.d(TAG,"startReverseTether mCsHandler: " + mCsHandler);
            if (mCsHandler != null) {
              Message msg=mCsHandler.obtainMessage(EVENT_CONFIGURATION_CHANGED,mNetworkInfo);
              msg.sendToTarget();
              msg=mCsHandler.obtainMessage(EVENT_STATE_CHANGED,mNetworkInfo);
              msg.sendToTarget();
            }
          }
          return;
        }
      }
      Log.e(TAG,"startReverseTether, dhcp failed, resut: " + result);
    }
  }
);
  mDhcpThread.start();
}
