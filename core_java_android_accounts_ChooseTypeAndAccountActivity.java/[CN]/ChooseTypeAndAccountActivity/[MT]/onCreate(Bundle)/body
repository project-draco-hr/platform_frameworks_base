{
  super.onCreate(savedInstanceState);
  setContentView(R.layout.choose_type_and_account);
  final AccountManager accountManager=AccountManager.get(this);
  final HashMap<String,AuthenticatorDescription> typeToAuthDescription=new HashMap<String,AuthenticatorDescription>();
  for (  AuthenticatorDescription desc : accountManager.getAuthenticatorTypes()) {
    typeToAuthDescription.put(desc.type,desc);
  }
  Set<Account> setOfAllowableAccounts=null;
  final ArrayList<Parcelable> validAccounts=getIntent().getParcelableArrayListExtra(EXTRA_ALLOWABLE_ACCOUNTS_ARRAYLIST);
  if (validAccounts != null) {
    setOfAllowableAccounts=new HashSet<Account>(validAccounts.size());
    for (    Parcelable parcelable : validAccounts) {
      setOfAllowableAccounts.add((Account)parcelable);
    }
  }
  Set<String> setOfAllowableAccountTypes=null;
  final ArrayList<String> validAccountTypes=getIntent().getStringArrayListExtra(EXTRA_ALLOWABLE_ACCOUNT_TYPES_ARRAYLIST);
  if (validAccountTypes != null) {
    setOfAllowableAccountTypes=new HashSet<String>(validAccountTypes.size());
    for (    String type : validAccountTypes) {
      setOfAllowableAccountTypes.add(type);
    }
  }
  final Account[] accounts=accountManager.getAccounts();
  mAccountInfos=new ArrayList<AccountInfo>(accounts.length);
  for (  Account account : accounts) {
    if (setOfAllowableAccounts != null && !setOfAllowableAccounts.contains(account)) {
      continue;
    }
    if (setOfAllowableAccountTypes != null && !setOfAllowableAccountTypes.contains(account.type)) {
      continue;
    }
    mAccountInfos.add(new AccountInfo(account,getDrawableForType(typeToAuthDescription,account.type)));
  }
  if (mAccountInfos.isEmpty()) {
    startChooseAccountTypeActivity();
    return;
  }
  if (mAccountInfos.size() == 1) {
    Account account=mAccountInfos.get(0).account;
    setResultAndFinish(account.name,account.type);
    return;
  }
  ListView list=(ListView)findViewById(android.R.id.list);
  list.setAdapter(new AccountArrayAdapter(this,android.R.layout.simple_list_item_1,mAccountInfos));
  list.setChoiceMode(ListView.CHOICE_MODE_SINGLE);
  list.setTextFilterEnabled(false);
  list.setOnItemClickListener(new AdapterView.OnItemClickListener(){
    public void onItemClick(    AdapterView<?> parent,    View v,    int position,    long id){
      onListItemClick((ListView)parent,v,position,id);
    }
  }
);
  Button addAccountButton=(Button)findViewById(R.id.addAccount);
  addAccountButton.setOnClickListener(new View.OnClickListener(){
    public void onClick(    final View v){
      startChooseAccountTypeActivity();
    }
  }
);
}
