{
  super.onCreate(savedInstanceState);
  if (Log.isLoggable(TAG,Log.VERBOSE)) {
    Log.v(TAG,"ChooseTypeAndAccountActivity.onCreate(savedInstanceState=" + savedInstanceState + ")");
  }
  if (savedInstanceState != null) {
    mPendingRequest=savedInstanceState.getInt(KEY_INSTANCE_STATE_PENDING_REQUEST);
    mExistingAccounts=savedInstanceState.getParcelableArray(KEY_INSTANCE_STATE_EXISTING_ACCOUNTS);
  }
 else {
    mPendingRequest=REQUEST_NULL;
    mExistingAccounts=null;
  }
  final AccountManager accountManager=AccountManager.get(this);
  final Intent intent=getIntent();
  final String descriptionOverride=intent.getStringExtra(EXTRA_DESCRIPTION_TEXT_OVERRIDE);
  if (!TextUtils.isEmpty(descriptionOverride)) {
    ((TextView)findViewById(R.id.description)).setText(descriptionOverride);
  }
  final Account selectedAccount=(Account)intent.getParcelableExtra(EXTRA_SELECTED_ACCOUNT);
  final HashMap<String,AuthenticatorDescription> typeToAuthDescription=new HashMap<String,AuthenticatorDescription>();
  for (  AuthenticatorDescription desc : accountManager.getAuthenticatorTypes()) {
    typeToAuthDescription.put(desc.type,desc);
  }
  Set<Account> setOfAllowableAccounts=null;
  final ArrayList<Parcelable> validAccounts=intent.getParcelableArrayListExtra(EXTRA_ALLOWABLE_ACCOUNTS_ARRAYLIST);
  if (validAccounts != null) {
    setOfAllowableAccounts=new HashSet<Account>(validAccounts.size());
    for (    Parcelable parcelable : validAccounts) {
      setOfAllowableAccounts.add((Account)parcelable);
    }
  }
  Set<String> setOfRelevantAccountTypes=null;
  final String[] allowedAccountTypes=intent.getStringArrayExtra(EXTRA_ALLOWABLE_ACCOUNT_TYPES_STRING_ARRAY);
  if (allowedAccountTypes != null) {
    setOfRelevantAccountTypes=new HashSet<String>(allowedAccountTypes.length);
    Set<String> setOfAllowedAccountTypes=new HashSet<String>(allowedAccountTypes.length);
    for (    String type : allowedAccountTypes) {
      setOfAllowedAccountTypes.add(type);
    }
    AuthenticatorDescription[] descs=AccountManager.get(this).getAuthenticatorTypes();
    Set<String> supportedAccountTypes=new HashSet<String>(descs.length);
    for (    AuthenticatorDescription desc : descs) {
      supportedAccountTypes.add(desc.type);
    }
    for (    String acctType : setOfAllowedAccountTypes) {
      if (supportedAccountTypes.contains(acctType)) {
        setOfRelevantAccountTypes.add(acctType);
      }
    }
  }
  final Account[] accounts=accountManager.getAccounts();
  mAccountInfos=new ArrayList<AccountInfo>(accounts.length);
  for (  Account account : accounts) {
    if (setOfAllowableAccounts != null && !setOfAllowableAccounts.contains(account)) {
      continue;
    }
    if (setOfRelevantAccountTypes != null && !setOfRelevantAccountTypes.contains(account.type)) {
      continue;
    }
    mAccountInfos.add(new AccountInfo(account,getDrawableForType(typeToAuthDescription,account.type),account.equals(selectedAccount)));
  }
  if (mPendingRequest == REQUEST_NULL) {
    if (mAccountInfos.isEmpty()) {
      if (setOfRelevantAccountTypes.size() == 1) {
        runAddAccountForAuthenticator(setOfRelevantAccountTypes.iterator().next());
      }
 else {
        startChooseAccountTypeActivity();
      }
      return;
    }
    if (!intent.getBooleanExtra(EXTRA_ALWAYS_PROMPT_FOR_ACCOUNT,false) && mAccountInfos.size() == 1) {
      Account account=mAccountInfos.get(0).account;
      setResultAndFinish(account.name,account.type);
      return;
    }
  }
  setContentView(R.layout.choose_type_and_account);
  ListView list=(ListView)findViewById(android.R.id.list);
  list.setAdapter(new AccountArrayAdapter(this,android.R.layout.simple_list_item_1,mAccountInfos));
  list.setChoiceMode(ListView.CHOICE_MODE_SINGLE);
  list.setOnItemClickListener(new AdapterView.OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> parent,    View v,    int position,    long id){
      onListItemClick((ListView)parent,v,position,id);
    }
  }
);
  Button addAccountButton=(Button)findViewById(R.id.addAccount);
  addAccountButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    final View v){
      startChooseAccountTypeActivity();
    }
  }
);
}
