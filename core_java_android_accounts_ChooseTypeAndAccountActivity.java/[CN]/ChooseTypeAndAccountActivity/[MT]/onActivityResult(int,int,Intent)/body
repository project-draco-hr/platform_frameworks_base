{
  if (Log.isLoggable(TAG,Log.VERBOSE)) {
    if (data != null && data.getExtras() != null)     data.getExtras().keySet();
    Bundle extras=data != null ? data.getExtras() : null;
    Log.v(TAG,"ChooseTypeAndAccountActivity.onActivityResult(reqCode=" + requestCode + ", resCode="+ resultCode+ ", extras="+ extras+ ")");
  }
  mPendingRequest=REQUEST_NULL;
  if (resultCode == RESULT_CANCELED) {
    if (shouldSkipToChooseAccountTypeFlow()) {
      setResult(Activity.RESULT_CANCELED);
      finish();
    }
    return;
  }
  if (resultCode == RESULT_OK) {
    if (requestCode == REQUEST_CHOOSE_TYPE) {
      if (data != null) {
        String accountType=data.getStringExtra(AccountManager.KEY_ACCOUNT_TYPE);
        if (accountType != null) {
          runAddAccountForAuthenticator(accountType);
          return;
        }
      }
      Log.d(TAG,"ChooseTypeAndAccountActivity.onActivityResult: unable to find account " + "type, pretending the request was canceled");
    }
 else     if (requestCode == REQUEST_ADD_ACCOUNT) {
      String accountName=null;
      String accountType=null;
      if (data != null) {
        accountName=data.getStringExtra(AccountManager.KEY_ACCOUNT_NAME);
        accountType=data.getStringExtra(AccountManager.KEY_ACCOUNT_TYPE);
      }
      if (accountName == null || accountType == null) {
        Account[] currentAccounts=AccountManager.get(this).getAccounts();
        Set<Account> preExistingAccounts=new HashSet<Account>();
        for (        Parcelable accountParcel : mExistingAccounts) {
          preExistingAccounts.add((Account)accountParcel);
        }
        for (        Account account : currentAccounts) {
          if (!preExistingAccounts.contains(account)) {
            accountName=account.name;
            accountType=account.type;
            break;
          }
        }
      }
      if (accountName != null || accountType != null) {
        setResultAndFinish(accountName,accountType);
        return;
      }
    }
    Log.d(TAG,"ChooseTypeAndAccountActivity.onActivityResult: unable to find added " + "account, pretending the request was canceled");
  }
  if (Log.isLoggable(TAG,Log.VERBOSE)) {
    Log.v(TAG,"ChooseTypeAndAccountActivity.onActivityResult: canceled");
  }
  setResult(Activity.RESULT_CANCELED);
  finish();
}
