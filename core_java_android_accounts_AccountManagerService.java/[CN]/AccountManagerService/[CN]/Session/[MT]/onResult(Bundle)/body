{
  mNumResults++;
  Intent intent=null;
  if (result != null && (intent=result.getParcelable(AccountManager.KEY_INTENT)) != null) {
    PackageManager pm=mContext.getPackageManager();
    ResolveInfo resolveInfo=pm.resolveActivity(intent,0);
    int targetUid=resolveInfo.activityInfo.applicationInfo.uid;
    int authenticatorUid=Binder.getCallingUid();
    if (PackageManager.SIGNATURE_MATCH != pm.checkSignatures(authenticatorUid,targetUid)) {
      throw new SecurityException("Activity to be started with KEY_INTENT must " + "share Authenticator's signatures");
    }
  }
  if (result != null && !TextUtils.isEmpty(result.getString(AccountManager.KEY_AUTHTOKEN))) {
    String accountName=result.getString(AccountManager.KEY_ACCOUNT_NAME);
    String accountType=result.getString(AccountManager.KEY_ACCOUNT_TYPE);
    if (!TextUtils.isEmpty(accountName) && !TextUtils.isEmpty(accountType)) {
      Account account=new Account(accountName,accountType);
      cancelNotification(getSigninRequiredNotificationId(mAccounts,account));
    }
  }
  IAccountManagerResponse response;
  if (mExpectActivityLaunch && result != null && result.containsKey(AccountManager.KEY_INTENT)) {
    response=mResponse;
  }
 else {
    response=getResponseAndClose();
  }
  if (response != null) {
    try {
      if (result == null) {
        if (Log.isLoggable(TAG,Log.VERBOSE)) {
          Log.v(TAG,getClass().getSimpleName() + " calling onError() on response " + response);
        }
        response.onError(AccountManager.ERROR_CODE_INVALID_RESPONSE,"null bundle returned");
      }
 else {
        if (mStripAuthTokenFromResult) {
          result.remove(AccountManager.KEY_AUTHTOKEN);
        }
        if (Log.isLoggable(TAG,Log.VERBOSE)) {
          Log.v(TAG,getClass().getSimpleName() + " calling onResult() on response " + response);
        }
        response.onResult(result);
      }
    }
 catch (    RemoteException e) {
      if (Log.isLoggable(TAG,Log.VERBOSE)) {
        Log.v(TAG,"failure while notifying response",e);
      }
    }
  }
}
