{
  mContext=context;
  mLocationManager=locationManager;
  PowerManager powerManager=(PowerManager)mContext.getSystemService(Context.POWER_SERVICE);
  mWakeLock=powerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,WAKELOCK_KEY);
  mAlarmManager=(AlarmManager)mContext.getSystemService(Context.ALARM_SERVICE);
  mWakeupIntent=PendingIntent.getBroadcast(mContext,0,new Intent(ALARM_WAKEUP),0);
  IntentFilter intentFilter=new IntentFilter();
  intentFilter.addAction(ALARM_WAKEUP);
  intentFilter.addAction(TelephonyIntents.ACTION_ANY_DATA_CONNECTION_STATE_CHANGED);
  context.registerReceiver(mBroadcastReciever,intentFilter);
  mConnMgr=(ConnectivityManager)context.getSystemService(Context.CONNECTIVITY_SERVICE);
  mBatteryStats=IBatteryStats.Stub.asInterface(ServiceManager.getService("batteryinfo"));
  mProperties=new Properties();
  try {
    File file=new File(PROPERTIES_FILE);
    FileInputStream stream=new FileInputStream(file);
    mProperties.load(stream);
    stream.close();
    mNtpServer=mProperties.getProperty("NTP_SERVER",null);
    mSuplHost=mProperties.getProperty("SUPL_HOST");
    String portString=mProperties.getProperty("SUPL_PORT");
    if (mSuplHost != null && portString != null) {
      try {
        mSuplPort=Integer.parseInt(portString);
        mSetSuplServer=true;
      }
 catch (      NumberFormatException e) {
        Log.e(TAG,"unable to parse SUPL_PORT: " + portString);
      }
    }
    mC2KHost=mProperties.getProperty("C2K_HOST");
    portString=mProperties.getProperty("C2K_PORT");
    if (mC2KHost != null && portString != null) {
      try {
        mC2KPort=Integer.parseInt(portString);
        mSetC2KServer=true;
      }
 catch (      NumberFormatException e) {
        Log.e(TAG,"unable to parse C2K_PORT: " + portString);
      }
    }
  }
 catch (  IOException e) {
    Log.w(TAG,"Could not open GPS configuration file " + PROPERTIES_FILE);
  }
}
