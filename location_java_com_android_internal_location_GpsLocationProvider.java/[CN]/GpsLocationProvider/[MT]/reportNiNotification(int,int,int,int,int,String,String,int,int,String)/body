{
  Log.i(TAG,"reportNiNotification: entered");
  Log.i(TAG,"notificationId: " + notificationId + ", niType: "+ niType+ ", notifyFlags: "+ notifyFlags+ ", timeout: "+ timeout+ ", defaultResponse: "+ defaultResponse);
  Log.i(TAG,"requestorId: " + requestorId + ", text: "+ text+ ", requestorIdEncoding: "+ requestorIdEncoding+ ", textEncoding: "+ textEncoding);
  GpsNiNotification notification=new GpsNiNotification();
  notification.notificationId=notificationId;
  notification.niType=niType;
  notification.needNotify=(notifyFlags & GpsNetInitiatedHandler.GPS_NI_NEED_NOTIFY) != 0;
  notification.needVerify=(notifyFlags & GpsNetInitiatedHandler.GPS_NI_NEED_VERIFY) != 0;
  notification.privacyOverride=(notifyFlags & GpsNetInitiatedHandler.GPS_NI_PRIVACY_OVERRIDE) != 0;
  notification.timeout=timeout;
  notification.defaultResponse=defaultResponse;
  notification.requestorId=requestorId;
  notification.text=text;
  notification.requestorIdEncoding=requestorIdEncoding;
  notification.textEncoding=textEncoding;
  Bundle bundle=new Bundle();
  if (extras == null)   extras="";
  Properties extraProp=new Properties();
  try {
    extraProp.load(new StringBufferInputStream(extras));
  }
 catch (  IOException e) {
    Log.e(TAG,"reportNiNotification cannot parse extras data: " + extras);
  }
  for (  Entry<Object,Object> ent : extraProp.entrySet()) {
    bundle.putString((String)ent.getKey(),(String)ent.getValue());
  }
  notification.extras=bundle;
  mNIHandler.handleNiNotification(notification);
}
