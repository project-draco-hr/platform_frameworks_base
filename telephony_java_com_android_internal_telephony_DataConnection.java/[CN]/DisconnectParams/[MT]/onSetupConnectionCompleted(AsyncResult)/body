{
  SetupResult result;
  String[] response=((String[])ar.result);
  ConnectionParams cp=(ConnectionParams)ar.userObj;
  if (ar.exception != null) {
    if (DBG)     log("DataConnection Init failed " + ar.exception);
    if (ar.exception instanceof CommandException && ((CommandException)(ar.exception)).getCommandError() == CommandException.Error.RADIO_NOT_AVAILABLE) {
      result=SetupResult.ERR_BadCommand;
      result.mFailCause=FailCause.RADIO_NOT_AVAILABLE;
    }
 else {
      result=SetupResult.ERR_Other;
    }
  }
 else   if (cp.tag != mTag) {
    if (DBG) {
      log("BUG: onSetupConnectionCompleted is stale cp.tag=" + cp.tag + ", mtag="+ mTag);
    }
    result=SetupResult.ERR_Stale;
  }
 else {
    LinkProperties linkProperties=new LinkProperties();
    if (response.length >= 2) {
      cid=Integer.parseInt(response[0]);
      String interfaceName=response[1];
      result=SetupResult.SUCCESS;
      try {
        String prefix="net." + interfaceName + ".";
        NetworkInterface networkInterface=NetworkInterface.getByName(interfaceName);
        linkProperties.setInterfaceName(interfaceName);
        if (response.length >= 5) {
          log("response.length >=5 using response for ip='" + response[2] + "' dns='"+ response[3]+ "' gateway='"+ response[4]+ "'");
          String[] addresses=response[2].split(" ");
          String[] dnses=response[3].split(" ");
          String gateway=response[4];
          for (          String addr : addresses) {
            LinkAddress la;
            if (!InetAddress.isNumeric(addr)) {
              throw new RuntimeException("Vendor ril bug: Non-numeric ip addr=" + addr);
            }
            InetAddress ia=InetAddress.getByName(addr);
            if (ia instanceof Inet4Address) {
              la=new LinkAddress(ia,32);
            }
 else {
              la=new LinkAddress(ia,128);
            }
            linkProperties.addLinkAddress(la);
          }
          if (dnses.length != 0) {
            for (            String addr : dnses) {
              if (!InetAddress.isNumeric(addr)) {
                throw new RuntimeException("Vendor ril bug: Non-numeric dns addr=" + addr);
              }
              InetAddress ia=InetAddress.getByName(addr);
              linkProperties.addDns(ia);
            }
            result=SetupResult.SUCCESS;
          }
 else {
            result=SetupResult.ERR_BadDns;
          }
          if (!InetAddress.isNumeric(gateway)) {
            throw new RuntimeException("Vendor ril bug: Non-numeric gateway addr=" + gateway);
          }
          linkProperties.setGateway(InetAddress.getByName(gateway));
        }
 else {
          log("response.length < 5 using properties for dns and gateway");
          for (          InterfaceAddress addr : networkInterface.getInterfaceAddresses()) {
            linkProperties.addLinkAddress(new LinkAddress(addr));
          }
          String gatewayAddress=SystemProperties.get(prefix + "gw");
          linkProperties.setGateway(InetAddress.getByName(gatewayAddress));
          String dnsServers[]=new String[2];
          dnsServers[0]=SystemProperties.get(prefix + "dns1");
          dnsServers[1]=SystemProperties.get(prefix + "dns2");
          if (isDnsOk(dnsServers)) {
            linkProperties.addDns(InetAddress.getByName(dnsServers[0]));
            linkProperties.addDns(InetAddress.getByName(dnsServers[1]));
          }
 else {
            result=SetupResult.ERR_BadDns;
          }
        }
      }
 catch (      UnknownHostException e1) {
        log("onSetupCompleted: UnknowHostException " + e1);
        e1.printStackTrace();
        result=SetupResult.ERR_Other;
      }
catch (      SocketException e2) {
        log("onSetupCompleted: SocketException " + e2);
        e2.printStackTrace();
        result=SetupResult.ERR_Other;
      }
    }
 else {
      log("onSetupCompleted: error; expected number of responses >= 2 was " + response.length);
      result=SetupResult.ERR_Other;
    }
    if (result != SetupResult.SUCCESS) {
      log("onSetupCompleted with an error clearing LinkProperties");
      linkProperties.clear();
    }
    mLinkProperties=linkProperties;
  }
  if (DBG) {
    log("DataConnection setup result='" + result + "' on cid="+ cid);
    if (result == SetupResult.SUCCESS) {
      log("LinkProperties: " + mLinkProperties.toString());
    }
  }
  return result;
}
