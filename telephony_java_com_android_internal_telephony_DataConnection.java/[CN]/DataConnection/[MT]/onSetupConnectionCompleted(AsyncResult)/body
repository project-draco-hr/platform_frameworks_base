{
  DataCallState response=(DataCallState)ar.result;
  ConnectionParams cp=(ConnectionParams)ar.userObj;
  DataCallState.SetupResult result;
  if (ar.exception != null) {
    if (DBG) {
      log("onSetupConnectionCompleted failed, ar.exception=" + ar.exception + " response="+ response);
    }
    if (ar.exception instanceof CommandException && ((CommandException)(ar.exception)).getCommandError() == CommandException.Error.RADIO_NOT_AVAILABLE) {
      result=DataCallState.SetupResult.ERR_BadCommand;
      result.mFailCause=FailCause.RADIO_NOT_AVAILABLE;
    }
 else     if ((response == null) || (response.version < 4)) {
      result=DataCallState.SetupResult.ERR_GetLastErrorFromRil;
    }
 else {
      result=DataCallState.SetupResult.ERR_RilError;
      result.mFailCause=FailCause.fromInt(response.status);
    }
  }
 else   if (cp.tag != mTag) {
    if (DBG) {
      log("BUG: onSetupConnectionCompleted is stale cp.tag=" + cp.tag + ", mtag="+ mTag);
    }
    result=DataCallState.SetupResult.ERR_Stale;
  }
 else {
    log("onSetupConnectionCompleted received DataCallState: " + response);
    boolean okToUseSystemPropertyDns=false;
    String propertyPrefix="net." + response.ifname + ".";
    String dnsServers[]=new String[2];
    dnsServers[0]=SystemProperties.get(propertyPrefix + "dns1");
    dnsServers[1]=SystemProperties.get(propertyPrefix + "dns2");
    okToUseSystemPropertyDns=isDnsOk(dnsServers);
    result=response.setLinkProperties(mLinkProperties,okToUseSystemPropertyDns);
  }
  return result;
}
