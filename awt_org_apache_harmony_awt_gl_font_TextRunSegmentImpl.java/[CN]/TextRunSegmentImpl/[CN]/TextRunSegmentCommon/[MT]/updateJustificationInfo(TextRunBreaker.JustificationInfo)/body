{
  int lastChar=Math.min(jInfo.lastIdx,info.end) - info.start;
  boolean haveFirst=info.start <= jInfo.firstIdx;
  boolean haveLast=info.end >= (jInfo.lastIdx + 1);
  int prevGlyphIdx=-1;
  int currGlyphIdx;
  if (jInfo.grow) {
    for (int i=0; i < lastChar; i++) {
      currGlyphIdx=getChar2Glyph()[i];
      if (currGlyphIdx == prevGlyphIdx) {
        continue;
      }
      prevGlyphIdx=currGlyphIdx;
      GlyphJustificationInfo gji=getGlyphJustificationInfos()[currGlyphIdx];
      if (gji.growPriority == jInfo.priority) {
        jInfo.weight+=gji.weight * 2;
        jInfo.growLimit+=gji.growLeftLimit;
        jInfo.growLimit+=gji.growRightLimit;
        if (gji.growAbsorb) {
          jInfo.absorbedWeight+=gji.weight * 2;
        }
      }
    }
  }
 else {
    for (int i=0; i < lastChar; i++) {
      currGlyphIdx=getChar2Glyph()[i];
      if (currGlyphIdx == prevGlyphIdx) {
        continue;
      }
      prevGlyphIdx=currGlyphIdx;
      GlyphJustificationInfo gji=getGlyphJustificationInfos()[currGlyphIdx];
      if (gji.shrinkPriority == jInfo.priority) {
        jInfo.weight+=gji.weight * 2;
        jInfo.growLimit-=gji.shrinkLeftLimit;
        jInfo.growLimit-=gji.shrinkRightLimit;
        if (gji.shrinkAbsorb) {
          jInfo.absorbedWeight+=gji.weight * 2;
        }
      }
    }
  }
  if (haveFirst) {
    GlyphJustificationInfo gji=getGlyphJustificationInfos()[getChar2Glyph()[0]];
    jInfo.weight-=gji.weight;
    if (jInfo.grow) {
      jInfo.growLimit-=gji.growLeftLimit;
      if (gji.growAbsorb) {
        jInfo.absorbedWeight-=gji.weight;
      }
    }
 else {
      jInfo.growLimit+=gji.shrinkLeftLimit;
      if (gji.shrinkAbsorb) {
        jInfo.absorbedWeight-=gji.weight;
      }
    }
  }
  if (haveLast) {
    GlyphJustificationInfo gji=getGlyphJustificationInfos()[getChar2Glyph()[lastChar]];
    jInfo.weight-=gji.weight;
    if (jInfo.grow) {
      jInfo.growLimit-=gji.growRightLimit;
      if (gji.growAbsorb) {
        jInfo.absorbedWeight-=gji.weight;
      }
    }
 else {
      jInfo.growLimit+=gji.shrinkRightLimit;
      if (gji.shrinkAbsorb) {
        jInfo.absorbedWeight-=gji.weight;
      }
    }
  }
}
