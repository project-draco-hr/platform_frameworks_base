{
  for (int i=0; i < mSavedTiles.size(); i++) {
    String tileSpec=mSavedTiles.get(i);
    if (!tileSpec.startsWith(CustomTile.PREFIX))     continue;
    if (!mTiles.contains(tileSpec)) {
      mContext.bindServiceAsUser(new Intent().setComponent(CustomTile.getComponentFromSpec(tileSpec)),new ServiceConnection(){
        @Override public void onServiceDisconnected(        ComponentName name){
        }
        @Override public void onServiceConnected(        ComponentName name,        IBinder service){
          QSTileServiceWrapper wrapper=new QSTileServiceWrapper(IQSTileService.Stub.asInterface(service));
          wrapper.onStopListening();
          wrapper.onTileRemoved();
          mContext.unbindService(this);
        }
      }
,Service.BIND_AUTO_CREATE,new UserHandle(ActivityManager.getCurrentUser()));
    }
  }
  for (int i=0; i < mTiles.size(); i++) {
    String tileSpec=mTiles.get(i);
    if (!tileSpec.startsWith(CustomTile.PREFIX))     continue;
    if (!mSavedTiles.contains(tileSpec)) {
      mContext.bindServiceAsUser(new Intent().setComponent(CustomTile.getComponentFromSpec(tileSpec)),new ServiceConnection(){
        @Override public void onServiceDisconnected(        ComponentName name){
        }
        @Override public void onServiceConnected(        ComponentName name,        IBinder service){
          QSTileServiceWrapper wrapper=new QSTileServiceWrapper(IQSTileService.Stub.asInterface(service));
          wrapper.onTileAdded();
          mContext.unbindService(this);
        }
      }
,Service.BIND_AUTO_CREATE,new UserHandle(ActivityManager.getCurrentUser()));
    }
  }
  Secure.putStringForUser(getContext().getContentResolver(),QSTileHost.TILES_SETTING,TextUtils.join(",",mTiles),ActivityManager.getCurrentUser());
}
