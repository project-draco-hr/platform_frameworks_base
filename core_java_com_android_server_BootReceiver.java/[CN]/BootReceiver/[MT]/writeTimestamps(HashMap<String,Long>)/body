{
synchronized (sFile) {
    final FileOutputStream stream;
    try {
      stream=sFile.startWrite();
    }
 catch (    IOException e) {
      Slog.w(TAG,"Failed to write timestamp file: " + e);
      return;
    }
    try {
      XmlSerializer out=new FastXmlSerializer();
      out.setOutput(stream,StandardCharsets.UTF_8.name());
      out.startDocument(null,true);
      out.startTag(null,"log-files");
      Iterator<String> itor=timestamps.keySet().iterator();
      while (itor.hasNext()) {
        String filename=itor.next();
        out.startTag(null,"log");
        out.attribute(null,"filename",filename);
        out.attribute(null,"timestamp",timestamps.get(filename).toString());
        out.endTag(null,"log");
      }
      out.endTag(null,"log-files");
      out.endDocument();
      sFile.finishWrite(stream);
    }
 catch (    IOException e) {
      Slog.w(TAG,"Failed to write timestamp file, using the backup: " + e);
      sFile.failWrite(stream);
    }
  }
}
