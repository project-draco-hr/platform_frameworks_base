{
  ArgumentCaptor<IconState> iconArg=ArgumentCaptor.forClass(IconState.class);
  ArgumentCaptor<Integer> darkStrengthIconArg=ArgumentCaptor.forClass(Integer.class);
  ArgumentCaptor<Integer> typeIconArg=ArgumentCaptor.forClass(Integer.class);
  Mockito.verify(mCallbackHandler,Mockito.atLeastOnce()).setMobileDataIndicators(iconArg.capture(),ArgumentCaptor.forClass(IconState.class).capture(),darkStrengthIconArg.capture(),typeIconArg.capture(),ArgumentCaptor.forClass(Integer.class).capture(),ArgumentCaptor.forClass(Boolean.class).capture(),ArgumentCaptor.forClass(Boolean.class).capture(),ArgumentCaptor.forClass(String.class).capture(),ArgumentCaptor.forClass(String.class).capture(),ArgumentCaptor.forClass(Boolean.class).capture(),ArgumentCaptor.forClass(Integer.class).capture());
  IconState iconState=iconArg.getValue();
  assertEquals("Signal strength icon in status bar",strengthIcon,iconState.icon);
  assertEquals("Signal strength icon (dark mode) in status bar",darkStrengthIcon,(int)darkStrengthIconArg.getValue());
  assertEquals("Data icon in status bar",typeIcon,(int)typeIconArg.getValue());
  assertEquals("Visibility in status bar",visible,iconState.visible);
}
