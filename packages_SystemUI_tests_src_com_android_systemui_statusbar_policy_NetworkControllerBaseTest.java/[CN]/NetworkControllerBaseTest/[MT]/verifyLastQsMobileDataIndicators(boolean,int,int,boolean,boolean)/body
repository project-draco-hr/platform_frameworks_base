{
  ArgumentCaptor<IconState> iconArg=ArgumentCaptor.forClass(IconState.class);
  ArgumentCaptor<Integer> typeIconArg=ArgumentCaptor.forClass(Integer.class);
  ArgumentCaptor<Boolean> dataInArg=ArgumentCaptor.forClass(Boolean.class);
  ArgumentCaptor<Boolean> dataOutArg=ArgumentCaptor.forClass(Boolean.class);
  Mockito.verify(mCallbackHandler,Mockito.atLeastOnce()).setMobileDataIndicators(ArgumentCaptor.forClass(IconState.class).capture(),iconArg.capture(),ArgumentCaptor.forClass(Integer.class).capture(),ArgumentCaptor.forClass(Integer.class).capture(),typeIconArg.capture(),dataInArg.capture(),dataOutArg.capture(),ArgumentCaptor.forClass(String.class).capture(),ArgumentCaptor.forClass(String.class).capture(),ArgumentCaptor.forClass(Boolean.class).capture(),ArgumentCaptor.forClass(Integer.class).capture());
  IconState iconState=iconArg.getValue();
  assertEquals("Visibility in, quick settings",visible,iconState.visible);
  assertEquals("Signal icon in, quick settings",icon,iconState.icon);
  assertEquals("Data icon in, quick settings",typeIcon,(int)typeIconArg.getValue());
  assertEquals("Data direction in, in quick settings",dataIn,(boolean)dataInArg.getValue());
  assertEquals("Data direction out, in quick settings",dataOut,(boolean)dataOutArg.getValue());
}
