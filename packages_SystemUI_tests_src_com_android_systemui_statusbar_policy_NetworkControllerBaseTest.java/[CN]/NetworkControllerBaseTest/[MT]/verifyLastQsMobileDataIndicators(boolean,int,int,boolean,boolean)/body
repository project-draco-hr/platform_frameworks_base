{
  ArgumentCaptor<Integer> iconArg=ArgumentCaptor.forClass(Integer.class);
  ArgumentCaptor<Integer> typeIconArg=ArgumentCaptor.forClass(Integer.class);
  ArgumentCaptor<Boolean> visibleArg=ArgumentCaptor.forClass(Boolean.class);
  ArgumentCaptor<Boolean> dataInArg=ArgumentCaptor.forClass(Boolean.class);
  ArgumentCaptor<Boolean> dataOutArg=ArgumentCaptor.forClass(Boolean.class);
  Mockito.verify(mNetworkSignalChangedCallback,Mockito.atLeastOnce()).onMobileDataSignalChanged(visibleArg.capture(),iconArg.capture(),ArgumentCaptor.forClass(String.class).capture(),typeIconArg.capture(),dataInArg.capture(),dataOutArg.capture(),ArgumentCaptor.forClass(String.class).capture(),ArgumentCaptor.forClass(String.class).capture(),ArgumentCaptor.forClass(Boolean.class).capture());
  assertEquals("Visibility in, quick settings",visible,(boolean)visibleArg.getValue());
  assertEquals("Signal icon in, quick settings",icon,(int)iconArg.getValue());
  assertEquals("Data icon in, quick settings",typeIcon,(int)typeIconArg.getValue());
  assertEquals("Data direction in, in quick settings",dataIn,(boolean)dataInArg.getValue());
  assertEquals("Data direction out, in quick settings",dataOut,(boolean)dataOutArg.getValue());
}
