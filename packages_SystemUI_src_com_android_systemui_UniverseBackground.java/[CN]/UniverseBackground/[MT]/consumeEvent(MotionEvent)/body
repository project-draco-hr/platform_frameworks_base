{
  if (mState == STATE_CLOSED) {
    if (event.getActionMasked() == MotionEvent.ACTION_POINTER_DOWN) {
      computeAveragePos(event);
      mDragStartX=mAverageX;
      mDragStartY=mAverageY;
      mYDelta=0;
      mUniverseTransform.clear();
      sendUniverseTransform();
      setVisibility(VISIBLE);
      mState=STATE_OPENING;
      prepareTracking((int)mDragStartY,true);
      mVelocityTracker.clear();
      trackMovement(event);
      return true;
    }
    return false;
  }
  if (mState == STATE_OPENING) {
    if (event.getActionMasked() == MotionEvent.ACTION_UP || event.getActionMasked() == MotionEvent.ACTION_CANCEL) {
      mVelocityTracker.computeCurrentVelocity(1000);
      computeAveragePos(event);
      float yVel=mVelocityTracker.getYVelocity();
      boolean negative=yVel < 0;
      float xVel=mVelocityTracker.getXVelocity();
      if (xVel < 0) {
        xVel=-xVel;
      }
      if (xVel > mFlingGestureMaxXVelocityPx) {
        xVel=mFlingGestureMaxXVelocityPx;
      }
      float vel=(float)Math.hypot(yVel,xVel);
      if (negative) {
        vel=-vel;
      }
      if (CHATTY) {
        Slog.d(TAG,String.format("gesture: vraw=(%f,%f) vnorm=(%f,%f) vlinear=%f",mVelocityTracker.getXVelocity(),mVelocityTracker.getYVelocity(),xVel,yVel,vel));
      }
      performFling((int)mAverageY,vel,false);
      mState=STATE_OPEN;
      return true;
    }
    computeAveragePos(event);
    mYDelta=(int)(mAverageY - mDragStartY);
    if (mYDelta > getExpandedViewMaxHeight()) {
      mYDelta=getExpandedViewMaxHeight();
    }
    updateUniverseScale();
    return true;
  }
  return false;
}
