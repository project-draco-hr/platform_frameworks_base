{
  mClientStateUpdateScheduled=false;
  final String globallySelectedRouteId=mGloballySelectedRouteRecord != null ? mGloballySelectedRouteRecord.getUniqueId() : null;
  MediaRouterClientState trustedState=new MediaRouterClientState();
  trustedState.globallySelectedRouteId=globallySelectedRouteId;
  final int providerCount=mProviderRecords.size();
  for (int i=0; i < providerCount; i++) {
    mProviderRecords.get(i).appendClientState(trustedState);
  }
  MediaRouterClientState untrustedState=new MediaRouterClientState();
  untrustedState.globallySelectedRouteId=globallySelectedRouteId;
  if (globallySelectedRouteId != null) {
    untrustedState.routes.add(trustedState.getRoute(globallySelectedRouteId));
  }
  try {
synchronized (mService.mLock) {
      mUserRecord.mTrustedState=trustedState;
      mUserRecord.mUntrustedState=untrustedState;
      final int count=mUserRecord.mClientRecords.size();
      for (int i=0; i < count; i++) {
        mTempClients.add(mUserRecord.mClientRecords.get(i).mClient);
      }
    }
    final int count=mTempClients.size();
    for (int i=0; i < count; i++) {
      try {
        mTempClients.get(i).onStateChanged();
      }
 catch (      RemoteException ex) {
      }
    }
  }
  finally {
    mTempClients.clear();
  }
}
