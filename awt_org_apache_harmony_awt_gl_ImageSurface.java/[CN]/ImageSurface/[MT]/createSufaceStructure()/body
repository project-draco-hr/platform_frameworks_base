{
  int cmType=0;
  int numComponents=cm.getNumComponents();
  boolean hasAlpha=cm.hasAlpha();
  boolean isAlphaPre=cm.isAlphaPremultiplied();
  int transparency=cm.getTransparency();
  int bits[]=cm.getComponentSize();
  int pixelStride=cm.getPixelSize();
  int masks[]=null;
  int colorMap[]=null;
  int colorMapSize=0;
  int transpPixel=-1;
  boolean isGrayPallete=false;
  SampleModel sm=raster.getSampleModel();
  int smType=0;
  int dataType=sm.getDataType();
  int scanlineStride=0;
  int bankIndeces[]=null;
  int bandOffsets[]=null;
  int offset=raster.getDataBuffer().getOffset();
  if (cm instanceof DirectColorModel) {
    cmType=DCM;
    DirectColorModel dcm=(DirectColorModel)cm;
    masks=dcm.getMasks();
    smType=SPPSM;
    SinglePixelPackedSampleModel sppsm=(SinglePixelPackedSampleModel)sm;
    scanlineStride=sppsm.getScanlineStride();
  }
 else   if (cm instanceof IndexColorModel) {
    cmType=ICM;
    IndexColorModel icm=(IndexColorModel)cm;
    colorMapSize=icm.getMapSize();
    colorMap=new int[colorMapSize];
    icm.getRGBs(colorMap);
    transpPixel=icm.getTransparentPixel();
    isGrayPallete=Surface.isGrayPallete(icm);
    if (sm instanceof MultiPixelPackedSampleModel) {
      smType=MPPSM;
      MultiPixelPackedSampleModel mppsm=(MultiPixelPackedSampleModel)sm;
      scanlineStride=mppsm.getScanlineStride();
    }
 else     if (sm instanceof ComponentSampleModel) {
      smType=CSM;
      ComponentSampleModel csm=(ComponentSampleModel)sm;
      scanlineStride=csm.getScanlineStride();
    }
 else {
      throw new IllegalArgumentException(Messages.getString("awt.4D"));
    }
  }
 else   if (cm instanceof ComponentColorModel) {
    cmType=CCM;
    if (sm instanceof ComponentSampleModel) {
      ComponentSampleModel csm=(ComponentSampleModel)sm;
      scanlineStride=csm.getScanlineStride();
      bankIndeces=csm.getBankIndices();
      bandOffsets=csm.getBandOffsets();
      if (sm instanceof PixelInterleavedSampleModel) {
        smType=PISM;
      }
 else       if (sm instanceof BandedSampleModel) {
        smType=BSM;
      }
 else {
        smType=CSM;
      }
    }
 else {
      throw new IllegalArgumentException(Messages.getString("awt.4D"));
    }
  }
 else {
    surfaceDataPtr=0L;
    return;
  }
  surfaceDataPtr=createSurfStruct(surfaceType,width,height,cmType,csType,smType,dataType,numComponents,pixelStride,scanlineStride,bits,masks,colorMapSize,colorMap,transpPixel,isGrayPallete,bankIndeces,bandOffsets,offset,hasAlpha,isAlphaPre,transparency);
}
