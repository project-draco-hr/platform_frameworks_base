{
  if (mConnectThead == null) {
    mCallback=callback;
    mConnectThead=new Thread(TAG){
      public void run(){
        if (DBG)         log("Connect Thread starting");
        while (!mInterrupted) {
          mConnectingHeadsetRfcommChannel=-1;
          mConnectingHandsfreeRfcommChannel=-1;
          if (waitForHandsfreeConnectNative(SELECT_WAIT_TIMEOUT) == false) {
            if (mTimeoutRemainingMs > 0) {
              try {
                Log.i(TAG,"select thread timed out, but " + mTimeoutRemainingMs + "ms of waiting remain.");
                Thread.sleep(mTimeoutRemainingMs);
              }
 catch (              InterruptedException e) {
                Log.i(TAG,"select thread was interrupted (2), exiting");
                mInterrupted=true;
              }
            }
          }
 else {
            Log.i(TAG,"connect notification!");
            if (mConnectingHeadsetRfcommChannel >= 0) {
              Log.i(TAG,"Incoming connection from headset " + mConnectingHeadsetAddress + " on channel "+ mConnectingHeadsetRfcommChannel);
              Message msg=Message.obtain(mCallback);
              msg.what=MSG_INCOMING_HEADSET_CONNECTION;
              msg.obj=new IncomingConnectionInfo(mAdapter,mAdapter.getRemoteDevice(mConnectingHeadsetAddress),mConnectingHeadsetSocketFd,mConnectingHeadsetRfcommChannel);
              msg.sendToTarget();
            }
            if (mConnectingHandsfreeRfcommChannel >= 0) {
              Log.i(TAG,"Incoming connection from handsfree " + mConnectingHandsfreeAddress + " on channel "+ mConnectingHandsfreeRfcommChannel);
              Message msg=Message.obtain();
              msg.setTarget(mCallback);
              msg.what=MSG_INCOMING_HANDSFREE_CONNECTION;
              msg.obj=new IncomingConnectionInfo(mAdapter,mAdapter.getRemoteDevice(mConnectingHandsfreeAddress),mConnectingHandsfreeSocketFd,mConnectingHandsfreeRfcommChannel);
              msg.sendToTarget();
            }
          }
        }
        if (DBG)         log("Connect Thread finished");
      }
    }
;
    if (setUpListeningSocketsNative() == false) {
      Log.e(TAG,"Could not set up listening socket, exiting");
      return false;
    }
    mInterrupted=false;
    mConnectThead.start();
  }
  return true;
}
