{
  int taskId=5;
  long runByMillis=20000L;
  long runFromMillis=2000L;
  long initialBackoff=10000L;
  final JobInfo task=new Builder(taskId,mComponent).setRequiresCharging(true).setRequiredNetworkCapabilities(JobInfo.NetworkType.ANY).setBackoffCriteria(initialBackoff,JobInfo.BackoffPolicy.EXPONENTIAL).setOverrideDeadline(runByMillis).setMinimumLatency(runFromMillis).build();
  final JobStatus ts=new JobStatus(task,SOME_UID,true);
  mTaskStoreUnderTest.add(ts);
  Thread.sleep(IO_WAIT);
  mTaskStoreUnderTest.readJobMapFromDisk(new JobMapReadFinishedListener(){
    @Override public void onJobMapReadFinished(    List<JobStatus> tasks){
      assertEquals("Didn't get expected number of persisted tasks.",1,tasks.size());
      JobStatus loadedTaskStatus=tasks.get(0);
      assertTasksEqual(task,loadedTaskStatus.getJob());
      assertEquals("Different uids.",SOME_UID,tasks.get(0).getUid());
      compareTimestampsSubjectToIoLatency("Early run-times not the same after read.",ts.getEarliestRunTime(),loadedTaskStatus.getEarliestRunTime());
      compareTimestampsSubjectToIoLatency("Late run-times not the same after read.",ts.getLatestRunTimeElapsed(),loadedTaskStatus.getLatestRunTimeElapsed());
    }
  }
);
}
