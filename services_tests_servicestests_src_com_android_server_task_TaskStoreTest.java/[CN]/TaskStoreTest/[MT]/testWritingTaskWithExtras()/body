{
  JobInfo.Builder b=new Builder(8,mComponent).setRequiresDeviceIdle(true).setPeriodic(10000L).setRequiresCharging(true).setIsPersisted(true);
  PersistableBundle extras=new PersistableBundle();
  extras.putDouble("hello",3.2);
  extras.putString("hi","there");
  extras.putInt("into",3);
  b.setExtras(extras);
  final JobInfo task=b.build();
  JobStatus taskStatus=new JobStatus(task,SOME_UID);
  mTaskStoreUnderTest.add(taskStatus);
  Thread.sleep(IO_WAIT);
  mTaskStoreUnderTest.readJobMapFromDisk(new JobMapReadFinishedListener(){
    @Override public void onJobMapReadFinished(    List<JobStatus> tasks){
      assertEquals("Incorrect # of persisted tasks.",1,tasks.size());
      JobStatus loaded=tasks.get(0);
      assertTasksEqual(task,loaded.getJob());
    }
  }
);
}
