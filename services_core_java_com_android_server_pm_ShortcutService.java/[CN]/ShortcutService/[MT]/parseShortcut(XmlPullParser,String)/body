{
  String id;
  ComponentName activityComponent;
  Icon icon;
  String title;
  Intent intent;
  PersistableBundle intentPersistableExtras=null;
  int weight;
  PersistableBundle extras=null;
  long lastChangedTimestamp;
  int flags;
  int iconRes;
  String bitmapPath;
  id=parseStringAttribute(parser,ATTR_ID);
  activityComponent=parseComponentNameAttribute(parser,ATTR_ACTIVITY);
  title=parseStringAttribute(parser,ATTR_TITLE);
  intent=parseIntentAttribute(parser,ATTR_INTENT);
  weight=(int)parseLongAttribute(parser,ATTR_WEIGHT);
  lastChangedTimestamp=(int)parseLongAttribute(parser,ATTR_TIMESTAMP);
  flags=(int)parseLongAttribute(parser,ATTR_FLAGS);
  iconRes=(int)parseLongAttribute(parser,ATTR_ICON_RES);
  bitmapPath=parseStringAttribute(parser,ATTR_BITMAP_PATH);
  final int outerDepth=parser.getDepth();
  int type;
  while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && (type != XmlPullParser.END_TAG || parser.getDepth() > outerDepth)) {
    if (type != XmlPullParser.START_TAG) {
      continue;
    }
    final int depth=parser.getDepth();
    final String tag=parser.getName();
    if (DEBUG_LOAD) {
      Slog.d(TAG,String.format("  depth=%d type=%d name=%s",depth,type,tag));
    }
switch (tag) {
case TAG_INTENT_EXTRAS:
      intentPersistableExtras=PersistableBundle.restoreFromXml(parser);
    continue;
case TAG_EXTRAS:
  extras=PersistableBundle.restoreFromXml(parser);
continue;
}
throw throwForInvalidTag(depth,tag);
}
return new ShortcutInfo(id,packgeName,activityComponent,null,title,intent,intentPersistableExtras,weight,extras,lastChangedTimestamp,flags,iconRes,bitmapPath);
}
