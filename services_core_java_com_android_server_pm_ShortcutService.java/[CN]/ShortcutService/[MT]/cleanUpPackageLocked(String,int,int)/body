{
  final boolean wasUserLoaded=isUserLoadedLocked(owningUserId);
  final ShortcutUser user=getUserShortcutsLocked(owningUserId);
  boolean doNotify=false;
  if (packageUserId == owningUserId) {
    if (user.removePackage(this,packageName) != null) {
      doNotify=true;
    }
  }
  user.removeLauncher(packageUserId,packageName);
  final ArrayMap<PackageWithUser,ShortcutLauncher> launchers=user.getAllLaunchers();
  for (int i=launchers.size() - 1; i >= 0; i--) {
    launchers.valueAt(i).cleanUpPackage(packageName,packageUserId);
  }
  for (int i=user.getAllPackages().size() - 1; i >= 0; i--) {
    user.getAllPackages().valueAt(i).refreshPinnedFlags(this);
  }
  scheduleSaveUser(owningUserId);
  if (doNotify) {
    notifyListeners(packageName,owningUserId);
  }
  if (!wasUserLoaded) {
    unloadUserLocked(owningUserId);
  }
}
