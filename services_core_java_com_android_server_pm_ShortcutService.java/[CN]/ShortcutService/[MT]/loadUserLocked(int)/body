{
  final File path=new File(injectUserDataPath(userId),FILENAME_USER_PACKAGES);
  if (DEBUG) {
    Slog.d(TAG,"Loading from " + path);
  }
  final AtomicFile file=new AtomicFile(path);
  final FileInputStream in;
  try {
    in=file.openRead();
  }
 catch (  FileNotFoundException e) {
    if (DEBUG) {
      Slog.d(TAG,"Not found " + path);
    }
    return null;
  }
  UserShortcuts ret=null;
  try {
    XmlPullParser parser=Xml.newPullParser();
    parser.setInput(in,StandardCharsets.UTF_8.name());
    int type;
    while ((type=parser.next()) != XmlPullParser.END_DOCUMENT) {
      if (type != XmlPullParser.START_TAG) {
        continue;
      }
      final int depth=parser.getDepth();
      final String tag=parser.getName();
      if (DEBUG_LOAD) {
        Slog.d(TAG,String.format("depth=%d type=%d name=%s",depth,type,tag));
      }
      if ((depth == 1) && UserShortcuts.TAG_ROOT.equals(tag)) {
        ret=UserShortcuts.loadFromXml(parser,userId);
        continue;
      }
      throwForInvalidTag(depth,tag);
    }
    return ret;
  }
 catch (  IOException|XmlPullParserException e) {
    Slog.e(TAG,"Failed to read file " + file.getBaseFile(),e);
    return null;
  }
 finally {
    IoUtils.closeQuietly(in);
  }
}
