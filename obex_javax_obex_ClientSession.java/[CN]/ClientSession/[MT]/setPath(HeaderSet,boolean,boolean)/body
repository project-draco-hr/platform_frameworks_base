{
  if (!isConnected) {
    throw new IOException("Not connected to the server");
  }
synchronized (this) {
    if (isActive) {
      throw new IOException("OBEX request is already being performed");
    }
    isActive=true;
  }
  ensureOpen();
  int totalLength=2;
  byte[] head=null;
  if (header == null) {
    header=new HeaderSet();
  }
 else {
    if ((header).nonce != null) {
      challengeDigest=new byte[16];
      System.arraycopy((header).nonce,0,challengeDigest,0,16);
    }
  }
  if ((header).nonce != null) {
    challengeDigest=new byte[16];
    System.arraycopy((header).nonce,0,challengeDigest,0,16);
  }
  if (connectionID != null) {
    (header).connectionID=new byte[4];
    System.arraycopy(connectionID,0,(header).connectionID,0,4);
  }
  head=OBEXHelper.createHeader(header,false);
  totalLength+=head.length;
  if (totalLength > maxPacketSize) {
    throw new IOException("Packet size exceeds max packet size");
  }
  int flags=0;
  if (backup) {
    flags++;
  }
  if (!create) {
    flags|=2;
  }
  byte[] packet=new byte[totalLength];
  packet[0]=(byte)flags;
  packet[1]=(byte)0x00;
  if (header != null) {
    System.arraycopy(head,0,packet,2,head.length);
  }
  HeaderSet returnHeaderSet=new HeaderSet();
  sendRequest(0x85,packet,returnHeaderSet,null);
synchronized (this) {
    isActive=false;
  }
  return returnHeaderSet;
}
