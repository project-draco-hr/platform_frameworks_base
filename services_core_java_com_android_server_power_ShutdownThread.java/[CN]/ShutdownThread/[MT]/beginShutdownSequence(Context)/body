{
synchronized (sIsStartedGuard) {
    if (sIsStarted) {
      Log.d(TAG,"Shutdown sequence already running, returning.");
      return;
    }
    sIsStarted=true;
  }
  ProgressDialog pd=new ProgressDialog(context);
  if (PowerManager.REBOOT_RECOVERY_UPDATE.equals(mReason)) {
    mRebootHasProgressBar=RecoverySystem.UNCRYPT_PACKAGE_FILE.exists() && !(RecoverySystem.BLOCK_MAP_FILE.exists());
    pd.setTitle(context.getText(com.android.internal.R.string.reboot_to_update_title));
    if (mRebootHasProgressBar) {
      pd.setMax(100);
      pd.setProgress(0);
      pd.setIndeterminate(false);
      pd.setProgressNumberFormat(null);
      pd.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
      pd.setMessage(context.getText(com.android.internal.R.string.reboot_to_update_prepare));
    }
 else {
      pd.setIndeterminate(true);
      pd.setMessage(context.getText(com.android.internal.R.string.reboot_to_update_reboot));
    }
  }
 else   if (PowerManager.REBOOT_RECOVERY.equals(mReason)) {
    pd.setTitle(context.getText(com.android.internal.R.string.reboot_to_reset_title));
    pd.setMessage(context.getText(com.android.internal.R.string.reboot_to_reset_message));
    pd.setIndeterminate(true);
  }
 else {
    pd.setTitle(context.getText(com.android.internal.R.string.power_off));
    pd.setMessage(context.getText(com.android.internal.R.string.shutdown_progress));
    pd.setIndeterminate(true);
  }
  pd.setCancelable(false);
  pd.getWindow().setType(WindowManager.LayoutParams.TYPE_KEYGUARD_DIALOG);
  pd.show();
  sInstance.mProgressDialog=pd;
  sInstance.mContext=context;
  sInstance.mPowerManager=(PowerManager)context.getSystemService(Context.POWER_SERVICE);
  sInstance.mCpuWakeLock=null;
  try {
    sInstance.mCpuWakeLock=sInstance.mPowerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,TAG + "-cpu");
    sInstance.mCpuWakeLock.setReferenceCounted(false);
    sInstance.mCpuWakeLock.acquire();
  }
 catch (  SecurityException e) {
    Log.w(TAG,"No permission to acquire wake lock",e);
    sInstance.mCpuWakeLock=null;
  }
  sInstance.mScreenWakeLock=null;
  if (sInstance.mPowerManager.isScreenOn()) {
    try {
      sInstance.mScreenWakeLock=sInstance.mPowerManager.newWakeLock(PowerManager.FULL_WAKE_LOCK,TAG + "-screen");
      sInstance.mScreenWakeLock.setReferenceCounted(false);
      sInstance.mScreenWakeLock.acquire();
    }
 catch (    SecurityException e) {
      Log.w(TAG,"No permission to acquire wake lock",e);
      sInstance.mScreenWakeLock=null;
    }
  }
  sInstance.mHandler=new Handler(){
  }
;
  sInstance.start();
}
