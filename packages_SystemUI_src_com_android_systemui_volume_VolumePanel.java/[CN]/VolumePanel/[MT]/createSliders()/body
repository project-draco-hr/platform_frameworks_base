{
  final Resources res=mContext.getResources();
  final LayoutInflater inflater=(LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
  mStreamControls=new SparseArray<StreamControl>(STREAMS.length);
  for (int i=0; i < STREAMS.length; i++) {
    StreamResources streamRes=STREAMS[i];
    final int streamType=streamRes.streamType;
    final StreamControl sc=new StreamControl();
    sc.streamType=streamType;
    sc.group=(ViewGroup)inflater.inflate(com.android.systemui.R.layout.volume_panel_item,null);
    sc.group.setTag(sc);
    sc.icon=(ImageView)sc.group.findViewById(com.android.systemui.R.id.stream_icon);
    sc.icon.setTag(sc);
    sc.icon.setContentDescription(res.getString(streamRes.descRes));
    sc.iconRes=streamRes.iconRes;
    sc.iconMuteRes=streamRes.iconMuteRes;
    sc.icon.setImageResource(sc.iconRes);
    sc.icon.setClickable(isNotificationOrRing(streamType));
    if (sc.icon.isClickable()) {
      sc.icon.setSoundEffectsEnabled(false);
      sc.icon.setOnClickListener(new OnClickListener(){
        @Override public void onClick(        View v){
          resetTimeout();
          toggle(sc);
        }
      }
);
    }
    sc.seekbarView=(SeekBar)sc.group.findViewById(com.android.systemui.R.id.seekbar);
    final int plusOne=(streamType == AudioSystem.STREAM_BLUETOOTH_SCO || streamType == AudioSystem.STREAM_VOICE_CALL) ? 1 : 0;
    sc.seekbarView.setMax(getStreamMaxVolume(streamType) + plusOne);
    sc.seekbarView.setOnSeekBarChangeListener(mSeekListener);
    sc.seekbarView.setTag(sc);
    mStreamControls.put(streamType,sc);
  }
}
