{
  final boolean wasEnabled=sc.seekbarView.isEnabled();
  final boolean isRinger=isNotificationOrRing(sc.streamType);
  if (sc.streamType == AudioService.STREAM_REMOTE_MUSIC) {
    sc.seekbarView.setEnabled(!fixedVolume);
  }
 else   if (isRinger && mAudioManager.getRingerMode() == AudioManager.RINGER_MODE_SILENT) {
    sc.seekbarView.setEnabled(false);
    sc.icon.setEnabled(false);
    sc.icon.setAlpha(mDisabledAlpha);
    sc.icon.setClickable(false);
  }
 else   if (fixedVolume || (sc.streamType != mAudioManager.getMasterStreamType() && muted) || (sSafetyWarning != null)) {
    sc.seekbarView.setEnabled(false);
  }
 else {
    sc.seekbarView.setEnabled(true);
    sc.icon.setEnabled(true);
    sc.icon.setAlpha(1f);
  }
  if (isRinger && wasEnabled != sc.seekbarView.isEnabled()) {
    if (sc.seekbarView.isEnabled()) {
      sc.group.setOnTouchListener(null);
      sc.icon.setClickable(true);
    }
 else {
      final View.OnTouchListener showHintOnTouch=new View.OnTouchListener(){
        @Override public boolean onTouch(        View v,        MotionEvent event){
          resetTimeout();
          showSilentHint();
          return false;
        }
      }
;
      sc.group.setOnTouchListener(showHintOnTouch);
    }
  }
}
