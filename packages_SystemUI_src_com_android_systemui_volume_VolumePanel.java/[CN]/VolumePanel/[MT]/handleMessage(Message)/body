{
switch (msg.what) {
case MSG_VOLUME_CHANGED:
{
      onVolumeChanged(msg.arg1,msg.arg2);
      break;
    }
case MSG_MUTE_CHANGED:
{
    onMuteChanged(msg.arg1,msg.arg2);
    break;
  }
case MSG_FREE_RESOURCES:
{
  onFreeResources();
  break;
}
case MSG_STOP_SOUNDS:
{
onStopSounds();
break;
}
case MSG_PLAY_SOUND:
{
onPlaySound(msg.arg1,msg.arg2);
break;
}
case MSG_VIBRATE:
{
onVibrate();
break;
}
case MSG_TIMEOUT:
{
if (isShowing()) {
if (mDialog != null) {
mDialog.dismiss();
}
mActiveStreamType=-1;
}
synchronized (sConfirmSafeVolumeLock) {
if (sConfirmSafeVolumeDialog != null) {
sConfirmSafeVolumeDialog.dismiss();
}
}
break;
}
case MSG_RINGER_MODE_CHANGED:
{
if (isShowing()) {
updateStates();
}
break;
}
case MSG_REMOTE_VOLUME_CHANGED:
{
onRemoteVolumeChanged(msg.arg1,msg.arg2);
break;
}
case MSG_REMOTE_VOLUME_UPDATE_IF_SHOWN:
onRemoteVolumeUpdateIfShown();
break;
case MSG_SLIDER_VISIBILITY_CHANGED:
onSliderVisibilityChanged(msg.arg1,msg.arg2);
break;
case MSG_DISPLAY_SAFE_VOLUME_WARNING:
onDisplaySafeVolumeWarning(msg.arg1);
break;
case MSG_LAYOUT_DIRECTION:
setLayoutDirection(msg.arg1);
break;
case MSG_ZEN_MODE_CHANGED:
updateZenMode(msg.arg1 != 0);
break;
}
}
