{
  if (DEBUG) {
    Slog.i(TAG,"Getting widget state for user: " + userId);
  }
  ByteArrayOutputStream stream=new ByteArrayOutputStream();
synchronized (mLock) {
    if (!packageNeedsWidgetBackupLocked(backedupPackage,userId)) {
      return null;
    }
    try {
      XmlSerializer out=new FastXmlSerializer();
      out.setOutput(stream,"utf-8");
      out.startDocument(null,true);
      out.startTag(null,"ws");
      out.attribute(null,"version",String.valueOf(WIDGET_STATE_VERSION));
      out.attribute(null,"pkg",backedupPackage);
      int index=0;
      int N=mProviders.size();
      for (int i=0; i < N; i++) {
        Provider provider=mProviders.get(i);
        if (!provider.widgets.isEmpty() && (provider.isInPackageForUser(backedupPackage,userId) || provider.hostedByPackageForUser(backedupPackage,userId))) {
          provider.tag=index;
          serializeProvider(out,provider);
          index++;
        }
      }
      N=mHosts.size();
      index=0;
      for (int i=0; i < N; i++) {
        Host host=mHosts.get(i);
        if (!host.widgets.isEmpty() && (host.isInPackageForUser(backedupPackage,userId) || host.hostsPackageForUser(backedupPackage,userId))) {
          host.tag=index;
          serializeHost(out,host);
          index++;
        }
      }
      N=mWidgets.size();
      for (int i=0; i < N; i++) {
        Widget widget=mWidgets.get(i);
        Provider provider=widget.provider;
        if (widget.host.isInPackageForUser(backedupPackage,userId) || (provider != null && provider.isInPackageForUser(backedupPackage,userId))) {
          serializeAppWidget(out,widget);
        }
      }
      out.endTag(null,"ws");
      out.endDocument();
    }
 catch (    IOException e) {
      Slog.w(TAG,"Unable to save widget state for " + backedupPackage);
      return null;
    }
  }
  return stream.toByteArray();
}
