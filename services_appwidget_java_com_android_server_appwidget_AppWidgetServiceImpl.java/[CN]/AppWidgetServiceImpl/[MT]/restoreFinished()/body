{
  if (DEBUG_BACKUP) {
    Slog.i(TAG,"restoreFinished for " + mUserId);
  }
  final UserHandle userHandle=new UserHandle(mUserId);
synchronized (mRestoredWidgetIds) {
    Set<Entry<Provider,ArrayList<RestoreUpdateRecord>>> providerEntries=mUpdatesByProvider.entrySet();
    for (    Entry<Provider,ArrayList<RestoreUpdateRecord>> e : providerEntries) {
      Provider provider=e.getKey();
      ArrayList<RestoreUpdateRecord> updates=e.getValue();
      final int pending=countPendingUpdates(updates);
      if (DEBUG_BACKUP) {
        Slog.i(TAG,"Provider " + provider + " pending: "+ pending);
      }
      if (pending > 0) {
        int[] oldIds=new int[pending];
        int[] newIds=new int[pending];
        final int N=updates.size();
        int nextPending=0;
        for (int i=0; i < N; i++) {
          RestoreUpdateRecord r=updates.get(i);
          if (!r.notified) {
            r.notified=true;
            oldIds[nextPending]=r.oldId;
            newIds[nextPending]=r.newId;
            nextPending++;
            if (DEBUG_BACKUP) {
              Slog.i(TAG,"   " + r.oldId + " => "+ r.newId);
            }
          }
        }
        sendWidgetRestoreBroadcast(AppWidgetManager.ACTION_APPWIDGET_RESTORED,provider,null,oldIds,newIds,userHandle);
      }
    }
    Set<Entry<Host,ArrayList<RestoreUpdateRecord>>> hostEntries=mUpdatesByHost.entrySet();
    for (    Entry<Host,ArrayList<RestoreUpdateRecord>> e : hostEntries) {
      Host host=e.getKey();
      if (host.uid > 0) {
        ArrayList<RestoreUpdateRecord> updates=e.getValue();
        final int pending=countPendingUpdates(updates);
        if (DEBUG_BACKUP) {
          Slog.i(TAG,"Host " + host + " pending: "+ pending);
        }
        if (pending > 0) {
          int[] oldIds=new int[pending];
          int[] newIds=new int[pending];
          final int N=updates.size();
          int nextPending=0;
          for (int i=0; i < N; i++) {
            RestoreUpdateRecord r=updates.get(i);
            if (!r.notified) {
              r.notified=true;
              oldIds[nextPending]=r.oldId;
              newIds[nextPending]=r.newId;
              nextPending++;
              if (DEBUG_BACKUP) {
                Slog.i(TAG,"   " + r.oldId + " => "+ r.newId);
              }
            }
          }
          sendWidgetRestoreBroadcast(AppWidgetManager.ACTION_APPWIDGET_HOST_RESTORED,null,host,oldIds,newIds,userHandle);
        }
      }
    }
  }
}
