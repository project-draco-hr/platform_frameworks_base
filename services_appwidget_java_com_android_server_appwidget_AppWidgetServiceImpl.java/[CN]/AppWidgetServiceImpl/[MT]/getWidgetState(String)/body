{
  if (!mHasFeature) {
    return null;
  }
  ByteArrayOutputStream stream=new ByteArrayOutputStream();
synchronized (mAppWidgetIds) {
    if (!packageNeedsWidgetBackupLocked(backupTarget)) {
      return null;
    }
    try {
      XmlSerializer out=new FastXmlSerializer();
      out.setOutput(stream,"utf-8");
      out.startDocument(null,true);
      out.startTag(null,"ws");
      out.attribute(null,"version",String.valueOf(WIDGET_STATE_VERSION));
      out.attribute(null,"pkg",backupTarget);
      int N=mInstalledProviders.size();
      int index=0;
      for (int i=0; i < N; i++) {
        Provider p=mInstalledProviders.get(i);
        if (p.instances.size() > 0) {
          if (backupTarget.equals(p.info.provider.getPackageName()) || p.isHostedBy(backupTarget)) {
            serializeProvider(out,p);
            p.tag=index++;
          }
        }
      }
      N=mHosts.size();
      index=0;
      for (int i=0; i < N; i++) {
        Host host=mHosts.get(i);
        if (backupTarget.equals(host.packageName) || host.hostsPackage(backupTarget)) {
          serializeHost(out,host);
          host.tag=index++;
        }
      }
      N=mAppWidgetIds.size();
      for (int i=0; i < N; i++) {
        AppWidgetId id=mAppWidgetIds.get(i);
        if (backupTarget.equals(id.host.packageName) || backupTarget.equals(id.provider.info.provider.getPackageName())) {
          serializeAppWidgetId(out,id);
        }
      }
      out.endTag(null,"ws");
      out.endDocument();
    }
 catch (    IOException e) {
      Slog.w(TAG,"Unable to save widget state for " + backupTarget);
      return null;
    }
  }
  return stream.toByteArray();
}
