{
switch (mAction) {
case ACTION_DOWN:
{
      mFlags&=~FLAG_START_TRACKING;
      boolean res=receiver.onKeyDown(mKeyCode,this);
      if (state != null) {
        if (res && mRepeatCount == 0 && (mFlags & FLAG_START_TRACKING) != 0) {
          state.startTracking(this,target);
        }
 else         if (isLongPress() && state.isTracking(this)) {
          try {
            if (receiver.onKeyLongPress(mKeyCode,this)) {
              state.performedLongPress(this);
              res=true;
            }
          }
 catch (          AbstractMethodError e) {
          }
        }
      }
      return res;
    }
case ACTION_UP:
  if (state != null) {
    state.handleUpEvent(this);
  }
return receiver.onKeyUp(mKeyCode,this);
case ACTION_MULTIPLE:
final int count=mRepeatCount;
final int code=mKeyCode;
if (receiver.onKeyMultiple(code,count,this)) {
return true;
}
if (code != KeyEvent.KEYCODE_UNKNOWN) {
mAction=ACTION_DOWN;
mRepeatCount=0;
boolean handled=receiver.onKeyDown(code,this);
if (handled) {
mAction=ACTION_UP;
receiver.onKeyUp(code,this);
}
mAction=ACTION_MULTIPLE;
mRepeatCount=count;
return handled;
}
return false;
}
return false;
}
