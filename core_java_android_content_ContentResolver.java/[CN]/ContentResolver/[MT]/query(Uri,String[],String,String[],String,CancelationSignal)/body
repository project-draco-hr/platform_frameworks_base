{
  IContentProvider provider=acquireProvider(uri);
  if (provider == null) {
    return null;
  }
  try {
    long startTime=SystemClock.uptimeMillis();
    ICancelationSignal remoteCancelationSignal=null;
    if (cancelationSignal != null) {
      cancelationSignal.throwIfCanceled();
      remoteCancelationSignal=provider.createCancelationSignal();
      cancelationSignal.setRemote(remoteCancelationSignal);
    }
    Cursor qCursor=provider.query(uri,projection,selection,selectionArgs,sortOrder,remoteCancelationSignal);
    if (qCursor == null) {
      releaseProvider(provider);
      return null;
    }
    qCursor.getCount();
    long durationMillis=SystemClock.uptimeMillis() - startTime;
    maybeLogQueryToEventLog(durationMillis,uri,projection,selection,sortOrder);
    return new CursorWrapperInner(qCursor,provider);
  }
 catch (  RemoteException e) {
    releaseProvider(provider);
    return null;
  }
catch (  RuntimeException e) {
    releaseProvider(provider);
    throw e;
  }
}
