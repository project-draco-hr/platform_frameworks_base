{
  ArrayList<DataCallState> dataCallStates=(ArrayList<DataCallState>)(ar.result);
  if (ar.exception != null) {
    return;
  }
  if (mState == State.CONNECTED) {
    boolean isActiveOrDormantConnectionPresent=false;
    int connectionState=DATA_CONNECTION_ACTIVE_PH_LINK_INACTIVE;
    for (int index=0; index < dataCallStates.size(); index++) {
      connectionState=dataCallStates.get(index).active;
      if (connectionState != DATA_CONNECTION_ACTIVE_PH_LINK_INACTIVE) {
        isActiveOrDormantConnectionPresent=true;
        break;
      }
    }
    if (!isActiveOrDormantConnectionPresent) {
      log("onDataStateChanged: No active connection" + "state is CONNECTED, disconnecting/cleanup");
      writeEventLogCdmaDataDrop();
      cleanUpConnection(true,null);
      return;
    }
switch (connectionState) {
case DATA_CONNECTION_ACTIVE_PH_LINK_UP:
      log("onDataStateChanged: active=LINK_ACTIVE && CONNECTED, ignore");
    mActivity=Activity.NONE;
  mPhone.notifyDataActivity();
startNetStatPoll();
break;
case DATA_CONNECTION_ACTIVE_PH_LINK_DOWN:
log("onDataStateChanged active=LINK_DOWN && CONNECTED, dormant");
mActivity=Activity.DORMANT;
mPhone.notifyDataActivity();
stopNetStatPoll();
break;
default :
log("onDataStateChanged: IGNORE unexpected DataCallState.active=" + connectionState);
}
}
 else {
log("onDataStateChanged: not connected, state=" + mState + " ignoring");
}
}
