{
  if (mReceivedPointerTracker.getActivePointerCount() == 0) {
    return;
  }
  MotionEvent lastEvent=mInjectedPointerTracker.getLastInjectedHoverEvent();
  if (lastEvent == null) {
    return;
  }
  final int exploreLocationX=(int)lastEvent.getX(lastEvent.getActionIndex());
  final int exploreLocationY=(int)lastEvent.getY(lastEvent.getActionIndex());
  Rect bounds=mTempRect;
  boolean useFocusedBounds=false;
  final int pointerId=mEvent.getPointerId(mEvent.getActionIndex());
  final int pointerIndex=mEvent.findPointerIndex(pointerId);
  if (mAms.getAccessibilityFocusBounds(exploreLocationX,exploreLocationY,bounds)) {
    if (!bounds.contains((int)mEvent.getX(pointerIndex),(int)mEvent.getY(pointerIndex))) {
      useFocusedBounds=true;
    }
  }
  mLongPressingPointerId=mEvent.getPointerId(pointerIndex);
  final int eventX=(int)mEvent.getX(pointerIndex);
  final int eventY=(int)mEvent.getY(pointerIndex);
  if (useFocusedBounds) {
    mLongPressingPointerDeltaX=eventX - bounds.centerX();
    mLongPressingPointerDeltaY=eventY - bounds.centerY();
  }
 else {
    mLongPressingPointerDeltaX=eventX - exploreLocationX;
    mLongPressingPointerDeltaY=eventY - exploreLocationY;
  }
  sendExitEventsIfNeeded(mPolicyFlags);
  mCurrentState=STATE_DELEGATING;
  sendDownForAllActiveNotInjectedPointers(mEvent,mPolicyFlags);
  clear();
}
