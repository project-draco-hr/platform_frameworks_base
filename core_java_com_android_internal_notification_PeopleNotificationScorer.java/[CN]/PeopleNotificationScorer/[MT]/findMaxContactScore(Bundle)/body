{
  if (extras == null) {
    return 0f;
  }
  final String[] people=extras.getStringArray(Notification.EXTRA_PEOPLE);
  if (people == null || people.length == 0) {
    return 0f;
  }
  float rank=0f;
  for (int personIdx=0; personIdx < people.length && personIdx < MAX_PEOPLE; personIdx++) {
    final String handle=people[personIdx];
    if (TextUtils.isEmpty(handle))     continue;
    LookupResult lookupResult=mPeopleCache.get(handle);
    if (lookupResult == null || lookupResult.isExpired()) {
      final Uri uri=Uri.parse(handle);
      if ("tel".equals(uri.getScheme())) {
        if (DBG)         Slog.w(TAG,"checking telephone URI: " + handle);
        lookupResult=lookupPhoneContact(handle,uri.getSchemeSpecificPart());
      }
 else       if (handle.startsWith(Contacts.CONTENT_LOOKUP_URI.toString())) {
        if (DBG)         Slog.w(TAG,"checking lookup URI: " + handle);
        lookupResult=resolveContactsUri(handle,uri);
      }
 else {
        if (DBG)         Slog.w(TAG,"unsupported URI " + handle);
      }
    }
 else {
      if (DBG)       Slog.w(TAG,"using cached lookupResult: " + lookupResult.mId);
    }
    if (lookupResult != null) {
      rank=Math.max(rank,lookupResult.getRank());
    }
  }
  return rank;
}
