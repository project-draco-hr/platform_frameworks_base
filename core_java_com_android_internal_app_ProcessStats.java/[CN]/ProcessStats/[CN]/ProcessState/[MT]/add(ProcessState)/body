{
  for (int i=0; i < other.mDurationsTableSize; i++) {
    int ent=other.mDurationsTable[i];
    int state=(ent >> OFFSET_TYPE_SHIFT) & OFFSET_TYPE_MASK;
    if (DEBUG)     Slog.d(TAG,"Adding state " + state + " duration "+ other.mStats.getLong(ent,0));
    addDuration(state,other.mStats.getLong(ent,0));
  }
  for (int i=0; i < other.mPssTableSize; i++) {
    int ent=other.mPssTable[i];
    int state=(ent >> OFFSET_TYPE_SHIFT) & OFFSET_TYPE_MASK;
    addPss(state,(int)other.mStats.getLong(ent,PSS_SAMPLE_COUNT),other.mStats.getLong(ent,PSS_MINIMUM),other.mStats.getLong(ent,PSS_AVERAGE),other.mStats.getLong(ent,PSS_MAXIMUM),other.mStats.getLong(ent,PSS_USS_MINIMUM),other.mStats.getLong(ent,PSS_USS_AVERAGE),other.mStats.getLong(ent,PSS_USS_MAXIMUM));
  }
  mNumExcessiveWake+=other.mNumExcessiveWake;
  mNumExcessiveCpu+=other.mNumExcessiveCpu;
}
