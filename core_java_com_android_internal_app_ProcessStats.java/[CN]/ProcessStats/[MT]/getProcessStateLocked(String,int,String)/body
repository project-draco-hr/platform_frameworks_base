{
  final PackageState pkgState=getPackageStateLocked(packageName,uid);
  ProcessState ps=pkgState.mProcesses.get(processName);
  if (ps != null) {
    return ps;
  }
  ProcessState commonProc=mProcesses.get(processName,uid);
  if (commonProc == null) {
    commonProc=new ProcessState(this,packageName,uid,processName);
    mProcesses.put(processName,uid,commonProc);
    if (DEBUG)     Slog.d(TAG,"GETPROC created new common " + commonProc);
  }
  if (!commonProc.mMultiPackage) {
    if (packageName.equals(commonProc.mPackage)) {
      ps=commonProc;
      if (DEBUG)       Slog.d(TAG,"GETPROC also using for pkg " + commonProc);
    }
 else {
      if (DEBUG)       Slog.d(TAG,"GETPROC need to split common proc!");
      commonProc.mMultiPackage=true;
      long now=SystemClock.uptimeMillis();
      final PackageState commonPkgState=getPackageStateLocked(commonProc.mPackage,uid);
      if (commonPkgState != null) {
        ProcessState cloned=commonProc.clone(commonProc.mPackage,now);
        if (DEBUG)         Slog.d(TAG,"GETPROC setting clone to pkg " + commonProc.mPackage + ": "+ cloned);
        commonPkgState.mProcesses.put(commonProc.mName,cloned);
        for (int i=commonPkgState.mServices.size() - 1; i >= 0; i--) {
          ServiceState ss=commonPkgState.mServices.valueAt(i);
          if (ss.mProc == commonProc) {
            if (DEBUG)             Slog.d(TAG,"GETPROC switching service to cloned: " + ss);
            ss.mProc=cloned;
          }
 else           if (DEBUG) {
            Slog.d(TAG,"GETPROC leaving proc of " + ss);
          }
        }
      }
 else {
        Slog.w(TAG,"Cloning proc state: no package state " + commonProc.mPackage + "/"+ uid+ " for proc "+ commonProc.mName);
      }
      ps=new ProcessState(commonProc,packageName,uid,processName,now);
      if (DEBUG)       Slog.d(TAG,"GETPROC created new pkg " + ps);
    }
  }
 else {
    ps=new ProcessState(commonProc,packageName,uid,processName,SystemClock.uptimeMillis());
    if (DEBUG)     Slog.d(TAG,"GETPROC created new pkg " + ps);
  }
  pkgState.mProcesses.put(processName,ps);
  if (DEBUG)   Slog.d(TAG,"GETPROC adding new pkg " + ps);
  return ps;
}
