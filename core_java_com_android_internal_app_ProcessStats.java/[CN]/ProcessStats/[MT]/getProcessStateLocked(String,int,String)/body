{
  final PackageState pkgState=getPackageStateLocked(packageName,uid);
  ProcessState ps=pkgState.mProcesses.get(processName);
  if (ps != null) {
    return ps;
  }
  ProcessState commonProc=mProcesses.get(processName,uid);
  if (commonProc == null) {
    commonProc=new ProcessState(this,packageName,uid,processName);
    mProcesses.put(processName,uid,commonProc);
  }
  if (!commonProc.mMultiPackage) {
    if (packageName.equals(commonProc.mPackage)) {
      ps=commonProc;
    }
 else {
      commonProc.mMultiPackage=true;
      long now=SystemClock.uptimeMillis();
      final PackageState commonPkgState=getPackageStateLocked(commonProc.mPackage,uid);
      if (commonPkgState != null) {
        commonPkgState.mProcesses.put(commonProc.mName,commonProc.clone(commonProc.mPackage,now));
      }
 else {
        Slog.w(TAG,"Cloning proc state: no package state " + commonProc.mPackage + "/"+ uid+ " for proc "+ commonProc.mName);
      }
      ps=new ProcessState(commonProc,packageName,uid,processName,now);
    }
  }
 else {
    ps=new ProcessState(commonProc,packageName,uid,processName,SystemClock.uptimeMillis());
  }
  pkgState.mProcesses.put(processName,ps);
  return ps;
}
