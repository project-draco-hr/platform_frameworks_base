{
  final int NSS=sepScreenStates ? screenStates.length : 1;
  final int NMS=sepMemStates ? memStates.length : 1;
  final int NPS=sepProcStates ? procStates.length : 1;
  for (int iss=0; iss < NSS; iss++) {
    for (int ims=0; ims < NMS; ims++) {
      for (int ips=0; ips < NPS; ips++) {
        final int vsscreen=sepScreenStates ? screenStates[iss] : 0;
        final int vsmem=sepMemStates ? memStates[ims] : 0;
        final int vsproc=sepProcStates ? procStates[ips] : 0;
        final int NSA=sepScreenStates ? 1 : screenStates.length;
        final int NMA=sepMemStates ? 1 : memStates.length;
        final int NPA=sepProcStates ? 1 : procStates.length;
        long totalTime=0;
        for (int isa=0; isa < NSA; isa++) {
          for (int ima=0; ima < NMA; ima++) {
            for (int ipa=0; ipa < NPA; ipa++) {
              final int vascreen=sepScreenStates ? 0 : screenStates[isa];
              final int vamem=sepMemStates ? 0 : memStates[ima];
              final int vaproc=sepProcStates ? 0 : procStates[ipa];
              final int bucket=((vsscreen + vascreen + vsmem+ vamem) * STATE_COUNT) + vsproc + vaproc;
              totalTime+=proc.getDuration(bucket,now);
            }
          }
        }
        pw.print(CSV_SEP);
        pw.print(totalTime);
      }
    }
  }
}
