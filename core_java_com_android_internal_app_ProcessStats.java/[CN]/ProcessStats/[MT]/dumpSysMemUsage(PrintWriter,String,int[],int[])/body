{
  int printedScreen=-1;
  for (int is=0; is < screenStates.length; is++) {
    int printedMem=-1;
    for (int im=0; im < memStates.length; im++) {
      final int iscreen=screenStates[is];
      final int imem=memStates[im];
      final int bucket=((iscreen + imem) * STATE_COUNT);
      long count=getSysMemUsageValue(bucket,SYS_MEM_USAGE_SAMPLE_COUNT);
      if (count > 0) {
        pw.print(prefix);
        if (screenStates.length > 1) {
          printScreenLabel(pw,printedScreen != iscreen ? iscreen : STATE_NOTHING);
          printedScreen=iscreen;
        }
        if (memStates.length > 1) {
          printMemLabel(pw,printedMem != imem ? imem : STATE_NOTHING,'\0');
          printedMem=imem;
        }
        pw.print(": ");
        pw.print(count);
        pw.println(" samples:");
        dumpSysMemUsageCategory(pw,prefix,"  Cached",bucket,SYS_MEM_USAGE_CACHED_MINIMUM);
        dumpSysMemUsageCategory(pw,prefix,"  Free",bucket,SYS_MEM_USAGE_FREE_MINIMUM);
        dumpSysMemUsageCategory(pw,prefix,"  ZRam",bucket,SYS_MEM_USAGE_ZRAM_MINIMUM);
        dumpSysMemUsageCategory(pw,prefix,"  Kernel",bucket,SYS_MEM_USAGE_KERNEL_MINIMUM);
        dumpSysMemUsageCategory(pw,prefix,"  Native",bucket,SYS_MEM_USAGE_NATIVE_MINIMUM);
      }
    }
  }
}
