{
  mCallbackProxy=proxy;
  mWebViewClassic=w;
  mJavascriptInterfaces=javascriptInterfaces;
  mContext=context;
synchronized (WebViewCore.class) {
    if (sWebCoreHandler == null) {
      Thread t=new Thread(new WebCoreThread());
      t.setName(THREAD_NAME);
      t.start();
      try {
        WebViewCore.class.wait();
      }
 catch (      InterruptedException e) {
        Log.e(LOGTAG,"Caught exception while waiting for thread " + "creation.");
        Log.e(LOGTAG,Log.getStackTraceString(e));
      }
      WebCoreThreadWatchdog.start(context,sWebCoreHandler);
    }
  }
  mEventHub=new EventHub();
  mSettings=new WebSettingsClassic(mContext,mWebViewClassic);
  WebIconDatabase.getInstance();
  WebStorageClassic.getInstance().createUIHandler();
  GeolocationPermissionsClassic.getInstance().createUIHandler();
  ActivityManager manager=(ActivityManager)mContext.getSystemService(Context.ACTIVITY_SERVICE);
  ActivityManager.MemoryInfo memInfo=new ActivityManager.MemoryInfo();
  manager.getMemoryInfo(memInfo);
  mLowMemoryUsageThresholdMb=manager.getLargeMemoryClass();
  mHighMemoryUsageThresholdMb=(int)(mLowMemoryUsageThresholdMb * 1.5);
  mHighUsageDeltaMb=mLowMemoryUsageThresholdMb / 32;
  Message init=sWebCoreHandler.obtainMessage(WebCoreThread.INITIALIZE,this);
  sWebCoreHandler.sendMessage(init);
}
