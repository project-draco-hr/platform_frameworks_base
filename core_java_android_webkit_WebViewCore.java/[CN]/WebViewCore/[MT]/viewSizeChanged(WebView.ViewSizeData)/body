{
  int w=data.mWidth;
  int h=data.mHeight;
  int textwrapWidth=data.mTextWrapWidth;
  float scale=data.mScale;
  if (DebugFlags.WEB_VIEW_CORE) {
    Log.v(LOGTAG,"viewSizeChanged w=" + w + "; h="+ h+ "; textwrapWidth="+ textwrapWidth+ "; scale="+ scale);
  }
  if (w == 0) {
    Log.w(LOGTAG,"skip viewSizeChanged as w is 0");
    return;
  }
  int width=w;
  if (mSettings.getUseWideViewPort()) {
    if (mViewportWidth == -1) {
      if (mSettings.getLayoutAlgorithm() == WebSettings.LayoutAlgorithm.NORMAL || mSettings.getUseFixedViewport()) {
        width=WebView.DEFAULT_VIEWPORT_WIDTH;
      }
 else {
        width=Math.min(WebView.sMaxViewportWidth,Math.max(w,Math.max(WebView.DEFAULT_VIEWPORT_WIDTH,nativeGetContentMinPrefWidth())));
      }
    }
 else     if (mViewportWidth > 0) {
      if (mSettings.getUseFixedViewport()) {
        width=mViewportWidth;
      }
 else {
        width=Math.max(w,mViewportWidth);
      }
    }
 else     if (mSettings.getUseFixedViewport()) {
      width=mWebView.getViewWidth();
    }
 else {
      width=textwrapWidth;
    }
  }
  int height=h;
  if (width != w) {
    float heightWidthRatio=data.mHeightWidthRatio;
    float ratio=(heightWidthRatio > 0) ? heightWidthRatio : (float)h / w;
    height=Math.round(ratio * width);
  }
  nativeSetSize(width,height,textwrapWidth,scale,w,data.mActualViewHeight > 0 ? data.mActualViewHeight : h,data.mAnchorX,data.mAnchorY,data.mIgnoreHeight);
  boolean needInvalidate=(mCurrentViewWidth == 0);
  mCurrentViewWidth=w;
  mCurrentViewHeight=h;
  mCurrentViewScale=scale;
  if (needInvalidate) {
    if (DebugFlags.WEB_VIEW_CORE)     Log.v(LOGTAG,"viewSizeChanged");
    contentDraw();
  }
  mEventHub.sendMessage(Message.obtain(null,EventHub.UPDATE_CACHE_AND_TEXT_ENTRY));
}
