{
  if (mWebView != null && mWebView.mHeightCanMeasure) {
    mWebView.mLastHeightSent=0;
    mEventHub.sendMessage(Message.obtain(null,EventHub.VIEW_SIZE_CHANGED,mWebView.mLastWidthSent,mWebView.mLastHeightSent,-1.0f));
  }
  mBrowserFrame.didFirstLayout();
  mWebkitScrollX=mWebkitScrollY=0;
  setViewportSettingsFromNative();
  if (WebView.DEFAULT_SCALE_PERCENT != 100) {
    float adjust=WebView.DEFAULT_SCALE_PERCENT / 100;
    if (mViewportInitialScale > 0) {
      mViewportInitialScale*=adjust;
    }
    if (mViewportMinimumScale > 0) {
      mViewportMinimumScale*=adjust;
    }
    if (mViewportMaximumScale > 0) {
      mViewportMaximumScale*=adjust;
    }
  }
  if (mViewportWidth == 0) {
    if (mViewportInitialScale == 0) {
      mViewportInitialScale=WebView.DEFAULT_SCALE_PERCENT;
    }
    if (mViewportMinimumScale == 0) {
      mViewportMinimumScale=WebView.DEFAULT_SCALE_PERCENT;
    }
  }
  if (mViewportUserScalable == false) {
    mViewportInitialScale=WebView.DEFAULT_SCALE_PERCENT;
    mViewportMinimumScale=WebView.DEFAULT_SCALE_PERCENT;
    mViewportMaximumScale=WebView.DEFAULT_SCALE_PERCENT;
  }
  if (mViewportMinimumScale > mViewportInitialScale) {
    if (mViewportInitialScale == 0) {
      mViewportInitialScale=mViewportMinimumScale;
    }
 else {
      mViewportMinimumScale=mViewportInitialScale;
    }
  }
  if (mViewportMaximumScale > 0) {
    if (mViewportMaximumScale < mViewportInitialScale) {
      mViewportMaximumScale=mViewportInitialScale;
    }
 else     if (mViewportInitialScale == 0) {
      mViewportInitialScale=mViewportMaximumScale;
    }
  }
  if (mViewportWidth < 0 && mViewportInitialScale == WebView.DEFAULT_SCALE_PERCENT) {
    mViewportWidth=0;
  }
  if (mWebView != null) {
    HashMap scaleLimit=new HashMap();
    scaleLimit.put("minScale",mViewportMinimumScale);
    scaleLimit.put("maxScale",mViewportMaximumScale);
    if (mRestoredScale > 0) {
      Message.obtain(mWebView.mPrivateHandler,WebView.DID_FIRST_LAYOUT_MSG_ID,mRestoredScale,0,scaleLimit).sendToTarget();
      mRestoredScale=0;
    }
 else {
      Message.obtain(mWebView.mPrivateHandler,WebView.DID_FIRST_LAYOUT_MSG_ID,mViewportInitialScale,mViewportWidth,scaleLimit).sendToTarget();
    }
    Message.obtain(mWebView.mPrivateHandler,WebView.SCROLL_TO_MSG_ID,mRestoredX,mRestoredY).sendToTarget();
    mRestoredX=mRestoredY=0;
    if (mCurrentViewWidth != 0) {
synchronized (this) {
        if (mDrawIsScheduled) {
          mEventHub.removeMessages(EventHub.WEBKIT_DRAW);
        }
        mDrawIsScheduled=true;
        mEventHub.sendMessageAtFrontOfQueue(Message.obtain(null,EventHub.WEBKIT_DRAW));
      }
    }
  }
}
