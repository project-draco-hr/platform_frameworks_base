{
  if (LOGV_ENABLED)   Log.v(LOGTAG,"CORE onSizeChanged");
  if (w == 0) {
    Log.w(LOGTAG,"skip viewSizeChanged as w is 0");
    return;
  }
  float scale=(float)viewWidth / w;
  if (mSettings.getUseWideViewPort() && (w < mViewportWidth || mViewportWidth == -1)) {
    int width=mViewportWidth;
    int screenWidth=Math.max(w,MIN_SCREEN_WIDTH);
    if (mViewportWidth == -1) {
      if (mSettings.getLayoutAlgorithm() == WebSettings.LayoutAlgorithm.NORMAL) {
        width=WebView.ZOOM_OUT_WIDTH;
      }
 else {
        int minContentWidth=nativeGetContentMinPrefWidth();
        if (minContentWidth > WebView.MAX_FLOAT_CONTENT_WIDTH) {
          width=minContentWidth;
          screenWidth=Math.min(screenWidth,viewWidth);
        }
 else {
          width=Math.max(w,minContentWidth);
        }
      }
    }
    nativeSetSize(width,Math.round((float)width * h / w),screenWidth,scale,w,h);
  }
 else {
    nativeSetSize(w,h,w,scale,w,h);
  }
  boolean needInvalidate=(mCurrentViewWidth == 0);
  mCurrentViewWidth=w;
  mCurrentViewHeight=h;
  if (needInvalidate) {
    if (LOGV_ENABLED)     Log.v(LOGTAG,"viewSizeChanged");
    contentDraw();
  }
  mEventHub.sendMessage(Message.obtain(null,EventHub.UPDATE_CACHE_AND_TEXT_ENTRY));
}
