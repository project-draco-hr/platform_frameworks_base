{
  MediaMetadataRetriever retriever=new MediaMetadataRetriever();
  boolean hasFailed=false;
  try {
    String path=null;
    retriever.setDataSource(path);
    Log.e(TAG,"IllegalArgumentException failed to be thrown.");
    hasFailed=true;
  }
 catch (  Exception e) {
    if (!(e instanceof IllegalArgumentException)) {
      Log.e(TAG,"Expected a IllegalArgumentException, but got a different exception");
      hasFailed=true;
    }
  }
  try {
    retriever.setDataSource(MediaNames.TEST_PATH_5);
    Log.e(TAG,"IllegalArgumentException failed to be thrown.");
    hasFailed=true;
  }
 catch (  Exception e) {
    if (!(e instanceof IllegalArgumentException)) {
      Log.e(TAG,"Expected a IllegalArgumentException, but got a different exception");
      hasFailed=true;
    }
  }
  try {
    retriever.setDataSource(MediaNames.TEST_PATH_4);
    Log.e(TAG,"RuntimeException failed to be thrown.");
    hasFailed=true;
  }
 catch (  Exception e) {
    if (!(e instanceof RuntimeException)) {
      Log.e(TAG,"Expected a RuntimeException, but got a different exception");
      hasFailed=true;
    }
  }
  try {
    retriever.setDataSource(MediaNames.TEST_PATH_3);
    Log.e(TAG,"RuntimeException failed to be thrown.");
    hasFailed=true;
  }
 catch (  Exception e) {
    if (!(e instanceof RuntimeException)) {
      Log.e(TAG,"Expected a RuntimeException, but got a different exception");
      hasFailed=true;
    }
  }
  retriever.release();
  assertTrue(!hasFailed);
}
