{
  super.onCreate(savedInstanceState);
  ConnectivityManager cm=(ConnectivityManager)getSystemService(Context.CONNECTIVITY_SERVICE);
  mTethered=cm.getTetheredIfaces().length;
  int tetherable=cm.getTetherableIfaces().length;
  if ((mTethered == 0) && (tetherable == 0)) {
    finish();
    return;
  }
  if (mTethered == 0) {
    mAlertParams.mIconId=com.android.internal.R.drawable.ic_dialog_usb;
    mAlertParams.mTitle=getString(com.android.internal.R.string.tether_title);
    mAlertParams.mMessage=getString(com.android.internal.R.string.tether_message);
    mAlertParams.mPositiveButtonText=getString(com.android.internal.R.string.tether_button);
    mAlertParams.mPositiveButtonListener=this;
    mAlertParams.mNegativeButtonText=getString(com.android.internal.R.string.tether_button_cancel);
    mAlertParams.mNegativeButtonListener=this;
  }
 else {
    mAlertParams.mIconId=com.android.internal.R.drawable.ic_dialog_usb;
    mAlertParams.mTitle=getString(com.android.internal.R.string.tether_stop_title);
    mAlertParams.mMessage=getString(com.android.internal.R.string.tether_stop_message);
    mAlertParams.mPositiveButtonText=getString(com.android.internal.R.string.tether_stop_button);
    mAlertParams.mPositiveButtonListener=this;
    mAlertParams.mNegativeButtonText=getString(com.android.internal.R.string.tether_stop_button_cancel);
    mAlertParams.mNegativeButtonListener=this;
  }
  setupAlert();
}
