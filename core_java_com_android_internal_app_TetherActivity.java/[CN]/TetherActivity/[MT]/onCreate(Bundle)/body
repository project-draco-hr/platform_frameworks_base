{
  super.onCreate(savedInstanceState);
  ConnectivityManager cm=(ConnectivityManager)getSystemService(Context.CONNECTIVITY_SERVICE);
  if (cm.getTetheredIfaces().length > 0) {
    mWantTethering=false;
  }
 else   if (cm.getTetherableIfaces().length > 0) {
    mWantTethering=true;
  }
 else {
    finish();
    return;
  }
  if (mWantTethering == true) {
    mAlertParams.mIconId=com.android.internal.R.drawable.ic_dialog_usb;
    mAlertParams.mTitle=getString(com.android.internal.R.string.tether_title);
    mAlertParams.mMessage=getString(com.android.internal.R.string.tether_message);
    mAlertParams.mPositiveButtonText=getString(com.android.internal.R.string.tether_button);
    mAlertParams.mPositiveButtonListener=this;
    mAlertParams.mNegativeButtonText=getString(com.android.internal.R.string.tether_button_cancel);
    mAlertParams.mNegativeButtonListener=this;
  }
 else {
    mAlertParams.mIconId=com.android.internal.R.drawable.ic_dialog_usb;
    mAlertParams.mTitle=getString(com.android.internal.R.string.tether_stop_title);
    mAlertParams.mMessage=getString(com.android.internal.R.string.tether_stop_message);
    mAlertParams.mPositiveButtonText=getString(com.android.internal.R.string.tether_stop_button);
    mAlertParams.mPositiveButtonListener=this;
    mAlertParams.mNegativeButtonText=getString(com.android.internal.R.string.tether_stop_button_cancel);
    mAlertParams.mNegativeButtonListener=this;
  }
  setupAlert();
}
