{
  final Pair<Integer,Integer>[] resolutions;
  final Pair<Integer,Integer> maxResolution;
  int retValue=VideoFrameSize.SIZE_UNDEFINED;
switch (aspectRatio) {
case MediaProperties.ASPECT_RATIO_3_2:
    if (height == MediaProperties.HEIGHT_480)     retValue=VideoFrameSize.NTSC;
 else     if (height == MediaProperties.HEIGHT_720)     retValue=VideoFrameSize.W720p;
  break;
case MediaProperties.ASPECT_RATIO_16_9:
if (height == MediaProperties.HEIGHT_480) retValue=VideoFrameSize.WVGA16x9;
 else if (height == MediaProperties.HEIGHT_720) retValue=VideoFrameSize.V720p;
 else if (height == MediaProperties.HEIGHT_1080) retValue=VideoFrameSize.V1080p;
break;
case MediaProperties.ASPECT_RATIO_4_3:
if (height == MediaProperties.HEIGHT_480) retValue=VideoFrameSize.VGA;
 else if (height == MediaProperties.HEIGHT_720) retValue=VideoFrameSize.S720p;
break;
case MediaProperties.ASPECT_RATIO_5_3:
if (height == MediaProperties.HEIGHT_480) retValue=VideoFrameSize.WVGA;
break;
case MediaProperties.ASPECT_RATIO_11_9:
if (height == MediaProperties.HEIGHT_144) retValue=VideoFrameSize.QCIF;
 else if (height == MediaProperties.HEIGHT_288) retValue=VideoFrameSize.CIF;
break;
}
if (retValue == VideoFrameSize.SIZE_UNDEFINED) {
resolutions=MediaProperties.getSupportedResolutions(mVideoEditor.getAspectRatio());
maxResolution=resolutions[resolutions.length - 1];
retValue=findVideoResolution(mVideoEditor.getAspectRatio(),maxResolution.second);
}
return retValue;
}
