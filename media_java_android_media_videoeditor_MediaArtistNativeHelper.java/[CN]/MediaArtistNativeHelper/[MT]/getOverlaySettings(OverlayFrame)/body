{
  EffectSettings effectSettings=new EffectSettings();
  Bitmap bitmap=null;
  effectSettings.startTime=(int)overlay.getStartTime();
  effectSettings.duration=(int)overlay.getDuration();
  effectSettings.videoEffectType=VideoEffect.FRAMING;
  effectSettings.audioEffectType=0;
  effectSettings.startPercent=0;
  effectSettings.durationPercent=0;
  effectSettings.framingFile=null;
  if ((bitmap=overlay.getBitmap()) != null) {
    effectSettings.framingFile=overlay.getFilename();
    if (effectSettings.framingFile == null) {
      try {
        (overlay).save(mProjectPath);
      }
 catch (      IOException e) {
        Log.e("MediaArtistNativeHelper","getOverlaySettings : File not found");
      }
      effectSettings.framingFile=overlay.getFilename();
    }
    if (bitmap.getConfig() == Bitmap.Config.ARGB_8888)     effectSettings.bitmapType=6;
 else     if (bitmap.getConfig() == Bitmap.Config.ARGB_4444)     effectSettings.bitmapType=5;
 else     if (bitmap.getConfig() == Bitmap.Config.RGB_565)     effectSettings.bitmapType=4;
 else     if (bitmap.getConfig() == Bitmap.Config.ALPHA_8)     throw new RuntimeException("Bitmap config not supported");
    effectSettings.width=bitmap.getWidth();
    effectSettings.height=bitmap.getHeight();
    effectSettings.framingBuffer=new int[effectSettings.width];
    int tmp=0;
    short maxAlpha=0;
    short minAlpha=(short)0xFF;
    short alpha=0;
    while (tmp < effectSettings.height) {
      bitmap.getPixels(effectSettings.framingBuffer,0,effectSettings.width,0,tmp,effectSettings.width,1);
      for (int i=0; i < effectSettings.width; i++) {
        alpha=(short)((effectSettings.framingBuffer[i] >> 24) & 0xFF);
        if (alpha > maxAlpha) {
          maxAlpha=alpha;
        }
        if (alpha < minAlpha) {
          minAlpha=alpha;
        }
      }
      tmp+=1;
    }
    alpha=(short)((maxAlpha + minAlpha) / 2);
    alpha=(short)((alpha * 100) / 256);
    effectSettings.alphaBlendingEndPercent=alpha;
    effectSettings.alphaBlendingMiddlePercent=alpha;
    effectSettings.alphaBlendingStartPercent=alpha;
    effectSettings.alphaBlendingFadeInTimePercent=100;
    effectSettings.alphaBlendingFadeOutTimePercent=100;
    effectSettings.framingBuffer=null;
  }
  effectSettings.topLeftX=0;
  effectSettings.topLeftY=0;
  effectSettings.framingResize=true;
  effectSettings.text=null;
  effectSettings.textRenderingData=null;
  effectSettings.textBufferWidth=0;
  effectSettings.textBufferHeight=0;
  effectSettings.fiftiesFrameRate=0;
  effectSettings.rgb16InputColor=0;
  int mediaItemHeight;
  int aspectRatio;
  if (overlay.getMediaItem() instanceof MediaImageItem) {
    if (((MediaImageItem)overlay.getMediaItem()).getGeneratedImageClip() != null) {
      mediaItemHeight=((MediaImageItem)overlay.getMediaItem()).getGeneratedClipHeight();
      aspectRatio=getAspectRatio(((MediaImageItem)overlay.getMediaItem()).getGeneratedClipWidth(),mediaItemHeight);
    }
 else {
      mediaItemHeight=((MediaImageItem)overlay.getMediaItem()).getScaledHeight();
      aspectRatio=overlay.getMediaItem().getAspectRatio();
    }
  }
 else {
    aspectRatio=overlay.getMediaItem().getAspectRatio();
    mediaItemHeight=overlay.getMediaItem().getHeight();
  }
  effectSettings.framingScaledSize=findVideoResolution(aspectRatio,mediaItemHeight);
  return effectSettings;
}
