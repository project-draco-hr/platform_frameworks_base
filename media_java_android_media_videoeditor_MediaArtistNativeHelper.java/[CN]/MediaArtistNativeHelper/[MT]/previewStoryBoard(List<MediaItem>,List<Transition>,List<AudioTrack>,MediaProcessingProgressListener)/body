{
  if (mInvalidatePreviewArray) {
    int previewIndex=0;
    int totalEffects=0;
    int storyBoardTime=0;
    int maxHeight=0;
    int beginCutTime=0;
    int endCutTime=0;
    int effectIndex=0;
    Transition lTransition=null;
    MediaItem lMediaItem=null;
    mPreviewEditSettings=new EditSettings();
    mClipProperties=new PreviewClipProperties();
    mTotalClips=0;
    mTotalClips=mediaItemsList.size();
    for (    Transition transition : mediaTransitionList) {
      if (transition.getDuration() > 0) {
        mTotalClips++;
      }
    }
    totalEffects=getTotalEffects(mediaItemsList);
    mPreviewEditSettings.clipSettingsArray=new ClipSettings[mTotalClips];
    mPreviewEditSettings.effectSettingsArray=new EffectSettings[totalEffects];
    mClipProperties.clipProperties=new Properties[mTotalClips];
    mMediaProcessingProgressListener=listener;
    mProgressToApp=0;
    if (mediaItemsList.size() > 0) {
      for (int i=0; i < mediaItemsList.size(); i++) {
        lMediaItem=mediaItemsList.get(i);
        if (lMediaItem instanceof MediaVideoItem) {
          beginCutTime=(int)((MediaVideoItem)lMediaItem).getBoundaryBeginTime();
          endCutTime=(int)((MediaVideoItem)lMediaItem).getBoundaryEndTime();
        }
 else         if (lMediaItem instanceof MediaImageItem) {
          beginCutTime=0;
          endCutTime=(int)((MediaImageItem)lMediaItem).getTimelineDuration();
        }
        lTransition=lMediaItem.getBeginTransition();
        if (lTransition != null && (lTransition.getDuration() > 0)) {
          generateTransition(lTransition,mPreviewEditSettings,mClipProperties,previewIndex);
          storyBoardTime+=mClipProperties.clipProperties[previewIndex].duration;
          previewIndex++;
        }
        maxHeight=populateMediaItemProperties(lMediaItem,previewIndex,maxHeight);
        if (lMediaItem instanceof MediaImageItem) {
          int tmpCnt=0;
          boolean bEffectKbPresent=false;
          final List<Effect> effectList=lMediaItem.getAllEffects();
          while (tmpCnt < effectList.size()) {
            if (effectList.get(tmpCnt) instanceof EffectKenBurns) {
              bEffectKbPresent=true;
              break;
            }
            tmpCnt++;
          }
          if (bEffectKbPresent) {
            try {
              if (((MediaImageItem)lMediaItem).getGeneratedImageClip() != null) {
                mClipProperties.clipProperties[previewIndex]=getMediaProperties(((MediaImageItem)lMediaItem).getGeneratedImageClip());
              }
 else {
                mClipProperties.clipProperties[previewIndex]=getMediaProperties(((MediaImageItem)lMediaItem).getScaledImageFileName());
                mClipProperties.clipProperties[previewIndex].width=((MediaImageItem)lMediaItem).getScaledWidth();
                mClipProperties.clipProperties[previewIndex].height=((MediaImageItem)lMediaItem).getScaledHeight();
              }
            }
 catch (            Exception e) {
              throw new IllegalArgumentException("Unsupported file or file not found");
            }
          }
 else {
            try {
              mClipProperties.clipProperties[previewIndex]=getMediaProperties(((MediaImageItem)lMediaItem).getScaledImageFileName());
            }
 catch (            Exception e) {
              throw new IllegalArgumentException("Unsupported file or file not found");
            }
            mClipProperties.clipProperties[previewIndex].width=((MediaImageItem)lMediaItem).getScaledWidth();
            mClipProperties.clipProperties[previewIndex].height=((MediaImageItem)lMediaItem).getScaledHeight();
          }
        }
 else {
          try {
            mClipProperties.clipProperties[previewIndex]=getMediaProperties(lMediaItem.getFilename());
          }
 catch (          Exception e) {
            throw new IllegalArgumentException("Unsupported file or file not found");
          }
        }
        mClipProperties.clipProperties[previewIndex].Id=lMediaItem.getId();
        checkOddSizeImage(lMediaItem,mClipProperties,previewIndex);
        adjustVolume(lMediaItem,mClipProperties,previewIndex);
        adjustMediaItemBoundary(mPreviewEditSettings.clipSettingsArray[previewIndex],mClipProperties.clipProperties[previewIndex],lMediaItem);
        effectIndex=populateEffects(lMediaItem,mPreviewEditSettings.effectSettingsArray,effectIndex,beginCutTime,endCutTime,storyBoardTime);
        storyBoardTime+=mClipProperties.clipProperties[previewIndex].duration;
        previewIndex++;
        if (i == (mediaItemsList.size() - 1)) {
          lTransition=lMediaItem.getEndTransition();
          if (lTransition != null && (lTransition.getDuration() > 0)) {
            generateTransition(lTransition,mPreviewEditSettings,mClipProperties,previewIndex);
            break;
          }
        }
      }
    }
    if (!mErrorFlagSet) {
      mPreviewEditSettings.videoFrameSize=findVideoResolution(mVideoEditor.getAspectRatio(),maxHeight);
      populateBackgroundMusicProperties(mediaBGMList);
      try {
        nativePopulateSettings(mPreviewEditSettings,mClipProperties,mAudioSettings);
      }
 catch (      IllegalArgumentException ex) {
        Log.e(TAG,"Illegal argument exception in nativePopulateSettings");
        throw ex;
      }
catch (      IllegalStateException ex) {
        Log.e(TAG,"Illegal state exception in nativePopulateSettings");
        throw ex;
      }
catch (      RuntimeException ex) {
        Log.e(TAG,"Runtime exception in nativePopulateSettings");
        throw ex;
      }
      mInvalidatePreviewArray=false;
      mProcessingState=PROCESSING_NONE;
    }
    if (mErrorFlagSet) {
      mErrorFlagSet=false;
      throw new RuntimeException("preview generation cannot be completed");
    }
  }
}
