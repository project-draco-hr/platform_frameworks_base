{
  if (mProcessingState == PROCESSING_EXPORT) {
    if (mExportProgressListener != null) {
      if ((progress % 2) == 0) {
        mProgressToApp++;
        mExportProgressListener.onProgress(mVideoEditor,mOutputFilename,mProgressToApp);
      }
    }
  }
 else {
    int actualProgress=0;
    int action=0;
    if (mProcessingState == PROCESSING_AUDIO_PCM) {
      action=MediaProcessingProgressListener.ACTION_DECODE;
    }
 else {
      action=MediaProcessingProgressListener.ACTION_ENCODE;
    }
switch (mProcessingState) {
case PROCESSING_AUDIO_PCM:
      actualProgress=progress;
    break;
case PROCESSING_TRANSITION:
  actualProgress=progress;
break;
case PROCESSING_KENBURNS:
actualProgress=progress;
break;
case PROCESSING_INTERMEDIATE1:
if ((progress == 0) && (mProgressToApp != 0)) {
mProgressToApp=0;
}
if ((progress != 0) || (mProgressToApp != 0)) {
actualProgress=progress / 4;
}
break;
case PROCESSING_INTERMEDIATE2:
if ((progress != 0) || (mProgressToApp != 0)) {
actualProgress=25 + progress / 4;
}
break;
case PROCESSING_INTERMEDIATE3:
if ((progress != 0) || (mProgressToApp != 0)) {
actualProgress=50 + progress / 2;
}
break;
case PROCESSING_NONE:
default :
Log.e("MediaArtistNativeHelper","ERROR unexpected State=" + mProcessingState);
return;
}
if ((mProgressToApp != actualProgress) && (actualProgress != 0)) {
mProgressToApp=actualProgress;
if (mMediaProcessingProgressListener != null) {
mMediaProcessingProgressListener.onProgress(mProcessingObject,action,actualProgress);
}
}
if (mProgressToApp == 0) {
if (mMediaProcessingProgressListener != null) {
mMediaProcessingProgressListener.onProgress(mProcessingObject,action,actualProgress);
}
mProgressToApp=1;
}
}
}
