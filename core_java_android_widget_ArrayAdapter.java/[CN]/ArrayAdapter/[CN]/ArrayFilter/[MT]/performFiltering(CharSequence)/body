{
  final FilterResults results=new FilterResults();
  if (mOriginalValues == null) {
synchronized (mLock) {
      mOriginalValues=new ArrayList<>(mObjects);
    }
  }
  if (prefix == null || prefix.length() == 0) {
    final ArrayList<T> list;
synchronized (mLock) {
      list=new ArrayList<>(mOriginalValues);
    }
    results.values=list;
    results.count=list.size();
  }
 else {
    final String prefixString=prefix.toString().toLowerCase();
    final ArrayList<T> values;
synchronized (mLock) {
      values=new ArrayList<>(mOriginalValues);
    }
    final int count=values.size();
    final ArrayList<T> newValues=new ArrayList<>();
    for (int i=0; i < count; i++) {
      final T value=values.get(i);
      final String valueText=value.toString().toLowerCase();
      if (valueText.startsWith(prefixString)) {
        newValues.add(value);
      }
 else {
        final String[] words=valueText.split(" ");
        for (        String word : words) {
          if (word.startsWith(prefixString)) {
            newValues.add(value);
            break;
          }
        }
      }
    }
    results.values=newValues;
    results.count=newValues.size();
  }
  return results;
}
