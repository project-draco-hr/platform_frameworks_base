{
  final ContentResolver cr=mContext.getContentResolver();
  final int silenceAfter=Settings.Global.getInt(cr,Settings.Global.LOW_BATTERY_SOUND_TIMEOUT,0);
  final long offTime=SystemClock.elapsedRealtime() - mScreenOffTime;
  if (silenceAfter > 0 && mScreenOffTime > 0 && offTime > silenceAfter) {
    Slog.i(TAG,"screen off too long (" + offTime + "ms, limit "+ silenceAfter+ "ms): not waking up the user with low battery sound");
    return;
  }
  if (DEBUG) {
    Slog.d(TAG,"playing low battery sound. pick-a-doop!");
  }
  if (Settings.Global.getInt(cr,Settings.Global.POWER_SOUNDS_ENABLED,1) == 1) {
    final String soundPath=Settings.Global.getString(cr,Settings.Global.LOW_BATTERY_SOUND);
    if (soundPath != null) {
      final Uri soundUri=Uri.parse("file://" + soundPath);
      if (soundUri != null) {
        b.setSound(soundUri,AUDIO_ATTRIBUTES);
        if (DEBUG)         Slog.d(TAG,"playing sound " + soundUri);
      }
    }
  }
}
