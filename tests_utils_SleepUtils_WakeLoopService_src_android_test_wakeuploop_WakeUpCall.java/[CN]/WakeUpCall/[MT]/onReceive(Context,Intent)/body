{
  AlarmManager am=(AlarmManager)context.getSystemService(Context.ALARM_SERVICE);
  boolean cancel=intent.hasExtra(CANCEL);
  if (!cancel) {
    long maxLoop=intent.getLongExtra(WakeLoopService.MAX_LOOP,0);
    long wakeupInterval=intent.getLongExtra(WakeLoopService.WAKEUP_INTERNAL,0);
    long thisLoop=intent.getLongExtra(WakeLoopService.THIS_LOOP,-1);
    Log.d(LOG_TAG,String.format("incoming: interval = %d, max loop = %d, this loop = %d",wakeupInterval,maxLoop,thisLoop));
    if (thisLoop == -1) {
      Log.e(LOG_TAG,"no valid loop count received, trying to stop service");
      stopService(intent);
      return;
    }
    if (wakeupInterval == 0) {
      Log.e(LOG_TAG,"no valid wakeup interval received, trying to stop service");
      stopService(intent);
      return;
    }
    thisLoop++;
    Log.d(LOG_TAG,String.format("WakeLoop - iteration %d of %d",thisLoop,maxLoop));
    if (thisLoop == maxLoop) {
      Log.d(LOG_TAG,"reached max loop count, stopping service");
      stopService(intent);
      return;
    }
    screenOn(context);
    FileUtil.get().writeDateToFile(new File(Environment.getExternalStorageDirectory(),"wakeup-loop.txt"));
    long atTime=SystemClock.elapsedRealtime() + wakeupInterval;
    intent.putExtra(WakeLoopService.THIS_LOOP,thisLoop);
    PendingIntent pi=PendingIntent.getBroadcast(context,0,intent,PendingIntent.FLAG_UPDATE_CURRENT);
    am.set(AlarmManager.ELAPSED_REALTIME_WAKEUP,atTime,pi);
  }
 else {
    Log.d(LOG_TAG,"cancelling future alarms on request");
    am.cancel(PendingIntent.getBroadcast(context,0,intent,0));
  }
}
