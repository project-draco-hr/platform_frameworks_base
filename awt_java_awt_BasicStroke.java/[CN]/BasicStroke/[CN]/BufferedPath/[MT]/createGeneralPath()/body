{
  GeneralPath p=new GeneralPath();
  int j=0;
  for (int i=0; i < typeSize; i++) {
    int type=types[i];
switch (type) {
case PathIterator.SEG_MOVETO:
      p.moveTo(points[j],points[j + 1]);
    break;
case PathIterator.SEG_LINETO:
  p.lineTo(points[j],points[j + 1]);
break;
case PathIterator.SEG_QUADTO:
p.quadTo(points[j],points[j + 1],points[j + 2],points[j + 3]);
break;
case PathIterator.SEG_CUBICTO:
p.curveTo(points[j],points[j + 1],points[j + 2],points[j + 3],points[j + 4],points[j + 5]);
break;
case PathIterator.SEG_CLOSE:
p.closePath();
break;
}
j+=pointShift[type];
}
return p;
}
