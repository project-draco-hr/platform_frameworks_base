{
  double nx=x1 + x3 - x2 - x2;
  double ny=y1 + y3 - y2 - y2;
  int n=(int)(1 + Math.sqrt(0.75 * (Math.abs(nx) + Math.abs(ny)) * FLATNESS));
  step=1.0 / n;
  double ax=x1 + x3 - x2 - x2;
  double ay=y1 + y3 - y2 - y2;
  double bx=2.0 * (x2 - x1);
  double by=2.0 * (y2 - y1);
  double dx1=step * (step * ax + bx);
  double dy1=step * (step * ay + by);
  double dx2=step * (step * ax * 2.0);
  double dy2=step * (step * ay * 2.0);
  double vx=x1;
  double vy=y1;
  valSize=n;
  values=new double[valSize];
  double pvx=vx;
  double pvy=vy;
  length=0.0;
  for (int i=0; i < n; i++) {
    vx+=dx1;
    vy+=dy1;
    dx1+=dx2;
    dy1+=dy2;
    double lx=vx - pvx;
    double ly=vy - pvy;
    values[i]=Math.sqrt(lx * lx + ly * ly);
    length+=values[i];
    pvx=vx;
    pvy=vy;
  }
  valPos=0;
  curLen=0.0;
  prevLen=0.0;
}
