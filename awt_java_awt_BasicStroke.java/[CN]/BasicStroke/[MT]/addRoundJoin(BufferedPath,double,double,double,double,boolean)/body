{
  double x1=p.xLast;
  double y1=p.yLast;
  double x10=x1 - x0;
  double y10=y1 - y0;
  double x20=x2 - x0;
  double y20=y2 - y0;
  double x30=x10 + x20;
  double y30=y10 + y20;
  double l30=Math.sqrt(x30 * x30 + y30 * y30);
  if (l30 < 1E-5) {
    p.lineTo(x2,y2);
    return;
  }
  double w=w2 / l30;
  x30*=w;
  y30*=w;
  double x3=x0 + x30;
  double y3=y0 + y30;
  double cos=x10 * x20 + y10 * y20;
  double a=Math.acos(cos / (w2 * w2));
  if (cos >= 0.0) {
    double k=4.0 / 3.0 * Math.tan(a / 4.0);
    if (isLeft) {
      k=-k;
    }
    x10*=k;
    y10*=k;
    x20*=k;
    y20*=k;
    p.cubicTo(x1 - y10,y1 + x10,x2 + y20,y2 - x20,x2,y2);
  }
 else {
    double k=4.0 / 3.0 * Math.tan(a / 8.0);
    if (isLeft) {
      k=-k;
    }
    x10*=k;
    y10*=k;
    x20*=k;
    y20*=k;
    x30*=k;
    y30*=k;
    p.cubicTo(x1 - y10,y1 + x10,x3 + y30,y3 - x30,x3,y3);
    p.cubicTo(x3 - y30,y3 + x30,x2 + y20,y2 - x20,x2,y2);
  }
}
