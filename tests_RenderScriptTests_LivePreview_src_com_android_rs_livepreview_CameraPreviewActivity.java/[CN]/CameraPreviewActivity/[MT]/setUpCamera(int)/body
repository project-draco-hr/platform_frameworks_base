{
  shutdownCamera();
  mCurrentCameraId=id;
  mCamera=Camera.open(id);
  Camera.Parameters p=mCamera.getParameters();
  List<Camera.Size> unsortedSizes=p.getSupportedPreviewSizes();
class SizeCompare implements Comparator<Camera.Size> {
    public int compare(    Camera.Size lhs,    Camera.Size rhs){
      if (lhs.width < rhs.width)       return -1;
      if (lhs.width > rhs.width)       return 1;
      if (lhs.height < rhs.height)       return -1;
      if (lhs.height > rhs.height)       return 1;
      return 0;
    }
  }
  ;
  SizeCompare s=new SizeCompare();
  TreeSet<Camera.Size> sortedResolutions=new TreeSet<Camera.Size>(s);
  sortedResolutions.addAll(unsortedSizes);
  mPreviewSizes=new ArrayList<Camera.Size>(sortedResolutions);
  String[] availableSizeNames=new String[mPreviewSizes.size()];
  for (int i=0; i < mPreviewSizes.size(); i++) {
    availableSizeNames[i]=Integer.toString(mPreviewSizes.get(i).width) + " x " + Integer.toString(mPreviewSizes.get(i).height);
  }
  mResolutionSpinner.setAdapter(new ArrayAdapter<String>(this,R.layout.cf_format_list_item,availableSizeNames));
  mNextPreviewSize=mPreviewSizes.get(0);
  mResolutionSpinner.setSelection(0);
  if (mPreviewTexture != null) {
    startPreview();
  }
}
