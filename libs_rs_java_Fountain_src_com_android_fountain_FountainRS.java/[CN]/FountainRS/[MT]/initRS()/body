{
  mSD=new SomeData();
  mSDType=Type.createFromClass(mRS,SomeData.class,1,"SomeData");
  mIntAlloc=Allocation.createTyped(mRS,mSDType);
  mSD.count=PART_COUNT;
  mIntAlloc.data(mSD);
  Element.Builder eb=new Element.Builder(mRS);
  eb.add(Element.createVector(mRS,Element.DataType.FLOAT_32,2),"delta");
  eb.add(Element.createAttrib(mRS,Element.DataType.FLOAT_32,Element.DataKind.POSITION,2),"position");
  eb.add(Element.createAttrib(mRS,Element.DataType.UNSIGNED_8,Element.DataKind.COLOR,4),"color");
  Element primElement=eb.create();
  SimpleMesh.Builder smb=new SimpleMesh.Builder(mRS);
  int vtxSlot=smb.addVertexType(primElement,PART_COUNT);
  smb.setPrimitive(Primitive.POINT);
  mSM=smb.create();
  mSM.setName("PartMesh");
  Allocation partAlloc=mSM.createVertexAllocation(vtxSlot);
  partAlloc.setName("PartBuffer");
  mSM.bindVertexAllocation(partAlloc,0);
  ScriptC.Builder sb=new ScriptC.Builder(mRS);
  sb.setScript(mRes,R.raw.fountain);
  sb.setRoot(true);
  sb.setType(mSDType,"Control",0);
  sb.setType(mSM.getVertexType(0),"point",1);
  Script script=sb.create();
  script.setClearColor(0.0f,0.0f,0.0f,1.0f);
  script.bindAllocation(mIntAlloc,0);
  script.bindAllocation(partAlloc,1);
  mRS.contextBindRootScript(script);
}
