{
  if (!ensureTestService()) {
    return;
  }
  Task.Builder builder=new Task.Builder(kTaskId++,mServiceComponent);
  String delay=mDelayEditText.getText().toString();
  if (delay != null && !TextUtils.isEmpty(delay)) {
    builder.setMinimumLatency(Long.valueOf(delay));
  }
  String deadline=mDeadlineEditText.getText().toString();
  if (deadline != null && !TextUtils.isEmpty(deadline)) {
    builder.setOverrideDeadline(Long.valueOf(deadline));
  }
  boolean requiresUnmetered=mWiFiConnectivityRadioButton.isSelected();
  boolean requiresAnyConnectivity=mAnyConnectivityRadioButton.isSelected();
  if (requiresUnmetered) {
    builder.setRequiredNetworkCapabilities(Task.NetworkType.UNMETERED);
  }
 else   if (requiresAnyConnectivity) {
    builder.setRequiredNetworkCapabilities(Task.NetworkType.ANY);
  }
  mTestService.scheduleJob(builder.build());
}
