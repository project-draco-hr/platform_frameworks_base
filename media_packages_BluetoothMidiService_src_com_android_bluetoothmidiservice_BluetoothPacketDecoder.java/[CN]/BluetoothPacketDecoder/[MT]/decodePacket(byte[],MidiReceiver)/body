{
  int length=buffer.length;
  if (length < 1) {
    Log.e(TAG,"empty packet");
    return;
  }
  byte header=buffer[0];
  if ((header & 0xC0) != 0x80) {
    Log.e(TAG,"packet does not start with header");
    return;
  }
  int timestamp=(header & HEADER_TIMESTAMP_MASK) << 7;
  boolean lastWasTimestamp=false;
  int dataCount=0;
  int previousLowTimestamp=0;
  for (int i=1; i < buffer.length; i++) {
    byte b=buffer[i];
    if ((b & 0x80) != 0 && !lastWasTimestamp) {
      lastWasTimestamp=true;
      int lowTimestamp=b & TIMESTAMP_MASK_LOW;
      int newTimestamp=(timestamp & TIMESTAMP_MASK_HIGH) | lowTimestamp;
      if (lowTimestamp < previousLowTimestamp) {
        newTimestamp=(newTimestamp + 0x0080) & TIMESTAMP_MASK_HIGH;
      }
      previousLowTimestamp=lowTimestamp;
      if (newTimestamp != timestamp) {
        if (dataCount > 0) {
          try {
            receiver.send(mBuffer,0,dataCount);
          }
 catch (          IOException e) {
          }
          dataCount=0;
        }
      }
      timestamp=newTimestamp;
    }
 else {
      lastWasTimestamp=false;
      mBuffer[dataCount++]=b;
    }
  }
  if (dataCount > 0) {
    try {
      receiver.send(mBuffer,0,dataCount);
    }
 catch (    IOException e) {
    }
  }
}
