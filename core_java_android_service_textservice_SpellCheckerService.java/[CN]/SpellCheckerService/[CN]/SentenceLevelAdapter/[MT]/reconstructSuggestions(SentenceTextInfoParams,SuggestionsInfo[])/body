{
  if (results == null || results.length == 0) {
    return null;
  }
  if (DBG) {
    Log.w(TAG,"Adapter: onGetSuggestions: got " + results.length);
  }
  if (originalTextInfoParams == null) {
    if (DBG) {
      Log.w(TAG,"Adapter: originalTextInfoParams is null.");
    }
    return null;
  }
  final int originalCookie=originalTextInfoParams.mOriginalTextInfo.getCookie();
  final int originalSequence=originalTextInfoParams.mOriginalTextInfo.getSequence();
  final int querySize=originalTextInfoParams.mSize;
  final int[] offsets=new int[querySize];
  final int[] lengths=new int[querySize];
  final SuggestionsInfo[] reconstructedSuggestions=new SuggestionsInfo[querySize];
  for (int i=0; i < querySize; ++i) {
    final SentenceWordItem item=originalTextInfoParams.mItems.get(i);
    SuggestionsInfo result=null;
    for (int j=0; j < results.length; ++j) {
      final SuggestionsInfo cur=results[j];
      if (cur != null && cur.getSequence() == item.mTextInfo.getSequence()) {
        result=cur;
        result.setCookieAndSequence(originalCookie,originalSequence);
        break;
      }
    }
    offsets[i]=item.mStart;
    lengths[i]=item.mLength;
    reconstructedSuggestions[i]=result != null ? result : EMPTY_SUGGESTIONS_INFO;
    if (DBG) {
      final int size=reconstructedSuggestions[i].getSuggestionsCount();
      Log.w(TAG,"reconstructedSuggestions(" + i + ")"+ size+ ", first = "+ (size > 0 ? reconstructedSuggestions[i].getSuggestionAt(0) : "<none>")+ ", offset = "+ offsets[i]+ ", length = "+ lengths[i]);
    }
  }
  return new SentenceSuggestionsInfo(reconstructedSuggestions,offsets,lengths);
}
