{
  final WordIterator wordIterator=mWordIterator;
  final CharSequence originalText=originalTextInfo.getText();
  final int cookie=originalTextInfo.getCookie();
  final int start=0;
  final int end=originalText.length();
  final ArrayList<SentenceWordItem> wordItems=new ArrayList<SentenceWordItem>();
  wordIterator.setCharSequence(originalText,0,originalText.length());
  int wordEnd=wordIterator.following(start);
  int wordStart=wordIterator.getBeginning(wordEnd);
  if (DBG) {
    Log.d(TAG,"iterator: break: ---- 1st word start = " + wordStart + ", end = "+ wordEnd+ "\n"+ originalText);
  }
  while (wordStart <= end && wordEnd != BreakIterator.DONE && wordStart != BreakIterator.DONE) {
    if (wordEnd >= start && wordEnd > wordStart) {
      final CharSequence query=originalText.subSequence(wordStart,wordEnd);
      final TextInfo ti=new TextInfo(query,0,query.length(),cookie,query.hashCode());
      wordItems.add(new SentenceWordItem(ti,wordStart,wordEnd));
      if (DBG) {
        Log.d(TAG,"Adapter: word (" + (wordItems.size() - 1) + ") "+ query);
      }
    }
    wordEnd=wordIterator.following(wordEnd);
    if (wordEnd == BreakIterator.DONE) {
      break;
    }
    wordStart=wordIterator.getBeginning(wordEnd);
  }
  return new SentenceTextInfoParams(originalTextInfo,wordItems);
}
