{
  if (mEnteringNames == null || mCalledExitCoordinator != null) {
    return false;
  }
 else {
    if (!mHasExited) {
      mHasExited=true;
      Transition enterViewsTransition=null;
      ViewGroup decor=null;
      boolean delayExitBack=false;
      if (mEnterTransitionCoordinator != null) {
        enterViewsTransition=mEnterTransitionCoordinator.getEnterViewsTransition();
        decor=mEnterTransitionCoordinator.getDecor();
        delayExitBack=mEnterTransitionCoordinator.cancelEnter();
        mEnterTransitionCoordinator=null;
        if (enterViewsTransition != null && decor != null) {
          enterViewsTransition.pause(decor);
        }
      }
      mReturnExitCoordinator=new ExitTransitionCoordinator(activity,mEnteringNames,null,null,true);
      if (enterViewsTransition != null && decor != null) {
        enterViewsTransition.resume(decor);
      }
      if (delayExitBack && decor != null) {
        final ViewGroup finalDecor=decor;
        decor.getViewTreeObserver().addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener(){
          @Override public boolean onPreDraw(){
            finalDecor.getViewTreeObserver().removeOnPreDrawListener(this);
            if (mReturnExitCoordinator != null) {
              mReturnExitCoordinator.startExit(activity.mResultCode,activity.mResultData);
            }
            return true;
          }
        }
);
      }
 else {
        mReturnExitCoordinator.startExit(activity.mResultCode,activity.mResultData);
      }
    }
    return true;
  }
}
