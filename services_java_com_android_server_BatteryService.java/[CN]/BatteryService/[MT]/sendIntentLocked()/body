{
  final Intent intent=new Intent(Intent.ACTION_BATTERY_CHANGED);
  intent.addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY | Intent.FLAG_RECEIVER_REPLACE_PENDING);
  int icon=getIconLocked(mBatteryLevel);
  intent.putExtra(BatteryManager.EXTRA_STATUS,mBatteryStatus);
  intent.putExtra(BatteryManager.EXTRA_HEALTH,mBatteryHealth);
  intent.putExtra(BatteryManager.EXTRA_PRESENT,mBatteryPresent);
  intent.putExtra(BatteryManager.EXTRA_LEVEL,mBatteryLevel);
  intent.putExtra(BatteryManager.EXTRA_SCALE,BATTERY_SCALE);
  intent.putExtra(BatteryManager.EXTRA_ICON_SMALL,icon);
  intent.putExtra(BatteryManager.EXTRA_PLUGGED,mPlugType);
  intent.putExtra(BatteryManager.EXTRA_VOLTAGE,mBatteryVoltage);
  intent.putExtra(BatteryManager.EXTRA_TEMPERATURE,mBatteryTemperature);
  intent.putExtra(BatteryManager.EXTRA_TECHNOLOGY,mBatteryTechnology);
  intent.putExtra(BatteryManager.EXTRA_INVALID_CHARGER,mInvalidCharger);
  if (DEBUG) {
    Slog.d(TAG,"Sending ACTION_BATTERY_CHANGED.  level:" + mBatteryLevel + ", scale:"+ BATTERY_SCALE+ ", status:"+ mBatteryStatus+ ", health:"+ mBatteryHealth+ ", present:"+ mBatteryPresent+ ", voltage: "+ mBatteryVoltage+ ", temperature: "+ mBatteryTemperature+ ", technology: "+ mBatteryTechnology+ ", AC powered:"+ mAcOnline+ ", USB powered:"+ mUsbOnline+ ", Wireless powered:"+ mWirelessOnline+ ", icon:"+ icon+ ", invalid charger:"+ mInvalidCharger);
  }
  mHandler.post(new Runnable(){
    @Override public void run(){
      ActivityManagerNative.broadcastStickyIntent(intent,null,UserHandle.USER_ALL);
    }
  }
);
}
