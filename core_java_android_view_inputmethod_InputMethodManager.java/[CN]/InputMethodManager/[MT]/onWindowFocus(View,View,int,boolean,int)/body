{
synchronized (mH) {
    if (DEBUG)     Log.v(TAG,"onWindowFocus: " + focusedView + " softInputMode="+ softInputMode+ " first="+ first+ " flags=#"+ Integer.toHexString(windowFlags));
    if (mHasBeenInactive) {
      if (DEBUG)       Log.v(TAG,"Has been inactive!  Starting fresh");
      mHasBeenInactive=false;
      mNextServedNeedsStart=true;
    }
    focusInLocked(focusedView != null ? focusedView : rootView);
  }
  boolean startInput=checkFocusNoStartInput();
synchronized (mH) {
    try {
      final boolean isTextEditor=focusedView != null && focusedView.onCheckIsTextEditor();
      mService.windowGainedFocus(mClient,rootView.getWindowToken(),focusedView != null,isTextEditor,softInputMode,first,windowFlags);
    }
 catch (    RemoteException e) {
    }
  }
  if (startInput) {
    startInputInner();
  }
}
