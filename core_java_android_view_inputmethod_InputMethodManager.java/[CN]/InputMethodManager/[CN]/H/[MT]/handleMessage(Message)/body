{
switch (msg.what) {
case MSG_DUMP:
{
      HandlerCaller.SomeArgs args=(HandlerCaller.SomeArgs)msg.obj;
      try {
        doDump((FileDescriptor)args.arg1,(PrintWriter)args.arg2,(String[])args.arg3);
      }
 catch (      RuntimeException e) {
        ((PrintWriter)args.arg2).println("Exception: " + e);
      }
synchronized (args.arg4) {
        ((CountDownLatch)args.arg4).countDown();
      }
      return;
    }
case MSG_BIND:
{
    final InputBindResult res=(InputBindResult)msg.obj;
synchronized (mH) {
      if (mBindSequence < 0 || mBindSequence != res.sequence) {
        Log.w(TAG,"Ignoring onBind: cur seq=" + mBindSequence + ", given seq="+ res.sequence);
        return;
      }
      mCurMethod=res.method;
      mCurId=res.id;
      mBindSequence=res.sequence;
    }
    startInputInner(null,0,0,0);
    return;
  }
case MSG_UNBIND:
{
  final int sequence=msg.arg1;
  boolean startInput=false;
synchronized (mH) {
    if (mBindSequence == sequence) {
      if (false) {
        if (mCurMethod != null && mCurrentTextBoxAttribute != null) {
          try {
            mCurMethod.finishInput();
          }
 catch (          RemoteException e) {
            Log.w(TAG,"IME died: " + mCurId,e);
          }
        }
      }
      clearBindingLocked();
      if (mServedView != null && mServedView.isFocused()) {
        mServedConnecting=true;
      }
      if (mActive) {
        startInput=true;
      }
    }
  }
  if (startInput) {
    startInputInner(null,0,0,0);
  }
  return;
}
case MSG_SET_ACTIVE:
{
final boolean active=msg.arg1 != 0;
synchronized (mH) {
  mActive=active;
  mFullscreenMode=false;
  if (!active) {
    mHasBeenInactive=true;
    try {
      mIInputContext.finishComposingText();
    }
 catch (    RemoteException e) {
    }
    if (mServedView != null && mServedView.hasWindowFocus()) {
      checkFocus(mHasBeenInactive);
    }
  }
}
return;
}
case MSG_EVENT_TIMEOUT:
{
timeoutEvent(msg.arg1);
return;
}
}
}
