{
  Looper looper;
  if (handler != null) {
    looper=handler.getLooper();
  }
 else {
    looper=Looper.getMainLooper();
  }
  if (looper != null) {
    mHandler=new Handler(looper){
      @Override public void handleMessage(      Message msg){
switch (msg.what) {
case EVENT_HW_FAILURE:
          if (callback != null) {
            callback.onError(RadioTuner.ERROR_HARDWARE_FAILURE);
          }
        break;
case EVENT_CONFIG:
{
        RadioManager.BandConfig config=(RadioManager.BandConfig)msg.obj;
switch (msg.arg1) {
case RadioManager.STATUS_OK:
          if (callback != null) {
            callback.onConfigurationChanged(config);
          }
        break;
default :
      if (callback != null) {
        callback.onError(RadioTuner.ERROR_CONFIG);
      }
    break;
}
}
break;
case EVENT_ANTENNA:
if (callback != null) {
callback.onAntennaState(msg.arg2 == 1);
}
break;
case EVENT_AF_SWITCH:
case EVENT_TUNED:
{
RadioManager.ProgramInfo info=(RadioManager.ProgramInfo)msg.obj;
switch (msg.arg1) {
case RadioManager.STATUS_OK:
if (callback != null) {
callback.onProgramInfoChanged(info);
}
break;
case RadioManager.STATUS_TIMED_OUT:
if (callback != null) {
callback.onError(RadioTuner.ERROR_SCAN_TIMEOUT);
}
break;
case RadioManager.STATUS_INVALID_OPERATION:
default :
if (callback != null) {
callback.onError(RadioTuner.ERROR_CANCELLED);
}
break;
}
}
break;
case EVENT_METADATA:
{
RadioMetadata metadata=(RadioMetadata)msg.obj;
if (callback != null) {
callback.onMetadataChanged(metadata);
}
}
break;
case EVENT_TA:
if (callback != null) {
callback.onTrafficAnnouncement(msg.arg2 == 1);
}
break;
case EVENT_CONTROL:
if (callback != null) {
callback.onControlChanged(msg.arg2 == 1);
}
break;
case EVENT_SERVER_DIED:
if (callback != null) {
callback.onError(RadioTuner.ERROR_SERVER_DIED);
}
break;
default :
break;
}
}
}
;
}
 else {
mHandler=null;
}
}
