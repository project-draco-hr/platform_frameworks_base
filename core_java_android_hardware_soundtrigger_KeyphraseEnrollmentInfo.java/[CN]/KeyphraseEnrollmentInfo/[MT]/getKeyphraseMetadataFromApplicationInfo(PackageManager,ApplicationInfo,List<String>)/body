{
  XmlResourceParser parser=null;
  String packageName=ai.packageName;
  KeyphraseMetadata keyphraseMetadata=null;
  try {
    parser=ai.loadXmlMetaData(pm,VOICE_KEYPHRASE_META_DATA);
    if (parser == null) {
      String error="No " + VOICE_KEYPHRASE_META_DATA + " meta-data for "+ packageName;
      parseErrors.add(error);
      Slog.w(TAG,error);
      return null;
    }
    Resources res=pm.getResourcesForApplication(ai);
    AttributeSet attrs=Xml.asAttributeSet(parser);
    int type;
    while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && type != XmlPullParser.START_TAG) {
    }
    String nodeName=parser.getName();
    if (!"voice-enrollment-application".equals(nodeName)) {
      String error="Meta-data does not start with voice-enrollment-application tag for " + packageName;
      parseErrors.add(error);
      Slog.w(TAG,error);
      return null;
    }
    TypedArray array=res.obtainAttributes(attrs,com.android.internal.R.styleable.VoiceEnrollmentApplication);
    keyphraseMetadata=getKeyphraseFromTypedArray(array,packageName,parseErrors);
    array.recycle();
  }
 catch (  XmlPullParserException e) {
    String error="Error parsing keyphrase enrollment meta-data for " + packageName;
    parseErrors.add(error + ": " + e);
    Slog.w(TAG,error,e);
  }
catch (  IOException e) {
    String error="Error parsing keyphrase enrollment meta-data for " + packageName;
    parseErrors.add(error + ": " + e);
    Slog.w(TAG,error,e);
  }
catch (  PackageManager.NameNotFoundException e) {
    String error="Error parsing keyphrase enrollment meta-data for " + packageName;
    parseErrors.add(error + ": " + e);
    Slog.w(TAG,error,e);
  }
 finally {
    if (parser != null)     parser.close();
  }
  return keyphraseMetadata;
}
