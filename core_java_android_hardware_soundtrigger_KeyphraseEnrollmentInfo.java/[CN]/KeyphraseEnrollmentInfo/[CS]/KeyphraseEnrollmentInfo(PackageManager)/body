{
  List<ResolveInfo> ris=pm.queryIntentActivities(new Intent(ACTION_MANAGE_VOICE_KEYPHRASES),PackageManager.MATCH_DEFAULT_ONLY);
  if (ris == null || ris.isEmpty()) {
    mParseError="No enrollment application found";
    return;
  }
  boolean found=false;
  ApplicationInfo ai=null;
  for (  ResolveInfo ri : ris) {
    try {
      ai=pm.getApplicationInfo(ri.activityInfo.packageName,PackageManager.GET_META_DATA);
      if ((ai.flags & ApplicationInfo.FLAG_PRIVILEGED) == 0) {
        Slog.w(TAG,ai.packageName + "is not a privileged system app");
        continue;
      }
      if (!Manifest.permission.MANAGE_VOICE_KEYPHRASES.equals(ai.permission)) {
        Slog.w(TAG,ai.packageName + " does not require MANAGE_VOICE_KEYPHRASES");
        continue;
      }
      mEnrollmentPackage=ai.packageName;
      found=true;
      break;
    }
 catch (    PackageManager.NameNotFoundException e) {
      Slog.w(TAG,"error parsing voice enrollment meta-data",e);
    }
  }
  if (!found) {
    mKeyphrases=null;
    mParseError="No suitable enrollment application found";
    return;
  }
  XmlResourceParser parser=null;
  try {
    parser=ai.loadXmlMetaData(pm,VOICE_KEYPHRASE_META_DATA);
    if (parser == null) {
      mParseError="No " + VOICE_KEYPHRASE_META_DATA + " meta-data for "+ ai.packageName;
      return;
    }
    Resources res=pm.getResourcesForApplication(ai);
    AttributeSet attrs=Xml.asAttributeSet(parser);
    int type;
    while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && type != XmlPullParser.START_TAG) {
    }
    String nodeName=parser.getName();
    if (!"voice-enrollment-application".equals(nodeName)) {
      mParseError="Meta-data does not start with voice-enrollment-application tag";
      return;
    }
    TypedArray array=res.obtainAttributes(attrs,com.android.internal.R.styleable.VoiceEnrollmentApplication);
    int searchKeyphraseId=array.getInt(com.android.internal.R.styleable.VoiceEnrollmentApplication_searchKeyphraseId,-1);
    if (searchKeyphraseId != -1) {
      String searchKeyphrase=array.getString(com.android.internal.R.styleable.VoiceEnrollmentApplication_searchKeyphrase);
      String searchKeyphraseSupportedLocales=array.getString(com.android.internal.R.styleable.VoiceEnrollmentApplication_searchKeyphraseSupportedLocales);
      String[] supportedLocales=new String[0];
      if (searchKeyphraseSupportedLocales != null && !searchKeyphraseSupportedLocales.isEmpty()) {
        supportedLocales=searchKeyphraseSupportedLocales.split(",");
      }
      mKeyphrases=new KeyphraseMetadata[1];
      mKeyphrases[0]=new KeyphraseMetadata(searchKeyphraseId,searchKeyphrase,supportedLocales);
    }
 else {
      mParseError="searchKeyphraseId not specified in meta-data";
      return;
    }
  }
 catch (  XmlPullParserException e) {
    mParseError="Error parsing keyphrase enrollment meta-data: " + e;
    Slog.w(TAG,"error parsing keyphrase enrollment meta-data",e);
    return;
  }
catch (  IOException e) {
    mParseError="Error parsing keyphrase enrollment meta-data: " + e;
    Slog.w(TAG,"error parsing keyphrase enrollment meta-data",e);
    return;
  }
catch (  PackageManager.NameNotFoundException e) {
    mParseError="Error parsing keyphrase enrollment meta-data: " + e;
    Slog.w(TAG,"error parsing keyphrase enrollment meta-data",e);
    return;
  }
 finally {
    if (parser != null)     parser.close();
  }
}
