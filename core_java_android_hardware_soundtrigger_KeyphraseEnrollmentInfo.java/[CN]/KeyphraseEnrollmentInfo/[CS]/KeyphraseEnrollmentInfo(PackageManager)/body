{
  List<ResolveInfo> ris=pm.queryIntentActivities(new Intent(ACTION_MANAGE_VOICE_KEYPHRASES),PackageManager.MATCH_DEFAULT_ONLY);
  if (ris == null || ris.isEmpty()) {
    mParseError="No enrollment applications found";
    mKeyphrasePackageMap=Collections.<KeyphraseMetadata,String>emptyMap();
    mKeyphrases=null;
    return;
  }
  List<String> parseErrors=new LinkedList<String>();
  mKeyphrasePackageMap=new HashMap<KeyphraseMetadata,String>();
  for (  ResolveInfo ri : ris) {
    try {
      ApplicationInfo ai=pm.getApplicationInfo(ri.activityInfo.packageName,PackageManager.GET_META_DATA);
      if ((ai.privateFlags & ApplicationInfo.PRIVATE_FLAG_PRIVILEGED) == 0) {
        Slog.w(TAG,ai.packageName + "is not a privileged system app");
        continue;
      }
      if (!Manifest.permission.MANAGE_VOICE_KEYPHRASES.equals(ai.permission)) {
        Slog.w(TAG,ai.packageName + " does not require MANAGE_VOICE_KEYPHRASES");
        continue;
      }
      mKeyphrasePackageMap.put(getKeyphraseMetadataFromApplicationInfo(pm,ai,parseErrors),ai.packageName);
    }
 catch (    PackageManager.NameNotFoundException e) {
      String error="error parsing voice enrollment meta-data for " + ri.activityInfo.packageName;
      parseErrors.add(error + ": " + e);
      Slog.w(TAG,error,e);
    }
  }
  if (mKeyphrasePackageMap.isEmpty()) {
    String error="No suitable enrollment application found";
    parseErrors.add(error);
    Slog.w(TAG,error);
    mKeyphrases=null;
  }
 else {
    mKeyphrases=mKeyphrasePackageMap.keySet().toArray(new KeyphraseMetadata[mKeyphrasePackageMap.size()]);
  }
  if (!parseErrors.isEmpty()) {
    mParseError=TextUtils.join("\n",parseErrors);
  }
}
