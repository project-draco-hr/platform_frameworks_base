{
  super.onLayout(changed,l,t,r,b);
  final int maxWidth=r - l;
  final int N=getChildCount();
  int i;
  int fitRight=-1;
  for (i=N - 1; i >= 0; i--) {
    final View child=getChildAt(i);
    if (child.getVisibility() != GONE) {
      fitRight=child.getRight();
      break;
    }
  }
  final StatusBarIconView moreView=mMoreView;
  int fitLeft=-1;
  int startIndex=-1;
  for (i=0; i < N; i++) {
    final View child=getChildAt(i);
    if (child == moreView) {
      startIndex=i + 1;
    }
 else     if (child.getVisibility() != GONE) {
      fitLeft=child.getLeft();
      break;
    }
  }
  if (moreView == null || startIndex < 0) {
    return;
  }
  int adjust=0;
  if (fitRight - fitLeft <= maxWidth) {
    adjust=fitLeft - moreView.getLeft();
    fitLeft-=adjust;
    fitRight-=adjust;
    moreView.layout(0,moreView.getTop(),0,moreView.getBottom());
  }
  int extra=fitRight - r;
  int shift=-1;
  int breakingPoint=fitLeft + extra + adjust;
  int number=0;
  for (i=startIndex; i < N; i++) {
    final StatusBarIconView child=(StatusBarIconView)getChildAt(i);
    if (child.getVisibility() != GONE) {
      int childLeft=child.getLeft();
      int childRight=child.getRight();
      if (childLeft < breakingPoint) {
        child.layout(0,child.getTop(),0,child.getBottom());
        int n=child.getStatusBarIcon().number;
        if (n == 0) {
          number+=1;
        }
 else         if (n > 0) {
          number+=n;
        }
      }
 else {
        if (shift < 0) {
          shift=childLeft - fitLeft;
        }
        child.layout(childLeft - shift,child.getTop(),childRight - shift,child.getBottom());
      }
    }
  }
  mMoreIcon.number=number;
  mMoreView.set(mMoreIcon);
}
