{
switch (keymasterAlgorithm) {
case KeymasterDefs.KM_ALGORITHM_AES:
    if (keymasterDigest != -1) {
      throw new IllegalArgumentException("Digest not supported for AES key: " + Digest.fromKeymaster(keymasterDigest));
    }
  return AES;
case KeymasterDefs.KM_ALGORITHM_HMAC:
switch (keymasterDigest) {
case KeymasterDefs.KM_DIGEST_SHA1:
  return HMAC_SHA1;
case KeymasterDefs.KM_DIGEST_SHA_2_224:
return HMAC_SHA224;
case KeymasterDefs.KM_DIGEST_SHA_2_256:
return HMAC_SHA256;
case KeymasterDefs.KM_DIGEST_SHA_2_384:
return HMAC_SHA384;
case KeymasterDefs.KM_DIGEST_SHA_2_512:
return HMAC_SHA512;
default :
throw new IllegalArgumentException("Unsupported HMAC digest: " + Digest.fromKeymaster(keymasterDigest));
}
default :
throw new IllegalArgumentException("Unsupported algorithm: " + keymasterAlgorithm);
}
}
