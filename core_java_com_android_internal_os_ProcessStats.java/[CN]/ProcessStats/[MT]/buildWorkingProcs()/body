{
  if (!mWorkingProcsSorted) {
    mWorkingProcs.clear();
    final int N=mProcStats.size();
    for (int i=0; i < N; i++) {
      Stats stats=mProcStats.get(i);
      if (stats.working) {
        mWorkingProcs.add(stats);
        if (stats.threadStats != null && stats.threadStats.size() > 1) {
          stats.workingThreads.clear();
          final int M=stats.threadStats.size();
          for (int j=0; j < M; j++) {
            Stats tstats=stats.threadStats.get(j);
            if (tstats.working) {
              stats.workingThreads.add(tstats);
            }
          }
          Collections.sort(stats.workingThreads,sLoadComparator);
        }
      }
    }
    Collections.sort(mWorkingProcs,sLoadComparator);
    mWorkingProcsSorted=true;
  }
}
