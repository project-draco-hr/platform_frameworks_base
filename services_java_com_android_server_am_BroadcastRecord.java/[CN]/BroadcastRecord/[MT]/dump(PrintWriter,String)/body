{
  final long now=SystemClock.uptimeMillis();
  pw.print(prefix);
  pw.println(this);
  pw.print(prefix);
  pw.println(intent);
  if (sticky) {
    Bundle bundle=intent.getExtras();
    if (bundle != null) {
      pw.print(prefix);
      pw.print("extras: ");
      pw.println(bundle.toString());
    }
  }
  pw.print(prefix);
  pw.print("caller=");
  pw.print(callerPackage);
  pw.print(" ");
  pw.print(callerApp != null ? callerApp.toShortString() : "null");
  pw.print(" pid=");
  pw.print(callingPid);
  pw.print(" uid=");
  pw.println(callingUid);
  if (requiredPermission != null) {
    pw.print(prefix);
    pw.print("requiredPermission=");
    pw.println(requiredPermission);
  }
  pw.print(prefix);
  pw.print("dispatchClockTime=");
  pw.println(new Date(dispatchClockTime));
  pw.print(prefix);
  pw.print("dispatchTime=");
  TimeUtils.formatDuration(dispatchTime,now,pw);
  if (finishTime != 0) {
    pw.print(" finishTime=");
    TimeUtils.formatDuration(finishTime,now,pw);
  }
 else {
    pw.print(" receiverTime=");
    TimeUtils.formatDuration(receiverTime,now,pw);
  }
  pw.println("");
  if (anrCount != 0) {
    pw.print(prefix);
    pw.print("anrCount=");
    pw.println(anrCount);
  }
  if (resultTo != null || resultCode != -1 || resultData != null) {
    pw.print(prefix);
    pw.print("resultTo=");
    pw.print(resultTo);
    pw.print(" resultCode=");
    pw.print(resultCode);
    pw.print(" resultData=");
    pw.println(resultData);
  }
  if (resultExtras != null) {
    pw.print(prefix);
    pw.print("resultExtras=");
    pw.println(resultExtras);
  }
  if (resultAbort || ordered || sticky|| initialSticky) {
    pw.print(prefix);
    pw.print("resultAbort=");
    pw.print(resultAbort);
    pw.print(" ordered=");
    pw.print(ordered);
    pw.print(" sticky=");
    pw.print(sticky);
    pw.print(" initialSticky=");
    pw.println(initialSticky);
  }
  if (nextReceiver != 0 || receiver != null) {
    pw.print(prefix);
    pw.print("nextReceiver=");
    pw.print(nextReceiver);
    pw.print(" receiver=");
    pw.println(receiver);
  }
  if (curFilter != null) {
    pw.print(prefix);
    pw.print("curFilter=");
    pw.println(curFilter);
  }
  if (curReceiver != null) {
    pw.print(prefix);
    pw.print("curReceiver=");
    pw.println(curReceiver);
  }
  if (curApp != null) {
    pw.print(prefix);
    pw.print("curApp=");
    pw.println(curApp);
    pw.print(prefix);
    pw.print("curComponent=");
    pw.println((curComponent != null ? curComponent.toShortString() : "--"));
    if (curReceiver != null && curReceiver.applicationInfo != null) {
      pw.print(prefix);
      pw.print("curSourceDir=");
      pw.println(curReceiver.applicationInfo.sourceDir);
    }
  }
  String stateStr=" (?)";
switch (state) {
case IDLE:
    stateStr=" (IDLE)";
  break;
case APP_RECEIVE:
stateStr=" (APP_RECEIVE)";
break;
case CALL_IN_RECEIVE:
stateStr=" (CALL_IN_RECEIVE)";
break;
case CALL_DONE_RECEIVE:
stateStr=" (CALL_DONE_RECEIVE)";
break;
}
pw.print(prefix);
pw.print("state=");
pw.print(state);
pw.println(stateStr);
final int N=receivers != null ? receivers.size() : 0;
String p2=prefix + "  ";
PrintWriterPrinter printer=new PrintWriterPrinter(pw);
for (int i=0; i < N; i++) {
Object o=receivers.get(i);
pw.print(prefix);
pw.print("Receiver #");
pw.print(i);
pw.print(": ");
pw.println(o);
if (o instanceof BroadcastFilter) ((BroadcastFilter)o).dumpBrief(pw,p2);
 else if (o instanceof ResolveInfo) ((ResolveInfo)o).dump(printer,p2);
}
}
