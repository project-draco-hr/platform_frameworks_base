{
  LocalSocket zygoteSocket=null;
  DataInputStream zygoteInputStream=null;
  BufferedWriter zygoteWriter=null;
  for (int i=0; i < tries; i++) {
    if (i > 0) {
      try {
        Log.i("Zygote","Zygote not up yet, sleeping...");
        Thread.sleep(ZYGOTE_RETRY_MILLIS);
      }
 catch (      InterruptedException ex) {
        throw new ZygoteStartFailedEx(ex);
      }
    }
    try {
      zygoteSocket=new LocalSocket();
      zygoteSocket.connect(new LocalSocketAddress(socketAddress,LocalSocketAddress.Namespace.RESERVED));
      zygoteInputStream=new DataInputStream(zygoteSocket.getInputStream());
      zygoteWriter=new BufferedWriter(new OutputStreamWriter(zygoteSocket.getOutputStream()),256);
      break;
    }
 catch (    IOException ex) {
      if (zygoteSocket != null) {
        try {
          zygoteSocket.close();
        }
 catch (        IOException ex2) {
          Log.e(LOG_TAG,"I/O exception on close after exception",ex2);
        }
      }
      zygoteSocket=null;
    }
  }
  if (zygoteSocket == null) {
    throw new ZygoteStartFailedEx("connect failed");
  }
  String abiListString=getAbiList(zygoteWriter,zygoteInputStream);
  Log.i("Zygote","Process: zygote socket opened, supported ABIS: " + abiListString);
  return new ZygoteState(zygoteSocket,zygoteInputStream,zygoteWriter,Arrays.asList(abiListString.split(",")));
}
