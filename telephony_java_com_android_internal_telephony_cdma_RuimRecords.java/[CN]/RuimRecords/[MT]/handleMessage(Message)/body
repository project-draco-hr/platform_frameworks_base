{
  AsyncResult ar;
  byte data[];
  boolean isRecordLoadResponse=false;
  try {
switch (msg.what) {
case EVENT_RUIM_READY:
      onRuimReady();
    break;
case EVENT_NV_READY:
  onNvReady();
break;
case EVENT_RADIO_OFF_OR_NOT_AVAILABLE:
onRadioOffOrNotAvailable();
break;
case EVENT_GET_DEVICE_IDENTITY_DONE:
Log.d(LOG_TAG,"Event EVENT_GET_DEVICE_IDENTITY_DONE Received");
break;
case EVENT_GET_CDMA_SUBSCRIPTION_DONE:
ar=(AsyncResult)msg.obj;
String localTemp[]=(String[])ar.result;
if (ar.exception != null) {
break;
}
if (m_ota_commited) {
Intent intent=new Intent(TelephonyIntents.ACTION_CDMA_OTA_MDN_CHANGED);
intent.putExtra("mdn",localTemp[0]);
Log.d(LOG_TAG,"Broadcasting intent MDN Change in OTA ");
ActivityManagerNative.broadcastStickyIntent(intent,null);
m_ota_commited=false;
}
break;
case EVENT_GET_ICCID_DONE:
isRecordLoadResponse=true;
ar=(AsyncResult)msg.obj;
data=(byte[])ar.result;
if (ar.exception != null) {
break;
}
iccid=IccUtils.bcdToString(data,0,data.length);
Log.d(LOG_TAG,"iccid: " + iccid);
break;
case EVENT_UPDATE_DONE:
ar=(AsyncResult)msg.obj;
if (ar.exception != null) {
Log.i(LOG_TAG,"RuimRecords update failed",ar.exception);
}
break;
case EVENT_GET_ALL_SMS_DONE:
case EVENT_MARK_SMS_READ_DONE:
case EVENT_SMS_ON_RUIM:
case EVENT_GET_SMS_DONE:
Log.w(LOG_TAG,"Event not supported: " + msg.what);
break;
case EVENT_GET_SST_DONE:
Log.d(LOG_TAG,"Event EVENT_GET_SST_DONE Received");
break;
case EVENT_RUIM_REFRESH:
isRecordLoadResponse=false;
ar=(AsyncResult)msg.obj;
if (ar.exception == null) {
handleRuimRefresh((int[])(ar.result));
}
break;
case EVENT_OTA_PROVISION_STATUS_CHANGE:
m_ota_commited=false;
ar=(AsyncResult)msg.obj;
if (ar.exception == null) {
int[] ints=(int[])ar.result;
int otaStatus=ints[0];
if (otaStatus == phone.CDMA_OTA_PROVISION_STATUS_COMMITTED) {
m_ota_commited=true;
phone.mCM.getCDMASubscription(obtainMessage(EVENT_GET_CDMA_SUBSCRIPTION_DONE));
}
}
break;
}
}
 catch (RuntimeException exc) {
Log.w(LOG_TAG,"Exception parsing RUIM record",exc);
}
 finally {
if (isRecordLoadResponse) {
onRecordLoaded();
}
}
}
