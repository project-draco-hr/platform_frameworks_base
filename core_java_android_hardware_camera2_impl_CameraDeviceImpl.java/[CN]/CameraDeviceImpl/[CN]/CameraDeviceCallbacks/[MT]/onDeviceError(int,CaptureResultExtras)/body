{
  if (DEBUG) {
    Log.d(TAG,String.format("Device error received, code %d, frame number %d, request ID %d, subseq ID %d",errorCode,resultExtras.getFrameNumber(),resultExtras.getRequestId(),resultExtras.getSubsequenceId()));
  }
synchronized (mInterfaceLock) {
    if (mRemoteDevice == null) {
      return;
    }
switch (errorCode) {
case ERROR_CAMERA_DISCONNECTED:
      CameraDeviceImpl.this.mDeviceHandler.post(mCallOnDisconnected);
    break;
default :
  Log.e(TAG,"Unknown error from camera device: " + errorCode);
case ERROR_CAMERA_DEVICE:
case ERROR_CAMERA_SERVICE:
mInError=true;
Runnable r=new Runnable(){
@Override public void run(){
  if (!CameraDeviceImpl.this.isClosed()) {
    mDeviceListener.onError(CameraDeviceImpl.this,errorCode);
  }
}
}
;
CameraDeviceImpl.this.mDeviceHandler.post(r);
break;
case ERROR_CAMERA_REQUEST:
case ERROR_CAMERA_RESULT:
case ERROR_CAMERA_BUFFER:
onCaptureErrorLocked(errorCode,resultExtras);
break;
}
}
}
