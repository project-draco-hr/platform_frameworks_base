{
  long completedFrameNumber=mFrameNumberTracker.getCompletedFrameNumber();
  long completedReprocessFrameNumber=mFrameNumberTracker.getCompletedReprocessFrameNumber();
  boolean isReprocess=false;
  Iterator<SimpleEntry<Long,Integer>> iter=mFrameNumberRequestPairs.iterator();
  while (iter.hasNext()) {
    final SimpleEntry<Long,Integer> frameNumberRequestPair=iter.next();
    boolean sequenceCompleted=false;
    final int requestId=frameNumberRequestPair.getValue();
    final CaptureCallbackHolder holder;
synchronized (mInterfaceLock) {
      if (mRemoteDevice == null) {
        Log.w(TAG,"Camera closed while checking sequences");
        return;
      }
      int index=mCaptureCallbackMap.indexOfKey(requestId);
      holder=(index >= 0) ? mCaptureCallbackMap.valueAt(index) : null;
      if (holder != null) {
        isReprocess=holder.getRequest().isReprocess();
        if ((isReprocess && frameNumberRequestPair.getKey() <= completedReprocessFrameNumber) || (!isReprocess && frameNumberRequestPair.getKey() <= completedFrameNumber)) {
          sequenceCompleted=true;
          mCaptureCallbackMap.removeAt(index);
          if (DEBUG) {
            Log.v(TAG,String.format("remove holder for requestId %d, " + "because lastFrame %d is <= %d",requestId,frameNumberRequestPair.getKey(),completedFrameNumber));
          }
        }
      }
    }
    if (holder == null || sequenceCompleted) {
      iter.remove();
    }
    if (sequenceCompleted) {
      Runnable resultDispatch=new Runnable(){
        @Override public void run(){
          if (!CameraDeviceImpl.this.isClosed()) {
            if (DEBUG) {
              Log.d(TAG,String.format("fire sequence complete for request %d",requestId));
            }
            long lastFrameNumber=frameNumberRequestPair.getKey();
            if (lastFrameNumber < Integer.MIN_VALUE || lastFrameNumber > Integer.MAX_VALUE) {
              throw new AssertionError(lastFrameNumber + " cannot be cast to int");
            }
            holder.getCallback().onCaptureSequenceCompleted(CameraDeviceImpl.this,requestId,lastFrameNumber);
          }
        }
      }
;
      holder.getHandler().post(resultDispatch);
    }
  }
}
