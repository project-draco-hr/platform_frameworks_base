{
  long completedFrameNumber=mFrameNumberTracker.getCompletedFrameNumber();
  long completedReprocessFrameNumber=mFrameNumberTracker.getCompletedReprocessFrameNumber();
  boolean isReprocess=false;
  Iterator<RequestLastFrameNumbersHolder> iter=mRequestLastFrameNumbersList.iterator();
  while (iter.hasNext()) {
    final RequestLastFrameNumbersHolder requestLastFrameNumbers=iter.next();
    boolean sequenceCompleted=false;
    final int requestId=requestLastFrameNumbers.getRequestId();
    final CaptureCallbackHolder holder;
synchronized (mInterfaceLock) {
      if (mRemoteDevice == null) {
        Log.w(TAG,"Camera closed while checking sequences");
        return;
      }
      int index=mCaptureCallbackMap.indexOfKey(requestId);
      holder=(index >= 0) ? mCaptureCallbackMap.valueAt(index) : null;
      if (holder != null) {
        long lastRegularFrameNumber=requestLastFrameNumbers.getLastRegularFrameNumber();
        long lastReprocessFrameNumber=requestLastFrameNumbers.getLastReprocessFrameNumber();
        if (lastRegularFrameNumber <= completedFrameNumber && lastReprocessFrameNumber <= completedReprocessFrameNumber) {
          sequenceCompleted=true;
          mCaptureCallbackMap.removeAt(index);
          if (DEBUG) {
            Log.v(TAG,String.format("Remove holder for requestId %d, because lastRegularFrame %d " + "is <= %d and lastReprocessFrame %d is <= %d",requestId,lastRegularFrameNumber,completedFrameNumber,lastReprocessFrameNumber,completedReprocessFrameNumber));
          }
        }
      }
    }
    if (holder == null || sequenceCompleted) {
      iter.remove();
    }
    if (sequenceCompleted) {
      Runnable resultDispatch=new Runnable(){
        @Override public void run(){
          if (!CameraDeviceImpl.this.isClosed()) {
            if (DEBUG) {
              Log.d(TAG,String.format("fire sequence complete for request %d",requestId));
            }
            holder.getCallback().onCaptureSequenceCompleted(CameraDeviceImpl.this,requestId,requestLastFrameNumbers.getLastFrameNumber());
          }
        }
      }
;
      holder.getHandler().post(resultDispatch);
    }
  }
}
