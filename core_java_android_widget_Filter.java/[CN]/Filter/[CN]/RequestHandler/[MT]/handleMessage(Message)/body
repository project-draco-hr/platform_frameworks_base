{
  int what=msg.what;
  Message message;
switch (what) {
case FILTER_TOKEN:
    RequestArguments args=(RequestArguments)msg.obj;
  try {
    args.results=performFiltering(args.constraint);
  }
  finally {
    message=mResultHandler.obtainMessage(what);
    message.obj=args;
    message.sendToTarget();
  }
synchronized (this) {
  if (mThreadHandler != null) {
    Message finishMessage=mThreadHandler.obtainMessage(FINISH_TOKEN);
    mThreadHandler.sendMessageDelayed(finishMessage,3000);
  }
}
break;
case FINISH_TOKEN:
synchronized (this) {
if (mThreadHandler != null) {
mThreadHandler.getLooper().quit();
mThreadHandler=null;
}
}
break;
}
}
