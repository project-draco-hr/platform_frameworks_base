{
  if ((mFadingMode & IN) != IN || endValues == null) {
    return null;
  }
  final View endView=endValues.view;
  if (DBG) {
    View startView=(startValues != null) ? startValues.view : null;
    Log.d(LOG_TAG,"Fade.onAppear: startView, startVis, endView, endVis = " + startView + ", "+ startVisibility+ ", "+ endView+ ", "+ endVisibility);
  }
  endView.setTransitionAlpha(0);
  TransitionListener transitionListener=new TransitionListenerAdapter(){
    boolean mCanceled=false;
    float mPausedAlpha;
    @Override public void onTransitionCancel(    Transition transition){
      endView.setTransitionAlpha(1);
      mCanceled=true;
    }
    @Override public void onTransitionEnd(    Transition transition){
      if (!mCanceled) {
        endView.setTransitionAlpha(1);
      }
    }
    @Override public void onTransitionPause(    Transition transition){
      mPausedAlpha=endView.getTransitionAlpha();
      endView.setTransitionAlpha(1);
    }
    @Override public void onTransitionResume(    Transition transition){
      endView.setTransitionAlpha(mPausedAlpha);
    }
  }
;
  addListener(transitionListener);
  return createAnimation(endView,0,1,null);
}
