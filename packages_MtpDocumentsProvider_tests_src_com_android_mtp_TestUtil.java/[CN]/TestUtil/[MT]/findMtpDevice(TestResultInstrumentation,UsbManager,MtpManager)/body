{
  while (true) {
    final HashMap<String,UsbDevice> devices=usbManager.getDeviceList();
    if (devices.size() == 0) {
      instrumentation.show("Wait for devices.");
      Thread.sleep(1000);
      continue;
    }
    final UsbDevice device=devices.values().iterator().next();
    try {
      manager.openDevice(device.getDeviceId());
    }
 catch (    IOException e) {
      instrumentation.show("Tries to get ownership of MTP device.");
      final UsbDeviceConnection connection=usbManager.openDevice(device);
      if (connection == null) {
        Assert.fail("Cannot open USB connection.");
        return null;
      }
      for (int i=0; i < device.getInterfaceCount(); i++) {
        connection.claimInterface(device.getInterface(i),true);
        connection.releaseInterface(device.getInterface(i));
      }
      connection.close();
      Thread.sleep(1000);
      continue;
    }
    return device;
  }
}
