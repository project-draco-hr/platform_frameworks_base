{
  StringBuilder sb=new StringBuilder(getScString());
  sb.append("\n");
  if (ar.exception != null) {
    state=State.FAILED;
    if (ar.exception instanceof CommandException) {
      CommandException.Error err=((CommandException)(ar.exception)).getCommandError();
      if (err == CommandException.Error.PASSWORD_INCORRECT) {
        if (isPinCommand()) {
          if (sc.equals(SC_PUK) || sc.equals(SC_PUK2)) {
            sb.append(context.getText(com.android.internal.R.string.badPuk));
          }
 else {
            sb.append(context.getText(com.android.internal.R.string.badPin));
          }
        }
 else {
          sb.append(context.getText(com.android.internal.R.string.passwordIncorrect));
        }
      }
 else       if (err == CommandException.Error.SIM_PUK2) {
        sb.append(context.getText(com.android.internal.R.string.badPin));
        sb.append("\n");
        sb.append(context.getText(com.android.internal.R.string.needPuk2));
      }
 else       if (err == CommandException.Error.FDN_CHECK_FAILURE) {
        Log.i(LOG_TAG,"FDN_CHECK_FAILURE");
        sb.append(context.getText(com.android.internal.R.string.mmiFdnError));
      }
 else {
        sb.append(context.getText(com.android.internal.R.string.mmiError));
      }
    }
 else {
      sb.append(context.getText(com.android.internal.R.string.mmiError));
    }
  }
 else   if (isActivate()) {
    state=State.COMPLETE;
    sb.append(context.getText(com.android.internal.R.string.serviceEnabled));
    if (sc.equals(SC_CLIR)) {
      phone.saveClirSetting(CommandsInterface.CLIR_INVOCATION);
    }
  }
 else   if (isDeactivate()) {
    state=State.COMPLETE;
    sb.append(context.getText(com.android.internal.R.string.serviceDisabled));
    if (sc.equals(SC_CLIR)) {
      phone.saveClirSetting(CommandsInterface.CLIR_SUPPRESSION);
    }
  }
 else   if (isRegister()) {
    state=State.COMPLETE;
    sb.append(context.getText(com.android.internal.R.string.serviceRegistered));
  }
 else   if (isErasure()) {
    state=State.COMPLETE;
    sb.append(context.getText(com.android.internal.R.string.serviceErased));
  }
 else {
    state=State.FAILED;
    sb.append(context.getText(com.android.internal.R.string.mmiError));
  }
  message=sb;
  phone.onMMIDone(this);
}
