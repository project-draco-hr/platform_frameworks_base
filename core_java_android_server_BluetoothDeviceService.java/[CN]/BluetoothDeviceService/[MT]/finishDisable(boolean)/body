{
  if (mBluetoothState != BluetoothDevice.BLUETOOTH_STATE_TURNING_OFF) {
    return;
  }
  mEventLoop.stop();
  tearDownNativeDataNative();
  disableNative();
  for (  String address : mBondState.listInState(BluetoothDevice.BOND_BONDING)) {
    mBondState.setBondState(address,BluetoothDevice.BOND_NOT_BONDED,BluetoothDevice.UNBOND_REASON_AUTH_CANCELED);
  }
  Intent intent=new Intent(BluetoothIntent.SCAN_MODE_CHANGED_ACTION);
  intent.putExtra(BluetoothIntent.SCAN_MODE,BluetoothDevice.SCAN_MODE_NONE);
  mContext.sendBroadcast(intent,BLUETOOTH_PERM);
  mIsDiscovering=false;
  mProperties.clear();
  if (saveSetting) {
    persistBluetoothOnSetting(false);
  }
  setBluetoothState(BluetoothDevice.BLUETOOTH_STATE_OFF);
  long ident=Binder.clearCallingIdentity();
  try {
    mBatteryStats.noteBluetoothOff();
  }
 catch (  RemoteException e) {
  }
 finally {
    Binder.restoreCallingIdentity(ident);
  }
  if (mRestart) {
    mRestart=false;
    enable();
  }
}
