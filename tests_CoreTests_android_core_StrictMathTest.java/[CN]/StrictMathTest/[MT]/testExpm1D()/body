{
  assertTrue("Should return NaN",Double.isNaN(StrictMath.expm1(Double.NaN)));
  assertEquals("Should return POSITIVE_INFINITY",Double.POSITIVE_INFINITY,StrictMath.expm1(Double.POSITIVE_INFINITY));
  assertEquals("Should return -1.0",-1.0,StrictMath.expm1(Double.NEGATIVE_INFINITY));
  assertEquals(Double.doubleToLongBits(0.0),Double.doubleToLongBits(StrictMath.expm1(0.0)));
  assertEquals(Double.doubleToLongBits(+0.0),Double.doubleToLongBits(StrictMath.expm1(+0.0)));
  assertEquals(Double.doubleToLongBits(-0.0),Double.doubleToLongBits(StrictMath.expm1(-0.0)));
  assertEquals("Should return -9.999950000166666E-6",-9.999950000166666E-6,StrictMath.expm1(-0.00001));
  assertEquals("Should return 1.0145103074469635E60",1.0145103074469635E60,StrictMath.expm1(138.16951162));
  assertEquals("Should return POSITIVE_INFINITY",Double.POSITIVE_INFINITY,StrictMath.expm1(123456789123456789123456789.4521584223));
  assertEquals("Should return POSITIVE_INFINITY",Double.POSITIVE_INFINITY,StrictMath.expm1(Double.MAX_VALUE));
  assertEquals("Should return MIN_VALUE",Double.MIN_VALUE,StrictMath.expm1(Double.MIN_VALUE));
}
