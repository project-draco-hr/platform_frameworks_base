{
  assertTrue("Should return NaN",Double.isNaN(StrictMath.log1p(Double.NaN)));
  assertTrue("Should return NaN",Double.isNaN(StrictMath.log1p(-32.0482175)));
  assertEquals("Should return POSITIVE_INFINITY",Double.POSITIVE_INFINITY,StrictMath.log1p(Double.POSITIVE_INFINITY));
  assertEquals(Double.doubleToLongBits(0.0),Double.doubleToLongBits(StrictMath.log1p(0.0)));
  assertEquals(Double.doubleToLongBits(+0.0),Double.doubleToLongBits(StrictMath.log1p(+0.0)));
  assertEquals(Double.doubleToLongBits(-0.0),Double.doubleToLongBits(StrictMath.log1p(-0.0)));
  assertEquals("Should return -0.2941782295312541",-0.2941782295312541,StrictMath.log1p(-0.254856327));
  assertEquals("Should return 7.368050685564151",7.368050685564151,StrictMath.log1p(1583.542));
  assertEquals("Should return 0.4633708685409921",0.4633708685409921,StrictMath.log1p(0.5894227));
  assertEquals("Should return 709.782712893384",709.782712893384,StrictMath.log1p(Double.MAX_VALUE));
  assertEquals("Should return Double.MIN_VALUE",Double.MIN_VALUE,StrictMath.log1p(Double.MIN_VALUE));
}
