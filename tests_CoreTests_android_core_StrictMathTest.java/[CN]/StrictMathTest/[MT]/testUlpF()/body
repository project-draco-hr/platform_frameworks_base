{
  assertTrue("Should return NaN",Float.isNaN(StrictMath.ulp(Float.NaN)));
  assertEquals("Returned incorrect value",Float.POSITIVE_INFINITY,StrictMath.ulp(Float.POSITIVE_INFINITY),0f);
  assertEquals("Returned incorrect value",Float.POSITIVE_INFINITY,StrictMath.ulp(Float.NEGATIVE_INFINITY),0f);
  assertEquals("Returned incorrect value",Float.MIN_VALUE,StrictMath.ulp(0.0f),0f);
  assertEquals("Returned incorrect value",Float.MIN_VALUE,StrictMath.ulp(+0.0f),0f);
  assertEquals("Returned incorrect value",Float.MIN_VALUE,StrictMath.ulp(-0.0f),0f);
  assertEquals("Returned incorrect value",2.028241E31f,StrictMath.ulp(Float.MAX_VALUE),0f);
  assertEquals("Returned incorrect value",2.028241E31f,StrictMath.ulp(-Float.MAX_VALUE),0f);
  assertEquals("Returned incorrect value",1.4E-45f,StrictMath.ulp(Float.MIN_VALUE),0f);
  assertEquals("Returned incorrect value",1.4E-45f,StrictMath.ulp(-Float.MIN_VALUE),0f);
  assertEquals("Returned incorrect value",1.1920929E-7f,StrictMath.ulp(1.0f),0f);
  assertEquals("Returned incorrect value",1.1920929E-7f,StrictMath.ulp(-1.0f),0f);
  assertEquals("Returned incorrect value",1.2207031E-4f,StrictMath.ulp(1153.0f),0f);
  assertEquals("Returned incorrect value",5.6E-45f,Math.ulp(9.403954E-38f),0f);
}
