{
  assertTrue("Should return Double.NaN",Double.isNaN(StrictMath.cbrt(Double.NaN)));
  assertEquals("Should return Double.POSITIVE_INFINITY",Double.POSITIVE_INFINITY,StrictMath.cbrt(Double.POSITIVE_INFINITY));
  assertEquals("Should return Double.NEGATIVE_INFINITY",Double.NEGATIVE_INFINITY,StrictMath.cbrt(Double.NEGATIVE_INFINITY));
  assertEquals(Double.doubleToLongBits(0.0),Double.doubleToLongBits(StrictMath.cbrt(0.0)));
  assertEquals(Double.doubleToLongBits(+0.0),Double.doubleToLongBits(StrictMath.cbrt(+0.0)));
  assertEquals(Double.doubleToLongBits(-0.0),Double.doubleToLongBits(StrictMath.cbrt(-0.0)));
  assertEquals("Should return 3.0",3.0,StrictMath.cbrt(27.0));
  assertEquals("Should return 23.111993172558684",23.111993172558684,StrictMath.cbrt(12345.6));
  assertEquals("Should return 5.643803094122362E102",5.643803094122362E102,StrictMath.cbrt(Double.MAX_VALUE));
  assertEquals("Should return 0.01",0.01,StrictMath.cbrt(0.000001));
  assertEquals("Should return -3.0",-3.0,StrictMath.cbrt(-27.0));
  assertEquals("Should return -23.111993172558684",-23.111993172558684,StrictMath.cbrt(-12345.6));
  assertEquals("Should return 1.7031839360032603E-108",1.7031839360032603E-108,StrictMath.cbrt(Double.MIN_VALUE));
  assertEquals("Should return -0.01",-0.01,StrictMath.cbrt(-0.000001));
  try {
    StrictMath.cbrt((Double)null);
    fail("Should throw NullPointerException");
  }
 catch (  NullPointerException e) {
  }
}
