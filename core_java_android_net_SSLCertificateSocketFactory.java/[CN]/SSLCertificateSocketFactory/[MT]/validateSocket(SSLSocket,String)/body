{
  if (Config.LOGV) {
    Log.v(LOG_TAG,"validateSocket() to host " + destHost);
  }
  String relaxSslCheck=SystemProperties.get("socket.relaxsslcheck");
  String secure=SystemProperties.get("ro.secure");
  if ("0".equals(secure) && "yes".equals(relaxSslCheck)) {
    if (Config.LOGD) {
      Log.d(LOG_TAG,"sys prop socket.relaxsslcheck is set," + " ignoring invalid certs");
    }
    return;
  }
  Certificate[] certs=null;
  sslSock.setUseClientMode(true);
  sslSock.startHandshake();
  certs=sslSock.getSession().getPeerCertificates();
  if (certs == null) {
    Log.e(LOG_TAG,"[SSLCertificateSocketFactory] no trusted root CA");
    throw new IOException("no trusted root CA");
  }
  if (Config.LOGV) {
    Log.v(LOG_TAG,"validateSocket # certs = " + certs.length);
  }
  if (!hasValidCertificateChain(certs)) {
    if (Config.LOGD) {
      Log.d(LOG_TAG,"validateSocket(): certificate untrusted!");
    }
    throw new IOException("Certificate untrusted");
  }
  X509Certificate lastChainCert=(X509Certificate)certs[0];
  if (!DomainNameValidator.match(lastChainCert,destHost)) {
    if (Config.LOGD) {
      Log.d(LOG_TAG,"validateSocket(): domain name check failed");
    }
    throw new IOException("Domain Name check failed");
  }
}
