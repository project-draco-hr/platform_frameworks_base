{
  if (properties.maxDelayRowIndex == -1 || properties.maxDelayColIndex == -1) {
    finishListener.run();
    return;
  }
  for (int row=0; row < properties.delays.length; row++) {
    long[] columns=properties.delays[row];
    float translation=mScaleTranslationWithRow ? (float)(Math.pow((properties.delays.length - row),2) / properties.delays.length * mStartTranslation) : mStartTranslation;
    for (int col=0; col < columns.length; col++) {
      long delay=columns[col];
      Runnable endRunnable=null;
      if (properties.maxDelayRowIndex == row && properties.maxDelayColIndex == col) {
        endRunnable=finishListener;
      }
      creator.createAnimation(objects[row][col],delay,mDuration,mAppearing ? translation : -translation,mAppearing,mInterpolator,endRunnable);
    }
  }
}
