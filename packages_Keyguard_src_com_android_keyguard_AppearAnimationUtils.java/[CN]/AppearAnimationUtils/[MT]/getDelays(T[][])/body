{
  long maxDelay=0;
  mProperties.maxDelayColIndex=-1;
  mProperties.maxDelayRowIndex=-1;
  mProperties.delays=new long[items.length][];
  for (int row=0; row < items.length; row++) {
    T[] columns=items[row];
    mProperties.delays[row]=new long[columns.length];
    for (int col=0; col < columns.length; col++) {
      long delay=calculateDelay(row,col);
      mProperties.delays[row][col]=delay;
      if (items[row][col] != null && delay > maxDelay) {
        maxDelay=delay;
        mProperties.maxDelayColIndex=col;
        mProperties.maxDelayRowIndex=row;
      }
    }
  }
  return mProperties;
}
