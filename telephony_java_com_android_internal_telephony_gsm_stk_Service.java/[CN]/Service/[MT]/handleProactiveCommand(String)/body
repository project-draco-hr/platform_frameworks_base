{
  if (Config.LOGD) {
    Log.d(TAG,"handleProactiveCommand begins");
  }
  if (getAppIndication() == APP_INDICATOR_PRE_BOOT) {
    Message installMsg=this.obtainMessage(EVENT_PROACTIVE_COMMAND);
    AsyncResult.forMessage(installMsg,data,null);
    sendMessageDelayed(installMsg,2000);
    return;
  }
  CtlvCommandDetails cmdDet=null;
  try {
    byte[] rawData=SimUtils.hexStringToBytes(data);
    BerTlv berTlv=BerTlv.decode(rawData);
    List<ComprehensionTlv> ctlvs=berTlv.getComprehensionTlvs();
    cmdDet=retrieveCommandDetails(ctlvs);
    CommandType cmdType=CommandType.fromInt(cmdDet.typeOfCommand);
    if (cmdType == null) {
      throw new ResultException(ResultCode.BEYOND_TERMINAL_CAPABILITY);
    }
    if (cmdType != CommandType.SET_UP_MENU && cmdType != CommandType.SET_UP_IDLE_MODE_TEXT) {
switch (getAppIndication()) {
case APP_INDICATOR_UNINSTALLED:
        setAppState(true);
      setAppIndication(APP_INDICATOR_INSTALLED_SPECIAL);
    mInstallIndicator=APP_INDICATOR_INSTALLED_SPECIAL;
  Message installMsg=this.obtainMessage(EVENT_PROACTIVE_COMMAND);
AsyncResult.forMessage(installMsg,data,null);
sendMessageDelayed(installMsg,20);
return;
case APP_INDICATOR_INSTALLED_SPECIAL:
case APP_INDICATOR_INSTALLED_NORMAL:
Intent intent=new Intent(Intent.ACTION_MAIN);
intent.setClassName("com.android.stk","com.android.stk.StkActivity");
intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
mContext.startActivity(intent);
Message launchMsg=this.obtainMessage(EVENT_PROACTIVE_COMMAND);
AsyncResult.forMessage(launchMsg,data,null);
sendMessageDelayed(launchMsg,2000);
return;
}
}
CtlvDeviceIdentities devIds=retrieveDeviceIdentities(ctlvs);
boolean cmdPending=false;
boolean responseNeeded=false;
switch (cmdType) {
case DISPLAY_TEXT:
cmdPending=processDisplayText(cmdDet,devIds,ctlvs);
responseNeeded=true;
break;
case SET_UP_MENU:
cmdPending=processSetUpMenu(cmdDet,devIds,ctlvs);
responseNeeded=true;
break;
case SET_UP_IDLE_MODE_TEXT:
cmdPending=processSetUpIdleModeText(cmdDet,devIds,ctlvs);
responseNeeded=true;
break;
case GET_INKEY:
cmdPending=processGetInkey(cmdDet,devIds,ctlvs);
break;
case GET_INPUT:
cmdPending=processGetInput(cmdDet,devIds,ctlvs);
break;
case REFRESH:
processRefresh(cmdDet,devIds,ctlvs);
responseNeeded=true;
break;
case SELECT_ITEM:
cmdPending=processSelectItem(cmdDet,devIds,ctlvs);
break;
case LAUNCH_BROWSER:
cmdPending=processLaunchBrowser(cmdDet,devIds,ctlvs);
break;
case PLAY_TONE:
cmdPending=processPlayTone(cmdDet,devIds,ctlvs);
break;
default :
throw new AssertionError("Add case statements for the newly added " + "command types!");
}
if (!cmdPending) {
callStkApp(cmdType);
}
if (responseNeeded) {
sendTerminalResponse(cmdDet,ResultCode.OK,false,0,null);
}
}
 catch (ResultException e) {
sendTerminalResponse(cmdDet,e.result(),e.hasAdditionalInfo(),e.additionalInfo(),null);
}
}
