{
  if (Config.LOGD) {
    Log.d(TAG,"processGetInput begins");
  }
  String text=null;
  String defaultText=null;
  int minLen, maxLen;
  List<TextAttribute> textAttrs=null;
  ComprehensionTlv ctlv=searchForTag(ComprehensionTlvTag.TEXT_STRING,ctlvs);
  if (ctlv != null) {
    text=retrieveTextString(ctlv);
  }
 else {
    throw new ResultException(ResultCode.REQUIRED_VALUES_MISSING);
  }
  ctlv=searchForTag(ComprehensionTlvTag.RESPONSE_LENGTH,ctlvs);
  if (ctlv != null) {
    try {
      byte[] rawValue=ctlv.getRawValue();
      int valueIndex=ctlv.getValueIndex();
      minLen=rawValue[valueIndex] & 0xff;
      maxLen=rawValue[valueIndex + 1] & 0xff;
    }
 catch (    IndexOutOfBoundsException e) {
      throw new ResultException(ResultCode.CMD_DATA_NOT_UNDERSTOOD);
    }
  }
 else {
    throw new ResultException(ResultCode.REQUIRED_VALUES_MISSING);
  }
  ctlv=searchForTag(ComprehensionTlvTag.TEXT_ATTRIBUTE,ctlvs);
  if (ctlv != null) {
    textAttrs=retrieveTextAttribute(ctlv);
  }
  ctlv=searchForTag(ComprehensionTlvTag.DEFAULT_TEXT,ctlvs);
  if (ctlv != null) {
    defaultText=retrieveTextString(ctlv);
  }
  boolean digitOnly=(cmdDet.commandQualifier & 0x01) == 0;
  boolean ucs2=(cmdDet.commandQualifier & 0x02) != 0;
  boolean echo=(cmdDet.commandQualifier & 0x04) == 0;
  boolean packed=(cmdDet.commandQualifier & 0x08) != 0;
  boolean helpAvailable=(cmdDet.commandQualifier & 0x80) != 0;
synchronized (mCmdListenerLock) {
    if (mCmdListener != null) {
      mCmdParams=new GetInputParams(cmdDet,ucs2,packed);
      mState=State.GET_INPUT;
      boolean noMaxLimit=maxLen == 0xff;
      mCmdListener.onGetInput(text,defaultText,minLen,maxLen,noMaxLimit,textAttrs,digitOnly,ucs2,echo,helpAvailable);
      return true;
    }
 else {
      throw new ResultException(ResultCode.TERMINAL_CRNTLY_UNABLE_TO_PROCESS,0);
    }
  }
}
