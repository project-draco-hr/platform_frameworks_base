{
  final StorageManager storageManager=getContext().getSystemService(StorageManager.class);
  final int INODE=10;
  final AppFuse appFuse=new AppFuse("test",new TestCallback(){
    @Override public long getFileSize(    int inode) throws FileNotFoundException {
      if (inode != INODE) {
        throw new FileNotFoundException();
      }
      return 5;
    }
    @Override public int writeObjectBytes(    long fileHandle,    int inode,    long offset,    int size,    byte[] bytes){
      return size;
    }
    @Override public void flushFileHandle(    long fileHandle) throws IOException {
      throw new IOException();
    }
  }
);
  appFuse.mount(storageManager);
  final ParcelFileDescriptor fd=appFuse.openFile(INODE,ParcelFileDescriptor.MODE_WRITE_ONLY | ParcelFileDescriptor.MODE_TRUNCATE);
  try (final ParcelFileDescriptor.AutoCloseOutputStream stream=new ParcelFileDescriptor.AutoCloseOutputStream(fd)){
    stream.write('a');
    try {
      IoUtils.close(fd.getFileDescriptor());
      fail();
    }
 catch (    IOException e) {
    }
  }
   appFuse.close();
}
