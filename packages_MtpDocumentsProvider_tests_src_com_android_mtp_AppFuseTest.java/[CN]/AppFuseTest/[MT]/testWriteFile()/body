{
  final StorageManager storageManager=getContext().getSystemService(StorageManager.class);
  final int INODE=10;
  final byte[] resultBytes=new byte[5];
  final AppFuse appFuse=new AppFuse("test",new TestCallback(){
    @Override public long getFileSize(    int inode) throws FileNotFoundException {
      if (inode != INODE) {
        throw new FileNotFoundException();
      }
      return resultBytes.length;
    }
    @Override public int writeObjectBytes(    long fileHandle,    int inode,    long offset,    int size,    byte[] bytes){
      for (int i=0; i < size; i++) {
        resultBytes[(int)(offset + i)]=bytes[i];
      }
      return size;
    }
  }
);
  appFuse.mount(storageManager);
  final ParcelFileDescriptor fd=appFuse.openFile(INODE,ParcelFileDescriptor.MODE_WRITE_ONLY | ParcelFileDescriptor.MODE_TRUNCATE);
  try (final ParcelFileDescriptor.AutoCloseOutputStream stream=new ParcelFileDescriptor.AutoCloseOutputStream(fd)){
    stream.write('a');
    stream.write('b');
    stream.write('c');
    stream.write('d');
    stream.write('e');
  }
   final byte[] BYTES=new byte[]{'a','b','c','d','e'};
  assertTrue(Arrays.equals(BYTES,resultBytes));
  appFuse.close();
}
