{
  final StorageManager storageManager=getContext().getSystemService(StorageManager.class);
  final int fileInode=10;
  final byte[] fileBytes=new byte[]{'a','b','c','d','e'};
  final AppFuse appFuse=new AppFuse("test",new TestCallback(){
    @Override public long getFileSize(    int inode) throws FileNotFoundException {
      if (inode == fileInode) {
        return fileBytes.length;
      }
      return super.getFileSize(inode);
    }
    @Override public long readObjectBytes(    int inode,    long offset,    long size,    byte[] bytes) throws IOException {
      if (inode == fileInode) {
        int i=0;
        while (i < size && i + offset < fileBytes.length) {
          bytes[i]=fileBytes[(int)(i + offset)];
          i++;
        }
        return i;
      }
      return super.readObjectBytes(inode,offset,size,bytes);
    }
  }
);
  appFuse.mount(storageManager);
  final ParcelFileDescriptor fd=appFuse.openFile(fileInode);
  try (final ParcelFileDescriptor.AutoCloseInputStream stream=new ParcelFileDescriptor.AutoCloseInputStream(fd)){
    final byte[] buffer=new byte[1024];
    final int size=stream.read(buffer,0,buffer.length);
    assertEquals(5,size);
  }
   appFuse.close();
}
