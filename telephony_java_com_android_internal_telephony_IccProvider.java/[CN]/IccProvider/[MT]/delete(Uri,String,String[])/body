{
  int efType;
  if (DBG)   log("delete");
  int match=URL_MATCHER.match(url);
switch (match) {
case ADN:
    efType=IccConstants.EF_ADN;
  break;
case FDN:
efType=IccConstants.EF_FDN;
break;
default :
throw new UnsupportedOperationException("Cannot insert into URL: " + url);
}
String tag=null;
String number=null;
String[] emails=null;
String pin2=null;
String[] tokens=where.split("AND");
int n=tokens.length;
while (--n >= 0) {
String param=tokens[n];
if (DBG) log("parsing '" + param + "'");
String[] pair=param.split("=");
if (pair.length != 2) {
Log.e(TAG,"resolve: bad whereClause parameter: " + param);
continue;
}
String key=pair[0].trim();
String val=pair[1].trim();
if (STR_TAG.equals(key)) {
tag=normalizeValue(val);
}
 else if (STR_NUMBER.equals(key)) {
number=normalizeValue(val);
}
 else if (STR_EMAILS.equals(key)) {
emails=null;
}
 else if (STR_PIN2.equals(key)) {
pin2=normalizeValue(val);
}
}
if (TextUtils.isEmpty(number)) {
return 0;
}
if (efType == IccConstants.EF_FDN && TextUtils.isEmpty(pin2)) {
return 0;
}
boolean success=deleteIccRecordFromEf(efType,tag,number,emails,pin2);
if (!success) {
return 0;
}
return 1;
}
