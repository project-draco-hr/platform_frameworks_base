{
  if (sFormatStr.length < fieldLen) {
    sFormatStr=new char[fieldLen];
  }
  char[] formatStr=sFormatStr;
  if (duration == 0) {
    int pos=0;
    fieldLen-=1;
    while (pos < fieldLen) {
      formatStr[pos++]=' ';
    }
    formatStr[pos]='0';
    return pos + 1;
  }
  char prefix;
  if (duration > 0) {
    prefix='+';
  }
 else {
    prefix='-';
    duration=-duration;
  }
  int millis=(int)(duration % 1000);
  int seconds=(int)Math.floor(duration / 1000);
  int days=0, hours=0, minutes=0;
  if (seconds > SECONDS_PER_DAY) {
    days=seconds / SECONDS_PER_DAY;
    seconds-=days * SECONDS_PER_DAY;
  }
  if (seconds > SECONDS_PER_HOUR) {
    hours=seconds / SECONDS_PER_HOUR;
    seconds-=hours * SECONDS_PER_HOUR;
  }
  if (seconds > SECONDS_PER_MINUTE) {
    minutes=seconds / SECONDS_PER_MINUTE;
    seconds-=minutes * SECONDS_PER_MINUTE;
  }
  int pos=0;
  if (fieldLen != 0) {
    int myLen=accumField(days,1,false,0);
    myLen+=accumField(hours,1,myLen > 0,2);
    myLen+=accumField(minutes,1,myLen > 0,2);
    myLen+=accumField(seconds,1,myLen > 0,2);
    myLen+=accumField(millis,2,true,myLen > 0 ? 3 : 0) + 1;
    while (myLen < fieldLen) {
      formatStr[pos]=' ';
      pos++;
      myLen++;
    }
  }
  formatStr[pos]=prefix;
  pos++;
  int start=pos;
  boolean zeropad=fieldLen != 0;
  pos=printField(formatStr,days,'d',pos,false,0);
  pos=printField(formatStr,hours,'h',pos,pos != start,zeropad ? 2 : 0);
  pos=printField(formatStr,minutes,'m',pos,pos != start,zeropad ? 2 : 0);
  pos=printField(formatStr,seconds,'s',pos,pos != start,zeropad ? 2 : 0);
  pos=printField(formatStr,millis,'m',pos,true,(zeropad && pos != start) ? 3 : 0);
  formatStr[pos]='s';
  return pos + 1;
}
