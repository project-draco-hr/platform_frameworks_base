{
  BreakIterator it=BreakIterator.getLineInstance(new ULocale(locale));
  it.setText(new Segment(inputText,0,length));
  List<Integer> breaks=new ArrayList<Integer>((int)Math.ceil(length / 5d));
  int loc;
  it.first();
  while ((loc=it.next()) != BreakIterator.DONE) {
    breaks.add(loc);
  }
  LineWidth lineWidth=new LineWidth(firstWidth,firstWidthLineCount,restWidth);
  TabStops tabStopCalculator=new TabStops(variableTabStops,defaultTabStop);
  List<Primitive> primitives=computePrimitives(inputText,widths,length,breaks);
  LineBreaker lineBreaker;
  if (optimize) {
    lineBreaker=new OptimizingLineBreaker(primitives,lineWidth,tabStopCalculator);
  }
 else {
    lineBreaker=new GreedyLineBreaker(primitives,lineWidth,tabStopCalculator);
  }
  lineBreaker.computeBreaks(recycle);
  return recycle.breaks.length;
}
