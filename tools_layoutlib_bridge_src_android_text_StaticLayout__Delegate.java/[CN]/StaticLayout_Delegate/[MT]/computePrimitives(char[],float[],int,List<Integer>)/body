{
  List<Primitive> primitives=new ArrayList<Primitive>(((int)Math.ceil(length * 1.833)));
  int breaksSize=breaks.size();
  int breakIndex=0;
  for (int i=0; i < length; i++) {
    char c=text[i];
    if (c == CHAR_SPACE || c == CHAR_ZWSP) {
      primitives.add(PrimitiveType.GLUE.getNewPrimitive(i,widths[i]));
    }
 else     if (c == CHAR_TAB) {
      primitives.add(PrimitiveType.VARIABLE.getNewPrimitive(i));
    }
 else     if (c != CHAR_NEWLINE) {
      while (breakIndex < breaksSize && breaks.get(breakIndex) < i) {
        breakIndex++;
      }
      Primitive p;
      if (widths[i] != 0) {
        if (breakIndex < breaksSize && breaks.get(breakIndex) == i) {
          p=PrimitiveType.PENALTY.getNewPrimitive(i,0,0);
        }
 else {
          p=PrimitiveType.WORD_BREAK.getNewPrimitive(i,0);
        }
        primitives.add(p);
      }
      primitives.add(PrimitiveType.BOX.getNewPrimitive(i,widths[i]));
    }
  }
  primitives.add(PrimitiveType.PENALTY.getNewPrimitive(length,0,-PrimitiveType.PENALTY_INFINITY));
  return primitives;
}
