{
  if (params.mMustFillScreen) {
    double totalFactor=0.0;
    for (int i=0; i < params.mNumItems; i++) {
      if (params.mOverrideItemScreenSizeFactors.containsKey(i)) {
        totalFactor+=params.mOverrideItemScreenSizeFactors.get(i);
      }
 else {
        totalFactor+=params.mItemScreenSizeFactor;
      }
    }
    if (totalFactor < 1.0) {
      throw new IllegalArgumentException("grid items must combine to be at least " + "the height of the screen.  this is not the case with " + params.mNumItems + " items and "+ params.mItemScreenSizeFactor+ " screen factor and "+ "screen height of "+ mScreenHeight);
    }
  }
  mNumItems=params.mNumItems;
  mStartingSelectionPosition=params.mStartingSelectionPosition;
  mItemScreenSizeFactor=params.mItemScreenSizeFactor;
  mOverrideItemScreenSizeFactors.putAll(params.mOverrideItemScreenSizeFactors);
  mStackFromBottom=params.mStackFromBottom;
  mColumnWidth=params.mColumnWidth;
  mNumColumns=params.mNumColumns;
  mStretchMode=params.mStretchMode;
  mVerticalSpacing=params.mVerticalSpacing;
}
