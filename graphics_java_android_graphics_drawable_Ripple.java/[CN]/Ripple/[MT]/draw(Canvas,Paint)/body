{
  final Rect bounds=mBounds;
  final float outerRadius=mOuterRadius;
  final float innerRadius=mInnerRadius;
  final float alphaMultiplier=mAlphaMultiplier;
  final int paintAlpha=p.getAlpha();
  final int alpha=(int)(paintAlpha * alphaMultiplier + 0.5f);
  final float x;
  final float y;
  if (mInsideBounds) {
    x=mX;
    y=mY;
  }
 else {
    x=looseConstrain(mX,bounds.left,bounds.right,mOuterRadius * OUTSIDE_MARGIN,OUTSIDE_RESISTANCE);
    y=looseConstrain(mY,bounds.top,bounds.bottom,mOuterRadius * OUTSIDE_MARGIN,OUTSIDE_RESISTANCE);
  }
  final boolean hasContent;
  if (alphaMultiplier <= 0 || innerRadius >= outerRadius) {
    hasContent=false;
  }
 else   if (innerRadius > 0) {
    final float strokeWidth=outerRadius - innerRadius;
    final float strokeRadius=innerRadius + strokeWidth / 2.0f;
    p.setAlpha(alpha);
    p.setStyle(Style.STROKE);
    p.setStrokeWidth(strokeWidth);
    c.drawCircle(x,y,strokeRadius,p);
    hasContent=true;
  }
 else   if (outerRadius > 0) {
    p.setAlpha(alpha);
    p.setStyle(Style.FILL);
    c.drawCircle(x,y,outerRadius,p);
    hasContent=true;
  }
 else {
    hasContent=false;
  }
  p.setAlpha(paintAlpha);
  return hasContent;
}
