{
  final ObjectAnimator outer=ObjectAnimator.ofFloat(this,"outerRadius",mMaxRadius);
  outer.setAutoCancel(true);
  outer.setDuration(ENTER_DURATION);
  outer.setInterpolator(INTERPOLATOR);
  outer.start();
  final ObjectAnimator alpha=ObjectAnimator.ofFloat(this,"alphaMultiplier",1);
  if (mPulseEnabled) {
    alpha.addListener(new AnimatorListenerAdapter(){
      @Override public void onAnimationEnd(      Animator animation){
        final ObjectAnimator pulse=ObjectAnimator.ofFloat(this,"alphaMultiplier",1,PULSE_MIN_ALPHA);
        pulse.setAutoCancel(true);
        pulse.setDuration(PULSE_DURATION + PULSE_INTERVAL);
        pulse.setRepeatCount(ObjectAnimator.INFINITE);
        pulse.setRepeatMode(ObjectAnimator.REVERSE);
        pulse.setStartDelay(PULSE_DELAY);
        pulse.start();
        mAlpha=pulse;
      }
    }
);
  }
  alpha.setAutoCancel(true);
  alpha.setDuration(FADE_DURATION);
  alpha.start();
  mOuter=outer;
  mAlpha=alpha;
}
