{
  BluetoothServerSocket serverSocket;
  try {
    Log.d(TAG,"getting server socket");
    serverSocket=BluetoothAdapter.getDefaultAdapter().listenUsingInsecureRfcommWithServiceRecord(SERVICE_NAME,SERVICE_UUID);
  }
 catch (  IOException e) {
    Log.d(TAG,"error creating server socket, stopping thread");
    bttraffic.stopService();
    return;
  }
  Log.d(TAG,"got server socket, starting accept loop");
  BluetoothSocket socket=null;
  try {
    Log.d(TAG,"accepting");
    socket=serverSocket.accept();
    if (!Thread.interrupted()) {
      Log.d(TAG,"accepted, listening");
      doListening(socket.getInputStream(),socket.getOutputStream());
      Log.d(TAG,"listen finished");
    }
  }
 catch (  IOException e) {
    Log.d(TAG,"error while accepting or listening",e);
  }
 finally {
    Log.d(TAG,"Linster interruped");
    Log.d(TAG,"closing socket and stopping service");
    safeClose(serverSocket);
    safeClose(socket);
    if (!bttraffic.isShuttingDown)     bttraffic.stopService();
  }
}
