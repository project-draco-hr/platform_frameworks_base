{
  try {
    Context pluginContext=context.createPackageContext(packageName,Context.CONTEXT_INCLUDE_CODE | Context.CONTEXT_IGNORE_SECURITY);
    ClassLoader pluginCL=pluginContext.getClassLoader();
    Class<?> stubClass=pluginCL.loadClass(className);
    Constructor<?> stubConstructor=stubClass.getConstructor(int.class);
    Object stubObject=stubConstructor.newInstance(NPP);
    if (stubObject instanceof PluginStub) {
      return (PluginStub)stubObject;
    }
 else {
      Log.e(LOGTAG,"The plugin class is not of type PluginStub");
    }
  }
 catch (  NameNotFoundException e) {
    Log.e(LOGTAG,e.toString());
  }
catch (  ClassNotFoundException e) {
    Log.e(LOGTAG,e.toString());
  }
catch (  IllegalAccessException e) {
    Log.e(LOGTAG,e.toString());
  }
catch (  InstantiationException e) {
    Log.e(LOGTAG,e.toString());
  }
catch (  SecurityException e) {
    Log.e(LOGTAG,e.toString());
  }
catch (  NoSuchMethodException e) {
    Log.e(LOGTAG,e.toString());
  }
catch (  IllegalArgumentException e) {
    Log.e(LOGTAG,e.toString());
  }
catch (  InvocationTargetException e) {
    Log.e(LOGTAG,e.toString());
  }
  return null;
}
