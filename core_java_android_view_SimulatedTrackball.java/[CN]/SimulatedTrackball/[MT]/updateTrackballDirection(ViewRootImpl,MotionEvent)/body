{
  final long time=event.getEventTime();
  MotionEvent trackballEvent;
switch (event.getAction()) {
case MotionEvent.ACTION_HOVER_ENTER:
    mLastTouchPadStartTimeMs=time;
  mAlwaysInTapRegion=true;
mTouchpadEnterXPosition=event.getX();
mTouchpadEnterYPosition=event.getY();
break;
case MotionEvent.ACTION_HOVER_MOVE:
float deltaX=event.getX() - mLastTouchpadXPosition;
float deltaY=event.getY() - mLastTouchpadYPosition;
trackballEvent=MotionEvent.obtain(mLastTouchPadStartTimeMs,time,MotionEvent.ACTION_MOVE,deltaX / 50,deltaY / 50,0,0,event.getMetaState(),10f,10f,event.getDeviceId(),0);
trackballEvent.setSource(InputDevice.SOURCE_CLASS_TRACKBALL);
viewroot.enqueueInputEvent(trackballEvent);
deltaX=event.getX() - mTouchpadEnterXPosition;
deltaY=event.getY() - mTouchpadEnterYPosition;
if (mTouchSlopSquared < deltaX * deltaX + deltaY * deltaY) {
mAlwaysInTapRegion=false;
}
break;
case MotionEvent.ACTION_HOVER_EXIT:
if (time - mLastTouchPadStartTimeMs < MAX_TAP_TIME && mAlwaysInTapRegion) {
trackballEvent=MotionEvent.obtain(mLastTouchPadStartTimeMs,time,MotionEvent.ACTION_DOWN,0,0,0,0,event.getMetaState(),10f,10f,event.getDeviceId(),0);
trackballEvent.setSource(InputDevice.SOURCE_CLASS_TRACKBALL);
viewroot.enqueueInputEvent(trackballEvent);
trackballEvent=MotionEvent.obtain(mLastTouchPadStartTimeMs,time,MotionEvent.ACTION_UP,0,0,0,0,event.getMetaState(),10f,10f,event.getDeviceId(),0);
trackballEvent.setSource(InputDevice.SOURCE_CLASS_TRACKBALL);
viewroot.enqueueInputEvent(trackballEvent);
}
break;
}
mLastTouchpadXPosition=event.getX();
mLastTouchpadYPosition=event.getY();
}
