{
  ClientInfo clientInfo;
  DnsSdServiceInfo servInfo;
  int id=Integer.parseInt(cooked[1]);
switch (code) {
case NativeResponseCode.SERVICE_FOUND:
    if (DBG)     Slog.d(TAG,"SERVICE_FOUND Raw: " + raw);
  clientInfo=getClientByDiscovery(id);
if (clientInfo == null) break;
servInfo=new DnsSdServiceInfo(cooked[2],cooked[3],null);
clientInfo.mChannel.sendMessage(NsdManager.SERVICE_FOUND,servInfo);
break;
case NativeResponseCode.SERVICE_LOST:
if (DBG) Slog.d(TAG,"SERVICE_LOST Raw: " + raw);
clientInfo=getClientByDiscovery(id);
if (clientInfo == null) break;
servInfo=new DnsSdServiceInfo(cooked[2],cooked[3],null);
clientInfo.mChannel.sendMessage(NsdManager.SERVICE_LOST,servInfo);
break;
case NativeResponseCode.SERVICE_DISCOVERY_FAILED:
if (DBG) Slog.d(TAG,"SERVICE_DISC_FAILED Raw: " + raw);
clientInfo=getClientByDiscovery(id);
if (clientInfo == null) break;
clientInfo.mChannel.sendMessage(NsdManager.DISCOVER_SERVICES_FAILED,NsdManager.ERROR);
break;
case NativeResponseCode.SERVICE_REGISTERED:
if (DBG) Slog.d(TAG,"SERVICE_REGISTERED Raw: " + raw);
clientInfo=getClientByRegistration(id);
if (clientInfo == null) break;
servInfo=new DnsSdServiceInfo(cooked[2],null,null);
clientInfo.mChannel.sendMessage(NsdManager.REGISTER_SERVICE_SUCCEEDED,id,0,servInfo);
break;
case NativeResponseCode.SERVICE_REGISTRATION_FAILED:
if (DBG) Slog.d(TAG,"SERVICE_REGISTER_FAILED Raw: " + raw);
clientInfo=getClientByRegistration(id);
if (clientInfo == null) break;
clientInfo.mChannel.sendMessage(NsdManager.REGISTER_SERVICE_FAILED,NsdManager.ERROR);
break;
case NativeResponseCode.SERVICE_UPDATED:
break;
case NativeResponseCode.SERVICE_UPDATE_FAILED:
break;
case NativeResponseCode.SERVICE_RESOLVED:
if (DBG) Slog.d(TAG,"SERVICE_RESOLVED Raw: " + raw);
clientInfo=getClientByResolve(id);
if (clientInfo == null) break;
int index=cooked[2].indexOf(".");
if (index == -1) {
Slog.e(TAG,"Invalid service found " + raw);
break;
}
String name=cooked[2].substring(0,index);
String rest=cooked[2].substring(index);
String type=rest.replace(".local.","");
clientInfo.mResolvedService=new DnsSdServiceInfo(name,type,null);
clientInfo.mResolvedService.setPort(Integer.parseInt(cooked[4]));
stopResolveService(id);
getAddrInfo(id,cooked[3]);
break;
case NativeResponseCode.SERVICE_RESOLUTION_FAILED:
case NativeResponseCode.SERVICE_GET_ADDR_FAILED:
if (DBG) Slog.d(TAG,"SERVICE_RESOLVE_FAILED Raw: " + raw);
clientInfo=getClientByResolve(id);
if (clientInfo == null) break;
clientInfo.mChannel.sendMessage(NsdManager.RESOLVE_SERVICE_FAILED,NsdManager.ERROR);
break;
case NativeResponseCode.SERVICE_GET_ADDR_SUCCESS:
if (DBG) Slog.d(TAG,"SERVICE_GET_ADDR_SUCCESS Raw: " + raw);
clientInfo=getClientByResolve(id);
if (clientInfo == null || clientInfo.mResolvedService == null) break;
try {
clientInfo.mResolvedService.setHost(InetAddress.getByName(cooked[4]));
clientInfo.mChannel.sendMessage(NsdManager.RESOLVE_SERVICE_SUCCEEDED,clientInfo.mResolvedService);
clientInfo.mResolvedService=null;
clientInfo.mResolveId=INVALID_ID;
}
 catch (java.net.UnknownHostException e) {
clientInfo.mChannel.sendMessage(NsdManager.RESOLVE_SERVICE_FAILED,NsdManager.ERROR);
}
stopGetAddrInfo(id);
break;
default :
break;
}
return false;
}
