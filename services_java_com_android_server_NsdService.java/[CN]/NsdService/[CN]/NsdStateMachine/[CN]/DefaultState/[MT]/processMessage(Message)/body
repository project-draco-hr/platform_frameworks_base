{
switch (msg.what) {
case AsyncChannel.CMD_CHANNEL_HALF_CONNECTED:
    if (msg.arg1 == AsyncChannel.STATUS_SUCCESSFUL) {
      AsyncChannel c=(AsyncChannel)msg.obj;
      if (DBG)       Slog.d(TAG,"New client listening to asynchronous messages");
      c.sendMessage(AsyncChannel.CMD_CHANNEL_FULLY_CONNECTED);
      ClientInfo cInfo=new ClientInfo(c,msg.replyTo);
      mClients.put(msg.replyTo,cInfo);
    }
 else {
      Slog.e(TAG,"Client connection failure, error=" + msg.arg1);
    }
  break;
case AsyncChannel.CMD_CHANNEL_DISCONNECTED:
if (msg.arg1 == AsyncChannel.STATUS_SEND_UNSUCCESSFUL) {
  Slog.e(TAG,"Send failed, client connection lost");
}
 else {
  if (DBG)   Slog.d(TAG,"Client connection lost with reason: " + msg.arg1);
}
mClients.remove(msg.replyTo);
break;
case AsyncChannel.CMD_CHANNEL_FULL_CONNECTION:
AsyncChannel ac=new AsyncChannel();
ac.connect(mContext,getHandler(),msg.replyTo);
break;
case NsdManager.DISCOVER_SERVICES:
mReplyChannel.replyToMessage(msg,NsdManager.DISCOVER_SERVICES_FAILED,NsdManager.BUSY);
break;
case NsdManager.STOP_DISCOVERY:
mReplyChannel.replyToMessage(msg,NsdManager.STOP_DISCOVERY_FAILED,NsdManager.ERROR);
break;
case NsdManager.REGISTER_SERVICE:
mReplyChannel.replyToMessage(msg,NsdManager.REGISTER_SERVICE_FAILED,NsdManager.ERROR);
break;
case NsdManager.UNREGISTER_SERVICE:
mReplyChannel.replyToMessage(msg,NsdManager.UNREGISTER_SERVICE_FAILED,NsdManager.ERROR);
break;
case NsdManager.RESOLVE_SERVICE:
mReplyChannel.replyToMessage(msg,NsdManager.RESOLVE_SERVICE_FAILED,NsdManager.ERROR);
break;
case NsdManager.STOP_RESOLVE:
mReplyChannel.replyToMessage(msg,NsdManager.STOP_RESOLVE_FAILED,NsdManager.ERROR);
break;
default :
Slog.e(TAG,"Unhandled " + msg);
return NOT_HANDLED;
}
return HANDLED;
}
