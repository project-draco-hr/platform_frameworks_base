{
  final long timePeriodMs=latest.mTimestamp - mLastInfo.mTimestamp;
  final long lastIdleMs=mLastInfo.mControllerIdleTimeMs;
  final long lastTxMs=mLastInfo.mControllerTxTimeMs;
  final long lastRxMs=mLastInfo.mControllerRxTimeMs;
  final long lastEnergy=mLastInfo.mControllerEnergyUsed;
  final WifiActivityEnergyInfo delta=mLastInfo;
  delta.mTimestamp=latest.getTimeStamp();
  delta.mStackState=latest.getStackState();
  delta.mControllerTxTimeMs=latest.mControllerTxTimeMs - lastTxMs;
  delta.mControllerRxTimeMs=latest.mControllerRxTimeMs - lastRxMs;
  delta.mControllerIdleTimeMs=Math.max(0,latest.mControllerIdleTimeMs - lastIdleMs);
  delta.mControllerEnergyUsed=Math.max(0,latest.mControllerEnergyUsed - lastEnergy);
  if (delta.mControllerTxTimeMs < 0 || delta.mControllerRxTimeMs < 0) {
    delta.mControllerEnergyUsed=latest.mControllerEnergyUsed;
    delta.mControllerRxTimeMs=latest.mControllerRxTimeMs;
    delta.mControllerTxTimeMs=latest.mControllerTxTimeMs;
    delta.mControllerIdleTimeMs=latest.mControllerIdleTimeMs;
    Slog.v(TAG,"WiFi energy data was reset, new WiFi energy data is " + delta);
  }
  final long SAMPLE_ERROR_MILLIS=750;
  final long totalTimeMs=delta.mControllerIdleTimeMs + delta.mControllerRxTimeMs + delta.mControllerTxTimeMs;
  if (totalTimeMs > timePeriodMs + SAMPLE_ERROR_MILLIS) {
    StringBuilder sb=new StringBuilder();
    sb.append("Total time ");
    TimeUtils.formatDuration(totalTimeMs,sb);
    sb.append(" is longer than sample period ");
    TimeUtils.formatDuration(timePeriodMs,sb);
    sb.append(".\n");
    sb.append("Previous WiFi snapshot: ").append("idle=");
    TimeUtils.formatDuration(lastIdleMs,sb);
    sb.append(" rx=");
    TimeUtils.formatDuration(lastRxMs,sb);
    sb.append(" tx=");
    TimeUtils.formatDuration(lastTxMs,sb);
    sb.append(" e=").append(lastEnergy);
    sb.append("\n");
    sb.append("Current WiFi snapshot: ").append("idle=");
    TimeUtils.formatDuration(latest.mControllerIdleTimeMs,sb);
    sb.append(" rx=");
    TimeUtils.formatDuration(latest.mControllerRxTimeMs,sb);
    sb.append(" tx=");
    TimeUtils.formatDuration(latest.mControllerTxTimeMs,sb);
    sb.append(" e=").append(latest.mControllerEnergyUsed);
    Slog.wtf(TAG,sb.toString());
  }
  mLastInfo=latest;
  return delta;
}
