{
  if (msg.what == MSG_POLL) {
    poll();
    return;
  }
  if (msg.what != MSG_SERVICE_COMMAND) {
    Log.e(TAG,"Invalid message type: " + msg.what);
    return;
  }
  if (!(msg.obj instanceof Intent)) {
    Log.e(TAG,"Internal error: invalid msg.obj: " + msg.obj);
    return;
  }
  final Parcelable parcel=((Intent)msg.obj).getParcelableExtra(EXTRA_ORIGINAL_INTENT);
  final Intent intent;
  if (parcel instanceof Intent) {
    intent=(Intent)parcel;
  }
 else {
    intent=(Intent)msg.obj;
  }
  final String action=intent.getAction();
  final int pid=intent.getIntExtra(EXTRA_PID,0);
  final int max=intent.getIntExtra(EXTRA_MAX,-1);
  final String name=intent.getStringExtra(EXTRA_NAME);
  if (DEBUG)   Log.v(TAG,"action: " + action + ", name: "+ name+ ", pid: "+ pid+ ", max: "+ max);
switch (action) {
case INTENT_BUGREPORT_STARTED:
    if (!startProgress(name,pid,max)) {
      stopSelfWhenDone();
      return;
    }
  poll();
break;
case INTENT_BUGREPORT_FINISHED:
if (pid == 0) {
Log.w(TAG,"Missing " + EXTRA_PID + " on intent "+ intent);
}
onBugreportFinished(pid,intent);
break;
case INTENT_BUGREPORT_SHARE:
shareBugreport(pid);
break;
case INTENT_BUGREPORT_CANCEL:
cancel(pid);
break;
default :
Log.w(TAG,"Unsupported intent: " + action);
}
return;
}
