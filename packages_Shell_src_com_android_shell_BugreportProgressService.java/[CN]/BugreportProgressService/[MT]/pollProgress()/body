{
  final int total=mProcesses.size();
  if (total == 0) {
    Log.d(TAG,"No process to poll progress.");
  }
  int activeProcesses=0;
  for (int i=0; i < total; i++) {
    final BugreportInfo info=mProcesses.valueAt(i);
    if (info == null) {
      Log.wtf(TAG,"pollProgress(): null info at index " + i + "(pid = "+ mProcesses.keyAt(i)+ ")");
      continue;
    }
    final int pid=info.pid;
    if (info.finished) {
      if (DEBUG)       Log.v(TAG,"Skipping finished process " + pid);
      continue;
    }
    activeProcesses++;
    final String progressKey=DUMPSTATE_PREFIX + pid + PROGRESS_SUFFIX;
    final int progress=SystemProperties.getInt(progressKey,0);
    if (progress == 0) {
      Log.v(TAG,"System property " + progressKey + " is not set yet");
    }
    final int max=SystemProperties.getInt(DUMPSTATE_PREFIX + pid + MAX_SUFFIX,0);
    final boolean maxChanged=max > 0 && max != info.max;
    final boolean progressChanged=progress > 0 && progress != info.progress;
    if (progressChanged || maxChanged) {
      if (progressChanged) {
        if (DEBUG)         Log.v(TAG,"Updating progress for PID " + pid + " from "+ info.progress+ " to "+ progress);
        info.progress=progress;
      }
      if (maxChanged) {
        Log.i(TAG,"Updating max progress for PID " + pid + " from "+ info.max+ " to "+ max);
        info.max=max;
      }
      info.lastUpdate=System.currentTimeMillis();
      updateProgress(info);
    }
 else {
      long inactiveTime=System.currentTimeMillis() - info.lastUpdate;
      if (inactiveTime >= INACTIVITY_TIMEOUT) {
        Log.w(TAG,"No progress update for process " + pid + " since "+ info.getFormattedLastUpdate());
        stopProgress(info.pid);
      }
    }
  }
  if (DEBUG)   Log.v(TAG,"pollProgress() total=" + total + ", actives="+ activeProcesses);
  return activeProcesses > 0;
}
