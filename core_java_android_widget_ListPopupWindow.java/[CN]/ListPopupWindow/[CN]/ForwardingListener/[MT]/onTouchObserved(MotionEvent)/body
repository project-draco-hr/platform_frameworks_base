{
  final View src=mSrc;
  if (!src.isEnabled()) {
    return false;
  }
  final int actionMasked=srcEvent.getActionMasked();
switch (actionMasked) {
case MotionEvent.ACTION_DOWN:
    mActivePointerId=srcEvent.getPointerId(0);
  mWasLongPress=false;
if (mDisallowIntercept == null) {
  mDisallowIntercept=new DisallowIntercept();
}
src.postDelayed(mDisallowIntercept,mTapTimeout);
if (mTriggerLongPress == null) {
mTriggerLongPress=new TriggerLongPress();
}
src.postDelayed(mTriggerLongPress,mLongPressTimeout);
break;
case MotionEvent.ACTION_MOVE:
final int activePointerIndex=srcEvent.findPointerIndex(mActivePointerId);
if (activePointerIndex >= 0) {
final float x=srcEvent.getX(activePointerIndex);
final float y=srcEvent.getY(activePointerIndex);
if (!src.pointInView(x,y,mScaledTouchSlop)) {
clearCallbacks();
src.getParent().requestDisallowInterceptTouchEvent(true);
return true;
}
}
break;
case MotionEvent.ACTION_CANCEL:
case MotionEvent.ACTION_UP:
clearCallbacks();
break;
}
return false;
}
