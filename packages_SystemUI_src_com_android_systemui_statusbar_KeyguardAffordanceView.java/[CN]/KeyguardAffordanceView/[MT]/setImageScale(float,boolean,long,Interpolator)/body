{
  cancelAnimator(mScaleAnimator);
  if (!animate) {
    mImageScale=imageScale;
    invalidate();
  }
 else {
    ValueAnimator animator=ValueAnimator.ofFloat(mImageScale,imageScale);
    mScaleAnimator=animator;
    animator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){
      @Override public void onAnimationUpdate(      ValueAnimator animation){
        mImageScale=(float)animation.getAnimatedValue();
        invalidate();
      }
    }
);
    animator.addListener(mScaleEndListener);
    if (interpolator == null) {
      interpolator=imageScale == 0.0f ? mDisappearInterpolator : mAppearInterpolator;
    }
    animator.setInterpolator(interpolator);
    if (duration == -1) {
      float durationFactor=Math.abs(mImageScale - imageScale) / (1.0f - MIN_ICON_SCALE_AMOUNT);
      durationFactor=Math.min(1.0f,durationFactor);
      duration=(long)(NORMAL_ANIMATION_DURATION * durationFactor);
    }
    animator.setDuration(duration);
    animator.start();
  }
}
