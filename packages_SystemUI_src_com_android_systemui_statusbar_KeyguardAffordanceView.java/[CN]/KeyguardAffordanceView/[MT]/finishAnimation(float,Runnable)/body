{
  cancelAnimator(mCircleAnimator);
  cancelAnimator(mPreviewClipper);
  mCircleStartRadius=mCircleRadius;
  float maxCircleSize=getMaxCircleSize();
  ValueAnimator animatorToRadius=getAnimatorToRadius(maxCircleSize);
  mFlingAnimationUtils.applyDismissing(animatorToRadius,mCircleRadius,maxCircleSize,velocity,maxCircleSize);
  animatorToRadius.addListener(new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator animation){
      mAnimationEndRunnable.run();
    }
  }
);
  animatorToRadius.start();
  setImageAlpha(0,true);
  if (mPreviewView != null) {
    mPreviewView.setVisibility(View.VISIBLE);
    mPreviewClipper=ViewAnimationUtils.createCircularReveal(mPreviewView,getLeft() + mCenterX,getTop() + mCenterY,mCircleRadius,maxCircleSize);
    mFlingAnimationUtils.applyDismissing(mPreviewClipper,mCircleRadius,maxCircleSize,velocity,maxCircleSize);
    mPreviewClipper.addListener(mClipEndListener);
    mPreviewClipper.start();
  }
}
