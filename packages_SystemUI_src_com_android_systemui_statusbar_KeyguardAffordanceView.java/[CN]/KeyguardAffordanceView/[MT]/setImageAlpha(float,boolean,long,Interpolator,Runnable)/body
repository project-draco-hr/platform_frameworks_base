{
  cancelAnimator(mAlphaAnimator);
  alpha=mLaunchingAffordance ? 0 : alpha;
  int endAlpha=(int)(alpha * 255);
  final Drawable background=getBackground();
  if (!animate) {
    if (background != null)     background.mutate().setAlpha(endAlpha);
    setImageAlpha(endAlpha);
  }
 else {
    int currentAlpha=getImageAlpha();
    ValueAnimator animator=ValueAnimator.ofInt(currentAlpha,endAlpha);
    mAlphaAnimator=animator;
    animator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){
      @Override public void onAnimationUpdate(      ValueAnimator animation){
        int alpha=(int)animation.getAnimatedValue();
        if (background != null)         background.mutate().setAlpha(alpha);
        setImageAlpha(alpha);
      }
    }
);
    animator.addListener(mAlphaEndListener);
    if (interpolator == null) {
      interpolator=alpha == 0.0f ? Interpolators.FAST_OUT_LINEAR_IN : Interpolators.LINEAR_OUT_SLOW_IN;
    }
    animator.setInterpolator(interpolator);
    if (duration == -1) {
      float durationFactor=Math.abs(currentAlpha - endAlpha) / 255f;
      durationFactor=Math.min(1.0f,durationFactor);
      duration=(long)(NORMAL_ANIMATION_DURATION * durationFactor);
    }
    animator.setDuration(duration);
    if (runnable != null) {
      animator.addListener(getEndListener(runnable));
    }
    animator.start();
  }
}
