{
  StateMachineEnterExitTransitionToTest smEnterExitTranstionToTest=new StateMachineEnterExitTransitionToTest("smEnterExitTranstionToTest");
  smEnterExitTranstionToTest.start();
  if (smEnterExitTranstionToTest.isDbg()) {
    tlog("testStateMachineEnterExitTransitionToTest E");
  }
synchronized (smEnterExitTranstionToTest) {
    smEnterExitTranstionToTest.sendMessage(TEST_CMD_1);
    try {
      smEnterExitTranstionToTest.wait();
    }
 catch (    InterruptedException e) {
      tloge("testStateMachineEnterExitTransitionToTest: exception while waiting " + e.getMessage());
    }
  }
  dumpLogRecs(smEnterExitTranstionToTest);
  assertEquals(9,smEnterExitTranstionToTest.getLogRecCount());
  LogRec lr;
  lr=smEnterExitTranstionToTest.getLogRec(0);
  assertEquals(ENTER,lr.getInfo());
  assertEquals(smEnterExitTranstionToTest.mS1,lr.getState());
  lr=smEnterExitTranstionToTest.getLogRec(1);
  assertEquals(EXIT,lr.getInfo());
  assertEquals(smEnterExitTranstionToTest.mS1,lr.getState());
  lr=smEnterExitTranstionToTest.getLogRec(2);
  assertEquals(ENTER,lr.getInfo());
  assertEquals(smEnterExitTranstionToTest.mS2,lr.getState());
  lr=smEnterExitTranstionToTest.getLogRec(3);
  assertEquals(TEST_CMD_1,lr.getWhat());
  assertEquals(smEnterExitTranstionToTest.mS2,lr.getState());
  assertEquals(smEnterExitTranstionToTest.mS2,lr.getOriginalState());
  assertEquals(smEnterExitTranstionToTest.mS3,lr.getDestState());
  lr=smEnterExitTranstionToTest.getLogRec(4);
  assertEquals(TEST_CMD_1,lr.getWhat());
  assertEquals(smEnterExitTranstionToTest.mS2,lr.getState());
  assertEquals(smEnterExitTranstionToTest.mS2,lr.getOriginalState());
  assertEquals(smEnterExitTranstionToTest.mS4,lr.getDestState());
  assertEquals(EXIT,lr.getInfo());
  lr=smEnterExitTranstionToTest.getLogRec(5);
  assertEquals(TEST_CMD_1,lr.getWhat());
  assertEquals(ENTER,lr.getInfo());
  assertEquals(smEnterExitTranstionToTest.mS3,lr.getState());
  assertEquals(smEnterExitTranstionToTest.mS3,lr.getOriginalState());
  assertEquals(smEnterExitTranstionToTest.mS4,lr.getDestState());
  lr=smEnterExitTranstionToTest.getLogRec(6);
  assertEquals(TEST_CMD_1,lr.getWhat());
  assertEquals(EXIT,lr.getInfo());
  assertEquals(smEnterExitTranstionToTest.mS3,lr.getState());
  assertEquals(smEnterExitTranstionToTest.mS3,lr.getOriginalState());
  assertEquals(smEnterExitTranstionToTest.mS4,lr.getDestState());
  lr=smEnterExitTranstionToTest.getLogRec(7);
  assertEquals(TEST_CMD_1,lr.getWhat());
  assertEquals(ENTER,lr.getInfo());
  assertEquals(smEnterExitTranstionToTest.mS4,lr.getState());
  assertEquals(smEnterExitTranstionToTest.mS4,lr.getOriginalState());
  assertEquals(smEnterExitTranstionToTest.mS4,lr.getDestState());
  lr=smEnterExitTranstionToTest.getLogRec(8);
  assertEquals(TEST_CMD_1,lr.getWhat());
  assertEquals(EXIT,lr.getInfo());
  assertEquals(smEnterExitTranstionToTest.mS4,lr.getState());
  assertEquals(smEnterExitTranstionToTest.mS4,lr.getOriginalState());
  if (smEnterExitTranstionToTest.isDbg()) {
    tlog("testStateMachineEnterExitTransitionToTest X");
  }
}
