{
  final int childCount=getChildCount();
  final int rowCount=childCount / mColumnCount + childCount % mColumnCount;
  int cellStart=getPaddingStart();
  int cellTop=getPaddingTop();
  for (int row=0; row < rowCount; row++) {
    int rowHeight=0;
    for (int col=0; col < mColumnCount; col++) {
      final int childIndex=row * mColumnCount + col;
      if (childIndex >= childCount) {
        break;
      }
      View child=getChildAt(childIndex);
      if (child.getVisibility() == GONE) {
        continue;
      }
      MarginLayoutParams childParams=(MarginLayoutParams)child.getLayoutParams();
      final int childLeft=cellStart + childParams.getMarginStart();
      final int childTop=cellTop + childParams.topMargin;
      final int childRight=childLeft + child.getMeasuredWidth();
      final int childBottom=childTop + child.getMeasuredHeight();
      child.layout(childLeft,childTop,childRight,childBottom);
      cellStart=childRight + childParams.getMarginEnd();
      rowHeight=Math.max(rowHeight,child.getMeasuredHeight() + childParams.topMargin + childParams.bottomMargin);
    }
    cellStart=getPaddingStart();
    cellTop+=rowHeight;
  }
}
