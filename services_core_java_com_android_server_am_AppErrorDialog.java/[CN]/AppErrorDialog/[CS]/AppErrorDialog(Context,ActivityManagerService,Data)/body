{
  super(context);
  Resources res=context.getResources();
  mService=service;
  mProc=data.proc;
  mResult=data.result;
  mRepeating=data.repeating;
  mForeground=data.task != null;
  BidiFormatter bidi=BidiFormatter.getInstance();
  if ((mProc.pkgList.size() == 1) && (mName=context.getPackageManager().getApplicationLabel(mProc.info)) != null) {
    setTitle(res.getString(mRepeating ? com.android.internal.R.string.aerr_application_repeated : com.android.internal.R.string.aerr_application,bidi.unicodeWrap(mName.toString()),bidi.unicodeWrap(mProc.info.processName)));
  }
 else {
    mName=mProc.processName;
    setTitle(res.getString(mRepeating ? com.android.internal.R.string.aerr_process_repeated : com.android.internal.R.string.aerr_process,bidi.unicodeWrap(mName.toString())));
  }
  setCancelable(true);
  setCancelMessage(mHandler.obtainMessage(CANCEL));
  WindowManager.LayoutParams attrs=getWindow().getAttributes();
  attrs.setTitle("Application Error: " + mProc.info.processName);
  attrs.privateFlags|=WindowManager.LayoutParams.PRIVATE_FLAG_SYSTEM_ERROR | WindowManager.LayoutParams.PRIVATE_FLAG_SHOW_FOR_ALL_USERS;
  getWindow().setAttributes(attrs);
  if (mProc.persistent) {
    getWindow().setType(WindowManager.LayoutParams.TYPE_SYSTEM_ERROR);
  }
  mHandler.sendMessageDelayed(mHandler.obtainMessage(TIMEOUT),DISMISS_TIMEOUT);
}
