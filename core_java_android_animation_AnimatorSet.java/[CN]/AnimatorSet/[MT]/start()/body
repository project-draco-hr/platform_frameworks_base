{
  mCanceled=false;
  sortNodes();
  final ArrayList<Node> nodesToStart=new ArrayList<Node>();
  for (  Node node : mSortedNodes) {
    if (mSetListener == null) {
      mSetListener=new AnimatorSetListener(this);
    }
    if (node.dependencies == null || node.dependencies.size() == 0) {
      nodesToStart.add(node);
    }
 else {
      for (      Dependency dependency : node.dependencies) {
        dependency.node.animation.addListener(new DependencyListener(this,node,dependency.rule));
      }
      node.tmpDependencies=(ArrayList<Dependency>)node.dependencies.clone();
    }
    node.animation.addListener(mSetListener);
  }
  if (mStartDelay <= 0) {
    for (    Node node : nodesToStart) {
      node.animation.start();
      mPlayingSet.add(node.animation);
    }
  }
 else {
    ValueAnimator delayAnim=new ValueAnimator(mStartDelay,0f,1f);
    delayAnim.addListener(new AnimatorListenerAdapter(){
      public void onAnimationEnd(      Animator anim){
        for (        Node node : nodesToStart) {
          node.animation.start();
          mPlayingSet.add(node.animation);
        }
      }
    }
);
  }
  if (mListeners != null) {
    ArrayList<AnimatorListener> tmpListeners=(ArrayList<AnimatorListener>)mListeners.clone();
    for (    AnimatorListener listener : tmpListeners) {
      listener.onAnimationStart(this);
    }
  }
}
