{
  mTerminated=false;
  mStarted=true;
  mPaused=false;
  int size=mNodes.size();
  for (int i=0; i < size; i++) {
    Node node=mNodes.get(i);
    node.mEnded=false;
    node.mAnimation.setAllowRunningAsynchronously(false);
  }
  if (mInterpolator != null) {
    for (int i=0; i < size; i++) {
      Node node=mNodes.get(i);
      node.mAnimation.setInterpolator(mInterpolator);
    }
  }
  updateAnimatorsDuration();
  createDependencyGraph();
  boolean setIsEmpty=false;
  if (mStartDelay > 0) {
    start(mRootNode);
  }
 else   if (mNodes.size() > 1) {
    onChildAnimatorEnded(mDelayAnim);
  }
 else {
    setIsEmpty=true;
  }
  if (mListeners != null) {
    ArrayList<AnimatorListener> tmpListeners=(ArrayList<AnimatorListener>)mListeners.clone();
    int numListeners=tmpListeners.size();
    for (int i=0; i < numListeners; ++i) {
      tmpListeners.get(i).onAnimationStart(this);
    }
  }
  if (setIsEmpty) {
    onChildAnimatorEnded(mDelayAnim);
  }
}
