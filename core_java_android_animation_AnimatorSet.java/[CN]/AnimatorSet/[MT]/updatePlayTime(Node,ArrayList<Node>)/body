{
  if (parent.mChildNodes == null) {
    if (parent == mRootNode) {
      for (int i=0; i < mNodes.size(); i++) {
        Node node=mNodes.get(i);
        if (node != mRootNode) {
          node.mStartTime=DURATION_INFINITE;
          node.mEndTime=DURATION_INFINITE;
        }
      }
    }
    return;
  }
  visited.add(parent);
  int childrenSize=parent.mChildNodes.size();
  for (int i=0; i < childrenSize; i++) {
    Node child=parent.mChildNodes.get(i);
    int index=visited.indexOf(child);
    if (index >= 0) {
      for (int j=index; j < visited.size(); j++) {
        visited.get(j).mLatestParent=null;
        visited.get(j).mStartTime=DURATION_INFINITE;
        visited.get(j).mEndTime=DURATION_INFINITE;
      }
      child.mStartTime=DURATION_INFINITE;
      child.mEndTime=DURATION_INFINITE;
      child.mLatestParent=null;
      Log.w(TAG,"Cycle found in AnimatorSet: " + this);
      continue;
    }
    if (child.mStartTime != DURATION_INFINITE) {
      if (parent.mEndTime == DURATION_INFINITE) {
        child.mLatestParent=parent;
        child.mStartTime=DURATION_INFINITE;
        child.mEndTime=DURATION_INFINITE;
      }
 else {
        if (parent.mEndTime >= child.mStartTime) {
          child.mLatestParent=parent;
          child.mStartTime=parent.mEndTime;
        }
        long duration=child.mAnimation.getTotalDuration();
        child.mEndTime=duration == DURATION_INFINITE ? DURATION_INFINITE : child.mStartTime + duration;
      }
    }
    updatePlayTime(child,visited);
  }
  visited.remove(parent);
}
