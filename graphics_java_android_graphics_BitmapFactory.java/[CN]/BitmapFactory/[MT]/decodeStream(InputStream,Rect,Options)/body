{
  if (is == null) {
    return null;
  }
  if (!is.markSupported()) {
    is=new BufferedInputStream(is,DECODE_BUFFER_SIZE);
  }
  is.mark(1024);
  Bitmap bm;
  boolean finish=true;
  if (is instanceof AssetManager.AssetInputStream) {
    final int asset=((AssetManager.AssetInputStream)is).getAssetInt();
    if (opts == null || (opts.inScaled && opts.inBitmap == null)) {
      float scale=1.0f;
      int targetDensity=0;
      if (opts != null) {
        final int density=opts.inDensity;
        targetDensity=opts.inTargetDensity;
        if (density != 0 && targetDensity != 0) {
          scale=targetDensity / (float)density;
        }
      }
      bm=nativeDecodeAsset(asset,outPadding,opts,true,scale);
      if (bm != null && targetDensity != 0)       bm.setDensity(targetDensity);
      finish=false;
    }
 else {
      bm=nativeDecodeAsset(asset,outPadding,opts);
    }
  }
 else {
    byte[] tempStorage=null;
    if (opts != null)     tempStorage=opts.inTempStorage;
    if (tempStorage == null)     tempStorage=new byte[16 * 1024];
    if (opts == null || (opts.inScaled && opts.inBitmap == null)) {
      float scale=1.0f;
      int targetDensity=0;
      if (opts != null) {
        final int density=opts.inDensity;
        targetDensity=opts.inTargetDensity;
        if (density != 0 && targetDensity != 0) {
          scale=targetDensity / (float)density;
        }
      }
      bm=nativeDecodeStream(is,tempStorage,outPadding,opts,true,scale);
      if (bm != null && targetDensity != 0)       bm.setDensity(targetDensity);
      finish=false;
    }
 else {
      bm=nativeDecodeStream(is,tempStorage,outPadding,opts);
    }
  }
  if (bm == null && opts != null && opts.inBitmap != null) {
    throw new IllegalArgumentException("Problem decoding into existing bitmap");
  }
  return finish ? finishDecode(bm,outPadding,opts) : bm;
}
