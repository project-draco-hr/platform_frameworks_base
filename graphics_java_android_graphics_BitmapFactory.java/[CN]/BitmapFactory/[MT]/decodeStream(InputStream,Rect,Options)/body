{
  if (is == null) {
    return null;
  }
  if (!is.markSupported()) {
    is=new BufferedInputStream(is,16 * 1024);
  }
  is.mark(1024);
  Bitmap bm;
  if (is instanceof AssetManager.AssetInputStream) {
    bm=nativeDecodeAsset(((AssetManager.AssetInputStream)is).getAssetInt(),outPadding,opts);
  }
 else {
    byte[] tempStorage=null;
    if (opts != null)     tempStorage=opts.inTempStorage;
    if (tempStorage == null)     tempStorage=new byte[16 * 1024];
    bm=nativeDecodeStream(is,tempStorage,outPadding,opts);
  }
  if (bm == null || opts == null) {
    return bm;
  }
  final int density=opts.inDensity;
  if (density == 0) {
    return bm;
  }
  bm.setDensity(density);
  final int targetDensity=opts.inTargetDensity;
  if (targetDensity == 0 || density == targetDensity || density == opts.inScreenDensity) {
    return bm;
  }
  byte[] np=bm.getNinePatchChunk();
  final boolean isNinePatch=np != null && NinePatch.isNinePatchChunk(np);
  if (opts.inScaled || isNinePatch) {
    float scale=targetDensity / (float)density;
    final Bitmap oldBitmap=bm;
    bm=Bitmap.createScaledBitmap(oldBitmap,(int)(bm.getWidth() * scale + 0.5f),(int)(bm.getHeight() * scale + 0.5f),true);
    oldBitmap.recycle();
    if (isNinePatch) {
      np=nativeScaleNinePatch(np,scale,outPadding);
      bm.setNinePatchChunk(np);
    }
    bm.setDensity(targetDensity);
  }
  return bm;
}
