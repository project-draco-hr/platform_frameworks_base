{
  if (opts == null) {
    opts=new Options();
  }
  Bitmap bm=decodeStream(is,pad,opts);
  if (bm != null && res != null && value != null) {
    byte[] np=bm.getNinePatchChunk();
    final boolean isNinePatch=np != null && NinePatch.isNinePatchChunk(np);
    final int density=value.density;
    if (opts.inDensity == 0) {
      opts.inDensity=density == TypedValue.DENSITY_DEFAULT ? DisplayMetrics.DEFAULT_DENSITY : density;
    }
    float scale=opts.inDensity / (float)DisplayMetrics.DEFAULT_DENSITY;
    if (opts.inScaled || isNinePatch) {
      bm.setDensityScale(1.0f);
      bm.setAutoScalingEnabled(false);
      scale=res.getDisplayMetrics().density / scale;
      if (scale != 1.0f) {
        final Bitmap oldBitmap=bm;
        bm=Bitmap.createScaledBitmap(oldBitmap,(int)(bm.getWidth() * scale + 0.5f),(int)(bm.getHeight() * scale + 0.5f),true);
        oldBitmap.recycle();
        if (isNinePatch) {
          np=nativeScaleNinePatch(np,scale,pad);
          bm.setNinePatchChunk(np);
        }
      }
    }
 else {
      bm.setDensityScale(scale);
      bm.setAutoScalingEnabled(true);
    }
  }
  return bm;
}
