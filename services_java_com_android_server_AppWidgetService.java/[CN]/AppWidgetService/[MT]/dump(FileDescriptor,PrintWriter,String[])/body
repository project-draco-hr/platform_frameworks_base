{
  if (mContext.checkCallingOrSelfPermission(android.Manifest.permission.DUMP) != PackageManager.PERMISSION_GRANTED) {
    pw.println("Permission Denial: can't dump from from pid=" + Binder.getCallingPid() + ", uid="+ Binder.getCallingUid());
    return;
  }
synchronized (mAppWidgetIds) {
    int N=mInstalledProviders.size();
    pw.println("Providers:");
    for (int i=0; i < N; i++) {
      Provider p=mInstalledProviders.get(i);
      AppWidgetProviderInfo info=p.info;
      pw.print("  [");
      pw.print(i);
      pw.print("] provider ");
      pw.print(info.provider.flattenToShortString());
      pw.println(':');
      pw.print("    min=(");
      pw.print(info.minWidth);
      pw.print("x");
      pw.print(info.minHeight);
      pw.print(") updatePeriodMillis=");
      pw.print(info.updatePeriodMillis);
      pw.print(" initialLayout=#");
      pw.print(Integer.toHexString(info.initialLayout));
      pw.print(" zombie=");
      pw.println(p.zombie);
    }
    N=mAppWidgetIds.size();
    pw.println(" ");
    pw.println("AppWidgetIds:");
    for (int i=0; i < N; i++) {
      AppWidgetId id=mAppWidgetIds.get(i);
      pw.print("  [");
      pw.print(i);
      pw.print("] id=");
      pw.println(id.appWidgetId);
      ;
      pw.print("    hostId=");
      pw.print(id.host.hostId);
      pw.print(' ');
      pw.print(id.host.packageName);
      pw.print('/');
      pw.println(id.host.uid);
      if (id.provider != null) {
        pw.print("    provider=");
        pw.println(id.provider.info.provider.flattenToShortString());
      }
      if (id.host != null) {
        pw.print("    host.callbacks=");
        pw.println(id.host.callbacks);
      }
      if (id.views != null) {
        pw.print("    views=");
        pw.println(id.views);
      }
    }
    N=mHosts.size();
    pw.println(" ");
    pw.println("Hosts:");
    for (int i=0; i < N; i++) {
      Host host=mHosts.get(i);
      pw.print("  [");
      pw.print(i);
      pw.print("] hostId=");
      pw.print(host.hostId);
      pw.print(' ');
      pw.print(host.packageName);
      pw.print('/');
      pw.print(host.uid);
      pw.println(':');
      pw.print("    callbacks=");
      pw.println(host.callbacks);
      pw.print("    instances.size=");
      pw.print(host.instances.size());
      pw.print(" zombie=");
      pw.println(host.zombie);
    }
  }
}
