{
  mSafeMode=safeMode;
  mAppWidgetServices.get(0).systemReady(safeMode);
  mContext.registerReceiverAsUser(mBroadcastReceiver,UserHandle.ALL,new IntentFilter(Intent.ACTION_BOOT_COMPLETED),null,null);
  mContext.registerReceiverAsUser(mBroadcastReceiver,UserHandle.ALL,new IntentFilter(Intent.ACTION_CONFIGURATION_CHANGED),null,null);
  IntentFilter filter=new IntentFilter();
  filter.addAction(Intent.ACTION_PACKAGE_ADDED);
  filter.addAction(Intent.ACTION_PACKAGE_CHANGED);
  filter.addAction(Intent.ACTION_PACKAGE_REMOVED);
  filter.addDataScheme("package");
  mContext.registerReceiverAsUser(mBroadcastReceiver,UserHandle.ALL,filter,null,null);
  IntentFilter sdFilter=new IntentFilter();
  sdFilter.addAction(Intent.ACTION_EXTERNAL_APPLICATIONS_AVAILABLE);
  sdFilter.addAction(Intent.ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE);
  mContext.registerReceiverAsUser(mBroadcastReceiver,UserHandle.ALL,sdFilter,null,null);
  IntentFilter userFilter=new IntentFilter();
  userFilter.addAction(Intent.ACTION_USER_REMOVED);
  mContext.registerReceiver(new BroadcastReceiver(){
    @Override public void onReceive(    Context context,    Intent intent){
      onUserRemoved(intent.getIntExtra(Intent.EXTRA_USER_HANDLE,-1));
    }
  }
,userFilter);
  IntentFilter userStopFilter=new IntentFilter();
  userStopFilter.addAction(Intent.ACTION_USER_STOPPED);
  mContext.registerReceiverAsUser(new BroadcastReceiver(){
    @Override public void onReceive(    Context context,    Intent intent){
      onUserStopped(getSendingUserId());
    }
  }
,UserHandle.ALL,userFilter,null,null);
}
