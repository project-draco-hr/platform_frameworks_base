{
  if (mAudioSource == null || mAudioSink == null) {
    if (mAudioPatch != null) {
      throw new IllegalStateException("Audio patch should be null if audio source " + "or sink is null.");
    }
    return;
  }
  AudioGainConfig sourceGainConfig=null;
  if (mAudioSource.gains().length > 0 && mVolume != mCommittedVolume) {
    AudioGain sourceGain=null;
    for (    AudioGain gain : mAudioSource.gains()) {
      if ((gain.mode() & AudioGain.MODE_JOINT) != 0) {
        sourceGain=gain;
        break;
      }
    }
    if (sourceGain != null) {
      int steps=(sourceGain.maxValue() - sourceGain.minValue()) / sourceGain.stepValue();
      int gainValue=sourceGain.minValue();
      if (mVolume < 1.0f) {
        gainValue+=sourceGain.stepValue() * (int)(mVolume * steps + 0.5);
      }
 else {
        gainValue=sourceGain.maxValue();
      }
      int numChannels=0;
      for (int mask=sourceGain.channelMask(); mask > 0; mask>>=1) {
        numChannels+=(mask & 1);
      }
      int[] gainValues=new int[numChannels];
      Arrays.fill(gainValues,gainValue);
      sourceGainConfig=sourceGain.buildConfig(AudioGain.MODE_JOINT,sourceGain.channelMask(),gainValues,0);
    }
 else {
      Slog.w(TAG,"No audio source gain with MODE_JOINT support exists.");
    }
  }
  AudioPortConfig sourceConfig=mAudioSource.activeConfig();
  AudioPortConfig sinkConfig=mAudioSink.activeConfig();
  AudioPatch[] audioPatchArray=new AudioPatch[]{mAudioPatch};
  boolean shouldRecreateAudioPatch=false;
  if (sinkConfig == null || (mDesiredSamplingRate != 0 && sinkConfig.samplingRate() != mDesiredSamplingRate) || (mDesiredChannelMask != AudioFormat.CHANNEL_OUT_DEFAULT && sinkConfig.channelMask() != mDesiredChannelMask) || (mDesiredFormat != AudioFormat.ENCODING_DEFAULT && sinkConfig.format() != mDesiredFormat)) {
    sinkConfig=mAudioSource.buildConfig(mDesiredSamplingRate,mDesiredChannelMask,mDesiredFormat,null);
    shouldRecreateAudioPatch=true;
  }
  if (sourceConfig == null || sourceGainConfig != null) {
    sourceConfig=mAudioSource.buildConfig(sinkConfig.samplingRate(),sinkConfig.channelMask(),sinkConfig.format(),sourceGainConfig);
    shouldRecreateAudioPatch=true;
  }
  if (shouldRecreateAudioPatch) {
    mCommittedVolume=mVolume;
    mAudioManager.createAudioPatch(audioPatchArray,new AudioPortConfig[]{sourceConfig},new AudioPortConfig[]{sinkConfig});
    mAudioPatch=audioPatchArray[0];
  }
}
