{
  doGestureDetection(motionEvent);
  final int action=motionEvent.getAction();
switch (action & MotionEvent.ACTION_MASK) {
case MotionEvent.ACTION_DOWN:
{
      mPointerId=motionEvent.getPointerId(0);
      mDownX=motionEvent.getX();
      mDownY=motionEvent.getY();
      final int x=(int)mDownX;
      final int y=(int)mDownY;
synchronized (this) {
        if (!mTouchExcludeRegion.contains(x,y)) {
          mService.mH.obtainMessage(H.TAP_DOWN_OUTSIDE_TASK,x,y,mDisplayContent).sendToTarget();
        }
      }
      break;
    }
case MotionEvent.ACTION_MOVE:
{
    if (mPointerId >= 0) {
      int index=motionEvent.findPointerIndex(mPointerId);
      if ((motionEvent.getEventTime() - motionEvent.getDownTime()) > TAP_TIMEOUT_MSEC || index < 0 || Math.abs(motionEvent.getX(index) - mDownX) > mMotionSlop || Math.abs(motionEvent.getY(index) - mDownY) > mMotionSlop) {
        mPointerId=-1;
      }
    }
    if (motionEvent.getPointerCount() != 2) {
      stopTwoFingerScroll();
    }
    break;
  }
case MotionEvent.ACTION_HOVER_MOVE:
{
  final int x=(int)motionEvent.getX();
  final int y=(int)motionEvent.getY();
  final Task task=mDisplayContent.findTaskForControlPoint(x,y);
  if (task == null) {
    mPointerIconShape=STYLE_NOT_SPECIFIED;
    break;
  }
  task.getDimBounds(mTmpRect);
  if (!mTmpRect.isEmpty() && !mTmpRect.contains(x,y)) {
    int iconShape=STYLE_DEFAULT;
    if (x < mTmpRect.left) {
      iconShape=(y < mTmpRect.top) ? STYLE_TOP_LEFT_DIAGONAL_DOUBLE_ARROW : (y > mTmpRect.bottom) ? STYLE_TOP_RIGHT_DIAGONAL_DOUBLE_ARROW : STYLE_HORIZONTAL_DOUBLE_ARROW;
    }
 else     if (x > mTmpRect.right) {
      iconShape=(y < mTmpRect.top) ? STYLE_TOP_RIGHT_DIAGONAL_DOUBLE_ARROW : (y > mTmpRect.bottom) ? STYLE_TOP_LEFT_DIAGONAL_DOUBLE_ARROW : STYLE_HORIZONTAL_DOUBLE_ARROW;
    }
 else     if (y < mTmpRect.top || y > mTmpRect.bottom) {
      iconShape=STYLE_VERTICAL_DOUBLE_ARROW;
    }
    if (mPointerIconShape != iconShape) {
      mPointerIconShape=iconShape;
      motionEvent.getDevice().setPointerShape(iconShape);
    }
  }
 else {
    mPointerIconShape=STYLE_NOT_SPECIFIED;
  }
}
break;
case MotionEvent.ACTION_HOVER_EXIT:
mPointerIconShape=STYLE_NOT_SPECIFIED;
motionEvent.getDevice().setPointerShape(STYLE_DEFAULT);
break;
case MotionEvent.ACTION_UP:
case MotionEvent.ACTION_POINTER_UP:
{
int index=(action & MotionEvent.ACTION_POINTER_INDEX_MASK) >> MotionEvent.ACTION_POINTER_INDEX_SHIFT;
if (mPointerId == motionEvent.getPointerId(index)) {
final int x=(int)motionEvent.getX(index);
final int y=(int)motionEvent.getY(index);
synchronized (this) {
if ((motionEvent.getEventTime() - motionEvent.getDownTime()) < TAP_TIMEOUT_MSEC && Math.abs(x - mDownX) < mMotionSlop && Math.abs(y - mDownY) < mMotionSlop && !mTouchExcludeRegion.contains(x,y)) {
mService.mH.obtainMessage(H.TAP_OUTSIDE_TASK,x,y,mDisplayContent).sendToTarget();
}
}
mPointerId=-1;
}
stopTwoFingerScroll();
break;
}
}
}
