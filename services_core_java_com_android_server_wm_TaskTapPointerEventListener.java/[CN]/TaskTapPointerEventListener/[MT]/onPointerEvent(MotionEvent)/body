{
  doGestureDetection(motionEvent);
  final int action=motionEvent.getAction();
switch (action & MotionEvent.ACTION_MASK) {
case MotionEvent.ACTION_DOWN:
{
      final int x=(int)motionEvent.getX();
      final int y=(int)motionEvent.getY();
synchronized (this) {
        if (!mTouchExcludeRegion.contains(x,y)) {
          mService.mH.obtainMessage(H.TAP_OUTSIDE_TASK,x,y,mDisplayContent).sendToTarget();
        }
      }
      break;
    }
case MotionEvent.ACTION_MOVE:
{
    if (motionEvent.getPointerCount() != 2) {
      stopTwoFingerScroll();
    }
    break;
  }
case MotionEvent.ACTION_HOVER_MOVE:
{
  final int x=(int)motionEvent.getX();
  final int y=(int)motionEvent.getY();
  final Task task=mDisplayContent.findTaskForControlPoint(x,y);
  InputDevice inputDevice=motionEvent.getDevice();
  if (task == null || inputDevice == null) {
    mPointerIconType=TYPE_NOT_SPECIFIED;
    break;
  }
  task.getDimBounds(mTmpRect);
  if (!mTmpRect.isEmpty() && !mTmpRect.contains(x,y)) {
    int iconType=TYPE_DEFAULT;
    if (x < mTmpRect.left) {
      iconType=(y < mTmpRect.top) ? TYPE_TOP_LEFT_DIAGONAL_DOUBLE_ARROW : (y > mTmpRect.bottom) ? TYPE_TOP_RIGHT_DIAGONAL_DOUBLE_ARROW : TYPE_HORIZONTAL_DOUBLE_ARROW;
    }
 else     if (x > mTmpRect.right) {
      iconType=(y < mTmpRect.top) ? TYPE_TOP_RIGHT_DIAGONAL_DOUBLE_ARROW : (y > mTmpRect.bottom) ? TYPE_TOP_LEFT_DIAGONAL_DOUBLE_ARROW : TYPE_HORIZONTAL_DOUBLE_ARROW;
    }
 else     if (y < mTmpRect.top || y > mTmpRect.bottom) {
      iconType=TYPE_VERTICAL_DOUBLE_ARROW;
    }
    if (mPointerIconType != iconType) {
      mPointerIconType=iconType;
      inputDevice.setPointerType(iconType);
    }
  }
 else {
    mPointerIconType=TYPE_NOT_SPECIFIED;
  }
}
break;
case MotionEvent.ACTION_HOVER_EXIT:
mPointerIconType=TYPE_NOT_SPECIFIED;
InputDevice inputDevice=motionEvent.getDevice();
if (inputDevice != null) {
inputDevice.setPointerType(TYPE_DEFAULT);
}
break;
case MotionEvent.ACTION_UP:
case MotionEvent.ACTION_POINTER_UP:
{
stopTwoFingerScroll();
break;
}
}
}
