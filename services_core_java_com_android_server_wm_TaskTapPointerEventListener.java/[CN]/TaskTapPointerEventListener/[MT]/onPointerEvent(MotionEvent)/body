{
  final int action=motionEvent.getAction();
switch (action & MotionEvent.ACTION_MASK) {
case MotionEvent.ACTION_DOWN:
{
      mPointerId=motionEvent.getPointerId(0);
      mDownX=motionEvent.getX();
      mDownY=motionEvent.getY();
      final int x=(int)mDownX;
      final int y=(int)mDownY;
synchronized (this) {
        if (!mTouchExcludeRegion.contains(x,y)) {
          mService.mH.obtainMessage(H.TAP_DOWN_OUTSIDE_TASK,x,y,mDisplayContent).sendToTarget();
        }
      }
      break;
    }
case MotionEvent.ACTION_MOVE:
{
    if (mPointerId >= 0) {
      int index=motionEvent.findPointerIndex(mPointerId);
      if ((motionEvent.getEventTime() - motionEvent.getDownTime()) > TAP_TIMEOUT_MSEC || index < 0 || Math.abs(motionEvent.getX(index) - mDownX) > mMotionSlop || Math.abs(motionEvent.getY(index) - mDownY) > mMotionSlop) {
        mPointerId=-1;
      }
    }
    break;
  }
case MotionEvent.ACTION_UP:
case MotionEvent.ACTION_POINTER_UP:
{
  int index=(action & MotionEvent.ACTION_POINTER_INDEX_MASK) >> MotionEvent.ACTION_POINTER_INDEX_SHIFT;
  if (mPointerId == motionEvent.getPointerId(index)) {
    final int x=(int)motionEvent.getX(index);
    final int y=(int)motionEvent.getY(index);
synchronized (this) {
      if ((motionEvent.getEventTime() - motionEvent.getDownTime()) < TAP_TIMEOUT_MSEC && Math.abs(x - mDownX) < mMotionSlop && Math.abs(y - mDownY) < mMotionSlop && !mTouchExcludeRegion.contains(x,y)) {
        mService.mH.obtainMessage(H.TAP_OUTSIDE_TASK,x,y,mDisplayContent).sendToTarget();
      }
    }
    mPointerId=-1;
  }
  break;
}
}
}
