{
  super(context);
  mLockPatternUtils=lockPatternUtils;
  mUpdateMonitor=updateMonitor;
  mCallback=callback;
  mEnableMenuKeyInLockScreen=shouldEnableMenuKey();
  mCreatedInPortrait=updateMonitor.isInPortrait();
  final LayoutInflater inflater=LayoutInflater.from(context);
  if (mCreatedInPortrait) {
    inflater.inflate(R.layout.keyguard_screen_tab_unlock,this,true);
  }
 else {
    inflater.inflate(R.layout.keyguard_screen_tab_unlock_land,this,true);
  }
  mCarrier=(TextView)findViewById(R.id.carrier);
  mCarrier.setSelected(true);
  mCarrier.setTextColor(0xffffffff);
  mDate=(TextView)findViewById(R.id.date);
  mStatus1=(TextView)findViewById(R.id.status1);
  mStatus2=(TextView)findViewById(R.id.status2);
  mEmergencyCallButton=(Button)findViewById(R.id.emergencyCallButton);
  mEmergencyCallButton.setText(R.string.lockscreen_emergency_call);
  mScreenLocked=(TextView)findViewById(R.id.screenLocked);
  mSelector=(SlidingTab)findViewById(R.id.tab_selector);
  mSelector.setHoldAfterTrigger(true,false);
  mSelector.setLeftHintText(R.string.lockscreen_unlock_label);
  mEmergencyCallButton.setOnClickListener(new View.OnClickListener(){
    public void onClick(    View v){
      mCallback.takeEmergencyCallAction();
    }
  }
);
  setFocusable(true);
  setFocusableInTouchMode(true);
  setDescendantFocusability(ViewGroup.FOCUS_BLOCK_DESCENDANTS);
  updateMonitor.registerInfoCallback(this);
  updateMonitor.registerSimStateCallback(this);
  updateMonitor.registerConfigurationChangeCallback(this);
  mAudioManager=(AudioManager)getContext().getSystemService(Context.AUDIO_SERVICE);
  mSilentMode=isSilentMode();
  mSelector.setLeftTabResources(R.drawable.ic_jog_dial_unlock,R.drawable.jog_tab_target_green,R.drawable.jog_tab_bar_left_unlock,R.drawable.jog_tab_left_unlock);
  updateRightTabResources();
  mSelector.setOnTriggerListener(this);
  resetStatusInfo(updateMonitor);
}
