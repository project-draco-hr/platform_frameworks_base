{
synchronized (sSurfaces) {
    final int N=sSurfaces.size();
    if (N <= 0) {
      return;
    }
    if (header != null) {
      pw.println(header);
    }
    pw.println("WINDOW MANAGER SURFACES (dumpsys window surfaces)");
    for (int i=0; i < N; i++) {
      SurfaceTrace s=sSurfaces.get(i);
      pw.print("  Surface #");
      pw.print(i);
      pw.print(": #");
      pw.print(Integer.toHexString(System.identityHashCode(s)));
      pw.print(" ");
      pw.println(s.mName);
      pw.print("    mLayerStack=");
      pw.print(s.mLayerStack);
      pw.print(" mLayer=");
      pw.println(s.mLayer);
      pw.print("    mShown=");
      pw.print(s.mShown);
      pw.print(" mAlpha=");
      pw.print(s.mSurfaceTraceAlpha);
      pw.print(" mIsOpaque=");
      pw.println(s.mIsOpaque);
      pw.print("    mPosition=");
      pw.print(s.mPosition.x);
      pw.print(",");
      pw.print(s.mPosition.y);
      pw.print(" mSize=");
      pw.print(s.mSize.x);
      pw.print("x");
      pw.println(s.mSize.y);
      pw.print("    mCrop=");
      s.mWindowCrop.printShortString(pw);
      pw.println();
      pw.print("    Transform: (");
      pw.print(s.mDsdx);
      pw.print(", ");
      pw.print(s.mDtdx);
      pw.print(", ");
      pw.print(s.mDsdy);
      pw.print(", ");
      pw.print(s.mDtdy);
      pw.println(")");
    }
  }
}
