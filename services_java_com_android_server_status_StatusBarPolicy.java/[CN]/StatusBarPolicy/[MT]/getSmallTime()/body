{
  boolean b24=DateFormat.is24HourFormat(mContext);
  int res;
  if (b24) {
    res=R.string.twenty_four_hour_time_format;
  }
 else {
    res=R.string.twelve_hour_time_format;
  }
  String format=mContext.getString(res);
  int a=-1;
  boolean quoted=false;
  for (int i=0; i < format.length(); i++) {
    char c=format.charAt(i);
    if (c == '\'') {
      quoted=!quoted;
    }
    if (!quoted && c == 'a') {
      a=i;
      break;
    }
  }
  final char MAGIC1='\uEF00';
  final char MAGIC2='\uEF01';
  if (a >= 0) {
    format=format.substring(0,a) + MAGIC1 + "a"+ MAGIC2+ format.substring(a + 1);
  }
  String result=new SimpleDateFormat(format).format(mCalendar.getTime());
  int magic1=result.indexOf(MAGIC1);
  int magic2=result.indexOf(MAGIC2);
  if (magic1 >= 0 && magic2 > magic1) {
    SpannableStringBuilder formatted=new SpannableStringBuilder(result);
    formatted.setSpan(new RelativeSizeSpan(0.7f),magic1,magic2,Spannable.SPAN_EXCLUSIVE_INCLUSIVE);
    formatted.delete(magic2,magic2 + 1);
    formatted.delete(magic1,magic1 + 1);
    return formatted;
  }
 else {
    return result;
  }
}
