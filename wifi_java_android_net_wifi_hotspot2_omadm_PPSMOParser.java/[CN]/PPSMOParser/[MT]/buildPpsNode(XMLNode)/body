{
  String nodeName=null;
  String nodeValue=null;
  List<PPSNode> childNodes=new ArrayList<PPSNode>();
  Set<String> parsedNodes=new HashSet<String>();
  for (  XMLNode child : node.getChildren()) {
    String tag=child.getTag();
    if (TextUtils.equals(tag,TAG_NODE_NAME)) {
      if (nodeName != null) {
        throw new ParsingException("Duplicate NodeName node");
      }
      nodeName=child.getText();
    }
 else     if (TextUtils.equals(tag,TAG_NODE)) {
      PPSNode ppsNode=buildPpsNode(child);
      if (parsedNodes.contains(ppsNode.getName())) {
        throw new ParsingException("Duplicate node: " + ppsNode.getName());
      }
      parsedNodes.add(ppsNode.getName());
      childNodes.add(ppsNode);
    }
 else     if (TextUtils.equals(tag,TAG_VALUE)) {
      if (nodeValue != null) {
        throw new ParsingException("Duplicate Value node");
      }
      nodeValue=child.getText();
    }
 else {
      throw new ParsingException("Unknown tag: " + tag);
    }
  }
  if (nodeName == null) {
    throw new ParsingException("Invalid node: missing NodeName");
  }
  if (nodeValue == null && childNodes.size() == 0) {
    throw new ParsingException("Invalid node: " + nodeName + " missing both value and children");
  }
  if (nodeValue != null && childNodes.size() > 0) {
    throw new ParsingException("Invalid node: " + nodeName + " contained both value and children");
  }
  if (nodeValue != null) {
    return new LeafNode(nodeName,nodeValue);
  }
  return new InternalNode(nodeName,childNodes);
}
