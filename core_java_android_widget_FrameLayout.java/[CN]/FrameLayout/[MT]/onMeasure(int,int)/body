{
  int count=getChildCount();
  final boolean measureMatchParentChildren=MeasureSpec.getMode(widthMeasureSpec) != MeasureSpec.EXACTLY || MeasureSpec.getMode(heightMeasureSpec) != MeasureSpec.EXACTLY;
  mMatchParentChildren.clear();
  int maxHeight=0;
  int maxWidth=0;
  int childState=0;
  for (int i=0; i < count; i++) {
    final View child=getChildAt(i);
    if (mMeasureAllChildren || child.getVisibility() != GONE) {
      measureChildWithMargins(child,widthMeasureSpec,0,heightMeasureSpec,0);
      maxWidth=Math.max(maxWidth,child.getMeasuredWidth());
      maxHeight=Math.max(maxHeight,child.getMeasuredHeight());
      childState=combineMeasuredStates(childState,child.getMeasuredState());
      if (measureMatchParentChildren) {
        final ViewGroup.LayoutParams lp=child.getLayoutParams();
        if (lp.width == LayoutParams.MATCH_PARENT || lp.height == LayoutParams.MATCH_PARENT) {
          mMatchParentChildren.add(child);
        }
      }
    }
  }
  maxWidth+=mPaddingLeft + mPaddingRight + mForegroundPaddingLeft+ mForegroundPaddingRight;
  maxHeight+=mPaddingTop + mPaddingBottom + mForegroundPaddingTop+ mForegroundPaddingBottom;
  maxHeight=Math.max(maxHeight,getSuggestedMinimumHeight());
  maxWidth=Math.max(maxWidth,getSuggestedMinimumWidth());
  final Drawable drawable=getForeground();
  if (drawable != null) {
    maxHeight=Math.max(maxHeight,drawable.getMinimumHeight());
    maxWidth=Math.max(maxWidth,drawable.getMinimumWidth());
  }
  setMeasuredDimension(resolveSizeAndState(maxWidth,widthMeasureSpec,childState),resolveSizeAndState(maxHeight,heightMeasureSpec,childState << MEASURED_HEIGHT_STATE_SHIFT));
  if (mMatchParentChildren.size() > 0) {
    count=mMatchParentChildren.size();
    for (int i=0; i < count; i++) {
      final View child=mMatchParentChildren.get(i);
      final MarginLayoutParams lp=(MarginLayoutParams)child.getLayoutParams();
      int childWidthMeasureSpec;
      int childHeightMeasureSpec;
      if (lp.width == LayoutParams.MATCH_PARENT) {
        childWidthMeasureSpec=MeasureSpec.makeMeasureSpec(getMeasuredWidth() - mPaddingLeft - mPaddingRight- lp.leftMargin- lp.rightMargin,MeasureSpec.EXACTLY);
      }
 else {
        childWidthMeasureSpec=getChildMeasureSpec(widthMeasureSpec,mPaddingLeft + mPaddingRight + lp.leftMargin+ lp.rightMargin,lp.width);
      }
      if (lp.height == LayoutParams.MATCH_PARENT) {
        childHeightMeasureSpec=MeasureSpec.makeMeasureSpec(getMeasuredHeight() - mPaddingTop - mPaddingBottom- lp.topMargin- lp.bottomMargin,MeasureSpec.EXACTLY);
      }
 else {
        childHeightMeasureSpec=getChildMeasureSpec(heightMeasureSpec,mPaddingTop + mPaddingBottom + lp.topMargin+ lp.bottomMargin,lp.height);
      }
      child.measure(childWidthMeasureSpec,childHeightMeasureSpec);
    }
  }
}
