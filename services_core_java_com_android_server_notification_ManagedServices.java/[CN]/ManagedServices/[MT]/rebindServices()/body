{
  if (DEBUG)   Slog.d(TAG,"rebindServices");
  final int[] userIds=mUserProfiles.getCurrentProfileIds();
  final int nUserIds=userIds.length;
  final SparseArray<ArraySet<ComponentName>> componentsByUser=new SparseArray<>();
  for (int i=0; i < nUserIds; ++i) {
    componentsByUser.put(userIds[i],loadComponentNamesFromSetting(mConfig.secureSettingName,userIds[i]));
  }
  final ArrayList<ManagedServiceInfo> toRemove=new ArrayList<>();
  final SparseArray<ArrayList<ComponentName>> toAdd=new SparseArray<>();
synchronized (mMutex) {
    for (    ManagedServiceInfo service : mServices) {
      if (!service.isSystem) {
        toRemove.add(service);
      }
    }
    final ArraySet<ComponentName> newEnabled=new ArraySet<>();
    final ArraySet<String> newPackages=new ArraySet<>();
    for (int i=0; i < nUserIds; ++i) {
      final ArraySet<ComponentName> userComponents=componentsByUser.get(userIds[i]);
      if (null == userComponents) {
        toAdd.put(userIds[i],new ArrayList<ComponentName>());
        continue;
      }
      final ArrayList<ComponentName> add=new ArrayList<>(userComponents);
      for (      Entry<String,Boolean> e : mCategoryEnabled.entrySet()) {
        if (!e.getValue()) {
          Set<ComponentName> c=queryPackageForServices(null,userIds[i],e.getKey());
          add.removeAll(c);
        }
      }
      toAdd.put(userIds[i],add);
      newEnabled.addAll(userComponents);
      for (int j=0; j < userComponents.size(); j++) {
        final ComponentName component=userComponents.valueAt(j);
        newPackages.add(component.getPackageName());
      }
    }
    mEnabledServicesForCurrentProfiles=newEnabled;
    mEnabledServicesPackageNames=newPackages;
  }
  for (  ManagedServiceInfo info : toRemove) {
    final ComponentName component=info.component;
    final int oldUser=info.userid;
    Slog.v(TAG,"disabling " + getCaption() + " for user "+ oldUser+ ": "+ component);
    unregisterService(component,info.userid);
  }
  for (int i=0; i < nUserIds; ++i) {
    final ArrayList<ComponentName> add=toAdd.get(userIds[i]);
    final int N=add.size();
    for (int j=0; j < N; j++) {
      final ComponentName component=add.get(j);
      Slog.v(TAG,"enabling " + getCaption() + " for user "+ userIds[i]+ ": "+ component);
      registerService(component,userIds[i]);
    }
  }
  mLastSeenProfileIds=userIds;
}
