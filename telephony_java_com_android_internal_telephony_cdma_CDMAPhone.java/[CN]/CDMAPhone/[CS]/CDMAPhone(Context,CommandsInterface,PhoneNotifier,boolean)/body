{
  super(notifier,context,unitTestMode);
  h=new MyHandler();
  mCM=ci;
  mCM.setPhoneType(RILConstants.CDMA_PHONE);
  mCT=new CdmaCallTracker(this);
  mSST=new CdmaServiceStateTracker(this);
  mSMS=new CdmaSMSDispatcher(this);
  mIccFileHandler=new RuimFileHandler(this);
  mRuimRecords=new RuimRecords(this);
  mDataConnection=new CdmaDataConnectionTracker(this);
  mRuimCard=new RuimCard(this);
  mRuimPhoneBookInterfaceManager=new RuimPhoneBookInterfaceManager(this);
  mRuimSmsInterfaceManager=new RuimSmsInterfaceManager(this);
  mSubInfo=new PhoneSubInfo(this);
  mEriManager=new EriManager(this,context,EriManager.ERI_FROM_XML);
  mCM.registerForAvailable(h,EVENT_RADIO_AVAILABLE,null);
  mRuimRecords.registerForRecordsLoaded(h,EVENT_RUIM_RECORDS_LOADED,null);
  mCM.registerForOffOrNotAvailable(h,EVENT_RADIO_OFF_OR_NOT_AVAILABLE,null);
  mCM.registerForOn(h,EVENT_RADIO_ON,null);
  mCM.setOnSuppServiceNotification(h,EVENT_SSN,null);
  mCM.setOnCallRing(h,EVENT_CALL_RING,null);
  mSST.registerForNetworkAttach(h,EVENT_REGISTERED_TO_NETWORK,null);
  mCM.registerForNVReady(h,EVENT_NV_READY,null);
  mCM.setEmergencyCallbackMode(h,EVENT_EMERGENCY_CALLBACK_MODE_ENTER,null);
  SystemProperties.set(TelephonyProperties.CURRENT_ACTIVE_PHONE,new Integer(RILConstants.CDMA_PHONE).toString());
  String inEcm=SystemProperties.get(TelephonyProperties.PROPERTY_INECM_MODE,"false");
  mIsPhoneInECMState=inEcm.equals("true");
  mCarrierOtaSpNumSchema=SystemProperties.get(TelephonyProperties.PROPERTY_OTASP_NUM_SCHEMA,"");
  notifier.notifyMessageWaitingChanged(this);
}
