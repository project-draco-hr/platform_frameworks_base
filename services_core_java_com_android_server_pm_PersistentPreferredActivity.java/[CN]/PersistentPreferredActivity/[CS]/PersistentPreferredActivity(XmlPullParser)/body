{
  String shortComponent=parser.getAttributeValue(null,ATTR_NAME);
  mComponent=ComponentName.unflattenFromString(shortComponent);
  if (mComponent == null) {
    PackageManagerService.reportSettingsProblem(Log.WARN,"Error in package manager settings: " + "Bad activity name " + shortComponent + " at "+ parser.getPositionDescription());
  }
  int outerDepth=parser.getDepth();
  String tagName=parser.getName();
  int type;
  while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && (type != XmlPullParser.END_TAG || parser.getDepth() > outerDepth)) {
    tagName=parser.getName();
    if (type == XmlPullParser.END_TAG || type == XmlPullParser.TEXT) {
      continue;
    }
 else     if (type == XmlPullParser.START_TAG) {
      if (tagName.equals(ATTR_FILTER)) {
        break;
      }
 else {
        PackageManagerService.reportSettingsProblem(Log.WARN,"Unknown element: " + tagName + " at "+ parser.getPositionDescription());
        XmlUtils.skipCurrentTag(parser);
      }
    }
  }
  if (tagName.equals(ATTR_FILTER)) {
    readFromXml(parser);
  }
 else {
    PackageManagerService.reportSettingsProblem(Log.WARN,"Missing element filter at " + parser.getPositionDescription());
    XmlUtils.skipCurrentTag(parser);
  }
}
