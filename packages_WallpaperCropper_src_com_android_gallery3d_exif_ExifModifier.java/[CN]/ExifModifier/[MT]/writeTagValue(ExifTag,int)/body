{
  if (DEBUG) {
    Log.v(TAG,"modifying tag to: \n" + tag.toString());
    Log.v(TAG,"at offset: " + offset);
  }
  mByteBuffer.position(offset + mOffsetBase);
switch (tag.getDataType()) {
case ExifTag.TYPE_ASCII:
    byte buf[]=tag.getStringByte();
  if (buf.length == tag.getComponentCount()) {
    buf[buf.length - 1]=0;
    mByteBuffer.put(buf);
  }
 else {
    mByteBuffer.put(buf);
    mByteBuffer.put((byte)0);
  }
break;
case ExifTag.TYPE_LONG:
case ExifTag.TYPE_UNSIGNED_LONG:
for (int i=0, n=tag.getComponentCount(); i < n; i++) {
mByteBuffer.putInt((int)tag.getValueAt(i));
}
break;
case ExifTag.TYPE_RATIONAL:
case ExifTag.TYPE_UNSIGNED_RATIONAL:
for (int i=0, n=tag.getComponentCount(); i < n; i++) {
Rational v=tag.getRational(i);
mByteBuffer.putInt((int)v.getNumerator());
mByteBuffer.putInt((int)v.getDenominator());
}
break;
case ExifTag.TYPE_UNDEFINED:
case ExifTag.TYPE_UNSIGNED_BYTE:
buf=new byte[tag.getComponentCount()];
tag.getBytes(buf);
mByteBuffer.put(buf);
break;
case ExifTag.TYPE_UNSIGNED_SHORT:
for (int i=0, n=tag.getComponentCount(); i < n; i++) {
mByteBuffer.putShort((short)tag.getValueAt(i));
}
break;
}
}
