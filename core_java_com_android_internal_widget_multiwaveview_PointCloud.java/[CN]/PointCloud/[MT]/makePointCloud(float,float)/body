{
  if (innerRadius == 0) {
    Log.w(TAG,"Must specify an inner radius");
    return;
  }
  mOuterRadius=outerRadius;
  mPointCloud.clear();
  final float pointAreaRadius=(outerRadius - innerRadius);
  final float ds=(2.0f * PI * innerRadius / INNER_POINTS);
  final int bands=(int)Math.round(pointAreaRadius / ds);
  final float dr=pointAreaRadius / bands;
  float r=innerRadius;
  for (int b=0; b <= bands; b++, r+=dr) {
    float circumference=2.0f * PI * r;
    final int pointsInBand=(int)(circumference / ds);
    float eta=PI / 2.0f;
    float dEta=2.0f * PI / pointsInBand;
    for (int i=0; i < pointsInBand; i++) {
      float x=r * FloatMath.cos(eta);
      float y=r * FloatMath.sin(eta);
      eta+=dEta;
      mPointCloud.add(new Point(x,y,r));
    }
  }
}
