{
  pw.println(TAG + ":" + mDescription);
  final long unfinished=mCountDownLatch.getCount();
  if (unfinished > 0) {
    pw.println("WARNING: countdown wait incomplete: " + unfinished + " unfinished measurements");
  }
  pw.increaseIndent();
  for (  Map.Entry<InetAddress,Measurement> entry : mIcmpChecks.entrySet()) {
    if (entry.getKey() instanceof Inet4Address) {
      pw.println(entry.getValue().toString());
    }
  }
  for (  Map.Entry<InetAddress,Measurement> entry : mIcmpChecks.entrySet()) {
    if (entry.getKey() instanceof Inet6Address) {
      pw.println(entry.getValue().toString());
    }
  }
  for (  Map.Entry<Pair<InetAddress,InetAddress>,Measurement> entry : mExplicitSourceIcmpChecks.entrySet()) {
    pw.println(entry.getValue().toString());
  }
  for (  Map.Entry<InetAddress,Measurement> entry : mDnsUdpChecks.entrySet()) {
    if (entry.getKey() instanceof Inet4Address) {
      pw.println(entry.getValue().toString());
    }
  }
  for (  Map.Entry<InetAddress,Measurement> entry : mDnsUdpChecks.entrySet()) {
    if (entry.getKey() instanceof Inet6Address) {
      pw.println(entry.getValue().toString());
    }
  }
  pw.decreaseIndent();
}
