{
  if (mUpdateMonitor.isGoingToSleep()) {
    mPendingAuthenticatedUserId=userId;
    return;
  }
  boolean wasDeviceInteractive=mUpdateMonitor.isDeviceInteractive();
  mMode=calculateMode();
  if (!wasDeviceInteractive) {
    if (DEBUG_FP_WAKELOCK) {
      Log.i(TAG,"fp wakelock: Authenticated, waking up...");
    }
    mPowerManager.wakeUp(SystemClock.uptimeMillis(),"android.policy:FINGERPRINT");
  }
  releaseFingerprintWakeLock();
switch (mMode) {
case MODE_DISMISS_BOUNCER:
    mStatusBarKeyguardViewManager.notifyKeyguardAuthenticated(false);
  break;
case MODE_UNLOCK:
case MODE_SHOW_BOUNCER:
if (!wasDeviceInteractive) {
  mStatusBarKeyguardViewManager.notifyDeviceWakeUpRequested();
}
mStatusBarKeyguardViewManager.animateCollapsePanels(FINGERPRINT_COLLAPSE_SPEEDUP_FACTOR);
break;
case MODE_WAKE_AND_UNLOCK_PULSING:
mPhoneStatusBar.updateMediaMetaData(false,true);
case MODE_WAKE_AND_UNLOCK:
mStatusBarWindowManager.setStatusBarFocusable(false);
mDozeScrimController.abortPulsing();
mKeyguardViewMediator.onWakeAndUnlocking();
mScrimController.setWakeAndUnlocking();
if (mPhoneStatusBar.getNavigationBarView() != null) {
mPhoneStatusBar.getNavigationBarView().setWakeAndUnlocking(true);
}
break;
case MODE_ONLY_WAKE:
case MODE_NONE:
break;
}
if (mMode != MODE_WAKE_AND_UNLOCK_PULSING) {
mStatusBarWindowManager.setForceDozeBrightness(false);
}
mPhoneStatusBar.notifyFpAuthModeChanged();
}
