{
  if (hasToken) {
    return token;
  }
switch (peekStack()) {
case EMPTY_DOCUMENT:
    replaceTop(JsonScope.NONEMPTY_DOCUMENT);
  JsonToken firstToken=nextValue();
if (token != JsonToken.BEGIN_ARRAY && token != JsonToken.BEGIN_OBJECT) {
  throw new IOException("Expected JSON document to start with '[' or '{' but was " + token);
}
return firstToken;
case EMPTY_ARRAY:
return nextInArray(true);
case NONEMPTY_ARRAY:
return nextInArray(false);
case EMPTY_OBJECT:
return nextInObject(true);
case DANGLING_NAME:
return objectValue();
case NONEMPTY_OBJECT:
return nextInObject(false);
case NONEMPTY_DOCUMENT:
hasToken=true;
return token=JsonToken.END_DOCUMENT;
case CLOSED:
throw new IllegalStateException("JsonReader is closed");
default :
throw new AssertionError();
}
}
