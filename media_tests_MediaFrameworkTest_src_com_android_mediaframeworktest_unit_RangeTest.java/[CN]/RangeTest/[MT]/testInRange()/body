{
  Range<Integer> hundredOneTwo=Range.create(100,200);
  assertInRange(hundredOneTwo,100);
  assertInRange(hundredOneTwo,200);
  assertInRange(hundredOneTwo,150);
  assertOutOfRange(hundredOneTwo,99);
  assertOutOfRange(hundredOneTwo,201);
  assertOutOfRange(hundredOneTwo,100000);
  Range<Float> infinities=Range.create(Float.NEGATIVE_INFINITY,Float.POSITIVE_INFINITY);
  assertInRange(infinities,Float.NEGATIVE_INFINITY);
  assertInRange(infinities,Float.POSITIVE_INFINITY);
  assertInRange(infinities,0.0f);
  assertOutOfRange(infinities,Float.NaN);
  Range<Rational> negativeOneTenthPositiveOneTenth=new Range<Rational>(new Rational(-1,10),new Rational(1,10));
  assertInRange(negativeOneTenthPositiveOneTenth,new Rational(-1,10));
  assertInRange(negativeOneTenthPositiveOneTenth,new Rational(1,10));
  assertInRange(negativeOneTenthPositiveOneTenth,Rational.ZERO);
  assertOutOfRange(negativeOneTenthPositiveOneTenth,new Rational(-100,1));
  assertOutOfRange(negativeOneTenthPositiveOneTenth,new Rational(100,1));
}
