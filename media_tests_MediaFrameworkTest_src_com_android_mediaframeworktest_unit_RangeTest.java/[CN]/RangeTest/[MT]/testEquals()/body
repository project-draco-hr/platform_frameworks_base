{
  Range<Float> oneHalf=Range.create(1.0f,2.0f);
  Range<Float> oneHalf2=new Range<Float>(1.0f,2.0f);
  assertEquals(oneHalf,oneHalf2);
  assertHashCodeEquals(oneHalf,oneHalf2);
  Range<Float> twoThirds=new Range<Float>(2.0f,3.0f);
  Range<Float> twoThirds2=Range.create(2.0f,3.0f);
  assertEquals(twoThirds,twoThirds2);
  assertHashCodeEquals(twoThirds,twoThirds2);
  Range<Rational> negativeOneTenthPositiveOneTenth=new Range<Rational>(new Rational(-1,10),new Rational(1,10));
  Range<Rational> negativeOneTenthPositiveOneTenth2=Range.create(new Rational(-1,10),new Rational(1,10));
  assertEquals(negativeOneTenthPositiveOneTenth,negativeOneTenthPositiveOneTenth2);
  assertHashCodeEquals(negativeOneTenthPositiveOneTenth,negativeOneTenthPositiveOneTenth2);
}
