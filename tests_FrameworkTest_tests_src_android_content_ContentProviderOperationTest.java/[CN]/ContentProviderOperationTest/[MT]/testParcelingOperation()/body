{
  Parcel parcel=Parcel.obtain();
  ContentProviderOperation op1;
  ContentProviderOperation op2;
  HashMap<Integer,Integer> selArgsBackRef=new HashMap<Integer,Integer>();
  selArgsBackRef.put(1,2);
  selArgsBackRef.put(3,4);
  ContentValues values=new ContentValues();
  values.put("v1","val1");
  values.put("v2","43");
  ContentValues valuesBackRef=new ContentValues();
  values.put("v3","val3");
  values.put("v4","44");
  try {
    ContentProviderOperation.Builder builder=ContentProviderOperation.newInsert(Uri.parse("content://goo/bar"));
    builderSetEntity(builder,new TestEntity("blah"));
    builderSetExpectedCount(builder,42);
    builderSetSelection(builder,"selection");
    builderSetSelectionArgs(builder,new String[]{"a","b"});
    builderSetSelectionArgsBackReferences(builder,selArgsBackRef);
    builderSetValues(builder,values);
    builderSetValuesBackReferences(builder,valuesBackRef);
    op1=newOperationFromBuilder(builder);
    op1.writeToParcel(parcel,0);
    parcel.setDataPosition(0);
    op2=ContentProviderOperation.CREATOR.createFromParcel(parcel);
    assertEquals(1,operationGetType(op2));
    assertEquals("content://goo/bar",operationGetUri(op2).toString());
    assertEquals("blah",((TestEntity)operationGetEntity(op2)).mValue);
    assertEquals(Integer.valueOf(42),operationGetExpectedCount(op2));
    assertEquals("selection",operationGetSelection(op2));
    assertEquals(2,operationGetSelectionArgs(op2).length);
    assertEquals("a",operationGetSelectionArgs(op2)[0]);
    assertEquals("b",operationGetSelectionArgs(op2)[1]);
    assertEquals(values,operationGetValues(op2));
    assertEquals(valuesBackRef,operationGetValuesBackReferences(op2));
    assertEquals(2,operationGetSelectionArgsBackReferences(op2).size());
    assertEquals(Integer.valueOf(2),operationGetSelectionArgsBackReferences(op2).get(1));
    assertEquals(Integer.valueOf(4),operationGetSelectionArgsBackReferences(op2).get(3));
  }
  finally {
    parcel.recycle();
  }
  try {
    ContentProviderOperation.Builder builder=ContentProviderOperation.newUpdate(Uri.parse("content://goo/bar"));
    builderSetSelectionArgsBackReferences(builder,selArgsBackRef);
    op1=newOperationFromBuilder(builder);
    op1.writeToParcel(parcel,0);
    parcel.setDataPosition(0);
    op2=ContentProviderOperation.CREATOR.createFromParcel(parcel);
    assertEquals(2,operationGetType(op2));
    assertEquals("content://goo/bar",operationGetUri(op2).toString());
    assertNull(operationGetEntity(op2));
    assertNull(operationGetExpectedCount(op2));
    assertNull(operationGetSelection(op2));
    assertNull(operationGetSelectionArgs(op2));
    assertNull(operationGetValues(op2));
    assertNull(operationGetValuesBackReferences(op2));
    assertEquals(2,operationGetSelectionArgsBackReferences(op2).size());
    assertEquals(Integer.valueOf(2),operationGetSelectionArgsBackReferences(op2).get(1));
    assertEquals(Integer.valueOf(4),operationGetSelectionArgsBackReferences(op2).get(3));
  }
  finally {
    parcel.recycle();
  }
  try {
    ContentProviderOperation.Builder builder=ContentProviderOperation.newDelete(Uri.parse("content://goo/bar"));
    op1=newOperationFromBuilder(builder);
    op1.writeToParcel(parcel,0);
    parcel.setDataPosition(0);
    op2=ContentProviderOperation.CREATOR.createFromParcel(parcel);
    assertEquals(3,operationGetType(op2));
    assertEquals("content://goo/bar",operationGetUri(op2).toString());
    assertNull(operationGetEntity(op2));
    assertNull(operationGetExpectedCount(op2));
    assertNull(operationGetSelection(op2));
    assertNull(operationGetSelectionArgs(op2));
    assertNull(operationGetValues(op2));
    assertNull(operationGetValuesBackReferences(op2));
    assertNull(operationGetSelectionArgsBackReferences(op2));
  }
  finally {
    parcel.recycle();
  }
}
