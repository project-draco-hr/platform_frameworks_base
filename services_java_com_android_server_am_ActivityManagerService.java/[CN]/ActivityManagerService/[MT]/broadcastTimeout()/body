{
synchronized (this) {
    if (mOrderedBroadcasts.size() == 0) {
      return;
    }
    long now=SystemClock.uptimeMillis();
    BroadcastRecord r=mOrderedBroadcasts.get(0);
    if ((r.startTime + BROADCAST_TIMEOUT) > now) {
      if (DEBUG_BROADCAST)       Log.v(TAG,"Premature timeout @ " + now + ": resetting BROADCAST_TIMEOUT_MSG for "+ (r.startTime + BROADCAST_TIMEOUT));
      Message msg=mHandler.obtainMessage(BROADCAST_TIMEOUT_MSG);
      mHandler.sendMessageAtTime(msg,r.startTime + BROADCAST_TIMEOUT);
      return;
    }
    Log.w(TAG,"Timeout of broadcast " + r + " - receiver="+ r.receiver);
    r.startTime=now;
    r.anrCount++;
    if (r.nextReceiver <= 0) {
      Log.w(TAG,"Timeout on receiver with nextReceiver <= 0");
      return;
    }
    ProcessRecord app=null;
    Object curReceiver=r.receivers.get(r.nextReceiver - 1);
    Log.w(TAG,"Receiver during timeout: " + curReceiver);
    logBroadcastReceiverDiscard(r);
    if (curReceiver instanceof BroadcastFilter) {
      BroadcastFilter bf=(BroadcastFilter)curReceiver;
      if (bf.receiverList.pid != 0 && bf.receiverList.pid != MY_PID) {
synchronized (this.mPidsSelfLocked) {
          app=this.mPidsSelfLocked.get(bf.receiverList.pid);
        }
      }
    }
 else {
      app=r.curApp;
    }
    if (app != null) {
      appNotRespondingLocked(app,null,"Broadcast of " + r.intent.toString());
    }
    if (mPendingBroadcast == r) {
      mPendingBroadcast=null;
    }
    finishReceiverLocked(r.receiver,r.resultCode,r.resultData,r.resultExtras,r.resultAbort,true);
    scheduleBroadcastsLocked();
  }
}
