{
synchronized (this) {
    if (checkCallingPermission(android.Manifest.permission.DUMP) != PackageManager.PERMISSION_GRANTED) {
      pw.println("Permission Denial: can't dump ActivityManager from from pid=" + Binder.getCallingPid() + ", uid="+ Binder.getCallingUid()+ " without permission "+ android.Manifest.permission.DUMP);
      return;
    }
    pw.println("Services in Current Activity Manager State:");
    boolean needSep=false;
    if (mServices.size() > 0) {
      pw.println("  Active services:");
      Iterator<ServiceRecord> it=mServices.values().iterator();
      while (it.hasNext()) {
        ServiceRecord r=it.next();
        pw.println("  Service " + r.shortName);
        r.dump(pw,"    ");
      }
      needSep=true;
    }
    if (mPendingServices.size() > 0) {
      if (needSep)       pw.println(" ");
      pw.println("  Pending services:");
      for (int i=0; i < mPendingServices.size(); i++) {
        ServiceRecord r=mPendingServices.get(i);
        pw.println("  Pending Service " + r.shortName);
        r.dump(pw,"    ");
      }
      needSep=true;
    }
    if (mRestartingServices.size() > 0) {
      if (needSep)       pw.println(" ");
      pw.println("  Restarting services:");
      for (int i=0; i < mRestartingServices.size(); i++) {
        ServiceRecord r=mRestartingServices.get(i);
        pw.println("  Restarting Service " + r.shortName);
        r.dump(pw,"    ");
      }
      needSep=true;
    }
    if (mStoppingServices.size() > 0) {
      if (needSep)       pw.println(" ");
      pw.println("  Stopping services:");
      for (int i=0; i < mStoppingServices.size(); i++) {
        ServiceRecord r=mStoppingServices.get(i);
        pw.println("  Stopping Service " + r.shortName);
        r.dump(pw,"    ");
      }
      needSep=true;
    }
    if (mServiceConnections.size() > 0) {
      if (needSep)       pw.println(" ");
      pw.println("  Connection bindings to services:");
      Iterator<ConnectionRecord> it=mServiceConnections.values().iterator();
      while (it.hasNext()) {
        ConnectionRecord r=it.next();
        pw.println("  " + r.binding.service.shortName + " -> "+ r.conn.asBinder());
        r.dump(pw,"    ");
      }
    }
  }
}
