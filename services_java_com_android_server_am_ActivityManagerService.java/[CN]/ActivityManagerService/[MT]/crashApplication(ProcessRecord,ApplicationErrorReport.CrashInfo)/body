{
  long timeMillis=System.currentTimeMillis();
  String shortMsg=crashInfo.exceptionClassName;
  String longMsg=crashInfo.exceptionMessage;
  String stackTrace=crashInfo.stackTrace;
  if (shortMsg != null && longMsg != null) {
    longMsg=shortMsg + ": " + longMsg;
  }
 else   if (shortMsg != null) {
    longMsg=shortMsg;
  }
  AppErrorResult result=new AppErrorResult();
synchronized (this) {
    if (mController != null) {
      try {
        String name=r != null ? r.processName : null;
        int pid=r != null ? r.pid : Binder.getCallingPid();
        if (!mController.appCrashed(name,pid,shortMsg,longMsg,timeMillis,crashInfo.stackTrace)) {
          Slog.w(TAG,"Force-killing crashed app " + name + " at watcher's request");
          Process.killProcess(pid);
          return;
        }
      }
 catch (      RemoteException e) {
        mController=null;
      }
    }
    final long origId=Binder.clearCallingIdentity();
    if (r != null && r.instrumentationClass != null) {
      Slog.w(TAG,"Error in app " + r.processName + " running instrumentation "+ r.instrumentationClass+ ":");
      if (shortMsg != null)       Slog.w(TAG,"  " + shortMsg);
      if (longMsg != null)       Slog.w(TAG,"  " + longMsg);
      Bundle info=new Bundle();
      info.putString("shortMsg",shortMsg);
      info.putString("longMsg",longMsg);
      finishInstrumentationLocked(r,Activity.RESULT_CANCELED,info);
      Binder.restoreCallingIdentity(origId);
      return;
    }
    if (r == null || !makeAppCrashingLocked(r,shortMsg,longMsg,stackTrace)) {
      Binder.restoreCallingIdentity(origId);
      return;
    }
    Message msg=Message.obtain();
    msg.what=SHOW_ERROR_MSG;
    HashMap data=new HashMap();
    data.put("result",result);
    data.put("app",r);
    msg.obj=data;
    mHandler.sendMessage(msg);
    Binder.restoreCallingIdentity(origId);
  }
  int res=result.get();
  Intent appErrorIntent=null;
synchronized (this) {
    if (r != null) {
      mProcessCrashTimes.put(r.info.processName,r.info.uid,SystemClock.uptimeMillis());
    }
    if (res == AppErrorDialog.FORCE_QUIT_AND_REPORT) {
      appErrorIntent=createAppErrorIntentLocked(r,timeMillis,crashInfo);
    }
  }
  if (appErrorIntent != null) {
    try {
      mContext.startActivity(appErrorIntent);
    }
 catch (    ActivityNotFoundException e) {
      Slog.w(TAG,"bug report receiver dissappeared",e);
    }
  }
}
