{
  ArrayList<ProcessRecord> procs=collectProcesses(pw,args);
  if (procs == null) {
    return;
  }
  final boolean isCheckinRequest=scanArgs(args,"--checkin");
  long uptime=SystemClock.uptimeMillis();
  long realtime=SystemClock.elapsedRealtime();
  if (isCheckinRequest) {
    pw.println(uptime + "," + realtime);
    pw.flush();
  }
 else {
    pw.println("Applications Memory Usage (kB):");
    pw.println("Uptime: " + uptime + " Realtime: "+ realtime);
  }
  ArrayList<MemItem> procMems=new ArrayList<MemItem>();
  long nativePss=0, dalvikPss=0, otherPss=0;
  long[] miscPss=new long[Debug.MemoryInfo.NUM_OTHER_STATS];
  for (int i=procs.size() - 1; i >= 0; i--) {
    ProcessRecord r=procs.get(i);
    if (r.thread != null) {
      if (!isCheckinRequest) {
        pw.println("\n** MEMINFO in pid " + r.pid + " ["+ r.processName+ "] **");
        pw.flush();
      }
      Debug.MemoryInfo mi=null;
      try {
        mi=r.thread.dumpMemInfo(fd,args);
      }
 catch (      RemoteException e) {
        if (!isCheckinRequest) {
          pw.println("Got RemoteException!");
          pw.flush();
        }
      }
      if (!isCheckinRequest && mi != null) {
        procMems.add(new MemItem(r.processName + " (pid " + r.pid+ ")",mi.getTotalPss()));
        nativePss+=mi.nativePss;
        dalvikPss+=mi.dalvikPss;
        otherPss+=mi.otherPss;
        for (int j=0; j < Debug.MemoryInfo.NUM_OTHER_STATS; j++) {
          long mem=mi.getOtherPss(j);
          miscPss[j]+=mem;
          otherPss-=mem;
        }
      }
    }
  }
  if (!isCheckinRequest && procs.size() > 1) {
    ArrayList<MemItem> catMems=new ArrayList<MemItem>();
    catMems.add(new MemItem("Native",nativePss));
    catMems.add(new MemItem("Dalvik",dalvikPss));
    catMems.add(new MemItem("Unknown",otherPss));
    for (int j=0; j < Debug.MemoryInfo.NUM_OTHER_STATS; j++) {
      catMems.add(new MemItem(Debug.MemoryInfo.getOtherLabel(j),miscPss[j]));
    }
    pw.println();
    pw.println("Total PSS by process:");
    dumpMemItems(pw,"  ",procMems);
    pw.println();
    pw.println("Total PSS by category:");
    dumpMemItems(pw,"  ",catMems);
  }
}
