{
  ArrayList<ProcessRecord> procs=new ArrayList<ProcessRecord>();
  final String procNamePrefix=packageName != null ? (packageName + ":") : null;
  for (  SparseArray<ProcessRecord> apps : mProcessNames.getMap().values()) {
    final int NA=apps.size();
    for (int ia=0; ia < NA; ia++) {
      ProcessRecord app=apps.valueAt(ia);
      if (app.persistent && !evenPersistent) {
        continue;
      }
      if (app.removed) {
        if (doit) {
          procs.add(app);
        }
        continue;
      }
      if (app.setAdj < minOomAdj) {
        continue;
      }
      if (packageName == null) {
        if (app.userId != userId) {
          continue;
        }
      }
 else {
        if (UserHandle.getAppId(app.uid) != appId) {
          continue;
        }
        if (userId != UserHandle.USER_ALL && app.userId != userId) {
          continue;
        }
        if (!app.pkgList.contains(packageName)) {
          continue;
        }
      }
      if (!doit) {
        return true;
      }
      app.removed=true;
      procs.add(app);
    }
  }
  int N=procs.size();
  for (int i=0; i < N; i++) {
    removeProcessLocked(procs.get(i),callerWillRestart,allowRestart,reason);
  }
  return N > 0;
}
