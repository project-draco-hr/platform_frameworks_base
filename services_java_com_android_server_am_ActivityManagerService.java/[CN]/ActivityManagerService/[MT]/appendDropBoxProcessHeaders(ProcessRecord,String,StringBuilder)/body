{
  if (process == null) {
    sb.append("Process: ").append(processName).append("\n");
    return;
  }
synchronized (this) {
    sb.append("Process: ").append(processName).append("\n");
    int flags=process.info.flags;
    IPackageManager pm=AppGlobals.getPackageManager();
    sb.append("Flags: 0x").append(Integer.toString(flags,16)).append("\n");
    for (    String pkg : process.pkgList) {
      sb.append("Package: ").append(pkg);
      try {
        PackageInfo pi=pm.getPackageInfo(pkg,0,UserHandle.getCallingUserId());
        if (pi != null) {
          sb.append(" v").append(pi.versionCode);
          if (pi.versionName != null) {
            sb.append(" (").append(pi.versionName).append(")");
          }
        }
      }
 catch (      RemoteException e) {
        Slog.e(TAG,"Error getting package info: " + pkg,e);
      }
      sb.append("\n");
    }
  }
}
