{
synchronized (this) {
    if (!(token instanceof ServiceRecord)) {
      throw new IllegalArgumentException("Invalid service token");
    }
    ServiceRecord r=(ServiceRecord)token;
    boolean inStopping=mStoppingServices.contains(token);
    if (r != null) {
      if (DEBUG_SERVICE)       Log.v(TAG,"DONE EXECUTING SERVICE " + r.name + ": nesting="+ r.executeNesting+ ", inStopping="+ inStopping);
      if (r != token) {
        Log.w(TAG,"Done executing service " + r.name + " with incorrect token: given "+ token+ ", expected "+ r);
        return;
      }
      if (type == 1) {
        r.callStart=true;
switch (res) {
case Service.START_STICKY_COMPATIBILITY:
case Service.START_STICKY:
{
            r.findDeliveredStart(startId,true);
            r.stopIfKilled=false;
            break;
          }
case Service.START_NOT_STICKY:
{
          r.findDeliveredStart(startId,true);
          if (r.lastStartId == startId) {
            r.stopIfKilled=true;
          }
          break;
        }
case Service.START_REDELIVER_INTENT:
{
        ServiceRecord.StartItem si=r.findDeliveredStart(startId,false);
        if (si != null) {
          si.deliveryCount=0;
          si.doneExecutingCount++;
          r.stopIfKilled=true;
        }
        break;
      }
default :
    throw new IllegalArgumentException("Unknown service start result: " + res);
}
if (res == Service.START_STICKY_COMPATIBILITY) {
  r.callStart=false;
}
}
final long origId=Binder.clearCallingIdentity();
serviceDoneExecutingLocked(r,inStopping);
Binder.restoreCallingIdentity(origId);
}
 else {
Log.w(TAG,"Done executing unknown service " + r.name + " with token "+ token);
}
}
}
