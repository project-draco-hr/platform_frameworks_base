{
  ArrayList<RunningTaskInfo> list=new ArrayList<RunningTaskInfo>();
  PendingThumbnailsRecord pending=new PendingThumbnailsRecord(receiver);
  ActivityRecord topRecord=null;
synchronized (this) {
    if (localLOGV)     Slog.v(TAG,"getTasks: max=" + maxNum + ", flags="+ flags+ ", receiver="+ receiver);
    if (checkCallingPermission(android.Manifest.permission.GET_TASKS) != PackageManager.PERMISSION_GRANTED) {
      if (receiver != null) {
        try {
          receiver.finished();
        }
 catch (        RemoteException ex) {
        }
      }
      String msg="Permission Denial: getTasks() from pid=" + Binder.getCallingPid() + ", uid="+ Binder.getCallingUid()+ " requires "+ android.Manifest.permission.GET_TASKS;
      Slog.w(TAG,msg);
      throw new SecurityException(msg);
    }
    topRecord=mMainStack.getTasksLocked(maxNum,receiver,pending,list);
    if (!pending.pendingRecords.isEmpty()) {
      mPendingThumbnails.add(pending);
    }
  }
  if (localLOGV)   Slog.v(TAG,"We have pending thumbnails: " + pending);
  if (topRecord != null) {
    if (localLOGV)     Slog.v(TAG,"Requesting top thumbnail");
    try {
      IApplicationThread topThumbnail=topRecord.app.thread;
      topThumbnail.requestThumbnail(topRecord.appToken);
    }
 catch (    Exception e) {
      Slog.w(TAG,"Exception thrown when requesting thumbnail",e);
      sendPendingThumbnail(null,topRecord.appToken,null,null,true);
    }
  }
  if (pending == null && receiver != null) {
    try {
      receiver.finished();
    }
 catch (    RemoteException ex) {
    }
  }
  return list;
}
