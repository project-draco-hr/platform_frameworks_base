{
  ArrayList list=new ArrayList();
  PendingThumbnailsRecord pending=null;
  IApplicationThread topThumbnail=null;
  ActivityRecord topRecord=null;
synchronized (this) {
    if (localLOGV)     Slog.v(TAG,"getTasks: max=" + maxNum + ", flags="+ flags+ ", receiver="+ receiver);
    if (checkCallingPermission(android.Manifest.permission.GET_TASKS) != PackageManager.PERMISSION_GRANTED) {
      if (receiver != null) {
        try {
          receiver.finished();
        }
 catch (        RemoteException ex) {
        }
      }
      String msg="Permission Denial: getTasks() from pid=" + Binder.getCallingPid() + ", uid="+ Binder.getCallingUid()+ " requires "+ android.Manifest.permission.GET_TASKS;
      Slog.w(TAG,msg);
      throw new SecurityException(msg);
    }
    int pos=mMainStack.mHistory.size() - 1;
    ActivityRecord next=pos >= 0 ? (ActivityRecord)mMainStack.mHistory.get(pos) : null;
    ActivityRecord top=null;
    TaskRecord curTask=null;
    int numActivities=0;
    int numRunning=0;
    while (pos >= 0 && maxNum > 0) {
      final ActivityRecord r=next;
      pos--;
      next=pos >= 0 ? (ActivityRecord)mMainStack.mHistory.get(pos) : null;
      if (top == null || (top.state == ActivityState.INITIALIZING && top.task == r.task)) {
        top=r;
        curTask=r.task;
        numActivities=numRunning=0;
      }
      numActivities++;
      if (r.app != null && r.app.thread != null) {
        numRunning++;
      }
      if (localLOGV)       Slog.v(TAG,r.intent.getComponent().flattenToShortString() + ": task=" + r.task);
      if (next == null || next.task != curTask) {
        ActivityManager.RunningTaskInfo ci=new ActivityManager.RunningTaskInfo();
        ci.id=curTask.taskId;
        ci.baseActivity=r.intent.getComponent();
        ci.topActivity=top.intent.getComponent();
        if (top.thumbHolder != null) {
          ci.description=top.thumbHolder.lastDescription;
        }
        ci.numActivities=numActivities;
        ci.numRunning=numRunning;
        if (ci.thumbnail == null && receiver != null) {
          if (localLOGV)           Slog.v(TAG,"State=" + top.state + "Idle="+ top.idle+ " app="+ top.app+ " thr="+ (top.app != null ? top.app.thread : null));
          if (top.state == ActivityState.RESUMED || top.state == ActivityState.PAUSING) {
            if (top.idle && top.app != null && top.app.thread != null) {
              topRecord=top;
              topThumbnail=top.app.thread;
            }
 else {
              top.thumbnailNeeded=true;
            }
          }
          if (pending == null) {
            pending=new PendingThumbnailsRecord(receiver);
          }
          pending.pendingRecords.add(top);
        }
        list.add(ci);
        maxNum--;
        top=null;
      }
    }
    if (pending != null) {
      mPendingThumbnails.add(pending);
    }
  }
  if (localLOGV)   Slog.v(TAG,"We have pending thumbnails: " + pending);
  if (topThumbnail != null) {
    if (localLOGV)     Slog.v(TAG,"Requesting top thumbnail");
    try {
      topThumbnail.requestThumbnail(topRecord.appToken);
    }
 catch (    Exception e) {
      Slog.w(TAG,"Exception thrown when requesting thumbnail",e);
      sendPendingThumbnail(null,topRecord.appToken,null,null,true);
    }
  }
  if (pending == null && receiver != null) {
    try {
      receiver.finished();
    }
 catch (    RemoteException ex) {
    }
  }
  return list;
}
