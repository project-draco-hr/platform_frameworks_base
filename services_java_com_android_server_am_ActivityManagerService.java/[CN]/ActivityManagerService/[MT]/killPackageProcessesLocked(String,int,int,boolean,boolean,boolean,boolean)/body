{
  ArrayList<ProcessRecord> procs=new ArrayList<ProcessRecord>();
  final String procNamePrefix=packageName + ":";
  for (  SparseArray<ProcessRecord> apps : mProcessNames.getMap().values()) {
    final int NA=apps.size();
    for (int ia=0; ia < NA; ia++) {
      ProcessRecord app=apps.valueAt(ia);
      if (app.persistent && !evenPersistent) {
        continue;
      }
      if (app.removed) {
        if (doit) {
          procs.add(app);
        }
      }
 else       if ((uid > 0 && uid != Process.SYSTEM_UID && app.info.uid == uid) || app.processName.equals(packageName) || app.processName.startsWith(procNamePrefix)) {
        if (app.setAdj >= minOomAdj) {
          if (!doit) {
            return true;
          }
          app.removed=true;
          procs.add(app);
        }
      }
    }
  }
  int N=procs.size();
  for (int i=0; i < N; i++) {
    removeProcessLocked(procs.get(i),callerWillRestart,allowRestart);
  }
  return N > 0;
}
