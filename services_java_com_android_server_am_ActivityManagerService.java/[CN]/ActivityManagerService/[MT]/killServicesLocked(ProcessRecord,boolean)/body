{
  if (false) {
    if (app.services.size() > 0) {
      Iterator it=app.services.iterator();
      while (it.hasNext()) {
        ServiceRecord r=(ServiceRecord)it.next();
        if (r.connections.size() > 0) {
          Iterator<ConnectionRecord> jt=r.connections.values().iterator();
          while (jt.hasNext()) {
            ConnectionRecord c=jt.next();
            if (c.binding.client != app) {
              try {
              }
 catch (              Exception e) {
                Log.w(TAG,"Exception thrown disconnected servce " + r.shortName + " from app "+ app.processName,e);
              }
            }
          }
        }
      }
    }
  }
  if (app.connections.size() > 0) {
    Iterator<ConnectionRecord> it=app.connections.iterator();
    while (it.hasNext()) {
      ConnectionRecord r=it.next();
      removeConnectionLocked(r,app,null);
    }
  }
  app.connections.clear();
  if (app.services.size() != 0) {
    Iterator it=app.services.iterator();
    while (it.hasNext()) {
      ServiceRecord sr=(ServiceRecord)it.next();
synchronized (sr.stats.getBatteryStats()) {
        sr.stats.stopLaunchedLocked();
      }
      sr.app=null;
      sr.executeNesting=0;
      mStoppingServices.remove(sr);
      if (sr.bindings.size() > 0) {
        Iterator<IntentBindRecord> bindings=sr.bindings.values().iterator();
        while (bindings.hasNext()) {
          IntentBindRecord b=bindings.next();
          if (DEBUG_SERVICE)           Log.v(TAG,"Killing binding " + b + ": shouldUnbind="+ b.hasBound);
          b.binder=null;
          b.requested=b.received=b.hasBound=false;
        }
      }
      if (sr.crashCount >= 2) {
        Log.w(TAG,"Service crashed " + sr.crashCount + " times, stopping: "+ sr);
        bringDownServiceLocked(sr,true);
      }
 else       if (!allowRestart) {
        bringDownServiceLocked(sr,true);
      }
 else {
        scheduleServiceRestartLocked(sr);
      }
    }
    if (!allowRestart) {
      app.services.clear();
    }
  }
  app.executingServices.clear();
}
