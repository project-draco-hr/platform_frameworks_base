{
  boolean needSep;
  ItemMatcher matcher=new ItemMatcher();
  matcher.build(args,opti);
  pw.println("ACTIVITY MANAGER CONTENT PROVIDERS (dumpsys activity providers)");
  needSep=mProviderMap.dumpProvidersLocked(pw,dumpAll,dumpPackage);
  if (mLaunchingProviders.size() > 0) {
    boolean printed=false;
    for (int i=mLaunchingProviders.size() - 1; i >= 0; i--) {
      ContentProviderRecord r=mLaunchingProviders.get(i);
      if (dumpPackage != null && !dumpPackage.equals(r.name.getPackageName())) {
        continue;
      }
      if (!printed) {
        if (needSep)         pw.println(" ");
        needSep=true;
        pw.println("  Launching content providers:");
        printed=true;
      }
      pw.print("  Launching #");
      pw.print(i);
      pw.print(": ");
      pw.println(r);
    }
  }
  if (mGrantedUriPermissions.size() > 0) {
    boolean printed=false;
    int dumpUid=-1;
    if (dumpPackage != null) {
      try {
        dumpUid=mContext.getPackageManager().getPackageUid(dumpPackage,0);
      }
 catch (      NameNotFoundException e) {
        dumpUid=-1;
      }
    }
    for (int i=0; i < mGrantedUriPermissions.size(); i++) {
      int uid=mGrantedUriPermissions.keyAt(i);
      if (dumpUid >= 0 && UserHandle.getAppId(uid) != dumpUid) {
        continue;
      }
      HashMap<Uri,UriPermission> perms=mGrantedUriPermissions.valueAt(i);
      if (!printed) {
        if (needSep)         pw.println();
        needSep=true;
        pw.println("  Granted Uri Permissions:");
        printed=true;
      }
      pw.print("  * UID ");
      pw.print(uid);
      pw.println(" holds:");
      for (      UriPermission perm : perms.values()) {
        pw.print("    ");
        pw.println(perm);
        if (dumpAll) {
          perm.dump(pw,"      ");
        }
      }
    }
  }
  return needSep;
}
