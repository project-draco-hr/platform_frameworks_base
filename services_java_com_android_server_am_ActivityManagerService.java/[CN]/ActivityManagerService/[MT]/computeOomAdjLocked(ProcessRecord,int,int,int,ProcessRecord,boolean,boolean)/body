{
  if (mAdjSeq == app.adjSeq) {
    if (!recursed && app.cached) {
      if (app.hasActivities) {
        app.curAdj=app.curRawAdj=app.nonStoppingAdj=cachedAdj;
      }
 else       if (app.hasClientActivities) {
        app.curAdj=app.curRawAdj=app.nonStoppingAdj=clientCachedAdj;
      }
 else {
        app.curAdj=app.curRawAdj=app.nonStoppingAdj=emptyAdj;
      }
    }
    return app.curRawAdj;
  }
  if (app.thread == null) {
    app.adjSeq=mAdjSeq;
    app.curSchedGroup=Process.THREAD_GROUP_BG_NONINTERACTIVE;
    return (app.curAdj=app.curRawAdj=ProcessList.CACHED_APP_MAX_ADJ);
  }
  app.adjTypeCode=ActivityManager.RunningAppProcessInfo.REASON_UNKNOWN;
  app.adjSource=null;
  app.adjTarget=null;
  app.empty=false;
  app.cached=false;
  app.hasClientActivities=false;
  final int activitiesSize=app.activities.size();
  if (app.maxAdj <= ProcessList.FOREGROUND_APP_ADJ) {
    app.adjType="fixed";
    app.adjSeq=mAdjSeq;
    app.curRawAdj=app.nonStoppingAdj=app.maxAdj;
    app.hasActivities=false;
    app.foregroundActivities=false;
    app.keeping=true;
    app.curSchedGroup=Process.THREAD_GROUP_DEFAULT;
    app.systemNoUi=true;
    if (app == TOP_APP) {
      app.systemNoUi=false;
      app.hasActivities=true;
    }
 else     if (activitiesSize > 0) {
      for (int j=0; j < activitiesSize; j++) {
        final ActivityRecord r=app.activities.get(j);
        if (r.visible) {
          app.systemNoUi=false;
        }
        if (r.app == app) {
          app.hasActivities=true;
        }
      }
    }
    return (app.curAdj=app.maxAdj);
  }
  app.keeping=false;
  app.systemNoUi=false;
  app.hasActivities=false;
  int adj;
  int schedGroup;
  boolean foregroundActivities=false;
  boolean interesting=false;
  BroadcastQueue queue;
  if (app == TOP_APP) {
    adj=ProcessList.FOREGROUND_APP_ADJ;
    schedGroup=Process.THREAD_GROUP_DEFAULT;
    app.adjType="top-activity";
    foregroundActivities=true;
    interesting=true;
    app.hasActivities=true;
  }
 else   if (app.instrumentationClass != null) {
    adj=ProcessList.FOREGROUND_APP_ADJ;
    schedGroup=Process.THREAD_GROUP_DEFAULT;
    app.adjType="instrumentation";
    interesting=true;
  }
 else   if ((queue=isReceivingBroadcast(app)) != null) {
    adj=ProcessList.FOREGROUND_APP_ADJ;
    schedGroup=(queue == mFgBroadcastQueue) ? Process.THREAD_GROUP_DEFAULT : Process.THREAD_GROUP_BG_NONINTERACTIVE;
    app.adjType="broadcast";
  }
 else   if (app.executingServices.size() > 0) {
    adj=ProcessList.FOREGROUND_APP_ADJ;
    schedGroup=Process.THREAD_GROUP_DEFAULT;
    app.adjType="exec-service";
  }
 else {
    adj=cachedAdj;
    schedGroup=Process.THREAD_GROUP_BG_NONINTERACTIVE;
    app.cached=true;
    app.adjType="cch-act";
  }
  boolean hasStoppingActivities=false;
  if (!foregroundActivities && activitiesSize > 0) {
    for (int j=0; j < activitiesSize; j++) {
      final ActivityRecord r=app.activities.get(j);
      if (r.visible) {
        if (adj > ProcessList.VISIBLE_APP_ADJ) {
          adj=ProcessList.VISIBLE_APP_ADJ;
          app.adjType="visible";
        }
        schedGroup=Process.THREAD_GROUP_DEFAULT;
        app.cached=false;
        app.hasActivities=true;
        foregroundActivities=true;
        break;
      }
 else       if (r.state == ActivityState.PAUSING || r.state == ActivityState.PAUSED) {
        if (adj > ProcessList.PERCEPTIBLE_APP_ADJ) {
          adj=ProcessList.PERCEPTIBLE_APP_ADJ;
          app.adjType="pausing";
        }
        app.cached=false;
        foregroundActivities=true;
      }
 else       if (r.state == ActivityState.STOPPING) {
        app.cached=false;
        foregroundActivities=true;
        hasStoppingActivities=true;
      }
      if (r.app == app) {
        app.hasActivities=true;
      }
    }
  }
  if (adj == cachedAdj && !app.hasActivities) {
    if (app.hasClientActivities) {
      adj=clientCachedAdj;
      app.adjType="cch-client-act";
    }
 else {
      adj=emptyAdj;
      app.empty=true;
      app.adjType="cch-empty";
    }
  }
  if (adj > ProcessList.PERCEPTIBLE_APP_ADJ) {
    if (app.foregroundServices) {
      adj=ProcessList.PERCEPTIBLE_APP_ADJ;
      app.cached=false;
      app.adjType="fg-service";
      schedGroup=Process.THREAD_GROUP_DEFAULT;
    }
 else     if (app.forcingToForeground != null) {
      adj=ProcessList.PERCEPTIBLE_APP_ADJ;
      app.cached=false;
      app.adjType="force-fg";
      app.adjSource=app.forcingToForeground;
      schedGroup=Process.THREAD_GROUP_DEFAULT;
    }
  }
  if (app.foregroundServices) {
    interesting=true;
  }
  if (adj > ProcessList.HEAVY_WEIGHT_APP_ADJ && app == mHeavyWeightProcess) {
    adj=ProcessList.HEAVY_WEIGHT_APP_ADJ;
    schedGroup=Process.THREAD_GROUP_BG_NONINTERACTIVE;
    app.cached=false;
    app.adjType="heavy";
  }
  if (adj > ProcessList.HOME_APP_ADJ && app == mHomeProcess) {
    adj=ProcessList.HOME_APP_ADJ;
    schedGroup=Process.THREAD_GROUP_BG_NONINTERACTIVE;
    app.cached=false;
    app.adjType="home";
  }
  if (adj > ProcessList.PREVIOUS_APP_ADJ && app == mPreviousProcess && app.activities.size() > 0) {
    adj=ProcessList.PREVIOUS_APP_ADJ;
    schedGroup=Process.THREAD_GROUP_BG_NONINTERACTIVE;
    app.cached=false;
    app.adjType="previous";
  }
  if (false)   Slog.i(TAG,"OOM " + app + ": initial adj="+ adj+ " reason="+ app.adjType);
  app.adjSeq=mAdjSeq;
  app.curRawAdj=app.nonStoppingAdj=adj;
  if (mBackupTarget != null && app == mBackupTarget.app) {
    if (adj > ProcessList.BACKUP_APP_ADJ) {
      if (DEBUG_BACKUP)       Slog.v(TAG,"oom BACKUP_APP_ADJ for " + app);
      adj=ProcessList.BACKUP_APP_ADJ;
      app.adjType="backup";
      app.cached=false;
    }
  }
  if (app.services.size() != 0 && (adj > ProcessList.FOREGROUND_APP_ADJ || schedGroup == Process.THREAD_GROUP_BG_NONINTERACTIVE)) {
    final long now=SystemClock.uptimeMillis();
    Iterator<ServiceRecord> jt=app.services.iterator();
    while (jt.hasNext() && adj > ProcessList.FOREGROUND_APP_ADJ) {
      ServiceRecord s=jt.next();
      if (s.startRequested) {
        if (app.hasShownUi && app != mHomeProcess) {
          if (adj > ProcessList.SERVICE_ADJ) {
            app.adjType="cch-started-ui-services";
          }
        }
 else {
          if (now < (s.lastActivity + ActiveServices.MAX_SERVICE_INACTIVITY)) {
            if (adj > ProcessList.SERVICE_ADJ) {
              adj=ProcessList.SERVICE_ADJ;
              app.adjType="started-services";
              app.cached=false;
            }
          }
          if (adj > ProcessList.SERVICE_ADJ) {
            app.adjType="cch-started-services";
          }
        }
        app.keeping=true;
      }
      for (int conni=s.connections.size() - 1; conni >= 0 && (adj > ProcessList.FOREGROUND_APP_ADJ || schedGroup == Process.THREAD_GROUP_BG_NONINTERACTIVE); conni--) {
        ArrayList<ConnectionRecord> clist=s.connections.valueAt(conni);
        for (int i=0; i < clist.size() && (adj > ProcessList.FOREGROUND_APP_ADJ || schedGroup == Process.THREAD_GROUP_BG_NONINTERACTIVE); i++) {
          ConnectionRecord cr=clist.get(i);
          if (cr.binding.client == app) {
            continue;
          }
          if ((cr.flags & Context.BIND_WAIVE_PRIORITY) == 0) {
            ProcessRecord client=cr.binding.client;
            int clientAdj=adj;
            int myCachedAdj=cachedAdj;
            if (myCachedAdj > client.cachedAdj) {
              if (client.cachedAdj >= ProcessList.VISIBLE_APP_ADJ) {
                myCachedAdj=client.cachedAdj;
              }
 else {
                myCachedAdj=ProcessList.VISIBLE_APP_ADJ;
              }
            }
            int myClientCachedAdj=clientCachedAdj;
            if (myClientCachedAdj > client.clientCachedAdj) {
              if (client.clientCachedAdj >= ProcessList.VISIBLE_APP_ADJ) {
                myClientCachedAdj=client.clientCachedAdj;
              }
 else {
                myClientCachedAdj=ProcessList.VISIBLE_APP_ADJ;
              }
            }
            int myEmptyAdj=emptyAdj;
            if (myEmptyAdj > client.emptyAdj) {
              if (client.emptyAdj >= ProcessList.VISIBLE_APP_ADJ) {
                myEmptyAdj=client.emptyAdj;
              }
 else {
                myEmptyAdj=ProcessList.VISIBLE_APP_ADJ;
              }
            }
            clientAdj=computeOomAdjLocked(client,myCachedAdj,myClientCachedAdj,myEmptyAdj,TOP_APP,true,doingAll);
            String adjType=null;
            if ((cr.flags & Context.BIND_ALLOW_OOM_MANAGEMENT) != 0) {
              if (app.hasShownUi && app != mHomeProcess) {
                if (adj > clientAdj) {
                  adjType="cch-bound-ui-services";
                }
                app.cached=false;
                clientAdj=adj;
              }
 else {
                if (now >= (s.lastActivity + ActiveServices.MAX_SERVICE_INACTIVITY)) {
                  if (adj > clientAdj) {
                    adjType="cch-bound-services";
                  }
                  clientAdj=adj;
                }
              }
            }
 else             if ((cr.flags & Context.BIND_AUTO_CREATE) != 0) {
              if ((cr.flags & Context.BIND_NOT_VISIBLE) == 0) {
                app.hasClientActivities|=client.hasActivities;
              }
            }
            if (adj > clientAdj) {
              if (app.hasShownUi && app != mHomeProcess && clientAdj > ProcessList.PERCEPTIBLE_APP_ADJ) {
                adjType="cch-bound-ui-services";
              }
 else {
                if ((cr.flags & (Context.BIND_ABOVE_CLIENT | Context.BIND_IMPORTANT)) != 0) {
                  adj=clientAdj;
                }
 else                 if ((cr.flags & Context.BIND_NOT_VISIBLE) != 0 && clientAdj < ProcessList.PERCEPTIBLE_APP_ADJ && adj > ProcessList.PERCEPTIBLE_APP_ADJ) {
                  adj=ProcessList.PERCEPTIBLE_APP_ADJ;
                }
 else                 if (clientAdj > ProcessList.VISIBLE_APP_ADJ) {
                  adj=clientAdj;
                }
 else {
                  app.pendingUiClean=true;
                  if (adj > ProcessList.VISIBLE_APP_ADJ) {
                    adj=ProcessList.VISIBLE_APP_ADJ;
                  }
                }
                if (!client.cached) {
                  app.cached=false;
                }
                if (client.keeping) {
                  app.keeping=true;
                }
                adjType="service";
              }
            }
            if (adjType != null) {
              app.adjType=adjType;
              app.adjTypeCode=ActivityManager.RunningAppProcessInfo.REASON_SERVICE_IN_USE;
              app.adjSource=cr.binding.client;
              app.adjSourceOom=clientAdj;
              app.adjTarget=s.name;
            }
            if ((cr.flags & Context.BIND_NOT_FOREGROUND) == 0) {
              if (client.curSchedGroup == Process.THREAD_GROUP_DEFAULT) {
                schedGroup=Process.THREAD_GROUP_DEFAULT;
              }
            }
          }
          final ActivityRecord a=cr.activity;
          if ((cr.flags & Context.BIND_ADJUST_WITH_ACTIVITY) != 0) {
            if (a != null && adj > ProcessList.FOREGROUND_APP_ADJ && (a.visible || a.state == ActivityState.RESUMED || a.state == ActivityState.PAUSING)) {
              adj=ProcessList.FOREGROUND_APP_ADJ;
              if ((cr.flags & Context.BIND_NOT_FOREGROUND) == 0) {
                schedGroup=Process.THREAD_GROUP_DEFAULT;
              }
              app.cached=false;
              app.adjType="service";
              app.adjTypeCode=ActivityManager.RunningAppProcessInfo.REASON_SERVICE_IN_USE;
              app.adjSource=a;
              app.adjSourceOom=adj;
              app.adjTarget=s.name;
            }
          }
        }
      }
    }
    if (adj > cachedAdj) {
      adj=cachedAdj;
      app.cached=false;
      app.adjType="cch-services";
    }
  }
  for (int provi=app.pubProviders.size() - 1; provi >= 0 && (adj > ProcessList.FOREGROUND_APP_ADJ || schedGroup == Process.THREAD_GROUP_BG_NONINTERACTIVE); provi--) {
    ContentProviderRecord cpr=app.pubProviders.valueAt(provi);
    for (int i=cpr.connections.size() - 1; i >= 0 && (adj > ProcessList.FOREGROUND_APP_ADJ || schedGroup == Process.THREAD_GROUP_BG_NONINTERACTIVE); i--) {
      ContentProviderConnection conn=cpr.connections.get(i);
      ProcessRecord client=conn.client;
      if (client == app) {
        continue;
      }
      int myCachedAdj=cachedAdj;
      if (myCachedAdj > client.cachedAdj) {
        if (client.cachedAdj > ProcessList.FOREGROUND_APP_ADJ) {
          myCachedAdj=client.cachedAdj;
        }
 else {
          myCachedAdj=ProcessList.FOREGROUND_APP_ADJ;
        }
      }
      int myClientCachedAdj=clientCachedAdj;
      if (myClientCachedAdj > client.clientCachedAdj) {
        if (client.clientCachedAdj >= ProcessList.FOREGROUND_APP_ADJ) {
          myClientCachedAdj=client.clientCachedAdj;
        }
 else {
          myClientCachedAdj=ProcessList.FOREGROUND_APP_ADJ;
        }
      }
      int myEmptyAdj=emptyAdj;
      if (myEmptyAdj > client.emptyAdj) {
        if (client.emptyAdj > ProcessList.FOREGROUND_APP_ADJ) {
          myEmptyAdj=client.emptyAdj;
        }
 else {
          myEmptyAdj=ProcessList.FOREGROUND_APP_ADJ;
        }
      }
      int clientAdj=computeOomAdjLocked(client,myCachedAdj,myClientCachedAdj,myEmptyAdj,TOP_APP,true,doingAll);
      if (adj > clientAdj) {
        if (app.hasShownUi && app != mHomeProcess && clientAdj > ProcessList.PERCEPTIBLE_APP_ADJ) {
          app.adjType="cch-ui-provider";
        }
 else {
          adj=clientAdj > ProcessList.FOREGROUND_APP_ADJ ? clientAdj : ProcessList.FOREGROUND_APP_ADJ;
          app.adjType="provider";
        }
        if (!client.cached) {
          app.cached=false;
        }
        if (client.keeping) {
          app.keeping=true;
        }
        app.adjTypeCode=ActivityManager.RunningAppProcessInfo.REASON_PROVIDER_IN_USE;
        app.adjSource=client;
        app.adjSourceOom=clientAdj;
        app.adjTarget=cpr.name;
      }
      if (client.curSchedGroup == Process.THREAD_GROUP_DEFAULT) {
        schedGroup=Process.THREAD_GROUP_DEFAULT;
      }
    }
    if (cpr.hasExternalProcessHandles()) {
      if (adj > ProcessList.FOREGROUND_APP_ADJ) {
        adj=ProcessList.FOREGROUND_APP_ADJ;
        schedGroup=Process.THREAD_GROUP_DEFAULT;
        app.cached=false;
        app.keeping=true;
        app.adjType="provider";
        app.adjTarget=cpr.name;
      }
    }
  }
  if (adj == ProcessList.SERVICE_ADJ) {
    if (doingAll) {
      app.serviceb=mNewNumServiceProcs > (mNumServiceProcs / 3);
      mNewNumServiceProcs++;
    }
    if (app.serviceb) {
      adj=ProcessList.SERVICE_B_ADJ;
    }
  }
 else {
    app.serviceb=false;
  }
  app.nonStoppingAdj=adj;
  if (hasStoppingActivities) {
    if (adj > ProcessList.PERCEPTIBLE_APP_ADJ) {
      adj=ProcessList.PERCEPTIBLE_APP_ADJ;
      app.adjType="stopping";
    }
  }
  app.curRawAdj=adj;
  if (adj > app.maxAdj) {
    adj=app.maxAdj;
    if (app.maxAdj <= ProcessList.PERCEPTIBLE_APP_ADJ) {
      schedGroup=Process.THREAD_GROUP_DEFAULT;
    }
  }
  if (adj < ProcessList.CACHED_APP_MIN_ADJ) {
    app.keeping=true;
  }
  if (app.hasAboveClient) {
    if (adj < ProcessList.FOREGROUND_APP_ADJ) {
    }
 else     if (adj < ProcessList.VISIBLE_APP_ADJ) {
      adj=ProcessList.VISIBLE_APP_ADJ;
    }
 else     if (adj < ProcessList.PERCEPTIBLE_APP_ADJ) {
      adj=ProcessList.PERCEPTIBLE_APP_ADJ;
    }
 else     if (adj < ProcessList.CACHED_APP_MIN_ADJ) {
      adj=ProcessList.CACHED_APP_MIN_ADJ;
    }
 else     if (adj < ProcessList.CACHED_APP_MAX_ADJ) {
      adj++;
    }
  }
  int importance=app.memImportance;
  if (importance == 0 || adj != app.curAdj || schedGroup != app.curSchedGroup) {
    app.curAdj=adj;
    app.curSchedGroup=schedGroup;
    if (!interesting) {
      importance=ActivityManager.RunningAppProcessInfo.IMPORTANCE_BACKGROUND;
    }
 else     if (adj >= ProcessList.CACHED_APP_MIN_ADJ) {
      importance=ActivityManager.RunningAppProcessInfo.IMPORTANCE_BACKGROUND;
    }
 else     if (adj >= ProcessList.SERVICE_B_ADJ) {
      importance=ActivityManager.RunningAppProcessInfo.IMPORTANCE_SERVICE;
    }
 else     if (adj >= ProcessList.HOME_APP_ADJ) {
      importance=ActivityManager.RunningAppProcessInfo.IMPORTANCE_BACKGROUND;
    }
 else     if (adj >= ProcessList.SERVICE_ADJ) {
      importance=ActivityManager.RunningAppProcessInfo.IMPORTANCE_SERVICE;
    }
 else     if (adj >= ProcessList.HEAVY_WEIGHT_APP_ADJ) {
      importance=ActivityManager.RunningAppProcessInfo.IMPORTANCE_CANT_SAVE_STATE;
    }
 else     if (adj >= ProcessList.PERCEPTIBLE_APP_ADJ) {
      importance=ActivityManager.RunningAppProcessInfo.IMPORTANCE_PERCEPTIBLE;
    }
 else     if (adj >= ProcessList.VISIBLE_APP_ADJ) {
      importance=ActivityManager.RunningAppProcessInfo.IMPORTANCE_VISIBLE;
    }
 else     if (adj >= ProcessList.FOREGROUND_APP_ADJ) {
      importance=ActivityManager.RunningAppProcessInfo.IMPORTANCE_FOREGROUND;
    }
 else {
      importance=ActivityManager.RunningAppProcessInfo.IMPORTANCE_PERSISTENT;
    }
  }
  int changes=importance != app.memImportance ? ProcessChangeItem.CHANGE_IMPORTANCE : 0;
  if (foregroundActivities != app.foregroundActivities) {
    changes|=ProcessChangeItem.CHANGE_ACTIVITIES;
  }
  if (changes != 0) {
    if (DEBUG_PROCESS_OBSERVERS)     Slog.i(TAG,"Changes in " + app + ": "+ changes);
    app.memImportance=importance;
    app.foregroundActivities=foregroundActivities;
    int i=mPendingProcessChanges.size() - 1;
    ProcessChangeItem item=null;
    while (i >= 0) {
      item=mPendingProcessChanges.get(i);
      if (item.pid == app.pid) {
        if (DEBUG_PROCESS_OBSERVERS)         Slog.i(TAG,"Re-using existing item: " + item);
        break;
      }
      i--;
    }
    if (i < 0) {
      final int NA=mAvailProcessChanges.size();
      if (NA > 0) {
        item=mAvailProcessChanges.remove(NA - 1);
        if (DEBUG_PROCESS_OBSERVERS)         Slog.i(TAG,"Retreiving available item: " + item);
      }
 else {
        item=new ProcessChangeItem();
        if (DEBUG_PROCESS_OBSERVERS)         Slog.i(TAG,"Allocating new item: " + item);
      }
      item.changes=0;
      item.pid=app.pid;
      item.uid=app.info.uid;
      if (mPendingProcessChanges.size() == 0) {
        if (DEBUG_PROCESS_OBSERVERS)         Slog.i(TAG,"*** Enqueueing dispatch processes changed!");
        mHandler.obtainMessage(DISPATCH_PROCESSES_CHANGED).sendToTarget();
      }
      mPendingProcessChanges.add(item);
    }
    item.changes|=changes;
    item.importance=importance;
    item.foregroundActivities=foregroundActivities;
    if (DEBUG_PROCESS_OBSERVERS)     Slog.i(TAG,"Item " + Integer.toHexString(System.identityHashCode(item)) + " "+ app.toShortString()+ ": changes="+ item.changes+ " importance="+ item.importance+ " foreground="+ item.foregroundActivities+ " type="+ app.adjType+ " source="+ app.adjSource+ " target="+ app.adjTarget);
  }
  return app.curRawAdj;
}
