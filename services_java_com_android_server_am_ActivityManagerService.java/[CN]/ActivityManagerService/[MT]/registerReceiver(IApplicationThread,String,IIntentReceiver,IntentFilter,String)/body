{
  enforceNotIsolatedCaller("registerReceiver");
  int callingUid;
synchronized (this) {
    ProcessRecord callerApp=null;
    if (caller != null) {
      callerApp=getRecordForAppLocked(caller);
      if (callerApp == null) {
        throw new SecurityException("Unable to find app for caller " + caller + " (pid="+ Binder.getCallingPid()+ ") when registering receiver "+ receiver);
      }
      if (callerApp.info.uid != Process.SYSTEM_UID && !callerApp.pkgList.contains(callerPackage)) {
        throw new SecurityException("Given caller package " + callerPackage + " is not running in process "+ callerApp);
      }
      callingUid=callerApp.info.uid;
    }
 else {
      callerPackage=null;
      callingUid=Binder.getCallingUid();
    }
    List allSticky=null;
    Iterator actions=filter.actionsIterator();
    if (actions != null) {
      while (actions.hasNext()) {
        String action=(String)actions.next();
        allSticky=getStickiesLocked(action,filter,allSticky,UserHandle.USER_ALL);
        allSticky=getStickiesLocked(action,filter,allSticky,UserHandle.getUserId(callingUid));
      }
    }
 else {
      allSticky=getStickiesLocked(null,filter,allSticky,UserHandle.USER_ALL);
      allSticky=getStickiesLocked(null,filter,allSticky,UserHandle.getUserId(callingUid));
    }
    Intent sticky=allSticky != null ? (Intent)allSticky.get(0) : null;
    if (DEBUG_BROADCAST)     Slog.v(TAG,"Register receiver " + filter + ": "+ sticky);
    if (receiver == null) {
      return sticky;
    }
    ReceiverList rl=(ReceiverList)mRegisteredReceivers.get(receiver.asBinder());
    if (rl == null) {
      rl=new ReceiverList(this,callerApp,Binder.getCallingPid(),Binder.getCallingUid(),receiver);
      if (rl.app != null) {
        rl.app.receivers.add(rl);
      }
 else {
        try {
          receiver.asBinder().linkToDeath(rl,0);
        }
 catch (        RemoteException e) {
          return sticky;
        }
        rl.linkedToDeath=true;
      }
      mRegisteredReceivers.put(receiver.asBinder(),rl);
    }
    BroadcastFilter bf=new BroadcastFilter(filter,rl,callerPackage,permission,callingUid);
    rl.add(bf);
    if (!bf.debugCheck()) {
      Slog.w(TAG,"==> For Dynamic broadast");
    }
    mReceiverResolver.addFilter(bf);
    if (allSticky != null) {
      ArrayList receivers=new ArrayList();
      receivers.add(bf);
      int N=allSticky.size();
      for (int i=0; i < N; i++) {
        Intent intent=(Intent)allSticky.get(i);
        BroadcastQueue queue=broadcastQueueForIntent(intent);
        BroadcastRecord r=new BroadcastRecord(queue,intent,null,null,-1,-1,null,receivers,null,0,null,null,false,true,true,-1);
        queue.enqueueParallelBroadcastLocked(r);
        queue.scheduleBroadcastsLocked();
      }
    }
    return sticky;
  }
}
