{
  if (checkCallingPermission(android.Manifest.permission.DUMP) != PackageManager.PERMISSION_GRANTED) {
    pw.println("Permission Denial: can't dump ActivityManager from from pid=" + Binder.getCallingPid() + ", uid="+ Binder.getCallingUid()+ " without permission "+ android.Manifest.permission.DUMP);
    return;
  }
  boolean dumpAll=false;
  int opti=0;
  while (opti < args.length) {
    String opt=args[opti];
    if (opt == null || opt.length() <= 0 || opt.charAt(0) != '-') {
      break;
    }
    opti++;
    if ("-a".equals(opt)) {
      dumpAll=true;
    }
 else     if ("-h".equals(opt)) {
      pw.println("Activity manager dump options:");
      pw.println("  [-a] [-h] [cmd] ...");
      pw.println("  cmd may be one of:");
      pw.println("    activities: activity stack state");
      pw.println("    broadcasts: broadcast state");
      pw.println("    intents: pending intent state");
      pw.println("    processes: process state");
      pw.println("    providers: content provider state");
      pw.println("    services: service state");
      pw.println("    service [name]: service client-side state");
      return;
    }
 else {
      pw.println("Unknown argument: " + opt + "; use -h for help");
    }
  }
  if (opti < args.length) {
    String cmd=args[opti];
    opti++;
    if ("activities".equals(cmd) || "a".equals(cmd)) {
synchronized (this) {
        dumpActivitiesLocked(fd,pw,args,opti,true,true);
      }
      return;
    }
 else     if ("broadcasts".equals(cmd) || "b".equals(cmd)) {
synchronized (this) {
        dumpBroadcastsLocked(fd,pw,args,opti,true);
      }
      return;
    }
 else     if ("intents".equals(cmd) || "i".equals(cmd)) {
synchronized (this) {
        dumpPendingIntentsLocked(fd,pw,args,opti,true);
      }
      return;
    }
 else     if ("processes".equals(cmd) || "p".equals(cmd)) {
synchronized (this) {
        dumpProcessesLocked(fd,pw,args,opti,true);
      }
      return;
    }
 else     if ("providers".equals(cmd) || "prov".equals(cmd)) {
synchronized (this) {
        dumpProvidersLocked(fd,pw,args,opti,true);
      }
      return;
    }
 else     if ("service".equals(cmd)) {
      dumpService(fd,pw,args,opti,dumpAll);
      return;
    }
 else     if ("services".equals(cmd) || "s".equals(cmd)) {
synchronized (this) {
        dumpServicesLocked(fd,pw,args,opti,true);
      }
      return;
    }
  }
synchronized (this) {
    boolean needSep;
    if (dumpAll) {
      pw.println("Providers in Current Activity Manager State:");
    }
    needSep=dumpProvidersLocked(fd,pw,args,opti,dumpAll);
    if (needSep) {
      pw.println(" ");
    }
    if (dumpAll) {
      pw.println("-------------------------------------------------------------------------------");
      pw.println("Broadcasts in Current Activity Manager State:");
    }
    needSep=dumpBroadcastsLocked(fd,pw,args,opti,dumpAll);
    if (needSep) {
      pw.println(" ");
    }
    if (dumpAll) {
      pw.println("-------------------------------------------------------------------------------");
      pw.println("Services in Current Activity Manager State:");
    }
    needSep=dumpServicesLocked(fd,pw,args,opti,dumpAll);
    if (needSep) {
      pw.println(" ");
    }
    if (dumpAll) {
      pw.println("-------------------------------------------------------------------------------");
      pw.println("PendingIntents in Current Activity Manager State:");
    }
    needSep=dumpPendingIntentsLocked(fd,pw,args,opti,dumpAll);
    if (needSep) {
      pw.println(" ");
    }
    if (dumpAll) {
      pw.println("-------------------------------------------------------------------------------");
      pw.println("Activities in Current Activity Manager State:");
    }
    needSep=dumpActivitiesLocked(fd,pw,args,opti,dumpAll,!dumpAll);
    if (needSep) {
      pw.println(" ");
    }
    if (dumpAll) {
      pw.println("-------------------------------------------------------------------------------");
      pw.println("Processes in Current Activity Manager State:");
    }
    dumpProcessesLocked(fd,pw,args,opti,dumpAll);
  }
}
