{
  IBinder binder=c.conn.asBinder();
  AppBindRecord b=c.binding;
  ServiceRecord s=b.service;
  ArrayList<ConnectionRecord> clist=s.connections.get(binder);
  if (clist != null) {
    clist.remove(c);
    if (clist.size() == 0) {
      s.connections.remove(binder);
    }
  }
  b.connections.remove(c);
  if (c.activity != null && c.activity != skipAct) {
    if (c.activity.connections != null) {
      c.activity.connections.remove(c);
    }
  }
  if (b.client != skipApp) {
    b.client.connections.remove(c);
  }
  clist=mServiceConnections.get(binder);
  if (clist != null) {
    clist.remove(c);
    if (clist.size() == 0) {
      mServiceConnections.remove(binder);
    }
  }
  if (b.connections.size() == 0) {
    b.intent.apps.remove(b.client);
  }
  if (DEBUG_SERVICE)   Slog.v(TAG,"Disconnecting binding " + b.intent + ": shouldUnbind="+ b.intent.hasBound);
  if (s.app != null && s.app.thread != null && b.intent.apps.size() == 0 && b.intent.hasBound) {
    try {
      bumpServiceExecutingLocked(s,"unbind");
      updateOomAdjLocked(s.app);
      b.intent.hasBound=false;
      b.intent.doRebind=false;
      s.app.thread.scheduleUnbindService(s,b.intent.intent.getIntent());
    }
 catch (    Exception e) {
      Slog.w(TAG,"Exception when unbinding service " + s.shortName,e);
      serviceDoneExecutingLocked(s,true);
    }
  }
  if ((c.flags & Context.BIND_AUTO_CREATE) != 0) {
    bringDownServiceLocked(s,false);
  }
}
