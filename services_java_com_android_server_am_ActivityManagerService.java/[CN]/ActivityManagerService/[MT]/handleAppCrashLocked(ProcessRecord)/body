{
  if (mHeadless) {
    Log.e(TAG,"handleAppCrashLocked: " + app.processName);
    return false;
  }
  long now=SystemClock.uptimeMillis();
  Long crashTime;
  if (!app.isolated) {
    crashTime=mProcessCrashTimes.get(app.info.processName,app.uid);
  }
 else {
    crashTime=null;
  }
  if (crashTime != null && now < crashTime + ProcessList.MIN_CRASH_INTERVAL) {
    Slog.w(TAG,"Process " + app.info.processName + " has crashed too many times: killing!");
    EventLog.writeEvent(EventLogTags.AM_PROCESS_CRASHED_TOO_MUCH,app.info.processName,app.uid);
    for (int i=mMainStack.mHistory.size() - 1; i >= 0; i--) {
      ActivityRecord r=(ActivityRecord)mMainStack.mHistory.get(i);
      if (r.app == app) {
        Slog.w(TAG,"  Force finishing activity " + r.intent.getComponent().flattenToShortString());
        r.stack.finishActivityLocked(r,i,Activity.RESULT_CANCELED,null,"crashed");
      }
    }
    if (!app.persistent) {
      EventLog.writeEvent(EventLogTags.AM_PROC_BAD,app.uid,app.info.processName);
      if (!app.isolated) {
        mBadProcesses.put(app.info.processName,app.uid,now);
        mProcessCrashTimes.remove(app.info.processName,app.uid);
      }
      app.bad=true;
      app.removed=true;
      removeProcessLocked(app,false,false,"crash");
      mMainStack.resumeTopActivityLocked(null);
      return false;
    }
    mMainStack.resumeTopActivityLocked(null);
  }
 else {
    ActivityRecord r=mMainStack.topRunningActivityLocked(null);
    if (r != null && r.app == app) {
      Slog.w(TAG,"  Force finishing activity " + r.intent.getComponent().flattenToShortString());
      int index=mMainStack.indexOfActivityLocked(r);
      r.stack.finishActivityLocked(r,index,Activity.RESULT_CANCELED,null,"crashed");
      index--;
      if (index >= 0) {
        r=(ActivityRecord)mMainStack.mHistory.get(index);
        if (r.state == ActivityState.RESUMED || r.state == ActivityState.PAUSING || r.state == ActivityState.PAUSED) {
          if (!r.isHomeActivity || mHomeProcess != r.app) {
            Slog.w(TAG,"  Force finishing activity " + r.intent.getComponent().flattenToShortString());
            r.stack.finishActivityLocked(r,index,Activity.RESULT_CANCELED,null,"crashed");
          }
        }
      }
    }
  }
  if (app.services.size() != 0) {
    Iterator<ServiceRecord> it=app.services.iterator();
    while (it.hasNext()) {
      ServiceRecord sr=it.next();
      sr.crashCount++;
    }
  }
  if (app == mHomeProcess && mHomeProcess.activities.size() > 0 && (mHomeProcess.info.flags & ApplicationInfo.FLAG_SYSTEM) == 0) {
    Iterator it=mHomeProcess.activities.iterator();
    while (it.hasNext()) {
      ActivityRecord r=(ActivityRecord)it.next();
      if (r.isHomeActivity) {
        Log.i(TAG,"Clearing package preferred activities from " + r.packageName);
        try {
          ActivityThread.getPackageManager().clearPackagePreferredActivities(r.packageName);
        }
 catch (        RemoteException c) {
        }
      }
    }
  }
  if (!app.isolated) {
    mProcessCrashTimes.put(app.info.processName,app.uid,now);
  }
  return true;
}
