{
  boolean needSep=false;
  if (mLruProcesses.size() > 0) {
    ArrayList<ProcessRecord> procs=new ArrayList<ProcessRecord>(mLruProcesses);
    Comparator<ProcessRecord> comparator=new Comparator<ProcessRecord>(){
      @Override public int compare(      ProcessRecord object1,      ProcessRecord object2){
        if (object1.setAdj != object2.setAdj) {
          return object1.setAdj > object2.setAdj ? -1 : 1;
        }
        if (object1.setSchedGroup != object2.setSchedGroup) {
          return object1.setSchedGroup > object2.setSchedGroup ? -1 : 1;
        }
        if (object1.keeping != object2.keeping) {
          return object1.keeping ? -1 : 1;
        }
        if (object1.pid != object2.pid) {
          return object1.pid > object2.pid ? -1 : 1;
        }
        return 0;
      }
    }
;
    Collections.sort(procs,comparator);
    if (needSep)     pw.println(" ");
    needSep=true;
    pw.println("  OOM levels:");
    pw.print("    SYSTEM_ADJ: ");
    pw.println(SYSTEM_ADJ);
    pw.print("    CORE_SERVER_ADJ: ");
    pw.println(CORE_SERVER_ADJ);
    pw.print("    FOREGROUND_APP_ADJ: ");
    pw.println(FOREGROUND_APP_ADJ);
    pw.print("    VISIBLE_APP_ADJ: ");
    pw.println(VISIBLE_APP_ADJ);
    pw.print("    PERCEPTIBLE_APP_ADJ: ");
    pw.println(PERCEPTIBLE_APP_ADJ);
    pw.print("    HEAVY_WEIGHT_APP_ADJ: ");
    pw.println(HEAVY_WEIGHT_APP_ADJ);
    pw.print("    BACKUP_APP_ADJ: ");
    pw.println(BACKUP_APP_ADJ);
    pw.print("    SECONDARY_SERVER_ADJ: ");
    pw.println(SECONDARY_SERVER_ADJ);
    pw.print("    HOME_APP_ADJ: ");
    pw.println(HOME_APP_ADJ);
    pw.print("    HIDDEN_APP_MIN_ADJ: ");
    pw.println(HIDDEN_APP_MIN_ADJ);
    pw.print("    EMPTY_APP_ADJ: ");
    pw.println(EMPTY_APP_ADJ);
    if (needSep)     pw.println(" ");
    needSep=true;
    pw.println("  Process OOM control:");
    dumpProcessOomList(pw,this,procs,"    ","Proc","PERS",true);
    needSep=true;
  }
  needSep=dumpProcessesToGc(fd,pw,args,opti,needSep,dumpAll);
  pw.println();
  pw.println("  mHomeProcess: " + mHomeProcess);
  if (mHeavyWeightProcess != null) {
    pw.println("  mHeavyWeightProcess: " + mHeavyWeightProcess);
  }
  return true;
}
