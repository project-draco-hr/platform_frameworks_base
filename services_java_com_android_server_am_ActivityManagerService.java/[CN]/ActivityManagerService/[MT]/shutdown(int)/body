{
  if (checkCallingPermission(android.Manifest.permission.SHUTDOWN) != PackageManager.PERMISSION_GRANTED) {
    throw new SecurityException("Requires permission " + android.Manifest.permission.SHUTDOWN);
  }
  boolean timedout=false;
synchronized (this) {
    mShuttingDown=true;
    updateEventDispatchingLocked();
    final int numStacks=mStacks.size();
    for (int stackNdx=0; stackNdx < numStacks; ++stackNdx) {
      final ActivityStack stack=mStacks.get(stackNdx);
      if (stack.mResumedActivity != null) {
        stack.stopIfSleepingLocked();
        final long endTime=System.currentTimeMillis() + timeout;
        while (stack.mResumedActivity != null || stack.mPausingActivity != null) {
          long delay=endTime - System.currentTimeMillis();
          if (delay <= 0) {
            Slog.w(TAG,"Activity manager shutdown timed out");
            timedout=true;
            break;
          }
          try {
            this.wait();
          }
 catch (          InterruptedException e) {
          }
        }
      }
    }
  }
  mAppOpsService.shutdown();
  mUsageStatsService.shutdown();
  mBatteryStatsService.shutdown();
  return timedout;
}
