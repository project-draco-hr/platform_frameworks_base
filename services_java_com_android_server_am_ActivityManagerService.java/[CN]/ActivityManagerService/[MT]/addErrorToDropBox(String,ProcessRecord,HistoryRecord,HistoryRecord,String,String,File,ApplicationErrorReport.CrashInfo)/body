{
  String dropboxTag;
  if (process == null || process.pid == MY_PID) {
    dropboxTag="system_server_" + eventType;
  }
 else   if ((process.info.flags & ApplicationInfo.FLAG_SYSTEM) != 0) {
    dropboxTag="system_app_" + eventType;
  }
 else {
    dropboxTag="data_app_" + eventType;
  }
  DropBoxManager dbox=(DropBoxManager)mContext.getSystemService(Context.DROPBOX_SERVICE);
  if (dbox != null && dbox.isTagEnabled(dropboxTag)) {
    StringBuilder sb=new StringBuilder(1024);
    if (process == null || process.pid == MY_PID) {
      sb.append("Process: system_server\n");
    }
 else {
      sb.append("Process: ").append(process.processName).append("\n");
    }
    if (process != null) {
      int flags=process.info.flags;
      IPackageManager pm=ActivityThread.getPackageManager();
      sb.append("Flags: 0x").append(Integer.toString(flags,16)).append("\n");
      for (      String pkg : process.pkgList) {
        sb.append("Package: ").append(pkg);
        try {
          PackageInfo pi=pm.getPackageInfo(pkg,0);
          if (pi != null) {
            sb.append(" v").append(pi.versionCode);
            if (pi.versionName != null) {
              sb.append(" (").append(pi.versionName).append(")");
            }
          }
        }
 catch (        RemoteException e) {
          Slog.e(TAG,"Error getting package info: " + pkg,e);
        }
        sb.append("\n");
      }
    }
    if (activity != null) {
      sb.append("Activity: ").append(activity.shortComponentName).append("\n");
    }
    if (parent != null && parent.app != null && parent.app.pid != process.pid) {
      sb.append("Parent-Process: ").append(parent.app.processName).append("\n");
    }
    if (parent != null && parent != activity) {
      sb.append("Parent-Activity: ").append(parent.shortComponentName).append("\n");
    }
    if (subject != null) {
      sb.append("Subject: ").append(subject).append("\n");
    }
    sb.append("Build: ").append(Build.FINGERPRINT).append("\n");
    sb.append("\n");
    if (report != null) {
      sb.append(report);
    }
    if (logFile != null) {
      try {
        sb.append(FileUtils.readTextFile(logFile,128 * 1024,"\n\n[[TRUNCATED]]"));
      }
 catch (      IOException e) {
        Slog.e(TAG,"Error reading " + logFile,e);
      }
    }
    if (crashInfo != null && crashInfo.stackTrace != null) {
      sb.append(crashInfo.stackTrace);
    }
    dbox.addText(dropboxTag,sb.toString());
  }
}
