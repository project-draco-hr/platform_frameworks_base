{
  int lrui=mLruProcesses.indexOf(app);
  if (lrui >= 0)   mLruProcesses.remove(lrui);
  int i=mLruProcesses.size() - 1;
  int skipTop=0;
  if (updateActivityTime) {
    app.lastActivityTime=SystemClock.uptimeMillis();
  }
  if (app.activities.size() > 0) {
    app.lruWeight=app.lastActivityTime;
  }
 else   if (app.pubProviders.size() > 0) {
    app.lruWeight=app.lastActivityTime - CONTENT_APP_IDLE_OFFSET;
    skipTop=MIN_HIDDEN_APPS;
  }
 else {
    app.lruWeight=app.lastActivityTime - EMPTY_APP_IDLE_OFFSET;
    skipTop=MIN_HIDDEN_APPS;
  }
  while (i >= 0) {
    ProcessRecord p=mLruProcesses.get(i);
    if (skipTop > 0 && p.setAdj >= HIDDEN_APP_MIN_ADJ) {
      skipTop--;
    }
    if (p.lruWeight <= app.lruWeight) {
      mLruProcesses.add(i + 1,app);
      break;
    }
    i--;
  }
  if (i < 0) {
    mLruProcesses.add(0,app);
  }
  if (oomAdj) {
    updateOomAdjLocked();
  }
}
