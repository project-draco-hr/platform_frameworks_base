{
  final int callingUserId=UserHandle.getUserId(callingUid);
  if (callingUserId != userId) {
    if (callingUid != 0 && callingUid != Process.SYSTEM_UID) {
      if ((requireFull || checkComponentPermission(android.Manifest.permission.INTERACT_ACROSS_USERS,callingPid,callingUid,-1,true) != PackageManager.PERMISSION_GRANTED) && checkComponentPermission(android.Manifest.permission.INTERACT_ACROSS_USERS_FULL,callingPid,callingUid,-1,true) != PackageManager.PERMISSION_GRANTED) {
        if (userId == UserHandle.USER_CURRENT_OR_SELF) {
          userId=callingUserId;
        }
 else {
          String msg="Permission Denial: " + name + " from "+ callerPackage+ " asks to run as user "+ userId+ " but is calling from user "+ UserHandle.getUserId(callingUid)+ "; this requires "+ (requireFull ? android.Manifest.permission.INTERACT_ACROSS_USERS_FULL : android.Manifest.permission.INTERACT_ACROSS_USERS);
          Slog.w(TAG,msg);
          throw new SecurityException(msg);
        }
      }
    }
    if (userId == UserHandle.USER_CURRENT || userId == UserHandle.USER_CURRENT_OR_SELF) {
      userId=mCurrentUserId;
    }
    if (!allowAll && userId < 0) {
      throw new IllegalArgumentException("Call does not support special user #" + userId);
    }
  }
  return userId;
}
