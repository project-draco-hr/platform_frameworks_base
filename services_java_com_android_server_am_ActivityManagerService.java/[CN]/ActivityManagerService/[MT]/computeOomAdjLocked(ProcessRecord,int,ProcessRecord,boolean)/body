{
  if (mAdjSeq == app.adjSeq) {
    if (!recursed && app.hidden) {
      app.curAdj=app.curRawAdj=hiddenAdj;
    }
    return app.curRawAdj;
  }
  if (app.thread == null) {
    app.adjSeq=mAdjSeq;
    app.curSchedGroup=Process.THREAD_GROUP_BG_NONINTERACTIVE;
    return (app.curAdj=EMPTY_APP_ADJ);
  }
  app.adjTypeCode=ActivityManager.RunningAppProcessInfo.REASON_UNKNOWN;
  app.adjSource=null;
  app.adjTarget=null;
  app.empty=false;
  app.hidden=false;
  final int activitiesSize=app.activities.size();
  if (app.maxAdj <= FOREGROUND_APP_ADJ) {
    app.adjType="fixed";
    app.adjSeq=mAdjSeq;
    app.curRawAdj=app.maxAdj;
    app.foregroundActivities=false;
    app.keeping=true;
    app.curSchedGroup=Process.THREAD_GROUP_DEFAULT;
    app.systemNoUi=true;
    if (app == TOP_APP) {
      app.systemNoUi=false;
    }
 else     if (activitiesSize > 0) {
      for (int j=0; j < activitiesSize; j++) {
        final ActivityRecord r=app.activities.get(j);
        if (r.visible) {
          app.systemNoUi=false;
          break;
        }
      }
    }
    return (app.curAdj=app.maxAdj);
  }
  final boolean hadForegroundActivities=app.foregroundActivities;
  app.foregroundActivities=false;
  app.keeping=false;
  app.systemNoUi=false;
  int adj;
  int schedGroup;
  if (app == TOP_APP) {
    adj=FOREGROUND_APP_ADJ;
    schedGroup=Process.THREAD_GROUP_DEFAULT;
    app.adjType="top-activity";
    app.foregroundActivities=true;
  }
 else   if (app.instrumentationClass != null) {
    adj=FOREGROUND_APP_ADJ;
    schedGroup=Process.THREAD_GROUP_DEFAULT;
    app.adjType="instrumentation";
  }
 else   if (app.curReceiver != null || (mPendingBroadcast != null && mPendingBroadcast.curApp == app)) {
    adj=FOREGROUND_APP_ADJ;
    schedGroup=Process.THREAD_GROUP_DEFAULT;
    app.adjType="broadcast";
  }
 else   if (app.executingServices.size() > 0) {
    adj=FOREGROUND_APP_ADJ;
    schedGroup=Process.THREAD_GROUP_DEFAULT;
    app.adjType="exec-service";
  }
 else   if (activitiesSize > 0) {
    adj=hiddenAdj;
    schedGroup=Process.THREAD_GROUP_BG_NONINTERACTIVE;
    app.hidden=true;
    app.adjType="bg-activities";
  }
 else {
    adj=hiddenAdj;
    schedGroup=Process.THREAD_GROUP_BG_NONINTERACTIVE;
    app.hidden=true;
    app.empty=true;
    app.adjType="bg-empty";
  }
  if (!app.foregroundActivities && activitiesSize > 0) {
    for (int j=0; j < activitiesSize; j++) {
      final ActivityRecord r=app.activities.get(j);
      if (r.visible) {
        if (adj > VISIBLE_APP_ADJ) {
          adj=VISIBLE_APP_ADJ;
          app.adjType="visible";
        }
        schedGroup=Process.THREAD_GROUP_DEFAULT;
        app.hidden=false;
        app.foregroundActivities=true;
        break;
      }
 else       if (r.state == ActivityState.PAUSING || r.state == ActivityState.PAUSED || r.state == ActivityState.STOPPING) {
        if (adj > PERCEPTIBLE_APP_ADJ) {
          adj=PERCEPTIBLE_APP_ADJ;
          app.adjType="stopping";
        }
        app.foregroundActivities=true;
      }
    }
  }
  if (adj > PERCEPTIBLE_APP_ADJ) {
    if (app.foregroundServices) {
      adj=PERCEPTIBLE_APP_ADJ;
      app.adjType="foreground-service";
      schedGroup=Process.THREAD_GROUP_DEFAULT;
    }
 else     if (app.forcingToForeground != null) {
      adj=PERCEPTIBLE_APP_ADJ;
      app.adjType="force-foreground";
      app.adjSource=app.forcingToForeground;
      schedGroup=Process.THREAD_GROUP_DEFAULT;
    }
  }
  if (adj > HEAVY_WEIGHT_APP_ADJ && app == mHeavyWeightProcess) {
    adj=HEAVY_WEIGHT_APP_ADJ;
    schedGroup=Process.THREAD_GROUP_BG_NONINTERACTIVE;
    app.adjType="heavy";
  }
  if (adj > HOME_APP_ADJ && app == mHomeProcess) {
    adj=HOME_APP_ADJ;
    schedGroup=Process.THREAD_GROUP_BG_NONINTERACTIVE;
    app.adjType="home";
  }
  app.adjSeq=mAdjSeq;
  app.curRawAdj=adj;
  if (mBackupTarget != null && app == mBackupTarget.app) {
    if (adj > BACKUP_APP_ADJ) {
      if (DEBUG_BACKUP)       Slog.v(TAG,"oom BACKUP_APP_ADJ for " + app);
      adj=BACKUP_APP_ADJ;
      app.adjType="backup";
      app.hidden=false;
    }
  }
  if (app.services.size() != 0 && (adj > FOREGROUND_APP_ADJ || schedGroup == Process.THREAD_GROUP_BG_NONINTERACTIVE)) {
    final long now=SystemClock.uptimeMillis();
    Iterator<ServiceRecord> jt=app.services.iterator();
    while (jt.hasNext() && adj > FOREGROUND_APP_ADJ) {
      ServiceRecord s=jt.next();
      if (s.startRequested) {
        if (app.hasShownUi) {
          if (adj > SECONDARY_SERVER_ADJ) {
            app.adjType="started-bg-ui-services";
          }
        }
 else {
          if (now < (s.lastActivity + MAX_SERVICE_INACTIVITY)) {
            if (adj > SECONDARY_SERVER_ADJ) {
              adj=SECONDARY_SERVER_ADJ;
              app.adjType="started-services";
              app.hidden=false;
            }
          }
          if (adj > SECONDARY_SERVER_ADJ) {
            app.adjType="started-bg-services";
          }
        }
        app.keeping=true;
      }
      if (s.connections.size() > 0 && (adj > FOREGROUND_APP_ADJ || schedGroup == Process.THREAD_GROUP_BG_NONINTERACTIVE)) {
        Iterator<ArrayList<ConnectionRecord>> kt=s.connections.values().iterator();
        while (kt.hasNext() && adj > FOREGROUND_APP_ADJ) {
          ArrayList<ConnectionRecord> clist=kt.next();
          for (int i=0; i < clist.size() && adj > FOREGROUND_APP_ADJ; i++) {
            ConnectionRecord cr=clist.get(i);
            if (cr.binding.client == app) {
              continue;
            }
            if ((cr.flags & Context.BIND_WAIVE_PRIORITY) == 0) {
              ProcessRecord client=cr.binding.client;
              int clientAdj=adj;
              int myHiddenAdj=hiddenAdj;
              if (myHiddenAdj > client.hiddenAdj) {
                if (client.hiddenAdj >= VISIBLE_APP_ADJ) {
                  myHiddenAdj=client.hiddenAdj;
                }
 else {
                  myHiddenAdj=VISIBLE_APP_ADJ;
                }
              }
              clientAdj=computeOomAdjLocked(client,myHiddenAdj,TOP_APP,true);
              String adjType=null;
              if ((cr.flags & Context.BIND_ALLOW_OOM_MANAGEMENT) != 0) {
                if (app.hasShownUi) {
                  if (adj > clientAdj) {
                    adjType="bound-bg-ui-services";
                  }
                  clientAdj=adj;
                }
 else {
                  if (now >= (s.lastActivity + MAX_SERVICE_INACTIVITY)) {
                    if (adj > clientAdj) {
                      adjType="bound-bg-services";
                    }
                    clientAdj=adj;
                  }
                }
              }
              if (adj > clientAdj) {
                if (app.hasShownUi && clientAdj > PERCEPTIBLE_APP_ADJ) {
                  adjType="bound-bg-ui-services";
                }
 else {
                  if ((cr.flags & (Context.BIND_ABOVE_CLIENT | Context.BIND_IMPORTANT)) != 0) {
                    adj=clientAdj;
                  }
 else                   if (clientAdj >= VISIBLE_APP_ADJ) {
                    adj=clientAdj;
                  }
 else {
                    adj=VISIBLE_APP_ADJ;
                  }
                  if (!client.hidden) {
                    app.hidden=false;
                  }
                  if (client.keeping) {
                    app.keeping=true;
                  }
                  adjType="service";
                }
              }
              if (adjType != null) {
                app.adjType=adjType;
                app.adjTypeCode=ActivityManager.RunningAppProcessInfo.REASON_SERVICE_IN_USE;
                app.adjSource=cr.binding.client;
                app.adjTarget=s.name;
              }
              if ((cr.flags & Context.BIND_NOT_FOREGROUND) == 0) {
                if (client.curSchedGroup == Process.THREAD_GROUP_DEFAULT) {
                  schedGroup=Process.THREAD_GROUP_DEFAULT;
                }
              }
            }
            if ((cr.flags & Context.BIND_ADJUST_WITH_ACTIVITY) != 0) {
              ActivityRecord a=cr.activity;
              if (a != null && adj > FOREGROUND_APP_ADJ && (a.visible || a.state == ActivityState.RESUMED || a.state == ActivityState.PAUSING)) {
                adj=FOREGROUND_APP_ADJ;
                if ((cr.flags & Context.BIND_NOT_FOREGROUND) == 0) {
                  schedGroup=Process.THREAD_GROUP_DEFAULT;
                }
                app.hidden=false;
                app.adjType="service";
                app.adjTypeCode=ActivityManager.RunningAppProcessInfo.REASON_SERVICE_IN_USE;
                app.adjSource=a;
                app.adjTarget=s.name;
              }
            }
          }
        }
      }
    }
    if (adj > hiddenAdj) {
      adj=hiddenAdj;
      app.hidden=false;
      app.adjType="bg-services";
    }
  }
  if (app.pubProviders.size() != 0 && (adj > FOREGROUND_APP_ADJ || schedGroup == Process.THREAD_GROUP_BG_NONINTERACTIVE)) {
    Iterator<ContentProviderRecord> jt=app.pubProviders.values().iterator();
    while (jt.hasNext() && (adj > FOREGROUND_APP_ADJ || schedGroup == Process.THREAD_GROUP_BG_NONINTERACTIVE)) {
      ContentProviderRecord cpr=jt.next();
      if (cpr.clients.size() != 0) {
        Iterator<ProcessRecord> kt=cpr.clients.iterator();
        while (kt.hasNext() && adj > FOREGROUND_APP_ADJ) {
          ProcessRecord client=kt.next();
          if (client == app) {
            continue;
          }
          int myHiddenAdj=hiddenAdj;
          if (myHiddenAdj > client.hiddenAdj) {
            if (client.hiddenAdj > FOREGROUND_APP_ADJ) {
              myHiddenAdj=client.hiddenAdj;
            }
 else {
              myHiddenAdj=FOREGROUND_APP_ADJ;
            }
          }
          int clientAdj=computeOomAdjLocked(client,myHiddenAdj,TOP_APP,true);
          if (adj > clientAdj) {
            if (app.hasShownUi && clientAdj > PERCEPTIBLE_APP_ADJ) {
              app.adjType="bg-ui-provider";
            }
 else {
              adj=clientAdj > FOREGROUND_APP_ADJ ? clientAdj : FOREGROUND_APP_ADJ;
              app.adjType="provider";
            }
            if (!client.hidden) {
              app.hidden=false;
            }
            if (client.keeping) {
              app.keeping=true;
            }
            app.adjTypeCode=ActivityManager.RunningAppProcessInfo.REASON_PROVIDER_IN_USE;
            app.adjSource=client;
            app.adjTarget=cpr.name;
          }
          if (client.curSchedGroup == Process.THREAD_GROUP_DEFAULT) {
            schedGroup=Process.THREAD_GROUP_DEFAULT;
          }
        }
      }
      if (cpr.externals != 0) {
        if (adj > FOREGROUND_APP_ADJ) {
          adj=FOREGROUND_APP_ADJ;
          schedGroup=Process.THREAD_GROUP_DEFAULT;
          app.hidden=false;
          app.keeping=true;
          app.adjType="provider";
          app.adjTarget=cpr.name;
        }
      }
    }
  }
  app.curRawAdj=adj;
  if (adj > app.maxAdj) {
    adj=app.maxAdj;
    if (app.maxAdj <= PERCEPTIBLE_APP_ADJ) {
      schedGroup=Process.THREAD_GROUP_DEFAULT;
    }
  }
  if (adj < HIDDEN_APP_MIN_ADJ) {
    app.keeping=true;
  }
  if (app.hasAboveClient) {
    if (adj < FOREGROUND_APP_ADJ) {
    }
 else     if (adj < VISIBLE_APP_ADJ) {
      adj=VISIBLE_APP_ADJ;
    }
 else     if (adj < PERCEPTIBLE_APP_ADJ) {
      adj=PERCEPTIBLE_APP_ADJ;
    }
 else     if (adj < HIDDEN_APP_MIN_ADJ) {
      adj=HIDDEN_APP_MIN_ADJ;
    }
 else     if (adj < EMPTY_APP_ADJ) {
      adj++;
    }
  }
  app.curAdj=adj;
  app.curSchedGroup=schedGroup;
  if (hadForegroundActivities != app.foregroundActivities) {
    mHandler.obtainMessage(DISPATCH_FOREGROUND_ACTIVITIES_CHANGED,app.pid,app.info.uid,app.foregroundActivities).sendToTarget();
  }
  return app.curRawAdj;
}
