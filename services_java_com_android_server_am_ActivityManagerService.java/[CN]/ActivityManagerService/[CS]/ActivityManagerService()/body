{
  String v=System.getenv("ANDROID_SIMPLE_PROCESS_MANAGEMENT");
  if (v != null && Integer.getInteger(v) != 0) {
    mSimpleProcessManagement=true;
  }
  v=System.getenv("ANDROID_DEBUG_APP");
  if (v != null) {
    mSimpleProcessManagement=true;
  }
  Log.i(TAG,"Memory class: " + ActivityManager.staticGetMemoryClass());
  File dataDir=Environment.getDataDirectory();
  File systemDir=new File(dataDir,"system");
  systemDir.mkdirs();
  mBatteryStatsService=new BatteryStatsService(new File(systemDir,"batterystats.bin").toString());
  mBatteryStatsService.getActiveStatistics().readLocked();
  mBatteryStatsService.getActiveStatistics().writeLocked();
  mUsageStatsService=new UsageStatsService(new File(systemDir,"usagestats").toString());
  GL_ES_VERSION=SystemProperties.getInt("ro.opengles.version",ConfigurationInfo.GL_ES_VERSION_UNDEFINED);
  mConfiguration.makeDefault();
  mProcessStats.init();
  Watchdog.getInstance().addMonitor(this);
  mProcessStatsThread=new Thread("ProcessStats"){
    public void run(){
      while (true) {
        try {
          try {
synchronized (this) {
              final long now=SystemClock.uptimeMillis();
              long nextCpuDelay=(mLastCpuTime + MONITOR_CPU_MAX_TIME) - now;
              long nextWriteDelay=(mLastWriteTime + BATTERY_STATS_TIME) - now;
              if (nextWriteDelay < nextCpuDelay) {
                nextCpuDelay=nextWriteDelay;
              }
              if (nextCpuDelay > 0) {
                this.wait(nextCpuDelay);
              }
            }
          }
 catch (          InterruptedException e) {
          }
          updateCpuStatsNow();
        }
 catch (        Exception e) {
          Log.e(TAG,"Unexpected exception collecting process stats",e);
        }
      }
    }
  }
;
  mProcessStatsThread.start();
}
