{
  for (int i=0; i < mLinearLayout.getChildCount(); i++) {
    View v=mLinearLayout.getChildAt(i);
    mRecycledViews.add(v);
    mAdapter.recycleView(v);
  }
  LayoutTransition transitioner=getLayoutTransition();
  setLayoutTransition(null);
  mLinearLayout.removeAllViews();
  for (int i=0; i < mRecycledViews.size(); i++) {
    View child=mRecycledViews.get(i);
    if (child.getParent() != null) {
      throw new RuntimeException("Recycled child has parent");
    }
  }
  for (int i=0; i < mAdapter.getCount(); i++) {
    View old=null;
    if (mRecycledViews.size() != 0) {
      old=mRecycledViews.remove(mRecycledViews.size() - 1);
      old.setVisibility(VISIBLE);
    }
    final View view=mAdapter.getView(i,old,mLinearLayout);
    if (view.getParent() != null) {
      throw new RuntimeException("Recycled child has parent");
    }
    if (mPerformanceHelper != null) {
      mPerformanceHelper.addViewCallback(view);
    }
    OnTouchListener noOpListener=new OnTouchListener(){
      @Override public boolean onTouch(      View v,      MotionEvent event){
        return true;
      }
    }
;
    view.setOnClickListener(new OnClickListener(){
      public void onClick(      View v){
        mCallback.dismiss();
      }
    }
);
    view.setSoundEffectsEnabled(false);
    OnClickListener launchAppListener=new OnClickListener(){
      public void onClick(      View v){
        mCallback.handleOnClick(view);
      }
    }
;
    RecentsPanelView.ViewHolder holder=(RecentsPanelView.ViewHolder)view.getTag();
    final View thumbnailView=holder.thumbnailView;
    OnLongClickListener longClickListener=new OnLongClickListener(){
      public boolean onLongClick(      View v){
        final View anchorView=view.findViewById(R.id.app_description);
        mCallback.handleLongPress(view,anchorView,thumbnailView);
        return true;
      }
    }
;
    thumbnailView.setClickable(true);
    thumbnailView.setOnClickListener(launchAppListener);
    thumbnailView.setOnLongClickListener(longClickListener);
    if (view.getParent() != null) {
      throw new RuntimeException("Recycled child has parent");
    }
    final View appTitle=view.findViewById(R.id.app_label);
    appTitle.setContentDescription(" ");
    appTitle.setOnTouchListener(noOpListener);
    final View calloutLine=view.findViewById(R.id.recents_callout_line);
    calloutLine.setOnTouchListener(noOpListener);
    if (view.getParent() != null) {
      throw new RuntimeException("Recycled child has parent");
    }
    mLinearLayout.addView(view);
  }
  setLayoutTransition(transitioner);
  final ViewTreeObserver observer=getViewTreeObserver();
  final OnGlobalLayoutListener updateScroll=new OnGlobalLayoutListener(){
    public void onGlobalLayout(){
      mLastScrollPosition=scrollPositionOfMostRecent();
      scrollTo(0,mLastScrollPosition);
      if (observer.isAlive()) {
        observer.removeOnGlobalLayoutListener(this);
      }
    }
  }
;
  observer.addOnGlobalLayoutListener(updateScroll);
}
