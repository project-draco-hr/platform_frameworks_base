{
  if (DEBUG)   Log.v(TAG,"onInterceptTouchEvent()");
  if (mVelocityTracker == null) {
    mVelocityTracker=VelocityTracker.obtain();
  }
  mVelocityTracker.addMovement(ev);
switch (ev.getAction()) {
case MotionEvent.ACTION_DOWN:
    mDragging=false;
  mLastX=ev.getX();
final float x=ev.getX() + getScrollX();
final float y=ev.getY() + getScrollY();
mCurrentView=null;
for (int i=0; i < mLinearLayout.getChildCount(); i++) {
View item=mLinearLayout.getChildAt(i);
if (x >= item.getLeft() && x < item.getRight() && y >= item.getTop() && y < item.getBottom()) {
mCurrentView=item;
Log.v(TAG,"Hit item " + item);
break;
}
}
break;
case MotionEvent.ACTION_MOVE:
float delta=ev.getX() - mLastX;
if (DEBUG) Log.v(TAG,"ACTION_MOVE : " + delta);
if (Math.abs(delta) > mPagingTouchSlop) {
mDragging=true;
}
break;
case MotionEvent.ACTION_UP:
if (mCurrentView != null) {
mCallback.handleOnClick(mCurrentView);
}
mDragging=false;
break;
}
return mDragging ? true : super.onInterceptTouchEvent(ev);
}
