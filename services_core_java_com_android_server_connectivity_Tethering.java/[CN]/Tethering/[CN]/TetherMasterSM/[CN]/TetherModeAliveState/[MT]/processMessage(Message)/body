{
  if (DBG)   Log.d(TAG,"TetherModeAliveState.processMessage what=" + message.what);
  boolean retValue=true;
switch (message.what) {
case CMD_TETHER_MODE_REQUESTED:
    TetherInterfaceSM who=(TetherInterfaceSM)message.obj;
  if (VDBG)   Log.d(TAG,"Tether Mode requested by " + who);
mNotifyList.add(who);
who.sendMessage(TetherInterfaceSM.CMD_TETHER_CONNECTION_CHANGED,mCurrentUpstreamIface);
break;
case CMD_TETHER_MODE_UNREQUESTED:
who=(TetherInterfaceSM)message.obj;
if (VDBG) Log.d(TAG,"Tether Mode unrequested by " + who);
int index=mNotifyList.indexOf(who);
if (index != -1) {
if (DBG) Log.d(TAG,"TetherModeAlive removing notifyee " + who);
mNotifyList.remove(index);
if (mNotifyList.isEmpty()) {
turnOffMasterTetherSettings();
}
 else {
if (DBG) {
Log.d(TAG,"TetherModeAlive still has " + mNotifyList.size() + " live requests:");
for (Object o : mNotifyList) Log.d(TAG,"  " + o);
}
}
}
 else {
Log.e(TAG,"TetherModeAliveState UNREQUESTED has unknown who: " + who);
}
break;
case CMD_UPSTREAM_CHANGED:
mTryCell=true;
chooseUpstreamType(mTryCell);
mTryCell=!mTryCell;
break;
case CMD_RETRY_UPSTREAM:
chooseUpstreamType(mTryCell);
mTryCell=!mTryCell;
break;
case EVENT_UPSTREAM_LINKPROPERTIES_CHANGED:
NetworkState state=(NetworkState)message.obj;
if (mUpstreamNetworkMonitor.processLinkPropertiesChanged(state)) {
setDnsForwarders(state.network,state.linkProperties);
}
 else if (mCurrentUpstreamIface == null) {
chooseUpstreamType(false);
}
break;
case EVENT_UPSTREAM_LOST:
mUpstreamNetworkMonitor.processNetworkLost((Network)message.obj);
break;
default :
retValue=false;
break;
}
return retValue;
}
