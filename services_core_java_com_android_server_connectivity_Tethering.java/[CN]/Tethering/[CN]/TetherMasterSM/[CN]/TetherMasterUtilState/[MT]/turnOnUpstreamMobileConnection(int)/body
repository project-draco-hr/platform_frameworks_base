{
  if (apnType == ConnectivityManager.TYPE_NONE) {
    return false;
  }
  if (apnType != mMobileApnReserved) {
    turnOffUpstreamMobileConnection();
  }
  if (mMobileUpstreamCallback != null) {
    return true;
  }
switch (apnType) {
case ConnectivityManager.TYPE_MOBILE_DUN:
case ConnectivityManager.TYPE_MOBILE:
case ConnectivityManager.TYPE_MOBILE_HIPRI:
    mMobileApnReserved=apnType;
  break;
default :
return false;
}
final NetworkRequest.Builder builder=new NetworkRequest.Builder().addTransportType(NetworkCapabilities.TRANSPORT_CELLULAR);
if (apnType == ConnectivityManager.TYPE_MOBILE_DUN) {
builder.removeCapability(NetworkCapabilities.NET_CAPABILITY_NOT_RESTRICTED).addCapability(NetworkCapabilities.NET_CAPABILITY_DUN);
}
 else {
builder.addCapability(NetworkCapabilities.NET_CAPABILITY_INTERNET);
}
final NetworkRequest mobileUpstreamRequest=builder.build();
mMobileUpstreamCallback=new NetworkCallback();
if (DBG) Log.d(TAG,"requesting mobile upstream network: " + mobileUpstreamRequest);
getConnectivityManager().requestNetwork(mobileUpstreamRequest,mMobileUpstreamCallback,0,apnType);
return true;
}
