{
  String action=intent.getAction();
  if (action == null) {
    return;
  }
  if (action.equals(UsbManager.ACTION_USB_STATE)) {
synchronized (Tethering.this.mPublicSync) {
      boolean usbConnected=intent.getBooleanExtra(UsbManager.USB_CONNECTED,false);
      mRndisEnabled=intent.getBooleanExtra(UsbManager.USB_FUNCTION_RNDIS,false);
      if (usbConnected && mRndisEnabled && mUsbTetherRequested) {
        tetherMatchingInterfaces(true,ConnectivityManager.TETHERING_USB);
      }
      mUsbTetherRequested=false;
    }
  }
 else   if (action.equals(ConnectivityManager.CONNECTIVITY_ACTION)) {
    NetworkInfo networkInfo=(NetworkInfo)intent.getParcelableExtra(ConnectivityManager.EXTRA_NETWORK_INFO);
    if (networkInfo != null && networkInfo.getDetailedState() != NetworkInfo.DetailedState.FAILED) {
      if (VDBG)       Log.d(TAG,"Tethering got CONNECTIVITY_ACTION");
      mTetherMasterSM.sendMessage(TetherMasterSM.CMD_UPSTREAM_CHANGED);
    }
  }
 else   if (action.equals(WifiManager.WIFI_AP_STATE_CHANGED_ACTION)) {
synchronized (Tethering.this.mPublicSync) {
      int curState=intent.getIntExtra(WifiManager.EXTRA_WIFI_AP_STATE,WifiManager.WIFI_AP_STATE_DISABLED);
switch (curState) {
case WifiManager.WIFI_AP_STATE_ENABLING:
        break;
case WifiManager.WIFI_AP_STATE_ENABLED:
      if (mWifiTetherRequested) {
        tetherMatchingInterfaces(true,ConnectivityManager.TETHERING_WIFI);
      }
    break;
case WifiManager.WIFI_AP_STATE_DISABLED:
case WifiManager.WIFI_AP_STATE_DISABLING:
case WifiManager.WIFI_AP_STATE_FAILED:
default :
  if (DBG) {
    Log.d(TAG,"Canceling WiFi tethering request - AP_STATE=" + curState);
  }
for (int i=0; i < mTetherStates.size(); i++) {
  TetherInterfaceStateMachine tism=mTetherStates.valueAt(i).mStateMachine;
  if (tism.interfaceType() == ConnectivityManager.TETHERING_WIFI) {
    tism.sendMessage(TetherInterfaceStateMachine.CMD_TETHER_UNREQUESTED);
    break;
  }
}
mWifiTetherRequested=false;
break;
}
}
}
 else if (action.equals(Intent.ACTION_CONFIGURATION_CHANGED)) {
updateConfiguration();
}
}
