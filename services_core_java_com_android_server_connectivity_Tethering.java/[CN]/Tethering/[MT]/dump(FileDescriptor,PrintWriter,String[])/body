{
  @SuppressWarnings("resource") final IndentingPrintWriter pw=new IndentingPrintWriter(writer,"  ");
  if (mContext.checkCallingOrSelfPermission(android.Manifest.permission.DUMP) != PackageManager.PERMISSION_GRANTED) {
    pw.println("Permission Denial: can't dump ConnectivityService.Tether " + "from from pid=" + Binder.getCallingPid() + ", uid="+ Binder.getCallingUid());
    return;
  }
  pw.println("Tethering:");
  pw.increaseIndent();
  pw.print("mUpstreamIfaceTypes:");
synchronized (mPublicSync) {
    for (    Integer netType : mUpstreamIfaceTypes) {
      pw.print(" " + ConnectivityManager.getNetworkTypeName(netType));
    }
    pw.println();
    pw.println("Tether state:");
    pw.increaseIndent();
    for (int i=0; i < mTetherStates.size(); i++) {
      final String iface=mTetherStates.keyAt(i);
      final TetherState tetherState=mTetherStates.valueAt(i);
      pw.print(iface + " - ");
switch (tetherState.mLastState) {
case IControlsTethering.STATE_UNAVAILABLE:
        pw.print("UnavailableState");
      break;
case IControlsTethering.STATE_AVAILABLE:
    pw.print("AvailableState");
  break;
case IControlsTethering.STATE_TETHERED:
pw.print("TetheredState");
break;
default :
pw.print("UnknownState");
break;
}
pw.println(" - lastError = " + tetherState.mLastError);
}
pw.decreaseIndent();
}
pw.decreaseIndent();
}
