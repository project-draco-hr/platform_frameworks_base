{
  if (!getConnectivityManager().isTetheringSupported())   return;
  ArrayList<String> availableList=new ArrayList<String>();
  ArrayList<String> activeList=new ArrayList<String>();
  ArrayList<String> erroredList=new ArrayList<String>();
  boolean wifiTethered=false;
  boolean usbTethered=false;
  boolean bluetoothTethered=false;
synchronized (mPublicSync) {
    for (int i=0; i < mTetherStates.size(); i++) {
      TetherState tetherState=mTetherStates.valueAt(i);
      String iface=mTetherStates.keyAt(i);
      if (tetherState.mLastError != ConnectivityManager.TETHER_ERROR_NO_ERROR) {
        erroredList.add(iface);
      }
 else       if (tetherState.mLastState == IControlsTethering.STATE_AVAILABLE) {
        availableList.add(iface);
      }
 else       if (tetherState.mLastState == IControlsTethering.STATE_TETHERED) {
        if (isUsb(iface)) {
          usbTethered=true;
        }
 else         if (isWifi(iface)) {
          wifiTethered=true;
        }
 else         if (isBluetooth(iface)) {
          bluetoothTethered=true;
        }
        activeList.add(iface);
      }
    }
  }
  Intent broadcast=new Intent(ConnectivityManager.ACTION_TETHER_STATE_CHANGED);
  broadcast.addFlags(Intent.FLAG_RECEIVER_REPLACE_PENDING | Intent.FLAG_RECEIVER_REGISTERED_ONLY_BEFORE_BOOT);
  broadcast.putStringArrayListExtra(ConnectivityManager.EXTRA_AVAILABLE_TETHER,availableList);
  broadcast.putStringArrayListExtra(ConnectivityManager.EXTRA_ACTIVE_TETHER,activeList);
  broadcast.putStringArrayListExtra(ConnectivityManager.EXTRA_ERRORED_TETHER,erroredList);
  mContext.sendStickyBroadcastAsUser(broadcast,UserHandle.ALL);
  if (DBG) {
    Log.d(TAG,String.format("sendTetherStateChangedBroadcast avail=[%s] active=[%s] error=[%s]",TextUtils.join(",",availableList),TextUtils.join(",",activeList),TextUtils.join(",",erroredList)));
  }
  if (usbTethered) {
    if (wifiTethered || bluetoothTethered) {
      showTetheredNotification(com.android.internal.R.drawable.stat_sys_tether_general);
    }
 else {
      showTetheredNotification(com.android.internal.R.drawable.stat_sys_tether_usb);
    }
  }
 else   if (wifiTethered) {
    if (bluetoothTethered) {
      showTetheredNotification(com.android.internal.R.drawable.stat_sys_tether_general);
    }
 else {
      clearTetheredNotification();
    }
  }
 else   if (bluetoothTethered) {
    showTetheredNotification(com.android.internal.R.drawable.stat_sys_tether_bluetooth);
  }
 else {
    clearTetheredNotification();
  }
}
