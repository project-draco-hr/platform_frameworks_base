{
  URL caURL=new URL(mURL.getProtocol(),mURL.getHost(),mURL.getPort(),mURL.getFile() + CACERT_PATH);
  HTTPResponse response;
  try (HTTPHandler httpHandler=new HTTPHandler(StandardCharsets.ISO_8859_1,mSocketFactory,mUser,mPassword)){
    response=httpHandler.doGetHTTP(caURL);
    if (!"application/pkcs7-mime".equals(response.getHeaders().get(HTTPMessage.ContentTypeHeader))) {
      throw new IOException("Unexpected Content-Type: " + response.getHeaders().get(HTTPMessage.ContentTypeHeader));
    }
    ByteBuffer octetBuffer=response.getBinaryPayload();
    Collection<Asn1Object> pkcs7Content1=Asn1Decoder.decode(octetBuffer);
    for (    Asn1Object asn1Object : pkcs7Content1) {
      Log.d(TAG,"---");
      Log.d(TAG,asn1Object.toString());
    }
    Log.d(TAG,CACERT_PATH);
    mCACerts.addAll(unpackPkcs7(octetBuffer));
    for (    X509Certificate certificate : mCACerts) {
      Log.d(TAG,"CA-Cert: " + certificate.getSubjectX500Principal());
    }
    URL csrURL=new URL(mURL.getProtocol(),mURL.getHost(),mURL.getPort(),mURL.getFile() + CSR_PATH);
    response=httpHandler.doGetHTTP(csrURL);
    octetBuffer=response.getBinaryPayload();
    byte[] csrData=buildCSR(octetBuffer,mOMADMAdapter,httpHandler);
    Collection<Asn1Object> o=Asn1Decoder.decode(ByteBuffer.wrap(csrData));
    Log.d(TAG,"CSR:");
    Log.d(TAG,o.iterator().next().toString());
    Log.d(TAG,"End CSR.");
    URL enrollURL=new URL(mURL.getProtocol(),mURL.getHost(),mURL.getPort(),mURL.getFile() + (reenroll ? SIMPLE_REENROLL_PATH : SIMPLE_ENROLL_PATH));
    String data=Base64.encodeToString(csrData,Base64.DEFAULT);
    octetBuffer=httpHandler.exchangeBinary(enrollURL,data,"application/pkcs10");
    Collection<Asn1Object> pkcs7Content2=Asn1Decoder.decode(octetBuffer);
    for (    Asn1Object asn1Object : pkcs7Content2) {
      Log.d(TAG,"---");
      Log.d(TAG,asn1Object.toString());
    }
    mClientCerts.addAll(unpackPkcs7(octetBuffer));
    for (    X509Certificate cert : mClientCerts) {
      Log.d(TAG,cert.toString());
    }
  }
 }
