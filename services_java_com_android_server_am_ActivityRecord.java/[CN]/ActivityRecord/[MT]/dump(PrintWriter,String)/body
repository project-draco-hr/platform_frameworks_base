{
  pw.print(prefix);
  pw.print("packageName=");
  pw.print(packageName);
  pw.print(" processName=");
  pw.println(processName);
  pw.print(prefix);
  pw.print("launchedFromUid=");
  pw.print(launchedFromUid);
  pw.print(prefix);
  pw.print("userId=");
  pw.print(userId);
  pw.print(" app=");
  pw.println(app);
  pw.print(prefix);
  pw.println(intent.toInsecureString());
  pw.print(prefix);
  pw.print("frontOfTask=");
  pw.print(frontOfTask);
  pw.print(" task=");
  pw.println(task);
  pw.print(prefix);
  pw.print("taskAffinity=");
  pw.println(taskAffinity);
  pw.print(prefix);
  pw.print("realActivity=");
  pw.println(realActivity.flattenToShortString());
  pw.print(prefix);
  pw.print("base=");
  pw.print(baseDir);
  if (!resDir.equals(baseDir))   pw.print(" res=");
  pw.print(resDir);
  pw.print(" data=");
  pw.println(dataDir);
  pw.print(prefix);
  pw.print("labelRes=0x");
  pw.print(Integer.toHexString(labelRes));
  pw.print(" icon=0x");
  pw.print(Integer.toHexString(icon));
  pw.print(" theme=0x");
  pw.println(Integer.toHexString(theme));
  pw.print(prefix);
  pw.print("stateNotNeeded=");
  pw.print(stateNotNeeded);
  pw.print(" componentSpecified=");
  pw.print(componentSpecified);
  pw.print(" isHomeActivity=");
  pw.println(isHomeActivity);
  pw.print(prefix);
  pw.print("config=");
  pw.println(configuration);
  pw.print(prefix);
  pw.print("compat=");
  pw.println(compat);
  if (resultTo != null || resultWho != null) {
    pw.print(prefix);
    pw.print("resultTo=");
    pw.print(resultTo);
    pw.print(" resultWho=");
    pw.print(resultWho);
    pw.print(" resultCode=");
    pw.println(requestCode);
  }
  if (results != null) {
    pw.print(prefix);
    pw.print("results=");
    pw.println(results);
  }
  if (pendingResults != null) {
    pw.print(prefix);
    pw.print("pendingResults=");
    pw.println(pendingResults);
  }
  if (uriPermissions != null) {
    if (uriPermissions.readUriPermissions != null) {
      pw.print(prefix);
      pw.print("readUriPermissions=");
      pw.println(uriPermissions.readUriPermissions);
    }
    if (uriPermissions.writeUriPermissions != null) {
      pw.print(prefix);
      pw.print("writeUriPermissions=");
      pw.println(uriPermissions.writeUriPermissions);
    }
  }
  pw.print(prefix);
  pw.print("launchFailed=");
  pw.print(launchFailed);
  pw.print(" haveState=");
  pw.print(haveState);
  pw.print(" icicle=");
  pw.println(icicle);
  pw.print(prefix);
  pw.print("state=");
  pw.print(state);
  pw.print(" stopped=");
  pw.print(stopped);
  pw.print(" delayedResume=");
  pw.print(delayedResume);
  pw.print(" finishing=");
  pw.println(finishing);
  pw.print(prefix);
  pw.print("keysPaused=");
  pw.print(keysPaused);
  pw.print(" inHistory=");
  pw.print(inHistory);
  pw.print(" visible=");
  pw.print(visible);
  pw.print(" sleeping=");
  pw.print(sleeping);
  pw.print(" idle=");
  pw.println(idle);
  pw.print(prefix);
  pw.print("fullscreen=");
  pw.print(fullscreen);
  pw.print(" noDisplay=");
  pw.print(noDisplay);
  pw.print(" immersive=");
  pw.print(immersive);
  pw.print(" launchMode=");
  pw.println(launchMode);
  pw.print(prefix);
  pw.print("frozenBeforeDestroy=");
  pw.print(frozenBeforeDestroy);
  pw.print(" thumbnailNeeded=");
  pw.print(thumbnailNeeded);
  pw.print(" forceNewConfig=");
  pw.println(forceNewConfig);
  pw.print(prefix);
  pw.print("thumbHolder=");
  pw.println(thumbHolder);
  if (launchTime != 0 || startTime != 0) {
    pw.print(prefix);
    pw.print("launchTime=");
    TimeUtils.formatDuration(launchTime,pw);
    pw.print(" startTime=");
    TimeUtils.formatDuration(startTime,pw);
    pw.println("");
  }
  if (lastVisibleTime != 0) {
    pw.print(prefix);
    pw.print("lastVisibleTime=");
    TimeUtils.formatDuration(lastVisibleTime,pw);
    pw.println("");
  }
  if (waitingVisible || nowVisible) {
    pw.print(prefix);
    pw.print("waitingVisible=");
    pw.print(waitingVisible);
    pw.print(" nowVisible=");
    pw.println(nowVisible);
  }
  if (configDestroy || configChangeFlags != 0) {
    pw.print(prefix);
    pw.print("configDestroy=");
    pw.print(configDestroy);
    pw.print(" configChangeFlags=");
    pw.println(Integer.toHexString(configChangeFlags));
  }
  if (connections != null) {
    pw.print(prefix);
    pw.print("connections=");
    pw.println(connections);
  }
}
