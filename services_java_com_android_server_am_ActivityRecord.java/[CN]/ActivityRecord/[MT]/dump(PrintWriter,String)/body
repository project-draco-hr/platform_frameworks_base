{
  final long now=SystemClock.uptimeMillis();
  pw.print(prefix);
  pw.print("packageName=");
  pw.print(packageName);
  pw.print(" processName=");
  pw.println(processName);
  pw.print(prefix);
  pw.print("launchedFromUid=");
  pw.print(launchedFromUid);
  pw.print(" launchedFromPackage=");
  pw.print(launchedFromPackage);
  pw.print(" userId=");
  pw.println(userId);
  pw.print(prefix);
  pw.print("app=");
  pw.println(app);
  pw.print(prefix);
  pw.println(intent.toInsecureStringWithClip());
  pw.print(prefix);
  pw.print("frontOfTask=");
  pw.print(frontOfTask);
  pw.print(" task=");
  pw.println(task);
  pw.print(prefix);
  pw.print("taskAffinity=");
  pw.println(taskAffinity);
  pw.print(prefix);
  pw.print("realActivity=");
  pw.println(realActivity.flattenToShortString());
  pw.print(prefix);
  pw.print("baseDir=");
  pw.println(baseDir);
  if (!resDir.equals(baseDir)) {
    pw.print(prefix);
    pw.print("resDir=");
    pw.println(resDir);
  }
  pw.print(prefix);
  pw.print("dataDir=");
  pw.println(dataDir);
  pw.print(prefix);
  pw.print("stateNotNeeded=");
  pw.print(stateNotNeeded);
  pw.print(" componentSpecified=");
  pw.print(componentSpecified);
  pw.print(" mActivityType=");
  pw.println(mActivityType);
  pw.print(prefix);
  pw.print("compat=");
  pw.print(compat);
  pw.print(" labelRes=0x");
  pw.print(Integer.toHexString(labelRes));
  pw.print(" icon=0x");
  pw.print(Integer.toHexString(icon));
  pw.print(" theme=0x");
  pw.println(Integer.toHexString(theme));
  pw.print(prefix);
  pw.print("config=");
  pw.println(configuration);
  if (resultTo != null || resultWho != null) {
    pw.print(prefix);
    pw.print("resultTo=");
    pw.print(resultTo);
    pw.print(" resultWho=");
    pw.print(resultWho);
    pw.print(" resultCode=");
    pw.println(requestCode);
  }
  if (results != null) {
    pw.print(prefix);
    pw.print("results=");
    pw.println(results);
  }
  if (pendingResults != null && pendingResults.size() > 0) {
    pw.print(prefix);
    pw.println("Pending Results:");
    for (    WeakReference<PendingIntentRecord> wpir : pendingResults) {
      PendingIntentRecord pir=wpir != null ? wpir.get() : null;
      pw.print(prefix);
      pw.print("  - ");
      if (pir == null) {
        pw.println("null");
      }
 else {
        pw.println(pir);
        pir.dump(pw,prefix + "    ");
      }
    }
  }
  if (newIntents != null && newIntents.size() > 0) {
    pw.print(prefix);
    pw.println("Pending New Intents:");
    for (int i=0; i < newIntents.size(); i++) {
      Intent intent=newIntents.get(i);
      pw.print(prefix);
      pw.print("  - ");
      if (intent == null) {
        pw.println("null");
      }
 else {
        pw.println(intent.toShortString(false,true,false,true));
      }
    }
  }
  if (pendingOptions != null) {
    pw.print(prefix);
    pw.print("pendingOptions=");
    pw.println(pendingOptions);
  }
  if (uriPermissions != null) {
    if (uriPermissions.readUriPermissions != null) {
      pw.print(prefix);
      pw.print("readUriPermissions=");
      pw.println(uriPermissions.readUriPermissions);
    }
    if (uriPermissions.writeUriPermissions != null) {
      pw.print(prefix);
      pw.print("writeUriPermissions=");
      pw.println(uriPermissions.writeUriPermissions);
    }
  }
  pw.print(prefix);
  pw.print("launchFailed=");
  pw.print(launchFailed);
  pw.print(" launchCount=");
  pw.print(launchCount);
  pw.print(" lastLaunchTime=");
  if (lastLaunchTime == 0)   pw.print("0");
 else   TimeUtils.formatDuration(lastLaunchTime,now,pw);
  pw.println();
  pw.print(prefix);
  pw.print("haveState=");
  pw.print(haveState);
  pw.print(" icicle=");
  pw.println(icicle);
  pw.print(prefix);
  pw.print("state=");
  pw.print(state);
  pw.print(" stopped=");
  pw.print(stopped);
  pw.print(" delayedResume=");
  pw.print(delayedResume);
  pw.print(" finishing=");
  pw.println(finishing);
  pw.print(prefix);
  pw.print("keysPaused=");
  pw.print(keysPaused);
  pw.print(" inHistory=");
  pw.print(inHistory);
  pw.print(" visible=");
  pw.print(visible);
  pw.print(" sleeping=");
  pw.print(sleeping);
  pw.print(" idle=");
  pw.println(idle);
  pw.print(prefix);
  pw.print("fullscreen=");
  pw.print(fullscreen);
  pw.print(" noDisplay=");
  pw.print(noDisplay);
  pw.print(" immersive=");
  pw.print(immersive);
  pw.print(" launchMode=");
  pw.println(launchMode);
  pw.print(prefix);
  pw.print("frozenBeforeDestroy=");
  pw.print(frozenBeforeDestroy);
  pw.print(" thumbnailNeeded=");
  pw.print(thumbnailNeeded);
  pw.print(" forceNewConfig=");
  pw.println(forceNewConfig);
  pw.print(prefix);
  pw.print("thumbHolder: ");
  pw.print(Integer.toHexString(System.identityHashCode(thumbHolder)));
  if (thumbHolder != null) {
    pw.print(" bm=");
    pw.print(thumbHolder.lastThumbnail);
    pw.print(" desc=");
    pw.print(thumbHolder.lastDescription);
  }
  pw.println();
  if (displayStartTime != 0 || startTime != 0) {
    pw.print(prefix);
    pw.print("displayStartTime=");
    if (displayStartTime == 0)     pw.print("0");
 else     TimeUtils.formatDuration(displayStartTime,now,pw);
    pw.print(" startTime=");
    if (startTime == 0)     pw.print("0");
 else     TimeUtils.formatDuration(startTime,now,pw);
    pw.println();
  }
  if (lastVisibleTime != 0 || waitingVisible || nowVisible) {
    pw.print(prefix);
    pw.print("waitingVisible=");
    pw.print(waitingVisible);
    pw.print(" nowVisible=");
    pw.print(nowVisible);
    pw.print(" lastVisibleTime=");
    if (lastVisibleTime == 0)     pw.print("0");
 else     TimeUtils.formatDuration(lastVisibleTime,now,pw);
    pw.println();
  }
  if (configDestroy || configChangeFlags != 0) {
    pw.print(prefix);
    pw.print("configDestroy=");
    pw.print(configDestroy);
    pw.print(" configChangeFlags=");
    pw.println(Integer.toHexString(configChangeFlags));
  }
  if (connections != null) {
    pw.print(prefix);
    pw.print("connections=");
    pw.println(connections);
  }
}
