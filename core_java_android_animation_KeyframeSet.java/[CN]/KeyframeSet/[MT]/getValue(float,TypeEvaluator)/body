{
  if (mNumKeyframes == 2) {
    if (mInterpolator != null) {
      fraction=mInterpolator.getInterpolation(fraction);
    }
    return evaluator.evaluate(fraction,mFirstKeyframe.getValue(),mLastKeyframe.getValue());
  }
  if (fraction <= 0f) {
    final Keyframe nextKeyframe=mKeyframes.get(1);
    final TimeInterpolator interpolator=nextKeyframe.getInterpolator();
    if (interpolator != null) {
      fraction=interpolator.getInterpolation(fraction);
    }
    final float prevFraction=mFirstKeyframe.getFraction();
    float intervalFraction=(fraction - prevFraction) / (nextKeyframe.getFraction() - prevFraction);
    return evaluator.evaluate(intervalFraction,mFirstKeyframe.getValue(),nextKeyframe.getValue());
  }
 else   if (fraction >= 1f) {
    final Keyframe prevKeyframe=mKeyframes.get(mNumKeyframes - 2);
    final TimeInterpolator interpolator=mLastKeyframe.getInterpolator();
    if (interpolator != null) {
      fraction=interpolator.getInterpolation(fraction);
    }
    final float prevFraction=prevKeyframe.getFraction();
    float intervalFraction=(fraction - prevFraction) / (mLastKeyframe.getFraction() - prevFraction);
    return evaluator.evaluate(intervalFraction,prevKeyframe.getValue(),mLastKeyframe.getValue());
  }
  Keyframe prevKeyframe=mFirstKeyframe;
  for (int i=1; i < mNumKeyframes; ++i) {
    Keyframe nextKeyframe=mKeyframes.get(i);
    if (fraction < nextKeyframe.getFraction()) {
      final TimeInterpolator interpolator=nextKeyframe.getInterpolator();
      if (interpolator != null) {
        fraction=interpolator.getInterpolation(fraction);
      }
      final float prevFraction=prevKeyframe.getFraction();
      float intervalFraction=(fraction - prevFraction) / (nextKeyframe.getFraction() - prevFraction);
      return evaluator.evaluate(intervalFraction,prevKeyframe.getValue(),nextKeyframe.getValue());
    }
    prevKeyframe=nextKeyframe;
  }
  return mLastKeyframe.getValue();
}
