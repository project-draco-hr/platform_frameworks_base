{
  ProcessRecord proc=null;
synchronized (mService.mPidsSelfLocked) {
    for (int i=0; i < mService.mPidsSelfLocked.size(); i++) {
      ProcessRecord p=mService.mPidsSelfLocked.valueAt(i);
      if (p.uid != uid) {
        continue;
      }
      if (p.pid == initialPid) {
        proc=p;
        break;
      }
      if (p.pkgList.containsKey(packageName)) {
        proc=p;
      }
    }
  }
  if (proc == null) {
    Slog.w(TAG,"crashApplication: nothing for uid=" + uid + " initialPid="+ initialPid+ " packageName="+ packageName);
    return;
  }
  if (proc.thread != null) {
    if (proc.pid == Process.myPid()) {
      Log.w(TAG,"crashApplication: trying to crash self!");
      return;
    }
    long ident=Binder.clearCallingIdentity();
    try {
      proc.thread.scheduleCrash(message);
    }
 catch (    RemoteException e) {
    }
 finally {
      Binder.restoreCallingIdentity(ident);
    }
  }
}
