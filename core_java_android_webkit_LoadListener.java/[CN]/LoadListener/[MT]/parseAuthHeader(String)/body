{
  if (header != null) {
    int posMax=256;
    int posLen=0;
    int[] pos=new int[posMax];
    int headerLen=header.length();
    if (headerLen > 0) {
      boolean quoted=false;
      for (int i=0; i < headerLen && posLen < posMax; ++i) {
        if (header.charAt(i) == '\"') {
          quoted=!quoted;
        }
 else {
          if (!quoted) {
            if (header.startsWith(HttpAuthHeader.BASIC_TOKEN,i)) {
              pos[posLen++]=i;
              continue;
            }
            if (header.startsWith(HttpAuthHeader.DIGEST_TOKEN,i)) {
              pos[posLen++]=i;
              continue;
            }
          }
        }
      }
    }
    if (posLen > 0) {
      for (int i=0; i < posLen; i++) {
        if (header.startsWith(HttpAuthHeader.DIGEST_TOKEN,pos[i])) {
          String sub=header.substring(pos[i],(i + 1 < posLen ? pos[i + 1] : headerLen));
          HttpAuthHeader rval=new HttpAuthHeader(sub);
          if (rval.isSupportedScheme()) {
            return rval;
          }
        }
      }
      for (int i=0; i < posLen; i++) {
        if (header.startsWith(HttpAuthHeader.BASIC_TOKEN,pos[i])) {
          String sub=header.substring(pos[i],(i + 1 < posLen ? pos[i + 1] : headerLen));
          HttpAuthHeader rval=new HttpAuthHeader(sub);
          if (rval.isSupportedScheme()) {
            return rval;
          }
        }
      }
    }
  }
  return null;
}
