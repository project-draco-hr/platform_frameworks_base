{
  for (  Element element : AnnotationUtil.getElementsAnnotatedWith(roundEnv,BindingConversion.class)) {
    if (element.getKind() != ElementKind.METHOD || !element.getModifiers().contains(Modifier.STATIC) || !element.getModifiers().contains(Modifier.PUBLIC)) {
      processingEnv.getMessager().printMessage(Diagnostic.Kind.ERROR,"@BindingConversion is only allowed on public static methods: " + element);
      continue;
    }
    ExecutableElement executableElement=(ExecutableElement)element;
    if (executableElement.getParameters().size() != 1) {
      processingEnv.getMessager().printMessage(Diagnostic.Kind.ERROR,"@BindingConversion method should have one parameter: " + element);
      continue;
    }
    if (executableElement.getReturnType().getKind() == TypeKind.VOID) {
      processingEnv.getMessager().printMessage(Diagnostic.Kind.ERROR,"@BindingConversion method must return a value: " + element);
      continue;
    }
    processingEnv.getMessager().printMessage(Diagnostic.Kind.NOTE,"added conversion: " + element);
    store.addConversionMethod(executableElement);
  }
}
