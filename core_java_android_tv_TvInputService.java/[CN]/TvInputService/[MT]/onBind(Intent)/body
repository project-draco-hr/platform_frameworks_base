{
  return new ITvInputService.Stub(){
    @Override public void registerCallback(    ITvInputServiceCallback cb){
      if (cb != null) {
        mCallbacks.register(cb);
        try {
          cb.onAvailabilityChanged(mComponentName,mAvailable);
        }
 catch (        RemoteException e) {
          Log.e(TAG,"error in onAvailabilityChanged",e);
        }
      }
    }
    @Override public void unregisterCallback(    ITvInputServiceCallback cb){
      if (cb != null) {
        mCallbacks.unregister(cb);
      }
    }
    @Override public void createSession(    ITvInputSessionCallback cb){
      if (cb != null) {
        mHandler.obtainMessage(ServiceHandler.DO_CREATE_SESSION,cb).sendToTarget();
      }
    }
  }
;
}
