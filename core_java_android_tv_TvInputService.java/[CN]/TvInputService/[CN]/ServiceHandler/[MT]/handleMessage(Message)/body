{
switch (msg.what) {
case DO_CREATE_SESSION:
{
      ITvInputSessionCallback cb=(ITvInputSessionCallback)msg.obj;
      try {
        TvInputSessionImpl sessionImpl=onCreateSession();
        if (sessionImpl == null) {
          cb.onSessionCreated(null);
          return;
        }
        ITvInputSession stub=new ITvInputSessionWrapper(TvInputService.this,sessionImpl);
        cb.onSessionCreated(stub);
      }
 catch (      RemoteException e) {
        Log.e(TAG,"error in onSessionCreated");
      }
      return;
    }
case DO_BROADCAST_AVAILABILITY_CHANGE:
{
    boolean isAvailable=(Boolean)msg.obj;
    int n=mCallbacks.beginBroadcast();
    try {
      for (int i=0; i < n; i++) {
        mCallbacks.getBroadcastItem(i).onAvailabilityChanged(mComponentName,isAvailable);
      }
    }
 catch (    RemoteException e) {
      Log.e(TAG,"Unexpected exception",e);
    }
 finally {
      mCallbacks.finishBroadcast();
    }
    return;
  }
default :
{
  Log.w(TAG,"Unhandled message code: " + msg.what);
  return;
}
}
}
