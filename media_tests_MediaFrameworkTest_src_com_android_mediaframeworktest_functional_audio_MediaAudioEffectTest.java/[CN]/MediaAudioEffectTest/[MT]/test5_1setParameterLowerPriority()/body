{
  boolean result=false;
  String msg="test5_1setParameterLowerPriority()";
  AudioEffect effect1=null;
  AudioEffect effect2=null;
  try {
    effect1=new AudioEffect(AudioEffect.EFFECT_TYPE_EQUALIZER,AudioEffect.EFFECT_TYPE_NULL,0,0);
    effect2=new AudioEffect(AudioEffect.EFFECT_TYPE_EQUALIZER,AudioEffect.EFFECT_TYPE_NULL,1,0);
    assertNotNull(msg + ": could not create AudioEffect",effect1);
    assertNotNull(msg + ": could not create AudioEffect",effect2);
    int status=effect2.setParameter(Equalizer.PARAM_CURRENT_PRESET,(short)0);
    assertEquals(msg + ": Effect2 setParameter failed",AudioEffect.SUCCESS,status);
    status=effect1.setParameter(Equalizer.PARAM_CURRENT_PRESET,(short)1);
    assertEquals(msg + ": Effect1 setParameter did not fail",AudioEffect.ERROR_INVALID_OPERATION,status);
    short[] value=new short[1];
    status=effect2.getParameter(Equalizer.PARAM_CURRENT_PRESET,value);
    assertFalse(msg + ": Effect2 getParameter failed",AudioEffect.isError(status));
    assertEquals(msg + ": Effect1 changed parameter",(short)0,value[0]);
    result=true;
  }
 catch (  IllegalArgumentException e) {
    msg=msg.concat(": Effect not found");
    result=false;
  }
catch (  UnsupportedOperationException e) {
    msg=msg.concat(": Effect library not loaded");
    result=false;
  }
 finally {
    if (effect1 != null) {
      effect1.release();
    }
    if (effect2 != null) {
      effect2.release();
    }
  }
  assertTrue(msg,result);
}
