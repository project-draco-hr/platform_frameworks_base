{
  Future<Void> future;
  Future<Void> futureGuest;
  expectSetUidNetworkRules(UID_A,true);
  expectSetUidForeground(UID_A,false);
  expectSetUidNetworkRules(UID_A_GUEST,true);
  expectSetUidForeground(UID_A_GUEST,false);
  future=expectRulesChanged(UID_A,RULE_REJECT_METERED);
  futureGuest=expectRulesChanged(UID_A_GUEST,RULE_REJECT_METERED);
  replay();
  mService.setAppPolicy(APP_ID_A,POLICY_REJECT_METERED_BACKGROUND);
  future.get();
  futureGuest.get();
  verifyAndReset();
  expectSetUidNetworkRules(UID_A,false);
  expectSetUidForeground(UID_A,false);
  expectSetUidNetworkRules(UID_A_GUEST,false);
  expectSetUidForeground(UID_A_GUEST,false);
  future=expectRulesChanged(UID_A,RULE_ALLOW_ALL);
  futureGuest=expectRulesChanged(UID_A_GUEST,RULE_ALLOW_ALL);
  replay();
  final Intent intent=new Intent(ACTION_UID_REMOVED);
  intent.putExtra(EXTRA_UID,UID_A);
  mServiceContext.sendBroadcast(intent);
  future.get();
  futureGuest.get();
  verifyAndReset();
}
