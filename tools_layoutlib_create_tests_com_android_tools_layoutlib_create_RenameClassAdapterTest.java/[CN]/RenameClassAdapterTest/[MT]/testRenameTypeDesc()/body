{
  assertEquals("I",mOuter.renameTypeDesc("I"));
  assertEquals("D",mOuter.renameTypeDesc("D"));
  assertEquals("V",mOuter.renameTypeDesc("V"));
  assertEquals("Lcom.package.MyClass;",mOuter.renameTypeDesc("Lcom.package.MyClass;"));
  assertEquals("Lcom.package.MyClass;",mInner.renameTypeDesc("Lcom.package.MyClass;"));
  assertEquals("Lorg.blah.New;",mOuter.renameTypeDesc("Lcom.pack.Old;"));
  assertEquals("Lorg.blah.New$Inner;",mInner.renameTypeDesc("Lcom.pack.Old$Inner;"));
  assertEquals("Lorg.blah.New$Other;",mOuter.renameTypeDesc("Lcom.pack.Old$Other;"));
  assertEquals("Lorg.blah.New$Other;",mInner.renameTypeDesc("Lcom.pack.Old$Other;"));
  assertEquals("[Lorg.blah.New;",mOuter.renameTypeDesc("[Lcom.pack.Old;"));
  assertEquals("[[Lorg.blah.New;",mOuter.renameTypeDesc("[[Lcom.pack.Old;"));
  assertEquals("[Lorg.blah.New;",mInner.renameTypeDesc("[Lcom.pack.Old;"));
  assertEquals("[[Lorg.blah.New;",mInner.renameTypeDesc("[[Lcom.pack.Old;"));
}
