{
  if (!canShowAlertDialog(context)) {
    Log.w(TAG,"Cannot create a dialog, the WebView context is not an Activity");
    mResult.cancel();
    return;
  }
  String title, displayMessage;
  int positiveTextId, negativeTextId;
  if (mType == UNLOAD) {
    title=context.getString(com.android.internal.R.string.js_dialog_before_unload_title);
    displayMessage=context.getString(com.android.internal.R.string.js_dialog_before_unload,mMessage);
    positiveTextId=com.android.internal.R.string.js_dialog_before_unload_positive_button;
    negativeTextId=com.android.internal.R.string.js_dialog_before_unload_negative_button;
  }
 else {
    title=getJsDialogTitle(context);
    displayMessage=mMessage;
    positiveTextId=com.android.internal.R.string.ok;
    negativeTextId=com.android.internal.R.string.cancel;
  }
  AlertDialog.Builder builder=new AlertDialog.Builder(context);
  builder.setTitle(title);
  builder.setOnCancelListener(new CancelListener());
  if (mType != PROMPT) {
    builder.setMessage(displayMessage);
    builder.setPositiveButton(positiveTextId,new PositiveListener(null));
  }
 else {
    final View view=LayoutInflater.from(context).inflate(com.android.internal.R.layout.js_prompt,null);
    EditText edit=((EditText)view.findViewById(com.android.internal.R.id.value));
    edit.setText(mDefaultValue);
    builder.setPositiveButton(positiveTextId,new PositiveListener(edit));
    ((TextView)view.findViewById(com.android.internal.R.id.message)).setText(mMessage);
    builder.setView(view);
  }
  if (mType != ALERT) {
    builder.setNegativeButton(negativeTextId,new CancelListener());
  }
  builder.show();
}
