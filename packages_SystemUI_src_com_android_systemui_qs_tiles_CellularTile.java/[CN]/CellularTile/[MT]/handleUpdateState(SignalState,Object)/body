{
  CallbackInfo cb=(CallbackInfo)arg;
  if (cb == null) {
    cb=mSignalCallback.mInfo;
  }
  final Resources r=mContext.getResources();
  final int iconId=cb.noSim ? R.drawable.ic_qs_no_sim : !cb.enabled || cb.airplaneModeEnabled ? R.drawable.ic_qs_signal_disabled : cb.mobileSignalIconId > 0 ? cb.mobileSignalIconId : R.drawable.ic_qs_signal_no_signal;
  state.icon=ResourceIcon.get(iconId);
  state.isOverlayIconWide=cb.isDataTypeIconWide;
  state.autoMirrorDrawable=!cb.noSim;
  state.overlayIconId=cb.enabled && (cb.dataTypeIconId > 0) ? cb.dataTypeIconId : 0;
  state.filter=iconId != R.drawable.ic_qs_no_sim;
  state.activityIn=cb.enabled && cb.activityIn;
  state.activityOut=cb.enabled && cb.activityOut;
  state.label=cb.enabled ? removeTrailingPeriod(cb.enabledDesc) : r.getString(R.string.quick_settings_rssi_emergency_only);
  final String signalContentDesc=cb.enabled && (cb.mobileSignalIconId > 0) ? cb.signalContentDescription : r.getString(R.string.accessibility_no_signal);
  if (cb.noSim) {
    state.contentDescription=state.label;
  }
 else {
    String enabledDesc=cb.enabled ? r.getString(R.string.accessibility_cell_data_on) : r.getString(R.string.accessibility_cell_data_off);
    state.contentDescription=r.getString(R.string.accessibility_quick_settings_mobile,enabledDesc,signalContentDesc,state.label);
    state.minimalContentDescription=r.getString(R.string.accessibility_quick_settings_mobile,r.getString(R.string.accessibility_cell_data),signalContentDesc,state.label);
  }
  state.contentDescription=state.contentDescription + "," + r.getString(R.string.accessibility_quick_settings_open_settings,getTileLabel());
  state.minimalAccessibilityClassName=state.expandedAccessibilityClassName=Button.class.getName();
  state.value=mDataController.isMobileDataSupported() && mDataController.isMobileDataEnabled();
}
