{
  int expectedTop=mListView.getChildAt(0).getTop();
  final Button topButton=(Button)getChildOfItem(0,0);
  int counter=0;
  while (getTopOfChildOfItem(0,2) > mListBottom) {
    if (counter > 5)     fail("couldn't reach next button within " + counter + " downs");
    if (getBottomOfChildOfItem(0,0) < mListTop) {
      assertFalse("after " + counter + " downs, top button not visible, should not have focus",topButton.isFocused());
      assertFalse("after " + counter + " downs, neither top button nor botom button visible, nothng within first list "+ "item should have focus",mListView.getChildAt(0).hasFocus());
    }
 else {
      assertTrue("after " + counter + " downs, top button still visible, should have focus",topButton.isFocused());
    }
    assertEquals("after " + counter + " downs, "+ "should have panned by max scroll amount",expectedTop,mListView.getChildAt(0).getTop());
    sendKeys(KeyEvent.KEYCODE_DPAD_DOWN);
    expectedTop-=mListView.getMaxScrollAmount();
    counter++;
  }
  assertTrue("second button should have focus",getChildOfItem(0,2).isFocused());
}
