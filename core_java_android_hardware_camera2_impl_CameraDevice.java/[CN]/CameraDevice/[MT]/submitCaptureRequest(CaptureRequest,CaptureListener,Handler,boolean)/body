{
  if (listener != null) {
    handler=checkHandler(handler);
  }
synchronized (mLock) {
    checkIfCameraClosed();
    int requestId;
    if (repeating) {
      stopRepeating();
    }
    try {
      requestId=mRemoteDevice.submitRequest(request,repeating);
    }
 catch (    CameraRuntimeException e) {
      throw e.asChecked();
    }
catch (    RemoteException e) {
      return -1;
    }
    if (listener != null) {
      mCaptureListenerMap.put(requestId,new CaptureListenerHolder(listener,request,handler,repeating));
    }
    if (repeating) {
      mRepeatingRequestId=requestId;
    }
    if (mIdle) {
      mDeviceHandler.post(mCallOnActive);
    }
    mIdle=false;
    return requestId;
  }
}
