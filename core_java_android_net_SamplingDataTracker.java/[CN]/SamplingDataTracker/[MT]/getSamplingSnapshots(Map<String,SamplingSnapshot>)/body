{
  BufferedReader reader=null;
  try {
    reader=new BufferedReader(new FileReader("/proc/net/dev"));
    String line;
    reader.readLine();
    reader.readLine();
    while ((line=reader.readLine()) != null) {
      line=line.trim();
      String[] tokens=line.split("[ ]+");
      if (tokens.length < 17) {
        continue;
      }
      String currentIface=tokens[0].split(":")[0];
      if (DBG)       Slog.d(TAG,"Found data for interface " + currentIface);
      if (mapIfaceToSample.containsKey(currentIface)) {
        try {
          SamplingSnapshot ss=new SamplingSnapshot();
          ss.mTxByteCount=Long.parseLong(tokens[1]);
          ss.mTxPacketCount=Long.parseLong(tokens[2]);
          ss.mTxPacketErrorCount=Long.parseLong(tokens[3]);
          ss.mRxByteCount=Long.parseLong(tokens[9]);
          ss.mRxPacketCount=Long.parseLong(tokens[10]);
          ss.mRxPacketErrorCount=Long.parseLong(tokens[11]);
          ss.mTimestamp=SystemClock.elapsedRealtime();
          if (DBG) {
            Slog.d(TAG,"Interface = " + currentIface);
            Slog.d(TAG,"ByteCount = " + String.valueOf(ss.mTxByteCount));
            Slog.d(TAG,"TxPacketCount = " + String.valueOf(ss.mTxPacketCount));
            Slog.d(TAG,"TxPacketErrorCount = " + String.valueOf(ss.mTxPacketErrorCount));
            Slog.d(TAG,"RxByteCount = " + String.valueOf(ss.mRxByteCount));
            Slog.d(TAG,"RxPacketCount = " + String.valueOf(ss.mRxPacketCount));
            Slog.d(TAG,"RxPacketErrorCount = " + String.valueOf(ss.mRxPacketErrorCount));
            Slog.d(TAG,"Timestamp = " + String.valueOf(ss.mTimestamp));
            Slog.d(TAG,"---------------------------");
          }
          mapIfaceToSample.put(currentIface,ss);
        }
 catch (        NumberFormatException e) {
        }
      }
    }
    if (DBG) {
      Iterator it=mapIfaceToSample.entrySet().iterator();
      while (it.hasNext()) {
        Map.Entry kvpair=(Map.Entry)it.next();
        if (kvpair.getValue() == null) {
          Slog.d(TAG,"could not find snapshot for interface " + kvpair.getKey());
        }
      }
    }
  }
 catch (  FileNotFoundException e) {
    Slog.e(TAG,"could not find /proc/net/dev");
  }
catch (  IOException e) {
    Slog.e(TAG,"could not read /proc/net/dev");
  }
 finally {
    try {
      if (reader != null) {
        reader.close();
      }
    }
 catch (    IOException e) {
      Slog.e(TAG,"could not close /proc/net/dev");
    }
  }
}
