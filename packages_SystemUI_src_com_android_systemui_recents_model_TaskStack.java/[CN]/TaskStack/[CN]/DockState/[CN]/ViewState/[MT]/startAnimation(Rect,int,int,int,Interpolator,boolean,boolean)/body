{
  if (mDockAreaOverlayAnimator != null) {
    mDockAreaOverlayAnimator.cancel();
  }
  ObjectAnimator anim;
  ArrayList<Animator> animators=new ArrayList<>();
  if (dockAreaOverlay.getAlpha() != areaAlpha) {
    if (animateAlpha) {
      anim=ObjectAnimator.ofInt(dockAreaOverlay,Utilities.DRAWABLE_ALPHA,dockAreaOverlay.getAlpha(),areaAlpha);
      anim.setDuration(duration);
      anim.setInterpolator(interpolator);
      animators.add(anim);
    }
 else {
      dockAreaOverlay.setAlpha(areaAlpha);
    }
  }
  if (mHintTextAlpha != hintAlpha) {
    if (animateAlpha) {
      anim=ObjectAnimator.ofInt(this,HINT_ALPHA,mHintTextAlpha,hintAlpha);
      anim.setDuration(150);
      anim.setInterpolator(hintAlpha > mHintTextAlpha ? Interpolators.ALPHA_IN : Interpolators.ALPHA_OUT);
      animators.add(anim);
    }
 else {
      mHintTextAlpha=hintAlpha;
      dockAreaOverlay.invalidateSelf();
    }
  }
  if (bounds != null && !dockAreaOverlay.getBounds().equals(bounds)) {
    if (animateBounds) {
      PropertyValuesHolder prop=PropertyValuesHolder.ofObject(Utilities.DRAWABLE_RECT,Utilities.RECT_EVALUATOR,new Rect(dockAreaOverlay.getBounds()),bounds);
      anim=ObjectAnimator.ofPropertyValuesHolder(dockAreaOverlay,prop);
      anim.setDuration(duration);
      anim.setInterpolator(interpolator);
      animators.add(anim);
    }
 else {
      dockAreaOverlay.setBounds(bounds);
    }
  }
  if (!animators.isEmpty()) {
    mDockAreaOverlayAnimator=new AnimatorSet();
    mDockAreaOverlayAnimator.playTogether(animators);
    mDockAreaOverlayAnimator.start();
  }
}
