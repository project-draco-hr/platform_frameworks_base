{
  final Intent shutdownIntent=new Intent(Intent.ACTION_SHUTDOWN);
  final IIntentReceiver shutdownReceiver=new IIntentReceiver.Stub(){
    @Override public void performReceive(    Intent intent,    int resultCode,    String data,    Bundle extras,    boolean ordered,    boolean sticky,    int sendingUser){
      mHandler.post(new Runnable(){
        @Override public void run(){
          finishUserStopped(uss);
        }
      }
);
    }
  }
;
synchronized (mService) {
    if (uss.state != UserState.STATE_STOPPING) {
      return;
    }
    uss.setState(UserState.STATE_SHUTDOWN);
  }
  getUserManagerInternal().setUserUnlockingOrUnlocked(userId,false);
  mService.mBatteryStatsService.noteEvent(BatteryStats.HistoryItem.EVENT_USER_RUNNING_FINISH,Integer.toString(userId),userId);
  mService.mSystemServiceManager.stopUser(userId);
synchronized (mService) {
    mService.broadcastIntentLocked(null,null,shutdownIntent,null,shutdownReceiver,0,null,null,null,AppOpsManager.OP_NONE,null,true,false,MY_PID,SYSTEM_UID,userId);
  }
}
