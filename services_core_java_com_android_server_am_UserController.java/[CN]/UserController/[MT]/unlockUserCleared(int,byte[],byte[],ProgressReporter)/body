{
synchronized (mService) {
    final UserState uss=mStartedUsers.get(userId);
switch (uss.state) {
case STATE_RUNNING_UNLOCKING:
case STATE_RUNNING_UNLOCKED:
      progress.finish();
    return true;
}
}
if (!isUserKeyUnlocked(userId)) {
final UserInfo userInfo=getUserInfo(userId);
final IMountService mountService=getMountService();
try {
  mountService.unlockUserKey(userId,userInfo.serialNumber,token,secret);
}
 catch (RemoteException|RuntimeException e) {
  Slog.w(TAG,"Failed to unlock: " + e.getMessage());
  progress.finish();
  return false;
}
}
synchronized (mService) {
final UserState uss=mStartedUsers.get(userId);
finishUserUnlocking(uss,progress);
for (int i=0; i < mStartedUsers.size(); i++) {
  final int testUserId=mStartedUsers.keyAt(i);
  final UserInfo parent=getUserManager().getProfileParent(testUserId);
  if (parent != null && parent.id == userId && testUserId != userId) {
    Slog.d(TAG,"User " + testUserId + " (parent "+ parent.id+ "): attempting unlock because parent was just unlocked");
    maybeUnlockUser(testUserId);
  }
}
}
return true;
}
