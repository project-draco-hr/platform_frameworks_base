{
  final int userId=uss.mHandle.getIdentifier();
synchronized (mService) {
    if (mStartedUsers.get(uss.mHandle.getIdentifier()) != uss)     return;
    if (!isUserKeyUnlocked(userId))     return;
    if (uss.setState(STATE_RUNNING_LOCKED,STATE_RUNNING_UNLOCKING)) {
      progress.setProgress(5,mService.mContext.getString(R.string.android_start_title));
      mUserManager.onBeforeUnlockUser(userId);
      progress.setProgress(20);
      mHandler.sendMessage(mHandler.obtainMessage(SYSTEM_USER_UNLOCK_MSG,userId,0));
      final Intent unlockedIntent=new Intent(Intent.ACTION_USER_UNLOCKED);
      unlockedIntent.putExtra(Intent.EXTRA_USER_HANDLE,userId);
      unlockedIntent.addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY | Intent.FLAG_RECEIVER_FOREGROUND);
      mService.broadcastIntentLocked(null,null,unlockedIntent,null,null,0,null,null,null,AppOpsManager.OP_NONE,null,false,false,MY_PID,SYSTEM_UID,userId);
      if (getUserInfo(userId).isManagedProfile()) {
        UserInfo parent=getUserManager().getProfileParent(userId);
        if (parent != null) {
          final Intent profileUnlockedIntent=new Intent(Intent.ACTION_MANAGED_PROFILE_UNLOCKED);
          profileUnlockedIntent.putExtra(Intent.EXTRA_USER,UserHandle.of(userId));
          profileUnlockedIntent.addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY | Intent.FLAG_RECEIVER_FOREGROUND);
          mService.broadcastIntentLocked(null,null,profileUnlockedIntent,null,null,0,null,null,null,AppOpsManager.OP_NONE,null,false,false,MY_PID,SYSTEM_UID,parent.id);
        }
      }
      final UserInfo info=getUserInfo(userId);
      if (!Objects.equals(info.lastLoggedInFingerprint,Build.FINGERPRINT)) {
        progress.startSegment(80);
        new PreBootBroadcaster(mService,userId,progress){
          @Override public void onFinished(){
            finishUserUnlocked(uss,progress);
          }
        }
.sendNext();
      }
 else {
        finishUserUnlocked(uss,progress);
      }
    }
  }
}
