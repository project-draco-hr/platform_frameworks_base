{
  int mode=MeasureSpec.getMode(widthMeasureSpec);
  boolean hasIcon=mRightIcon.getVisibility() != GONE;
  if (hasIcon && mode != MeasureSpec.UNSPECIFIED) {
    measureChild(mActions,widthMeasureSpec,heightMeasureSpec);
    int size=MeasureSpec.getSize(widthMeasureSpec);
    int height=MeasureSpec.getSize(heightMeasureSpec);
    size=size - mActions.getMeasuredWidth();
    ViewGroup.MarginLayoutParams layoutParams=(MarginLayoutParams)mRightIcon.getLayoutParams();
    size-=layoutParams.getMarginEnd();
    size=Math.min(size,mMaxImageSize);
    size=Math.max(size,mRightIcon.getMinimumWidth());
    layoutParams.width=size;
    layoutParams.height=size;
    layoutParams.topMargin=height - size - mImageMarginBottom;
    if (layoutParams.topMargin >= mImageMinTopMargin) {
      resetHeaderIndention();
    }
 else {
      int paddingEnd=mNotificationContentImageMarginEnd;
      ViewGroup.MarginLayoutParams headerParams=(MarginLayoutParams)mHeader.getLayoutParams();
      headerParams.setMarginEnd(size + layoutParams.getMarginEnd());
      if (mHeader.getPaddingEnd() != paddingEnd) {
        mHeader.setPadding(isLayoutRtl() ? paddingEnd : mHeader.getPaddingLeft(),mHeader.getPaddingTop(),isLayoutRtl() ? mHeader.getPaddingLeft() : paddingEnd,mHeader.getPaddingBottom());
        mHeader.setLayoutParams(headerParams);
      }
    }
    mRightIcon.setLayoutParams(layoutParams);
  }
 else   if (!hasIcon && mHeader.getPaddingEnd() != mNotificationContentMarginEnd) {
    resetHeaderIndention();
  }
  super.onMeasure(widthMeasureSpec,heightMeasureSpec);
}
