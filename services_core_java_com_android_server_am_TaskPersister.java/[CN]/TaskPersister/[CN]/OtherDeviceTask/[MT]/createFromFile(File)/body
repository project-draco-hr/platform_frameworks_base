{
  if (file == null || !file.exists()) {
    if (DEBUG_RESTORER)     Slog.d(TAG,"createFromFile: file=" + file + " doesn't exist.");
    return null;
  }
  BufferedReader reader=null;
  try {
    reader=new BufferedReader(new FileReader(file));
    final XmlPullParser in=Xml.newPullParser();
    in.setInput(reader);
    int event;
    while (((event=in.next()) != XmlPullParser.END_DOCUMENT) && event != XmlPullParser.START_TAG) {
    }
    if (event == XmlPullParser.START_TAG) {
      final String name=in.getName();
      if (TAG_TASK.equals(name)) {
        ComponentName componentName=null;
        int taskId=INVALID_TASK_ID;
        int taskAffiliation=INVALID_TASK_ID;
        for (int j=in.getAttributeCount() - 1; j >= 0; --j) {
          final String attrName=in.getAttributeName(j);
          final String attrValue=in.getAttributeValue(j);
          if (TaskRecord.ATTR_REALACTIVITY.equals(attrName)) {
            componentName=ComponentName.unflattenFromString(attrValue);
          }
 else           if (TaskRecord.ATTR_TASKID.equals(attrName)) {
            taskId=Integer.valueOf(attrValue);
          }
 else           if (TaskRecord.ATTR_TASK_AFFILIATION.equals(attrName)) {
            taskAffiliation=Integer.valueOf(attrValue);
          }
        }
        if (componentName == null || taskId == INVALID_TASK_ID) {
          if (DEBUG_RESTORER)           Slog.e(TAG,"createFromFile: FAILED componentName=" + componentName + " taskId="+ taskId+ " file="+ file);
          return null;
        }
        if (DEBUG_RESTORER)         Slog.d(TAG,"creating OtherDeviceTask from file=" + file.getName() + " componentName="+ componentName+ " taskId="+ taskId);
        return new OtherDeviceTask(file,componentName,taskId,taskAffiliation);
      }
 else {
        Slog.wtf(TAG,"createFromFile: Unknown xml event=" + event + " name="+ name);
      }
    }
 else {
      Slog.wtf(TAG,"createFromFile: Unable to find start tag in file=" + file);
    }
  }
 catch (  IOException|XmlPullParserException e) {
    Slog.wtf(TAG,"Unable to parse " + file + ". Error ",e);
  }
 finally {
    IoUtils.closeQuietly(reader);
  }
  return null;
}
