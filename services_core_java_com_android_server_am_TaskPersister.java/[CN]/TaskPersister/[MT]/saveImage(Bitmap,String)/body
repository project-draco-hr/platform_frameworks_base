{
synchronized (this) {
    int queueNdx;
    for (queueNdx=mWriteQueue.size() - 1; queueNdx >= 0; --queueNdx) {
      final WriteQueueItem item=mWriteQueue.get(queueNdx);
      if (item instanceof ImageWriteQueueItem) {
        ImageWriteQueueItem imageWriteQueueItem=(ImageWriteQueueItem)item;
        if (imageWriteQueueItem.mFilename.equals(filename)) {
          imageWriteQueueItem.mImage=image;
          break;
        }
      }
    }
    if (queueNdx < 0) {
      mWriteQueue.add(new ImageWriteQueueItem(filename,image));
    }
    if (mWriteQueue.size() > MAX_WRITE_QUEUE_LENGTH) {
      mNextWriteTime=FLUSH_QUEUE;
    }
 else     if (mNextWriteTime == 0) {
      mNextWriteTime=SystemClock.uptimeMillis() + PRE_TASK_DELAY_MS;
    }
    if (DEBUG_PERSISTER)     Slog.d(TAG,"saveImage: filename=" + filename + " now="+ SystemClock.uptimeMillis()+ " mNextWriteTime="+ mNextWriteTime+ " Callers="+ Debug.getCallers(4));
    notifyAll();
  }
  yieldIfQueueTooDeep();
}
