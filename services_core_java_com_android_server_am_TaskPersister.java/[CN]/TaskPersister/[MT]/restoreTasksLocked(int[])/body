{
  final ArrayList<TaskRecord> tasks=new ArrayList<TaskRecord>();
  for (  int userId : validUserIds) {
    tasks.addAll(restoreTasksForUserLocked(userId));
  }
  for (int taskNdx=tasks.size() - 1; taskNdx >= 0; --taskNdx) {
    final TaskRecord task=tasks.get(taskNdx);
    task.setPrevAffiliate(taskIdToTask(task.mPrevAffiliateTaskId,tasks));
    task.setNextAffiliate(taskIdToTask(task.mNextAffiliateTaskId,tasks));
  }
  TaskRecord[] tasksArray=new TaskRecord[tasks.size()];
  tasks.toArray(tasksArray);
  Arrays.sort(tasksArray,new Comparator<TaskRecord>(){
    @Override public int compare(    TaskRecord lhs,    TaskRecord rhs){
      final long diff=rhs.mLastTimeMoved - lhs.mLastTimeMoved;
      if (diff < 0) {
        return -1;
      }
 else       if (diff > 0) {
        return +1;
      }
 else {
        return 0;
      }
    }
  }
);
  return new ArrayList<TaskRecord>(Arrays.asList(tasksArray));
}
