{
synchronized (mOtherDeviceTasksMap) {
    final long now=System.currentTimeMillis();
    if (mOtherDeviceTasksMap.isEmpty() || now < mExpiredTasksCleanupTime) {
      return;
    }
    long earliestNonExpiredMtime=now;
    mExpiredTasksCleanupTime=Long.MAX_VALUE;
    for (int i=mOtherDeviceTasksMap.size() - 1; i >= 0; i--) {
      List<List<OtherDeviceTask>> chains=mOtherDeviceTasksMap.valueAt(i);
      for (int j=chains.size() - 1; j >= 0; j--) {
        List<OtherDeviceTask> chain=chains.get(j);
        boolean removeChain=true;
        for (int k=chain.size() - 1; k >= 0; k--) {
          OtherDeviceTask task=chain.get(k);
          final long taskLastModified=task.mFile.lastModified();
          if ((taskLastModified + MAX_INSTALL_WAIT_TIME) > now) {
            if (earliestNonExpiredMtime > taskLastModified) {
              earliestNonExpiredMtime=taskLastModified;
            }
            removeChain=false;
          }
        }
        if (removeChain) {
          for (int k=chain.size() - 1; k >= 0; k--) {
            final File file=chain.get(k).mFile;
            if (DEBUG_RESTORER)             Slog.d(TAG,"Deleting expired file=" + file.getName() + " mapped to not installed component="+ chain.get(k).mComponentName);
            file.delete();
          }
          chains.remove(j);
        }
      }
      if (chains.isEmpty()) {
        final String packageName=mOtherDeviceTasksMap.keyAt(i);
        mOtherDeviceTasksMap.removeAt(i);
        if (DEBUG_RESTORER)         Slog.d(TAG,"Removed package=" + packageName + " from task map");
      }
    }
    if (!mOtherDeviceTasksMap.isEmpty()) {
      mExpiredTasksCleanupTime=earliestNonExpiredMtime + MAX_INSTALL_WAIT_TIME;
      if (DEBUG_RESTORER)       Slog.d(TAG,"Reset expiration time to " + DateUtils.formatDateTime(mService.mContext,mExpiredTasksCleanupTime,DateUtils.FORMAT_SHOW_DATE | DateUtils.FORMAT_SHOW_TIME));
    }
  }
}
