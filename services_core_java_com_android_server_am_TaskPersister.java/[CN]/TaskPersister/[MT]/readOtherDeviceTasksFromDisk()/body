{
synchronized (mOtherDeviceTasksMap) {
    mOtherDeviceTasksMap.clear();
    mExpiredTasksCleanupTime=Long.MAX_VALUE;
    final File[] taskFiles;
    if (!sRestoredTasksDir.exists() || (taskFiles=sRestoredTasksDir.listFiles()) == null) {
      return;
    }
    long earliestMtime=System.currentTimeMillis();
    SparseArray<List<OtherDeviceTask>> tasksByAffiliateIds=new SparseArray<>(taskFiles.length);
    for (int i=0; i < taskFiles.length; ++i) {
      final File taskFile=taskFiles[i];
      if (DEBUG_RESTORER)       Slog.d(TAG,"readOtherDeviceTasksFromDisk: taskFile=" + taskFile.getName());
      final OtherDeviceTask task=OtherDeviceTask.createFromFile(taskFile);
      if (task == null) {
        if (DEBUG_RESTORER)         Slog.e(TAG,"Unable to create task for file=" + taskFile.getName() + "...deleting file.");
        taskFile.delete();
        continue;
      }
      List<OtherDeviceTask> tasks=tasksByAffiliateIds.get(task.mAffiliatedTaskId);
      if (tasks == null) {
        tasks=new ArrayList<>();
        tasksByAffiliateIds.put(task.mAffiliatedTaskId,tasks);
      }
      tasks.add(task);
      final long taskMtime=taskFile.lastModified();
      if (earliestMtime > taskMtime) {
        earliestMtime=taskMtime;
      }
    }
    if (tasksByAffiliateIds.size() > 0) {
      for (int i=0; i < tasksByAffiliateIds.size(); i++) {
        List<OtherDeviceTask> chain=tasksByAffiliateIds.valueAt(i);
        Collections.sort(chain);
        final String packageName=chain.get(chain.size() - 1).mComponentName.getPackageName();
        List<List<OtherDeviceTask>> chains=mOtherDeviceTasksMap.get(packageName);
        if (chains == null) {
          chains=new ArrayList<>();
          mOtherDeviceTasksMap.put(packageName,chains);
        }
        chains.add(chain);
      }
      mExpiredTasksCleanupTime=earliestMtime + MAX_INSTALL_WAIT_TIME;
      if (DEBUG_RESTORER)       Slog.d(TAG,"Set Expiration time to " + DateUtils.formatDateTime(mService.mContext,mExpiredTasksCleanupTime,DateUtils.FORMAT_SHOW_DATE | DateUtils.FORMAT_SHOW_TIME));
    }
  }
}
