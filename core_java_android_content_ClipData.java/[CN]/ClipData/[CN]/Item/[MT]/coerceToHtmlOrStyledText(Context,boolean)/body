{
  if (mUri != null) {
    String[] types=null;
    try {
      types=context.getContentResolver().getStreamTypes(mUri,"text/*");
    }
 catch (    SecurityException e) {
    }
    boolean hasHtml=false;
    boolean hasText=false;
    if (types != null) {
      for (      String type : types) {
        if ("text/html".equals(type)) {
          hasHtml=true;
        }
 else         if (type.startsWith("text/")) {
          hasText=true;
        }
      }
    }
    if (hasHtml || hasText) {
      FileInputStream stream=null;
      try {
        AssetFileDescriptor descr=context.getContentResolver().openTypedAssetFileDescriptor(mUri,hasHtml ? "text/html" : "text/plain",null);
        stream=descr.createInputStream();
        InputStreamReader reader=new InputStreamReader(stream,"UTF-8");
        StringBuilder builder=new StringBuilder(128);
        char[] buffer=new char[8192];
        int len;
        while ((len=reader.read(buffer)) > 0) {
          builder.append(buffer,0,len);
        }
        String text=builder.toString();
        if (hasHtml) {
          if (styled) {
            try {
              CharSequence newText=Html.fromHtml(text);
              return newText != null ? newText : text;
            }
 catch (            RuntimeException e) {
              return text;
            }
          }
 else {
            return text.toString();
          }
        }
        if (styled) {
          return text;
        }
 else {
          return Html.escapeHtml(text);
        }
      }
 catch (      FileNotFoundException e) {
      }
catch (      IOException e) {
        Log.w("ClipData","Failure loading text",e);
        return Html.escapeHtml(e.toString());
      }
 finally {
        if (stream != null) {
          try {
            stream.close();
          }
 catch (          IOException e) {
          }
        }
      }
    }
    if (styled) {
      return uriToStyledText(mUri.toString());
    }
 else {
      return uriToHtml(mUri.toString());
    }
  }
  if (mIntent != null) {
    if (styled) {
      return uriToStyledText(mIntent.toUri(Intent.URI_INTENT_SCHEME));
    }
 else {
      return uriToHtml(mIntent.toUri(Intent.URI_INTENT_SCHEME));
    }
  }
  return "";
}
