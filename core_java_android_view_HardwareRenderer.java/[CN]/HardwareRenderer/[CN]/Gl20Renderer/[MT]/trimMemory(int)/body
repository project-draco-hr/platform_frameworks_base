{
  if (sEgl == null || sEglConfig == null)   return;
  EGLContext eglContext=sEglContextStorage.get();
  if (eglContext == null) {
    return;
  }
 else {
synchronized (sPbufferLock) {
      if (sPbuffer == null) {
        sPbuffer=sEgl.eglCreatePbufferSurface(sEglDisplay,sEglConfig,new int[]{EGL_WIDTH,1,EGL_HEIGHT,1,EGL_NONE});
      }
    }
    sEgl.eglMakeCurrent(sEglDisplay,sPbuffer,sPbuffer,eglContext);
  }
switch (level) {
case ComponentCallbacks2.TRIM_MEMORY_UI_HIDDEN:
case ComponentCallbacks2.TRIM_MEMORY_BACKGROUND:
case ComponentCallbacks2.TRIM_MEMORY_MODERATE:
    GLES20Canvas.flushCaches(GLES20Canvas.FLUSH_CACHES_MODERATE);
  break;
case ComponentCallbacks2.TRIM_MEMORY_COMPLETE:
GLES20Canvas.flushCaches(GLES20Canvas.FLUSH_CACHES_FULL);
break;
}
}
