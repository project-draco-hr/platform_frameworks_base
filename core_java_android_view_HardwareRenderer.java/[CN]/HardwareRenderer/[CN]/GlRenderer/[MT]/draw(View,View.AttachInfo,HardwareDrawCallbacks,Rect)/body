{
  if (canDraw()) {
    if (!mDirtyRegions) {
      dirty=null;
    }
    attachInfo.mDrawingTime=SystemClock.uptimeMillis();
    attachInfo.mIgnoreDirtyState=true;
    view.mPrivateFlags|=View.DRAWN;
    long startTime;
    if (ViewDebug.DEBUG_PROFILE_DRAWING) {
      startTime=SystemClock.elapsedRealtime();
    }
    final int surfaceState=checkCurrent();
    if (surfaceState != SURFACE_STATE_ERROR) {
      if (surfaceState == SURFACE_STATE_UPDATED) {
        dirty=null;
      }
      onPreDraw(dirty);
      HardwareCanvas canvas=mCanvas;
      attachInfo.mHardwareCanvas=canvas;
      int saveCount=canvas.save();
      callbacks.onHardwarePreDraw(canvas);
      try {
        view.mRecreateDisplayList=(view.mPrivateFlags & View.INVALIDATED) == View.INVALIDATED;
        view.mPrivateFlags&=~View.INVALIDATED;
        DisplayList displayList=view.getDisplayList();
        if (displayList != null) {
          if (canvas.drawDisplayList(displayList,mRedrawClip)) {
            if (mRedrawClip.isEmpty() || view.getParent() == null) {
              view.invalidate();
            }
 else {
              view.getParent().invalidateChild(view,mRedrawClip);
            }
            mRedrawClip.setEmpty();
          }
        }
 else {
          view.draw(canvas);
        }
        if (DEBUG_DIRTY_REGION) {
          if (mDebugPaint == null) {
            mDebugPaint=new Paint();
            mDebugPaint.setColor(0x7fff0000);
          }
          if (dirty != null && (mFrameCount++ & 1) == 0) {
            canvas.drawRect(dirty,mDebugPaint);
          }
        }
      }
  finally {
        callbacks.onHardwarePostDraw(canvas);
        canvas.restoreToCount(saveCount);
        view.mRecreateDisplayList=false;
      }
      onPostDraw();
      if (ViewDebug.DEBUG_PROFILE_DRAWING) {
        EventLog.writeEvent(60000,SystemClock.elapsedRealtime() - startTime);
      }
      attachInfo.mIgnoreDirtyState=false;
      sEgl.eglSwapBuffers(sEglDisplay,mEglSurface);
      checkEglErrors();
    }
  }
}
