{
  boolean value;
  boolean changed=false;
  String profiling=SystemProperties.get(PROFILE_PROPERTY);
  int graphType=Arrays.binarySearch(VISUALIZERS,profiling);
  value=graphType >= 0;
  if (graphType != mProfileVisualizerType) {
    changed=true;
    mProfileVisualizerType=graphType;
    mProfileShapes=null;
    mProfilePaint=null;
    if (value) {
      mDebugDataProvider=new DrawPerformanceDataProvider(graphType);
    }
 else {
      mDebugDataProvider=null;
    }
  }
  if (!value) {
    value=Boolean.parseBoolean(profiling);
  }
  if (value != mProfileEnabled) {
    changed=true;
    mProfileEnabled=value;
    if (mProfileEnabled) {
      Log.d(LOG_TAG,"Profiling hardware renderer");
      int maxProfileFrames=SystemProperties.getInt(PROFILE_MAXFRAMES_PROPERTY,PROFILE_MAX_FRAMES);
      mProfileData=new float[maxProfileFrames * PROFILE_FRAME_DATA_COUNT];
      for (int i=0; i < mProfileData.length; i+=PROFILE_FRAME_DATA_COUNT) {
        mProfileData[i]=mProfileData[i + 1]=mProfileData[i + 2]=-1;
      }
      mProfileLock=new ReentrantLock();
    }
 else {
      mProfileData=null;
      mProfileLock=null;
      mProfileVisualizerType=-1;
    }
    mProfileCurrentFrame=-PROFILE_FRAME_DATA_COUNT;
  }
  value=SystemProperties.getBoolean(DEBUG_DIRTY_REGIONS_PROPERTY,false);
  if (value != mDebugDirtyRegions) {
    changed=true;
    mDebugDirtyRegions=value;
    if (mDebugDirtyRegions) {
      Log.d(LOG_TAG,"Debugging dirty regions");
    }
  }
  value=SystemProperties.getBoolean(HardwareRenderer.DEBUG_SHOW_OVERDRAW_PROPERTY,false);
  if (value != mShowOverdraw) {
    changed=true;
    mShowOverdraw=value;
  }
  if (nLoadProperties()) {
    changed=true;
  }
  return changed;
}
