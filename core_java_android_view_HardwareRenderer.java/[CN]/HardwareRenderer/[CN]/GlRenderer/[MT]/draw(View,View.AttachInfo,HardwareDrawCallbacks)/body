{
  if (canDraw()) {
    attachInfo.mDrawingTime=SystemClock.uptimeMillis();
    attachInfo.mIgnoreDirtyState=true;
    view.mPrivateFlags|=View.DRAWN;
    long startTime;
    if (ViewDebug.DEBUG_PROFILE_DRAWING) {
      startTime=SystemClock.elapsedRealtime();
    }
    if (checkCurrent()) {
      onPreDraw();
      HardwareCanvas canvas=mCanvas;
      attachInfo.mHardwareCanvas=canvas;
      int saveCount=canvas.save();
      callbacks.onHardwarePreDraw(canvas);
      try {
        view.mRecreateDisplayList=(view.mPrivateFlags & View.INVALIDATED) == View.INVALIDATED;
        view.mPrivateFlags&=~View.INVALIDATED;
        DisplayList displayList=view.getDisplayList();
        if (displayList != null) {
          if (canvas.drawDisplayList(displayList)) {
            view.invalidate();
          }
        }
 else {
          view.draw(canvas);
        }
      }
  finally {
        callbacks.onHardwarePostDraw(canvas);
        canvas.restoreToCount(saveCount);
        view.mRecreateDisplayList=false;
      }
      onPostDraw();
      if (ViewDebug.DEBUG_PROFILE_DRAWING) {
        EventLog.writeEvent(60000,SystemClock.elapsedRealtime() - startTime);
      }
      attachInfo.mIgnoreDirtyState=false;
      sEgl.eglSwapBuffers(sEglDisplay,mEglSurface);
      checkEglErrors();
    }
  }
}
