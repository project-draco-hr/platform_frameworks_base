{
  super(context);
  Properties prop=new Properties();
  try {
    prop.loadFromXML(new FileInputStream("/sdcard/mediadump/prop.xml"));
  }
 catch (  java.io.IOException e) {
    Log.e(TAG,e.getMessage(),e);
  }
  try {
    mStartX=Integer.parseInt(prop.getProperty("startX"));
    mStartY=Integer.parseInt(prop.getProperty("startY"));
    mWidth=Integer.parseInt(prop.getProperty("width"));
    mHeight=Integer.parseInt(prop.getProperty("height"));
    mBytesPerPixel=Integer.parseInt(prop.getProperty("bytesPerPixel"));
    mFrameRate=Integer.parseInt(prop.getProperty("frameRate"));
  }
 catch (  java.lang.NumberFormatException e) {
    Log.e(TAG,e.getMessage(),e);
  }
  mBytesPerLine=mWidth * mBytesPerPixel;
  mBytesPerImage=mHeight * mBytesPerLine;
  mFlipBuf=ByteBuffer.allocate(mBytesPerImage);
  mBitmap=Bitmap.createBitmap(mWidth,mHeight,mBytesPerPixel == 2 ? Bitmap.Config.RGB_565 : Bitmap.Config.ARGB_8888);
  mImageList=new ArrayList<String>();
  try {
    BufferedReader reader=new BufferedReader(new FileReader("/sdcard/mediadump/images.lst"));
    String line;
    while ((line=reader.readLine()) != null) {
      mImageList.add(line);
    }
    reader.close();
  }
 catch (  java.io.IOException e) {
    Log.e(TAG,e.getMessage(),e);
  }
  mMediaController=new MediaController(context);
  mTimer=new Timer();
  LoadImage();
}
