{
  if (TextUtils.isEmpty(timeZone)) {
    if (DEBUG) {
      Log.d(TAG,"Empty time zone, nothing to be done.");
    }
    return;
  }
  boolean updatePrefs=false;
synchronized (mTZCallbacks) {
    if (CalendarCache.TIMEZONE_TYPE_AUTO.equals(timeZone)) {
      if (mUseHomeTZ) {
        updatePrefs=true;
      }
      mUseHomeTZ=false;
    }
 else {
      if (!mUseHomeTZ || !TextUtils.equals(mHomeTZ,timeZone)) {
        updatePrefs=true;
      }
      mUseHomeTZ=true;
      mHomeTZ=timeZone;
    }
  }
  if (updatePrefs) {
    SharedPreferences prefs=getSharedPreferences(context,mPrefsName);
    setSharedPreference(prefs,KEY_HOME_TZ_ENABLED,mUseHomeTZ);
    setSharedPreference(prefs,KEY_HOME_TZ,mHomeTZ);
    ContentValues values=new ContentValues();
    if (mHandler != null) {
      mHandler.cancelOperation(mToken);
    }
    mHandler=new AsyncTZHandler(context.getContentResolver());
    if (++mToken == 0) {
      mToken=1;
    }
    values.put(CalendarCache.VALUE,mUseHomeTZ ? CalendarCache.TIMEZONE_TYPE_HOME : CalendarCache.TIMEZONE_TYPE_AUTO);
    mHandler.startUpdate(mToken,null,CalendarCache.URI,values,CalendarCache.WHERE,TIMEZONE_TYPE_ARGS);
    if (mUseHomeTZ) {
      ContentValues values2=new ContentValues();
      values2.put(CalendarCache.VALUE,mHomeTZ);
      mHandler.startUpdate(mToken,null,CalendarCache.URI,values2,CalendarCache.WHERE,TIMEZONE_INSTANCES_ARGS);
    }
  }
}
