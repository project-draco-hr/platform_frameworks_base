{
  Types typeUtil=getTypeUtils();
  TypeMirror foundInterface=null;
  if (typeUtil.isSameType(interfaceType,typeUtil.erasure(mTypeMirror))) {
    foundInterface=mTypeMirror;
  }
 else {
    ArrayList<TypeMirror> toCheck=new ArrayList<>();
    toCheck.add(mTypeMirror);
    while (!toCheck.isEmpty()) {
      TypeMirror typeMirror=toCheck.remove(0);
      if (typeUtil.isSameType(interfaceType,typeUtil.erasure(typeMirror))) {
        foundInterface=typeMirror;
        break;
      }
 else {
        toCheck.addAll(typeUtil.directSupertypes(typeMirror));
      }
    }
    if (foundInterface == null) {
      L.e("Detected " + interfaceType + " type for "+ mTypeMirror+ ", but not able to find the implemented interface.");
      return null;
    }
  }
  if (foundInterface.getKind() != TypeKind.DECLARED) {
    L.e("Found " + interfaceType + " type for "+ mTypeMirror+ ", but it isn't a declared type: "+ foundInterface);
    return null;
  }
  return (DeclaredType)foundInterface;
}
