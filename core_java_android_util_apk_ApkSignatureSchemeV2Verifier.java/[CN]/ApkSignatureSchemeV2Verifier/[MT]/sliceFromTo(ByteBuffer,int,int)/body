{
  if (start < 0) {
    throw new IllegalArgumentException("start: " + start);
  }
  if (end < start) {
    throw new IllegalArgumentException("end < start: " + end + " < "+ start);
  }
  int capacity=source.capacity();
  if (end > source.capacity()) {
    throw new IllegalArgumentException("end > capacity: " + end + " > "+ capacity);
  }
  int originalLimit=source.limit();
  int originalPosition=source.position();
  try {
    source.position(0);
    source.limit(end);
    source.position(start);
    ByteBuffer result=source.slice();
    result.order(source.order());
    return result;
  }
  finally {
    source.position(0);
    source.limit(originalLimit);
    source.position(originalPosition);
  }
}
