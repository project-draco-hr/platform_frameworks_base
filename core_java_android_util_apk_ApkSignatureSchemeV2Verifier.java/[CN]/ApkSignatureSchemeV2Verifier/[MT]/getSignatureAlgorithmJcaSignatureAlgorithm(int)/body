{
switch (sigAlgorithm) {
case SIGNATURE_RSA_PSS_WITH_SHA256:
    return Pair.create("SHA256withRSA/PSS",new PSSParameterSpec("SHA-256","MGF1",MGF1ParameterSpec.SHA256,256 / 8,1));
case SIGNATURE_RSA_PSS_WITH_SHA512:
  return Pair.create("SHA512withRSA/PSS",new PSSParameterSpec("SHA-512","MGF1",MGF1ParameterSpec.SHA512,512 / 8,1));
case SIGNATURE_RSA_PKCS1_V1_5_WITH_SHA256:
return Pair.create("SHA256withRSA",null);
case SIGNATURE_RSA_PKCS1_V1_5_WITH_SHA512:
return Pair.create("SHA512withRSA",null);
case SIGNATURE_ECDSA_WITH_SHA256:
return Pair.create("SHA256withECDSA",null);
case SIGNATURE_ECDSA_WITH_SHA512:
return Pair.create("SHA512withECDSA",null);
case SIGNATURE_DSA_WITH_SHA256:
return Pair.create("SHA256withDSA",null);
case SIGNATURE_DSA_WITH_SHA512:
return Pair.create("SHA512withDSA",null);
default :
throw new IllegalArgumentException("Unknown signature algorithm: 0x" + Long.toHexString(sigAlgorithm & 0xffffffff));
}
}
