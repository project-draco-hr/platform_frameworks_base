{
  int appId=UserId.getAppId(uid);
  final PackageSetting pkgSetting=mPackages.get(packageName);
  if (pkgSetting == null) {
    throw new IllegalArgumentException("Unknown package: " + packageName);
  }
  if (!allowedByPermission && (appId != pkgSetting.appId)) {
    throw new SecurityException("Permission Denial: attempt to change stopped state from pid=" + Binder.getCallingPid() + ", uid="+ uid+ ", package uid="+ pkgSetting.appId);
  }
  if (DEBUG_STOPPED) {
    if (stopped) {
      RuntimeException e=new RuntimeException("here");
      e.fillInStackTrace();
      Slog.i(TAG,"Stopping package " + packageName,e);
    }
  }
  if (pkgSetting.getStopped(userId) != stopped) {
    pkgSetting.setStopped(stopped,userId);
    if (pkgSetting.getNotLaunched(userId)) {
      if (pkgSetting.installerPackageName != null) {
        PackageManagerService.sendPackageBroadcast(Intent.ACTION_PACKAGE_FIRST_LAUNCH,pkgSetting.name,null,pkgSetting.installerPackageName,null,userId);
      }
      pkgSetting.setNotLaunched(false,userId);
    }
    return true;
  }
  return false;
}
