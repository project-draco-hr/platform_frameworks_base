{
  List<ResolveInfo> ri=service.mActivities.queryIntent(intent,intent.getType(),flags,0);
  if (PackageManagerService.DEBUG_PREFERRED)   Log.d(TAG,"Queried " + intent + " results: "+ ri);
  int match=0;
  if (ri != null && ri.size() > 1) {
    boolean haveAct=false;
    boolean haveNonSys=false;
    ComponentName[] set=new ComponentName[ri.size()];
    for (int i=0; i < ri.size(); i++) {
      ActivityInfo ai=ri.get(i).activityInfo;
      set[i]=new ComponentName(ai.packageName,ai.name);
      if ((ai.applicationInfo.flags & ApplicationInfo.FLAG_SYSTEM) == 0) {
        if (PackageManagerService.DEBUG_PREFERRED)         Log.d(TAG,"Result " + ai.packageName + "/"+ ai.name+ ": non-system!");
        haveNonSys=true;
        break;
      }
 else       if (cn.getPackageName().equals(ai.packageName) && cn.getClassName().equals(ai.name)) {
        if (PackageManagerService.DEBUG_PREFERRED)         Log.d(TAG,"Result " + ai.packageName + "/"+ ai.name+ ": default!");
        haveAct=true;
        match=ri.get(i).match;
      }
 else {
        if (PackageManagerService.DEBUG_PREFERRED)         Log.d(TAG,"Result " + ai.packageName + "/"+ ai.name+ ": skipped");
      }
    }
    if (haveAct && !haveNonSys) {
      IntentFilter filter=new IntentFilter();
      if (intent.getAction() != null) {
        filter.addAction(intent.getAction());
      }
      for (      String cat : intent.getCategories()) {
        filter.addCategory(cat);
      }
      if ((flags & PackageManager.MATCH_DEFAULT_ONLY) != 0) {
        filter.addCategory(Intent.CATEGORY_DEFAULT);
      }
      if (scheme != null) {
        filter.addDataScheme(scheme);
      }
      if (ssp != null) {
        filter.addDataSchemeSpecificPart(ssp.getPath(),ssp.getType());
      }
      if (auth != null) {
        filter.addDataAuthority(auth);
      }
      if (path != null) {
        filter.addDataPath(path);
      }
      PreferredActivity pa=new PreferredActivity(filter,match,set,cn,true);
      editPreferredActivitiesLPw(userId).addFilter(pa);
    }
 else     if (!haveNonSys) {
      Slog.w(TAG,"No component found for default preferred activity " + cn);
    }
  }
}
