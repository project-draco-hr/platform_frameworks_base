{
  mFormat=ImageFormat.YUV_420_888;
  mTimestamp=timestamp;
  mIsImageValid=true;
  mIsReadOnly=buffer.isReadOnly();
  mBuffer=buffer.duplicate();
  mXOffset=xOffset;
  mYOffset=yOffset;
  mInfo=info;
  if (info.remaining() == 104) {
    int type=info.getInt();
    if (type != TYPE_YUV) {
      throw new UnsupportedOperationException("unsupported type: " + type);
    }
    int numPlanes=info.getInt();
    if (numPlanes != 3) {
      throw new RuntimeException("unexpected number of planes: " + numPlanes);
    }
    mWidth=info.getInt();
    mHeight=info.getInt();
    if (mWidth < 1 || mHeight < 1) {
      throw new UnsupportedOperationException("unsupported size: " + mWidth + "x"+ mHeight);
    }
    int bitDepth=info.getInt();
    if (bitDepth != 8) {
      throw new UnsupportedOperationException("unsupported bit depth: " + bitDepth);
    }
    int bitDepthAllocated=info.getInt();
    if (bitDepthAllocated != 8) {
      throw new UnsupportedOperationException("unsupported allocated bit depth: " + bitDepthAllocated);
    }
    mPlanes=new MediaPlane[numPlanes];
    for (int ix=0; ix < numPlanes; ix++) {
      int planeOffset=info.getInt();
      int colInc=info.getInt();
      int rowInc=info.getInt();
      int horiz=info.getInt();
      int vert=info.getInt();
      if (horiz != vert || horiz != (ix == 0 ? 1 : 2)) {
        throw new UnsupportedOperationException("unexpected subsampling: " + horiz + "x"+ vert+ " on plane "+ ix);
      }
      if (colInc < 1 || rowInc < 1) {
        throw new UnsupportedOperationException("unexpected strides: " + colInc + " pixel, "+ rowInc+ " row on plane "+ ix);
      }
      buffer.clear();
      buffer.position(mBuffer.position() + planeOffset + (xOffset / horiz) * colInc + (yOffset / vert) * rowInc);
      buffer.limit(buffer.position() + Utils.divUp(bitDepth,8) + (mHeight / vert - 1) * rowInc + (mWidth / horiz - 1) * colInc);
      mPlanes[ix]=new MediaPlane(buffer.slice(),rowInc,colInc);
    }
  }
 else {
    throw new UnsupportedOperationException("unsupported info length: " + info.remaining());
  }
  if (cropRect == null) {
    cropRect=new Rect(0,0,mWidth,mHeight);
  }
  cropRect.offset(-xOffset,-yOffset);
  super.setCropRect(cropRect);
}
