{
  NetworkCapabilities netCap=networkCapabilitiesForFeature(networkType,feature);
  if (netCap == null) {
    Log.d(TAG,"Can't satisfy startUsingNetworkFeature for " + networkType + ", "+ feature);
    return PhoneConstants.APN_REQUEST_FAILED;
  }
  NetworkRequest request=null;
synchronized (sLegacyRequests) {
    if (LEGACY_DBG) {
      Log.d(TAG,"Looking for legacyRequest for netCap with hash: " + netCap + " ("+ netCap.hashCode()+ ")");
      Log.d(TAG,"sLegacyRequests has:");
      for (      NetworkCapabilities nc : sLegacyRequests.keySet()) {
        Log.d(TAG,"  " + nc + " ("+ nc.hashCode()+ ")");
      }
    }
    LegacyRequest l=sLegacyRequests.get(netCap);
    if (l != null) {
      Log.d(TAG,"renewing startUsingNetworkFeature request " + l.networkRequest);
      renewRequestLocked(l);
      if (l.currentNetwork != null) {
        return PhoneConstants.APN_ALREADY_ACTIVE;
      }
 else {
        return PhoneConstants.APN_REQUEST_STARTED;
      }
    }
    request=requestNetworkForFeatureLocked(netCap);
  }
  if (request != null) {
    Log.d(TAG,"starting startUsingNetworkFeature for request " + request);
    return PhoneConstants.APN_REQUEST_STARTED;
  }
 else {
    Log.d(TAG," request Failed");
    return PhoneConstants.APN_REQUEST_FAILED;
  }
}
