{
  int count=0;
synchronized (mLock) {
    mListening=true;
    mLock.notifyAll();
  }
  boolean terminate=false;
  for (; ; ) {
    count++;
    try (Socket instance=mServerSocket.accept()){
      try (BufferedReader in=new BufferedReader(new InputStreamReader(instance.getInputStream(),StandardCharsets.UTF_8))){
        boolean detected=false;
        StringBuilder sb=new StringBuilder();
        String s;
        while ((s=in.readLine()) != null) {
          sb.append(s).append('\n');
          if (!detected && s.startsWith("GET")) {
            String[] segments=s.split(" ");
            if (segments.length == 3 && segments[2].startsWith("HTTP/") && segments[1].regionMatches(1,mPath,0,mPath.length())) {
              detected=true;
            }
          }
          if (s.length() == 0) {
            break;
          }
        }
        Log.d(TAG,"Redirect receive: " + sb);
        String response=null;
        if (detected) {
          response=status(OSUOperationStatus.UserInputComplete);
          if (response == null) {
            response=GoodBye;
            terminate=true;
          }
        }
        try (BufferedWriter out=new BufferedWriter(new OutputStreamWriter(instance.getOutputStream(),StandardCharsets.UTF_8))){
          out.write(HTTPResponseHeader);
          if (response != null) {
            out.write(response);
          }
        }
         if (terminate) {
          break;
        }
 else         if (count > MaxRetry) {
          status(OSUOperationStatus.UserInputAborted);
          break;
        }
      }
     }
 catch (    IOException ioe) {
      if (mAborted) {
        return;
      }
 else       if (count > MaxRetry) {
        status(OSUOperationStatus.UserInputAborted);
        break;
      }
    }
  }
}
