{
  FontRenderContext f=font.mMetrics.getFontRenderContext();
  FontRenderContext frc=new FontRenderContext(f.getTransform(),mPaint.isAntiAliased(),f.usesFractionalMetrics());
  GlyphVector gv=font.mFont.layoutGlyphVector(frc,mText,start,limit,flag);
  int ng=gv.getNumGlyphs();
  int[] ci=gv.getGlyphCharIndices(0,ng,null);
  if (advances != null) {
    for (int i=0; i < ng; i++) {
      int adv_idx=advancesIndex + ci[i];
      advances[adv_idx]+=gv.getGlyphMetrics(i).getAdvanceX();
    }
  }
  if (draw && mGraphics != null) {
    mGraphics.drawGlyphVector(gv,mBounds.right,mBaseline);
  }
  Rectangle2D awtBounds=gv.getLogicalBounds();
  RectF bounds=awtRectToAndroidRect(awtBounds,mBounds.right,mBaseline);
  if (Math.abs(mBounds.right - mBounds.left) == 0) {
    mBounds=bounds;
  }
 else {
    mBounds.union(bounds);
  }
}
