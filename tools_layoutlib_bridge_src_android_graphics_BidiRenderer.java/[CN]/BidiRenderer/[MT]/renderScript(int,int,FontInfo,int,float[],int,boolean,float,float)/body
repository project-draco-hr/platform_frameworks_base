{
  List<FontInfo> fonts=paint.getFonts();
  if (fonts == null || preferredFont == null) {
    return x;
  }
  while (start < limit) {
    boolean foundFont=false;
    int canDisplayUpTo=preferredFont.mFont.canDisplayUpTo(text,start,limit);
    if (canDisplayUpTo == -1) {
      return render(start,limit,preferredFont,flag,advances,advancesIndex,draw,x,y);
    }
 else     if (canDisplayUpTo > start) {
      x=render(start,canDisplayUpTo,preferredFont,flag,advances,advancesIndex,draw,x,y);
      advancesIndex+=canDisplayUpTo - start;
      start=canDisplayUpTo;
    }
    int charCount=Character.isHighSurrogate(text[start]) ? 2 : 1;
    for (    FontInfo font : fonts) {
      canDisplayUpTo=font.mFont.canDisplayUpTo(text,start,start + charCount);
      if (canDisplayUpTo == -1) {
        x=render(start,start + charCount,font,flag,advances,advancesIndex,draw,x,y);
        start+=charCount;
        advancesIndex+=charCount;
        foundFont=true;
        break;
      }
    }
    if (!foundFont) {
      x=render(start,start + charCount,preferredFont,flag,advances,advancesIndex,draw,x,y);
      start+=charCount;
      advancesIndex+=charCount;
    }
  }
  return x;
}
