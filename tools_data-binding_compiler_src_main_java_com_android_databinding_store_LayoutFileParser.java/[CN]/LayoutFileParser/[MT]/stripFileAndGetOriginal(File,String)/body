{
  L.d("parsing resource file %s",xml.getAbsolutePath());
  DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();
  DocumentBuilder builder=factory.newDocumentBuilder();
  Document doc=builder.parse(xml);
  XPathFactory xPathFactory=XPathFactory.newInstance();
  XPath xPath=xPathFactory.newXPath();
  final XPathExpression commentElementExpr=xPath.compile("//comment()[starts-with(., \" From: file:\")][last()]");
  final NodeList commentElementNodes=(NodeList)commentElementExpr.evaluate(doc,XPathConstants.NODESET);
  L.d("comment element nodes count %s",commentElementNodes.getLength());
  if (commentElementNodes.getLength() == 0) {
    L.d("cannot find comment element to find the actual file");
    return null;
  }
  final Node first=commentElementNodes.item(0);
  String actualFilePath=first.getNodeValue().substring(" From: file:".length()).trim();
  L.d("actual file to parse: %s",actualFilePath);
  File actualFile=new File(actualFilePath);
  if (!actualFile.canRead()) {
    L.d("cannot find original, skipping. %s",actualFile.getAbsolutePath());
    return null;
  }
  boolean changed=getVariableNodes(doc,xPath).size() > 0 || getImportNodes(doc,xPath).size() > 0;
  if (changed) {
    stripBindingTags(xml,binderId);
  }
  return actualFile;
}
