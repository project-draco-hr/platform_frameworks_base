{
  ArrayList<Path> paths=new ArrayList();
  Path path=null;
  float minx=0, miny=0;
  float mX=0, mY=0;
  for (int i=0; i < instance.vector.length; i+=2) {
    float x=instance.vector[i];
    float y=instance.vector[i + 1];
    if (x < minx)     minx=x;
    if (y < miny)     miny=y;
    if (path == null) {
      path=new Path();
      path.moveTo(x,y);
      mX=x;
      mY=y;
    }
 else {
      float dx=Math.abs(x - mX);
      float dy=Math.abs(y - mY);
      if (dx >= 3 || dy >= 3) {
        path.quadTo(mX,mY,(x + mX) / 2,(y + mY) / 2);
        mX=x;
        mY=y;
      }
    }
  }
  Matrix matrix=new Matrix();
  matrix.setTranslate(-minx + 10,-miny + 10);
  path.transform(matrix);
  paths.add(path);
  path=new Path();
  path.moveTo(instance.vector[0] - 5,instance.vector[1] - 5);
  path.lineTo(instance.vector[0] - 5,instance.vector[1] + 5);
  path.lineTo(instance.vector[0] + 5,instance.vector[1] + 5);
  path.lineTo(instance.vector[0] + 5,instance.vector[1] - 5);
  path.close();
  path.transform(matrix);
  paths.add(path);
  return paths;
}
