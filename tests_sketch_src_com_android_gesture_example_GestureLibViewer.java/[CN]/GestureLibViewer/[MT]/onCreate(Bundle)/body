{
  super.onCreate(savedInstanceState);
  setContentView(R.layout.gestureviewer);
  mGesturePad=(GestureOverlayView)findViewById(R.id.drawingpad);
  mGesturePad.setEnabled(false);
  mGesureStore=GestureLibraries.fromFile(GestureEntry.GESTURE_FILE_NAME);
  mGesureStore.load();
  mGestureCategory=(Spinner)findViewById(R.id.spinner);
  ArrayList<String> list=new ArrayList<String>();
  if (!mGesureStore.getGestureEntries().isEmpty()) {
    list.addAll(mGesureStore.getGestureEntries());
    Collections.sort(list);
    ArrayAdapter<String> adapter=new ArrayAdapter<String>(this,android.R.layout.simple_spinner_item,list);
    adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
    mGestureCategory.setAdapter(adapter);
    mGestures=mGesureStore.getGestures(list.get(0));
    mCurrentGestureIndex=0;
    Gesture gesture=mGestures.get(mCurrentGestureIndex);
    mGesturePad.setGesture(gesture);
  }
  mGestureCategory.setOnItemSelectedListener(new OnItemSelectedListener(){
    public void onItemSelected(    AdapterView<?> parent,    View view,    int position,    long id){
      mGestures=mGesureStore.getGestures((String)mGestureCategory.getSelectedItem());
      if (!mGestures.isEmpty()) {
        mCurrentGestureIndex=0;
        Gesture gesture=mGestures.get(mCurrentGestureIndex);
        mGesturePad.setGesture(gesture);
      }
      mGesturePad.invalidate();
    }
    public void onNothingSelected(    AdapterView<?> parent){
    }
  }
);
  Button remove=(Button)findViewById(R.id.remove);
  remove.setOnClickListener(new RemoveGestureListener());
  Button next=(Button)findViewById(R.id.next);
  next.setOnClickListener(new OnClickListener(){
    public void onClick(    View v){
      if (mCurrentGestureIndex >= mGestures.size() - 1) {
        return;
      }
      mCurrentGestureIndex++;
      Gesture gesture=mGestures.get(mCurrentGestureIndex);
      mGesturePad.setGesture(gesture);
      mGesturePad.invalidate();
    }
  }
);
  Button previous=(Button)findViewById(R.id.previous);
  previous.setOnClickListener(new OnClickListener(){
    public void onClick(    View v){
      if (mCurrentGestureIndex >= 1 && !mGestures.isEmpty()) {
        mCurrentGestureIndex--;
        Gesture gesture=mGestures.get(mCurrentGestureIndex);
        mGesturePad.setGesture(gesture);
        mGesturePad.invalidate();
      }
    }
  }
);
}
