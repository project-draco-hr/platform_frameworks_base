{
  ComponentName component=appInfo.getComponentName();
  int appUserId=appInfo.getUser().getIdentifier();
  Intent launchIntent=new Intent(Intent.ACTION_MAIN);
  launchIntent.addCategory(Intent.CATEGORY_LAUNCHER);
  launchIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
  launchIntent.setPackage(component.getPackageName());
  try {
    ActivityInfo info=getPackageManager().getActivityInfo(component,0,appUserId);
    if (info == null) {
      Slog.e(TAG,"Activity " + component + " is not installed.");
      return null;
    }
    if (!info.exported) {
      Slog.e(TAG,"Activity " + component + " doesn't have 'exported' attribute.");
      return null;
    }
  }
 catch (  RemoteException e) {
    Slog.e(TAG,"Failed to get activity info for " + component,e);
    return null;
  }
  List<ResolveInfo> apps=mContext.getPackageManager().queryIntentActivitiesAsUser(launchIntent,0,appUserId);
  final int size=apps.size();
  for (int i=0; i < size; ++i) {
    ActivityInfo activityInfo=apps.get(i).activityInfo;
    if (activityInfo.packageName.equals(component.getPackageName()) && activityInfo.name.equals(component.getClassName())) {
      launchIntent.setComponent(component);
      return launchIntent;
    }
  }
  Slog.e(TAG,"Activity doesn't have category Intent.CATEGORY_LAUNCHER " + component);
  return null;
}
