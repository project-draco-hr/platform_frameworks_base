{
  final int userId=UserHandle.getUserId(Binder.getCallingUid());
  final UserEnvironment userEnv=new UserEnvironment(userId);
  final AppOpsManager appOps=(AppOpsManager)mContext.getSystemService(Context.APP_OPS_SERVICE);
  appOps.checkPackage(Binder.getCallingUid(),callingPkg);
  try {
    appPath=new File(appPath).getCanonicalPath();
  }
 catch (  IOException e) {
    Slog.e(TAG,"Failed to resolve " + appPath + ": "+ e);
    return -1;
  }
  if (!appPath.endsWith("/")) {
    appPath=appPath + "/";
  }
  String voldPath=maybeTranslatePathForVold(appPath,userEnv.buildExternalStorageAppDataDirs(callingPkg),userEnv.buildExternalStorageAppDataDirsForVold(callingPkg));
  if (voldPath != null) {
    try {
      mConnector.execute("volume","mkdirs",voldPath);
      return 0;
    }
 catch (    NativeDaemonConnectorException e) {
      return e.getCode();
    }
  }
  voldPath=maybeTranslatePathForVold(appPath,userEnv.buildExternalStorageAppObbDirs(callingPkg),userEnv.buildExternalStorageAppObbDirsForVold(callingPkg));
  if (voldPath != null) {
    try {
      mConnector.execute("volume","mkdirs",voldPath);
      return 0;
    }
 catch (    NativeDaemonConnectorException e) {
      return e.getCode();
    }
  }
  voldPath=maybeTranslatePathForVold(appPath,userEnv.buildExternalStorageAppMediaDirs(callingPkg),userEnv.buildExternalStorageAppMediaDirsForVold(callingPkg));
  if (voldPath != null) {
    try {
      mConnector.execute("volume","mkdirs",voldPath);
      return 0;
    }
 catch (    NativeDaemonConnectorException e) {
      return e.getCode();
    }
  }
  throw new SecurityException("Invalid mkdirs path: " + appPath);
}
