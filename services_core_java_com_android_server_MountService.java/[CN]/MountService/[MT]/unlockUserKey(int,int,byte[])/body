{
  enforcePermission(android.Manifest.permission.STORAGE_INTERNAL);
  waitForReady();
  if (mLockPatternUtils.isSecure(userId) && ArrayUtils.isEmpty(token)) {
    throw new IllegalStateException("Token required to unlock secure user " + userId);
  }
  final String encodedToken;
  if (ArrayUtils.isEmpty(token)) {
    encodedToken="!";
  }
 else {
    encodedToken=HexDump.toHexString(token);
  }
  try {
    mCryptConnector.execute("cryptfs","unlock_user_key",userId,serialNumber,new SensitiveArg(encodedToken));
  }
 catch (  NativeDaemonConnectorException e) {
    throw e.rethrowAsParcelableException();
  }
synchronized (mLock) {
    mUnlockedUsers=ArrayUtils.appendInt(mUnlockedUsers,userId);
  }
}
