{
  mMetadata.clear();
  FileInputStream fis=null;
  try {
    fis=mMetadataFile.openRead();
    final XmlPullParser in=Xml.newPullParser();
    in.setInput(fis,null);
    int type;
    while ((type=in.next()) != END_DOCUMENT) {
      if (type == START_TAG) {
        final String tag=in.getName();
        if (TAG_VOLUMES.equals(tag)) {
          final int version=readIntAttribute(in,ATTR_VERSION,VERSION_INIT);
          if (version >= VERSION_ADD_PRIMARY) {
            mPrimaryStorageUuid=readStringAttribute(in,ATTR_PRIMARY_STORAGE_UUID);
          }
 else {
            if (SystemProperties.getBoolean(StorageManager.PROP_PRIMARY_PHYSICAL,false)) {
              mPrimaryStorageUuid=StorageManager.UUID_PRIMARY_PHYSICAL;
            }
 else {
              mPrimaryStorageUuid=StorageManager.UUID_PRIVATE_INTERNAL;
            }
          }
        }
 else         if (TAG_VOLUME.equals(tag)) {
          final VolumeMetadata meta=VolumeMetadata.read(in);
          mMetadata.put(meta.fsUuid,meta);
        }
      }
    }
  }
 catch (  FileNotFoundException e) {
  }
catch (  IOException e) {
    Slog.wtf(TAG,"Failed reading metadata",e);
  }
catch (  XmlPullParserException e) {
    Slog.wtf(TAG,"Failed reading metadata",e);
  }
 finally {
    IoUtils.closeQuietly(fis);
  }
}
