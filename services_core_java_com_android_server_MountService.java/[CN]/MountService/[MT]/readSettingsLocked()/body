{
  mRecords.clear();
  mPrimaryStorageUuid=getDefaultPrimaryStorageUuid();
  mForceAdoptable=false;
  FileInputStream fis=null;
  try {
    fis=mSettingsFile.openRead();
    final XmlPullParser in=Xml.newPullParser();
    in.setInput(fis,StandardCharsets.UTF_8.name());
    int type;
    while ((type=in.next()) != END_DOCUMENT) {
      if (type == START_TAG) {
        final String tag=in.getName();
        if (TAG_VOLUMES.equals(tag)) {
          final int version=readIntAttribute(in,ATTR_VERSION,VERSION_INIT);
          final boolean primaryPhysical=SystemProperties.getBoolean(StorageManager.PROP_PRIMARY_PHYSICAL,false);
          final boolean validAttr=(version >= VERSION_FIX_PRIMARY) || (version >= VERSION_ADD_PRIMARY && !primaryPhysical);
          if (validAttr) {
            mPrimaryStorageUuid=readStringAttribute(in,ATTR_PRIMARY_STORAGE_UUID);
          }
          mForceAdoptable=readBooleanAttribute(in,ATTR_FORCE_ADOPTABLE,false);
        }
 else         if (TAG_VOLUME.equals(tag)) {
          final VolumeRecord rec=readVolumeRecord(in);
          mRecords.put(rec.fsUuid,rec);
        }
      }
    }
  }
 catch (  FileNotFoundException e) {
  }
catch (  IOException e) {
    Slog.wtf(TAG,"Failed reading metadata",e);
  }
catch (  XmlPullParserException e) {
    Slog.wtf(TAG,"Failed reading metadata",e);
  }
 finally {
    IoUtils.closeQuietly(fis);
  }
}
