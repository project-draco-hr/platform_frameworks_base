{
  enforcePermission(android.Manifest.permission.MOUNT_UNMOUNT_FILESYSTEMS);
  waitForReady();
  final VolumeInfo vol=findVolumeByIdOrThrow(volId);
  if (vol.isPrimaryPhysical()) {
    final long ident=Binder.clearCallingIdentity();
    try {
synchronized (mUnmountLock) {
        mUnmountSignal=new CountDownLatch(1);
        mPms.updateExternalMediaStatus(false,true);
        waitForLatch(mUnmountSignal,"mUnmountSignal");
        mUnmountSignal=null;
      }
    }
  finally {
      Binder.restoreCallingIdentity(ident);
    }
  }
  try {
    mConnector.execute("volume","unmount",vol.id);
  }
 catch (  NativeDaemonConnectorException e) {
    throw e.rethrowAsParcelableException();
  }
}
