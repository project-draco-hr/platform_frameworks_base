{
  enforcePermission(android.Manifest.permission.MOUNT_UNMOUNT_FILESYSTEMS);
  waitForReady();
  final VolumeInfo vol=findVolumeById(volId);
  if (vol.isPrimary()) {
synchronized (mUnmountLock) {
      mUnmountSignal=new CountDownLatch(1);
      mPms.updateExternalMediaStatus(false,true);
      waitForLatch(mUnmountSignal,"mUnmountSignal");
      mUnmountSignal=null;
    }
  }
  try {
    mConnector.execute("volume","unmount",vol.id);
  }
 catch (  NativeDaemonConnectorException e) {
    throw e.rethrowAsParcelableException();
  }
}
