{
  waitForReady();
  warnOnNotMounted();
  final ObbState existingState;
synchronized (mObbMounts) {
    existingState=mObbPathToStateMap.get(mObbState.rawPath);
  }
  if (existingState == null) {
    sendNewStatusOrIgnore(OnObbStateChangeListener.ERROR_NOT_MOUNTED);
    return;
  }
  if (existingState.ownerGid != mObbState.ownerGid) {
    Slog.w(TAG,"Permission denied attempting to unmount OBB " + existingState.rawPath + " (owned by GID "+ existingState.ownerGid+ ")");
    sendNewStatusOrIgnore(OnObbStateChangeListener.ERROR_PERMISSION_DENIED);
    return;
  }
  int rc=StorageResultCode.OperationSucceeded;
  try {
    final Command cmd=new Command("obb","unmount",mObbState.canonicalPath);
    if (mForceUnmount) {
      cmd.appendArg("force");
    }
    mConnector.execute(cmd);
  }
 catch (  NativeDaemonConnectorException e) {
    int code=e.getCode();
    if (code == VoldResponseCode.OpFailedStorageBusy) {
      rc=StorageResultCode.OperationFailedStorageBusy;
    }
 else     if (code == VoldResponseCode.OpFailedStorageNotFound) {
      rc=StorageResultCode.OperationSucceeded;
    }
 else {
      rc=StorageResultCode.OperationFailedInternalError;
    }
  }
  if (rc == StorageResultCode.OperationSucceeded) {
synchronized (mObbMounts) {
      removeObbStateLocked(existingState);
    }
    sendNewStatusOrIgnore(OnObbStateChangeListener.UNMOUNTED);
  }
 else {
    Slog.w(TAG,"Could not unmount OBB: " + existingState);
    sendNewStatusOrIgnore(OnObbStateChangeListener.ERROR_COULD_NOT_UNMOUNT);
  }
}
