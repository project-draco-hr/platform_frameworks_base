{
  final boolean qwerty=isQwertyMode();
  final int metaState=event.getMetaState();
  final KeyCharacterMap.KeyData possibleChars=new KeyCharacterMap.KeyData();
  final boolean isKeyCodeMapped=event.getKeyData(possibleChars);
  if (!isKeyCodeMapped && (keyCode != KeyEvent.KEYCODE_DEL)) {
    return null;
  }
  final int N=mItems.size();
  for (int i=0; i < N; i++) {
    MenuItemImpl item=mItems.get(i);
    if (item.hasSubMenu()) {
      MenuItemImpl subMenuItem=((MenuBuilder)item.getSubMenu()).findItemWithShortcutForKey(keyCode,event);
      if (subMenuItem != null) {
        return subMenuItem;
      }
    }
    if (qwerty) {
      final char shortcutAlphaChar=item.getAlphabeticShortcut();
      if (((metaState & (KeyEvent.META_SHIFT_ON | KeyEvent.META_SYM_ON)) == 0) && (shortcutAlphaChar != 0) && (shortcutAlphaChar == possibleChars.meta[0] || shortcutAlphaChar == possibleChars.meta[2] || (shortcutAlphaChar == '\b' && keyCode == KeyEvent.KEYCODE_DEL))) {
        return item;
      }
    }
 else {
      final char shortcutNumericChar=item.getNumericShortcut();
      if (((metaState & (KeyEvent.META_SHIFT_ON | KeyEvent.META_SYM_ON)) == 0) && (shortcutNumericChar != 0) && (shortcutNumericChar == possibleChars.meta[0] || shortcutNumericChar == possibleChars.meta[2])) {
        return item;
      }
    }
  }
  return null;
}
