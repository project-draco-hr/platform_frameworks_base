{
  if (reserveActionOverflow != mReserveActionOverflow) {
    mReserveActionOverflow=reserveActionOverflow;
    mIsActionItemsStale=true;
  }
  if (!mIsActionItemsStale) {
    return;
  }
  final ArrayList<MenuItemImpl> visibleItems=getVisibleItems();
  final int itemsSize=visibleItems.size();
  int maxActions=mMaxActionItems;
  int requiredItems=0;
  int requestedItems=0;
  boolean hasOverflow=false;
  for (int i=0; i < itemsSize; i++) {
    MenuItemImpl item=visibleItems.get(i);
    if (item.requiresActionButton()) {
      requiredItems++;
    }
 else     if (item.requestsActionButton()) {
      requestedItems++;
    }
 else {
      hasOverflow=true;
    }
  }
  if (reserveActionOverflow && (hasOverflow || requiredItems + requestedItems > maxActions)) {
    maxActions--;
  }
  maxActions-=requiredItems;
  for (int i=0; i < itemsSize; i++) {
    MenuItemImpl item=visibleItems.get(i);
    if (item.requestsActionButton()) {
      item.setIsActionButton(maxActions > 0);
      maxActions--;
    }
  }
  mActionItems.clear();
  mNonActionItems.clear();
  for (int i=0; i < itemsSize; i++) {
    MenuItemImpl item=visibleItems.get(i);
    if (item.isActionButton()) {
      mActionItems.add(item);
    }
 else {
      mNonActionItems.add(item);
    }
  }
  mIsActionItemsStale=false;
}
