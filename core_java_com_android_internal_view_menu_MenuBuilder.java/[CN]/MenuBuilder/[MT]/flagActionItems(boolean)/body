{
  if (reserveActionOverflow != mReserveActionOverflow) {
    mReserveActionOverflow=reserveActionOverflow;
    mIsActionItemsStale=true;
  }
  if (!mIsActionItemsStale) {
    return;
  }
  final ArrayList<MenuItemImpl> visibleItems=getVisibleItems();
  final int itemsSize=visibleItems.size();
  int maxActions=mMaxActionItems;
  int widthLimit=mActionWidthLimit;
  final int querySpec=MeasureSpec.makeMeasureSpec(0,MeasureSpec.UNSPECIFIED);
  final ViewGroup parent=getMeasureActionButtonParent();
  int requiredItems=0;
  int requestedItems=0;
  int firstActionWidth=0;
  boolean hasOverflow=false;
  for (int i=0; i < itemsSize; i++) {
    MenuItemImpl item=visibleItems.get(i);
    if (item.requiresActionButton()) {
      requiredItems++;
    }
 else     if (item.requestsActionButton()) {
      requestedItems++;
    }
 else {
      hasOverflow=true;
    }
  }
  if (reserveActionOverflow && (hasOverflow || requiredItems + requestedItems > maxActions)) {
    maxActions--;
  }
  maxActions-=requiredItems;
  final SparseBooleanArray seenGroups=mActionButtonGroups;
  seenGroups.clear();
  for (int i=0; i < itemsSize; i++) {
    MenuItemImpl item=visibleItems.get(i);
    if (item.requiresActionButton()) {
      View v=item.getActionView();
      if (v == null) {
        v=item.getItemView(TYPE_ACTION_BUTTON,parent);
      }
      v.measure(querySpec,querySpec);
      final int measuredWidth=v.getMeasuredWidth();
      widthLimit-=measuredWidth;
      if (firstActionWidth == 0) {
        firstActionWidth=measuredWidth;
      }
      final int groupId=item.getGroupId();
      if (groupId != 0) {
        seenGroups.put(groupId,true);
      }
    }
 else     if (item.requestsActionButton()) {
      final int groupId=item.getGroupId();
      final boolean inGroup=seenGroups.get(groupId);
      boolean isAction=(maxActions > 0 || inGroup) && widthLimit > 0;
      maxActions--;
      if (isAction) {
        View v=item.getActionView();
        if (v == null) {
          v=item.getItemView(TYPE_ACTION_BUTTON,parent);
        }
        v.measure(querySpec,querySpec);
        final int measuredWidth=v.getMeasuredWidth();
        widthLimit-=measuredWidth;
        if (firstActionWidth == 0) {
          firstActionWidth=measuredWidth;
        }
        if (widthLimit + firstActionWidth <= 0) {
          isAction=false;
        }
      }
      if (isAction && groupId != 0) {
        seenGroups.put(groupId,true);
      }
 else       if (inGroup) {
        seenGroups.put(groupId,false);
        for (int j=0; j < i; j++) {
          MenuItemImpl areYouMyGroupie=visibleItems.get(j);
          if (areYouMyGroupie.getGroupId() == groupId) {
            areYouMyGroupie.setIsActionButton(false);
          }
        }
      }
      item.setIsActionButton(isAction);
    }
  }
  mActionItems.clear();
  mNonActionItems.clear();
  for (int i=0; i < itemsSize; i++) {
    MenuItemImpl item=visibleItems.get(i);
    if (item.isActionButton()) {
      mActionItems.add(item);
    }
 else {
      mNonActionItems.add(item);
    }
  }
  mIsActionItemsStale=false;
}
