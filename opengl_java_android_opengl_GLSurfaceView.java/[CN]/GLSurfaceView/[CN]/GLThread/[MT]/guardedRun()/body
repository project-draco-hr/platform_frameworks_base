{
  mEglHelper=new EglHelper();
  try {
    startEgl();
    GL10 gl=null;
    boolean tellRendererSurfaceCreated=true;
    boolean tellRendererSurfaceChanged=true;
    while (!mDone) {
      int w, h;
      boolean changed;
      boolean needStart=false;
synchronized (this) {
        Runnable r;
        while ((r=getEvent()) != null) {
          r.run();
        }
        if (mPaused) {
          stopEgl();
          needStart=true;
        }
        while (true) {
          if (!mHasSurface) {
            if (!mWaitingForSurface) {
              stopEgl();
              mWaitingForSurface=true;
              notifyAll();
            }
          }
 else {
            boolean shouldHaveEgl=sGLThreadManager.shouldHaveEgl(this);
            if (mHaveEgl && (!shouldHaveEgl)) {
              stopEgl();
            }
 else             if ((!mHaveEgl) && shouldHaveEgl) {
              startEgl();
              needStart=true;
            }
          }
          if (!needToWait()) {
            break;
          }
          if (LOG_THREADS) {
            Log.i("GLThread","needToWait tid=" + getId());
          }
          wait();
        }
        if (mDone) {
          break;
        }
        changed=mSizeChanged;
        w=mWidth;
        h=mHeight;
        mSizeChanged=false;
        mRequestRender=false;
        if (mHasSurface && mWaitingForSurface) {
          changed=true;
          mWaitingForSurface=false;
          notifyAll();
        }
      }
      if (needStart) {
        startEgl();
        tellRendererSurfaceCreated=true;
        changed=true;
      }
      if (changed) {
        gl=(GL10)mEglHelper.createSurface(getHolder());
        tellRendererSurfaceChanged=true;
      }
      if (tellRendererSurfaceCreated) {
        mRenderer.onSurfaceCreated(gl,mEglHelper.mEglConfig);
        tellRendererSurfaceCreated=false;
      }
      if (tellRendererSurfaceChanged) {
        mRenderer.onSurfaceChanged(gl,w,h);
        tellRendererSurfaceChanged=false;
      }
      if ((w > 0) && (h > 0)) {
        mRenderer.onDrawFrame(gl);
        mEglHelper.swap();
      }
    }
  }
  finally {
    stopEgl();
  }
}
