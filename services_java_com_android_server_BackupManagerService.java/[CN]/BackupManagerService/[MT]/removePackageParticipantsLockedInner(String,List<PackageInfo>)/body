{
  if (MORE_DEBUG) {
    Slog.v(TAG,"removePackageParticipantsLockedInner (" + packageName + ") removing from "+ allPackages.size()+ " entries");
    for (    PackageInfo p : allPackages) {
      Slog.v(TAG,"    - " + p.packageName);
    }
  }
  for (  PackageInfo pkg : allPackages) {
    if (packageName == null || pkg.packageName.equals(packageName)) {
      final int uid=pkg.applicationInfo.uid;
      if (MORE_DEBUG)       Slog.i(TAG,"   found pkg " + packageName + " uid="+ uid);
      HashSet<ApplicationInfo> set=mBackupParticipants.get(uid);
      if (set != null) {
        for (        ApplicationInfo entry : set) {
          if (MORE_DEBUG)           Slog.i(TAG,"      checking against " + entry.packageName);
          if (entry.packageName.equals(pkg)) {
            if (MORE_DEBUG)             Slog.v(TAG,"  removing participant " + pkg);
            set.remove(entry);
            removeEverBackedUp(pkg.packageName);
            break;
          }
        }
        if (set.size() == 0) {
          mBackupParticipants.delete(uid);
        }
      }
 else {
        if (MORE_DEBUG)         Slog.i(TAG,"   ... not found in uid mapping");
      }
    }
  }
}
