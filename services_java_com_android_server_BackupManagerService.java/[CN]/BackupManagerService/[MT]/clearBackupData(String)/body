{
  if (DEBUG)   Log.v(TAG,"clearBackupData() of " + packageName);
  PackageInfo info;
  try {
    info=mPackageManager.getPackageInfo(packageName,PackageManager.GET_SIGNATURES);
  }
 catch (  NameNotFoundException e) {
    Log.d(TAG,"No such package '" + packageName + "' - not clearing backup data");
    return;
  }
  HashSet<ApplicationInfo> apps;
  if ((mContext.checkPermission("android.permission.BACKUP",Binder.getCallingPid(),Binder.getCallingUid())) == PackageManager.PERMISSION_DENIED) {
    apps=mBackupParticipants.get(Binder.getCallingUid());
  }
 else {
    if (DEBUG)     Log.v(TAG,"Privileged caller, allowing clear of other apps");
    apps=new HashSet<ApplicationInfo>();
    int N=mBackupParticipants.size();
    for (int i=0; i < N; i++) {
      HashSet<ApplicationInfo> s=mBackupParticipants.valueAt(i);
      if (s != null) {
        apps.addAll(s);
      }
    }
  }
  for (  ApplicationInfo app : apps) {
    if (app.packageName.equals(packageName)) {
      if (DEBUG)       Log.v(TAG,"Found the app - running clear process");
synchronized (mQueueLock) {
        Message msg=mBackupHandler.obtainMessage(MSG_RUN_CLEAR,new ClearParams(getTransport(mCurrentTransport),info));
        mBackupHandler.sendMessage(msg);
      }
      break;
    }
  }
}
