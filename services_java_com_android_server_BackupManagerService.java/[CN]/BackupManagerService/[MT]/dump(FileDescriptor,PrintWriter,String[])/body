{
synchronized (mQueueLock) {
    pw.println("Backup Manager is " + (mEnabled ? "enabled" : "disabled"));
    boolean scheduled=mBackupHandler.hasMessages(MSG_RUN_BACKUP);
    if (scheduled != mEnabled) {
      if (mEnabled) {
        pw.println("ERROR: backups enabled but none scheduled!");
      }
 else {
        pw.println("ERROR: backups are scheduled but not enabled!");
      }
    }
    pw.println("Available transports:");
    for (    String t : listAllTransports()) {
      String pad=(t.equals(mCurrentTransport)) ? "  * " : "    ";
      pw.println(pad + t);
    }
    int N=mBackupParticipants.size();
    pw.println("Participants: " + N);
    for (int i=0; i < N; i++) {
      int uid=mBackupParticipants.keyAt(i);
      pw.print("  uid: ");
      pw.println(uid);
      HashSet<ApplicationInfo> participants=mBackupParticipants.valueAt(i);
      for (      ApplicationInfo app : participants) {
        pw.println("    " + app.toString());
      }
    }
    pw.println("Pending: " + mPendingBackups.size());
    for (    BackupRequest req : mPendingBackups.values()) {
      pw.println("    " + req);
    }
  }
}
