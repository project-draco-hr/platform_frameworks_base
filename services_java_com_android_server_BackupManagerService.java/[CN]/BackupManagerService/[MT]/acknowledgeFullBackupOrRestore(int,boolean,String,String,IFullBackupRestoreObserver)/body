{
  if (DEBUG)   Slog.d(TAG,"acknowledgeFullBackupOrRestore : token=" + token + " allow="+ allow);
  mContext.enforceCallingPermission(android.Manifest.permission.BACKUP,"acknowledgeFullBackupOrRestore");
  long oldId=Binder.clearCallingIdentity();
  try {
    FullParams params;
synchronized (mFullConfirmations) {
      params=mFullConfirmations.get(token);
      if (params != null) {
        mBackupHandler.removeMessages(MSG_FULL_CONFIRMATION_TIMEOUT,params);
        mFullConfirmations.delete(token);
        if (allow) {
          final int verb=params instanceof FullBackupParams ? MSG_RUN_FULL_BACKUP : MSG_RUN_FULL_RESTORE;
          params.observer=observer;
          params.curPassword=curPassword;
          boolean isEncrypted;
          try {
            isEncrypted=(mMountService.getEncryptionState() != MountService.ENCRYPTION_STATE_NONE);
            if (isEncrypted)             Slog.w(TAG,"Device is encrypted; forcing enc password");
          }
 catch (          RemoteException e) {
            Slog.e(TAG,"Unable to contact mount service!");
            isEncrypted=true;
          }
          params.encryptPassword=(isEncrypted) ? curPassword : encPpassword;
          if (DEBUG)           Slog.d(TAG,"Sending conf message with verb " + verb);
          mWakelock.acquire();
          Message msg=mBackupHandler.obtainMessage(verb,params);
          mBackupHandler.sendMessage(msg);
        }
 else {
          Slog.w(TAG,"User rejected full backup/restore operation");
          signalFullBackupRestoreCompletion(params);
        }
      }
 else {
        Slog.w(TAG,"Attempted to ack full backup/restore with invalid token");
      }
    }
  }
  finally {
    Binder.restoreCallingIdentity(oldId);
  }
}
