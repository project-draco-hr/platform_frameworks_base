{
  mCurrentPackage=app;
  final String packageName=app.packageName;
  if (DEBUG)   Slog.d(TAG,"initiateOneRestore packageName=" + packageName);
  mBackupDataName=new File(mDataDir,packageName + ".restore");
  mNewStateName=new File(mStateDir,packageName + ".new");
  mSavedStateName=new File(mStateDir,packageName);
  final int token=generateToken();
  try {
    mBackupData=ParcelFileDescriptor.open(mBackupDataName,ParcelFileDescriptor.MODE_READ_WRITE | ParcelFileDescriptor.MODE_CREATE | ParcelFileDescriptor.MODE_TRUNCATE);
    if (mTransport.getRestoreData(mBackupData) != BackupConstants.TRANSPORT_OK) {
      Slog.e(TAG,"Error getting restore data for " + packageName);
      EventLog.writeEvent(EventLogTags.RESTORE_TRANSPORT_FAILURE);
      mBackupData.close();
      mBackupDataName.delete();
      executeNextState(RestoreState.FINAL);
      return;
    }
    mBackupData.close();
    mBackupData=ParcelFileDescriptor.open(mBackupDataName,ParcelFileDescriptor.MODE_READ_ONLY);
    mNewState=ParcelFileDescriptor.open(mNewStateName,ParcelFileDescriptor.MODE_READ_WRITE | ParcelFileDescriptor.MODE_CREATE | ParcelFileDescriptor.MODE_TRUNCATE);
    prepareOperationTimeout(token,TIMEOUT_RESTORE_INTERVAL,this);
    agent.doRestore(mBackupData,appVersionCode,mNewState,token,mBackupManagerBinder);
  }
 catch (  Exception e) {
    Slog.e(TAG,"Unable to call app for restore: " + packageName,e);
    EventLog.writeEvent(EventLogTags.RESTORE_AGENT_FAILURE,packageName,e.toString());
    agentErrorCleanup();
    executeNextState(RestoreState.RUNNING_QUEUE);
  }
}
