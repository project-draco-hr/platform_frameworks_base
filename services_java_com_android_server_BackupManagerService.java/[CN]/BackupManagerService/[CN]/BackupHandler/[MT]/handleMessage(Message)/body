{
switch (msg.what) {
case MSG_RUN_BACKUP:
{
      IBackupTransport transport=getTransport(mCurrentTransport);
      if (transport == null) {
        Log.v(TAG,"Backup requested but no transport available");
        break;
      }
      ArrayList<BackupRequest> queue=new ArrayList<BackupRequest>();
      File oldJournal=mJournal;
synchronized (mQueueLock) {
        if (mPendingBackups.size() > 0) {
          for (          BackupRequest b : mPendingBackups.values()) {
            queue.add(b);
          }
          Log.v(TAG,"clearing pending backups");
          mPendingBackups.clear();
          if (mJournalStream != null) {
            try {
              mJournalStream.close();
            }
 catch (            IOException e) {
            }
            makeJournalLocked();
          }
          (new PerformBackupThread(transport,queue,oldJournal)).start();
        }
 else {
          Log.v(TAG,"Backup requested but nothing pending");
        }
      }
synchronized (mQueueLock) {
        scheduleBackupPassLocked(BACKUP_INTERVAL);
      }
      break;
    }
case MSG_RUN_FULL_BACKUP:
  break;
case MSG_RUN_RESTORE:
{
  RestoreParams params=(RestoreParams)msg.obj;
  (new PerformRestoreThread(params.transport,params.observer,params.token)).start();
  break;
}
}
}
