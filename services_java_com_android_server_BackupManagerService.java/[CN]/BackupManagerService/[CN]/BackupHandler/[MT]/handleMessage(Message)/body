{
switch (msg.what) {
case MSG_RUN_BACKUP:
    File oldJournal=mJournal;
  RandomAccessFile oldJournalStream=mJournalStream;
synchronized (mQueueLock) {
  if (mBackupQueue == null) {
    mBackupQueue=new ArrayList<BackupRequest>();
    for (    BackupRequest b : mPendingBackups.values()) {
      mBackupQueue.add(b);
    }
    mPendingBackups=new HashMap<ApplicationInfo,BackupRequest>();
  }
  if (mJournalStream != null) {
    try {
      mJournalStream.close();
    }
 catch (    IOException e) {
    }
    makeJournalLocked();
  }
}
(new PerformBackupThread(mTransportId,mBackupQueue,oldJournal)).run();
break;
case MSG_RUN_FULL_BACKUP:
break;
case MSG_RUN_RESTORE:
{
int token=msg.arg1;
IBackupTransport transport=(IBackupTransport)msg.obj;
(new PerformRestoreThread(transport,token)).run();
break;
}
}
}
