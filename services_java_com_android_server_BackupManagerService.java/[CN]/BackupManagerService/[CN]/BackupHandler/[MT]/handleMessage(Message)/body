{
switch (msg.what) {
case MSG_RUN_BACKUP:
{
      IBackupTransport transport=getTransport(mTransportId);
      if (transport == null) {
        Log.v(TAG,"Backup requested but no transport available");
        break;
      }
      ArrayList<BackupRequest> queue=new ArrayList<BackupRequest>();
      File oldJournal=mJournal;
synchronized (mQueueLock) {
        if (mPendingBackups.size() == 0) {
          Log.v(TAG,"Backup requested but nothing pending");
          break;
        }
        for (        BackupRequest b : mPendingBackups.values()) {
          queue.add(b);
        }
        Log.v(TAG,"clearing pending backups");
        mPendingBackups.clear();
        if (mJournalStream != null) {
          try {
            mJournalStream.close();
          }
 catch (          IOException e) {
          }
          makeJournalLocked();
        }
      }
      (new PerformBackupThread(transport,queue,oldJournal)).start();
      break;
    }
case MSG_RUN_FULL_BACKUP:
  break;
case MSG_RUN_RESTORE:
{
  int token=msg.arg1;
  IBackupTransport transport=(IBackupTransport)msg.obj;
  (new PerformRestoreThread(transport,token)).start();
  break;
}
}
}
