{
switch (msg.what) {
case MSG_RUN_BACKUP:
{
      HashSet<ServiceInfo> queue;
synchronized (mQueueLock) {
        queue=mPendingBackups;
        mPendingBackups=new HashSet<ServiceInfo>();
      }
      Intent backupIntent=new Intent(BackupService.SERVICE_ACTION);
      for (      ServiceInfo service : queue) {
        mBinding=true;
        mTargetService=null;
        backupIntent.setClassName(service.packageName,service.name);
        Log.d(TAG,"binding to " + backupIntent);
        if (mContext.bindService(backupIntent,this,0)) {
synchronized (mBindSignaller) {
            while (mTargetService == null && mBinding == true) {
              try {
                mBindSignaller.wait();
              }
 catch (              InterruptedException e) {
              }
            }
          }
          if (mTargetService != null) {
            try {
              Log.d(TAG,"invoking doBackup() on " + backupIntent);
              mTargetService.doBackup(-1,-1,-1);
            }
 catch (            RemoteException e) {
              Log.d(TAG,"Remote target " + backupIntent + " threw during backup:");
              e.printStackTrace();
            }
            mContext.unbindService(this);
          }
        }
 else {
          Log.d(TAG,"Unable to bind to " + backupIntent);
        }
      }
    }
  break;
}
}
