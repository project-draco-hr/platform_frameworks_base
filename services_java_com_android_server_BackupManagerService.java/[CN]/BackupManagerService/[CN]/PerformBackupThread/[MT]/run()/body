{
  if (DEBUG)   Log.v(TAG,"Beginning backup of " + mQueue.size() + " targets");
  try {
    mTransport.startSession();
  }
 catch (  Exception e) {
    Log.e(TAG,"Error session transport");
    e.printStackTrace();
    return;
  }
  boolean doPackageManager;
synchronized (BackupManagerService.this) {
    doPackageManager=mDoPackageManager;
    mDoPackageManager=false;
  }
  if (doPackageManager) {
    if (DEBUG)     Log.i(TAG,"Running PM backup pass as well");
    PackageManagerBackupAgent pmAgent=new PackageManagerBackupAgent(mPackageManager,allAgentApps());
    BackupRequest pmRequest=new BackupRequest(new ApplicationInfo(),false);
    pmRequest.appInfo.packageName=PACKAGE_MANAGER_SENTINEL;
    processOneBackup(pmRequest,IBackupAgent.Stub.asInterface(pmAgent.onBind()),mTransport);
  }
  doQueuedBackups(mTransport);
  try {
    mTransport.endSession();
  }
 catch (  Exception e) {
    Log.e(TAG,"Error ending transport");
    e.printStackTrace();
  }
  if (!mJournal.delete()) {
    Log.e(TAG,"Unable to remove backup journal file " + mJournal.getAbsolutePath());
  }
}
