{
  long startRealtime=SystemClock.elapsedRealtime();
  if (DEBUG)   Log.v(TAG,"Beginning backup of " + mQueue.size() + " targets");
  Process.setThreadPriority(Process.THREAD_PRIORITY_BACKGROUND);
  try {
    EventLog.writeEvent(BACKUP_START_EVENT,mTransport.transportDirName());
    int status=BackupConstants.TRANSPORT_OK;
    if (status == BackupConstants.TRANSPORT_OK && mEverStoredApps.size() == 0) {
      status=mTransport.initializeDevice();
    }
    if (status == BackupConstants.TRANSPORT_OK) {
      PackageManagerBackupAgent pmAgent=new PackageManagerBackupAgent(mPackageManager,allAgentPackages());
      BackupRequest pmRequest=new BackupRequest(new ApplicationInfo(),false);
      pmRequest.appInfo.packageName=PACKAGE_MANAGER_SENTINEL;
      status=processOneBackup(pmRequest,IBackupAgent.Stub.asInterface(pmAgent.onBind()),mTransport);
    }
    if (status == BackupConstants.TRANSPORT_OK) {
      status=doQueuedBackups(mTransport);
    }
    if (status == BackupConstants.TRANSPORT_OK) {
      status=mTransport.finishBackup();
      if (status == BackupConstants.TRANSPORT_OK) {
        int millis=(int)(SystemClock.elapsedRealtime() - startRealtime);
        EventLog.writeEvent(BACKUP_SUCCESS_EVENT,mQueue.size(),millis);
      }
 else {
        EventLog.writeEvent(BACKUP_TRANSPORT_FAILURE_EVENT,"");
        Log.e(TAG,"Transport error in finishBackup()");
      }
    }
    if (status == BackupConstants.TRANSPORT_OK && !mJournal.delete()) {
      Log.e(TAG,"Unable to remove backup journal file " + mJournal);
    }
    if (status == BackupConstants.TRANSPORT_NOT_INITIALIZED) {
      EventLog.writeEvent(BACKUP_RESET_EVENT,mTransport.transportDirName());
      resetBackupState(mStateDir);
      backupNow();
    }
  }
 catch (  Exception e) {
    Log.e(TAG,"Error in backup thread",e);
  }
 finally {
    mWakelock.release();
  }
}
