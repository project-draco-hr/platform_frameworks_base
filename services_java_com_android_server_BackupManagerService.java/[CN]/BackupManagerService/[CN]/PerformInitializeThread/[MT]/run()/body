{
  try {
    for (    String transportName : mQueue) {
      IBackupTransport transport=getTransport(transportName);
      if (transport == null) {
        Log.e(TAG,"Requested init for " + transportName + " but not found");
        continue;
      }
      Log.i(TAG,"Initializing (wiping) backup transport storage: " + transportName);
      EventLog.writeEvent(BACKUP_START_EVENT,transport.transportDirName());
      long startRealtime=SystemClock.elapsedRealtime();
      int status=transport.initializeDevice();
      if (status == BackupConstants.TRANSPORT_OK) {
        status=transport.finishBackup();
      }
      if (status == BackupConstants.TRANSPORT_OK) {
        Log.i(TAG,"Device init successful");
        int millis=(int)(SystemClock.elapsedRealtime() - startRealtime);
        EventLog.writeEvent(BACKUP_INITIALIZE_EVENT);
        resetBackupState(new File(mBaseStateDir,transport.transportDirName()));
        EventLog.writeEvent(BACKUP_SUCCESS_EVENT,0,millis);
synchronized (mQueueLock) {
          recordInitPendingLocked(false,transportName);
        }
      }
 else {
        Log.e(TAG,"Transport error in initializeDevice()");
        EventLog.writeEvent(BACKUP_TRANSPORT_FAILURE_EVENT,"(initialize)");
synchronized (mQueueLock) {
          recordInitPendingLocked(true,transportName);
        }
        long delay=transport.requestBackupTime();
        if (DEBUG)         Log.w(TAG,"init failed on " + transportName + " resched in "+ delay);
        mAlarmManager.set(AlarmManager.RTC_WAKEUP,System.currentTimeMillis() + delay,mRunInitIntent);
      }
    }
  }
 catch (  RemoteException e) {
  }
catch (  Exception e) {
    Log.e(TAG,"Unexpected error performing init",e);
  }
 finally {
synchronized (mQueueLock) {
      mInitInProgress=false;
    }
    mWakelock.release();
  }
}
