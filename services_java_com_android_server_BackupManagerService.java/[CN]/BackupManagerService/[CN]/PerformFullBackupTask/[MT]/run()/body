{
  final List<PackageInfo> packagesToBackup;
  Slog.i(TAG,"--- Performing full-dataset backup ---");
  sendStartBackup();
  if (mAllApps) {
    packagesToBackup=mPackageManager.getInstalledPackages(PackageManager.GET_SIGNATURES);
  }
 else {
    packagesToBackup=new ArrayList<PackageInfo>();
    for (    String pkgName : mPackages) {
      try {
        packagesToBackup.add(mPackageManager.getPackageInfo(pkgName,PackageManager.GET_SIGNATURES));
      }
 catch (      NameNotFoundException e) {
        Slog.w(TAG,"Unknown package " + pkgName + ", skipping");
      }
    }
  }
  for (int i=0; i < packagesToBackup.size(); ) {
    PackageInfo info=packagesToBackup.get(i);
    if ((info.applicationInfo.flags & ApplicationInfo.FLAG_ALLOW_BACKUP) == 0) {
      packagesToBackup.remove(i);
    }
 else {
      i++;
    }
  }
  PackageInfo pkg=null;
  try {
    int N=packagesToBackup.size();
    for (int i=0; i < N; i++) {
      pkg=packagesToBackup.get(i);
      backupOnePackage(pkg);
    }
    if (mIncludeShared) {
      backupSharedStorage();
    }
  }
 catch (  RemoteException e) {
    Slog.e(TAG,"App died during full backup");
  }
 finally {
    tearDown(pkg);
    try {
      mOutputFile.close();
    }
 catch (    IOException e) {
    }
synchronized (mCurrentOpLock) {
      mCurrentOperations.clear();
    }
synchronized (mLatchObject) {
      mLatchObject.set(true);
      mLatchObject.notifyAll();
    }
    sendEndBackup();
    mWakelock.release();
    if (DEBUG)     Slog.d(TAG,"Full backup pass complete.");
  }
}
