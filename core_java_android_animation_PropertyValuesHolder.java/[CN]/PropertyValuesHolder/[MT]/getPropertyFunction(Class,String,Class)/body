{
  Method returnVal=null;
  String methodName=getMethodName(prefix,mPropertyName);
  Class args[]=null;
  if (valueType == null) {
    try {
      returnVal=targetClass.getMethod(methodName,args);
    }
 catch (    NoSuchMethodException e) {
    }
  }
 else {
    args=new Class[1];
    Class typeVariants[];
    if (valueType.equals(Float.class)) {
      typeVariants=FLOAT_VARIANTS;
    }
 else     if (valueType.equals(Integer.class)) {
      typeVariants=INTEGER_VARIANTS;
    }
 else     if (valueType.equals(Double.class)) {
      typeVariants=DOUBLE_VARIANTS;
    }
 else {
      typeVariants=new Class[1];
      typeVariants[0]=valueType;
    }
    for (    Class typeVariant : typeVariants) {
      args[0]=typeVariant;
      try {
        returnVal=targetClass.getMethod(methodName,args);
        if (mConverter == null) {
          mValueType=typeVariant;
        }
        return returnVal;
      }
 catch (      NoSuchMethodException e) {
      }
    }
  }
  if (returnVal == null) {
    Log.w("PropertyValuesHolder","Method " + getMethodName(prefix,mPropertyName) + "() with type "+ valueType+ " not found on target class "+ targetClass);
  }
  return returnVal;
}
