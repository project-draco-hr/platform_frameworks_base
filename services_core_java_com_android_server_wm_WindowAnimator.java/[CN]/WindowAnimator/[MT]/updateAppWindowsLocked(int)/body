{
  ArrayList<TaskStack> stacks=mService.getDisplayContentLocked(displayId).getStacks();
  for (int stackNdx=stacks.size() - 1; stackNdx >= 0; --stackNdx) {
    final TaskStack stack=stacks.get(stackNdx);
    final ArrayList<Task> tasks=stack.getTasks();
    for (int taskNdx=tasks.size() - 1; taskNdx >= 0; --taskNdx) {
      final AppTokenList tokens=tasks.get(taskNdx).mAppTokens;
      for (int tokenNdx=tokens.size() - 1; tokenNdx >= 0; --tokenNdx) {
        final AppWindowAnimator appAnimator=tokens.get(tokenNdx).mAppAnimator;
        appAnimator.wasAnimating=appAnimator.animating;
        if (appAnimator.stepAnimationLocked(mCurrentTime,displayId)) {
          appAnimator.animating=true;
          setAnimating(true);
          mAppWindowAnimating=true;
        }
 else         if (appAnimator.wasAnimating) {
          setAppLayoutChanges(appAnimator,WindowManagerPolicy.FINISH_LAYOUT_REDO_WALLPAPER,"appToken " + appAnimator.mAppToken + " done",displayId);
          if (DEBUG_ANIM)           Slog.v(TAG,"updateWindowsApps...: done animating " + appAnimator.mAppToken);
        }
      }
    }
    final AppTokenList exitingAppTokens=stack.mExitingAppTokens;
    final int exitingCount=exitingAppTokens.size();
    for (int i=0; i < exitingCount; i++) {
      final AppWindowAnimator appAnimator=exitingAppTokens.get(i).mAppAnimator;
      appAnimator.wasAnimating=appAnimator.animating;
      if (appAnimator.stepAnimationLocked(mCurrentTime,displayId)) {
        setAnimating(true);
        mAppWindowAnimating=true;
      }
 else       if (appAnimator.wasAnimating) {
        setAppLayoutChanges(appAnimator,WindowManagerPolicy.FINISH_LAYOUT_REDO_WALLPAPER,"exiting appToken " + appAnimator.mAppToken + " done",displayId);
        if (DEBUG_ANIM)         Slog.v(TAG,"updateWindowsApps...: done animating exiting " + appAnimator.mAppToken);
      }
    }
  }
}
