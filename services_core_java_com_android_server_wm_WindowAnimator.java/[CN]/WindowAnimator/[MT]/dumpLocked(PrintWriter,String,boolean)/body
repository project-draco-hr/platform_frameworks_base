{
  final String subPrefix="  " + prefix;
  final String subSubPrefix="  " + subPrefix;
  for (int i=0; i < mDisplayContentsAnimators.size(); i++) {
    pw.print(prefix);
    pw.print("DisplayContentsAnimator #");
    pw.print(mDisplayContentsAnimators.keyAt(i));
    pw.println(":");
    DisplayContentsAnimator displayAnimator=mDisplayContentsAnimators.valueAt(i);
    final WindowList windows=mService.getWindowListLocked(mDisplayContentsAnimators.keyAt(i));
    final int N=windows.size();
    for (int j=0; j < N; j++) {
      WindowStateAnimator wanim=windows.get(j).mWinAnimator;
      pw.print(subPrefix);
      pw.print("Window #");
      pw.print(j);
      pw.print(": ");
      pw.println(wanim);
    }
    if (displayAnimator.mScreenRotationAnimation != null) {
      pw.print(subPrefix);
      pw.println("mScreenRotationAnimation:");
      displayAnimator.mScreenRotationAnimation.printTo(subSubPrefix,pw);
    }
 else     if (dumpAll) {
      pw.print(subPrefix);
      pw.println("no ScreenRotationAnimation ");
    }
    pw.println();
  }
  pw.println();
  if (dumpAll) {
    pw.print(prefix);
    pw.print("mAnimTransactionSequence=");
    pw.print(mAnimTransactionSequence);
    pw.print(" mForceHiding=");
    pw.println(forceHidingToString());
    pw.print(prefix);
    pw.print("mCurrentTime=");
    pw.println(TimeUtils.formatUptime(mCurrentTime));
  }
  if (mBulkUpdateParams != 0) {
    pw.print(prefix);
    pw.print("mBulkUpdateParams=0x");
    pw.print(Integer.toHexString(mBulkUpdateParams));
    pw.println(bulkUpdateParamsToString(mBulkUpdateParams));
  }
  if (mWindowDetachedWallpaper != null) {
    pw.print(prefix);
    pw.print("mWindowDetachedWallpaper=");
    pw.println(mWindowDetachedWallpaper);
  }
}
