{
  mService.getDisplayContentLocked(displayId).resetAnimationBackgroundAnimator();
  final WindowList windows=mService.getWindowListLocked(displayId);
  WindowState detachedWallpaper=null;
  for (int i=windows.size() - 1; i >= 0; i--) {
    final WindowState win=windows.get(i);
    WindowStateAnimator winAnimator=win.mWinAnimator;
    if (winAnimator.mSurfaceControl == null) {
      continue;
    }
    final int flags=win.mAttrs.flags;
    if (winAnimator.mAnimating) {
      if (winAnimator.mAnimation != null) {
        if ((flags & FLAG_SHOW_WALLPAPER) != 0 && winAnimator.mAnimation.getDetachWallpaper()) {
          detachedWallpaper=win;
        }
        final int color=winAnimator.mAnimation.getBackgroundColor();
        if (color != 0) {
          win.getStack().setAnimationBackground(winAnimator,color);
        }
      }
      mAnimating=true;
    }
    final AppWindowAnimator appAnimator=winAnimator.mAppAnimator;
    if (appAnimator != null && appAnimator.animation != null && appAnimator.animating) {
      if ((flags & FLAG_SHOW_WALLPAPER) != 0 && appAnimator.animation.getDetachWallpaper()) {
        detachedWallpaper=win;
      }
      final int color=appAnimator.animation.getBackgroundColor();
      if (color != 0) {
        win.getStack().setAnimationBackground(winAnimator,color);
      }
    }
  }
  if (mWindowDetachedWallpaper != detachedWallpaper) {
    if (WindowManagerService.DEBUG_WALLPAPER)     Slog.v(TAG,"Detached wallpaper changed from " + mWindowDetachedWallpaper + " to "+ detachedWallpaper);
    mWindowDetachedWallpaper=detachedWallpaper;
    mBulkUpdateParams|=SET_WALLPAPER_MAY_CHANGE;
  }
}
