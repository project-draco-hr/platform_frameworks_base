{
synchronized (mLeAdvertisers) {
    BluetoothLeUtils.checkAdapterStateOn(mBluetoothAdapter);
    if (callback == null) {
      throw new IllegalArgumentException("callback cannot be null");
    }
    if (!mBluetoothAdapter.isMultipleAdvertisementSupported()) {
      postStartFailure(callback,AdvertiseCallback.ADVERTISE_FAILED_FEATURE_UNSUPPORTED);
      return;
    }
    if (totalBytes(advertiseData) > MAX_ADVERTISING_DATA_BYTES || totalBytes(scanResponse) > MAX_ADVERTISING_DATA_BYTES) {
      postStartFailure(callback,AdvertiseCallback.ADVERTISE_FAILED_DATA_TOO_LARGE);
      return;
    }
    if (mLeAdvertisers.containsKey(callback)) {
      postStartFailure(callback,AdvertiseCallback.ADVERTISE_FAILED_ALREADY_STARTED);
      return;
    }
    IBluetoothGatt gatt;
    try {
      gatt=mBluetoothManager.getBluetoothGatt();
    }
 catch (    RemoteException e) {
      Log.e(TAG,"Failed to get Bluetooth gatt - ",e);
      postStartFailure(callback,AdvertiseCallback.ADVERTISE_FAILED_INTERNAL_ERROR);
      return;
    }
    AdvertiseCallbackWrapper wrapper=new AdvertiseCallbackWrapper(callback,advertiseData,scanResponse,settings,gatt);
    wrapper.startRegisteration();
  }
}
