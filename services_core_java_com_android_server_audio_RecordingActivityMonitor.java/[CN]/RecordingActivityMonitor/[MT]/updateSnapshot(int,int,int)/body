{
synchronized (mRecordConfigs) {
switch (event) {
case AudioManager.RECORD_CONFIG_EVENT_STOP:
      return (mRecordConfigs.remove(new Integer(session)) != null);
case AudioManager.RECORD_CONFIG_EVENT_START:
    if (mRecordConfigs.containsKey(new Integer(session))) {
      return false;
    }
 else {
      mRecordConfigs.put(new Integer(session),new AudioRecordConfiguration(session,source));
      return true;
    }
default :
  Log.e(TAG,String.format("Unknown event %d for session %d, source %d",event,session,source));
return false;
}
}
}
