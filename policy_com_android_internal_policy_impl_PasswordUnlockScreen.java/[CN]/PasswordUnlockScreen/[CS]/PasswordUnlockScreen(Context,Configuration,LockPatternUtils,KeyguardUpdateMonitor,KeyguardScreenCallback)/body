{
  super(context);
  mKeyboardHidden=configuration.hardKeyboardHidden;
  mCreationOrientation=configuration.orientation;
  mUpdateMonitor=updateMonitor;
  mCallback=callback;
  mLockPatternUtils=lockPatternUtils;
  LayoutInflater layoutInflater=LayoutInflater.from(context);
  if (mCreationOrientation != Configuration.ORIENTATION_LANDSCAPE) {
    layoutInflater.inflate(R.layout.keyguard_screen_password_portrait,this,true);
  }
 else {
    layoutInflater.inflate(R.layout.keyguard_screen_password_landscape,this,true);
  }
  boolean isAlpha=lockPatternUtils.getPasswordMode() == LockPatternUtils.MODE_PASSWORD;
  mKeyboardView=(PasswordEntryKeyboardView)findViewById(R.id.keyboard);
  mPasswordEntry=(EditText)findViewById(R.id.passwordEntry);
  mPasswordEntry.setOnEditorActionListener(this);
  mEmergencyCallButton=(Button)findViewById(R.id.emergencyCall);
  mEmergencyCallButton.setOnClickListener(this);
  mLockPatternUtils.updateEmergencyCallButtonState(mEmergencyCallButton);
  mTitle=(TextView)findViewById(R.id.enter_password_label);
  mKeyboardHelper=new PasswordEntryKeyboardHelper(context,mKeyboardView,this);
  mKeyboardHelper.setKeyboardMode(isAlpha ? PasswordEntryKeyboardHelper.KEYBOARD_MODE_ALPHA : PasswordEntryKeyboardHelper.KEYBOARD_MODE_NUMERIC);
  mKeyboardView.setVisibility(mKeyboardHidden == Configuration.HARDKEYBOARDHIDDEN_NO ? View.INVISIBLE : View.VISIBLE);
  mPasswordEntry.requestFocus();
  if (isAlpha) {
    mPasswordEntry.setKeyListener(TextKeyListener.getInstance());
  }
 else {
    mPasswordEntry.setKeyListener(DigitsKeyListener.getInstance());
  }
  mKeyboardHelper.setVibratePattern(mLockPatternUtils.isTactileFeedbackEnabled() ? com.android.internal.R.array.config_virtualKeyVibePattern : 0);
}
