{
  final int N=pkgList.size();
  if (baseProcessTracker != null) {
    long now=SystemClock.uptimeMillis();
    baseProcessTracker.setState(ProcessStats.STATE_NOTHING,tracker.getMemFactorLocked(),now,pkgList);
    if (N != 1) {
      for (int i=0; i < N; i++) {
        ProcessStats.ProcessState ps=pkgList.valueAt(i);
        if (ps != null && ps != baseProcessTracker) {
          ps.makeInactive();
        }
      }
      pkgList.clear();
      ProcessStats.ProcessState ps=tracker.getProcessStateLocked(info.packageName,info.uid,info.versionCode,processName);
      pkgList.put(info.packageName,ps);
      if (ps != baseProcessTracker) {
        ps.makeActive();
      }
    }
  }
 else   if (N != 1) {
    pkgList.clear();
    pkgList.put(info.packageName,null);
  }
}
