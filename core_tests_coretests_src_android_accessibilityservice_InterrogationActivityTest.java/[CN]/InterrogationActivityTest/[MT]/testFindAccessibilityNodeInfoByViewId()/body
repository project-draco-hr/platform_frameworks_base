{
  final long startTimeMillis=SystemClock.uptimeMillis();
  try {
    AccessibilityNodeInfo button=AccessibilityInteractionClient.getInstance().findAccessibilityNodeInfoByViewIdInActiveWindow(sConnectionId,R.id.button5);
    assertNotNull(button);
    assertEquals(0,button.getChildCount());
    Rect bounds=new Rect();
    button.getBoundsInParent(bounds);
    assertEquals(0,bounds.left);
    assertEquals(0,bounds.top);
    assertEquals(160,bounds.right);
    assertEquals(100,bounds.bottom);
    assertEquals("com.android.frameworks.coretests",button.getPackageName());
    assertEquals("android.widget.Button",button.getClassName());
    assertEquals("Button5",button.getText());
    assertNull(button.getContentDescription());
    assertTrue(button.isFocusable());
    assertTrue(button.isClickable());
    assertTrue(button.isEnabled());
    assertFalse(button.isFocused());
    assertTrue(button.isClickable());
    assertFalse(button.isPassword());
    assertFalse(button.isSelected());
    assertFalse(button.isCheckable());
    assertFalse(button.isChecked());
    assertEquals(ACTION_FOCUS | ACTION_SELECT | ACTION_CLEAR_SELECTION,button.getActions());
  }
  finally {
    if (DEBUG) {
      final long elapsedTimeMillis=SystemClock.uptimeMillis() - startTimeMillis;
      Log.i(LOG_TAG,"testFindAccessibilityNodeInfoByViewId: " + elapsedTimeMillis + "ms");
    }
  }
}
