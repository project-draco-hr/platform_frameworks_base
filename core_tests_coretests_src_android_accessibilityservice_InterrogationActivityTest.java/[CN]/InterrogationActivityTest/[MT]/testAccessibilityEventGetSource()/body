{
  beforeClassIfNeeded();
  try {
    getActivity();
    AccessibilityNodeInfo button=getConnection().findAccessibilityNodeInfoByViewId(R.id.button5);
    assertFalse(button.isSelected());
    assertTrue(button.performAction(ACTION_FOCUS));
synchronized (sConnection) {
      try {
        sConnection.wait(500);
      }
 catch (      InterruptedException ie) {
      }
    }
    AccessibilityNodeInfo source=sLastAccessibilityEvent.getSource();
    assertNotNull(source);
    Rect buttonBounds=new Rect();
    button.getBounds(buttonBounds);
    Rect sourceBounds=new Rect();
    source.getBounds(sourceBounds);
    assertEquals(buttonBounds.left,sourceBounds.left);
    assertEquals(buttonBounds.right,sourceBounds.right);
    assertEquals(buttonBounds.top,sourceBounds.top);
    assertEquals(buttonBounds.bottom,sourceBounds.bottom);
    assertEquals(button.getPackageName(),source.getPackageName());
    assertEquals(button.getClassName(),source.getClassName());
    assertEquals(button.getText(),source.getText());
    assertSame(button.getContentDescription(),source.getContentDescription());
    assertSame(button.isFocusable(),source.isFocusable());
    assertSame(button.isClickable(),source.isClickable());
    assertSame(button.isEnabled(),source.isEnabled());
    assertNotSame(button.isFocused(),source.isFocused());
    assertSame(button.isLongClickable(),source.isLongClickable());
    assertSame(button.isPassword(),source.isPassword());
    assertSame(button.isSelected(),source.isSelected());
    assertSame(button.isCheckable(),source.isCheckable());
    assertSame(button.isChecked(),source.isChecked());
  }
  finally {
    afterClassIfNeeded();
  }
}
