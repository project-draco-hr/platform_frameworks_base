{
synchronized (mSoundEffectsLock) {
    if (mSoundPool == null) {
      return;
    }
    if (SOUND_EFFECT_FILES_MAP[effectType][1] > 0) {
      float v=(float)volume / 1000.0f;
      mSoundPool.play(SOUND_EFFECT_FILES_MAP[effectType][1],v,v,0,0,1.0f);
    }
 else {
      MediaPlayer mediaPlayer=new MediaPlayer();
      if (mediaPlayer != null) {
        try {
          String filePath=Environment.getRootDirectory() + SOUND_EFFECTS_PATH + SOUND_EFFECT_FILES[SOUND_EFFECT_FILES_MAP[effectType][0]];
          mediaPlayer.setDataSource(filePath);
          mediaPlayer.setAudioStreamType(AudioSystem.STREAM_SYSTEM);
          mediaPlayer.prepare();
          mediaPlayer.setOnCompletionListener(new OnCompletionListener(){
            public void onCompletion(            MediaPlayer mp){
              cleanupPlayer(mp);
            }
          }
);
          mediaPlayer.setOnErrorListener(new OnErrorListener(){
            public boolean onError(            MediaPlayer mp,            int what,            int extra){
              cleanupPlayer(mp);
              return true;
            }
          }
);
          mediaPlayer.start();
        }
 catch (        IOException ex) {
          Log.w(TAG,"MediaPlayer IOException: " + ex);
        }
catch (        IllegalArgumentException ex) {
          Log.w(TAG,"MediaPlayer IllegalArgumentException: " + ex);
        }
catch (        IllegalStateException ex) {
          Log.w(TAG,"MediaPlayer IllegalStateException: " + ex);
        }
      }
    }
  }
}
