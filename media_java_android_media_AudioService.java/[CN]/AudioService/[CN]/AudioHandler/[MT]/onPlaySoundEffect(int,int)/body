{
synchronized (mSoundEffectsLock) {
    onLoadSoundEffects();
    if (mSoundPool == null) {
      return;
    }
    float volFloat;
    if (volume < 0) {
      volFloat=(float)Math.pow(10,(float)sSoundEffectVolumeDb / 20);
    }
 else {
      volFloat=(float)volume / 1000.0f;
    }
    if (SOUND_EFFECT_FILES_MAP[effectType][1] > 0) {
      mSoundPool.play(SOUND_EFFECT_FILES_MAP[effectType][1],volFloat,volFloat,0,0,1.0f);
    }
 else {
      MediaPlayer mediaPlayer=new MediaPlayer();
      try {
        String filePath=Environment.getRootDirectory() + SOUND_EFFECTS_PATH + SOUND_EFFECT_FILES.get(SOUND_EFFECT_FILES_MAP[effectType][0]);
        mediaPlayer.setDataSource(filePath);
        mediaPlayer.setAudioStreamType(AudioSystem.STREAM_SYSTEM);
        mediaPlayer.prepare();
        mediaPlayer.setVolume(volFloat);
        mediaPlayer.setOnCompletionListener(new OnCompletionListener(){
          public void onCompletion(          MediaPlayer mp){
            cleanupPlayer(mp);
          }
        }
);
        mediaPlayer.setOnErrorListener(new OnErrorListener(){
          public boolean onError(          MediaPlayer mp,          int what,          int extra){
            cleanupPlayer(mp);
            return true;
          }
        }
);
        mediaPlayer.start();
      }
 catch (      IOException ex) {
        Log.w(TAG,"MediaPlayer IOException: " + ex);
      }
catch (      IllegalArgumentException ex) {
        Log.w(TAG,"MediaPlayer IllegalArgumentException: " + ex);
      }
catch (      IllegalStateException ex) {
        Log.w(TAG,"MediaPlayer IllegalStateException: " + ex);
      }
    }
  }
}
