{
  checkScoAudioState();
  if (totalCount() == 0) {
    if (state == BluetoothHeadset.STATE_AUDIO_CONNECTED) {
      broadcastScoConnectionState(AudioManager.SCO_AUDIO_STATE_CONNECTING);
synchronized (mSetModeDeathHandlers) {
        if ((mSetModeDeathHandlers.isEmpty() || mSetModeDeathHandlers.get(0).getPid() == mCreatorPid) && (mScoAudioState == SCO_STATE_INACTIVE || mScoAudioState == SCO_STATE_DEACTIVATE_REQ)) {
          if (mScoAudioState == SCO_STATE_INACTIVE) {
            mScoAudioMode=(targetSdkVersion < Build.VERSION_CODES.JELLY_BEAN_MR2) ? SCO_MODE_VIRTUAL_CALL : SCO_MODE_RAW;
            if (mBluetoothHeadset != null && mBluetoothHeadsetDevice != null) {
              boolean status;
              if (mScoAudioMode == SCO_MODE_RAW) {
                status=mBluetoothHeadset.connectAudio();
              }
 else {
                status=mBluetoothHeadset.startScoUsingVirtualVoiceCall(mBluetoothHeadsetDevice);
              }
              if (status) {
                mScoAudioState=SCO_STATE_ACTIVE_INTERNAL;
              }
 else {
                broadcastScoConnectionState(AudioManager.SCO_AUDIO_STATE_DISCONNECTED);
              }
            }
 else             if (getBluetoothHeadset()) {
              mScoAudioState=SCO_STATE_ACTIVATE_REQ;
            }
          }
 else {
            mScoAudioState=SCO_STATE_ACTIVE_INTERNAL;
            broadcastScoConnectionState(AudioManager.SCO_AUDIO_STATE_CONNECTED);
          }
        }
 else {
          broadcastScoConnectionState(AudioManager.SCO_AUDIO_STATE_DISCONNECTED);
        }
      }
    }
 else     if (state == BluetoothHeadset.STATE_AUDIO_DISCONNECTED && (mScoAudioState == SCO_STATE_ACTIVE_INTERNAL || mScoAudioState == SCO_STATE_ACTIVATE_REQ)) {
      if (mScoAudioState == SCO_STATE_ACTIVE_INTERNAL) {
        if (mBluetoothHeadset != null && mBluetoothHeadsetDevice != null) {
          boolean status;
          if (mScoAudioMode == SCO_MODE_RAW) {
            status=mBluetoothHeadset.disconnectAudio();
          }
 else {
            status=mBluetoothHeadset.stopScoUsingVirtualVoiceCall(mBluetoothHeadsetDevice);
          }
          if (!status) {
            mScoAudioState=SCO_STATE_INACTIVE;
            broadcastScoConnectionState(AudioManager.SCO_AUDIO_STATE_DISCONNECTED);
          }
        }
 else         if (getBluetoothHeadset()) {
          mScoAudioState=SCO_STATE_DEACTIVATE_REQ;
        }
      }
 else {
        mScoAudioState=SCO_STATE_INACTIVE;
        broadcastScoConnectionState(AudioManager.SCO_AUDIO_STATE_DISCONNECTED);
      }
    }
  }
}
