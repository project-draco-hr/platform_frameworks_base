{
  int newModeOwnerPid=0;
  if (cb == null) {
    Log.e(TAG,"setModeInt() called with null binder");
    return newModeOwnerPid;
  }
  SetModeDeathHandler hdlr=null;
  Iterator iter=mSetModeDeathHandlers.iterator();
  while (iter.hasNext()) {
    SetModeDeathHandler h=(SetModeDeathHandler)iter.next();
    if (h.getPid() == pid) {
      hdlr=h;
      iter.remove();
      hdlr.getBinder().unlinkToDeath(hdlr,0);
      break;
    }
  }
  int status=AudioSystem.AUDIO_STATUS_OK;
  do {
    if (mode == AudioSystem.MODE_NORMAL) {
      if (!mSetModeDeathHandlers.isEmpty()) {
        hdlr=mSetModeDeathHandlers.get(0);
        cb=hdlr.getBinder();
        mode=hdlr.getMode();
      }
    }
 else {
      if (hdlr == null) {
        hdlr=new SetModeDeathHandler(cb,pid);
      }
      try {
        cb.linkToDeath(hdlr,0);
      }
 catch (      RemoteException e) {
        Log.w(TAG,"setMode() could not link to " + cb + " binder death");
      }
      mSetModeDeathHandlers.add(0,hdlr);
      hdlr.setMode(mode);
    }
    if (mode != mMode) {
      status=AudioSystem.setPhoneState(mode);
      if (status == AudioSystem.AUDIO_STATUS_OK) {
        mMode=mode;
      }
 else {
        if (hdlr != null) {
          mSetModeDeathHandlers.remove(hdlr);
          cb.unlinkToDeath(hdlr,0);
        }
        mode=AudioSystem.MODE_NORMAL;
      }
    }
 else {
      status=AudioSystem.AUDIO_STATUS_OK;
    }
  }
 while (status != AudioSystem.AUDIO_STATUS_OK && !mSetModeDeathHandlers.isEmpty());
  if (status == AudioSystem.AUDIO_STATUS_OK) {
    if (mode != AudioSystem.MODE_NORMAL) {
      if (mSetModeDeathHandlers.isEmpty()) {
        Log.e(TAG,"setMode() different from MODE_NORMAL with empty mode client stack");
      }
 else {
        newModeOwnerPid=mSetModeDeathHandlers.get(0).getPid();
      }
    }
    int streamType=getActiveStreamType(AudioManager.USE_DEFAULT_STREAM_TYPE);
    if (streamType == STREAM_REMOTE_MUSIC) {
      streamType=AudioManager.STREAM_MUSIC;
    }
    int device=getDeviceForStream(streamType);
    int index=mStreamStates[mStreamVolumeAlias[streamType]].getIndex(device);
    setStreamVolumeInt(mStreamVolumeAlias[streamType],index,device,true);
    updateStreamVolumeAlias(true);
  }
  return newModeOwnerPid;
}
