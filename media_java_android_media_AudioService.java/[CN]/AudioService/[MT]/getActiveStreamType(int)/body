{
switch (mPlatformType) {
case PLATFORM_VOICE:
    if (isInCommunication()) {
      if (AudioSystem.getForceUse(AudioSystem.FOR_COMMUNICATION) == AudioSystem.FORCE_BT_SCO) {
        return AudioSystem.STREAM_BLUETOOTH_SCO;
      }
 else {
        return AudioSystem.STREAM_VOICE_CALL;
      }
    }
 else     if (suggestedStreamType == AudioManager.USE_DEFAULT_STREAM_TYPE) {
      if (isAfMusicActiveRecently(StreamOverride.sDelayMs)) {
        if (DEBUG_VOL)         Log.v(TAG,"getActiveStreamType: Forcing STREAM_MUSIC stream active");
        return AudioSystem.STREAM_MUSIC;
      }
 else {
        if (DEBUG_VOL)         Log.v(TAG,"getActiveStreamType: Forcing STREAM_RING b/c default");
        return AudioSystem.STREAM_RING;
      }
    }
 else     if (isAfMusicActiveRecently(0)) {
      if (DEBUG_VOL)       Log.v(TAG,"getActiveStreamType: Forcing STREAM_MUSIC stream active");
      return AudioSystem.STREAM_MUSIC;
    }
  break;
case PLATFORM_TELEVISION:
if (suggestedStreamType == AudioManager.USE_DEFAULT_STREAM_TYPE) {
  return AudioSystem.STREAM_MUSIC;
}
break;
default :
if (isInCommunication()) {
if (AudioSystem.getForceUse(AudioSystem.FOR_COMMUNICATION) == AudioSystem.FORCE_BT_SCO) {
if (DEBUG_VOL) Log.v(TAG,"getActiveStreamType: Forcing STREAM_BLUETOOTH_SCO");
return AudioSystem.STREAM_BLUETOOTH_SCO;
}
 else {
if (DEBUG_VOL) Log.v(TAG,"getActiveStreamType: Forcing STREAM_VOICE_CALL");
return AudioSystem.STREAM_VOICE_CALL;
}
}
 else if (AudioSystem.isStreamActive(AudioSystem.STREAM_NOTIFICATION,StreamOverride.sDelayMs) || AudioSystem.isStreamActive(AudioSystem.STREAM_RING,StreamOverride.sDelayMs)) {
if (DEBUG_VOL) Log.v(TAG,"getActiveStreamType: Forcing STREAM_NOTIFICATION");
return AudioSystem.STREAM_NOTIFICATION;
}
 else if (suggestedStreamType == AudioManager.USE_DEFAULT_STREAM_TYPE) {
if (isAfMusicActiveRecently(StreamOverride.sDelayMs)) {
if (DEBUG_VOL) Log.v(TAG,"getActiveStreamType: forcing STREAM_MUSIC");
return AudioSystem.STREAM_MUSIC;
}
 else {
if (DEBUG_VOL) Log.v(TAG,"getActiveStreamType: using STREAM_NOTIFICATION as default");
return AudioSystem.STREAM_NOTIFICATION;
}
}
break;
}
if (DEBUG_VOL) Log.v(TAG,"getActiveStreamType: Returning suggested type " + suggestedStreamType);
return suggestedStreamType;
}
