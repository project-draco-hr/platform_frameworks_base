{
  try {
    Configuration config=context.getResources().getConfiguration();
    if (mMonitorOrientation) {
      int newOrientation=config.orientation;
      if (newOrientation != mDeviceOrientation) {
        mDeviceOrientation=newOrientation;
        setOrientationForAudioSystem();
      }
    }
    if (mMonitorRotation) {
      int newRotation=((WindowManager)context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay().getRotation();
      if (newRotation != mDeviceRotation) {
        mDeviceRotation=newRotation;
        setRotationForAudioSystem();
      }
    }
    sendMsg(mAudioHandler,MSG_CONFIGURE_SAFE_MEDIA_VOLUME,SENDMSG_REPLACE,0,0,null,0);
    boolean cameraSoundForced=mContext.getResources().getBoolean(com.android.internal.R.bool.config_camera_sound_forced);
synchronized (mSettingsLock) {
synchronized (mCameraSoundForced) {
        if (cameraSoundForced != mCameraSoundForced) {
          mCameraSoundForced=cameraSoundForced;
          if (!isPlatformTelevision()) {
            VolumeStreamState s=mStreamStates[AudioSystem.STREAM_SYSTEM_ENFORCED];
            if (cameraSoundForced) {
              s.setAllIndexesToMax();
              mRingerModeAffectedStreams&=~(1 << AudioSystem.STREAM_SYSTEM_ENFORCED);
            }
 else {
              s.setAllIndexes(mStreamStates[AudioSystem.STREAM_SYSTEM]);
              mRingerModeAffectedStreams|=(1 << AudioSystem.STREAM_SYSTEM_ENFORCED);
            }
            setRingerModeInt(getRingerMode(),false);
          }
          sendMsg(mAudioHandler,MSG_SET_FORCE_USE,SENDMSG_QUEUE,AudioSystem.FOR_SYSTEM,cameraSoundForced ? AudioSystem.FORCE_SYSTEM_ENFORCED : AudioSystem.FORCE_NONE,null,0);
          sendMsg(mAudioHandler,MSG_SET_ALL_VOLUMES,SENDMSG_QUEUE,0,0,mStreamStates[AudioSystem.STREAM_SYSTEM_ENFORCED],0);
        }
      }
    }
    mVolumeController.setLayoutDirection(config.getLayoutDirection());
  }
 catch (  Exception e) {
    Log.e(TAG,"Error handling configuration change: ",e);
  }
}
