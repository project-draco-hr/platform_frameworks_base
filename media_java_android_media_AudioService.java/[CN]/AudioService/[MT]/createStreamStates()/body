{
  final int[] volumeLevelsPhone=createVolumeLevels(0,AudioManager.MAX_STREAM_VOLUME[AudioManager.STREAM_VOICE_CALL]);
  final int[] volumeLevelsCoarse=createVolumeLevels(0,AudioManager.MAX_STREAM_VOLUME[AudioManager.STREAM_SYSTEM]);
  final int[] volumeLevelsFine=createVolumeLevels(0,AudioManager.MAX_STREAM_VOLUME[AudioManager.STREAM_MUSIC]);
  final int[] volumeLevelsBtPhone=createVolumeLevels(0,AudioManager.MAX_STREAM_VOLUME[AudioManager.STREAM_BLUETOOTH_SCO]);
  int numStreamTypes=AudioSystem.getNumStreamTypes();
  VolumeStreamState[] streams=mStreamStates=new VolumeStreamState[numStreamTypes];
  for (int i=0; i < numStreamTypes; i++) {
    final int[] levels;
switch (i) {
case AudioSystem.STREAM_MUSIC:
      levels=volumeLevelsFine;
    break;
case AudioSystem.STREAM_VOICE_CALL:
  levels=volumeLevelsPhone;
break;
case AudioSystem.STREAM_BLUETOOTH_SCO:
levels=volumeLevelsBtPhone;
break;
default :
levels=volumeLevelsCoarse;
break;
}
if (i == AudioSystem.STREAM_BLUETOOTH_SCO) {
streams[i]=new VolumeStreamState(AudioManager.DEFAULT_STREAM_VOLUME[i],i,levels);
}
 else {
streams[i]=new VolumeStreamState(System.VOLUME_SETTINGS[i],i,levels);
}
}
}
