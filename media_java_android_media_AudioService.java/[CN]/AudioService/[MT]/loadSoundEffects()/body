{
  int status;
  loadTouchSoundAssets();
synchronized (mSoundEffectsLock) {
    if (!mBootCompleted) {
      Log.w(TAG,"loadSoundEffects() called before boot complete");
      return false;
    }
    if (mSoundPool != null) {
      return true;
    }
    mSoundPool=new SoundPool(NUM_SOUNDPOOL_CHANNELS,AudioSystem.STREAM_SYSTEM,0);
    try {
      mSoundPoolCallBack=null;
      mSoundPoolListenerThread=new SoundPoolListenerThread();
      mSoundPoolListenerThread.start();
      mSoundEffectsLock.wait();
    }
 catch (    InterruptedException e) {
      Log.w(TAG,"Interrupted while waiting sound pool listener thread.");
    }
    if (mSoundPoolCallBack == null) {
      Log.w(TAG,"loadSoundEffects() could not create SoundPool listener or thread");
      if (mSoundPoolLooper != null) {
        mSoundPoolLooper.quit();
        mSoundPoolLooper=null;
      }
      mSoundPoolListenerThread=null;
      mSoundPool.release();
      mSoundPool=null;
      return false;
    }
    int[] poolId=new int[SOUND_EFFECT_FILES.size()];
    for (int fileIdx=0; fileIdx < SOUND_EFFECT_FILES.size(); fileIdx++) {
      poolId[fileIdx]=-1;
    }
    int lastSample=0;
    for (int effect=0; effect < AudioManager.NUM_SOUND_EFFECTS; effect++) {
      if (SOUND_EFFECT_FILES_MAP[effect][1] == 0) {
        continue;
      }
      if (poolId[SOUND_EFFECT_FILES_MAP[effect][0]] == -1) {
        String filePath=Environment.getRootDirectory() + SOUND_EFFECTS_PATH + SOUND_EFFECT_FILES.get(SOUND_EFFECT_FILES_MAP[effect][0]);
        int sampleId=mSoundPool.load(filePath,0);
        if (sampleId <= 0) {
          Log.w(TAG,"Soundpool could not load file: " + filePath);
        }
 else {
          SOUND_EFFECT_FILES_MAP[effect][1]=sampleId;
          poolId[SOUND_EFFECT_FILES_MAP[effect][0]]=sampleId;
          lastSample=sampleId;
        }
      }
 else {
        SOUND_EFFECT_FILES_MAP[effect][1]=poolId[SOUND_EFFECT_FILES_MAP[effect][0]];
      }
    }
    if (lastSample != 0) {
      mSoundPoolCallBack.setLastSample(lastSample);
      try {
        mSoundEffectsLock.wait();
        status=mSoundPoolCallBack.status();
      }
 catch (      java.lang.InterruptedException e) {
        Log.w(TAG,"Interrupted while waiting sound pool callback.");
        status=-1;
      }
    }
 else {
      status=-1;
    }
    if (mSoundPoolLooper != null) {
      mSoundPoolLooper.quit();
      mSoundPoolLooper=null;
    }
    mSoundPoolListenerThread=null;
    if (status != 0) {
      Log.w(TAG,"loadSoundEffects(), Error " + ((lastSample != 0) ? mSoundPoolCallBack.status() : -1) + " while loading samples");
      for (int effect=0; effect < AudioManager.NUM_SOUND_EFFECTS; effect++) {
        if (SOUND_EFFECT_FILES_MAP[effect][1] > 0) {
          SOUND_EFFECT_FILES_MAP[effect][1]=-1;
        }
      }
      mSoundPool.release();
      mSoundPool=null;
    }
  }
  return (status == 0);
}
