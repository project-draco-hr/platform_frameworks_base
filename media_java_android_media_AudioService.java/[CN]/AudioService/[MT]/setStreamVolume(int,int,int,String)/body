{
  if (mUseFixedVolume) {
    return;
  }
  ensureValidStreamType(streamType);
  int streamTypeAlias=mStreamVolumeAlias[streamType];
  VolumeStreamState streamState=mStreamStates[streamTypeAlias];
  final int device=getDeviceForStream(streamType);
  int oldIndex;
  if (mAppOps.noteOp(STEAM_VOLUME_OPS[streamTypeAlias],Binder.getCallingUid(),callingPackage) != AppOpsManager.MODE_ALLOWED) {
    return;
  }
synchronized (mSafeMediaVolumeState) {
    mPendingVolumeCommand=null;
    oldIndex=streamState.getIndex(device);
    index=rescaleIndex(index * 10,streamType,streamTypeAlias);
    flags&=~AudioManager.FLAG_FIXED_VOLUME;
    if ((streamTypeAlias == AudioSystem.STREAM_MUSIC) && ((device & mFixedVolumeDevices) != 0)) {
      flags|=AudioManager.FLAG_FIXED_VOLUME;
      if (index != 0) {
        if (mSafeMediaVolumeState == SAFE_MEDIA_VOLUME_ACTIVE && (device & mSafeMediaVolumeDevices) != 0) {
          index=mSafeMediaVolumeIndex;
        }
 else {
          index=streamState.getMaxIndex();
        }
      }
    }
    if (!checkSafeMediaVolume(streamTypeAlias,index,device)) {
      mVolumePanel.postDisplaySafeVolumeWarning(flags);
      mPendingVolumeCommand=new StreamVolumeCommand(streamType,index,flags,device);
    }
 else {
      onSetStreamVolume(streamType,index,flags,device);
      index=mStreamStates[streamType].getIndex(device);
    }
  }
  sendVolumeUpdate(streamType,oldIndex,index,flags);
}
