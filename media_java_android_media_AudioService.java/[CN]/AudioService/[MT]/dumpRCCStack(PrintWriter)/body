{
  pw.println("\nRemote Control Client stack entries:");
synchronized (mRCStack) {
    Iterator<RemoteControlStackEntry> stackIterator=mRCStack.iterator();
    while (stackIterator.hasNext()) {
      RemoteControlStackEntry rcse=stackIterator.next();
      pw.println("  uid: " + rcse.mCallingUid + "  -- id: "+ rcse.mRccId+ "  -- type: "+ rcse.mPlaybackType+ "  -- state: "+ rcse.mPlaybackState+ "  -- vol handling: "+ rcse.mPlaybackVolumeHandling+ "  -- vol: "+ rcse.mPlaybackVolume+ "  -- volMax: "+ rcse.mPlaybackVolumeMax);
    }
  }
synchronized (mMainRemote) {
    pw.println("\nRemote Volume State:");
    pw.println("  has remote: " + mHasRemotePlayback);
    pw.println("  is remote active: " + mMainRemoteIsActive);
    pw.println("  rccId: " + mMainRemote.mRccId);
    pw.println("  volume handling: " + ((mMainRemote.mVolumeHandling == RemoteControlClient.PLAYBACK_VOLUME_FIXED) ? "PLAYBACK_VOLUME_FIXED(0)" : "PLAYBACK_VOLUME_VARIABLE(1)"));
    pw.println("  volume: " + mMainRemote.mVolume);
    pw.println("  volume steps: " + mMainRemote.mVolumeMax);
  }
}
