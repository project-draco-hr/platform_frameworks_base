{
  if (mUseFixedVolume) {
    return;
  }
  if (DEBUG_VOL)   Log.d(TAG,"adjustStreamVolume() stream=" + streamType + ", dir="+ direction);
  ensureValidDirection(direction);
  ensureValidStreamType(streamType);
  int streamTypeAlias=mStreamVolumeAlias[streamType];
  VolumeStreamState streamState=mStreamStates[streamTypeAlias];
  final int device=getDeviceForStream(streamTypeAlias);
  int aliasIndex=streamState.getIndex(device);
  boolean adjustVolume=true;
  int step;
synchronized (mSafeMediaVolumeState) {
    mPendingVolumeCommand=null;
  }
  flags&=~AudioManager.FLAG_FIXED_VOLUME;
  if ((streamTypeAlias == AudioSystem.STREAM_MUSIC) && ((device & mFixedVolumeDevices) != 0)) {
    flags|=AudioManager.FLAG_FIXED_VOLUME;
    if (mSafeMediaVolumeState == SAFE_MEDIA_VOLUME_ACTIVE && (device & mSafeMediaVolumeDevices) != 0) {
      step=mSafeMediaVolumeIndex;
    }
 else {
      step=streamState.getMaxIndex();
    }
    if (aliasIndex != 0) {
      aliasIndex=step;
    }
  }
 else {
    step=rescaleIndex(10,streamType,streamTypeAlias);
  }
  if (((flags & AudioManager.FLAG_ALLOW_RINGER_MODES) != 0) || (streamTypeAlias == getMasterStreamType())) {
    int ringerMode=getRingerMode();
    if (ringerMode == AudioManager.RINGER_MODE_VIBRATE) {
      flags&=~AudioManager.FLAG_VIBRATE;
    }
    adjustVolume=checkForRingerModeChange(aliasIndex,direction,step);
  }
  int oldIndex=mStreamStates[streamType].getIndex(device);
  if (adjustVolume && (direction != AudioManager.ADJUST_SAME)) {
    if ((direction == AudioManager.ADJUST_RAISE) && !checkSafeMediaVolume(streamTypeAlias,aliasIndex + step,device)) {
      Log.e(TAG,"adjustStreamVolume() safe volume index = " + oldIndex);
      mVolumePanel.postDisplaySafeVolumeWarning(flags);
    }
 else     if (streamState.adjustIndex(direction * step,device)) {
      sendMsg(mAudioHandler,MSG_SET_DEVICE_VOLUME,SENDMSG_QUEUE,device,0,streamState,0);
    }
  }
  int index=mStreamStates[streamType].getIndex(device);
  sendVolumeUpdate(streamType,oldIndex,index,flags);
}
