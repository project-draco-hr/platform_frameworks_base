{
  Slog.i(TAG,"sendDeviceConnectionIntent(dev:0x" + Integer.toHexString(device) + " state:0x"+ Integer.toHexString(state)+ " address:"+ address+ " name:"+ deviceName+ ");");
  Intent intent=new Intent();
  intent.putExtra(CONNECT_INTENT_KEY_STATE,state);
  intent.putExtra(CONNECT_INTENT_KEY_ADDRESS,address);
  intent.putExtra(CONNECT_INTENT_KEY_PORT_NAME,deviceName);
  intent.addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY);
  int connType=0;
  if (device == AudioSystem.DEVICE_OUT_WIRED_HEADSET) {
    connType=AudioRoutesInfo.MAIN_HEADSET;
    intent.setAction(Intent.ACTION_HEADSET_PLUG);
    intent.putExtra("microphone",1);
  }
 else   if (device == AudioSystem.DEVICE_OUT_WIRED_HEADPHONE || device == AudioSystem.DEVICE_OUT_LINE) {
    connType=AudioRoutesInfo.MAIN_HEADPHONES;
    intent.setAction(Intent.ACTION_HEADSET_PLUG);
    intent.putExtra("microphone",0);
  }
 else   if (device == AudioSystem.DEVICE_OUT_HDMI || device == AudioSystem.DEVICE_OUT_HDMI_ARC) {
    connType=AudioRoutesInfo.MAIN_HDMI;
    configureHdmiPlugIntent(intent,state);
  }
 else   if (device == AudioSystem.DEVICE_OUT_USB_DEVICE) {
    connType=AudioRoutesInfo.MAIN_USB;
  }
synchronized (mCurAudioRoutes) {
    if (connType != 0) {
      int newConn=mCurAudioRoutes.mMainType;
      if (state != 0) {
        newConn|=connType;
      }
 else {
        newConn&=~connType;
      }
      if (newConn != mCurAudioRoutes.mMainType) {
        mCurAudioRoutes.mMainType=newConn;
        sendMsg(mAudioHandler,MSG_REPORT_NEW_ROUTES,SENDMSG_NOOP,0,0,null,0);
      }
    }
  }
  final long ident=Binder.clearCallingIdentity();
  try {
    ActivityManagerNative.broadcastStickyIntent(intent,null,UserHandle.USER_ALL);
  }
  finally {
    Binder.restoreCallingIdentity(ident);
  }
}
