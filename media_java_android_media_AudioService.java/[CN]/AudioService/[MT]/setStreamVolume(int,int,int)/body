{
  ensureValidStreamType(streamType);
  VolumeStreamState streamState=mStreamStates[mStreamVolumeAlias[streamType]];
  final int device=getDeviceForStream(streamType);
  int oldIndex;
  flags&=~AudioManager.FLAG_FIXED_VOLUME;
  if ((mStreamVolumeAlias[streamType] == AudioSystem.STREAM_MUSIC) && ((device & mFixedVolumeDevices) != 0)) {
    flags|=AudioManager.FLAG_FIXED_VOLUME;
    index=mStreamStates[streamType].getMaxIndex();
    oldIndex=index;
  }
 else {
    oldIndex=streamState.getIndex(device,(streamState.muteCount() != 0));
    index=rescaleIndex(index * 10,streamType,mStreamVolumeAlias[streamType]);
    if (!checkSafeMediaVolume(mStreamVolumeAlias[streamType],index,device)) {
      return;
    }
    if (((flags & AudioManager.FLAG_ALLOW_RINGER_MODES) != 0) || (mStreamVolumeAlias[streamType] == getMasterStreamType())) {
      int newRingerMode;
      if (index == 0) {
        newRingerMode=mHasVibrator ? AudioManager.RINGER_MODE_VIBRATE : AudioManager.RINGER_MODE_SILENT;
        setStreamVolumeInt(mStreamVolumeAlias[streamType],index,device,false,true);
      }
 else {
        newRingerMode=AudioManager.RINGER_MODE_NORMAL;
      }
      setRingerMode(newRingerMode);
    }
    setStreamVolumeInt(mStreamVolumeAlias[streamType],index,device,false,true);
    index=mStreamStates[streamType].getIndex(device,(mStreamStates[streamType].muteCount() != 0));
  }
  sendVolumeUpdate(streamType,oldIndex,index,flags);
}
