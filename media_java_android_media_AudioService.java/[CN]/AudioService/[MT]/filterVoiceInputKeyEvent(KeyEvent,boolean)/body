{
  int voiceButtonAction=VOICEBUTTON_ACTION_DISCARD_CURRENT_KEY_PRESS;
  int keyAction=keyEvent.getAction();
synchronized (mVoiceEventLock) {
switch (mVoiceButtonState) {
case VOICEBUTTON_STATE_IDLE:
      if (keyAction == KeyEvent.ACTION_DOWN) {
        mVoiceButtonDownTime=keyEvent.getDownTime();
        mVoiceButtonState=VOICEBUTTON_STATE_DOWN;
      }
 else       if (keyAction == KeyEvent.ACTION_UP) {
      }
 else {
        logErrorForKeyAction(keyAction,"VOICEBUTTON_STATE_IDLE");
      }
    break;
case VOICEBUTTON_STATE_DOWN:
  if ((keyEvent.getEventTime() - mVoiceButtonDownTime) >= MEDIABUTTON_LONG_PRESS_DURATION_MS) {
    voiceButtonAction=VOICEBUTTON_ACTION_START_VOICE_INPUT;
    if (keyAction == KeyEvent.ACTION_UP) {
      mVoiceButtonState=VOICEBUTTON_STATE_IDLE;
    }
 else     if (keyAction == KeyEvent.ACTION_DOWN) {
      mVoiceButtonState=VOICEBUTTON_STATE_DOWN_IGNORE_NEW;
    }
 else {
      logErrorForKeyAction(keyAction,"VOICEBUTTON_STATE_DOWN");
    }
  }
 else {
    if (keyAction == KeyEvent.ACTION_UP) {
      voiceButtonAction=VOICEBUTTON_ACTION_SIMULATE_KEY_PRESS;
      mVoiceButtonState=VOICEBUTTON_STATE_IDLE;
    }
 else     if (keyAction == KeyEvent.ACTION_DOWN) {
    }
 else {
      logErrorForKeyAction(keyAction,"VOICEBUTTON_STATE_DOWN");
    }
  }
break;
case VOICEBUTTON_STATE_DOWN_IGNORE_NEW:
if (keyAction == KeyEvent.ACTION_UP) {
mVoiceButtonState=VOICEBUTTON_STATE_IDLE;
}
 else if (keyAction == KeyEvent.ACTION_DOWN) {
}
 else {
logErrorForKeyAction(keyAction,"VOICEBUTTON_STATE_DOWN_IGNORE_NEW");
}
break;
}
}
switch (voiceButtonAction) {
case VOICEBUTTON_ACTION_DISCARD_CURRENT_KEY_PRESS:
if (DEBUG_RC) Log.v(TAG,"   ignore key event");
break;
case VOICEBUTTON_ACTION_START_VOICE_INPUT:
if (DEBUG_RC) Log.v(TAG,"   start voice-based interactions");
startVoiceBasedInteractions(needWakeLock);
break;
case VOICEBUTTON_ACTION_SIMULATE_KEY_PRESS:
if (DEBUG_RC) Log.v(TAG,"   send simulated key event");
sendSimulatedMediaButtonEvent(keyEvent,needWakeLock);
break;
}
}
