{
synchronized (mSettingsLock) {
    mRingerMode=ringerMode;
  }
  int numStreamTypes=AudioSystem.getNumStreamTypes();
  final boolean ringerModeMute=ringerMode == AudioManager.RINGER_MODE_VIBRATE || ringerMode == AudioManager.RINGER_MODE_SILENT;
  for (int streamType=numStreamTypes - 1; streamType >= 0; streamType--) {
    final boolean isMuted=isStreamMutedByRingerMode(streamType);
    final boolean shouldMute=ringerModeMute && isStreamAffectedByRingerMode(streamType);
    if (isMuted == shouldMute)     continue;
    if (!shouldMute) {
      if ((isPlatformVoice() || mHasVibrator) && mStreamVolumeAlias[streamType] == AudioSystem.STREAM_RING) {
synchronized (VolumeStreamState.class) {
          Set set=mStreamStates[streamType].mIndex.entrySet();
          Iterator i=set.iterator();
          while (i.hasNext()) {
            Map.Entry entry=(Map.Entry)i.next();
            if ((Integer)entry.getValue() == 0) {
              entry.setValue(10);
            }
          }
        }
      }
      mStreamStates[streamType].mute(null,false);
      mRingerModeMutedStreams&=~(1 << streamType);
    }
 else {
      mStreamStates[streamType].mute(null,true);
      mRingerModeMutedStreams|=(1 << streamType);
    }
  }
  if (persist) {
    sendMsg(mAudioHandler,MSG_PERSIST_RINGER_MODE,SENDMSG_REPLACE,0,0,null,PERSIST_DELAY);
  }
}
