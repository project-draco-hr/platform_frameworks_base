{
  Log.i(TAG," AudioFocus  requestAudioFocus() from " + clientId);
  if ((cb == null) || !cb.pingBinder()) {
    Log.i(TAG," AudioFocus  DOA client for requestAudioFocus(), exiting");
    return AudioManager.AUDIOFOCUS_REQUEST_FAILED;
  }
  if (!canReassignAudioFocus()) {
    return AudioManager.AUDIOFOCUS_REQUEST_FAILED;
  }
synchronized (mFocusStack) {
    if (!mFocusStack.empty() && mFocusStack.peek().mClientId.equals(clientId)) {
      mFocusStack.peek().mDurationHint=durationHint;
      return AudioManager.AUDIOFOCUS_REQUEST_GRANTED;
    }
    if (!mFocusStack.empty() && (mFocusStack.peek().mFocusDispatcher != null)) {
      try {
        mFocusStack.peek().mFocusDispatcher.dispatchAudioFocusChange((durationHint == AudioManager.AUDIOFOCUS_GAIN) ? AudioManager.AUDIOFOCUS_LOSS : AudioManager.AUDIOFOCUS_LOSS_TRANSIENT,mFocusStack.peek().mClientId);
      }
 catch (      RemoteException e) {
        Log.e(TAG," Failure to signal loss of focus due to " + e);
        e.printStackTrace();
      }
    }
    mFocusStack.push(new FocusStackEntry(mainStreamType,durationHint,false,fd,cb,clientId));
  }
  AudioFocusDeathHandler afdh=new AudioFocusDeathHandler(cb);
  try {
    cb.linkToDeath(afdh,0);
  }
 catch (  RemoteException e) {
    Log.w(TAG," AudioFocus  requestAudioFocus() could not link to " + cb + " binder death");
  }
  return AudioManager.AUDIOFOCUS_REQUEST_GRANTED;
}
