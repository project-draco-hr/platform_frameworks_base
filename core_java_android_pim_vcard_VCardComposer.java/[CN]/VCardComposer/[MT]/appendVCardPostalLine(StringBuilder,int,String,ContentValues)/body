{
  builder.append(VCARD_PROPERTY_ADR);
  builder.append(VCARD_ATTR_SEPARATOR);
  boolean dataExists=false;
  String[] dataArray=VCardUtils.getVCardPostalElements(contentValues);
  int length=dataArray.length;
  final boolean useQuotedPrintable=mUsesQuotedPrintable;
  for (int i=0; i < length; i++) {
    String data=dataArray[i];
    if (!TextUtils.isEmpty(data)) {
      dataExists=true;
      if (useQuotedPrintable) {
        dataArray[i]=encodeQuotedPrintable(data);
      }
 else {
        dataArray[i]=escapeCharacters(data);
      }
    }
  }
  boolean typeIsAppended=false;
switch (type) {
case StructuredPostal.TYPE_HOME:
    builder.append(Constants.ATTR_TYPE_HOME);
  typeIsAppended=true;
break;
case StructuredPostal.TYPE_WORK:
builder.append(Constants.ATTR_TYPE_WORK);
typeIsAppended=true;
break;
case StructuredPostal.TYPE_CUSTOM:
if (mUsesAndroidProperty && VCardUtils.containsOnlyAlphaDigitHyphen(label)) {
builder.append("X-");
builder.append(label);
builder.append(VCARD_DATA_SEPARATOR);
}
break;
case StructuredPostal.TYPE_OTHER:
break;
default :
Log.e(LOG_TAG,"Unknown StructuredPostal type: " + type);
break;
}
if (dataExists) {
if (typeIsAppended) {
builder.append(VCARD_ATTR_SEPARATOR);
}
builder.append(mVCardAttributeCharset);
if (useQuotedPrintable) {
builder.append(VCARD_ATTR_SEPARATOR);
builder.append(VCARD_ATTR_ENCODING_QP);
}
}
builder.append(VCARD_DATA_SEPARATOR);
if (dataExists) {
builder.append(dataArray[0]);
builder.append(VCARD_ITEM_SEPARATOR);
builder.append(dataArray[1]);
builder.append(VCARD_ITEM_SEPARATOR);
builder.append(dataArray[2]);
builder.append(VCARD_ITEM_SEPARATOR);
builder.append(dataArray[3]);
builder.append(VCARD_ITEM_SEPARATOR);
builder.append(dataArray[4]);
builder.append(VCARD_ITEM_SEPARATOR);
builder.append(dataArray[5]);
builder.append(VCARD_ITEM_SEPARATOR);
builder.append(dataArray[6]);
}
builder.append(VCARD_COL_SEPARATOR);
}
