{
  builder.append(Constants.PROPERTY_EMAIL);
  final int typeAsPrimitive;
  if (typeAsObject == null) {
    typeAsPrimitive=Email.TYPE_OTHER;
  }
 else {
    typeAsPrimitive=typeAsObject;
  }
  final String typeAsString;
switch (typeAsPrimitive) {
case Email.TYPE_CUSTOM:
{
      if (android.provider.Contacts.ContactMethodsColumns.MOBILE_EMAIL_TYPE_NAME.equals(label)) {
        typeAsString=Constants.ATTR_TYPE_CELL;
      }
 else       if (mUsesAndroidProperty && !TextUtils.isEmpty(label) && VCardUtils.containsOnlyAlphaDigitHyphen(label)) {
        typeAsString="X-" + label;
      }
 else {
        typeAsString=DEFAULT_EMAIL_TYPE;
      }
      break;
    }
case Email.TYPE_HOME:
{
    typeAsString=Constants.ATTR_TYPE_HOME;
    break;
  }
case Email.TYPE_WORK:
{
  typeAsString=Constants.ATTR_TYPE_WORK;
  break;
}
case Email.TYPE_OTHER:
{
typeAsString=DEFAULT_EMAIL_TYPE;
break;
}
case Email.TYPE_MOBILE:
{
typeAsString=Constants.ATTR_TYPE_CELL;
break;
}
default :
{
Log.e(LOG_TAG,"Unknown Email type: " + typeAsPrimitive);
typeAsString=DEFAULT_EMAIL_TYPE;
break;
}
}
builder.append(VCARD_ATTR_SEPARATOR);
appendTypeAttribute(builder,typeAsString);
builder.append(VCARD_DATA_SEPARATOR);
builder.append(data);
builder.append(VCARD_COL_SEPARATOR);
}
