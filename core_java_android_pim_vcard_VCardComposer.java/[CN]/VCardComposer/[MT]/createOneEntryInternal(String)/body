{
  final Map<String,List<ContentValues>> contentValuesListMap=new HashMap<String,List<ContentValues>>();
  final String selection=Data.CONTACT_ID + "=?";
  final String[] selectionArgs=new String[]{contactId};
  boolean dataExists=false;
  EntityIterator entityIterator=null;
  try {
    entityIterator=mContentResolver.queryEntities(sDataRequestUri,selection,selectionArgs,null);
    dataExists=entityIterator.hasNext();
    while (entityIterator.hasNext()) {
      Entity entity=entityIterator.next();
      for (      NamedContentValues namedContentValues : entity.getSubValues()) {
        ContentValues contentValues=namedContentValues.values;
        String key=contentValues.getAsString(Data.MIMETYPE);
        if (key != null) {
          List<ContentValues> contentValuesList=contentValuesListMap.get(key);
          if (contentValuesList == null) {
            contentValuesList=new ArrayList<ContentValues>();
            contentValuesListMap.put(key,contentValuesList);
          }
          contentValuesList.add(contentValues);
        }
      }
    }
  }
 catch (  RemoteException e) {
    Log.e(LOG_TAG,String.format("RemoteException at id %s (%s)",contactId,e.getMessage()));
    return "";
  }
 finally {
    if (entityIterator != null) {
      entityIterator.close();
    }
  }
  if (!dataExists) {
    return "";
  }
  final StringBuilder builder=new StringBuilder();
  appendVCardLine(builder,Constants.PROPERTY_BEGIN,VCARD_DATA_VCARD);
  if (mIsV30) {
    appendVCardLine(builder,Constants.PROPERTY_VERSION,Constants.VERSION_V30);
  }
 else {
    appendVCardLine(builder,Constants.PROPERTY_VERSION,Constants.VERSION_V21);
  }
  appendStructuredNames(builder,contentValuesListMap);
  appendNickNames(builder,contentValuesListMap);
  appendPhones(builder,contentValuesListMap);
  appendEmails(builder,contentValuesListMap);
  appendPostals(builder,contentValuesListMap);
  appendIms(builder,contentValuesListMap);
  appendWebsites(builder,contentValuesListMap);
  appendBirthday(builder,contentValuesListMap);
  appendOrganizations(builder,contentValuesListMap);
  appendPhotos(builder,contentValuesListMap);
  appendNotes(builder,contentValuesListMap);
  if (mIsDoCoMo) {
    appendVCardLine(builder,Constants.PROPERTY_X_CLASS,VCARD_DATA_PUBLIC);
    appendVCardLine(builder,Constants.PROPERTY_X_REDUCTION,"");
    appendVCardLine(builder,Constants.PROPERTY_X_NO,"");
    appendVCardLine(builder,Constants.PROPERTY_X_DCM_HMN_MODE,"");
  }
  appendVCardLine(builder,Constants.PROPERTY_END,VCARD_DATA_VCARD);
  return builder.toString();
}
