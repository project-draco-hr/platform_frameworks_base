{
  final List<ContentValues> contentValuesList=contentValuesListMap.get(Event.CONTENT_ITEM_TYPE);
  if (contentValuesList == null) {
    return;
  }
  String primaryBirthday=null;
  String secondaryBirthday=null;
  for (  ContentValues contentValues : contentValuesList) {
    if (contentValues == null) {
      continue;
    }
    final Integer eventType=contentValues.getAsInteger(Event.TYPE);
    if (eventType == null || !eventType.equals(Event.TYPE_BIRTHDAY)) {
      continue;
    }
    final String birthdayCandidate=contentValues.getAsString(Event.START_DATE);
    if (birthdayCandidate == null) {
      continue;
    }
    final Integer isSuperPrimaryAsInteger=contentValues.getAsInteger(Event.IS_SUPER_PRIMARY);
    final boolean isSuperPrimary=(isSuperPrimaryAsInteger != null ? (isSuperPrimaryAsInteger > 0) : false);
    if (isSuperPrimary) {
      primaryBirthday=birthdayCandidate;
      break;
    }
    final Integer isPrimaryAsInteger=contentValues.getAsInteger(Event.IS_PRIMARY);
    final boolean isPrimary=(isPrimaryAsInteger != null ? (isPrimaryAsInteger > 0) : false);
    if (isPrimary) {
      primaryBirthday=birthdayCandidate;
    }
 else     if (secondaryBirthday == null) {
      secondaryBirthday=birthdayCandidate;
    }
  }
  final String birthday;
  if (primaryBirthday != null) {
    birthday=primaryBirthday.trim();
  }
 else   if (secondaryBirthday != null) {
    birthday=secondaryBirthday.trim();
  }
 else {
    return;
  }
  appendVCardLineWithCharsetAndQPDetection(builder,Constants.PROPERTY_BDAY,birthday);
}
