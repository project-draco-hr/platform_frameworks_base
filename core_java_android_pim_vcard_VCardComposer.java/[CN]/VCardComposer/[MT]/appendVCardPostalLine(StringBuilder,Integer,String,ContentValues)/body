{
  builder.append(Constants.PROPERTY_ADR);
  builder.append(VCARD_ATTR_SEPARATOR);
  boolean dataExists=false;
  String[] dataArray=VCardUtils.getVCardPostalElements(contentValues);
  boolean actuallyUseQuotedPrintable=false;
  boolean shouldAppendCharset=false;
  for (  String data : dataArray) {
    if (!TextUtils.isEmpty(data)) {
      dataExists=true;
      if (!shouldAppendCharset && !VCardUtils.containsOnlyPrintableAscii(data)) {
        shouldAppendCharset=true;
      }
      if (mUsesQuotedPrintable && !VCardUtils.containsOnlyNonCrLfPrintableAscii(data)) {
        actuallyUseQuotedPrintable=true;
        break;
      }
    }
  }
  int length=dataArray.length;
  for (int i=0; i < length; i++) {
    String data=dataArray[i];
    if (!TextUtils.isEmpty(data)) {
      if (actuallyUseQuotedPrintable) {
        dataArray[i]=encodeQuotedPrintable(data);
      }
 else {
        dataArray[i]=escapeCharacters(data);
      }
    }
  }
  final int typeAsPrimitive;
  if (typeAsObject == null) {
    typeAsPrimitive=StructuredPostal.TYPE_OTHER;
  }
 else {
    typeAsPrimitive=typeAsObject;
  }
  String typeAsString=null;
switch (typeAsPrimitive) {
case StructuredPostal.TYPE_HOME:
{
      typeAsString=Constants.ATTR_TYPE_HOME;
      break;
    }
case StructuredPostal.TYPE_WORK:
{
    typeAsString=Constants.ATTR_TYPE_WORK;
    break;
  }
case StructuredPostal.TYPE_CUSTOM:
{
  if (mUsesAndroidProperty && !TextUtils.isEmpty(label) && VCardUtils.containsOnlyAlphaDigitHyphen(label)) {
    builder.append("X-");
    builder.append(label);
    builder.append(VCARD_DATA_SEPARATOR);
  }
  break;
}
case StructuredPostal.TYPE_OTHER:
{
break;
}
default :
{
Log.e(LOG_TAG,"Unknown StructuredPostal type: " + typeAsPrimitive);
break;
}
}
{
boolean shouldAppendAttrSeparator=false;
if (typeAsString != null) {
appendTypeAttribute(builder,typeAsString);
shouldAppendAttrSeparator=true;
}
if (dataExists) {
if (shouldAppendCharset) {
if (shouldAppendAttrSeparator) {
builder.append(VCARD_ATTR_SEPARATOR);
}
builder.append(mVCardAttributeCharset);
shouldAppendAttrSeparator=true;
}
if (actuallyUseQuotedPrintable) {
if (shouldAppendAttrSeparator) {
builder.append(VCARD_ATTR_SEPARATOR);
}
builder.append(VCARD_ATTR_ENCODING_QP);
shouldAppendAttrSeparator=true;
}
}
}
builder.append(VCARD_DATA_SEPARATOR);
if (dataExists) {
builder.append(dataArray[0]);
builder.append(VCARD_ITEM_SEPARATOR);
builder.append(dataArray[1]);
builder.append(VCARD_ITEM_SEPARATOR);
builder.append(dataArray[2]);
builder.append(VCARD_ITEM_SEPARATOR);
builder.append(dataArray[3]);
builder.append(VCARD_ITEM_SEPARATOR);
builder.append(dataArray[4]);
builder.append(VCARD_ITEM_SEPARATOR);
builder.append(dataArray[5]);
builder.append(VCARD_ITEM_SEPARATOR);
builder.append(dataArray[6]);
}
builder.append(VCARD_COL_SEPARATOR);
}
