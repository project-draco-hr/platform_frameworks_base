{
  final List<ContentValues> contentValuesList=contentValuesListMap.get(Email.CONTENT_ITEM_TYPE);
  boolean emailAddressExists=false;
  if (contentValuesList != null) {
    final Set<String> addressSet=new HashSet<String>();
    for (    ContentValues contentValues : contentValuesList) {
      String emailAddress=contentValues.getAsString(Email.DATA);
      if (emailAddress != null) {
        emailAddress=emailAddress.trim();
      }
      if (TextUtils.isEmpty(emailAddress)) {
        continue;
      }
      Integer typeAsObject=contentValues.getAsInteger(Email.TYPE);
      final int type=(typeAsObject != null ? typeAsObject : DEFAULT_EMAIL_TYPE);
      final String label=contentValues.getAsString(Email.LABEL);
      Integer isPrimaryAsInteger=contentValues.getAsInteger(Email.IS_PRIMARY);
      final boolean isPrimary=(isPrimaryAsInteger != null ? (isPrimaryAsInteger > 0) : false);
      emailAddressExists=true;
      if (!addressSet.contains(emailAddress)) {
        addressSet.add(emailAddress);
        appendVCardEmailLine(builder,type,label,emailAddress,isPrimary);
      }
    }
  }
  if (!emailAddressExists && mIsDoCoMo) {
    appendVCardEmailLine(builder,Email.TYPE_HOME,"","",false);
  }
}
