{
  mContext=context;
  mVCardType=vcardType;
  mCareHandlerErrors=careHandlerErrors;
  mContentResolver=context.getContentResolver();
  mIsV30=VCardConfig.isV30(vcardType);
  mUsesQuotedPrintable=VCardConfig.usesQuotedPrintable(vcardType);
  mIsDoCoMo=VCardConfig.isDoCoMo(vcardType);
  mIsJapaneseMobilePhone=VCardConfig.needsToConvertPhoneticString(vcardType);
  mOnlyOneNoteFieldIsAvailable=VCardConfig.onlyOneNoteFieldIsAvailable(vcardType);
  mUsesAndroidProperty=VCardConfig.usesAndroidSpecificProperty(vcardType);
  mUsesDefactProperty=VCardConfig.usesDefactProperty(vcardType);
  mUsesUtf8=VCardConfig.usesUtf8(vcardType);
  mUsesShiftJis=VCardConfig.usesShiftJis(vcardType);
  mRefrainsQPToPrimaryProperties=VCardConfig.refrainsQPToPrimaryProperties(vcardType);
  mAppendTypeParamName=VCardConfig.appendTypeParamName(vcardType);
  mNeedsToConvertPhoneticString=VCardConfig.needsToConvertPhoneticString(vcardType);
  mHandlerList=new ArrayList<OneEntryHandler>();
  if (mIsDoCoMo) {
    String charset;
    try {
      charset=CharsetUtils.charsetForVendor(SHIFT_JIS,"docomo").name();
    }
 catch (    UnsupportedCharsetException e) {
      Log.e(LOG_TAG,"DoCoMo-specific SHIFT_JIS was not found. Use SHIFT_JIS as is.");
      charset=SHIFT_JIS;
    }
    mCharsetString=charset;
    mVCardCharsetParameter="CHARSET=" + SHIFT_JIS;
  }
 else   if (mUsesShiftJis) {
    String charset;
    try {
      charset=CharsetUtils.charsetForVendor(SHIFT_JIS).name();
    }
 catch (    UnsupportedCharsetException e) {
      Log.e(LOG_TAG,"Vendor-specific SHIFT_JIS was not found. Use SHIFT_JIS as is.");
      charset=SHIFT_JIS;
    }
    mCharsetString=charset;
    mVCardCharsetParameter="CHARSET=" + SHIFT_JIS;
  }
 else {
    mCharsetString=UTF_8;
    mVCardCharsetParameter="CHARSET=" + UTF_8;
  }
}
