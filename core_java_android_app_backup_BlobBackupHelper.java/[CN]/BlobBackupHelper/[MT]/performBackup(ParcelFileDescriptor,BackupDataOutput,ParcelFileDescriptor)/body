{
  final ArrayMap<String,Long> oldState=readOldState(oldStateFd);
  final ArrayMap<String,Long> newState=new ArrayMap<String,Long>();
  try {
    for (    String key : mKeys) {
      final byte[] payload=deflate(getBackupPayload(key));
      final long checksum=checksum(payload);
      newState.put(key,checksum);
      Long oldChecksum=oldState.get(key);
      if (oldChecksum == null || checksum != oldChecksum) {
        if (DEBUG) {
          Log.i(TAG,"State has changed for key " + key + ", writing");
        }
        if (payload != null) {
          data.writeEntityHeader(key,payload.length);
          data.writeEntityData(payload,payload.length);
        }
 else {
          data.writeEntityHeader(key,-1);
        }
      }
 else {
        if (DEBUG) {
          Log.i(TAG,"No change under key " + key + " => not writing");
        }
      }
    }
  }
 catch (  Exception e) {
    Log.w(TAG,"Unable to record notification state: " + e.getMessage());
    newState.clear();
  }
 finally {
    writeBackupState(newState,newStateFd);
  }
}
