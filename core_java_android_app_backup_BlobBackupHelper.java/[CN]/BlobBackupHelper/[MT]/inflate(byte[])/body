{
  byte[] result=null;
  if (compressedData != null) {
    try {
      ByteArrayInputStream source=new ByteArrayInputStream(compressedData);
      DataInputStream headerIn=new DataInputStream(source);
      int version=headerIn.readInt();
      if (version > mCurrentBlobVersion) {
        Log.w(TAG,"Saved payload from unrecognized version " + version);
        return null;
      }
      InflaterInputStream in=new InflaterInputStream(source);
      ByteArrayOutputStream inflated=new ByteArrayOutputStream();
      byte[] buffer=new byte[4096];
      int nRead;
      while ((nRead=in.read(buffer)) > 0) {
        inflated.write(buffer,0,nRead);
      }
      in.close();
      inflated.flush();
      result=inflated.toByteArray();
      if (DEBUG) {
        Log.v(TAG,"Inflated " + compressedData.length + " bytes to "+ result.length);
      }
    }
 catch (    IOException e) {
      Log.w(TAG,"Unable to process restored payload: " + e.getMessage());
    }
  }
  return result;
}
