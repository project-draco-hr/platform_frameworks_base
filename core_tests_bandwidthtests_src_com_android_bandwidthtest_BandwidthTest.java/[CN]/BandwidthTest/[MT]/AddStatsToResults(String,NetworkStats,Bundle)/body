{
  if (results == null || results.isEmpty()) {
    Log.e(LOG_TAG,"Empty bundle provided.");
    return;
  }
  Map<Integer,Entry> totalStats=new HashMap<Integer,Entry>();
  for (int i=0; i < stats.size(); ++i) {
    Entry statsEntry=stats.getValues(i,null);
    if (statsEntry.tag != 0) {
      continue;
    }
    Entry mapEntry=null;
    if (totalStats.containsKey(statsEntry.uid)) {
      mapEntry=totalStats.get(statsEntry.uid);
switch (statsEntry.set) {
case NetworkStats.SET_ALL:
        mapEntry.rxBytes=statsEntry.rxBytes;
      mapEntry.txBytes=statsEntry.txBytes;
    break;
case NetworkStats.SET_DEFAULT:
case NetworkStats.SET_FOREGROUND:
  mapEntry.rxBytes+=statsEntry.rxBytes;
mapEntry.txBytes+=statsEntry.txBytes;
break;
default :
Log.w(LOG_TAG,"Invalid state found in NetworkStats.");
}
}
 else {
totalStats.put(statsEntry.uid,statsEntry);
}
}
for (Entry entry : totalStats.values()) {
results.putInt(label + "uid",entry.uid);
results.putLong(label + "tx",entry.txBytes);
results.putLong(label + "rx",entry.rxBytes);
}
}
