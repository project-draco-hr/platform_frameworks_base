{
  boolean rotated=false;
  if (cell.width < width || cell.height < height) {
    if (mAllowRotation) {
      if (cell.width < height || cell.height < width) {
        return false;
      }
      int temp=width;
      width=height;
      height=temp;
      rotated=true;
    }
 else {
      return false;
    }
  }
  int deltaWidth=cell.width - width;
  int deltaHeight=cell.height - height;
  Cell first=new Cell();
  Cell second=new Cell();
  first.x=cell.x + width + mPadding;
  first.y=cell.y;
  first.width=deltaWidth - mPadding;
  second.x=cell.x;
  second.y=cell.y + height + mPadding;
  second.height=deltaHeight - mPadding;
  if (mSplitDecision.splitHorizontal(deltaWidth,deltaHeight,width,height)) {
    first.height=height;
    second.width=cell.width;
  }
 else {
    first.height=cell.height;
    second.width=width;
    Cell temp=first;
    first=second;
    second=temp;
  }
  if (first.width > 0 && first.height > 0) {
    prev.next=first;
    prev=first;
  }
  if (second.width > 0 && second.height > 0) {
    prev.next=second;
    second.next=cell.next;
  }
 else {
    prev.next=cell.next;
  }
  cell.next=null;
  entry.x=cell.x;
  entry.y=cell.y;
  entry.rotated=rotated;
  return true;
}
