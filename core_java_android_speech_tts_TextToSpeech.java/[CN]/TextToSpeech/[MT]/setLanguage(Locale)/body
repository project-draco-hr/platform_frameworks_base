{
synchronized (mStartLock) {
    int result=LANG_NOT_SUPPORTED;
    if (!mStarted) {
      return result;
    }
    try {
      mCachedParams[Engine.PARAM_POSITION_LANGUAGE + 1]=loc.getISO3Language();
      mCachedParams[Engine.PARAM_POSITION_COUNTRY + 1]=loc.getISO3Country();
      mCachedParams[Engine.PARAM_POSITION_VARIANT + 1]=loc.getVariant();
      result=mITts.isLanguageAvailable(mCachedParams[Engine.PARAM_POSITION_LANGUAGE + 1],mCachedParams[Engine.PARAM_POSITION_COUNTRY + 1],mCachedParams[Engine.PARAM_POSITION_VARIANT + 1]);
    }
 catch (    RemoteException e) {
      Log.e("TextToSpeech.java - setLanguage","RemoteException");
      e.printStackTrace();
      mStarted=false;
      initTts();
    }
catch (    NullPointerException e) {
      Log.e("TextToSpeech.java - setLanguage","NullPointerException");
      e.printStackTrace();
      mStarted=false;
      initTts();
    }
catch (    IllegalStateException e) {
      Log.e("TextToSpeech.java - setLanguage","IllegalStateException");
      e.printStackTrace();
      mStarted=false;
      initTts();
    }
 finally {
      return result;
    }
  }
}
