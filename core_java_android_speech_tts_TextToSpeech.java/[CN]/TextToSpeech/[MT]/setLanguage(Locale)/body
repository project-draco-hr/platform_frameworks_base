{
  return runAction(new Action<Integer>(){
    @Override public Integer run(    ITextToSpeechService service) throws RemoteException {
      if (loc == null) {
        return LANG_NOT_SUPPORTED;
      }
      String language=null, country=null;
      try {
        language=loc.getISO3Language();
      }
 catch (      MissingResourceException e) {
        Log.w(TAG,"Couldn't retrieve ISO 639-2/T language code for locale: " + loc,e);
        return LANG_NOT_SUPPORTED;
      }
      try {
        country=loc.getISO3Country();
      }
 catch (      MissingResourceException e) {
        Log.w(TAG,"Couldn't retrieve ISO 3166 country code for locale: " + loc,e);
        return LANG_NOT_SUPPORTED;
      }
      String variant=loc.getVariant();
      int result=service.isLanguageAvailable(language,country,variant);
      if (result >= LANG_AVAILABLE) {
        if (result < LANG_COUNTRY_VAR_AVAILABLE) {
          variant="";
          if (result < LANG_COUNTRY_AVAILABLE) {
            country="";
          }
        }
        String voiceName=service.getDefaultVoiceNameFor(language,country,variant);
        if (TextUtils.isEmpty(voiceName)) {
          Log.w(TAG,"Couldn't find the default voice for " + language + "/"+ country+ "/"+ variant);
          return LANG_NOT_SUPPORTED;
        }
        if (service.loadVoice(getCallerIdentity(),voiceName) == TextToSpeech.ERROR) {
          return LANG_NOT_SUPPORTED;
        }
        mParams.putString(Engine.KEY_PARAM_VOICE_NAME,voiceName);
        mParams.putString(Engine.KEY_PARAM_LANGUAGE,language);
        mParams.putString(Engine.KEY_PARAM_COUNTRY,country);
        mParams.putString(Engine.KEY_PARAM_VARIANT,variant);
      }
      return result;
    }
  }
,LANG_NOT_SUPPORTED,"setLanguage");
}
