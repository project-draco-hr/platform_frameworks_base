{
synchronized (mSpellCheckerMap) {
    final String subtypeHashCodeStr=Settings.Secure.getString(mContext.getContentResolver(),Settings.Secure.SELECTED_SPELL_CHECKER_SUBTYPE);
    if (DBG) {
      Slog.w(TAG,"getCurrentSpellChecker: " + subtypeHashCodeStr);
    }
    final SpellCheckerInfo sci=getCurrentSpellChecker(null);
    if (sci == null || sci.getSubtypeCount() == 0) {
      if (DBG) {
        Slog.w(TAG,"Subtype not found.");
      }
      return null;
    }
    if (TextUtils.isEmpty(subtypeHashCodeStr)) {
      if (DBG) {
        Slog.w(TAG,"Return first subtype in " + sci.getId());
      }
      return null;
    }
    final int hashCode=Integer.valueOf(subtypeHashCodeStr);
    for (int i=0; i < sci.getSubtypeCount(); ++i) {
      final SpellCheckerSubtype scs=sci.getSubtypeAt(i);
      if (scs.hashCode() == hashCode) {
        if (DBG) {
          Slog.w(TAG,"Return subtype " + scs.hashCode());
        }
        return scs;
      }
    }
    if (DBG) {
      Slog.w(TAG,"Return first subtype in " + sci.getId());
    }
    return null;
  }
}
