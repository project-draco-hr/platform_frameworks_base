{
  if (!mSystemReady) {
    return;
  }
  if (info == null || tsListener == null) {
    Slog.e(TAG,"getSpellCheckerService: Invalid input.");
    return;
  }
  final String sciId=info.getId();
synchronized (mSpellCheckerMap) {
    if (!mSpellCheckerMap.containsKey(sciId)) {
      return;
    }
    if (mSpellCheckerBindGroups.containsKey(sciId)) {
      mSpellCheckerBindGroups.get(sciId).addListener(tsListener,locale,scListener);
      return;
    }
    final InternalServiceConnection connection=new InternalServiceConnection(sciId,locale,scListener);
    final Intent serviceIntent=new Intent(SpellCheckerService.SERVICE_INTERFACE);
    serviceIntent.setComponent(info.getComponent());
    if (!mContext.bindService(serviceIntent,connection,Context.BIND_AUTO_CREATE)) {
      Slog.e(TAG,"Failed to get a spell checker service.");
      return;
    }
    final SpellCheckerBindGroup group=new SpellCheckerBindGroup(connection,tsListener,locale,scListener);
    mSpellCheckerBindGroups.put(sciId,group);
  }
  return;
}
