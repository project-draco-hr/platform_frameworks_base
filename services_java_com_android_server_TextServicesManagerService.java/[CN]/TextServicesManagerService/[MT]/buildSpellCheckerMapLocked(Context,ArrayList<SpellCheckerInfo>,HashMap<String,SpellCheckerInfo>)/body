{
  list.clear();
  map.clear();
  final PackageManager pm=context.getPackageManager();
  List<ResolveInfo> services=pm.queryIntentServices(new Intent(SpellCheckerService.SERVICE_INTERFACE),PackageManager.GET_META_DATA);
  final int N=services.size();
  for (int i=0; i < N; ++i) {
    final ResolveInfo ri=services.get(i);
    final ServiceInfo si=ri.serviceInfo;
    final ComponentName compName=new ComponentName(si.packageName,si.name);
    if (!android.Manifest.permission.BIND_TEXT_SERVICE.equals(si.permission)) {
      Slog.w(TAG,"Skipping text service " + compName + ": it does not require the permission "+ android.Manifest.permission.BIND_TEXT_SERVICE);
      continue;
    }
    if (DBG)     Slog.d(TAG,"Add: " + compName);
    try {
      final SpellCheckerInfo sci=new SpellCheckerInfo(context,ri);
      if (sci.getSubtypeCount() <= 0) {
        Slog.w(TAG,"Skipping text service " + compName + ": it does not contain subtypes.");
        continue;
      }
      list.add(sci);
      map.put(sci.getId(),sci);
    }
 catch (    XmlPullParserException e) {
      Slog.w(TAG,"Unable to load the spell checker " + compName,e);
    }
catch (    IOException e) {
      Slog.w(TAG,"Unable to load the spell checker " + compName,e);
    }
  }
  if (DBG) {
    Slog.d(TAG,"buildSpellCheckerMapLocked: " + list.size() + ","+ map.size());
  }
}
