{
  mSystemReady=false;
  mContext=context;
  int userId=UserHandle.USER_OWNER;
  try {
    ActivityManagerNative.getDefault().registerUserSwitchObserver(new IUserSwitchObserver.Stub(){
      @Override public void onUserSwitching(      int newUserId,      IRemoteCallback reply){
synchronized (mSpellCheckerMap) {
          switchUserLocked(newUserId);
        }
        if (reply != null) {
          try {
            reply.sendResult(null);
          }
 catch (          RemoteException e) {
          }
        }
      }
      @Override public void onUserSwitchComplete(      int newUserId) throws RemoteException {
      }
    }
);
    userId=ActivityManagerNative.getDefault().getCurrentUser().id;
  }
 catch (  RemoteException e) {
    Slog.w(TAG,"Couldn't get current user ID; guessing it's 0",e);
  }
  mMonitor=new TextServicesMonitor();
  mMonitor.register(context,null,true);
  mSettings=new TextServicesSettings(context.getContentResolver(),userId);
  switchUserLocked(userId);
}
