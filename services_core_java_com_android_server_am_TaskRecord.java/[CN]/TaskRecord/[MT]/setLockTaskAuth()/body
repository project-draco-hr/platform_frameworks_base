{
switch (mLockTaskMode) {
case LOCK_TASK_LAUNCH_MODE_DEFAULT:
    if (DEBUG_LOCKTASK)     Slog.d(TAG_LOCKTASK,"setLockTaskAuth: task=" + this + " mLockTaskAuth="+ (isLockTaskWhitelistedLocked() ? "WHITELISTED" : "PINNABLE"));
  mLockTaskAuth=isLockTaskWhitelistedLocked() ? LOCK_TASK_AUTH_WHITELISTED : LOCK_TASK_AUTH_PINNABLE;
break;
case LOCK_TASK_LAUNCH_MODE_NEVER:
if (DEBUG_LOCKTASK) Slog.d(TAG_LOCKTASK,"setLockTaskAuth: task=" + this + " mLockTaskAuth="+ (mPrivileged ? "DONT_LOCK" : "PINNABLE"));
mLockTaskAuth=mPrivileged ? LOCK_TASK_AUTH_DONT_LOCK : LOCK_TASK_AUTH_PINNABLE;
break;
case LOCK_TASK_LAUNCH_MODE_ALWAYS:
if (DEBUG_LOCKTASK) Slog.d(TAG_LOCKTASK,"setLockTaskAuth: task=" + this + " mLockTaskAuth="+ (mPrivileged ? "LAUNCHABLE" : "PINNABLE"));
mLockTaskAuth=mPrivileged ? LOCK_TASK_AUTH_LAUNCHABLE : LOCK_TASK_AUTH_PINNABLE;
break;
case LOCK_TASK_LAUNCH_MODE_IF_WHITELISTED:
if (DEBUG_LOCKTASK) Slog.d(TAG_LOCKTASK,"setLockTaskAuth: task=" + this + " mLockTaskAuth="+ (isLockTaskWhitelistedLocked() ? "LAUNCHABLE" : "PINNABLE"));
mLockTaskAuth=isLockTaskWhitelistedLocked() ? LOCK_TASK_AUTH_LAUNCHABLE : LOCK_TASK_AUTH_PINNABLE;
break;
}
}
