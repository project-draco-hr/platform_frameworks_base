{
  Context currentUserContext;
  UserInfo userInfo;
  try {
    userInfo=ActivityManagerNative.getDefault().getCurrentUser();
    currentUserContext=mContext.createPackageContextAsUser("android",0,new UserHandle(userInfo.id));
  }
 catch (  PackageManager.NameNotFoundException e) {
    Log.e(TAG,"Couldn't create user context",e);
    throw new RuntimeException(e);
  }
catch (  RemoteException e) {
    Log.e(TAG,"Couldn't get user info",e);
    throw new RuntimeException(e);
  }
  final int userId=userInfo.id;
  final String userName=userInfo.name;
  final int avatarSize=mContext.getResources().getDimensionPixelSize(R.dimen.max_avatar_size);
  final Context context=currentUserContext;
  mUserInfoTask=new AsyncTask<Void,Void,Pair<String,Drawable>>(){
    @Override protected Pair<String,Drawable> doInBackground(    Void... params){
      final UserManager um=UserManager.get(mContext);
      String name=userName;
      Drawable avatar=null;
      Bitmap rawAvatar=um.getUserIcon(userId);
      if (rawAvatar != null) {
        avatar=new BitmapDrawable(mContext.getResources(),BitmapHelper.createCircularClip(rawAvatar,avatarSize,avatarSize));
      }
 else {
        avatar=mContext.getResources().getDrawable(R.drawable.ic_account_circle);
        mUseDefaultAvatar=true;
      }
      if (um.getUsers().size() <= 1) {
        final Cursor cursor=context.getContentResolver().query(ContactsContract.Profile.CONTENT_URI,new String[]{ContactsContract.CommonDataKinds.Phone._ID,ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME},null,null,null);
        if (cursor != null) {
          try {
            if (cursor.moveToFirst()) {
              name=cursor.getString(cursor.getColumnIndex(ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME));
            }
          }
  finally {
            cursor.close();
          }
        }
      }
      return new Pair<String,Drawable>(name,avatar);
    }
    @Override protected void onPostExecute(    Pair<String,Drawable> result){
      mUserName=result.first;
      mUserDrawable=result.second;
      mUserInfoTask=null;
      notifyChanged();
    }
  }
;
  mUserInfoTask.execute();
}
