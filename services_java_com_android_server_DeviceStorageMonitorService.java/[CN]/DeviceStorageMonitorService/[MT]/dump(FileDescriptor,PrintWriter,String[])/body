{
  if (mContext.checkCallingOrSelfPermission(android.Manifest.permission.DUMP) != PackageManager.PERMISSION_GRANTED) {
    pw.println("Permission Denial: can't dump " + SERVICE + " from from pid="+ Binder.getCallingPid()+ ", uid="+ Binder.getCallingUid());
    return;
  }
  pw.println("Current DeviceStorageMonitor state:");
  pw.print("  mFreeMem=");
  pw.print(Formatter.formatFileSize(mContext,mFreeMem));
  pw.print(" mTotalMemory=");
  pw.println(Formatter.formatFileSize(mContext,mTotalMemory));
  pw.print("  mFreeMemAfterLastCacheClear=");
  pw.println(Formatter.formatFileSize(mContext,mFreeMemAfterLastCacheClear));
  pw.print("  mLastReportedFreeMem=");
  pw.print(Formatter.formatFileSize(mContext,mLastReportedFreeMem));
  pw.print(" mLastReportedFreeMemTime=");
  TimeUtils.formatDuration(mLastReportedFreeMemTime,SystemClock.elapsedRealtime(),pw);
  pw.println();
  pw.print("  mLowMemFlag=");
  pw.print(mLowMemFlag);
  pw.print(" mMemFullFlag=");
  pw.println(mMemFullFlag);
  pw.print("  mClearSucceeded=");
  pw.print(mClearSucceeded);
  pw.print(" mClearingCache=");
  pw.println(mClearingCache);
  pw.print("  mMemLowThreshold=");
  pw.print(Formatter.formatFileSize(mContext,mMemLowThreshold));
  pw.print(" mMemFullThreshold=");
  pw.println(Formatter.formatFileSize(mContext,mMemFullThreshold));
  pw.print("  mMemCacheStartTrimThreshold=");
  pw.print(Formatter.formatFileSize(mContext,mMemCacheStartTrimThreshold));
  pw.print(" mMemCacheTrimToThreshold=");
  pw.println(Formatter.formatFileSize(mContext,mMemCacheTrimToThreshold));
}
