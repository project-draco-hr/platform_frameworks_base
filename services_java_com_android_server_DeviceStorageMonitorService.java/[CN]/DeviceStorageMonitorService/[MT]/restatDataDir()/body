{
  try {
    mDataFileStats.restat(DATA_PATH);
    mFreeMem=(long)mDataFileStats.getAvailableBlocks() * mDataFileStats.getBlockSize();
  }
 catch (  IllegalArgumentException e) {
  }
  String debugFreeMem=SystemProperties.get("debug.freemem");
  if (!"".equals(debugFreeMem)) {
    mFreeMem=Long.parseLong(debugFreeMem);
  }
  long freeMemLogInterval=Gservices.getLong(mContentResolver,Gservices.SYS_FREE_STORAGE_LOG_INTERVAL,DEFAULT_FREE_STORAGE_LOG_INTERVAL_IN_MINUTES) * 60 * 1000;
  long currTime=SystemClock.elapsedRealtime();
  if ((mLastReportedFreeMemTime == 0) || (currTime - mLastReportedFreeMemTime) >= freeMemLogInterval) {
    mLastReportedFreeMemTime=currTime;
    long mFreeSystem=-1, mFreeCache=-1;
    try {
      mSystemFileStats.restat(SYSTEM_PATH);
      mFreeSystem=(long)mSystemFileStats.getAvailableBlocks() * mSystemFileStats.getBlockSize();
    }
 catch (    IllegalArgumentException e) {
    }
    try {
      mCacheFileStats.restat(CACHE_PATH);
      mFreeCache=(long)mCacheFileStats.getAvailableBlocks() * mCacheFileStats.getBlockSize();
    }
 catch (    IllegalArgumentException e) {
    }
    mCacheFileStats.restat(CACHE_PATH);
    EventLog.writeEvent(EVENT_LOG_FREE_STORAGE_LEFT,mFreeMem,mFreeSystem,mFreeCache);
  }
  long threshold=Gservices.getLong(mContentResolver,Gservices.DISK_FREE_CHANGE_REPORTING_THRESHOLD,DEFAULT_DISK_FREE_CHANGE_REPORTING_THRESHOLD);
  long delta=mFreeMem - mLastReportedFreeMem;
  if (delta > threshold || delta < -threshold) {
    mLastReportedFreeMem=mFreeMem;
    EventLog.writeEvent(EVENT_LOG_STORAGE_BELOW_THRESHOLD,mFreeMem);
  }
}
