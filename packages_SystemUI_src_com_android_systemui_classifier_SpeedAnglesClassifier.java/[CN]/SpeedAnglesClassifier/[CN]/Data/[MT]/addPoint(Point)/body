{
  if (mPreviousPoint != null) {
    mDist+=mPreviousPoint.dist(point);
  }
  mPreviousPoint=point;
  Point speedPoint=new Point((float)point.timeOffsetNano / DURATION_SCALE,mDist / LENGTH_SCALE);
  if (mLastThreePoints.isEmpty() || !mLastThreePoints.get(mLastThreePoints.size() - 1).equals(speedPoint)) {
    mLastThreePoints.add(speedPoint);
    if (mLastThreePoints.size() == 4) {
      mLastThreePoints.remove(0);
      float angle=mLastThreePoints.get(1).getAngle(mLastThreePoints.get(0),mLastThreePoints.get(2));
      mAnglesCount++;
      if (angle >= (float)Math.PI - ANGLE_DEVIATION) {
        mAcceleratingAngles++;
      }
      float difference=angle - mPreviousAngle;
      mSum+=difference;
      mSumSquares+=difference * difference;
      mCount+=1.0;
      mPreviousAngle=angle;
    }
  }
}
