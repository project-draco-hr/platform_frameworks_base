{
  values.clear();
  String title=extractValue(event,"SUMMARY");
  if (TextUtils.isEmpty(title)) {
    if (Config.LOGD) {
      Log.d(TAG,"No SUMMARY provided for event.  " + "Cannot import.");
    }
    return null;
  }
  values.put(TITLE,title);
  values.put(STATUS,status);
  String description=extractValue(event,"DESCRIPTION");
  if (!TextUtils.isEmpty(description)) {
    values.put(DESCRIPTION,description);
  }
  String where=extractValue(event,"LOCATION");
  if (!StringUtils.isEmpty(where)) {
    values.put(EVENT_LOCATION,where);
  }
  values.put(CALENDAR_ID,calendarId);
  boolean timesSet=false;
  Time time=new Time(Time.TIMEZONE_UTC);
  String dtstart=null;
  String dtend=null;
  String duration=null;
  ICalendar.Property dtstartProp=event.getFirstProperty("DTSTART");
  if (dtstartProp != null) {
    dtstart=dtstartProp.getValue();
    if (!TextUtils.isEmpty(dtstart)) {
      ICalendar.Parameter tzidParam=dtstartProp.getFirstParameter("TZID");
      if (tzidParam != null && tzidParam.value != null) {
        time.clear(tzidParam.value);
      }
      try {
        time.parse(dtstart);
      }
 catch (      Exception e) {
        if (Config.LOGD) {
          Log.d(TAG,"Cannot parse dtstart " + dtstart,e);
        }
        return null;
      }
      if (time.allDay) {
        values.put(ALL_DAY,1);
      }
      values.put(DTSTART,time.toMillis(false));
      values.put(EVENT_TIMEZONE,time.timezone);
    }
    ICalendar.Property dtendProp=event.getFirstProperty("DTEND");
    if (dtendProp != null) {
      dtend=dtendProp.getValue();
      if (!TextUtils.isEmpty(dtend)) {
        try {
          time.parse(dtend);
        }
 catch (        Exception e) {
          if (Config.LOGD) {
            Log.d(TAG,"Cannot parse dtend " + dtend,e);
          }
          return null;
        }
        values.put(DTEND,time.toMillis(false));
      }
    }
 else {
      ICalendar.Property durationProp=event.getFirstProperty("DURATION");
      if (durationProp != null) {
        duration=durationProp.getValue();
        if (!TextUtils.isEmpty(duration)) {
          values.put(DURATION,duration);
        }
      }
    }
  }
  if (TextUtils.isEmpty(dtstart) || (TextUtils.isEmpty(dtend) && TextUtils.isEmpty(duration))) {
    if (Config.LOGD) {
      Log.d(TAG,"No DTSTART or DTEND/DURATION defined.");
    }
    return null;
  }
  if (!RecurrenceSet.populateContentValues(event,values)) {
    return null;
  }
  return cr.insert(CONTENT_URI,values);
}
