{
  final boolean handled=canceled || mPowerKeyHandled;
  mScreenshotChordPowerKeyTriggered=false;
  cancelPendingScreenshotChordAction();
  cancelPendingPowerKeyAction();
  if (!handled) {
    mPowerKeyPressCounter+=1;
    final int maxCount=getMaxMultiPressPowerCount();
    final long eventTime=event.getDownTime();
    if (mPowerKeyPressCounter < maxCount) {
      Message msg=mHandler.obtainMessage(MSG_POWER_DELAYED_PRESS,interactive ? 1 : 0,mPowerKeyPressCounter,eventTime);
      msg.setAsynchronous(true);
      mHandler.sendMessageDelayed(msg,ViewConfiguration.getDoubleTapTimeout());
      return;
    }
    powerPress(eventTime,interactive,mPowerKeyPressCounter);
  }
  finishPowerKeyPress();
}
