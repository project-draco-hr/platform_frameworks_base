{
  int result=ACTION_PASS_TO_USER;
  final boolean isWakeKey=(policyFlags & (WindowManagerPolicy.FLAG_WAKE | WindowManagerPolicy.FLAG_WAKE_DROPPED)) != 0;
  final boolean keyguardActive=(isScreenOn ? mKeyguardMediator.isShowingAndNotHidden() : mKeyguardMediator.isShowing());
  if (false) {
    Log.d(TAG,"interceptKeyTq keycode=" + keyCode + " screenIsOn="+ isScreenOn+ " keyguardActive="+ keyguardActive);
  }
  if (keyguardActive) {
    if (isScreenOn) {
      result|=ACTION_PASS_TO_USER;
    }
 else {
      result&=~ACTION_PASS_TO_USER;
      if (isWakeKey && down) {
        if (!mKeyguardMediator.onWakeKeyWhenKeyguardShowingTq(keyCode) && (keyCode == KeyEvent.KEYCODE_VOLUME_DOWN || keyCode == KeyEvent.KEYCODE_VOLUME_UP)) {
          if (isInCall()) {
            handleVolumeKey(AudioManager.STREAM_VOICE_CALL,keyCode);
          }
 else           if (isMusicActive()) {
            handleVolumeKey(AudioManager.STREAM_MUSIC,keyCode);
          }
        }
      }
    }
  }
 else   if (!isScreenOn) {
    if (isInCall() && (keyCode == KeyEvent.KEYCODE_VOLUME_DOWN || keyCode == KeyEvent.KEYCODE_VOLUME_UP)) {
      result&=~ACTION_PASS_TO_USER;
      handleVolumeKey(AudioManager.STREAM_VOICE_CALL,keyCode);
    }
    if (isWakeKey) {
      result|=ACTION_POKE_USER_ACTIVITY;
      result&=~ACTION_PASS_TO_USER;
    }
  }
  if (keyCode == KeyEvent.KEYCODE_ENDCALL || keyCode == KeyEvent.KEYCODE_POWER) {
    if (down) {
      boolean handled=false;
      boolean hungUp=false;
      ITelephony phoneServ=getPhoneInterface();
      if (phoneServ != null) {
        try {
          if (keyCode == KeyEvent.KEYCODE_ENDCALL) {
            handled=hungUp=phoneServ.endCall();
          }
 else           if (keyCode == KeyEvent.KEYCODE_POWER) {
            if (phoneServ.isRinging()) {
              phoneServ.silenceRinger();
              handled=true;
            }
 else             if (phoneServ.isOffhook() && ((mIncallPowerBehavior & Settings.Secure.INCALL_POWER_BUTTON_BEHAVIOR_HANGUP) != 0)) {
              handled=hungUp=phoneServ.endCall();
            }
          }
        }
 catch (        RemoteException ex) {
          Log.w(TAG,"ITelephony threw RemoteException" + ex);
        }
      }
 else {
        Log.w(TAG,"!!! Unable to find ITelephony interface !!!");
      }
      if (!isScreenOn || (handled && keyCode != KeyEvent.KEYCODE_POWER) || (handled && hungUp && keyCode == KeyEvent.KEYCODE_POWER)) {
        mShouldTurnOffOnKeyUp=false;
      }
 else {
        mShouldTurnOffOnKeyUp=true;
        mHandler.postDelayed(mPowerLongPress,ViewConfiguration.getGlobalActionKeyTimeout());
        result&=~ACTION_PASS_TO_USER;
      }
    }
 else {
      mHandler.removeCallbacks(mPowerLongPress);
      if (mShouldTurnOffOnKeyUp) {
        mShouldTurnOffOnKeyUp=false;
        boolean gohome, sleeps;
        if (keyCode == KeyEvent.KEYCODE_ENDCALL) {
          gohome=(mEndcallBehavior & Settings.System.END_BUTTON_BEHAVIOR_HOME) != 0;
          sleeps=(mEndcallBehavior & Settings.System.END_BUTTON_BEHAVIOR_SLEEP) != 0;
        }
 else {
          gohome=false;
          sleeps=true;
        }
        if (keyguardActive || (sleeps && !gohome) || (gohome && !goHome() && sleeps)) {
          Log.d(TAG,"I'm tired mEndcallBehavior=0x" + Integer.toHexString(mEndcallBehavior));
          result&=~ACTION_POKE_USER_ACTIVITY;
          result|=ACTION_GO_TO_SLEEP;
        }
        result&=~ACTION_PASS_TO_USER;
      }
    }
  }
 else   if (isMediaKey(keyCode)) {
    if ((result & ACTION_PASS_TO_USER) == 0) {
      long when=whenNanos / 1000000;
      KeyEvent keyEvent=new KeyEvent(when,when,down ? KeyEvent.ACTION_DOWN : KeyEvent.ACTION_UP,keyCode,0);
      mBroadcastWakeLock.acquire();
      mHandler.post(new PassHeadsetKey(keyEvent));
    }
  }
 else   if (keyCode == KeyEvent.KEYCODE_CALL) {
    if (down) {
      try {
        ITelephony phoneServ=getPhoneInterface();
        if (phoneServ != null) {
          if (phoneServ.isRinging()) {
            Log.i(TAG,"interceptKeyTq:" + " CALL key-down while ringing: Answer the call!");
            phoneServ.answerRingingCall();
            result&=~ACTION_PASS_TO_USER;
          }
        }
 else {
          Log.w(TAG,"CALL button: Unable to find ITelephony interface");
        }
      }
 catch (      RemoteException ex) {
        Log.w(TAG,"CALL button: RemoteException from getPhoneInterface()",ex);
      }
    }
  }
 else   if ((keyCode == KeyEvent.KEYCODE_VOLUME_UP) || (keyCode == KeyEvent.KEYCODE_VOLUME_DOWN)) {
    if (down) {
      try {
        ITelephony phoneServ=getPhoneInterface();
        if (phoneServ != null) {
          if (phoneServ.isRinging()) {
            Log.i(TAG,"interceptKeyTq:" + " VOLUME key-down while ringing: Silence ringer!");
            phoneServ.silenceRinger();
            result&=~ACTION_PASS_TO_USER;
          }
        }
 else {
          Log.w(TAG,"VOLUME button: Unable to find ITelephony interface");
        }
      }
 catch (      RemoteException ex) {
        Log.w(TAG,"VOLUME button: RemoteException from getPhoneInterface()",ex);
      }
    }
  }
  return result;
}
