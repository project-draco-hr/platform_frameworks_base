{
  int changes=0;
  boolean topIsFullscreen=false;
  final WindowManager.LayoutParams lp=(mTopFullscreenOpaqueWindowState != null) ? mTopFullscreenOpaqueWindowState.getAttrs() : null;
  if (mStatusBar != null) {
    if (localLOGV)     Log.i(TAG,"force=" + mForceStatusBar + " top="+ mTopFullscreenOpaqueWindowState);
    if (mForceStatusBar) {
      if (DEBUG_LAYOUT)       Log.v(TAG,"Showing status bar");
      if (mStatusBar.showLw(true))       changes|=FINISH_LAYOUT_REDO_LAYOUT;
    }
 else     if (mTopFullscreenOpaqueWindowState != null) {
      if (localLOGV) {
        Log.d(TAG,"frame: " + mTopFullscreenOpaqueWindowState.getFrameLw() + " shown frame: "+ mTopFullscreenOpaqueWindowState.getShownFrameLw());
        Log.d(TAG,"attr: " + mTopFullscreenOpaqueWindowState.getAttrs() + " lp.flags=0x"+ Integer.toHexString(lp.flags));
      }
      topIsFullscreen=(lp.flags & WindowManager.LayoutParams.FLAG_FULLSCREEN) != 0;
      if (topIsFullscreen) {
        if (mStatusBarCanHide) {
          if (DEBUG_LAYOUT)           Log.v(TAG,"Hiding status bar");
          if (mStatusBar.hideLw(true))           changes|=FINISH_LAYOUT_REDO_LAYOUT;
        }
 else         if (localLOGV) {
          Log.v(TAG,"Preventing status bar from hiding by policy");
        }
      }
 else {
        if (DEBUG_LAYOUT)         Log.v(TAG,"Showing status bar");
        if (mStatusBar.showLw(true))         changes|=FINISH_LAYOUT_REDO_LAYOUT;
      }
    }
  }
  boolean topNeedsMenu=mShowMenuKey;
  if (lp != null) {
    topNeedsMenu=(lp.flags & WindowManager.LayoutParams.FLAG_NEEDS_MENU_KEY) != 0;
  }
  if (DEBUG_LAYOUT)   Log.v(TAG,"Top window " + (topNeedsMenu ? "needs" : "does not need") + " the MENU key");
  final boolean changedFullscreen=(mTopIsFullscreen != topIsFullscreen);
  final boolean changedMenu=(topNeedsMenu != mShowMenuKey);
  if (changedFullscreen || changedMenu) {
    final boolean topIsFullscreenF=topIsFullscreen;
    final boolean topNeedsMenuF=topNeedsMenu;
    mTopIsFullscreen=topIsFullscreen;
    mShowMenuKey=topNeedsMenu;
    mHandler.post(new Runnable(){
      public void run(){
        if (mStatusBarService == null) {
          mStatusBarService=IStatusBarService.Stub.asInterface(ServiceManager.getService("statusbar"));
        }
        final IStatusBarService sbs=mStatusBarService;
        if (mStatusBarService != null) {
          try {
            if (changedFullscreen) {
              sbs.setActiveWindowIsFullscreen(topIsFullscreenF);
            }
            if (changedMenu) {
              sbs.setMenuKeyVisible(topNeedsMenuF);
            }
          }
 catch (          RemoteException e) {
            mStatusBarService=null;
          }
        }
      }
    }
);
  }
  if (mKeyguard != null) {
    if (localLOGV)     Log.v(TAG,"finishAnimationLw::mHideKeyguard=" + mHideLockScreen);
    if (mDismissKeyguard && !mKeyguardMediator.isSecure()) {
      if (mKeyguard.hideLw(true)) {
        changes|=FINISH_LAYOUT_REDO_LAYOUT | FINISH_LAYOUT_REDO_CONFIG | FINISH_LAYOUT_REDO_WALLPAPER;
      }
      if (mKeyguardMediator.isShowing()) {
        mHandler.post(new Runnable(){
          public void run(){
            mKeyguardMediator.keyguardDone(false,false);
          }
        }
);
      }
    }
 else     if (mHideLockScreen) {
      if (mKeyguard.hideLw(true)) {
        changes|=FINISH_LAYOUT_REDO_LAYOUT | FINISH_LAYOUT_REDO_CONFIG | FINISH_LAYOUT_REDO_WALLPAPER;
      }
      mKeyguardMediator.setHidden(true);
    }
 else {
      if (mKeyguard.showLw(true)) {
        changes|=FINISH_LAYOUT_REDO_LAYOUT | FINISH_LAYOUT_REDO_CONFIG | FINISH_LAYOUT_REDO_WALLPAPER;
      }
      mKeyguardMediator.setHidden(false);
    }
  }
  updateLockScreenTimeout();
  return changes;
}
