{
  if (win == mStatusBar) {
    return;
  }
  final int fl=attrs.flags;
  final int sim=attrs.softInputMode;
  final Rect pf=mTmpParentFrame;
  final Rect df=mTmpDisplayFrame;
  final Rect cf=mTmpContentFrame;
  final Rect vf=mTmpVisibleFrame;
  if (attrs.type == TYPE_INPUT_METHOD) {
    pf.left=df.left=cf.left=vf.left=mDockLeft;
    pf.top=df.top=cf.top=vf.top=mDockTop;
    pf.right=df.right=cf.right=vf.right=mDockRight;
    pf.bottom=df.bottom=cf.bottom=vf.bottom=mDockBottom;
    attrs.gravity=Gravity.BOTTOM;
    mDockLayer=win.getSurfaceLayer();
  }
 else {
    final int adjust=sim & SOFT_INPUT_MASK_ADJUST;
    if ((fl & (FLAG_LAYOUT_IN_SCREEN | FLAG_FULLSCREEN | FLAG_LAYOUT_INSET_DECOR)) == (FLAG_LAYOUT_IN_SCREEN | FLAG_LAYOUT_INSET_DECOR)) {
      if (attached != null) {
        setAttachedWindowFrames(win,fl,sim,attached,true,pf,df,cf,vf);
      }
 else {
        if (attrs.type == TYPE_STATUS_BAR_PANEL) {
          pf.left=df.left=mUnrestrictedScreenLeft;
          pf.top=df.top=mUnrestrictedScreenTop;
          pf.right=df.right=mUnrestrictedScreenLeft + mUnrestrictedScreenWidth;
          pf.bottom=df.bottom=mUnrestrictedScreenTop + mUnrestrictedScreenHeight;
        }
 else {
          pf.left=df.left=mRestrictedScreenLeft;
          pf.top=df.top=mRestrictedScreenTop;
          pf.right=df.right=mRestrictedScreenLeft + mRestrictedScreenWidth;
          pf.bottom=df.bottom=mRestrictedScreenTop + mRestrictedScreenHeight;
        }
        if (adjust != SOFT_INPUT_ADJUST_RESIZE) {
          cf.left=mDockLeft;
          cf.top=mDockTop;
          cf.right=mDockRight;
          cf.bottom=mDockBottom;
        }
 else {
          cf.left=mContentLeft;
          cf.top=mContentTop;
          cf.right=mContentRight;
          cf.bottom=mContentBottom;
        }
        if (adjust != SOFT_INPUT_ADJUST_NOTHING) {
          vf.left=mCurLeft;
          vf.top=mCurTop;
          vf.right=mCurRight;
          vf.bottom=mCurBottom;
        }
 else {
          vf.set(cf);
        }
      }
    }
 else     if ((fl & FLAG_LAYOUT_IN_SCREEN) != 0) {
      if (attrs.type == TYPE_STATUS_BAR_PANEL) {
        pf.left=df.left=cf.left=mUnrestrictedScreenLeft;
        pf.top=df.top=cf.top=mUnrestrictedScreenTop;
        pf.right=df.right=cf.right=mUnrestrictedScreenLeft + mUnrestrictedScreenWidth;
        pf.bottom=df.bottom=cf.bottom=mUnrestrictedScreenTop + mUnrestrictedScreenHeight;
      }
 else {
        pf.left=df.left=cf.left=mRestrictedScreenLeft;
        pf.top=df.top=cf.top=mRestrictedScreenTop;
        pf.right=df.right=cf.right=mRestrictedScreenLeft + mRestrictedScreenWidth;
        pf.bottom=df.bottom=cf.bottom=mRestrictedScreenTop + mRestrictedScreenHeight;
      }
      if (adjust != SOFT_INPUT_ADJUST_NOTHING) {
        vf.left=mCurLeft;
        vf.top=mCurTop;
        vf.right=mCurRight;
        vf.bottom=mCurBottom;
      }
 else {
        vf.set(cf);
      }
    }
 else     if (attached != null) {
      setAttachedWindowFrames(win,fl,adjust,attached,false,pf,df,cf,vf);
    }
 else {
      pf.left=mContentLeft;
      pf.top=mContentTop;
      pf.right=mContentRight;
      pf.bottom=mContentBottom;
      if (adjust != SOFT_INPUT_ADJUST_RESIZE) {
        df.left=cf.left=mDockLeft;
        df.top=cf.top=mDockTop;
        df.right=cf.right=mDockRight;
        df.bottom=cf.bottom=mDockBottom;
      }
 else {
        df.left=cf.left=mContentLeft;
        df.top=cf.top=mContentTop;
        df.right=cf.right=mContentRight;
        df.bottom=cf.bottom=mContentBottom;
      }
      if (adjust != SOFT_INPUT_ADJUST_NOTHING) {
        vf.left=mCurLeft;
        vf.top=mCurTop;
        vf.right=mCurRight;
        vf.bottom=mCurBottom;
      }
 else {
        vf.set(cf);
      }
    }
  }
  if ((fl & FLAG_LAYOUT_NO_LIMITS) != 0) {
    df.left=df.top=cf.left=cf.top=vf.left=vf.top=-10000;
    df.right=df.bottom=cf.right=cf.bottom=vf.right=vf.bottom=10000;
  }
  if (DEBUG_LAYOUT)   Log.v(TAG,"Compute frame " + attrs.getTitle() + ": sim=#"+ Integer.toHexString(sim)+ " pf="+ pf.toShortString()+ " df="+ df.toShortString()+ " cf="+ cf.toShortString()+ " vf="+ vf.toShortString());
  win.computeFrameLw(pf,df,cf,vf);
  if (attrs.type == TYPE_INPUT_METHOD && !win.getGivenInsetsPendingLw()) {
    int top=win.getContentFrameLw().top;
    top+=win.getGivenContentInsetsLw().top;
    if (mContentBottom > top) {
      mContentBottom=top;
    }
    top=win.getVisibleFrameLw().top;
    top+=win.getGivenVisibleInsetsLw().top;
    if (mCurBottom > top) {
      mCurBottom=top;
    }
    if (DEBUG_LAYOUT)     Log.v(TAG,"Input method: mDockBottom=" + mDockBottom + " mContentBottom="+ mContentBottom+ " mCurBottom="+ mCurBottom);
  }
}
