{
  mUnrestrictedScreenLeft=mUnrestrictedScreenTop=0;
  mUnrestrictedScreenWidth=displayWidth;
  mUnrestrictedScreenHeight=displayHeight;
  mRestrictedScreenLeft=mRestrictedScreenTop=0;
  mRestrictedScreenWidth=displayWidth;
  mRestrictedScreenHeight=displayHeight;
  mDockLeft=mContentLeft=mStableLeft=mCurLeft=0;
  mDockTop=mContentTop=mStableTop=mCurTop=0;
  mDockRight=mContentRight=mStableRight=mCurRight=displayWidth;
  mDockBottom=mContentBottom=mStableBottom=mCurBottom=displayHeight;
  mDockLayer=0x10000000;
  final Rect pf=mTmpParentFrame;
  final Rect df=mTmpDisplayFrame;
  final Rect vf=mTmpVisibleFrame;
  pf.left=df.left=vf.left=mDockLeft;
  pf.top=df.top=vf.top=mDockTop;
  pf.right=df.right=vf.right=mDockRight;
  pf.bottom=df.bottom=vf.bottom=mDockBottom;
  boolean navVisible=(mLastSystemUiFlags & View.SYSTEM_UI_FLAG_HIDE_NAVIGATION) == 0;
  if (navVisible) {
    if (mHideNavFakeWindow != null) {
      mHideNavFakeWindow.dismiss();
      mHideNavFakeWindow=null;
    }
  }
 else   if (mHideNavFakeWindow == null) {
    mHideNavFakeWindow=mWindowManagerFuncs.addFakeWindow(mHandler.getLooper(),mHideNavInputEventReceiverFactory,"hidden nav",WindowManager.LayoutParams.TYPE_HIDDEN_NAV_CONSUMER,0,false,false,true);
  }
  navVisible|=!mCanHideNavigationBar;
  if (mNavigationBar != null) {
    mNavigationBarOnBottom=!mHasNavigationBar || displayWidth < displayHeight;
    if (mNavigationBarOnBottom) {
      int top=displayHeight - mNavigationBarHeight;
      if (mHdmiPlugged) {
        if (top > mExternalDisplayHeight) {
          top=mExternalDisplayHeight;
        }
      }
      mTmpNavigationFrame.set(0,top,displayWidth,displayHeight);
      mStableBottom=mTmpNavigationFrame.top;
      if (navVisible) {
        mNavigationBar.showLw(true);
        mDockBottom=mTmpNavigationFrame.top;
        mRestrictedScreenHeight=mDockBottom - mDockTop;
      }
 else {
        mNavigationBar.hideLw(true);
      }
    }
 else {
      int left=displayWidth - mNavigationBarWidth;
      if (mHdmiPlugged) {
        if (left > mExternalDisplayWidth) {
          left=mExternalDisplayWidth;
        }
      }
      mTmpNavigationFrame.set(left,0,displayWidth,displayHeight);
      mStableRight=mTmpNavigationFrame.left;
      if (navVisible) {
        mNavigationBar.showLw(true);
        mDockRight=mTmpNavigationFrame.left;
        mRestrictedScreenWidth=mDockRight - mDockLeft;
      }
 else {
        mNavigationBar.hideLw(true);
      }
    }
    mContentTop=mCurTop=mDockTop;
    mContentBottom=mCurBottom=mDockBottom;
    mContentLeft=mCurLeft=mDockLeft;
    mContentRight=mCurRight=mDockRight;
    mNavigationBar.computeFrameLw(mTmpNavigationFrame,mTmpNavigationFrame,mTmpNavigationFrame,mTmpNavigationFrame);
    if (DEBUG_LAYOUT)     Log.i(TAG,"mNavigationBar frame: " + mTmpNavigationFrame);
  }
  if (DEBUG_LAYOUT)   Log.i(TAG,String.format("mDock rect: (%d,%d - %d,%d)",mDockLeft,mDockTop,mDockRight,mDockBottom));
  if (mStatusBar != null) {
    pf.left=df.left=vf.left=mDockLeft;
    pf.top=df.top=vf.top=mDockTop;
    pf.right=df.right=vf.right=mDockRight;
    pf.bottom=df.bottom=vf.bottom=mDockBottom;
    mStatusBar.computeFrameLw(pf,df,vf,vf);
    final Rect r=mStatusBar.getFrameLw();
    if (mDockTop == r.top)     mStableTop=r.bottom;
 else     if (mDockBottom == r.bottom)     mStableBottom=r.top;
    if (mStatusBar.isVisibleLw()) {
      if (mDockTop == r.top)       mDockTop=r.bottom;
 else       if (mDockBottom == r.bottom)       mDockBottom=r.top;
      mContentTop=mCurTop=mDockTop;
      mContentBottom=mCurBottom=mDockBottom;
      mContentLeft=mCurLeft=mDockLeft;
      mContentRight=mCurRight=mDockRight;
      if (DEBUG_LAYOUT)       Log.v(TAG,"Status bar: " + String.format("dock=[%d,%d][%d,%d] content=[%d,%d][%d,%d] cur=[%d,%d][%d,%d]",mDockLeft,mDockTop,mDockRight,mDockBottom,mContentLeft,mContentTop,mContentRight,mContentBottom,mCurLeft,mCurTop,mCurRight,mCurBottom));
    }
  }
}
