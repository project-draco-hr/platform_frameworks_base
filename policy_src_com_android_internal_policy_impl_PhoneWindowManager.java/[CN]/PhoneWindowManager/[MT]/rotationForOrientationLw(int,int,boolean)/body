{
  if (mPortraitRotation < 0) {
    Display d=((WindowManager)mContext.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
    if (d.getWidth() > d.getHeight()) {
      mPortraitRotation=Surface.ROTATION_90;
      mLandscapeRotation=Surface.ROTATION_0;
      mUpsideDownRotation=Surface.ROTATION_270;
      mSeascapeRotation=Surface.ROTATION_180;
    }
 else {
      mPortraitRotation=Surface.ROTATION_0;
      mLandscapeRotation=Surface.ROTATION_90;
      mUpsideDownRotation=Surface.ROTATION_180;
      mSeascapeRotation=Surface.ROTATION_270;
    }
  }
synchronized (mLock) {
switch (orientation) {
case ActivityInfo.SCREEN_ORIENTATION_PORTRAIT:
      return mPortraitRotation;
case ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE:
    return mLandscapeRotation;
case ActivityInfo.SCREEN_ORIENTATION_REVERSE_PORTRAIT:
  return mUpsideDownRotation;
case ActivityInfo.SCREEN_ORIENTATION_REVERSE_LANDSCAPE:
return mSeascapeRotation;
case ActivityInfo.SCREEN_ORIENTATION_SENSOR_LANDSCAPE:
mOrientationListener.setAllow180Rotation(false);
return getCurrentLandscapeRotation(lastRotation);
case ActivityInfo.SCREEN_ORIENTATION_SENSOR_PORTRAIT:
mOrientationListener.setAllow180Rotation(true);
return getCurrentPortraitRotation(lastRotation);
}
if (new File("/system/etc/allow_all_orientations").exists()) {
mOrientationListener.setAllow180Rotation(true);
}
 else {
mOrientationListener.setAllow180Rotation(orientation == ActivityInfo.SCREEN_ORIENTATION_FULL_SENSOR);
}
if (mLidOpen) {
return mLidOpenRotation;
}
 else if (mDockMode == Intent.EXTRA_DOCK_STATE_CAR && mCarDockRotation >= 0) {
return mCarDockRotation;
}
 else if (mDockMode == Intent.EXTRA_DOCK_STATE_DESK && mDeskDockRotation >= 0) {
return mDeskDockRotation;
}
 else if (mUserRotationMode == WindowManagerPolicy.USER_ROTATION_LOCKED) {
return mUserRotation;
}
 else {
if (useSensorForOrientationLp(orientation)) {
return mOrientationListener.getCurrentRotation(lastRotation);
}
return Surface.ROTATION_0;
}
}
}
