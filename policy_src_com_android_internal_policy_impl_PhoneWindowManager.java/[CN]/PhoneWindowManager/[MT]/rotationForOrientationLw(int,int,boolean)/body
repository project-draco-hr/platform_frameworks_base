{
  if (false) {
    Slog.v(TAG,"rotationForOrientationLw(orient=" + orientation + ", last="+ lastRotation+ "); user="+ mUserRotation+ " "+ ((mUserRotationMode == WindowManagerPolicy.USER_ROTATION_LOCKED) ? "USER_ROTATION_LOCKED" : ""));
  }
  if (mPortraitRotation < 0) {
    Display d=((WindowManager)mContext.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
    if (d.getWidth() > d.getHeight()) {
      mLandscapeRotation=Surface.ROTATION_0;
      mSeascapeRotation=Surface.ROTATION_180;
      if (mContext.getResources().getBoolean(com.android.internal.R.bool.config_reverseDefaultRotation)) {
        mPortraitRotation=Surface.ROTATION_90;
        mUpsideDownRotation=Surface.ROTATION_270;
      }
 else {
        mPortraitRotation=Surface.ROTATION_270;
        mUpsideDownRotation=Surface.ROTATION_90;
      }
    }
 else {
      mPortraitRotation=Surface.ROTATION_0;
      mUpsideDownRotation=Surface.ROTATION_180;
      if (mContext.getResources().getBoolean(com.android.internal.R.bool.config_reverseDefaultRotation)) {
        mLandscapeRotation=Surface.ROTATION_270;
        mSeascapeRotation=Surface.ROTATION_90;
      }
 else {
        mLandscapeRotation=Surface.ROTATION_90;
        mSeascapeRotation=Surface.ROTATION_270;
      }
    }
  }
synchronized (mLock) {
switch (orientation) {
case ActivityInfo.SCREEN_ORIENTATION_PORTRAIT:
      return mPortraitRotation;
case ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE:
    return mLandscapeRotation;
case ActivityInfo.SCREEN_ORIENTATION_REVERSE_PORTRAIT:
  return mUpsideDownRotation;
case ActivityInfo.SCREEN_ORIENTATION_REVERSE_LANDSCAPE:
return mSeascapeRotation;
case ActivityInfo.SCREEN_ORIENTATION_SENSOR_LANDSCAPE:
return getCurrentLandscapeRotation(lastRotation);
case ActivityInfo.SCREEN_ORIENTATION_SENSOR_PORTRAIT:
return getCurrentPortraitRotation(lastRotation);
}
if (mHdmiPlugged) {
return Surface.ROTATION_0;
}
 else if (mLidOpen == LID_OPEN) {
return mLidOpenRotation;
}
 else if (mDockMode == Intent.EXTRA_DOCK_STATE_CAR && mCarDockRotation >= 0) {
return mCarDockRotation;
}
 else if (mDockMode == Intent.EXTRA_DOCK_STATE_DESK && mDeskDockRotation >= 0) {
return mDeskDockRotation;
}
 else if (mUserRotationMode == WindowManagerPolicy.USER_ROTATION_LOCKED) {
return mUserRotation;
}
 else {
if (useSensorForOrientationLp(orientation)) {
int rotation=mOrientationListener.getCurrentRotation(lastRotation);
if (rotation == Surface.ROTATION_180 && !mAllowAllRotations && orientation != ActivityInfo.SCREEN_ORIENTATION_FULL_SENSOR) {
return lastRotation;
}
return rotation;
}
return Surface.ROTATION_0;
}
}
}
