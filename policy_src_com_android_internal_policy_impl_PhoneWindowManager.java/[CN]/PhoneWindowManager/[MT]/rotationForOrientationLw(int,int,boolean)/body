{
  if (false) {
    Slog.v(TAG,"rotationForOrientationLw(orient=" + orientation + ", last="+ lastRotation+ "); user="+ mUserRotation+ " "+ ((mUserRotationMode == WindowManagerPolicy.USER_ROTATION_LOCKED) ? "USER_ROTATION_LOCKED" : ""));
  }
synchronized (mLock) {
switch (orientation) {
case ActivityInfo.SCREEN_ORIENTATION_PORTRAIT:
      return mPortraitRotation;
case ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE:
    return mLandscapeRotation;
case ActivityInfo.SCREEN_ORIENTATION_REVERSE_PORTRAIT:
  return mUpsideDownRotation;
case ActivityInfo.SCREEN_ORIENTATION_REVERSE_LANDSCAPE:
return mSeascapeRotation;
case ActivityInfo.SCREEN_ORIENTATION_SENSOR_LANDSCAPE:
return getCurrentLandscapeRotation(lastRotation);
case ActivityInfo.SCREEN_ORIENTATION_SENSOR_PORTRAIT:
return getCurrentPortraitRotation(lastRotation);
}
if (mHdmiPlugged) {
return Surface.ROTATION_0;
}
 else if (mLidOpen == LID_OPEN) {
return mLidOpenRotation;
}
 else if (mDockMode == Intent.EXTRA_DOCK_STATE_CAR && mCarDockRotation >= 0) {
return mCarDockRotation;
}
 else if (mDockMode == Intent.EXTRA_DOCK_STATE_DESK && mDeskDockRotation >= 0) {
return mDeskDockRotation;
}
 else if (mUserRotationMode == WindowManagerPolicy.USER_ROTATION_LOCKED) {
return mUserRotation;
}
 else {
if (useSensorForOrientationLp(orientation)) {
int rotation=mOrientationListener.getCurrentRotation(lastRotation);
if (rotation == Surface.ROTATION_180 && !mAllowAllRotations && orientation != ActivityInfo.SCREEN_ORIENTATION_FULL_SENSOR) {
return lastRotation;
}
return rotation;
}
return Surface.ROTATION_0;
}
}
}
