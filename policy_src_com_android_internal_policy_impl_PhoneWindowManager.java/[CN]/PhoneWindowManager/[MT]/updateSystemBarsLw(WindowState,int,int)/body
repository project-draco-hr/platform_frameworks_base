{
  WindowState transWin=mKeyguard != null && mKeyguard.isVisibleLw() && !mHideLockScreen ? mKeyguard : mTopFullscreenOpaqueWindowState;
  vis=mStatusBarController.applyTranslucentFlagLw(transWin,vis,oldVis);
  vis=mNavigationBarController.applyTranslucentFlagLw(transWin,vis,oldVis);
  boolean statusBarHasFocus=win.getAttrs().type == TYPE_STATUS_BAR;
  if (statusBarHasFocus) {
    int flags=View.SYSTEM_UI_FLAG_FULLSCREEN | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION | View.SYSTEM_UI_FLAG_IMMERSIVE| View.STATUS_BAR_TRANSLUCENT| View.NAVIGATION_BAR_TRANSLUCENT;
    vis=(vis & ~flags) | (oldVis & flags);
  }
  boolean transientAllowed=(vis & View.SYSTEM_UI_FLAG_IMMERSIVE) != 0;
  boolean hideStatusBarWM=mTopFullscreenOpaqueWindowState != null && (mTopFullscreenOpaqueWindowState.getAttrs().flags & WindowManager.LayoutParams.FLAG_FULLSCREEN) != 0;
  boolean hideStatusBarSysui=(vis & View.SYSTEM_UI_FLAG_FULLSCREEN) != 0;
  boolean transientStatusBarAllowed=mStatusBar != null && (hideStatusBarWM || (hideStatusBarSysui && transientAllowed) || statusBarHasFocus);
  if (mStatusBarController.isTransientShowing() && !transientStatusBarAllowed && hideStatusBarSysui) {
    int newVal=mResettingSystemUiFlags | View.SYSTEM_UI_CLEARABLE_FLAGS;
    if (newVal != mResettingSystemUiFlags) {
      mResettingSystemUiFlags=newVal;
      mWindowManagerFuncs.reevaluateStatusBarVisibility();
    }
  }
  vis=mStatusBarController.updateVisibilityLw(transientStatusBarAllowed,oldVis,vis);
  boolean oldTransientNav=isTransientNavigationAllowed(oldVis);
  boolean isTransientNav=isTransientNavigationAllowed(vis);
  if (win != null && oldTransientNav != isTransientNav) {
    final String pkg=win.getOwningPackage();
    mTransientNavigationConfirmation.transientNavigationChanged(pkg,isTransientNav);
  }
  vis=mNavigationBarController.updateVisibilityLw(isTransientNav,oldVis,vis);
  if (mStatusBarController.isHidden() && mNavigationBarController.isHidden()) {
    vis&=~View.SYSTEM_UI_FLAG_LOW_PROFILE;
  }
  return vis;
}
