{
  mDisplayRotation=displayRotation;
  final int overscanLeft, overscanTop, overscanRight, overscanBottom;
  if (isDefaultDisplay) {
switch (displayRotation) {
case Surface.ROTATION_90:
      overscanLeft=mOverscanTop;
    overscanTop=mOverscanRight;
  overscanRight=mOverscanBottom;
overscanBottom=mOverscanLeft;
break;
case Surface.ROTATION_180:
overscanLeft=mOverscanRight;
overscanTop=mOverscanBottom;
overscanRight=mOverscanLeft;
overscanBottom=mOverscanTop;
break;
case Surface.ROTATION_270:
overscanLeft=mOverscanBottom;
overscanTop=mOverscanLeft;
overscanRight=mOverscanTop;
overscanBottom=mOverscanRight;
break;
default :
overscanLeft=mOverscanLeft;
overscanTop=mOverscanTop;
overscanRight=mOverscanRight;
overscanBottom=mOverscanBottom;
break;
}
}
 else {
overscanLeft=0;
overscanTop=0;
overscanRight=0;
overscanBottom=0;
}
mOverscanScreenLeft=mRestrictedOverscanScreenLeft=0;
mOverscanScreenTop=mRestrictedOverscanScreenTop=0;
mOverscanScreenWidth=mRestrictedOverscanScreenWidth=displayWidth;
mOverscanScreenHeight=mRestrictedOverscanScreenHeight=displayHeight;
mSystemLeft=0;
mSystemTop=0;
mSystemRight=displayWidth;
mSystemBottom=displayHeight;
mUnrestrictedScreenLeft=overscanLeft;
mUnrestrictedScreenTop=overscanTop;
mUnrestrictedScreenWidth=displayWidth - overscanLeft - overscanRight;
mUnrestrictedScreenHeight=displayHeight - overscanTop - overscanBottom;
mRestrictedScreenLeft=mUnrestrictedScreenLeft;
mRestrictedScreenTop=mUnrestrictedScreenTop;
mRestrictedScreenWidth=mSystemGestures.screenWidth=mUnrestrictedScreenWidth;
mRestrictedScreenHeight=mSystemGestures.screenHeight=mUnrestrictedScreenHeight;
mDockLeft=mContentLeft=mVoiceContentLeft=mStableLeft=mStableFullscreenLeft=mCurLeft=mUnrestrictedScreenLeft;
mDockTop=mContentTop=mVoiceContentTop=mStableTop=mStableFullscreenTop=mCurTop=mUnrestrictedScreenTop;
mDockRight=mContentRight=mVoiceContentRight=mStableRight=mStableFullscreenRight=mCurRight=displayWidth - overscanRight;
mDockBottom=mContentBottom=mVoiceContentBottom=mStableBottom=mStableFullscreenBottom=mCurBottom=displayHeight - overscanBottom;
mDockLayer=0x10000000;
mStatusBarLayer=-1;
final Rect pf=mTmpParentFrame;
final Rect df=mTmpDisplayFrame;
final Rect of=mTmpOverscanFrame;
final Rect vf=mTmpVisibleFrame;
final Rect dcf=mTmpDecorFrame;
final Rect osf=mTmpOutsetFrame;
pf.left=df.left=of.left=vf.left=mDockLeft;
pf.top=df.top=of.top=vf.top=mDockTop;
pf.right=df.right=of.right=vf.right=mDockRight;
pf.bottom=df.bottom=of.bottom=vf.bottom=mDockBottom;
dcf.setEmpty();
if (isDefaultDisplay) {
final int sysui=mLastSystemUiFlags;
boolean navVisible=(sysui & View.SYSTEM_UI_FLAG_HIDE_NAVIGATION) == 0;
boolean navTranslucent=(sysui & (View.NAVIGATION_BAR_TRANSLUCENT | View.SYSTEM_UI_TRANSPARENT)) != 0;
boolean immersive=(sysui & View.SYSTEM_UI_FLAG_IMMERSIVE) != 0;
boolean immersiveSticky=(sysui & View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY) != 0;
boolean navAllowedHidden=immersive || immersiveSticky;
navTranslucent&=!immersiveSticky;
boolean isKeyguardShowing=isStatusBarKeyguard() && !mHideLockScreen;
if (!isKeyguardShowing) {
navTranslucent&=areTranslucentBarsAllowed();
}
if (navVisible || navAllowedHidden) {
if (mHideNavFakeWindow != null) {
mHideNavFakeWindow.dismiss();
mHideNavFakeWindow=null;
}
}
 else if (mHideNavFakeWindow == null) {
mHideNavFakeWindow=mWindowManagerFuncs.addFakeWindow(mHandler.getLooper(),mHideNavInputEventReceiverFactory,"hidden nav",WindowManager.LayoutParams.TYPE_HIDDEN_NAV_CONSUMER,0,0,false,false,true);
}
navVisible|=!canHideNavigationBar();
boolean updateSysUiVisibility=false;
if (mNavigationBar != null) {
boolean transientNavBarShowing=mNavigationBarController.isTransientShowing();
mNavigationBarOnBottom=(!mNavigationBarCanMove || displayWidth < displayHeight);
if (mNavigationBarOnBottom) {
int top=displayHeight - overscanBottom - mNavigationBarHeightForRotation[displayRotation];
mTmpNavigationFrame.set(0,top,displayWidth,displayHeight - overscanBottom);
mStableBottom=mStableFullscreenBottom=mTmpNavigationFrame.top;
if (transientNavBarShowing) {
mNavigationBarController.setBarShowingLw(true);
}
 else if (navVisible) {
mNavigationBarController.setBarShowingLw(true);
mDockBottom=mTmpNavigationFrame.top;
mRestrictedScreenHeight=mDockBottom - mRestrictedScreenTop;
mRestrictedOverscanScreenHeight=mDockBottom - mRestrictedOverscanScreenTop;
}
 else {
mNavigationBarController.setBarShowingLw(false);
}
if (navVisible && !navTranslucent && !navAllowedHidden&& !mNavigationBar.isAnimatingLw()&& !mNavigationBarController.wasRecentlyTranslucent()) {
mSystemBottom=mTmpNavigationFrame.top;
}
}
 else {
int left=displayWidth - overscanRight - mNavigationBarWidthForRotation[displayRotation];
mTmpNavigationFrame.set(left,0,displayWidth - overscanRight,displayHeight);
mStableRight=mStableFullscreenRight=mTmpNavigationFrame.left;
if (transientNavBarShowing) {
mNavigationBarController.setBarShowingLw(true);
}
 else if (navVisible) {
mNavigationBarController.setBarShowingLw(true);
mDockRight=mTmpNavigationFrame.left;
mRestrictedScreenWidth=mDockRight - mRestrictedScreenLeft;
mRestrictedOverscanScreenWidth=mDockRight - mRestrictedOverscanScreenLeft;
}
 else {
mNavigationBarController.setBarShowingLw(false);
}
if (navVisible && !navTranslucent && !mNavigationBar.isAnimatingLw()&& !mNavigationBarController.wasRecentlyTranslucent()) {
mSystemRight=mTmpNavigationFrame.left;
}
}
mContentTop=mVoiceContentTop=mCurTop=mDockTop;
mContentBottom=mVoiceContentBottom=mCurBottom=mDockBottom;
mContentLeft=mVoiceContentLeft=mCurLeft=mDockLeft;
mContentRight=mVoiceContentRight=mCurRight=mDockRight;
mStatusBarLayer=mNavigationBar.getSurfaceLayer();
mNavigationBar.computeFrameLw(mTmpNavigationFrame,mTmpNavigationFrame,mTmpNavigationFrame,mTmpNavigationFrame,mTmpNavigationFrame,dcf,mTmpNavigationFrame,mTmpNavigationFrame);
if (DEBUG_LAYOUT) Slog.i(TAG,"mNavigationBar frame: " + mTmpNavigationFrame);
if (mNavigationBarController.checkHiddenLw()) {
updateSysUiVisibility=true;
}
}
if (DEBUG_LAYOUT) Slog.i(TAG,String.format("mDock rect: (%d,%d - %d,%d)",mDockLeft,mDockTop,mDockRight,mDockBottom));
if (mStatusBar != null) {
pf.left=df.left=of.left=mUnrestrictedScreenLeft;
pf.top=df.top=of.top=mUnrestrictedScreenTop;
pf.right=df.right=of.right=mUnrestrictedScreenWidth + mUnrestrictedScreenLeft;
pf.bottom=df.bottom=of.bottom=mUnrestrictedScreenHeight + mUnrestrictedScreenTop;
vf.left=mStableLeft;
vf.top=mStableTop;
vf.right=mStableRight;
vf.bottom=mStableBottom;
mStatusBarLayer=mStatusBar.getSurfaceLayer();
mStatusBar.computeFrameLw(pf,df,vf,vf,vf,dcf,vf,osf);
mStableTop=mUnrestrictedScreenTop + mStatusBarHeight;
boolean statusBarTransient=(sysui & View.STATUS_BAR_TRANSIENT) != 0;
boolean statusBarTranslucent=(sysui & (View.STATUS_BAR_TRANSLUCENT | View.SYSTEM_UI_TRANSPARENT)) != 0;
if (!isKeyguardShowing) {
statusBarTranslucent&=areTranslucentBarsAllowed();
}
if (mStatusBar.isVisibleLw() && !statusBarTransient) {
mDockTop=mUnrestrictedScreenTop + mStatusBarHeight;
mContentTop=mVoiceContentTop=mCurTop=mDockTop;
mContentBottom=mVoiceContentBottom=mCurBottom=mDockBottom;
mContentLeft=mVoiceContentLeft=mCurLeft=mDockLeft;
mContentRight=mVoiceContentRight=mCurRight=mDockRight;
if (DEBUG_LAYOUT) Slog.v(TAG,"Status bar: " + String.format("dock=[%d,%d][%d,%d] content=[%d,%d][%d,%d] cur=[%d,%d][%d,%d]",mDockLeft,mDockTop,mDockRight,mDockBottom,mContentLeft,mContentTop,mContentRight,mContentBottom,mCurLeft,mCurTop,mCurRight,mCurBottom));
}
if (mStatusBar.isVisibleLw() && !mStatusBar.isAnimatingLw() && !statusBarTransient&& !statusBarTranslucent&& !mStatusBarController.wasRecentlyTranslucent()) {
mSystemTop=mUnrestrictedScreenTop + mStatusBarHeight;
}
if (mStatusBarController.checkHiddenLw()) {
updateSysUiVisibility=true;
}
}
if (updateSysUiVisibility) {
updateSystemUiVisibilityLw();
}
}
}
