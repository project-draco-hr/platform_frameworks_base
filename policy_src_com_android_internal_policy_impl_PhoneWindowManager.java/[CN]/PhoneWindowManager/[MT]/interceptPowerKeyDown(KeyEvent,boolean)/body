{
  if (!mPowerKeyWakeLock.isHeld()) {
    mPowerKeyWakeLock.acquire();
  }
  if (mPowerKeyPressCounter != 0) {
    mHandler.removeMessages(MSG_POWER_DELAYED_PRESS);
  }
  boolean panic=mImmersiveModeConfirmation.onPowerKeyDown(interactive,event.getDownTime(),isImmersiveMode(mLastSystemUiFlags));
  if (panic) {
    mHandler.post(mRequestTransientNav);
  }
  if (interactive && !mScreenshotChordPowerKeyTriggered && (event.getFlags() & KeyEvent.FLAG_FALLBACK) == 0) {
    mScreenshotChordPowerKeyTriggered=true;
    mScreenshotChordPowerKeyTime=event.getDownTime();
    interceptScreenshotChord();
  }
  TelecomManager telecomManager=getTelecommService();
  boolean hungUp=false;
  if (telecomManager != null) {
    if (telecomManager.isRinging()) {
      telecomManager.silenceRinger();
    }
 else     if ((mIncallPowerBehavior & Settings.Secure.INCALL_POWER_BUTTON_BEHAVIOR_HANGUP) != 0 && telecomManager.isInCall() && interactive) {
      hungUp=telecomManager.endCall();
    }
  }
  mPowerKeyHandled=hungUp || mScreenshotChordVolumeDownKeyTriggered || mScreenshotChordVolumeUpKeyTriggered;
  if (!mPowerKeyHandled) {
    if (interactive) {
      if (hasLongPressOnPowerBehavior()) {
        Message msg=mHandler.obtainMessage(MSG_POWER_LONG_PRESS);
        msg.setAsynchronous(true);
        mHandler.sendMessageDelayed(msg,ViewConfiguration.get(mContext).getDeviceGlobalActionKeyTimeout());
      }
    }
 else {
      wakeUpFromPowerKey(event.getDownTime());
      if (mSupportLongPressPowerWhenNonInteractive && hasLongPressOnPowerBehavior()) {
        Message msg=mHandler.obtainMessage(MSG_POWER_LONG_PRESS);
        msg.setAsynchronous(true);
        mHandler.sendMessageDelayed(msg,ViewConfiguration.get(mContext).getDeviceGlobalActionKeyTimeout());
        mBeganFromNonInteractive=true;
      }
 else {
        final int maxCount=getMaxMultiPressPowerCount();
        if (maxCount <= 1) {
          mPowerKeyHandled=true;
        }
 else {
          mBeganFromNonInteractive=true;
        }
      }
    }
  }
}
