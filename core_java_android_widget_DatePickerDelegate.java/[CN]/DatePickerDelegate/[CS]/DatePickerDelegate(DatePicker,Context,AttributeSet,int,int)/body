{
  super(delegator,context);
  final Locale locale=Locale.getDefault();
  mMinDate=getCalendarForLocale(mMinDate,locale);
  mMaxDate=getCalendarForLocale(mMaxDate,locale);
  mTempDate=getCalendarForLocale(mMaxDate,locale);
  mCurrentDate=getCalendarForLocale(mCurrentDate,locale);
  mMinDate.set(DEFAULT_START_YEAR,1,1);
  mMaxDate.set(DEFAULT_END_YEAR,12,31);
  final TypedArray a=mContext.obtainStyledAttributes(attrs,R.styleable.DatePicker,defStyleAttr,defStyleRes);
  final LayoutInflater inflater=(LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
  final int layoutResourceId=a.getResourceId(R.styleable.DatePicker_internalLayout,R.layout.date_picker_holo);
  View mainView=inflater.inflate(layoutResourceId,null);
  mDelegator.addView(mainView);
  mDayOfWeekView=(TextView)mainView.findViewById(R.id.date_picker_header);
  mDateLayout=(LinearLayout)mainView.findViewById(R.id.day_picker_selector_layout);
  mMonthAndDayLayout=(LinearLayout)mainView.findViewById(R.id.date_picker_month_and_day_layout);
  mMonthAndDayLayout.setOnClickListener(this);
  mSelectedMonthTextView=(TextView)mainView.findViewById(R.id.date_picker_month);
  mSelectedDayTextView=(TextView)mainView.findViewById(R.id.date_picker_day);
  mSelectedYearView=(TextView)mainView.findViewById(R.id.date_picker_year);
  mSelectedYearView.setOnClickListener(this);
  mDayOfWeekTextAppearanceResId=a.getResourceId(R.styleable.DatePicker_dateSelectorDayOfWeekTextAppearance,-1);
  if (mDayOfWeekTextAppearanceResId != -1) {
    mDayOfWeekView.setTextAppearance(context,mDayOfWeekTextAppearanceResId);
  }
  mMonthTextAppearanceResId=a.getResourceId(R.styleable.DatePicker_dateSelectorMonthTextAppearance,-1);
  if (mMonthTextAppearanceResId != -1) {
    mSelectedMonthTextView.setTextAppearance(context,mMonthTextAppearanceResId);
  }
  mDayOfMonthTextAppearanceResId=a.getResourceId(R.styleable.DatePicker_dateSelectorDayOfMonthTextAppearance,-1);
  if (mDayOfMonthTextAppearanceResId != -1) {
    mSelectedDayTextView.setTextAppearance(context,mDayOfMonthTextAppearanceResId);
  }
  mYearTextAppearanceResId=a.getResourceId(R.styleable.DatePicker_dateSelectorYearTextAppearance,-1);
  if (mYearTextAppearanceResId != -1) {
    mSelectedYearView.setTextAppearance(context,mYearTextAppearanceResId);
  }
  Resources res=mDelegator.getResources();
  mDayOfWeekBackgroundColor=a.getColor(R.styleable.DatePicker_dateSelectorDayOfWeekBackgroundColor,res.getColor(R.color.datepicker_default_header_dayofweek_background_color_holo_light));
  mDayOfWeekView.setBackgroundColor(mDayOfWeekBackgroundColor);
  mMonthAndDayBackgroundColor=a.getColor(R.styleable.DatePicker_dateSelectorBackgroundColor,res.getColor(R.color.datepicker_default_header_selector_background_holo_light));
  mMonthAndDayLayout.setBackgroundColor(mMonthAndDayBackgroundColor);
  mDayPickerView=new DayPickerView(mContext,this);
  mYearPickerView=new YearPickerView(mContext);
  mYearPickerView.init(this);
  ColorStateList colors=a.getColorStateList(R.styleable.DatePicker_calendarTextColor);
  setCalendarTextColor(colors);
  mDayPickerDescription=res.getString(R.string.day_picker_description);
  mSelectDay=res.getString(R.string.select_day);
  mYearPickerDescription=res.getString(R.string.year_picker_description);
  mSelectYear=res.getString(R.string.select_year);
  mAnimator=(AccessibleDateAnimator)mainView.findViewById(R.id.animator);
  mAnimator.addView(mDayPickerView);
  mAnimator.addView(mYearPickerView);
  mAnimator.setDateMillis(mCurrentDate.getTimeInMillis());
  Animation animation=new AlphaAnimation(0.0f,1.0f);
  animation.setDuration(ANIMATION_DURATION);
  mAnimator.setInAnimation(animation);
  Animation animation2=new AlphaAnimation(1.0f,0.0f);
  animation2.setDuration(ANIMATION_DURATION);
  mAnimator.setOutAnimation(animation2);
  mLayoutButtons=(ViewGroup)mainView.findViewById(R.id.layout_buttons);
  mDoneButton=(Button)mainView.findViewById(R.id.done);
  mDoneButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      tryVibrate();
      if (mDismissCallback != null) {
        mDismissCallback.dismiss(mDelegator,false,mCurrentDate.get(Calendar.YEAR),mCurrentDate.get(Calendar.MONTH),mCurrentDate.get(Calendar.DAY_OF_MONTH));
      }
    }
  }
);
  updateDisplay(false);
  setCurrentView(MONTH_AND_DAY_VIEW);
}
