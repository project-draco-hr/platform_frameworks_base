{
  assertTrue(UserRestrictionsUtils.areEqual(null,null));
  assertTrue(UserRestrictionsUtils.areEqual(null,Bundle.EMPTY));
  assertTrue(UserRestrictionsUtils.areEqual(Bundle.EMPTY,null));
  assertTrue(UserRestrictionsUtils.areEqual(Bundle.EMPTY,Bundle.EMPTY));
  assertTrue(UserRestrictionsUtils.areEqual(new Bundle(),Bundle.EMPTY));
  assertFalse(UserRestrictionsUtils.areEqual(null,DpmTestUtils.newRestrictions("a")));
  assertFalse(UserRestrictionsUtils.areEqual(DpmTestUtils.newRestrictions("a"),null));
  assertTrue(UserRestrictionsUtils.areEqual(DpmTestUtils.newRestrictions("a"),DpmTestUtils.newRestrictions("a")));
  assertFalse(UserRestrictionsUtils.areEqual(DpmTestUtils.newRestrictions("a"),DpmTestUtils.newRestrictions("a","b")));
  assertFalse(UserRestrictionsUtils.areEqual(DpmTestUtils.newRestrictions("a","b"),DpmTestUtils.newRestrictions("a")));
  assertFalse(UserRestrictionsUtils.areEqual(DpmTestUtils.newRestrictions("b","a"),DpmTestUtils.newRestrictions("a","a")));
  final Bundle a=DpmTestUtils.newRestrictions("a");
  a.putBoolean("b",true);
  final Bundle b=DpmTestUtils.newRestrictions("a");
  b.putBoolean("b",false);
  assertFalse(UserRestrictionsUtils.areEqual(a,b));
  assertFalse(UserRestrictionsUtils.areEqual(b,a));
}
