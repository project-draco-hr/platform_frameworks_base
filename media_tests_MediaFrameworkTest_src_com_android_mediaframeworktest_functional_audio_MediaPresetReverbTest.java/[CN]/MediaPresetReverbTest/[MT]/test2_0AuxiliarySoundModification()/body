{
  boolean result=false;
  String msg="test2_0AuxiliarySoundModification()";
  EnergyProbe probe=null;
  AudioEffect vc=null;
  MediaPlayer mp=null;
  AudioManager am=(AudioManager)getActivity().getSystemService(Context.AUDIO_SERVICE);
  int ringerMode=am.getRingerMode();
  am.setRingerMode(AudioManager.RINGER_MODE_NORMAL);
  int volume=am.getStreamMaxVolume(AudioManager.STREAM_MUSIC);
  am.setStreamVolume(AudioManager.STREAM_MUSIC,am.getStreamMaxVolume(AudioManager.STREAM_MUSIC),0);
  getReverb(0);
  try {
    probe=new EnergyProbe(0);
    vc=new AudioEffect(AudioEffect.EFFECT_TYPE_NULL,VOLUME_EFFECT_UUID,0,0);
    vc.setEnabled(true);
    mp=new MediaPlayer();
    mp.setDataSource(MediaNames.SINE_200_1000);
    mp.setAudioStreamType(AudioManager.STREAM_MUSIC);
    mp.attachAuxEffect(mReverb.getId());
    mp.setAuxEffectSendLevel(1.0f);
    mReverb.setPreset((short)PresetReverb.PRESET_PLATE);
    mReverb.setEnabled(true);
    mp.prepare();
    mp.start();
    Thread.sleep(1000);
    mp.stop();
    Thread.sleep(200);
    int energy1000=probe.capture(1000);
    assertTrue(msg + ": reverb has no effect",energy1000 > 0);
    result=true;
  }
 catch (  IllegalArgumentException e) {
    msg=msg.concat(": Bad parameter value");
    loge(msg,"Bad parameter value");
  }
catch (  UnsupportedOperationException e) {
    msg=msg.concat(": get parameter() rejected");
    loge(msg,"get parameter() rejected");
  }
catch (  IllegalStateException e) {
    msg=msg.concat("get parameter() called in wrong state");
    loge(msg,"get parameter() called in wrong state");
  }
catch (  InterruptedException e) {
    loge(msg,"sleep() interrupted");
  }
 finally {
    releaseReverb();
    if (mp != null) {
      mp.release();
    }
    if (vc != null) {
      vc.release();
    }
    if (probe != null) {
      probe.release();
    }
    am.setStreamVolume(AudioManager.STREAM_MUSIC,volume,0);
    am.setRingerMode(ringerMode);
  }
  assertTrue(msg,result);
}
