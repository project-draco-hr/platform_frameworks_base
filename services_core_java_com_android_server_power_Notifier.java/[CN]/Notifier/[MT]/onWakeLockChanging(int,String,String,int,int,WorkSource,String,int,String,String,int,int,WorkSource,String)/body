{
  if (workSource != null && newWorkSource != null) {
    final int monitorType=getBatteryStatsWakeLockMonitorType(flags);
    final int newMonitorType=getBatteryStatsWakeLockMonitorType(newFlags);
    boolean unimportantForLogging=(newFlags & PowerManager.UNIMPORTANT_FOR_LOGGING) != 0 && newOwnerUid == Process.SYSTEM_UID;
    if (DEBUG) {
      Slog.d(TAG,"onWakeLockChanging: flags=" + newFlags + ", tag=\""+ newTag+ "\", packageName="+ newPackageName+ ", ownerUid="+ newOwnerUid+ ", ownerPid="+ newOwnerPid+ ", workSource="+ newWorkSource);
    }
    try {
      mBatteryStats.noteChangeWakelockFromSource(workSource,ownerPid,tag,historyTag,monitorType,newWorkSource,newOwnerPid,newTag,newHistoryTag,newMonitorType,unimportantForLogging);
    }
 catch (    RemoteException ex) {
    }
  }
 else {
    onWakeLockReleased(flags,tag,packageName,ownerUid,ownerPid,workSource,historyTag);
    onWakeLockAcquired(newFlags,newTag,newPackageName,newOwnerUid,newOwnerPid,newWorkSource,newHistoryTag);
  }
}
