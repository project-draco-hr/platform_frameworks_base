{
  IfdData ifd0=mExifData.getIfdData(IfdId.TYPE_IFD_0);
  if (ifd0 == null) {
    ifd0=new IfdData(IfdId.TYPE_IFD_0);
    mExifData.addIfdData(ifd0);
  }
  ExifTag exifOffsetTag=mInterface.buildUninitializedTag(ExifInterface.TAG_EXIF_IFD);
  if (exifOffsetTag == null) {
    throw new IOException("No definition for crucial exif tag: " + ExifInterface.TAG_EXIF_IFD);
  }
  ifd0.setTag(exifOffsetTag);
  IfdData exifIfd=mExifData.getIfdData(IfdId.TYPE_IFD_EXIF);
  if (exifIfd == null) {
    exifIfd=new IfdData(IfdId.TYPE_IFD_EXIF);
    mExifData.addIfdData(exifIfd);
  }
  IfdData gpsIfd=mExifData.getIfdData(IfdId.TYPE_IFD_GPS);
  if (gpsIfd != null) {
    ExifTag gpsOffsetTag=mInterface.buildUninitializedTag(ExifInterface.TAG_GPS_IFD);
    if (gpsOffsetTag == null) {
      throw new IOException("No definition for crucial exif tag: " + ExifInterface.TAG_GPS_IFD);
    }
    ifd0.setTag(gpsOffsetTag);
  }
  IfdData interIfd=mExifData.getIfdData(IfdId.TYPE_IFD_INTEROPERABILITY);
  if (interIfd != null) {
    ExifTag interOffsetTag=mInterface.buildUninitializedTag(ExifInterface.TAG_INTEROPERABILITY_IFD);
    if (interOffsetTag == null) {
      throw new IOException("No definition for crucial exif tag: " + ExifInterface.TAG_INTEROPERABILITY_IFD);
    }
    exifIfd.setTag(interOffsetTag);
  }
  IfdData ifd1=mExifData.getIfdData(IfdId.TYPE_IFD_1);
  if (mExifData.hasCompressedThumbnail()) {
    if (ifd1 == null) {
      ifd1=new IfdData(IfdId.TYPE_IFD_1);
      mExifData.addIfdData(ifd1);
    }
    ExifTag offsetTag=mInterface.buildUninitializedTag(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT);
    if (offsetTag == null) {
      throw new IOException("No definition for crucial exif tag: " + ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT);
    }
    ifd1.setTag(offsetTag);
    ExifTag lengthTag=mInterface.buildUninitializedTag(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH);
    if (lengthTag == null) {
      throw new IOException("No definition for crucial exif tag: " + ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH);
    }
    lengthTag.setValue(mExifData.getCompressedThumbnail().length);
    ifd1.setTag(lengthTag);
    ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_OFFSETS));
    ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_BYTE_COUNTS));
  }
 else   if (mExifData.hasUncompressedStrip()) {
    if (ifd1 == null) {
      ifd1=new IfdData(IfdId.TYPE_IFD_1);
      mExifData.addIfdData(ifd1);
    }
    int stripCount=mExifData.getStripCount();
    ExifTag offsetTag=mInterface.buildUninitializedTag(ExifInterface.TAG_STRIP_OFFSETS);
    if (offsetTag == null) {
      throw new IOException("No definition for crucial exif tag: " + ExifInterface.TAG_STRIP_OFFSETS);
    }
    ExifTag lengthTag=mInterface.buildUninitializedTag(ExifInterface.TAG_STRIP_BYTE_COUNTS);
    if (lengthTag == null) {
      throw new IOException("No definition for crucial exif tag: " + ExifInterface.TAG_STRIP_BYTE_COUNTS);
    }
    long[] lengths=new long[stripCount];
    for (int i=0; i < mExifData.getStripCount(); i++) {
      lengths[i]=mExifData.getStrip(i).length;
    }
    lengthTag.setValue(lengths);
    ifd1.setTag(offsetTag);
    ifd1.setTag(lengthTag);
    ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT));
    ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH));
  }
 else   if (ifd1 != null) {
    ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_OFFSETS));
    ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_BYTE_COUNTS));
    ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT));
    ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH));
  }
}
