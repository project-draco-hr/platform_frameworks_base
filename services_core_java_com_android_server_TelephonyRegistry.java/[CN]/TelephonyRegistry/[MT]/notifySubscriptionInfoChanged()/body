{
  if (VDBG)   log("notifySubscriptionInfoChanged:");
synchronized (mRecords) {
    if (!hasNotifySubscriptionInfoChangedOccurred) {
      log("notifySubscriptionInfoChanged: first invocation mRecords.size=" + mRecords.size());
    }
    hasNotifySubscriptionInfoChangedOccurred=true;
    mRemoveList.clear();
    for (    Record r : mRecords) {
      if (r.matchOnSubscriptionsChangedListener()) {
        try {
          if (VDBG)           log("notifySubscriptionInfoChanged: call osc to r=" + r);
          r.onSubscriptionsChangedListenerCallback.onSubscriptionsChanged();
          if (VDBG)           log("notifySubscriptionInfoChanged: done osc to r=" + r);
        }
 catch (        RemoteException ex) {
          if (VDBG)           log("notifySubscriptionInfoChanged: RemoteException r=" + r);
          mRemoveList.add(r.binder);
        }
      }
    }
    handleRemoveListLocked();
  }
}
