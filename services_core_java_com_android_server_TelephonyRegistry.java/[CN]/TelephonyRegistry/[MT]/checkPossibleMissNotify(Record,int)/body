{
  int events=r.events;
  if ((events & PhoneStateListener.LISTEN_SERVICE_STATE) != 0) {
    try {
      if (VDBG)       log("checkPossibleMissNotify: onServiceStateChanged state=" + mServiceState[phoneId]);
      r.callback.onServiceStateChanged(new ServiceState(mServiceState[phoneId]));
    }
 catch (    RemoteException ex) {
      remove(r.binder);
    }
  }
  if ((events & PhoneStateListener.LISTEN_SIGNAL_STRENGTHS) != 0) {
    try {
      SignalStrength signalStrength=mSignalStrength[phoneId];
      if (DBG) {
        log("checkPossibleMissNotify: onSignalStrengthsChanged SS=" + signalStrength);
      }
      r.callback.onSignalStrengthsChanged(new SignalStrength(signalStrength));
    }
 catch (    RemoteException ex) {
      mRemoveList.add(r.binder);
    }
  }
  if ((events & PhoneStateListener.LISTEN_SIGNAL_STRENGTH) != 0) {
    try {
      int gsmSignalStrength=mSignalStrength[phoneId].getGsmSignalStrength();
      if (DBG) {
        log("checkPossibleMissNotify: onSignalStrengthChanged SS=" + gsmSignalStrength);
      }
      r.callback.onSignalStrengthChanged((gsmSignalStrength == 99 ? -1 : gsmSignalStrength));
    }
 catch (    RemoteException ex) {
      remove(r.binder);
    }
  }
  if (validateEventsAndUserLocked(r,PhoneStateListener.LISTEN_CELL_INFO)) {
    try {
      if (DBG_LOC) {
        log("checkPossibleMissNotify: onCellInfoChanged[" + phoneId + "] = "+ mCellInfo.get(phoneId));
      }
      r.callback.onCellInfoChanged(mCellInfo.get(phoneId));
    }
 catch (    RemoteException ex) {
      remove(r.binder);
    }
  }
  if ((events & PhoneStateListener.LISTEN_MESSAGE_WAITING_INDICATOR) != 0) {
    try {
      if (VDBG) {
        log("checkPossibleMissNotify: onMessageWaitingIndicatorChanged phoneId=" + phoneId + " mwi="+ mMessageWaiting[phoneId]);
      }
      r.callback.onMessageWaitingIndicatorChanged(mMessageWaiting[phoneId]);
    }
 catch (    RemoteException ex) {
      remove(r.binder);
    }
  }
  if ((events & PhoneStateListener.LISTEN_CALL_FORWARDING_INDICATOR) != 0) {
    try {
      if (VDBG) {
        log("checkPossibleMissNotify: onCallForwardingIndicatorChanged phoneId=" + phoneId + " cfi="+ mCallForwarding[phoneId]);
      }
      r.callback.onCallForwardingIndicatorChanged(mCallForwarding[phoneId]);
    }
 catch (    RemoteException ex) {
      remove(r.binder);
    }
  }
  if (validateEventsAndUserLocked(r,PhoneStateListener.LISTEN_CELL_LOCATION)) {
    try {
      if (DBG_LOC)       log("checkPossibleMissNotify: onCellLocationChanged mCellLocation = " + mCellLocation[phoneId]);
      r.callback.onCellLocationChanged(new Bundle(mCellLocation[phoneId]));
    }
 catch (    RemoteException ex) {
      mRemoveList.add(r.binder);
    }
  }
  if ((events & PhoneStateListener.LISTEN_DATA_CONNECTION_STATE) != 0) {
    try {
      if (DBG) {
        log("checkPossibleMissNotify: onDataConnectionStateChanged(mDataConnectionState" + "=" + mDataConnectionState[phoneId] + ", mDataConnectionNetworkType="+ mDataConnectionNetworkType[phoneId]+ ")");
      }
      r.callback.onDataConnectionStateChanged(mDataConnectionState[phoneId],mDataConnectionNetworkType[phoneId]);
    }
 catch (    RemoteException ex) {
      remove(r.binder);
    }
  }
}
