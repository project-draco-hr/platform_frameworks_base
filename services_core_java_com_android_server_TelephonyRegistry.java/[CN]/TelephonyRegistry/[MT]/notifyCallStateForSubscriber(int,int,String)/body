{
  if (!checkNotifyPermission("notifyCallState()")) {
    return;
  }
  if (VDBG) {
    log("notifyCallStateForSubscriber: subId=" + subId + " state="+ state+ " incomingNumber="+ incomingNumber);
  }
synchronized (mRecords) {
    int phoneId=SubscriptionManager.getPhoneId(subId);
    if (validatePhoneId(phoneId)) {
      mCallState[phoneId]=state;
      mCallIncomingNumber[phoneId]=incomingNumber;
      for (      Record r : mRecords) {
        if (r.matchPhoneStateListenerEvent(PhoneStateListener.LISTEN_CALL_STATE) && (r.subId == subId) && (r.subId != SubscriptionManager.DEFAULT_SUB_ID)) {
          try {
            r.callback.onCallStateChanged(state,incomingNumber);
          }
 catch (          RemoteException ex) {
            mRemoveList.add(r.binder);
          }
        }
      }
    }
    handleRemoveListLocked();
  }
  broadcastCallStateChanged(state,incomingNumber,subId);
}
