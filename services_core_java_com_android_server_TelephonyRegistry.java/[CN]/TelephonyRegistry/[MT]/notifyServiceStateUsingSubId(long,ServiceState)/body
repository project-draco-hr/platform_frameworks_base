{
  if (!checkNotifyPermission("notifyServiceState()")) {
    return;
  }
  if (subId == SubscriptionManager.DEFAULT_SUB_ID) {
    subId=mDefaultSubId;
    log("notifyServiceStateUsingSubId: using mDefaultSubId=" + mDefaultSubId);
  }
  if (true) {
    log("notifyServiceStateUsingSubId: subId=" + subId + " state="+ state);
  }
synchronized (mRecords) {
    int phoneId=SubscriptionManager.getPhoneId(subId);
    if (validatePhoneId(phoneId)) {
      mServiceState[phoneId]=state;
      for (      Record r : mRecords) {
        log("notifyServiceStateUsingSubId: r.events=0x" + Integer.toHexString(r.events) + " r.subId="+ r.subId+ " subId="+ subId+ " state="+ state);
        if (((r.events & PhoneStateListener.LISTEN_SERVICE_STATE) != 0) && (r.subId == subId)) {
          try {
            log("notifyServiceStateUsingSubId: call onSSC subId=" + subId + " state="+ state);
            r.callback.onServiceStateChanged(new ServiceState(state));
          }
 catch (          RemoteException ex) {
            mRemoveList.add(r.binder);
          }
        }
      }
    }
 else {
      log("notifyServiceStateUsingSubId: INVALID phoneId=" + phoneId);
    }
    handleRemoveListLocked();
  }
  broadcastServiceStateChanged(state,subId);
}
