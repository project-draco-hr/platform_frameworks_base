{
  log("notifySignalStrengthForSubscriber: subId=" + subId + " signalStrength="+ signalStrength);
  if (!checkNotifyPermission("notifySignalStrength()")) {
    log("notifySignalStrengthForSubscriber: permission check failure");
    return;
  }
  toStringLogSSC("notifySignalStrengthForSubscriber");
synchronized (mRecords) {
    int phoneId=SubscriptionManager.getPhoneId(subId);
    if (validatePhoneId(phoneId)) {
      log("notifySignalStrengthForSubscriber: valid phoneId=" + phoneId);
      mSignalStrength[phoneId]=signalStrength;
      for (      Record r : mRecords) {
        log("notifySignalStrengthForSubscriber: r=" + r + " subId="+ subId+ " phoneId="+ phoneId+ " ss="+ signalStrength);
        if (r.matchPhoneStateListenerEvent(PhoneStateListener.LISTEN_SIGNAL_STRENGTHS) && idMatch(r.subId,subId,phoneId)) {
          try {
            log("notifySignalStrengthForSubscriber: callback.onSsS r=" + r + " subId="+ subId+ " phoneId="+ phoneId+ " ss="+ signalStrength);
            r.callback.onSignalStrengthsChanged(new SignalStrength(signalStrength));
          }
 catch (          RemoteException ex) {
            log("notifySignalStrengthForSubscriber: Exception while calling callback!!");
            mRemoveList.add(r.binder);
          }
        }
 else {
          log("notifySignalStrengthForSubscriber: no match for LISTEN_SIGNAL_STRENGTHS");
        }
        if (r.matchPhoneStateListenerEvent(PhoneStateListener.LISTEN_SIGNAL_STRENGTH) && idMatch(r.subId,subId,phoneId)) {
          try {
            int gsmSignalStrength=signalStrength.getGsmSignalStrength();
            int ss=(gsmSignalStrength == 99 ? -1 : gsmSignalStrength);
            log("notifySignalStrengthForSubscriber: callback.onSS r=" + r + " subId="+ subId+ " phoneId="+ phoneId+ " gsmSS="+ gsmSignalStrength+ " ss="+ ss);
            r.callback.onSignalStrengthChanged(ss);
          }
 catch (          RemoteException ex) {
            log("notifySignalStrengthForSubscriber: Exception in deprecated LISTEN_SIGNAL_STRENGTH");
            mRemoveList.add(r.binder);
          }
        }
      }
    }
 else {
      log("notifySignalStrengthForSubscriber: invalid phoneId=" + phoneId);
    }
    log("notifySignalStrengthForSubscriber: done with all records");
    handleRemoveListLocked();
  }
  broadcastSignalStrengthChanged(signalStrength,subId);
}
