{
  if (!checkNotifyPermission("notifySignalStrength()")) {
    return;
  }
  if (true) {
    log("notifySignalStrengthUsingSubId: subId=" + subId + " signalStrength="+ signalStrength);
  }
synchronized (mRecords) {
    int phoneId=SubscriptionManager.getPhoneId(subId);
    if (validatePhoneId(phoneId)) {
      log("notifySignalStrengthUsingSubId: valid phoneId=" + phoneId);
      mSignalStrength[phoneId]=signalStrength;
      for (      Record r : mRecords) {
        log("notifySignalStrengthUsingSubId: r.events=0x" + Integer.toHexString(r.events) + " r.subId="+ r.subId+ " subId="+ subId);
        if (((r.events & PhoneStateListener.LISTEN_SIGNAL_STRENGTHS) != 0) && (r.subId == subId)) {
          try {
            log("notifySignalStrengthUsingSubId: callback.onSsS ss=" + signalStrength);
            r.callback.onSignalStrengthsChanged(new SignalStrength(signalStrength));
          }
 catch (          RemoteException ex) {
            mRemoveList.add(r.binder);
          }
        }
        if (((r.events & PhoneStateListener.LISTEN_SIGNAL_STRENGTH) != 0) && (r.subId == subId)) {
          try {
            int gsmSignalStrength=signalStrength.getGsmSignalStrength();
            int ss=(gsmSignalStrength == 99 ? -1 : gsmSignalStrength);
            log("notifySignalStrengthUsingSubId: callback.onSS gsmSS=" + gsmSignalStrength + " ss="+ ss);
            r.callback.onSignalStrengthChanged(ss);
          }
 catch (          RemoteException ex) {
            mRemoveList.add(r.binder);
          }
        }
      }
    }
 else {
      log("notifySignalStrengthUsingSubId: invalid phoneId=" + phoneId);
    }
    handleRemoveListLocked();
  }
  broadcastSignalStrengthChanged(signalStrength,subId);
}
