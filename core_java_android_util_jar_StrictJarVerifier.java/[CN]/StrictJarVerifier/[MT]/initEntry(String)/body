{
  if (manifest == null || signatures.isEmpty()) {
    return null;
  }
  Attributes attributes=manifest.getAttributes(name);
  if (attributes == null) {
    return null;
  }
  ArrayList<Certificate[]> certChains=new ArrayList<Certificate[]>();
  Iterator<Map.Entry<String,HashMap<String,Attributes>>> it=signatures.entrySet().iterator();
  while (it.hasNext()) {
    Map.Entry<String,HashMap<String,Attributes>> entry=it.next();
    HashMap<String,Attributes> hm=entry.getValue();
    if (hm.get(name) != null) {
      String signatureFile=entry.getKey();
      Certificate[] certChain=certificates.get(signatureFile);
      if (certChain != null) {
        certChains.add(certChain);
      }
    }
  }
  if (certChains.isEmpty()) {
    return null;
  }
  Certificate[][] certChainsArray=certChains.toArray(new Certificate[certChains.size()][]);
  for (int i=0; i < DIGEST_ALGORITHMS.length; i++) {
    final String algorithm=DIGEST_ALGORITHMS[i];
    final String hash=attributes.getValue(algorithm + "-Digest");
    if (hash == null) {
      continue;
    }
    byte[] hashBytes=hash.getBytes(StandardCharsets.ISO_8859_1);
    try {
      return new VerifierEntry(name,MessageDigest.getInstance(algorithm),hashBytes,certChainsArray,verifiedEntries);
    }
 catch (    NoSuchAlgorithmException ignored) {
    }
  }
  return null;
}
