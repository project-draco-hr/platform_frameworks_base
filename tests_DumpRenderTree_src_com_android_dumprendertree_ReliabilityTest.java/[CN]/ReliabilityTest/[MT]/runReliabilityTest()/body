{
  ReliabilityTestActivity activity=getActivity();
  LayoutTestsAutoRunner runner=(LayoutTestsAutoRunner)getInstrumentation();
  File testListFile=new File(TEST_LIST_FILE);
  if (!testListFile.exists())   throw new FileNotFoundException("test list file not found.");
  BufferedReader listReader=new BufferedReader(new FileReader(testListFile));
  String lastUrl=FsUtils.readTestStatus(TEST_STATUS_FILE);
  if (lastUrl != null && !TEST_DONE.equals(lastUrl))   fastForward(listReader,lastUrl);
  String url=null;
  Handler handler=null;
  boolean timeoutFlag=false;
  long start, elapsed;
  while ((url=listReader.readLine()) != null) {
    url=url.trim();
    if (url.length() == 0)     continue;
    start=System.currentTimeMillis();
    Log.v(LOGTAG,"Testing URL: " + url);
    FsUtils.updateTestStatus(TEST_STATUS_FILE,url);
    activity.reset();
    handler=activity.getHandler();
    Message msg=handler.obtainMessage(ReliabilityTestActivity.MSG_NAVIGATE,runner.mTimeoutInMillis,runner.mDelay);
    msg.getData().putString(ReliabilityTestActivity.MSG_NAV_URL,url);
    msg.getData().putBoolean(ReliabilityTestActivity.MSG_NAV_LOGTIME,runner.mLogtime);
    handler.sendMessage(msg);
    timeoutFlag=activity.waitUntilDone();
    elapsed=System.currentTimeMillis() - start;
    if (elapsed < 1000) {
      Log.w(LOGTAG,"Page load finished in " + elapsed + "ms, too soon?");
    }
 else {
      Log.v(LOGTAG,"Page load finished in " + elapsed + "ms");
    }
    if (timeoutFlag) {
      writeTimeoutFile(url);
    }
    if (runner.mLogtime) {
      writeLoadTime(url,activity.getPageLoadTime());
    }
    System.runFinalization();
    System.gc();
    System.gc();
  }
  FsUtils.updateTestStatus(TEST_STATUS_FILE,TEST_DONE);
  activity.finish();
  listReader.close();
}
