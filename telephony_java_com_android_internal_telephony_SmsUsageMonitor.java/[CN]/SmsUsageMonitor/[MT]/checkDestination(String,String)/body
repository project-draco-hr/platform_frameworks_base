{
synchronized (mSettingsObserverHandler) {
    if (PhoneNumberUtils.isEmergencyNumber(destAddress,countryIso)) {
      return CATEGORY_NOT_SHORT_CODE;
    }
    ShortCodePatternMatcher patternMatcher=null;
    if (countryIso != null) {
      if (mCurrentCountry == null || !countryIso.equals(mCurrentCountry)) {
        loadPatternsFromSettings(countryIso);
        mSettingsObserverHandler.observeSettingForCountry(countryIso);
      }
      if (countryIso.equals(mCurrentCountry)) {
        patternMatcher=mCurrentPatternMatcher;
      }
 else {
        patternMatcher=getPatternMatcher(countryIso);
        mCurrentCountry=countryIso;
        mCurrentPatternMatcher=patternMatcher;
      }
    }
    if (patternMatcher != null) {
      return patternMatcher.getNumberCategory(destAddress);
    }
 else {
      Log.e(TAG,"No patterns for \"" + countryIso + "\": using generic short code rule");
      if (destAddress.length() <= 5) {
        return CATEGORY_POSSIBLE_PREMIUM_SHORT_CODE;
      }
 else {
        return CATEGORY_NOT_SHORT_CODE;
      }
    }
  }
}
