{
  if (expectResponse(Request.INVITE,evt)) {
    ResponseEvent event=(ResponseEvent)evt;
    Response response=event.getResponse();
    int statusCode=response.getStatusCode();
switch (statusCode) {
case Response.RINGING:
      if (mState == SipSessionState.OUTGOING_CALL) {
        mState=SipSessionState.OUTGOING_CALL_RING_BACK;
        mProxy.onRingingBack(this);
        cancelSessionTimer();
      }
    return true;
case Response.OK:
  mSipHelper.sendInviteAck(event,mDialog);
mPeerSessionDescription=extractContent(response);
establishCall();
return true;
case Response.UNAUTHORIZED:
case Response.PROXY_AUTHENTICATION_REQUIRED:
if (handleAuthentication(event)) {
addSipSession(this);
}
 else if (mLastNonce == null) {
onError(SipErrorCode.SERVER_ERROR,"server does not provide challenge");
}
 else {
onError(SipErrorCode.INVALID_CREDENTIALS,"incorrect username or password");
}
return true;
case Response.REQUEST_PENDING:
return true;
default :
if (statusCode >= 400) {
onError(response);
return true;
}
 else if (statusCode >= 300) {
}
 else {
return true;
}
}
return false;
}
 else if (END_CALL == evt) {
mSipHelper.sendCancel(mClientTransaction);
mState=SipSessionState.OUTGOING_CALL_CANCELING;
startSessionTimer(CANCEL_CALL_TIMER);
return true;
}
return false;
}
