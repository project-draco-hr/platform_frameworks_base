{
  ArrayList<Cookie> list=new ArrayList<Cookie>();
  if (domain == null || !checkInitialized()) {
    return list;
  }
synchronized (mCookieLock) {
    final String[] columns=new String[]{ID_COL,COOKIES_DOMAIN_COL,COOKIES_PATH_COL,COOKIES_NAME_COL,COOKIES_VALUE_COL,COOKIES_EXPIRES_COL,COOKIES_SECURE_COL};
    final String selection="(" + COOKIES_DOMAIN_COL + " GLOB '*' || ?)";
    Cursor cursor=null;
    try {
      cursor=mDatabase.query(mTableNames[TABLE_COOKIES_ID],columns,selection,new String[]{domain},null,null,null);
      if (cursor.moveToFirst()) {
        int domainCol=cursor.getColumnIndex(COOKIES_DOMAIN_COL);
        int pathCol=cursor.getColumnIndex(COOKIES_PATH_COL);
        int nameCol=cursor.getColumnIndex(COOKIES_NAME_COL);
        int valueCol=cursor.getColumnIndex(COOKIES_VALUE_COL);
        int expiresCol=cursor.getColumnIndex(COOKIES_EXPIRES_COL);
        int secureCol=cursor.getColumnIndex(COOKIES_SECURE_COL);
        do {
          Cookie cookie=new Cookie();
          cookie.domain=cursor.getString(domainCol);
          cookie.path=cursor.getString(pathCol);
          cookie.name=cursor.getString(nameCol);
          cookie.value=cursor.getString(valueCol);
          if (cursor.isNull(expiresCol)) {
            cookie.expires=-1;
          }
 else {
            cookie.expires=cursor.getLong(expiresCol);
          }
          cookie.secure=cursor.getShort(secureCol) != 0;
          cookie.mode=Cookie.MODE_NORMAL;
          list.add(cookie);
        }
 while (cursor.moveToNext());
      }
    }
 catch (    IllegalStateException e) {
      Log.e(LOGTAG,"getCookiesForDomain",e);
    }
 finally {
      if (cursor != null)       cursor.close();
    }
    return list;
  }
}
