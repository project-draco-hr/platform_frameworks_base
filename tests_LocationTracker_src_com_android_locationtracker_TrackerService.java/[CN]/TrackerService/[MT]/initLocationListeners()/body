{
  mTrackerData=new TrackerDataHelper(this);
  LocationManager lm=getLocationManager();
  mTrackedProviders=getTrackedProviders();
  List<String> locationProviders=lm.getAllProviders();
  mListeners=new ArrayList<LocationTrackingListener>(locationProviders.size());
  long minUpdateTime=getLocationUpdateTime();
  float minDistance=getLocationMinDistance();
  for (  String providerName : locationProviders) {
    if (mTrackedProviders.contains(providerName)) {
      Log.d(LOG_TAG,"Adding location listener for provider " + providerName);
      if (doDebugLogging()) {
        mTrackerData.writeEntry("init",String.format("start listening to %s : %d ms; %f meters",providerName,minUpdateTime,minDistance));
      }
      LocationTrackingListener listener=new LocationTrackingListener();
      lm.requestLocationUpdates(providerName,minUpdateTime,minDistance,listener);
      mListeners.add(listener);
    }
  }
  mTelephonyManager=(TelephonyManager)getSystemService(Context.TELEPHONY_SERVICE);
  if (doDebugLogging()) {
    mTelephonyManager.listen(mPhoneStateListener,PhoneStateListener.LISTEN_CELL_LOCATION);
    mNetwork=new NetworkStateBroadcastReceiver();
    IntentFilter mIntentFilter;
    mIntentFilter=new IntentFilter();
    mIntentFilter.addAction(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION);
    mIntentFilter.addAction(WifiManager.WIFI_STATE_CHANGED_ACTION);
    mIntentFilter.addAction(ConnectivityManager.CONNECTIVITY_ACTION);
    Log.d(LOG_TAG,"registering receiver");
    registerReceiver(mNetwork,mIntentFilter);
  }
  if (trackSignalStrength()) {
    mTelephonyManager.listen(mPhoneStateListener,PhoneStateListener.LISTEN_SIGNAL_STRENGTHS);
  }
  mPrefListener=new PreferenceListener();
  getPreferences().registerOnSharedPreferenceChangeListener(mPrefListener);
}
