{
  int index=-1;
  for (int i=0; i < STANDARD_DIRECTORIES.length; i++) {
    if (STANDARD_DIRECTORIES[i].equals(directory)) {
      index=i;
      break;
    }
  }
  final String packageName=activity.getCallingPackage();
switch (type) {
case SCOPED_DIRECTORY_ACCESS_ALREADY_GRANTED:
    MetricsLogger.action(activity,MetricsEvent.ACTION_SCOPED_DIRECTORY_ACCESS_ALREADY_GRANTED_BY_PACKAGE,packageName);
  MetricsLogger.action(activity,MetricsEvent.ACTION_SCOPED_DIRECTORY_ACCESS_ALREADY_GRANTED_BY_FOLDER,index);
break;
case SCOPED_DIRECTORY_ACCESS_GRANTED:
MetricsLogger.action(activity,MetricsEvent.ACTION_SCOPED_DIRECTORY_ACCESS_GRANTED_BY_PACKAGE,packageName);
MetricsLogger.action(activity,MetricsEvent.ACTION_SCOPED_DIRECTORY_ACCESS_GRANTED_BY_FOLDER,index);
break;
case SCOPED_DIRECTORY_ACCESS_DENIED:
MetricsLogger.action(activity,MetricsEvent.ACTION_SCOPED_DIRECTORY_ACCESS_DENIED_BY_PACKAGE,packageName);
MetricsLogger.action(activity,MetricsEvent.ACTION_SCOPED_DIRECTORY_ACCESS_DENIED_BY_FOLDER,index);
break;
default :
Log.wtf(TAG,"invalid ScopedAccessGrant: " + type);
}
}
