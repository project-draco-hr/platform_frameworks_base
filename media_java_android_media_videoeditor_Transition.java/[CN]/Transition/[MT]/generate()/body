{
  MediaItem m1=this.getAfterMediaItem();
  MediaItem m2=this.getBeforeMediaItem();
  ClipSettings clipSettings1=new ClipSettings();
  ClipSettings clipSettings2=new ClipSettings();
  TransitionSettings transitionSetting=null;
  EditSettings editSettings=new EditSettings();
  List<EffectSettings> effectSettings_clip1;
  List<EffectSettings> effectSettings_clip2;
  String output=null;
  String effectClip1=null;
  String effectClip2=null;
  if (mNativeHelper == null) {
    if (m1 != null)     mNativeHelper=m1.getNativeContext();
 else     if (m2 != null)     mNativeHelper=m2.getNativeContext();
  }
  transitionSetting=getTransitionSettings();
  if (m1 != null && m2 != null) {
    clipSettings1=m1.getClipSettings();
    clipSettings2=m2.getClipSettings();
    clipSettings1.beginCutTime=(int)(clipSettings1.endCutTime - this.mDurationMs);
    clipSettings2.endCutTime=(int)(clipSettings2.beginCutTime + this.mDurationMs);
    effectSettings_clip1=isEffectandOverlayOverlapping(m1,clipSettings1,1);
    effectSettings_clip2=isEffectandOverlayOverlapping(m2,clipSettings2,2);
    for (int index=0; index < effectSettings_clip2.size(); index++) {
      effectSettings_clip2.get(index).startTime+=this.mDurationMs;
    }
    editSettings.effectSettingsArray=new EffectSettings[effectSettings_clip1.size() + effectSettings_clip2.size()];
    int i=0, j=0;
    while (i < effectSettings_clip1.size()) {
      editSettings.effectSettingsArray[j]=effectSettings_clip1.get(i);
      i++;
      j++;
    }
    i=0;
    while (i < effectSettings_clip2.size()) {
      editSettings.effectSettingsArray[j]=effectSettings_clip2.get(i);
      i++;
      j++;
    }
  }
 else   if (m1 == null && m2 != null) {
    m2.generateBlankFrame(clipSettings1);
    clipSettings2=m2.getClipSettings();
    clipSettings1.endCutTime=(int)(this.mDurationMs + 50);
    clipSettings2.endCutTime=(int)(clipSettings2.beginCutTime + this.mDurationMs);
    effectSettings_clip2=isEffectandOverlayOverlapping(m2,clipSettings2,2);
    for (int index=0; index < effectSettings_clip2.size(); index++) {
      effectSettings_clip2.get(index).startTime+=this.mDurationMs;
    }
    editSettings.effectSettingsArray=new EffectSettings[effectSettings_clip2.size()];
    int i=0, j=0;
    while (i < effectSettings_clip2.size()) {
      editSettings.effectSettingsArray[j]=effectSettings_clip2.get(i);
      i++;
      j++;
    }
  }
 else   if (m1 != null && m2 == null) {
    clipSettings1=m1.getClipSettings();
    m1.generateBlankFrame(clipSettings2);
    clipSettings1.beginCutTime=(int)(clipSettings1.endCutTime - this.mDurationMs);
    clipSettings2.endCutTime=(int)(this.mDurationMs + 50);
    effectSettings_clip1=isEffectandOverlayOverlapping(m1,clipSettings1,1);
    editSettings.effectSettingsArray=new EffectSettings[effectSettings_clip1.size()];
    int i=0, j=0;
    while (i < effectSettings_clip1.size()) {
      editSettings.effectSettingsArray[j]=effectSettings_clip1.get(i);
      i++;
      j++;
    }
  }
  editSettings.clipSettingsArray=new ClipSettings[2];
  editSettings.clipSettingsArray[0]=clipSettings1;
  editSettings.clipSettingsArray[1]=clipSettings2;
  editSettings.backgroundMusicSettings=null;
  editSettings.transitionSettingsArray=new TransitionSettings[1];
  editSettings.transitionSettingsArray[0]=transitionSetting;
  output=mNativeHelper.generateTransitionClip(editSettings,mUniqueId,m1,m2,this);
  setFilename(output);
}
