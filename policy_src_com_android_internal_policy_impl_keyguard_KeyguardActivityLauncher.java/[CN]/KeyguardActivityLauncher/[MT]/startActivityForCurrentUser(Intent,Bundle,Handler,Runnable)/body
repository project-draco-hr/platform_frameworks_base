{
  final UserHandle user=new UserHandle(UserHandle.USER_CURRENT);
  if (worker == null || onStarted == null) {
    getContext().startActivityAsUser(intent,options,user);
    return;
  }
  worker.post(new Runnable(){
    @Override public void run(){
      try {
        WaitResult result=ActivityManagerNative.getDefault().startActivityAndWait(null,null,intent,intent.resolveTypeIfNeeded(getContext().getContentResolver()),null,null,0,Intent.FLAG_ACTIVITY_NEW_TASK,null,null,options,user.getIdentifier());
        if (DEBUG)         Log.d(TAG,String.format("waitResult[%s,%s,%s,%s] at %s",result.result,result.thisTime,result.totalTime,result.who,SystemClock.uptimeMillis()));
      }
 catch (      RemoteException e) {
        Log.w(TAG,"Error starting activity",e);
        return;
      }
      try {
        onStarted.run();
      }
 catch (      Throwable t) {
        Log.w(TAG,"Error running onStarted callback",t);
      }
    }
  }
);
}
