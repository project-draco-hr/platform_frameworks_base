{
  if (attributes == null) {
    throw new IllegalArgumentException("Illegal null AudioAttributes");
  }
  if (format == null) {
    throw new IllegalArgumentException("Illegal null AudioFormat");
  }
  Looper looper;
  if ((looper=Looper.myLooper()) == null) {
    looper=Looper.getMainLooper();
  }
  int rate=0;
  if ((format.getPropertySetMask() & AudioFormat.AUDIO_FORMAT_HAS_PROPERTY_SAMPLE_RATE) != 0) {
    rate=format.getSampleRate();
  }
 else {
    rate=AudioSystem.getPrimaryOutputSamplingRate();
    if (rate <= 0) {
      rate=44100;
    }
  }
  int channelIndexMask=0;
  if ((format.getPropertySetMask() & AudioFormat.AUDIO_FORMAT_HAS_PROPERTY_CHANNEL_INDEX_MASK) != 0) {
    channelIndexMask=format.getChannelIndexMask();
  }
  int channelMask=0;
  if ((format.getPropertySetMask() & AudioFormat.AUDIO_FORMAT_HAS_PROPERTY_CHANNEL_MASK) != 0) {
    channelMask=format.getChannelMask();
  }
 else   if (channelIndexMask == 0) {
    channelMask=AudioFormat.CHANNEL_OUT_FRONT_LEFT | AudioFormat.CHANNEL_OUT_FRONT_RIGHT;
  }
  int encoding=AudioFormat.ENCODING_DEFAULT;
  if ((format.getPropertySetMask() & AudioFormat.AUDIO_FORMAT_HAS_PROPERTY_ENCODING) != 0) {
    encoding=format.getEncoding();
  }
  audioParamCheck(rate,channelMask,channelIndexMask,encoding,mode);
  mStreamType=AudioSystem.STREAM_DEFAULT;
  audioBuffSizeCheck(bufferSizeInBytes);
  mInitializationLooper=looper;
  IBinder b=ServiceManager.getService(Context.APP_OPS_SERVICE);
  mAppOps=IAppOpsService.Stub.asInterface(b);
  mAttributes=(new AudioAttributes.Builder(attributes).build());
  if (sessionId < 0) {
    throw new IllegalArgumentException("Invalid audio session ID: " + sessionId);
  }
  int[] session=new int[1];
  session[0]=sessionId;
  int initResult=native_setup(new WeakReference<AudioTrack>(this),mAttributes,mSampleRate,mChannelMask,mChannelIndexMask,mAudioFormat,mNativeBufferSizeInBytes,mDataLoadMode,session);
  if (initResult != SUCCESS) {
    loge("Error code " + initResult + " when initializing AudioTrack.");
    return;
  }
  mSessionId=session[0];
  if (mDataLoadMode == MODE_STATIC) {
    mState=STATE_NO_STATIC_DATA;
  }
 else {
    mState=STATE_INITIALIZED;
  }
}
