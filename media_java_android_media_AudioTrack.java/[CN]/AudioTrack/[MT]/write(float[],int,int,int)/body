{
  if (mState == STATE_UNINITIALIZED) {
    Log.e(TAG,"AudioTrack.write() called in invalid state STATE_UNINITIALIZED");
    return ERROR_INVALID_OPERATION;
  }
  if (mAudioFormat != AudioFormat.ENCODING_PCM_FLOAT) {
    Log.e(TAG,"AudioTrack.write(float[] ...) requires format ENCODING_PCM_FLOAT");
    return ERROR_INVALID_OPERATION;
  }
  if ((writeMode != WRITE_BLOCKING) && (writeMode != WRITE_NON_BLOCKING)) {
    Log.e(TAG,"AudioTrack.write() called with invalid blocking mode");
    return ERROR_BAD_VALUE;
  }
  if ((audioData == null) || (offsetInFloats < 0) || (sizeInFloats < 0)|| (offsetInFloats + sizeInFloats < 0)|| (offsetInFloats + sizeInFloats > audioData.length)) {
    Log.e(TAG,"AudioTrack.write() called with invalid array, offset, or size");
    return ERROR_BAD_VALUE;
  }
  int ret=native_write_float(audioData,offsetInFloats,sizeInFloats,mAudioFormat,writeMode == WRITE_BLOCKING);
  if ((mDataLoadMode == MODE_STATIC) && (mState == STATE_NO_STATIC_DATA) && (ret > 0)) {
    mState=STATE_INITIALIZED;
  }
  return ret;
}
