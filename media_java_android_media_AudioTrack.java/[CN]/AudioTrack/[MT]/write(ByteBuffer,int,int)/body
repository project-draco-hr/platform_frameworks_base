{
  if (mState == STATE_UNINITIALIZED) {
    Log.e(TAG,"AudioTrack.write() called in invalid state STATE_UNINITIALIZED");
    return ERROR_INVALID_OPERATION;
  }
  if ((writeMode != WRITE_BLOCKING) && (writeMode != WRITE_NON_BLOCKING)) {
    Log.e(TAG,"AudioTrack.write() called with invalid blocking mode");
    return ERROR_BAD_VALUE;
  }
  if ((audioData == null) || (sizeInBytes < 0) || (sizeInBytes > audioData.remaining())) {
    Log.e(TAG,"AudioTrack.write() called with invalid size (" + sizeInBytes + ") value");
    return ERROR_BAD_VALUE;
  }
  int ret=0;
  if (audioData.isDirect()) {
    ret=native_write_native_bytes(audioData,audioData.position(),sizeInBytes,mAudioFormat,writeMode == WRITE_BLOCKING);
  }
 else {
    ret=native_write_byte(NioUtils.unsafeArray(audioData),NioUtils.unsafeArrayOffset(audioData) + audioData.position(),sizeInBytes,mAudioFormat,writeMode == WRITE_BLOCKING);
  }
  if ((mDataLoadMode == MODE_STATIC) && (mState == STATE_NO_STATIC_DATA) && (ret > 0)) {
    mState=STATE_INITIALIZED;
  }
  if (ret > 0) {
    audioData.position(audioData.position() + ret);
  }
  return ret;
}
