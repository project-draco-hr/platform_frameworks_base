{
  int event;
switch (msg.what) {
case EVENT_DHCP_START:
    boolean modifiedBluetoothCoexistenceMode=false;
  int powerMode=DRIVER_POWER_MODE_AUTO;
if (shouldDisableCoexistenceMode()) {
  modifiedBluetoothCoexistenceMode=true;
  setBluetoothCoexistenceMode(WifiNative.BLUETOOTH_COEXISTENCE_MODE_DISABLED);
}
powerMode=getPowerMode();
if (powerMode < 0) {
powerMode=DRIVER_POWER_MODE_AUTO;
}
if (powerMode != DRIVER_POWER_MODE_ACTIVE) {
setPowerMode(DRIVER_POWER_MODE_ACTIVE);
}
synchronized (this) {
mCancelCallback=false;
}
Log.d(TAG,"DhcpHandler: DHCP request started");
if (NetworkUtils.runDhcp(mInterfaceName,mDhcpInfo)) {
event=EVENT_INTERFACE_CONFIGURATION_SUCCEEDED;
if (LOCAL_LOGD) Log.v(TAG,"DhcpHandler: DHCP request succeeded");
}
 else {
event=EVENT_INTERFACE_CONFIGURATION_FAILED;
Log.i(TAG,"DhcpHandler: DHCP request failed: " + NetworkUtils.getDhcpError());
}
if (powerMode != DRIVER_POWER_MODE_ACTIVE) {
setPowerMode(powerMode);
}
if (modifiedBluetoothCoexistenceMode) {
setBluetoothCoexistenceMode(WifiNative.BLUETOOTH_COEXISTENCE_MODE_SENSE);
}
synchronized (this) {
if (!mCancelCallback) {
mTarget.sendEmptyMessage(event);
}
}
break;
}
}
