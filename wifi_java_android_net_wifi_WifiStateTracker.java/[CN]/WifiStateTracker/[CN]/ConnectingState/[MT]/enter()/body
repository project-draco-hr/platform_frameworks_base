{
  if (DBG)   Log.d(TAG,getName() + "\n");
  EventLog.writeEvent(EVENTLOG_WIFI_STATE_CHANGED,getName());
  if (!mUseStaticIp) {
    mDhcpThread=null;
    modifiedBluetoothCoexistenceMode=false;
    powerMode=DRIVER_POWER_MODE_AUTO;
    if (shouldDisableCoexistenceMode()) {
      modifiedBluetoothCoexistenceMode=true;
      WifiNative.setBluetoothCoexistenceModeCommand(WifiNative.BLUETOOTH_COEXISTENCE_MODE_DISABLED);
    }
    powerMode=WifiNative.getPowerModeCommand();
    if (powerMode < 0) {
      powerMode=DRIVER_POWER_MODE_AUTO;
    }
    if (powerMode != DRIVER_POWER_MODE_ACTIVE) {
      WifiNative.setPowerModeCommand(DRIVER_POWER_MODE_ACTIVE);
    }
    Log.d(TAG,"DHCP request started");
    mDhcpThread=new Thread(new Runnable(){
      public void run(){
        if (NetworkUtils.runDhcp(mInterfaceName,mDhcpInfo)) {
          Log.d(TAG,"DHCP request succeeded");
          sendMessage(CMD_IP_CONFIG_SUCCESS);
        }
 else {
          Log.d(TAG,"DHCP request failed: " + NetworkUtils.getDhcpError());
          sendMessage(CMD_IP_CONFIG_FAILURE);
        }
      }
    }
);
    mDhcpThread.start();
  }
 else {
    if (NetworkUtils.configureInterface(mInterfaceName,mDhcpInfo)) {
      Log.v(TAG,"Static IP configuration succeeded");
      sendMessage(CMD_IP_CONFIG_SUCCESS);
    }
 else {
      Log.v(TAG,"Static IP configuration failed");
      sendMessage(CMD_IP_CONFIG_FAILURE);
    }
  }
}
