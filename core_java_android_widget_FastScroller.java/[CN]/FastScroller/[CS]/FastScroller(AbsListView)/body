{
  mList=listView;
  mOverlay=listView.getOverlay();
  mOldItemCount=listView.getCount();
  mOldChildCount=listView.getChildCount();
  final Context context=listView.getContext();
  mScaledTouchSlop=ViewConfiguration.get(context).getScaledTouchSlop();
  final Resources res=context.getResources();
  final TypedArray ta=context.getTheme().obtainStyledAttributes(ATTRS);
  final ImageView trackImage=new ImageView(context);
  mTrackImage=trackImage;
  updateLongList(mOldChildCount,mOldItemCount);
  int width=0;
  final Drawable trackDrawable=ta.getDrawable(TRACK_DRAWABLE);
  if (trackDrawable != null) {
    mHasTrackImage=true;
    trackImage.setBackground(trackDrawable);
    mOverlay.add(trackImage);
    width=Math.max(width,trackDrawable.getIntrinsicWidth());
  }
 else {
    mHasTrackImage=false;
  }
  final ImageView thumbImage=new ImageView(context);
  mThumbImage=thumbImage;
  final Drawable thumbDrawable=ta.getDrawable(THUMB_DRAWABLE);
  if (thumbDrawable != null) {
    thumbImage.setImageDrawable(thumbDrawable);
    mOverlay.add(thumbImage);
    width=Math.max(width,thumbDrawable.getIntrinsicWidth());
  }
  if (thumbDrawable.getIntrinsicWidth() <= 0 || thumbDrawable.getIntrinsicHeight() <= 0) {
    final int minWidth=res.getDimensionPixelSize(R.dimen.fastscroll_thumb_width);
    thumbImage.setMinimumWidth(minWidth);
    thumbImage.setMinimumHeight(res.getDimensionPixelSize(R.dimen.fastscroll_thumb_height));
    width=Math.max(width,minWidth);
  }
  mWidth=width;
  final int previewSize=res.getDimensionPixelSize(R.dimen.fastscroll_overlay_size);
  mPreviewImage=new ImageView(context);
  mPreviewImage.setMinimumWidth(previewSize);
  mPreviewImage.setMinimumHeight(previewSize);
  mPreviewImage.setAlpha(0f);
  mOverlay.add(mPreviewImage);
  mPreviewPadding=res.getDimensionPixelSize(R.dimen.fastscroll_overlay_padding);
  final int textMinSize=Math.max(0,previewSize - mPreviewPadding);
  mPrimaryText=createPreviewTextView(context,ta);
  mPrimaryText.setMinimumWidth(textMinSize);
  mPrimaryText.setMinimumHeight(textMinSize);
  mOverlay.add(mPrimaryText);
  mSecondaryText=createPreviewTextView(context,ta);
  mSecondaryText.setMinimumWidth(textMinSize);
  mSecondaryText.setMinimumHeight(textMinSize);
  mOverlay.add(mSecondaryText);
  mPreviewResId[PREVIEW_LEFT]=ta.getResourceId(PREVIEW_BACKGROUND_LEFT,0);
  mPreviewResId[PREVIEW_RIGHT]=ta.getResourceId(PREVIEW_BACKGROUND_RIGHT,0);
  mOverlayPosition=ta.getInt(OVERLAY_POSITION,OVERLAY_FLOATING);
  ta.recycle();
  mScrollBarStyle=listView.getScrollBarStyle();
  mScrollCompleted=true;
  mState=STATE_VISIBLE;
  mMatchDragPosition=context.getApplicationInfo().targetSdkVersion >= Build.VERSION_CODES.HONEYCOMB;
  getSectionsFromIndexer();
  refreshDrawablePressedState();
  updateLongList(listView.getChildCount(),listView.getCount());
  setScrollbarPosition(mList.getVerticalScrollbarPosition());
  postAutoHide();
}
