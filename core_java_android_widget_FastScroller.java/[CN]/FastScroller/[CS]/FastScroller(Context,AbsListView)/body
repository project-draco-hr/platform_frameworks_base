{
  mList=listView;
  mOverlay=listView.getOverlay();
  mScaledTouchSlop=ViewConfiguration.get(context).getScaledTouchSlop();
  final Resources res=context.getResources();
  final TypedArray ta=context.getTheme().obtainStyledAttributes(ATTRS);
  mTrackImage=new ImageView(context);
  final int trackResId=ta.getResourceId(TRACK_DRAWABLE,0);
  if (trackResId != 0) {
    mHasTrackImage=true;
    mTrackImage.setBackgroundResource(trackResId);
    mOverlay.add(mTrackImage);
  }
 else {
    mHasTrackImage=false;
  }
  mThumbImage=new ImageView(context);
  final Drawable thumbDrawable=ta.getDrawable(THUMB_DRAWABLE);
  if (thumbDrawable != null) {
    mThumbImage.setImageDrawable(thumbDrawable);
    mOverlay.add(mThumbImage);
  }
  if (thumbDrawable.getIntrinsicWidth() <= 0 || thumbDrawable.getIntrinsicHeight() <= 0) {
    mThumbImage.setMinimumWidth(res.getDimensionPixelSize(R.dimen.fastscroll_thumb_width));
    mThumbImage.setMinimumHeight(res.getDimensionPixelSize(R.dimen.fastscroll_thumb_height));
  }
  final int previewSize=res.getDimensionPixelSize(R.dimen.fastscroll_overlay_size);
  mPreviewImage=new ImageView(context);
  mPreviewImage.setMinimumWidth(previewSize);
  mPreviewImage.setMinimumHeight(previewSize);
  mPreviewImage.setAlpha(0f);
  mOverlay.add(mPreviewImage);
  mPreviewPadding=res.getDimensionPixelSize(R.dimen.fastscroll_overlay_padding);
  mPrimaryText=createPreviewTextView(context,ta);
  mOverlay.add(mPrimaryText);
  mSecondaryText=createPreviewTextView(context,ta);
  mOverlay.add(mSecondaryText);
  mPreviewResId[PREVIEW_LEFT]=ta.getResourceId(PREVIEW_BACKGROUND_LEFT,0);
  mPreviewResId[PREVIEW_RIGHT]=ta.getResourceId(PREVIEW_BACKGROUND_RIGHT,0);
  mOverlayPosition=ta.getInt(OVERLAY_POSITION,OVERLAY_FLOATING);
  ta.recycle();
  mScrollCompleted=true;
  mState=STATE_VISIBLE;
  mMatchDragPosition=context.getApplicationInfo().targetSdkVersion >= Build.VERSION_CODES.HONEYCOMB;
  getSectionsFromIndexer();
  refreshDrawablePressedState();
  setScrollbarPosition(mList.getVerticalScrollbarPosition());
  mList.postDelayed(mDeferHide,FADE_TIMEOUT);
}
