{
  if (mSectionIndexer == null) {
    getSectionsFromIndexer();
  }
  if (mSectionIndexer == null) {
    return ((mList.getHeight() - mThumbH) * firstVisibleItem) / (totalItemCount - visibleItemCount);
  }
  firstVisibleItem-=mListOffset;
  if (firstVisibleItem < 0) {
    return 0;
  }
  totalItemCount-=mListOffset;
  final int trackHeight=mList.getHeight() - mThumbH;
  final int section=mSectionIndexer.getSectionForPosition(firstVisibleItem);
  final int sectionPos=mSectionIndexer.getPositionForSection(section);
  final int nextSectionPos=mSectionIndexer.getPositionForSection(section + 1);
  final int sectionCount=mSectionIndexer.getSections().length;
  final int positionsInSection=nextSectionPos - sectionPos;
  final View child=mList.getChildAt(0);
  final float incrementalPos=firstVisibleItem + (float)(mList.getPaddingTop() - child.getTop()) / child.getHeight();
  final float posWithinSection=(incrementalPos - sectionPos) / positionsInSection;
  int result=(int)((section + posWithinSection) / sectionCount * trackHeight);
  if (firstVisibleItem > 0 && firstVisibleItem + visibleItemCount == totalItemCount) {
    final View lastChild=mList.getChildAt(visibleItemCount - 1);
    final float lastItemVisible=(float)(mList.getHeight() - mList.getPaddingBottom() - lastChild.getTop()) / lastChild.getHeight();
    result+=(trackHeight - result) * lastItemVisible;
  }
  return result;
}
