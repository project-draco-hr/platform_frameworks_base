{
  if (mState == STATE_NONE) {
    return false;
  }
  final int action=me.getAction();
  if (action == MotionEvent.ACTION_DOWN) {
    if (isPointInside(me.getX(),me.getY())) {
      if (!mList.isInScrollingContainer()) {
        beginDrag();
        return true;
      }
      mInitialTouchY=me.getY();
      startPendingDrag();
    }
  }
 else   if (action == MotionEvent.ACTION_UP) {
    if (mPendingDrag) {
      beginDrag();
      final int viewHeight=mList.getHeight();
      int newThumbY=(int)me.getY() - mThumbH + 10;
      if (newThumbY < 0) {
        newThumbY=0;
      }
 else       if (newThumbY + mThumbH > viewHeight) {
        newThumbY=viewHeight - mThumbH;
      }
      mThumbY=newThumbY;
      scrollTo((float)mThumbY / (viewHeight - mThumbH));
      cancelPendingDrag();
    }
    if (mState == STATE_DRAGGING) {
      if (mList != null) {
        mList.requestDisallowInterceptTouchEvent(false);
        mList.reportScrollStateChange(OnScrollListener.SCROLL_STATE_IDLE);
      }
      setState(STATE_VISIBLE);
      final Handler handler=mHandler;
      handler.removeCallbacks(mScrollFade);
      if (!mAlwaysShow) {
        handler.postDelayed(mScrollFade,1000);
      }
      mList.invalidate();
      return true;
    }
  }
 else   if (action == MotionEvent.ACTION_MOVE) {
    if (mPendingDrag) {
      final float y=me.getY();
      if (Math.abs(y - mInitialTouchY) > mScaledTouchSlop) {
        setState(STATE_DRAGGING);
        if (mListAdapter == null && mList != null) {
          getSectionsFromIndexer();
        }
        if (mList != null) {
          mList.requestDisallowInterceptTouchEvent(true);
          mList.reportScrollStateChange(OnScrollListener.SCROLL_STATE_TOUCH_SCROLL);
        }
        cancelFling();
        cancelPendingDrag();
      }
    }
    if (mState == STATE_DRAGGING) {
      final int viewHeight=mList.getHeight();
      int newThumbY=(int)me.getY() - mThumbH + 10;
      if (newThumbY < 0) {
        newThumbY=0;
      }
 else       if (newThumbY + mThumbH > viewHeight) {
        newThumbY=viewHeight - mThumbH;
      }
      if (Math.abs(mThumbY - newThumbY) < 2) {
        return true;
      }
      mThumbY=newThumbY;
      if (mScrollCompleted) {
        scrollTo((float)mThumbY / (viewHeight - mThumbH));
      }
      return true;
    }
  }
 else   if (action == MotionEvent.ACTION_CANCEL) {
    cancelPendingDrag();
  }
  return false;
}
