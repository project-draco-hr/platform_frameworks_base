{
  final Context context=mList.getContext();
  int width=0;
  mTrackImage.setImageDrawable(mTrackDrawable);
  if (mTrackDrawable != null) {
    width=Math.max(width,mTrackDrawable.getIntrinsicWidth());
  }
  mThumbImage.setImageDrawable(mThumbDrawable);
  mThumbImage.setMinimumWidth(mThumbMinWidth);
  mThumbImage.setMinimumHeight(mThumbMinHeight);
  if (mThumbDrawable != null) {
    width=Math.max(width,mThumbDrawable.getIntrinsicWidth());
  }
  mWidth=Math.max(width,mThumbMinWidth);
  mPreviewImage.setMinimumWidth(mPreviewMinWidth);
  mPreviewImage.setMinimumHeight(mPreviewMinHeight);
  if (mTextAppearance != 0) {
    mPrimaryText.setTextAppearance(context,mTextAppearance);
    mSecondaryText.setTextAppearance(context,mTextAppearance);
  }
  if (mTextColor != null) {
    mPrimaryText.setTextColor(mTextColor);
    mSecondaryText.setTextColor(mTextColor);
  }
  if (mTextSize > 0) {
    mPrimaryText.setTextSize(TypedValue.COMPLEX_UNIT_PX,mTextSize);
    mSecondaryText.setTextSize(TypedValue.COMPLEX_UNIT_PX,mTextSize);
  }
  final int textMinSize=Math.max(0,mPreviewMinHeight);
  mPrimaryText.setMinimumWidth(textMinSize);
  mPrimaryText.setMinimumHeight(textMinSize);
  mSecondaryText.setMinimumWidth(textMinSize);
  mSecondaryText.setMinimumHeight(textMinSize);
  refreshDrawablePressedState();
}
