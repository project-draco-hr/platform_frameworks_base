{
  if (mSectionIndexer == null || mListAdapter == null) {
    getSectionsFromIndexer();
  }
  final boolean hasSections=mSectionIndexer != null && mSections != null && mSections.length > 0;
  if (!hasSections || !mMatchDragPosition) {
    return (float)firstVisibleItem / (totalItemCount - visibleItemCount);
  }
  firstVisibleItem-=mHeaderCount;
  if (firstVisibleItem < 0) {
    return 0;
  }
  totalItemCount-=mHeaderCount;
  final View child=mList.getChildAt(0);
  final float incrementalPos;
  if (child == null || child.getHeight() == 0) {
    incrementalPos=0;
  }
 else {
    incrementalPos=(float)(mList.getPaddingTop() - child.getTop()) / child.getHeight();
  }
  final int section=mSectionIndexer.getSectionForPosition(firstVisibleItem);
  final int sectionPos=mSectionIndexer.getPositionForSection(section);
  final int sectionCount=mSections.length;
  final int positionsInSection;
  if (section < sectionCount - 1) {
    final int nextSectionPos;
    if (section + 1 < sectionCount) {
      nextSectionPos=mSectionIndexer.getPositionForSection(section + 1);
    }
 else {
      nextSectionPos=totalItemCount - 1;
    }
    positionsInSection=nextSectionPos - sectionPos;
  }
 else {
    positionsInSection=totalItemCount - sectionPos;
  }
  final float posWithinSection;
  if (positionsInSection == 0) {
    posWithinSection=0;
  }
 else {
    posWithinSection=(firstVisibleItem + incrementalPos - sectionPos) / positionsInSection;
  }
  float result=(section + posWithinSection) / sectionCount;
  if (firstVisibleItem > 0 && firstVisibleItem + visibleItemCount == totalItemCount) {
    final View lastChild=mList.getChildAt(visibleItemCount - 1);
    final int bottomPadding=mList.getPaddingBottom();
    final int maxSize;
    final int currentVisibleSize;
    if (mList.getClipToPadding()) {
      maxSize=lastChild.getHeight();
      currentVisibleSize=mList.getHeight() - bottomPadding - lastChild.getTop();
    }
 else {
      maxSize=lastChild.getHeight() + bottomPadding;
      currentVisibleSize=mList.getHeight() - lastChild.getTop();
    }
    if (currentVisibleSize > 0 && maxSize > 0) {
      result+=(1 - result) * ((float)currentVisibleSize / maxSize);
    }
  }
  return result;
}
