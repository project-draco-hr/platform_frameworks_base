{
  if (mState == STATE_NONE) {
    return;
  }
  final int y=mThumbY;
  final int viewWidth=mList.getWidth();
  final FastScroller.ScrollFade scrollFade=mScrollFade;
  int alpha=-1;
  if (mState == STATE_EXIT) {
    alpha=scrollFade.getAlpha();
    if (alpha < ScrollFade.ALPHA_MAX / 2) {
      mThumbDrawable.setAlpha(alpha * 2);
    }
    int left=viewWidth - (mThumbW * alpha) / ScrollFade.ALPHA_MAX;
    mThumbDrawable.setBounds(left,0,viewWidth,mThumbH);
    mChangedBounds=true;
  }
  canvas.translate(0,y);
  mThumbDrawable.draw(canvas);
  canvas.translate(0,-y);
  if (mState == STATE_DRAGGING && mDrawOverlay) {
    mOverlayDrawable.draw(canvas);
    final Paint paint=mPaint;
    float descent=paint.descent();
    final RectF rectF=mOverlayPos;
    canvas.drawText(mSectionText,(int)(rectF.left + rectF.right) / 2,(int)(rectF.bottom + rectF.top) / 2 + mOverlaySize / 4 - descent,paint);
  }
 else   if (mState == STATE_EXIT) {
    if (alpha == 0) {
      setState(STATE_NONE);
    }
 else {
      mList.invalidate(viewWidth - mThumbW,y,viewWidth,y + mThumbH);
    }
  }
}
