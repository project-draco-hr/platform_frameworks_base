{
  mScrollCompleted=false;
  final int count=mList.getCount();
  final Object[] sections=mSections;
  final int sectionCount=sections == null ? 0 : sections.length;
  int sectionIndex;
  if (sections != null && sectionCount > 1) {
    final int exactSection=MathUtils.constrain((int)(position * sectionCount),0,sectionCount - 1);
    int targetSection=exactSection;
    int targetIndex=mSectionIndexer.getPositionForSection(targetSection);
    sectionIndex=targetSection;
    int nextIndex=count;
    int prevIndex=targetIndex;
    int prevSection=targetSection;
    int nextSection=targetSection + 1;
    if (targetSection < sectionCount - 1) {
      nextIndex=mSectionIndexer.getPositionForSection(targetSection + 1);
    }
    if (nextIndex == targetIndex) {
      while (targetSection > 0) {
        targetSection--;
        prevIndex=mSectionIndexer.getPositionForSection(targetSection);
        if (prevIndex != targetIndex) {
          prevSection=targetSection;
          sectionIndex=targetSection;
          break;
        }
 else         if (targetSection == 0) {
          sectionIndex=0;
          break;
        }
      }
    }
    int nextNextSection=nextSection + 1;
    while (nextNextSection < sectionCount && mSectionIndexer.getPositionForSection(nextNextSection) == nextIndex) {
      nextNextSection++;
      nextSection++;
    }
    final float prevPosition=(float)prevSection / sectionCount;
    final float nextPosition=(float)nextSection / sectionCount;
    final float snapThreshold=(count == 0) ? Float.MAX_VALUE : .125f / count;
    if (prevSection == exactSection && position - prevPosition < snapThreshold) {
      targetIndex=prevIndex;
    }
 else {
      targetIndex=prevIndex + (int)((nextIndex - prevIndex) * (position - prevPosition) / (nextPosition - prevPosition));
    }
    targetIndex=MathUtils.constrain(targetIndex,0,count - 1);
    if (mList instanceof ExpandableListView) {
      final ExpandableListView expList=(ExpandableListView)mList;
      expList.setSelectionFromTop(expList.getFlatListPosition(ExpandableListView.getPackedPositionForGroup(targetIndex + mHeaderCount)),0);
    }
 else     if (mList instanceof ListView) {
      ((ListView)mList).setSelectionFromTop(targetIndex + mHeaderCount,0);
    }
 else {
      mList.setSelection(targetIndex + mHeaderCount);
    }
  }
 else {
    final int index=MathUtils.constrain((int)(position * count),0,count - 1);
    if (mList instanceof ExpandableListView) {
      ExpandableListView expList=(ExpandableListView)mList;
      expList.setSelectionFromTop(expList.getFlatListPosition(ExpandableListView.getPackedPositionForGroup(index + mHeaderCount)),0);
    }
 else     if (mList instanceof ListView) {
      ((ListView)mList).setSelectionFromTop(index + mHeaderCount,0);
    }
 else {
      mList.setSelection(index + mHeaderCount);
    }
    sectionIndex=-1;
  }
  if (mCurrentSection != sectionIndex) {
    mCurrentSection=sectionIndex;
    final boolean hasPreview=transitionPreviewLayout(sectionIndex);
    if (!mShowingPreview && hasPreview) {
      transitionToDragging();
    }
 else     if (mShowingPreview && !hasPreview) {
      transitionToVisible();
    }
  }
}
