{
  mInputManager.setSystemUiVisibility(visibility);
  final WindowList windows=getDefaultWindowList();
  final int N=windows.size();
  for (int i=0; i < N; i++) {
    WindowState ws=windows.get(i);
    try {
      int curValue=ws.mSystemUiVisibility;
      int diff=curValue ^ visibility;
      diff&=View.SYSTEM_UI_CLEARABLE_FLAGS;
      diff&=~visibility;
      int newValue=(curValue & ~diff) | (visibility & diff);
      if (newValue != curValue) {
        ws.mSeq++;
        ws.mSystemUiVisibility=newValue;
      }
      if (newValue != curValue || ws.mAttrs.hasSystemUiListeners) {
        ws.mClient.dispatchSystemUiVisibilityChanged(ws.mSeq,visibility,newValue,diff);
      }
    }
 catch (    RemoteException e) {
    }
  }
}
