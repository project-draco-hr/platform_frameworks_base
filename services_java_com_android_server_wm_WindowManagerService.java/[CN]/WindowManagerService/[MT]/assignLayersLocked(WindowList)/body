{
  int N=windows.size();
  int curBaseLayer=0;
  int curLayer=0;
  int i;
  if (DEBUG_LAYERS) {
    RuntimeException here=new RuntimeException("here");
    here.fillInStackTrace();
    Slog.v(TAG,"Assigning layers",here);
  }
  for (i=0; i < N; i++) {
    final WindowState w=windows.get(i);
    final WindowStateAnimator winAnimator=w.mWinAnimator;
    boolean layerChanged=false;
    int oldLayer=w.mLayer;
    if (w.mBaseLayer == curBaseLayer || w.mIsImWindow || (i > 0 && w.mIsWallpaper)) {
      curLayer+=WINDOW_LAYER_MULTIPLIER;
      w.mLayer=curLayer;
    }
 else {
      curBaseLayer=curLayer=w.mBaseLayer;
      w.mLayer=curLayer;
    }
    if (w.mLayer != oldLayer) {
      layerChanged=true;
    }
    oldLayer=winAnimator.mAnimLayer;
    if (w.mTargetAppToken != null) {
      winAnimator.mAnimLayer=w.mLayer + w.mTargetAppToken.mAppAnimator.animLayerAdjustment;
    }
 else     if (w.mAppToken != null) {
      winAnimator.mAnimLayer=w.mLayer + w.mAppToken.mAppAnimator.animLayerAdjustment;
    }
 else {
      winAnimator.mAnimLayer=w.mLayer;
    }
    if (w.mIsImWindow) {
      winAnimator.mAnimLayer+=mInputMethodAnimLayerAdjustment;
    }
 else     if (w.mIsWallpaper) {
      winAnimator.mAnimLayer+=mWallpaperAnimLayerAdjustment;
    }
    if (winAnimator.mAnimLayer != oldLayer) {
      layerChanged=true;
    }
    if (layerChanged && mAnimator.isDimmingLocked(winAnimator)) {
      updateLayoutToAnimationLocked();
    }
    if (DEBUG_LAYERS)     Slog.v(TAG,"Assign layer " + w + ": "+ "mBase="+ w.mBaseLayer+ " mLayer="+ w.mLayer+ (w.mAppToken == null ? "" : " mAppLayer=" + w.mAppToken.mAppAnimator.animLayerAdjustment)+ " =mAnimLayer="+ winAnimator.mAnimLayer);
  }
}
