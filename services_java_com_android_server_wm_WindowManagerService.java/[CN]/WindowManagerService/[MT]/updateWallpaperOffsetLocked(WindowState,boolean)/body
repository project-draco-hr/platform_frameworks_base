{
  final int dw=mAppDisplayWidth;
  final int dh=mAppDisplayHeight;
  WindowState target=mWallpaperTarget;
  if (target != null) {
    if (target.mWallpaperX >= 0) {
      mLastWallpaperX=target.mWallpaperX;
    }
 else     if (changingTarget.mWallpaperX >= 0) {
      mLastWallpaperX=changingTarget.mWallpaperX;
    }
    if (target.mWallpaperY >= 0) {
      mLastWallpaperY=target.mWallpaperY;
    }
 else     if (changingTarget.mWallpaperY >= 0) {
      mLastWallpaperY=changingTarget.mWallpaperY;
    }
  }
  int curTokenIndex=mWallpaperTokens.size();
  while (curTokenIndex > 0) {
    curTokenIndex--;
    WindowToken token=mWallpaperTokens.get(curTokenIndex);
    int curWallpaperIndex=token.windows.size();
    while (curWallpaperIndex > 0) {
      curWallpaperIndex--;
      WindowState wallpaper=token.windows.get(curWallpaperIndex);
      if (updateWallpaperOffsetLocked(wallpaper,dw,dh,sync)) {
        wallpaper.computeShownFrameLocked();
        if (wallpaper.mSurfaceX != wallpaper.mShownFrame.left || wallpaper.mSurfaceY != wallpaper.mShownFrame.top) {
          Surface.openTransaction();
          try {
            if (SHOW_TRANSACTIONS)             logSurface(wallpaper,"POS " + wallpaper.mShownFrame.left + ", "+ wallpaper.mShownFrame.top,null);
            wallpaper.mSurfaceX=wallpaper.mShownFrame.left;
            wallpaper.mSurfaceY=wallpaper.mShownFrame.top;
            wallpaper.mSurface.setPosition(wallpaper.mShownFrame.left,wallpaper.mShownFrame.top);
          }
 catch (          RuntimeException e) {
            Slog.w(TAG,"Error positioning surface of " + wallpaper + " pos=("+ wallpaper.mShownFrame.left+ ","+ wallpaper.mShownFrame.top+ ")",e);
          }
          Surface.closeTransaction();
        }
        sync=false;
      }
    }
  }
}
