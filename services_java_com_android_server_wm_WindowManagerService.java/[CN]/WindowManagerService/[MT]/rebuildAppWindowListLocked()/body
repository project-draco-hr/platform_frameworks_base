{
  int NW=mWindows.size();
  int i;
  int lastWallpaper=-1;
  int numRemoved=0;
  if (mRebuildTmp.length < NW) {
    mRebuildTmp=new WindowState[NW + 10];
  }
  i=0;
  while (i < NW) {
    WindowState w=mWindows.get(i);
    if (w.mAppToken != null) {
      WindowState win=mWindows.remove(i);
      win.mRebuilding=true;
      mRebuildTmp[numRemoved]=win;
      mWindowsChanged=true;
      if (DEBUG_WINDOW_MOVEMENT)       Slog.v(TAG,"Rebuild removing window: " + win);
      NW--;
      numRemoved++;
      continue;
    }
 else     if (w.mAttrs.type == WindowManager.LayoutParams.TYPE_WALLPAPER && lastWallpaper == i - 1) {
      lastWallpaper=i;
    }
    i++;
  }
  lastWallpaper++;
  i=lastWallpaper;
  int NT=mExitingAppTokens.size();
  for (int j=0; j < NT; j++) {
    i=reAddAppWindowsLocked(i,mExitingAppTokens.get(j));
  }
  NT=mAppTokens.size();
  for (int j=0; j < NT; j++) {
    i=reAddAppWindowsLocked(i,mAppTokens.get(j));
  }
  i-=lastWallpaper;
  if (i != numRemoved) {
    Slog.w(TAG,"Rebuild removed " + numRemoved + " windows but added "+ i);
    for (i=0; i < numRemoved; i++) {
      WindowState ws=mRebuildTmp[i];
      if (ws.mRebuilding) {
        StringWriter sw=new StringWriter();
        PrintWriter pw=new PrintWriter(sw);
        ws.dump(pw,"");
        pw.flush();
        Slog.w(TAG,"This window was lost: " + ws);
        Slog.w(TAG,sw.toString());
      }
    }
    Slog.w(TAG,"Current app token list:");
    dumpAppTokensLocked();
    Slog.w(TAG,"Final window list:");
    dumpWindowsLocked();
  }
}
