{
  final LayoutToAnimatorParams layoutToAnim=mLayoutToAnim;
synchronized (layoutToAnim) {
    SparseArray<WinAnimatorList> allWinAnimatorLists=layoutToAnim.mWinAnimatorLists;
    allWinAnimatorLists.clear();
    DisplayContentsIterator iterator=new DisplayContentsIterator();
    while (iterator.hasNext()) {
      final DisplayContent displayContent=iterator.next();
      WinAnimatorList winAnimatorList=new WinAnimatorList();
      final WindowList windows=displayContent.getWindowList();
      int N=windows.size();
      for (int i=0; i < N; i++) {
        final WindowStateAnimator winAnimator=windows.get(i).mWinAnimator;
        if (winAnimator.mSurface != null) {
          winAnimatorList.add(winAnimator);
        }
      }
      allWinAnimatorLists.put(displayContent.getDisplayId(),winAnimatorList);
    }
    if (WindowManagerService.DEBUG_WALLPAPER_LIGHT) {
      if (mWallpaperTarget != layoutToAnim.mWallpaperTarget || mLowerWallpaperTarget != layoutToAnim.mLowerWallpaperTarget || mUpperWallpaperTarget != layoutToAnim.mUpperWallpaperTarget) {
        Slog.d(TAG,"Pushing anim wallpaper: target=" + layoutToAnim.mWallpaperTarget + " lower="+ layoutToAnim.mLowerWallpaperTarget+ " upper="+ layoutToAnim.mUpperWallpaperTarget+ "\n"+ Debug.getCallers(5,"  "));
      }
    }
    layoutToAnim.mWallpaperTarget=mWallpaperTarget;
    layoutToAnim.mLowerWallpaperTarget=mLowerWallpaperTarget;
    layoutToAnim.mUpperWallpaperTarget=mUpperWallpaperTarget;
    final ArrayList<AppWindowAnimParams> paramList=layoutToAnim.mAppWindowAnimParams;
    paramList.clear();
    int N=mAnimatingAppTokens.size();
    for (int i=0; i < N; i++) {
      paramList.add(new AppWindowAnimParams(mAnimatingAppTokens.get(i).mAppAnimator));
    }
    layoutToAnim.mParamsModified=true;
    scheduleAnimationLocked();
  }
}
