{
synchronized (mWindowMap) {
    if (mDisplay != null) {
      throw new IllegalStateException("Display already initialized");
    }
    WindowManager wm=(WindowManager)mContext.getSystemService(Context.WINDOW_SERVICE);
    mDisplay=wm.getDefaultDisplay();
    mIsTouchDevice=mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_TOUCHSCREEN);
    final DisplayContent displayContent=getDisplayContent(displayId);
synchronized (displayContent.mDisplaySizeLock) {
      final DisplayInfo displayInfo=displayContent.getDisplayInfo();
      mDisplayManager.getDisplayInfo(displayId,displayInfo);
      displayContent.mInitialDisplayWidth=displayInfo.logicalWidth;
      displayContent.mInitialDisplayHeight=displayInfo.logicalHeight;
      displayContent.mBaseDisplayWidth=displayContent.mInitialDisplayWidth;
      displayContent.mBaseDisplayHeight=displayContent.mInitialDisplayHeight;
      mAnimator.setDisplayDimensions(displayInfo.logicalWidth,displayInfo.logicalHeight,displayInfo.appWidth,displayInfo.appHeight);
    }
    DisplayDeviceInfo info=new DisplayDeviceInfo();
    mDisplayManager.getDefaultExternalDisplayDeviceInfo(info);
    mInputManager.setDisplaySize(displayId,displayContent.mInitialDisplayWidth,displayContent.mInitialDisplayHeight,info.width,info.height);
    mInputManager.setDisplayOrientation(displayId,mDisplay.getRotation(),Surface.ROTATION_0);
    mPolicy.setInitialDisplaySize(mDisplay,displayContent.mInitialDisplayWidth,displayContent.mInitialDisplayHeight);
  }
  try {
    mActivityManager.updateConfiguration(null);
  }
 catch (  RemoteException e) {
  }
synchronized (mWindowMap) {
    readForcedDisplaySizeLocked(getDisplayContent(displayId));
  }
}
