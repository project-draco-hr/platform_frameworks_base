{
  WindowList windows=getDefaultWindowListLocked();
  final int N=windows.size();
  WindowState w=null;
  int i=N;
  while (i > 0) {
    i--;
    w=windows.get(i);
    if (DEBUG_INPUT_METHOD && willMove)     Slog.i(TAG,"Checking window @" + i + " "+ w+ " fl=0x"+ Integer.toHexString(w.mAttrs.flags));
    if (canBeImeTarget(w)) {
      if (!willMove && w.mAttrs.type == TYPE_APPLICATION_STARTING && i > 0) {
        WindowState wb=windows.get(i - 1);
        if (wb.mAppToken == w.mAppToken && canBeImeTarget(wb)) {
          i--;
          w=wb;
        }
      }
      break;
    }
  }
  if (DEBUG_INPUT_METHOD && willMove)   Slog.v(TAG,"Proposed new IME target: " + w);
  final WindowState curTarget=mInputMethodTarget;
  if (curTarget != null && w != null && curTarget.isDisplayedLw() && curTarget.isClosing() && (curTarget.mWinAnimator.mAnimLayer > w.mWinAnimator.mAnimLayer)) {
    if (DEBUG_INPUT_METHOD)     Slog.v(TAG,"Current target higher, not changing");
    return windows.indexOf(curTarget) + 1;
  }
  if (DEBUG_INPUT_METHOD)   Slog.v(TAG,"Desired input method target=" + w + " willMove="+ willMove);
  if (willMove && w != null) {
    AppWindowToken token=curTarget == null ? null : curTarget.mAppToken;
    if (token != null) {
      WindowState highestTarget=null;
      int highestPos=0;
      if (token.mAppAnimator.animating || token.mAppAnimator.animation != null) {
        WindowList curWindows=curTarget.getWindowList();
        int pos=curWindows.indexOf(curTarget);
        while (pos >= 0) {
          WindowState win=curWindows.get(pos);
          if (win.mAppToken != token) {
            break;
          }
          if (!win.mRemoved) {
            if (highestTarget == null || win.mWinAnimator.mAnimLayer > highestTarget.mWinAnimator.mAnimLayer) {
              highestTarget=win;
              highestPos=pos;
            }
          }
          pos--;
        }
      }
      if (highestTarget != null) {
        if (DEBUG_INPUT_METHOD)         Slog.v(TAG,"mNextAppTransition=" + mNextAppTransition + " "+ highestTarget+ " animating="+ highestTarget.mWinAnimator.isAnimating()+ " layer="+ highestTarget.mWinAnimator.mAnimLayer+ " new layer="+ w.mWinAnimator.mAnimLayer);
        if (mNextAppTransition != WindowManagerPolicy.TRANSIT_UNSET) {
          mInputMethodTargetWaitingAnim=true;
          mInputMethodTarget=highestTarget;
          return highestPos + 1;
        }
 else         if (highestTarget.mWinAnimator.isAnimating() && highestTarget.mWinAnimator.mAnimLayer > w.mWinAnimator.mAnimLayer) {
          mInputMethodTargetWaitingAnim=true;
          mInputMethodTarget=highestTarget;
          return highestPos + 1;
        }
      }
    }
  }
  if (w != null) {
    if (willMove) {
      if (DEBUG_INPUT_METHOD)       Slog.w(TAG,"Moving IM target from " + curTarget + " to "+ w+ (HIDE_STACK_CRAWLS ? "" : " Callers=" + Debug.getCallers(4)));
      mInputMethodTarget=w;
      mInputMethodTargetWaitingAnim=false;
      if (w.mAppToken != null) {
        setInputMethodAnimLayerAdjustment(w.mAppToken.mAppAnimator.animLayerAdjustment);
      }
 else {
        setInputMethodAnimLayerAdjustment(0);
      }
    }
    return i + 1;
  }
  if (willMove) {
    if (DEBUG_INPUT_METHOD)     Slog.w(TAG,"Moving IM target from " + curTarget + " to null."+ (HIDE_STACK_CRAWLS ? "" : " Callers=" + Debug.getCallers(4)));
    mInputMethodTarget=null;
    setInputMethodAnimLayerAdjustment(0);
  }
  return -1;
}
