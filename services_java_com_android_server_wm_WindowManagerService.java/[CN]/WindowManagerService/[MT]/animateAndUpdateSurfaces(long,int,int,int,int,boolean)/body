{
  Surface.openTransaction();
  try {
    mPendingLayoutChanges=performAnimationsLocked(currentTime,dw,dh,innerDw,innerDh);
    updateWindowsAppsAndRotationAnimationsLocked(currentTime,innerDw,innerDh);
    if (mScreenRotationAnimation != null) {
      mScreenRotationAnimation.updateSurfaces();
    }
    final int N=mWindows.size();
    for (int i=N - 1; i >= 0; i--) {
      WindowState w=mWindows.get(i);
      prepareSurfaceLocked(w,recoveringMemory);
    }
    if (mDimAnimator != null && mDimAnimator.mDimShown) {
      mInnerFields.mAnimating|=mDimAnimator.updateSurface(mInnerFields.mDimming,currentTime,mDisplayFrozen || !mDisplayEnabled || !mPolicy.isScreenOnFully());
    }
    if (!mInnerFields.mBlurring && mBlurShown) {
      if (SHOW_TRANSACTIONS)       Slog.i(TAG,"  BLUR " + mBlurSurface + ": HIDE");
      try {
        mBlurSurface.hide();
      }
 catch (      IllegalArgumentException e) {
        Slog.w(TAG,"Illegal argument exception hiding blur surface");
      }
      mBlurShown=false;
    }
    if (mBlackFrame != null) {
      if (mScreenRotationAnimation != null) {
        mBlackFrame.setMatrix(mScreenRotationAnimation.getEnterTransformation().getMatrix());
      }
 else {
        mBlackFrame.clearMatrix();
      }
    }
  }
 catch (  RuntimeException e) {
    Log.wtf(TAG,"Unhandled exception in Window Manager",e);
  }
 finally {
    Surface.closeTransaction();
  }
}
