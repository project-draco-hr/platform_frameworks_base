{
  final int N=tokens.size();
  int i;
  for (i=0; i < N; i++) {
    WindowToken token=mTokenMap.get(tokens.get(i));
    if (token != null) {
      tmpRemoveAppWindowsLocked(token);
    }
  }
  final int numDisplays=mDisplayContents.size();
  for (int displayNdx=0; displayNdx < numDisplays; ++displayNdx) {
    final DisplayContent displayContent=mDisplayContents.valueAt(displayNdx);
    final WindowList windows=displayContent.getWindowList();
    int pos=findWindowOffsetLocked(windows,tokenPos);
    for (i=0; i < N; i++) {
      WindowToken token=mTokenMap.get(tokens.get(i));
      if (token != null) {
        final int newPos=reAddAppWindowsLocked(displayContent,pos,token);
        if (newPos != pos) {
          displayContent.layoutNeeded=true;
        }
        pos=newPos;
      }
    }
    if (!updateFocusedWindowLocked(UPDATE_FOCUS_WILL_PLACE_SURFACES,false)) {
      assignLayersLocked(windows);
    }
  }
  mInputMonitor.setUpdateInputWindowsNeededLw();
  performLayoutAndPlaceSurfacesLocked();
  mInputMonitor.updateInputWindowsLw(false);
}
