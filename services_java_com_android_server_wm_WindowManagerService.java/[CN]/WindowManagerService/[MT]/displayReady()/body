{
synchronized (mWindowMap) {
    if (mDisplay != null) {
      throw new IllegalStateException("Display already initialized");
    }
    WindowManager wm=(WindowManager)mContext.getSystemService(Context.WINDOW_SERVICE);
    mDisplay=wm.getDefaultDisplay();
    mIsTouchDevice=mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_TOUCHSCREEN);
synchronized (mDisplaySizeLock) {
      mDisplayManager.getDisplayInfo(Display.DEFAULT_DISPLAY,mDisplayInfo);
      mInitialDisplayWidth=mDisplayInfo.logicalWidth;
      mInitialDisplayHeight=mDisplayInfo.logicalHeight;
      mBaseDisplayWidth=mInitialDisplayWidth;
      mBaseDisplayHeight=mInitialDisplayHeight;
      mAnimator.setDisplayDimensions(mDisplayInfo.logicalWidth,mDisplayInfo.logicalHeight,mDisplayInfo.appWidth,mDisplayInfo.appHeight);
    }
    DisplayDeviceInfo info=new DisplayDeviceInfo();
    mDisplayManager.getDefaultExternalDisplayDeviceInfo(info);
    mInputManager.setDisplaySize(Display.DEFAULT_DISPLAY,mInitialDisplayWidth,mInitialDisplayHeight,info.width,info.height);
    mInputManager.setDisplayOrientation(Display.DEFAULT_DISPLAY,mDisplay.getRotation(),Surface.ROTATION_0);
    mPolicy.setInitialDisplaySize(mDisplay,mInitialDisplayWidth,mInitialDisplayHeight);
  }
  try {
    mActivityManager.updateConfiguration(null);
  }
 catch (  RemoteException e) {
  }
synchronized (mWindowMap) {
    readForcedDisplaySizeLocked();
  }
}
