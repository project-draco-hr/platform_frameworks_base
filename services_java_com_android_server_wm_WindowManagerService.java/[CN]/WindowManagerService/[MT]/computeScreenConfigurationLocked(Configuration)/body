{
  if (mDisplay == null) {
    return false;
  }
  final boolean rotated=(mRotation == Surface.ROTATION_90 || mRotation == Surface.ROTATION_270);
  final int realdw=rotated ? mBaseDisplayHeight : mBaseDisplayWidth;
  final int realdh=rotated ? mBaseDisplayWidth : mBaseDisplayHeight;
synchronized (mDisplaySizeLock) {
    if (mAltOrientation) {
      mCurDisplayWidth=realdw;
      mCurDisplayHeight=realdh;
      if (realdw > realdh) {
        int maxw=(int)(realdh / 1.3f);
        if (maxw < realdw) {
          mCurDisplayWidth=maxw;
        }
      }
 else {
        int maxh=(int)(realdw / 1.3f);
        if (maxh < realdh) {
          mCurDisplayHeight=maxh;
        }
      }
    }
 else {
      mCurDisplayWidth=realdw;
      mCurDisplayHeight=realdh;
    }
  }
  final int dw=mCurDisplayWidth;
  final int dh=mCurDisplayHeight;
  if (config != null) {
    mInputManager.getInputConfiguration(config);
    int orientation=Configuration.ORIENTATION_SQUARE;
    if (dw < dh) {
      orientation=Configuration.ORIENTATION_PORTRAIT;
    }
 else     if (dw > dh) {
      orientation=Configuration.ORIENTATION_LANDSCAPE;
    }
    config.orientation=orientation;
  }
  mDisplay.getMetricsWithSize(mRealDisplayMetrics,mCurDisplayWidth,mCurDisplayHeight);
  final DisplayMetrics dm=mDisplayMetrics;
  final int appWidth=mPolicy.getNonDecorDisplayWidth(dw,dh,mRotation);
  final int appHeight=mPolicy.getNonDecorDisplayHeight(dw,dh,mRotation);
synchronized (mDisplaySizeLock) {
    mAppDisplayWidth=appWidth;
    mAppDisplayHeight=appHeight;
    mAnimator.setDisplayDimensions(mCurDisplayWidth,mCurDisplayHeight,mAppDisplayWidth,mAppDisplayHeight);
  }
  if (false) {
    Slog.i(TAG,"Set app display size: " + mAppDisplayWidth + " x "+ mAppDisplayHeight);
  }
  mDisplay.getMetricsWithSize(dm,mAppDisplayWidth,mAppDisplayHeight);
  mCompatibleScreenScale=CompatibilityInfo.computeCompatibleScaling(dm,mCompatDisplayMetrics);
  if (config != null) {
    config.screenWidthDp=(int)(mPolicy.getConfigDisplayWidth(dw,dh,mRotation) / dm.density);
    config.screenHeightDp=(int)(mPolicy.getConfigDisplayHeight(dw,dh,mRotation) / dm.density);
    computeSizeRangesAndScreenLayout(rotated,dw,dh,dm.density,config);
    config.compatScreenWidthDp=(int)(config.screenWidthDp / mCompatibleScreenScale);
    config.compatScreenHeightDp=(int)(config.screenHeightDp / mCompatibleScreenScale);
    config.compatSmallestScreenWidthDp=computeCompatSmallestWidth(rotated,dm,dw,dh);
    boolean hardKeyboardAvailable=config.keyboard != Configuration.KEYBOARD_NOKEYS;
    if (hardKeyboardAvailable != mHardKeyboardAvailable) {
      mHardKeyboardAvailable=hardKeyboardAvailable;
      mHardKeyboardEnabled=hardKeyboardAvailable;
      mH.removeMessages(H.REPORT_HARD_KEYBOARD_STATUS_CHANGE);
      mH.sendEmptyMessage(H.REPORT_HARD_KEYBOARD_STATUS_CHANGE);
    }
    if (!mHardKeyboardEnabled) {
      config.keyboard=Configuration.KEYBOARD_NOKEYS;
    }
    config.keyboardHidden=Configuration.KEYBOARDHIDDEN_NO;
    config.hardKeyboardHidden=Configuration.HARDKEYBOARDHIDDEN_NO;
    config.navigationHidden=Configuration.NAVIGATIONHIDDEN_NO;
    mPolicy.adjustConfigurationLw(config);
  }
  return true;
}
