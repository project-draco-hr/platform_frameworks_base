{
  if (!checkCallingPermission(android.Manifest.permission.READ_FRAME_BUFFER,"screenshotApplications()")) {
    throw new SecurityException("Requires READ_FRAME_BUFFER permission");
  }
  Bitmap rawss;
  int maxLayer=0;
  final Rect frame=new Rect();
  float scale;
  int dw, dh;
  int rot;
synchronized (mWindowMap) {
    long ident=Binder.clearCallingIdentity();
    dw=mAppDisplayWidth;
    dh=mAppDisplayHeight;
    int aboveAppLayer=mPolicy.windowTypeToLayerLw(WindowManager.LayoutParams.TYPE_APPLICATION) * TYPE_LAYER_MULTIPLIER + TYPE_LAYER_OFFSET;
    aboveAppLayer+=TYPE_LAYER_MULTIPLIER;
    boolean isImeTarget=mInputMethodTarget != null && mInputMethodTarget.mAppToken != null && mInputMethodTarget.mAppToken.appToken != null && mInputMethodTarget.mAppToken.appToken.asBinder() == appToken;
    boolean including=false;
    for (int i=mWindows.size() - 1; i >= 0; i--) {
      WindowState ws=mWindows.get(i);
      if (ws.mSurface == null) {
        continue;
      }
      if (ws.mLayer >= aboveAppLayer) {
        continue;
      }
      if (!including && appToken != null) {
        if (!ws.mIsImWindow || !isImeTarget) {
          if (ws.mAppToken == null || ws.mAppToken.token != appToken) {
            continue;
          }
        }
      }
      including=!ws.mIsImWindow && !ws.isFullscreen(dw,dh);
      if (maxLayer < ws.mAnimLayer) {
        maxLayer=ws.mAnimLayer;
      }
      if (!ws.mIsWallpaper) {
        final Rect wf=ws.mFrame;
        final Rect cr=ws.mContentInsets;
        int left=wf.left + cr.left;
        int top=wf.top + cr.top;
        int right=wf.right - cr.right;
        int bottom=wf.bottom - cr.bottom;
        frame.union(left,top,right,bottom);
      }
    }
    Binder.restoreCallingIdentity(ident);
    frame.intersect(0,0,dw,dh);
    if (frame.isEmpty() || maxLayer == 0) {
      return null;
    }
    rot=mDisplay.getRotation();
    int fw=frame.width();
    int fh=frame.height();
    if (dw <= dh) {
      scale=width / (float)fw;
    }
 else {
      scale=height / (float)fh;
    }
    dw=(int)(dw * scale);
    dh=(int)(dh * scale);
    if (rot == Surface.ROTATION_90 || rot == Surface.ROTATION_270) {
      int tmp=dw;
      dw=dh;
      dh=tmp;
      rot=(rot == Surface.ROTATION_90) ? Surface.ROTATION_270 : Surface.ROTATION_90;
    }
    rawss=Surface.screenshot(dw,dh,0,maxLayer);
  }
  if (rawss == null) {
    Log.w(TAG,"Failure taking screenshot for (" + dw + "x"+ dh+ ") to layer "+ maxLayer);
    return null;
  }
  Bitmap bm=Bitmap.createBitmap(width,height,rawss.getConfig());
  Matrix matrix=new Matrix();
  ScreenRotationAnimation.createRotationMatrix(rot,dw,dh,matrix);
  matrix.postTranslate(-(int)(frame.left * scale),-(int)(frame.top * scale));
  Canvas canvas=new Canvas(bm);
  canvas.drawBitmap(rawss,matrix,null);
  canvas.setBitmap(null);
  rawss.recycle();
  return bm;
}
