{
  boolean handled=false;
  try {
    if (event instanceof MotionEvent && (event.getSource() & InputDevice.SOURCE_CLASS_POINTER) != 0 && mDragState != null) {
      final MotionEvent motionEvent=(MotionEvent)event;
      boolean endDrag=false;
      final float newX=motionEvent.getRawX();
      final float newY=motionEvent.getRawY();
switch (motionEvent.getAction()) {
case MotionEvent.ACTION_DOWN:
{
          if (DEBUG_DRAG) {
            Slog.w(TAG,"Unexpected ACTION_DOWN in drag layer");
          }
        }
      break;
case MotionEvent.ACTION_MOVE:
{
synchronized (mWindowMap) {
        mDragState.notifyMoveLw(newX,newY);
      }
    }
  break;
case MotionEvent.ACTION_UP:
{
  if (DEBUG_DRAG)   Slog.d(TAG,"Got UP on move channel; dropping at " + newX + ","+ newY);
synchronized (mWindowMap) {
    endDrag=mDragState.notifyDropLw(newX,newY);
  }
}
break;
case MotionEvent.ACTION_CANCEL:
{
if (DEBUG_DRAG) Slog.d(TAG,"Drag cancelled!");
endDrag=true;
}
break;
}
if (endDrag) {
if (DEBUG_DRAG) Slog.d(TAG,"Drag ended; tearing down state");
synchronized (mWindowMap) {
mDragState.endDragLw();
}
}
handled=true;
}
}
 catch (Exception e) {
Slog.e(TAG,"Exception caught by drag handleMotion",e);
}
 finally {
finishInputEvent(event,handled);
}
}
