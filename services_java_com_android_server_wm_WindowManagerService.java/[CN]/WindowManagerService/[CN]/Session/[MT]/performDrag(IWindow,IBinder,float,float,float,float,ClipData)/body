{
  if (DEBUG_DRAG) {
    Slog.d(TAG,"perform drag: win=" + window + " data="+ data);
  }
synchronized (mWindowMap) {
    if (mDragState == null) {
      Slog.w(TAG,"No drag prepared");
      throw new IllegalStateException("performDrag() without prepareDrag()");
    }
    if (dragToken != mDragState.mToken) {
      Slog.w(TAG,"Performing mismatched drag");
      throw new IllegalStateException("performDrag() does not match prepareDrag()");
    }
    WindowState callingWin=windowForClientLocked(null,window,false);
    if (callingWin == null) {
      Slog.w(TAG,"Bad requesting window " + window);
      return false;
    }
    mH.removeMessages(H.DRAG_START_TIMEOUT,window.asBinder());
    mDragState.register();
    mInputMonitor.updateInputWindowsLw(true);
    if (!mInputManager.transferTouchFocus(callingWin.mInputChannel,mDragState.mServerChannel)) {
      Slog.e(TAG,"Unable to transfer touch focus");
      mDragState.unregister();
      mDragState=null;
      mInputMonitor.updateInputWindowsLw(true);
      return false;
    }
    mDragState.mData=data;
    mDragState.mCurrentX=touchX;
    mDragState.mCurrentY=touchY;
    mDragState.broadcastDragStartedLw(touchX,touchY);
    mDragState.mThumbOffsetX=thumbCenterX;
    mDragState.mThumbOffsetY=thumbCenterY;
    final Surface surface=mDragState.mSurface;
    if (SHOW_TRANSACTIONS)     Slog.i(TAG,">>> OPEN TRANSACTION performDrag");
    Surface.openTransaction();
    try {
      surface.setPosition((int)(touchX - thumbCenterX),(int)(touchY - thumbCenterY));
      surface.setAlpha(.7071f);
      surface.setLayer(mDragState.getDragLayerLw());
      surface.show();
    }
  finally {
      Surface.closeTransaction();
      if (SHOW_TRANSACTIONS)       Slog.i(TAG,"<<< CLOSE TRANSACTION performDrag");
    }
  }
  return true;
}
