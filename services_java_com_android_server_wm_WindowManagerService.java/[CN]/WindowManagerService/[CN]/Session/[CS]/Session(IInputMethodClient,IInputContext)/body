{
  mClient=client;
  mInputContext=inputContext;
  mUid=Binder.getCallingUid();
  mPid=Binder.getCallingPid();
  StringBuilder sb=new StringBuilder();
  sb.append("Session{");
  sb.append(Integer.toHexString(System.identityHashCode(this)));
  sb.append(" uid ");
  sb.append(mUid);
  sb.append("}");
  mStringName=sb.toString();
synchronized (mWindowMap) {
    if (mInputMethodManager == null && mHaveInputMethods) {
      IBinder b=ServiceManager.getService(Context.INPUT_METHOD_SERVICE);
      mInputMethodManager=IInputMethodManager.Stub.asInterface(b);
    }
  }
  long ident=Binder.clearCallingIdentity();
  try {
    if (mInputMethodManager != null) {
      mInputMethodManager.addClient(client,inputContext,mUid,mPid);
    }
 else {
      client.setUsingInputMethod(false);
    }
    client.asBinder().linkToDeath(this,0);
  }
 catch (  RemoteException e) {
    try {
      if (mInputMethodManager != null) {
        mInputMethodManager.removeClient(client);
      }
    }
 catch (    RemoteException ee) {
    }
  }
 finally {
    Binder.restoreCallingIdentity(ident);
  }
}
