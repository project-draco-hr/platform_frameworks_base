{
  mContext=context;
  mHaveInputMethods=haveInputMethods;
  mAllowBootMessages=showBootMsgs;
  mOnlyCore=onlyCore;
  mLimitedAlphaCompositing=context.getResources().getBoolean(com.android.internal.R.bool.config_sf_limitedAlpha);
  mInputManager=inputManager;
  mDisplayManagerService=displayManager;
  mDisplaySettings=new DisplaySettings(context);
  mDisplaySettings.readSettingsLocked();
  mPointerEventDispatcher=new PointerEventDispatcher(mInputManager.monitorInput(TAG));
  mFxSession=new SurfaceSession();
  mDisplayManager=(DisplayManager)context.getSystemService(Context.DISPLAY_SERVICE);
  mDisplayManager.registerDisplayListener(this,null);
  Display[] displays=mDisplayManager.getDisplays();
  for (  Display display : displays) {
    createDisplayContentLocked(display);
  }
  mKeyguardDisableHandler=new KeyguardDisableHandler(mContext,mPolicy);
  mPowerManager=pm;
  mPowerManager.setPolicy(mPolicy);
  PowerManager pmc=(PowerManager)context.getSystemService(Context.POWER_SERVICE);
  mScreenFrozenLock=pmc.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,"SCREEN_FROZEN");
  mScreenFrozenLock.setReferenceCounted(false);
  mAppTransition=new AppTransition(context,mH);
  mActivityManager=ActivityManagerNative.getDefault();
  mBatteryStats=BatteryStatsService.getService();
  mAppOps=(AppOpsManager)context.getSystemService(Context.APP_OPS_SERVICE);
  mAppOps.startWatchingMode(AppOpsManager.OP_SYSTEM_ALERT_WINDOW,null,new AppOpsManager.OnOpChangedInternalListener(){
    @Override public void onOpChanged(    int op,    String packageName){
      updateAppOpsState();
    }
  }
);
  mWindowAnimationScale=Settings.Global.getFloat(context.getContentResolver(),Settings.Global.WINDOW_ANIMATION_SCALE,mWindowAnimationScale);
  mTransitionAnimationScale=Settings.Global.getFloat(context.getContentResolver(),Settings.Global.TRANSITION_ANIMATION_SCALE,mTransitionAnimationScale);
  setAnimatorDurationScale(Settings.Global.getFloat(context.getContentResolver(),Settings.Global.ANIMATOR_DURATION_SCALE,mAnimatorDurationScale));
  IntentFilter filter=new IntentFilter();
  filter.addAction(DevicePolicyManager.ACTION_DEVICE_POLICY_MANAGER_STATE_CHANGED);
  mContext.registerReceiver(mBroadcastReceiver,filter);
  mHoldingScreenWakeLock=pmc.newWakeLock(PowerManager.SCREEN_BRIGHT_WAKE_LOCK | PowerManager.ON_AFTER_RELEASE,TAG);
  mHoldingScreenWakeLock.setReferenceCounted(false);
  mAnimator=new WindowAnimator(this);
  initPolicy(UiThread.getHandler());
  Watchdog.getInstance().addMonitor(this);
  SurfaceControl.openTransaction();
  try {
    createWatermarkInTransaction();
    mFocusedStackFrame=new FocusedStackFrame(getDefaultDisplayContentLocked().getDisplay(),mFxSession);
  }
  finally {
    SurfaceControl.closeTransaction();
  }
}
