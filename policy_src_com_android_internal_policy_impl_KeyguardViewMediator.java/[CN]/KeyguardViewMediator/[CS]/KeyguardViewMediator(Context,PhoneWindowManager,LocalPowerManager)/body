{
  mContext=context;
  mRealPowerManager=powerManager;
  mPM=(PowerManager)context.getSystemService(Context.POWER_SERVICE);
  mWakeLock=mPM.newWakeLock(PowerManager.FULL_WAKE_LOCK | PowerManager.ACQUIRE_CAUSES_WAKEUP,"keyguard");
  mWakeLock.setReferenceCounted(false);
  mShowKeyguardWakeLock=mPM.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,"show keyguard");
  mShowKeyguardWakeLock.setReferenceCounted(false);
  mWakeAndHandOff=mPM.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,"keyguardWakeAndHandOff");
  mWakeAndHandOff.setReferenceCounted(false);
  IntentFilter filter=new IntentFilter();
  filter.addAction(DELAYED_KEYGUARD_ACTION);
  filter.addAction(TelephonyManager.ACTION_PHONE_STATE_CHANGED);
  context.registerReceiver(mBroadCastReceiver,filter);
  mAlarmManager=(AlarmManager)context.getSystemService(Context.ALARM_SERVICE);
  mCallback=callback;
  mUpdateMonitor=new KeyguardUpdateMonitor(context);
  mUpdateMonitor.registerInfoCallback(this);
  mUpdateMonitor.registerSimStateCallback(this);
  mLockPatternUtils=new LockPatternUtils(mContext);
  mKeyguardViewProperties=new LockPatternKeyguardViewProperties(mLockPatternUtils,mUpdateMonitor);
  mKeyguardViewManager=new KeyguardViewManager(context,WindowManagerImpl.getDefault(),this,mKeyguardViewProperties,mUpdateMonitor);
  mUserPresentIntent=new Intent(Intent.ACTION_USER_PRESENT);
  mUserPresentIntent.addFlags(Intent.FLAG_RECEIVER_REPLACE_PENDING | Intent.FLAG_RECEIVER_REGISTERED_ONLY_BEFORE_BOOT);
  final ContentResolver cr=mContext.getContentResolver();
  mShowLockIcon=(Settings.System.getInt(cr,"show_status_bar_lock",0) == 1);
}
