{
  int aM=-1, aN=-1, bM=-1, bN=-1, cM=-1, cN=-1;
  if ((A != null && !A.getType().getElement().isCompatible(e)) || (B != null && !B.getType().getElement().isCompatible(e)) || (C != null && !C.getType().getElement().isCompatible(e))) {
    throw new RSRuntimeException("Called BLAS with wrong Element type");
  }
  if (C == null) {
    throw new RSRuntimeException("Allocation C cannot be null");
  }
  cM=C.getType().getY();
  cN=C.getType().getX();
  if (Side == RIGHT) {
    if ((A == null && B != null) || (A != null && B == null)) {
      throw new RSRuntimeException("Provided Matrix A without Matrix B, or vice versa");
    }
    if (B != null) {
      bM=A.getType().getY();
      bN=A.getType().getX();
    }
    if (A != null) {
      aM=B.getType().getY();
      aN=B.getType().getX();
    }
  }
 else {
    if (A != null) {
      if (TransA == TRANSPOSE || TransA == CONJ_TRANSPOSE) {
        aN=A.getType().getY();
        aM=A.getType().getX();
      }
 else {
        aM=A.getType().getY();
        aN=A.getType().getX();
      }
    }
    if (B != null) {
      if (TransB == TRANSPOSE || TransB == CONJ_TRANSPOSE) {
        bN=B.getType().getY();
        bM=B.getType().getX();
      }
 else {
        bM=B.getType().getY();
        bN=B.getType().getX();
      }
    }
  }
  if (A != null && B != null && C != null) {
    if (aN != bM || aM != cM || bN != cN) {
      throw new RSRuntimeException("Called BLAS with invalid dimensions");
    }
  }
 else   if (A != null && C != null) {
    if (cM != cN) {
      throw new RSRuntimeException("Matrix C is not symmetric");
    }
    if (TransA != NO_TRANSPOSE) {
      if (aN != cM) {
        throw new RSRuntimeException("Called BLAS with invalid dimensions");
      }
    }
 else {
      if (aM != cM) {
        throw new RSRuntimeException("Called BLAS with invalid dimensions");
      }
    }
  }
 else   if (A != null && B != null) {
    if (aN != bM) {
      throw new RSRuntimeException("Called BLAS with invalid dimensions");
    }
  }
}
