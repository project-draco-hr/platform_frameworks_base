{
  android.os.Parcel data=android.os.Parcel.obtain();
  android.os.Parcel reply=android.os.Parcel.obtain();
  int ret_val=ERROR;
  try {
    data.writeInterfaceToken(mInterfaceDesc);
    if (null == addr) {
      data.writeInt(0);
    }
 else {
      data.writeInt(1);
      final InetAddress a=addr.getAddress();
      final byte[] b=a.getAddress();
      final int p=addr.getPort();
      if (a instanceof Inet4Address) {
        int v4addr=(((int)b[0] & 0xFF) << 24) | (((int)b[1] & 0xFF) << 16) | (((int)b[2] & 0xFF) << 8)| ((int)b[3] & 0xFF);
        data.writeInt(AF_INET);
        data.writeInt(v4addr);
        data.writeInt(p);
      }
 else       if (a instanceof Inet6Address) {
        int i;
        Inet6Address v6=(Inet6Address)a;
        data.writeInt(AF_INET6);
        for (i=0; i < 4; ++i) {
          int aword=(((int)b[(i * 4) + 0] & 0xFF) << 24) | (((int)b[(i * 4) + 1] & 0xFF) << 16) | (((int)b[(i * 4) + 2] & 0xFF) << 8)| ((int)b[(i * 4) + 3] & 0xFF);
          data.writeInt(aword);
        }
        data.writeInt(p);
        data.writeInt(0);
        data.writeInt(v6.getScopeId());
      }
 else {
        return ERROR_BAD_VALUE;
      }
    }
    mRemote.transact(method_code,data,reply,0);
    ret_val=reply.readInt();
  }
 catch (  RemoteException e) {
    ret_val=ERROR_DEAD_OBJECT;
  }
 finally {
    reply.recycle();
    data.recycle();
  }
  return ret_val;
}
