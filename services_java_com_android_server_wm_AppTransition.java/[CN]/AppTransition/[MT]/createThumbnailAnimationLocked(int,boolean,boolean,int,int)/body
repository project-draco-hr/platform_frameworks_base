{
  Animation a;
  final int thumbWidthI=mNextAppTransitionThumbnail.getWidth();
  final float thumbWidth=thumbWidthI > 0 ? thumbWidthI : 1;
  final int thumbHeightI=mNextAppTransitionThumbnail.getHeight();
  final float thumbHeight=thumbHeightI > 0 ? thumbHeightI : 1;
  int duration;
switch (transit) {
case WindowManagerPolicy.TRANSIT_ACTIVITY_OPEN:
case WindowManagerPolicy.TRANSIT_ACTIVITY_CLOSE:
    duration=mConfigShortAnimTime;
  break;
default :
duration=250;
break;
}
if (thumb) {
if (mNextAppTransitionScaleUp) {
float scaleW=appWidth / thumbWidth;
float scaleH=appHeight / thumbHeight;
Animation scale=new ScaleAnimation(1,scaleW,1,scaleH,computePivot(mNextAppTransitionStartX,1 / scaleW),computePivot(mNextAppTransitionStartY,1 / scaleH));
AnimationSet set=new AnimationSet(true);
Animation alpha=new AlphaAnimation(1,0);
scale.setDuration(duration);
scale.setInterpolator(new DecelerateInterpolator(THUMBNAIL_ANIMATION_DECELERATE_FACTOR));
set.addAnimation(scale);
alpha.setDuration(duration);
set.addAnimation(alpha);
set.setFillBefore(true);
a=set;
}
 else {
float scaleW=appWidth / thumbWidth;
float scaleH=appHeight / thumbHeight;
Animation scale=new ScaleAnimation(scaleW,1,scaleH,1,computePivot(mNextAppTransitionStartX,1 / scaleW),computePivot(mNextAppTransitionStartY,1 / scaleH));
AnimationSet set=new AnimationSet(true);
Animation alpha=new AlphaAnimation(1,1);
scale.setDuration(duration);
scale.setInterpolator(new DecelerateInterpolator(THUMBNAIL_ANIMATION_DECELERATE_FACTOR));
set.addAnimation(scale);
alpha.setDuration(duration);
set.addAnimation(alpha);
set.setFillBefore(true);
a=set;
}
}
 else if (enter) {
if (mNextAppTransitionScaleUp) {
float scaleW=thumbWidth / appWidth;
float scaleH=thumbHeight / appHeight;
Animation scale=new ScaleAnimation(scaleW,1,scaleH,1,computePivot(mNextAppTransitionStartX,scaleW),computePivot(mNextAppTransitionStartY,scaleH));
scale.setDuration(duration);
scale.setInterpolator(new DecelerateInterpolator(THUMBNAIL_ANIMATION_DECELERATE_FACTOR));
scale.setFillBefore(true);
a=scale;
}
 else {
a=new AlphaAnimation(1,1);
a.setDuration(duration);
}
}
 else {
if (mNextAppTransitionScaleUp) {
if (transit == WindowManagerPolicy.TRANSIT_WALLPAPER_INTRA_OPEN) {
a=new AlphaAnimation(1,0);
}
 else {
a=new AlphaAnimation(1,1);
}
a.setDuration(duration);
}
 else {
float scaleW=thumbWidth / appWidth;
float scaleH=thumbHeight / appHeight;
Animation scale=new ScaleAnimation(1,scaleW,1,scaleH,computePivot(mNextAppTransitionStartX,scaleW),computePivot(mNextAppTransitionStartY,scaleH));
scale.setDuration(duration);
scale.setInterpolator(new DecelerateInterpolator(THUMBNAIL_ANIMATION_DECELERATE_FACTOR));
scale.setFillBefore(true);
AnimationSet set=new AnimationSet(true);
Animation alpha=new AlphaAnimation(1,0);
set.addAnimation(scale);
alpha.setDuration(duration);
alpha.setInterpolator(new DecelerateInterpolator(THUMBNAIL_ANIMATION_DECELERATE_FACTOR));
set.addAnimation(alpha);
set.setFillBefore(true);
set.setZAdjustment(Animation.ZORDER_TOP);
a=set;
}
}
a.setFillAfter(true);
a.setInterpolator(mInterpolator);
a.initialize(appWidth,appHeight,appWidth,appHeight);
return a;
}
