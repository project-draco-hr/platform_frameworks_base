{
  assertTrue(nearlyEqual(unitXAxis.angleBetween(unitXAxis),0.0f));
  assertTrue(nearlyEqual(unitYAxis.angleBetween(unitYAxis),0.0f));
  assertTrue(nearlyEqual(unitZAxis.angleBetween(unitZAxis),0.0f));
  assertTrue(nearlyEqual(unitXAxis.angleBetween(unitYAxis),90.0f));
  assertTrue(nearlyEqual(unitXAxis.angleBetween(unitZAxis),90.0f));
  assertTrue(nearlyEqual(unitYAxis.angleBetween(unitZAxis),90.0f));
  assertTrue(nearlyEqual(unitXAxis.angleBetween(x1y1),45.0f));
  assertTrue(nearlyEqual(unitYAxis.angleBetween(x1y1),45.0f));
  assertTrue(nearlyEqual(xn1y1.angleBetween(unitXAxis),135.0f));
  assertTrue(nearlyEqual(piOverSixUnitCircle.angleBetween(unitXAxis),30.0f));
  assertTrue(case1A.angleBetween(case1A) < STATIONARY_ANGLE_THRESHOLD);
  assertTrue(case1A.angleBetween(case1B) < STATIONARY_ANGLE_THRESHOLD);
  assertTrue(unitXAxis.angleBetween(unitXAxis) < STATIONARY_ANGLE_THRESHOLD);
  assertTrue(unitYAxis.angleBetween(unitYAxis) < STATIONARY_ANGLE_THRESHOLD);
  assertTrue(unitZAxis.angleBetween(unitZAxis) < STATIONARY_ANGLE_THRESHOLD);
}
