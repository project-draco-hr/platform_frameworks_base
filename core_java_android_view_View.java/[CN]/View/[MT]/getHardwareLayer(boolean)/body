{
  if (mAttachInfo == null || mAttachInfo.mHardwareRenderer == null || !mAttachInfo.mHardwareRenderer.isEnabled()) {
    return null;
  }
  if (!mAttachInfo.mHardwareRenderer.validate())   return null;
  final int width=mRight - mLeft;
  final int height=mBottom - mTop;
  if (width == 0 || height == 0) {
    return null;
  }
  if ((mPrivateFlags & DRAWING_CACHE_VALID) == 0 || mHardwareLayer == null) {
    if (mHardwareLayer == null) {
      mHardwareLayer=mAttachInfo.mHardwareRenderer.createHardwareLayer(width,height,isOpaque());
      mLocalDirtyRect.setEmpty();
    }
 else     if (mHardwareLayer.getWidth() != width || mHardwareLayer.getHeight() != height) {
      mHardwareLayer.resize(width,height);
      mLocalDirtyRect.setEmpty();
    }
    if (!mHardwareLayer.isValid()) {
      return null;
    }
    if (!immediateRefresh) {
      mHardwareLayer.redraw(getDisplayList(),mLocalDirtyRect);
      mLocalDirtyRect.setEmpty();
    }
 else {
      HardwareCanvas currentCanvas=mAttachInfo.mHardwareCanvas;
      final HardwareCanvas canvas=mHardwareLayer.start(currentCanvas);
      if (canvas == null) {
        mHardwareLayer.end(currentCanvas);
        return null;
      }
      mAttachInfo.mHardwareCanvas=canvas;
      try {
        canvas.setViewport(width,height);
        canvas.onPreDraw(mLocalDirtyRect);
        mLocalDirtyRect.setEmpty();
        canvas.drawDisplayList(getDisplayList(),mRight - mLeft,mBottom - mTop,null,DisplayList.FLAG_CLIP_CHILDREN);
      }
  finally {
        canvas.onPostDraw();
        mHardwareLayer.end(currentCanvas);
        mAttachInfo.mHardwareCanvas=currentCanvas;
      }
    }
  }
  return mHardwareLayer;
}
