{
  final int attrsCount=attrs == null ? 0 : attrs.getAttributeCount();
  final int indexCount=t.getIndexCount();
  final String[] attributes=new String[(attrsCount + indexCount) * 2];
  int i=0;
  for (int j=0; j < attrsCount; ++j) {
    attributes[i]=attrs.getAttributeName(j);
    attributes[i + 1]=attrs.getAttributeValue(j);
    i+=2;
  }
  final Resources res=t.getResources();
  final SparseArray<String> attributeMap=getAttributeMap();
  for (int j=0; j < indexCount; ++j) {
    final int index=t.getIndex(j);
    if (!t.hasValueOrEmpty(index)) {
      continue;
    }
    final int resourceId=t.getResourceId(index,0);
    if (resourceId == 0) {
      continue;
    }
    String resourceName=attributeMap.get(resourceId);
    if (resourceName == null) {
      try {
        resourceName=res.getResourceName(resourceId);
      }
 catch (      Resources.NotFoundException e) {
        resourceName="0x" + Integer.toHexString(resourceId);
      }
      attributeMap.put(resourceId,resourceName);
    }
    attributes[i]=resourceName;
    attributes[i + 1]=t.getString(index);
    i+=2;
  }
  final String[] trimmed=new String[i];
  System.arraycopy(attributes,0,trimmed,0,i);
  mAttributes=trimmed;
}
