{
  if (bottom != mBottom) {
    final boolean matrixIsIdentity=hasIdentityMatrix();
    if (matrixIsIdentity) {
      if (mAttachInfo != null) {
        int maxBottom;
        if (bottom < mBottom) {
          maxBottom=mBottom;
        }
 else {
          maxBottom=bottom;
        }
        invalidate(0,0,mRight - mLeft,maxBottom - mTop);
      }
    }
 else {
      invalidate(true);
    }
    int width=mRight - mLeft;
    int oldHeight=mBottom - mTop;
    mBottom=bottom;
    mRenderNode.setBottom(mBottom);
    sizeChange(width,mBottom - mTop,width,oldHeight);
    if (!matrixIsIdentity) {
      mPrivateFlags|=PFLAG_DRAWN;
      invalidate(true);
    }
    mBackgroundSizeChanged=true;
    invalidateParentIfNeeded();
    if ((mPrivateFlags2 & PFLAG2_VIEW_QUICK_REJECTED) == PFLAG2_VIEW_QUICK_REJECTED) {
      invalidateParentIfNeeded();
    }
  }
}
