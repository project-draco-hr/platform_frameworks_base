{
  final int dropoffX=maxOverscrollX / 2;
  final int dropoffLeft=-dropoffX;
  final int dropoffRight=dropoffX + scrollRangeX;
  int newScrollX;
  if ((scrollX < dropoffLeft && deltaX < 0) || (scrollX > dropoffRight && deltaX > 0)) {
    newScrollX=scrollX + deltaX / 2;
  }
 else {
    newScrollX=scrollX + deltaX;
    if (newScrollX > dropoffRight && deltaX > 0) {
      int extra=newScrollX - dropoffRight;
      newScrollX=dropoffRight + extra / 2;
    }
 else     if (newScrollX < dropoffLeft && deltaX < 0) {
      int extra=newScrollX - dropoffLeft;
      newScrollX=dropoffLeft + extra / 2;
    }
  }
  final int dropoffY=maxOverscrollY / 2;
  final int dropoffTop=-dropoffY;
  final int dropoffBottom=dropoffY + scrollRangeY;
  int newScrollY;
  if ((scrollY < dropoffTop && deltaY < 0) || (scrollY > dropoffBottom && deltaY > 0)) {
    newScrollY=scrollY + deltaY / 2;
  }
 else {
    newScrollY=scrollY + deltaY;
    if (newScrollY > dropoffBottom && deltaY > 0) {
      int extra=newScrollY - dropoffBottom;
      newScrollY=dropoffBottom + extra / 2;
    }
 else     if (newScrollY < dropoffTop && deltaY < 0) {
      int extra=newScrollY - dropoffTop;
      newScrollY=dropoffTop + extra / 2;
    }
  }
  final int left=-maxOverscrollX;
  final int right=maxOverscrollX + scrollRangeX;
  final int top=-maxOverscrollY;
  final int bottom=maxOverscrollY + scrollRangeY;
  boolean clampedX=false;
  if (newScrollX > right) {
    newScrollX=right;
    clampedX=true;
  }
 else   if (newScrollX < left) {
    newScrollX=left;
    clampedX=true;
  }
  boolean clampedY=false;
  if (newScrollY > bottom) {
    newScrollY=bottom;
    clampedY=true;
  }
 else   if (newScrollY < top) {
    newScrollY=top;
    clampedY=true;
  }
  if ((clampedX && scrollX != left && scrollX != right) || (clampedY && scrollY != top && scrollY != bottom)) {
    performHapticFeedback(HapticFeedbackConstants.SCROLL_BARRIER);
  }
  onOverscrolled(newScrollX,newScrollY,clampedX,clampedY);
  return clampedX || clampedY;
}
