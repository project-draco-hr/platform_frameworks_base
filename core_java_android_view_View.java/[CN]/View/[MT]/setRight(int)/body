{
  if (right != mRight) {
    final boolean matrixIsIdentity=hasIdentityMatrix();
    if (matrixIsIdentity) {
      if (mAttachInfo != null) {
        int maxRight;
        if (right < mRight) {
          maxRight=mRight;
        }
 else {
          maxRight=right;
        }
        invalidate(0,0,maxRight - mLeft,mBottom - mTop);
      }
    }
 else {
      invalidate(true);
    }
    int oldWidth=mRight - mLeft;
    int height=mBottom - mTop;
    mRight=right;
    mRenderNode.setRight(mRight);
    sizeChange(mRight - mLeft,height,oldWidth,height);
    if (!matrixIsIdentity) {
      mPrivateFlags|=PFLAG_DRAWN;
      invalidate(true);
    }
    mBackgroundSizeChanged=true;
    if (mForegroundInfo != null) {
      mForegroundInfo.mBoundsChanged=true;
    }
    invalidateParentIfNeeded();
    if ((mPrivateFlags2 & PFLAG2_VIEW_QUICK_REJECTED) == PFLAG2_VIEW_QUICK_REJECTED) {
      invalidateParentIfNeeded();
    }
  }
}
