{
  mPrivateFlags2&=~(PFLAG2_TEXT_DIRECTION_RESOLVED | PFLAG2_TEXT_DIRECTION_RESOLVED_MASK);
  if (hasRtlSupport()) {
    final int textDirection=getTextDirection();
switch (textDirection) {
case TEXT_DIRECTION_INHERIT:
      if (canResolveTextDirection()) {
        ViewGroup viewGroup=((ViewGroup)mParent);
        final int parentResolvedDirection=viewGroup.getResolvedTextDirection();
switch (parentResolvedDirection) {
case TEXT_DIRECTION_FIRST_STRONG:
case TEXT_DIRECTION_ANY_RTL:
case TEXT_DIRECTION_LTR:
case TEXT_DIRECTION_RTL:
case TEXT_DIRECTION_LOCALE:
          mPrivateFlags2|=(parentResolvedDirection << PFLAG2_TEXT_DIRECTION_RESOLVED_MASK_SHIFT);
        break;
default :
      mPrivateFlags2|=PFLAG2_TEXT_DIRECTION_RESOLVED_DEFAULT;
  }
}
 else {
  mPrivateFlags2|=PFLAG2_TEXT_DIRECTION_RESOLVED_DEFAULT;
}
break;
case TEXT_DIRECTION_FIRST_STRONG:
case TEXT_DIRECTION_ANY_RTL:
case TEXT_DIRECTION_LTR:
case TEXT_DIRECTION_RTL:
case TEXT_DIRECTION_LOCALE:
mPrivateFlags2|=(textDirection << PFLAG2_TEXT_DIRECTION_RESOLVED_MASK_SHIFT);
break;
default :
mPrivateFlags2|=PFLAG2_TEXT_DIRECTION_RESOLVED_DEFAULT;
}
}
 else {
mPrivateFlags2|=PFLAG2_TEXT_DIRECTION_RESOLVED_DEFAULT;
}
mPrivateFlags2|=PFLAG2_TEXT_DIRECTION_RESOLVED;
}
