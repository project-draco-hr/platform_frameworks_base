{
  if (d == mBGDrawable) {
    return;
  }
  boolean requestLayout=false;
  mBackgroundResource=0;
  if (mBGDrawable != null) {
    mBGDrawable.setCallback(null);
    unscheduleDrawable(mBGDrawable);
  }
  if (d != null) {
    Rect padding=sThreadLocal.get();
    if (padding == null) {
      padding=new Rect();
      sThreadLocal.set(padding);
    }
    if (d.getPadding(padding)) {
switch (d.getResolvedLayoutDirectionSelf()) {
case LAYOUT_DIRECTION_RTL:
        setPadding(padding.right,padding.top,padding.left,padding.bottom);
      break;
case LAYOUT_DIRECTION_LTR:
default :
    setPadding(padding.left,padding.top,padding.right,padding.bottom);
}
}
if (mBGDrawable == null || mBGDrawable.getMinimumHeight() != d.getMinimumHeight() || mBGDrawable.getMinimumWidth() != d.getMinimumWidth()) {
requestLayout=true;
}
d.setCallback(this);
if (d.isStateful()) {
d.setState(getDrawableState());
}
d.setVisible(getVisibility() == VISIBLE,false);
mBGDrawable=d;
if ((mPrivateFlags & SKIP_DRAW) != 0) {
mPrivateFlags&=~SKIP_DRAW;
mPrivateFlags|=ONLY_DRAWS_BACKGROUND;
requestLayout=true;
}
}
 else {
mBGDrawable=null;
if ((mPrivateFlags & ONLY_DRAWS_BACKGROUND) != 0) {
mPrivateFlags&=~ONLY_DRAWS_BACKGROUND;
mPrivateFlags|=SKIP_DRAW;
}
requestLayout=true;
}
computeOpaqueFlags();
if (requestLayout) {
requestLayout();
}
mBackgroundSizeChanged=true;
invalidate(true);
}
