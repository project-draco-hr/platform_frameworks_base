{
  int resolvedLayoutDirection=getResolvedLayoutDirection();
switch (resolvedLayoutDirection) {
case LAYOUT_DIRECTION_RTL:
    if (mUserPaddingStart != UNDEFINED_PADDING) {
      mUserPaddingRight=mUserPaddingStart;
    }
  if (mUserPaddingRight == UNDEFINED_PADDING) {
    mUserPaddingRight=mPaddingRight;
  }
if (mUserPaddingEnd != UNDEFINED_PADDING) {
  mUserPaddingLeft=mUserPaddingEnd;
}
if (mUserPaddingLeft == UNDEFINED_PADDING) {
mUserPaddingLeft=mPaddingLeft;
}
break;
case LAYOUT_DIRECTION_LTR:
default :
if (mUserPaddingStart != UNDEFINED_PADDING) {
mUserPaddingLeft=mUserPaddingStart;
}
if (mUserPaddingLeft == UNDEFINED_PADDING) {
mUserPaddingLeft=mPaddingLeft;
}
if (mUserPaddingEnd != UNDEFINED_PADDING) {
mUserPaddingRight=mUserPaddingEnd;
}
if (mUserPaddingRight == UNDEFINED_PADDING) {
mUserPaddingRight=mPaddingRight;
}
}
mUserPaddingBottom=(mUserPaddingBottom >= 0) ? mUserPaddingBottom : mPaddingBottom;
internalSetPadding(mUserPaddingLeft,mPaddingTop,mUserPaddingRight,mUserPaddingBottom);
onPaddingChanged(resolvedLayoutDirection);
mPrivateFlags2|=PADDING_RESOLVED;
}
