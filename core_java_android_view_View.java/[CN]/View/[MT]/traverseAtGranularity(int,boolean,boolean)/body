{
  CharSequence text=getIterableTextForAccessibility();
  if (text == null || text.length() == 0) {
    return false;
  }
  TextSegmentIterator iterator=getIteratorForGranularity(granularity);
  if (iterator == null) {
    return false;
  }
  int current=getAccessibilitySelectionEnd();
  if (current == ACCESSIBILITY_CURSOR_POSITION_UNDEFINED) {
    current=forward ? 0 : text.length();
  }
  final int[] range=forward ? iterator.following(current) : iterator.preceding(current);
  if (range == null) {
    return false;
  }
  final int segmentStart=range[0];
  final int segmentEnd=range[1];
  int selectionStart;
  int selectionEnd;
  if (extendSelection && isAccessibilitySelectionExtendable()) {
    selectionStart=getAccessibilitySelectionStart();
    if (selectionStart == ACCESSIBILITY_CURSOR_POSITION_UNDEFINED) {
      selectionStart=forward ? segmentStart : segmentEnd;
    }
    selectionEnd=forward ? segmentEnd : segmentStart;
  }
 else {
    selectionStart=selectionEnd=forward ? segmentEnd : segmentStart;
  }
  setAccessibilitySelection(selectionStart,selectionEnd);
  final int action=forward ? AccessibilityNodeInfo.ACTION_NEXT_AT_MOVEMENT_GRANULARITY : AccessibilityNodeInfo.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
  sendViewTextTraversedAtGranularityEvent(action,granularity,segmentStart,segmentEnd);
  return true;
}
