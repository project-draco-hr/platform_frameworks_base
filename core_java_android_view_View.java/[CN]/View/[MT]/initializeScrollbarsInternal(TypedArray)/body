{
  initScrollCache();
  final ScrollabilityCache scrollabilityCache=mScrollCache;
  if (scrollabilityCache.scrollBar == null) {
    scrollabilityCache.scrollBar=new ScrollBarDrawable();
    scrollabilityCache.scrollBar.setState(getDrawableState());
    scrollabilityCache.scrollBar.setCallback(this);
  }
  final boolean fadeScrollbars=a.getBoolean(R.styleable.View_fadeScrollbars,true);
  if (!fadeScrollbars) {
    scrollabilityCache.state=ScrollabilityCache.ON;
  }
  scrollabilityCache.fadeScrollBars=fadeScrollbars;
  scrollabilityCache.scrollBarFadeDuration=a.getInt(R.styleable.View_scrollbarFadeDuration,ViewConfiguration.getScrollBarFadeDuration());
  scrollabilityCache.scrollBarDefaultDelayBeforeFade=a.getInt(R.styleable.View_scrollbarDefaultDelayBeforeFade,ViewConfiguration.getScrollDefaultDelay());
  scrollabilityCache.scrollBarSize=a.getDimensionPixelSize(com.android.internal.R.styleable.View_scrollbarSize,ViewConfiguration.get(mContext).getScaledScrollBarSize());
  Drawable track=a.getDrawable(R.styleable.View_scrollbarTrackHorizontal);
  scrollabilityCache.scrollBar.setHorizontalTrackDrawable(track);
  Drawable thumb=a.getDrawable(R.styleable.View_scrollbarThumbHorizontal);
  if (thumb != null) {
    scrollabilityCache.scrollBar.setHorizontalThumbDrawable(thumb);
  }
  boolean alwaysDraw=a.getBoolean(R.styleable.View_scrollbarAlwaysDrawHorizontalTrack,false);
  if (alwaysDraw) {
    scrollabilityCache.scrollBar.setAlwaysDrawHorizontalTrack(true);
  }
  track=a.getDrawable(R.styleable.View_scrollbarTrackVertical);
  scrollabilityCache.scrollBar.setVerticalTrackDrawable(track);
  thumb=a.getDrawable(R.styleable.View_scrollbarThumbVertical);
  if (thumb != null) {
    scrollabilityCache.scrollBar.setVerticalThumbDrawable(thumb);
  }
  alwaysDraw=a.getBoolean(R.styleable.View_scrollbarAlwaysDrawVerticalTrack,false);
  if (alwaysDraw) {
    scrollabilityCache.scrollBar.setAlwaysDrawVerticalTrack(true);
  }
  final int layoutDirection=getLayoutDirection();
  if (track != null) {
    track.setLayoutDirection(layoutDirection);
  }
  if (thumb != null) {
    thumb.setLayoutDirection(layoutDirection);
  }
  resolvePadding();
}
