{
  if ((mViewFlags & DUPLICATE_PARENT_STATE) == DUPLICATE_PARENT_STATE && mParent instanceof View) {
    return ((View)mParent).onCreateDrawableState(extraSpace);
  }
  int[] drawableState;
  int privateFlags=mPrivateFlags;
  boolean isPressed=(privateFlags & PRESSED) != 0;
  int viewStateIndex=(isPressed ? 1 : 0);
  boolean isEnabled=(mViewFlags & ENABLED_MASK) == ENABLED;
  viewStateIndex=(viewStateIndex << 1) + (isEnabled ? 1 : 0);
  boolean isFocused=isFocused();
  viewStateIndex=(viewStateIndex << 1) + (isFocused ? 1 : 0);
  boolean isSelected=(privateFlags & SELECTED) != 0;
  viewStateIndex=(viewStateIndex << 1) + (isSelected ? 1 : 0);
  boolean hasWindowFocus=hasWindowFocus();
  viewStateIndex=(viewStateIndex << 1) + (hasWindowFocus ? 1 : 0);
  drawableState=VIEW_STATE_SETS[viewStateIndex];
  if (false) {
    Log.i("View","drawableStateIndex=" + viewStateIndex);
    Log.i("View",toString() + " pressed=" + isPressed+ " en="+ isEnabled+ " fo="+ isFocused+ " sl="+ isSelected+ " wf="+ hasWindowFocus+ ": "+ Arrays.toString(drawableState));
  }
  if (extraSpace == 0) {
    return drawableState;
  }
  final int[] fullState;
  if (drawableState != null) {
    fullState=new int[drawableState.length + extraSpace];
    System.arraycopy(drawableState,0,fullState,0,drawableState.length);
  }
 else {
    fullState=new int[extraSpace];
  }
  return fullState;
}
