{
  if ((mViewFlags & DUPLICATE_PARENT_STATE) == DUPLICATE_PARENT_STATE && mParent instanceof View) {
    return ((View)mParent).onCreateDrawableState(extraSpace);
  }
  int[] drawableState;
  int privateFlags=mPrivateFlags;
  int viewStateIndex=(((privateFlags & PRESSED) != 0) ? 1 : 0);
  viewStateIndex=(viewStateIndex << 1) + (((mViewFlags & ENABLED_MASK) == ENABLED) ? 1 : 0);
  viewStateIndex=(viewStateIndex << 1) + (isFocused() ? 1 : 0);
  viewStateIndex=(viewStateIndex << 1) + (((privateFlags & SELECTED) != 0) ? 1 : 0);
  final boolean hasWindowFocus=hasWindowFocus();
  viewStateIndex=(viewStateIndex << 1) + (hasWindowFocus ? 1 : 0);
  drawableState=VIEW_STATE_SETS[viewStateIndex];
  if (false) {
    Log.i("View","drawableStateIndex=" + viewStateIndex);
    Log.i("View",toString() + " pressed=" + ((privateFlags & PRESSED) != 0)+ " en="+ ((mViewFlags & ENABLED_MASK) == ENABLED)+ " fo="+ hasFocus()+ " sl="+ ((privateFlags & SELECTED) != 0)+ " wf="+ hasWindowFocus+ ": "+ Arrays.toString(drawableState));
  }
  if (extraSpace == 0) {
    return drawableState;
  }
  final int[] fullState;
  if (drawableState != null) {
    fullState=new int[drawableState.length + extraSpace];
    System.arraycopy(drawableState,0,fullState,0,drawableState.length);
  }
 else {
    fullState=new int[extraSpace];
  }
  return fullState;
}
