{
  if (ViewDebug.DEBUG_DRAG) {
    Log.d(VIEW_LOG_TAG,"startDrag: data=" + data + " local="+ myWindowOnly);
  }
  boolean okay=false;
  Point thumbSize=new Point();
  Point thumbTouchPoint=new Point();
  thumbBuilder.onProvideThumbnailMetrics(thumbSize,thumbTouchPoint);
  if ((thumbSize.x < 0) || (thumbSize.y < 0) || (thumbTouchPoint.x < 0)|| (thumbTouchPoint.y < 0)) {
    throw new IllegalStateException("Drag thumb dimensions must not be negative");
  }
  if (ViewDebug.DEBUG_DRAG) {
    Log.d(VIEW_LOG_TAG,"drag thumb: width=" + thumbSize.x + " height="+ thumbSize.y+ " thumbX="+ thumbTouchPoint.x+ " thumbY="+ thumbTouchPoint.y);
  }
  Surface surface=new Surface();
  try {
    IBinder token=mAttachInfo.mSession.prepareDrag(mAttachInfo.mWindow,myWindowOnly,thumbSize.x,thumbSize.y,surface);
    if (ViewDebug.DEBUG_DRAG)     Log.d(VIEW_LOG_TAG,"prepareDrag returned token=" + token + " surface="+ surface);
    if (token != null) {
      Canvas canvas=surface.lockCanvas(null);
      try {
        canvas.drawColor(0,PorterDuff.Mode.CLEAR);
        thumbBuilder.onDrawThumbnail(canvas);
      }
  finally {
        surface.unlockCanvasAndPost(canvas);
      }
      getViewRoot().getLastTouchPoint(thumbSize);
      okay=mAttachInfo.mSession.performDrag(mAttachInfo.mWindow,token,(float)thumbSize.x,(float)thumbSize.y,(float)thumbTouchPoint.x,(float)thumbTouchPoint.y,data);
      if (ViewDebug.DEBUG_DRAG)       Log.d(VIEW_LOG_TAG,"performDrag returned " + okay);
    }
  }
 catch (  Exception e) {
    Log.e(VIEW_LOG_TAG,"Unable to initiate drag",e);
    surface.destroy();
  }
  return okay;
}
