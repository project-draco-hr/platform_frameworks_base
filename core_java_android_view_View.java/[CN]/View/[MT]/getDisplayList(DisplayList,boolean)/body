{
  if (!canHaveDisplayList()) {
    return null;
  }
  if (((mPrivateFlags & PFLAG_DRAWING_CACHE_VALID) == 0 || displayList == null || !displayList.isValid() || (!isLayer && mRecreateDisplayList))) {
    if (displayList != null && displayList.isValid() && !isLayer && !mRecreateDisplayList) {
      mPrivateFlags|=PFLAG_DRAWN | PFLAG_DRAWING_CACHE_VALID;
      mPrivateFlags&=~PFLAG_DIRTY_MASK;
      dispatchGetDisplayList();
      return displayList;
    }
    if (!isLayer) {
      mRecreateDisplayList=true;
    }
    if (displayList == null) {
      final String name=getClass().getSimpleName();
      displayList=mAttachInfo.mHardwareRenderer.createDisplayList(name);
      invalidateParentCaches();
    }
    boolean caching=false;
    int width=mRight - mLeft;
    int height=mBottom - mTop;
    int layerType=getLayerType();
    final HardwareCanvas canvas=displayList.start(width,height);
    try {
      if (!isLayer && layerType != LAYER_TYPE_NONE) {
        if (layerType == LAYER_TYPE_HARDWARE) {
          final HardwareLayer layer=getHardwareLayer();
          if (layer != null && layer.isValid()) {
            canvas.drawHardwareLayer(layer,0,0,mLayerPaint);
          }
 else {
            canvas.saveLayer(0,0,mRight - mLeft,mBottom - mTop,mLayerPaint,Canvas.HAS_ALPHA_LAYER_SAVE_FLAG | Canvas.CLIP_TO_LAYER_SAVE_FLAG);
          }
          caching=true;
        }
 else {
          buildDrawingCache(true);
          Bitmap cache=getDrawingCache(true);
          if (cache != null) {
            canvas.drawBitmap(cache,0,0,mLayerPaint);
            caching=true;
          }
        }
      }
 else {
        computeScroll();
        canvas.translate(-mScrollX,-mScrollY);
        if (!isLayer) {
          mPrivateFlags|=PFLAG_DRAWN | PFLAG_DRAWING_CACHE_VALID;
          mPrivateFlags&=~PFLAG_DIRTY_MASK;
        }
        if ((mPrivateFlags & PFLAG_SKIP_DRAW) == PFLAG_SKIP_DRAW) {
          dispatchDraw(canvas);
          if (mOverlay != null && !mOverlay.isEmpty()) {
            mOverlay.draw(canvas);
          }
        }
 else {
          draw(canvas);
        }
      }
    }
  finally {
      displayList.end();
      displayList.setCaching(caching);
      if (isLayer) {
        displayList.setLeftTopRightBottom(0,0,width,height);
      }
 else {
        setDisplayListProperties(displayList);
      }
    }
  }
 else   if (!isLayer) {
    mPrivateFlags|=PFLAG_DRAWN | PFLAG_DRAWING_CACHE_VALID;
    mPrivateFlags&=~PFLAG_DIRTY_MASK;
  }
  return displayList;
}
