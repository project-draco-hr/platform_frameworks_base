{
  ListenerInfo li=mListenerInfo;
  if (li != null && li.mOnGenericMotionListener != null && (mViewFlags & ENABLED_MASK) == ENABLED && li.mOnGenericMotionListener.onGenericMotion(this,event)) {
    return true;
  }
  if (onGenericMotionEvent(event)) {
    return true;
  }
switch (event.getActionMasked()) {
case MotionEvent.ACTION_BUTTON_PRESS:
    if (isStylusButtonPressable() && !mInStylusButtonPress && !mHasPerformedLongPress&& event.getActionButton() == MotionEvent.BUTTON_STYLUS_PRIMARY) {
      if (performStylusButtonPress()) {
        mInStylusButtonPress=true;
        setPressed(true,event.getX(),event.getY());
        removeTapCallback();
        removeLongPressCallback();
        return true;
      }
    }
  break;
case MotionEvent.ACTION_BUTTON_RELEASE:
if (mInStylusButtonPress && event.getActionButton() == MotionEvent.BUTTON_STYLUS_PRIMARY) {
  mInStylusButtonPress=false;
  mIgnoreNextUpEvent=true;
}
break;
}
if (mInputEventConsistencyVerifier != null) {
mInputEventConsistencyVerifier.onUnhandledEvent(event,0);
}
return false;
}
