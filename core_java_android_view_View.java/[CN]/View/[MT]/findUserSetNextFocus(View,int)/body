{
switch (direction) {
case FOCUS_LEFT:
    if (mNextFocusLeftId == View.NO_ID)     return null;
  return findViewShouldExist(root,mNextFocusLeftId);
case FOCUS_RIGHT:
if (mNextFocusRightId == View.NO_ID) return null;
return findViewShouldExist(root,mNextFocusRightId);
case FOCUS_UP:
if (mNextFocusUpId == View.NO_ID) return null;
return findViewShouldExist(root,mNextFocusUpId);
case FOCUS_DOWN:
if (mNextFocusDownId == View.NO_ID) return null;
return findViewShouldExist(root,mNextFocusDownId);
case FOCUS_FORWARD:
if (mNextFocusForwardId == View.NO_ID) return null;
return findViewShouldExist(root,mNextFocusForwardId);
case FOCUS_BACKWARD:
{
final int id=mID;
return root.findViewByPredicate(new Predicate<View>(){
@Override public boolean apply(View t){
return t.mNextFocusForwardId == id;
}
}
);
}
}
return null;
}
