{
switch (action) {
case AccessibilityNodeInfo.ACTION_CLICK:
{
      final long now=SystemClock.uptimeMillis();
      MotionEvent event=MotionEvent.obtain(now,now,MotionEvent.ACTION_DOWN,getWidth() / 2,getHeight() / 2,0);
      onTouchEvent(event);
      event.setAction(MotionEvent.ACTION_UP);
      onTouchEvent(event);
      event.recycle();
    }
  break;
case AccessibilityNodeInfo.ACTION_FOCUS:
{
  if (!hasFocus()) {
    getViewRootImpl().ensureTouchMode(false);
    return requestFocus();
  }
}
break;
case AccessibilityNodeInfo.ACTION_CLEAR_FOCUS:
{
if (hasFocus()) {
clearFocus();
return !isFocused();
}
}
break;
case AccessibilityNodeInfo.ACTION_SELECT:
{
if (!isSelected()) {
setSelected(true);
return isSelected();
}
}
break;
case AccessibilityNodeInfo.ACTION_CLEAR_SELECTION:
{
if (isSelected()) {
setSelected(false);
return !isSelected();
}
}
break;
case AccessibilityNodeInfo.ACTION_ACCESSIBILITY_FOCUS:
{
if (!isAccessibilityFocused()) {
return requestAccessibilityFocus();
}
}
break;
case AccessibilityNodeInfo.ACTION_CLEAR_ACCESSIBILITY_FOCUS:
{
if (isAccessibilityFocused()) {
clearAccessibilityFocus();
return true;
}
}
break;
}
return false;
}
