{
  if (top != mTop) {
    final boolean matrixIsIdentity=hasIdentityMatrix();
    if (matrixIsIdentity) {
      if (mAttachInfo != null) {
        int minTop;
        int yLoc;
        if (top < mTop) {
          minTop=top;
          yLoc=top - mTop;
        }
 else {
          minTop=mTop;
          yLoc=0;
        }
        invalidate(0,yLoc,mRight - mLeft,mBottom - minTop);
      }
    }
 else {
      invalidate(true);
    }
    int width=mRight - mLeft;
    int oldHeight=mBottom - mTop;
    mTop=top;
    mRenderNode.setTop(mTop);
    sizeChange(width,mBottom - mTop,width,oldHeight);
    if (!matrixIsIdentity) {
      mPrivateFlags|=PFLAG_DRAWN;
      invalidate(true);
    }
    mBackgroundSizeChanged=true;
    if (mForegroundInfo != null) {
      mForegroundInfo.mBoundsChanged=true;
    }
    invalidateParentIfNeeded();
    if ((mPrivateFlags2 & PFLAG2_VIEW_QUICK_REJECTED) == PFLAG2_VIEW_QUICK_REJECTED) {
      invalidateParentIfNeeded();
    }
  }
}
