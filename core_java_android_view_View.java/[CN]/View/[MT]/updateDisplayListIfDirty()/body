{
  final RenderNode renderNode=mRenderNode;
  if (!canHaveDisplayList()) {
    return;
  }
  if ((mPrivateFlags & PFLAG_DRAWING_CACHE_VALID) == 0 || !renderNode.isValid() || (mRecreateDisplayList)) {
    if (renderNode.isValid() && !mRecreateDisplayList) {
      mPrivateFlags|=PFLAG_DRAWN | PFLAG_DRAWING_CACHE_VALID;
      mPrivateFlags&=~PFLAG_DIRTY_MASK;
      dispatchGetDisplayList();
      return;
    }
    mRecreateDisplayList=true;
    int width=mRight - mLeft;
    int height=mBottom - mTop;
    int layerType=getLayerType();
    final HardwareCanvas canvas=renderNode.start(width,height);
    canvas.setHighContrastText(mAttachInfo.mHighContrastText);
    try {
      final HardwareLayer layer=getHardwareLayer();
      if (layer != null && layer.isValid()) {
        canvas.drawHardwareLayer(layer,0,0,mLayerPaint);
      }
 else       if (layerType == LAYER_TYPE_SOFTWARE) {
        buildDrawingCache(true);
        Bitmap cache=getDrawingCache(true);
        if (cache != null) {
          canvas.drawBitmap(cache,0,0,mLayerPaint);
        }
      }
 else {
        computeScroll();
        canvas.translate(-mScrollX,-mScrollY);
        mPrivateFlags|=PFLAG_DRAWN | PFLAG_DRAWING_CACHE_VALID;
        mPrivateFlags&=~PFLAG_DIRTY_MASK;
        if ((mPrivateFlags & PFLAG_SKIP_DRAW) == PFLAG_SKIP_DRAW) {
          dispatchDraw(canvas);
          if (mOverlay != null && !mOverlay.isEmpty()) {
            mOverlay.getOverlayView().draw(canvas);
          }
        }
 else {
          draw(canvas);
        }
      }
    }
  finally {
      renderNode.end(canvas);
      setDisplayListProperties(renderNode);
    }
  }
 else {
    mPrivateFlags|=PFLAG_DRAWN | PFLAG_DRAWING_CACHE_VALID;
    mPrivateFlags&=~PFLAG_DIRTY_MASK;
  }
}
