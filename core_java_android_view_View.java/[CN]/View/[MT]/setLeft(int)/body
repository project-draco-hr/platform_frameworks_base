{
  if (left != mLeft) {
    final boolean matrixIsIdentity=hasIdentityMatrix();
    if (matrixIsIdentity) {
      if (mAttachInfo != null) {
        int minLeft;
        int xLoc;
        if (left < mLeft) {
          minLeft=left;
          xLoc=left - mLeft;
        }
 else {
          minLeft=mLeft;
          xLoc=0;
        }
        invalidate(xLoc,0,mRight - minLeft,mBottom - mTop);
      }
    }
 else {
      invalidate(true);
    }
    int oldWidth=mRight - mLeft;
    int height=mBottom - mTop;
    mLeft=left;
    mRenderNode.setLeft(left);
    sizeChange(mRight - mLeft,height,oldWidth,height);
    if (!matrixIsIdentity) {
      mPrivateFlags|=PFLAG_DRAWN;
      invalidate(true);
    }
    mBackgroundSizeChanged=true;
    if (mForegroundInfo != null) {
      mForegroundInfo.mBoundsChanged=true;
    }
    invalidateParentIfNeeded();
    if ((mPrivateFlags2 & PFLAG2_VIEW_QUICK_REJECTED) == PFLAG2_VIEW_QUICK_REJECTED) {
      invalidateParentIfNeeded();
    }
  }
}
