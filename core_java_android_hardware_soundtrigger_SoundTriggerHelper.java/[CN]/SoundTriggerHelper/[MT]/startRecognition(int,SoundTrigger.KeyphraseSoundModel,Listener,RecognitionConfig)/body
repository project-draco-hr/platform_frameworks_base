{
  if (dspInfo == null || mModule == null) {
    Slog.w(TAG,"Attempting startRecognition without the capability");
    return STATUS_ERROR;
  }
  Listener oldListener=mActiveListeners.get(keyphraseId);
  if (oldListener != null && oldListener != listener) {
    if (mCurrentSoundModelHandle != INVALID_SOUND_MODEL_HANDLE) {
      Slog.w(TAG,"Canceling previous recognition");
      mModule.unloadSoundModel(mCurrentSoundModelHandle);
    }
    mActiveListeners.get(keyphraseId).onListeningStateChanged(STATE_STOPPED);
    mActiveListeners.remove(keyphraseId);
  }
  int[] handle=new int[]{INVALID_SOUND_MODEL_HANDLE};
  int status=mModule.loadSoundModel(soundModel,handle);
  if (status != SoundTrigger.STATUS_OK) {
    Slog.w(TAG,"loadSoundModel call failed with " + status);
    return STATUS_ERROR;
  }
  if (handle[0] == INVALID_SOUND_MODEL_HANDLE) {
    Slog.w(TAG,"loadSoundModel call returned invalid sound model handle");
    return STATUS_ERROR;
  }
  status=mModule.startRecognition(handle[0],recognitionConfig);
  if (status != SoundTrigger.STATUS_OK) {
    Slog.w(TAG,"startRecognition failed with " + status);
    return STATUS_ERROR;
  }
  mCurrentSoundModelHandle=handle[0];
  mActiveListeners.put(keyphraseId,listener);
  return STATUS_OK;
}
