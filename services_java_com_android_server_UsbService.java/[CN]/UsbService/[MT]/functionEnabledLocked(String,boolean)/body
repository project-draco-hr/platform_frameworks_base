{
  boolean enteringAccessoryMode=(enabled && UsbManager.USB_FUNCTION_ACCESSORY.equals(function));
  if (enteringAccessoryMode) {
    mAccessoryRestoreFunctions.clear();
    int count=mEnabledFunctions.size();
    for (int i=0; i < count; i++) {
      String f=mEnabledFunctions.get(i);
      if (!UsbManager.USB_FUNCTION_RNDIS.equals(f) && !UsbManager.USB_FUNCTION_ADB.equals(f) && !UsbManager.USB_FUNCTION_ACCESSORY.equals(f)) {
        mAccessoryRestoreFunctions.add(f);
      }
    }
  }
  if (enabled) {
    if (!mEnabledFunctions.contains(function)) {
      mEnabledFunctions.add(function);
    }
    mDisabledFunctions.remove(function);
  }
 else {
    if (!mDisabledFunctions.contains(function)) {
      mDisabledFunctions.add(function);
    }
    mEnabledFunctions.remove(function);
  }
  if (enteringAccessoryMode) {
    String[] strings=nativeGetAccessoryStrings();
    if (strings != null) {
      Log.d(TAG,"entering USB accessory mode");
      mCurrentAccessory=new UsbAccessory(strings);
      Intent intent=new Intent(UsbManager.ACTION_USB_ACCESSORY_ATTACHED);
      intent.putExtra(UsbManager.EXTRA_ACCESSORY,mCurrentAccessory);
      mContext.sendBroadcast(intent);
    }
 else {
      Log.e(TAG,"nativeGetAccessoryStrings failed");
    }
  }
}
