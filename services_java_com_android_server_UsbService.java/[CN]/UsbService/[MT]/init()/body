{
  char[] buffer=new char[1024];
  mConfiguration=-1;
  try {
    FileReader file=new FileReader(USB_CONNECTED_PATH);
    int len=file.read(buffer,0,1024);
    file.close();
    mConnected=Integer.valueOf((new String(buffer,0,len)).trim());
    file=new FileReader(USB_CONFIGURATION_PATH);
    len=file.read(buffer,0,1024);
    file.close();
    mConfiguration=Integer.valueOf((new String(buffer,0,len)).trim());
  }
 catch (  FileNotFoundException e) {
    Slog.i(TAG,"This kernel does not have USB configuration switch support");
  }
catch (  Exception e) {
    Slog.e(TAG,"",e);
  }
  if (mConfiguration < 0)   return;
  try {
synchronized (mEnabledFunctions) {
      File[] files=new File(USB_COMPOSITE_CLASS_PATH).listFiles();
      for (int i=0; i < files.length; i++) {
        File file=new File(files[i],"enable");
        FileReader reader=new FileReader(file);
        int len=reader.read(buffer,0,1024);
        reader.close();
        int value=Integer.valueOf((new String(buffer,0,len)).trim());
        String functionName=files[i].getName();
        if (value == 1) {
          mEnabledFunctions.add(functionName);
        }
 else {
          mDisabledFunctions.add(functionName);
        }
      }
    }
  }
 catch (  FileNotFoundException e) {
    Slog.w(TAG,"This kernel does not have USB composite class support");
  }
catch (  Exception e) {
    Slog.e(TAG,"",e);
  }
}
