{
  final boolean isRtc=(type == RTC || type == RTC_WAKEUP);
  pw.print(prefix);
  pw.print("tag=");
  pw.println(statsTag);
  pw.print(prefix);
  pw.print("type=");
  pw.print(type);
  pw.print(" whenElapsed=");
  TimeUtils.formatDuration(whenElapsed,nowELAPSED,pw);
  pw.print(" when=");
  if (isRtc) {
    pw.print(sdf.format(new Date(when)));
  }
 else {
    TimeUtils.formatDuration(when,nowELAPSED,pw);
  }
  pw.println();
  pw.print(prefix);
  pw.print("window=");
  TimeUtils.formatDuration(windowLength,pw);
  pw.print(" repeatInterval=");
  pw.print(repeatInterval);
  pw.print(" count=");
  pw.print(count);
  pw.print(" flags=0x");
  pw.println(Integer.toHexString(flags));
  if (alarmClock != null) {
    pw.print(prefix);
    pw.println("Alarm clock:");
    pw.print(prefix);
    pw.print("  triggerTime=");
    pw.println(sdf.format(new Date(alarmClock.getTriggerTime())));
    pw.print(prefix);
    pw.print("  showIntent=");
    pw.println(alarmClock.getShowIntent());
  }
  pw.print(prefix);
  pw.print("operation=");
  pw.println(operation);
  if (listener != null) {
    pw.print(prefix);
    pw.print("listener=");
    pw.println(listener.asBinder());
  }
}
