{
  try {
    final boolean unimportant=pi == mTimeTickSender;
    mWakeLock.setUnimportantForLogging(unimportant);
    if (first || mLastWakeLockUnimportantForLogging) {
      mWakeLock.setHistoryTag(pi.getTag(type == ELAPSED_REALTIME_WAKEUP || type == RTC_WAKEUP ? "*walarm*:" : "*alarm*:"));
    }
 else {
      mWakeLock.setHistoryTag(null);
    }
    mLastWakeLockUnimportantForLogging=unimportant;
    if (ws != null) {
      mWakeLock.setWorkSource(ws);
      return;
    }
    final int uid=ActivityManagerNative.getDefault().getUidForIntentSender(pi.getTarget());
    if (uid >= 0) {
      mWakeLock.setWorkSource(new WorkSource(uid));
      return;
    }
  }
 catch (  Exception e) {
  }
  mWakeLock.setWorkSource(null);
}
