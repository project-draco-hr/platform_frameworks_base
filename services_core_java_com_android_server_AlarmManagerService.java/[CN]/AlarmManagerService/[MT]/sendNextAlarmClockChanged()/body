{
  SparseArray<AlarmManager.AlarmClockInfo> pendingUsers=mHandlerSparseAlarmClockArray;
  pendingUsers.clear();
synchronized (mLock) {
    final int N=mPendingSendNextAlarmClockChangedForUser.size();
    for (int i=0; i < N; i++) {
      int userId=mPendingSendNextAlarmClockChangedForUser.keyAt(i);
      pendingUsers.append(userId,mNextAlarmClockForUser.get(userId));
    }
    mPendingSendNextAlarmClockChangedForUser.clear();
  }
  final int N=pendingUsers.size();
  for (int i=0; i < N; i++) {
    int userId=pendingUsers.keyAt(i);
    AlarmManager.AlarmClockInfo alarmClock=pendingUsers.valueAt(i);
    Settings.System.putStringForUser(getContext().getContentResolver(),Settings.System.NEXT_ALARM_FORMATTED,formatNextAlarm(getContext(),alarmClock,userId),userId);
    getContext().sendBroadcastAsUser(NEXT_ALARM_CLOCK_CHANGED_INTENT,new UserHandle(userId));
  }
}
