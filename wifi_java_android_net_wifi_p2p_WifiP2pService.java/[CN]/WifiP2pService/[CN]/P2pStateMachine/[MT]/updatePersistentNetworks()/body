{
  String listStr=mWifiNative.listNetworks();
  if (listStr == null)   return;
  boolean isSaveRequired=false;
  String[] lines=listStr.split("\n");
  if (lines == null)   return;
  for (int i=1; i < lines.length; i++) {
    String[] result=lines[i].split("\t");
    if (result == null || result.length < 4) {
      continue;
    }
    int netId=-1;
    String ssid=result[1];
    String bssid=result[2];
    String flags=result[3];
    try {
      netId=Integer.parseInt(result[0]);
    }
 catch (    NumberFormatException e) {
      e.printStackTrace();
      continue;
    }
    if (flags.indexOf("[CURRENT]") != -1) {
      continue;
    }
    if (flags.indexOf("[P2P-PERSISTENT]") == -1) {
      if (DBG)       logd("clean up the unused persistent group. netId=" + netId);
      mWifiNative.removeNetwork(netId);
      isSaveRequired=true;
      continue;
    }
    if (mGroups.contains(netId)) {
      continue;
    }
    WifiP2pGroup group=new WifiP2pGroup();
    group.setNetworkId(netId);
    group.setNetworkName(ssid);
    String mode=mWifiNative.getNetworkVariable(netId,"mode");
    if (mode != null && mode.equals("3")) {
      group.setIsGroupOwner(true);
    }
    if (bssid.equalsIgnoreCase(mThisDevice.deviceAddress)) {
      group.setOwner(mThisDevice);
    }
 else {
      WifiP2pDevice device=new WifiP2pDevice();
      device.deviceAddress=bssid;
      group.setOwner(device);
    }
    mGroups.add(group);
    isSaveRequired=true;
  }
  if (isSaveRequired) {
    sendP2pPersistentGroupsChangedBroadcast();
    mWifiNative.saveConfig();
  }
}
