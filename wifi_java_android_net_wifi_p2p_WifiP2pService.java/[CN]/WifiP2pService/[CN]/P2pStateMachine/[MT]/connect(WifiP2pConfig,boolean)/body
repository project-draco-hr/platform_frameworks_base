{
  if (config == null) {
    loge("config is null");
    return CONNECT_FAILURE;
  }
  boolean isResp=(mSavedPeerConfig != null && config.deviceAddress.equals(mSavedPeerConfig.deviceAddress));
  mSavedPeerConfig=config;
  WifiP2pDevice dev=mPeers.get(config.deviceAddress);
  if (dev == null) {
    loge("target device not found " + config.deviceAddress);
    return CONNECT_FAILURE;
  }
  boolean join=dev.isGroupOwner();
  String ssid=mWifiNative.p2pGetSsid(dev.deviceAddress);
  if (DBG)   logd("target ssid is " + ssid + " join:"+ join);
  if (join && dev.isGroupLimit()) {
    if (DBG)     logd("target device reaches group limit.");
    join=false;
  }
 else   if (join) {
    int netId=mGroups.getNetworkId(dev.deviceAddress,ssid);
    if (netId >= 0) {
      if (!mWifiNative.p2pGroupAdd(netId)) {
        return CONNECT_FAILURE;
      }
      return CONNECT_SUCCESS;
    }
  }
  if (!join && dev.isDeviceLimit()) {
    loge("target device reaches the device limit.");
    return CONNECT_FAILURE;
  }
  if (!join && tryInvocation && dev.isInvitationCapable()) {
    int netId=WifiP2pGroup.PERSISTENT_NET_ID;
    if (config.netId >= 0) {
      if (config.deviceAddress.equals(mGroups.getOwnerAddr(config.netId))) {
        netId=config.netId;
      }
    }
 else {
      netId=mGroups.getNetworkId(dev.deviceAddress);
    }
    if (netId < 0) {
      netId=getNetworkIdFromClientList(dev.deviceAddress);
    }
    if (DBG)     logd("netId related with " + dev.deviceAddress + " = "+ netId);
    if (netId >= 0) {
      if (mWifiNative.p2pReinvoke(netId,dev.deviceAddress)) {
        mSavedPeerConfig.netId=netId;
        return CONNECT_SUCCESS;
      }
 else {
        loge("p2pReinvoke() failed, update networks");
        updatePersistentNetworks(RELOAD);
      }
    }
  }
  mWifiNative.p2pStopFind();
  if (!isResp) {
    return NEEDS_PROVISION_REQ;
  }
  p2pConnectWithPinDisplay(config);
  return CONNECT_SUCCESS;
}
