{
  WifiP2pDevice dev=fetchCurrentDeviceDetails(config);
  boolean join=dev.isGroupOwner();
  String ssid=mWifiNative.p2pGetSsid(dev.deviceAddress);
  if (DBG)   logd("target ssid is " + ssid + " join:"+ join);
  if (join && dev.isGroupLimit()) {
    if (DBG)     logd("target device reaches group limit.");
    join=false;
  }
 else   if (join) {
    int netId=mGroups.getNetworkId(dev.deviceAddress,ssid);
    if (netId >= 0) {
      if (!mWifiNative.p2pGroupAdd(netId)) {
        return false;
      }
      return true;
    }
  }
  if (!join && dev.isDeviceLimit()) {
    loge("target device reaches the device limit.");
    return false;
  }
  if (!join && dev.isInvitationCapable()) {
    int netId=WifiP2pGroup.PERSISTENT_NET_ID;
    if (config.netId >= 0) {
      if (config.deviceAddress.equals(mGroups.getOwnerAddr(config.netId))) {
        netId=config.netId;
      }
    }
 else {
      netId=mGroups.getNetworkId(dev.deviceAddress);
    }
    if (netId < 0) {
      netId=getNetworkIdFromClientList(dev.deviceAddress);
    }
    if (DBG)     logd("netId related with " + dev.deviceAddress + " = "+ netId);
    if (netId >= 0) {
      if (mWifiNative.p2pReinvoke(netId,dev.deviceAddress)) {
        config.netId=netId;
        return true;
      }
 else {
        loge("p2pReinvoke() failed, update networks");
        updatePersistentNetworks(RELOAD);
        return false;
      }
    }
  }
  return false;
}
