{
  if (DBG)   logd(getName() + message.toString());
switch (message.what) {
case WifiMonitor.SUP_CONNECTION_EVENT:
    logd("P2p start successful");
  transitionTo(mInactiveState);
break;
case WifiMonitor.SUP_DISCONNECTION_EVENT:
if (++mP2pRestartCount <= P2P_RESTART_TRIES) {
loge("Failed to start p2p, retry");
mWifiNative.killSupplicant();
sendMessageDelayed(WifiP2pManager.ENABLE_P2P,P2P_RESTART_INTERVAL_MSECS);
}
 else {
loge("Failed " + mP2pRestartCount + " times to start p2p, quit ");
mP2pRestartCount=0;
}
transitionTo(mP2pDisabledState);
break;
case WifiP2pManager.ENABLE_P2P:
case WifiP2pManager.DISABLE_P2P:
deferMessage(message);
break;
default :
return NOT_HANDLED;
}
return HANDLED;
}
