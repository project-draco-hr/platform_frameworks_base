{
  if (DEBUG_TASK_POSITIONING) {
    Slog.d(TAG,"Registering task positioner");
  }
  if (mClientChannel != null) {
    Slog.e(TAG,"Task positioner already registered");
    return;
  }
  mDisplay=display;
  mDisplay.getMetrics(mDisplayMetrics);
  final InputChannel[] channels=InputChannel.openInputChannelPair(TAG);
  mServerChannel=channels[0];
  mClientChannel=channels[1];
  mService.mInputManager.registerInputChannel(mServerChannel,null);
  mInputEventReceiver=new WindowPositionerEventReceiver(mClientChannel,mService.mH.getLooper(),mService.mChoreographer);
  mDragApplicationHandle=new InputApplicationHandle(null);
  mDragApplicationHandle.name=TAG;
  mDragApplicationHandle.dispatchingTimeoutNanos=WindowManagerService.DEFAULT_INPUT_DISPATCHING_TIMEOUT_NANOS;
  mDragWindowHandle=new InputWindowHandle(mDragApplicationHandle,null,mDisplay.getDisplayId());
  mDragWindowHandle.name=TAG;
  mDragWindowHandle.inputChannel=mServerChannel;
  mDragWindowHandle.layer=mService.getDragLayerLocked();
  mDragWindowHandle.layoutParamsFlags=0;
  mDragWindowHandle.layoutParamsType=WindowManager.LayoutParams.TYPE_DRAG;
  mDragWindowHandle.dispatchingTimeoutNanos=WindowManagerService.DEFAULT_INPUT_DISPATCHING_TIMEOUT_NANOS;
  mDragWindowHandle.visible=true;
  mDragWindowHandle.canReceiveKeys=false;
  mDragWindowHandle.hasFocus=true;
  mDragWindowHandle.hasWallpaper=false;
  mDragWindowHandle.paused=false;
  mDragWindowHandle.ownerPid=Process.myPid();
  mDragWindowHandle.ownerUid=Process.myUid();
  mDragWindowHandle.inputFeatures=0;
  mDragWindowHandle.scaleFactor=1.0f;
  mDragWindowHandle.touchableRegion.setEmpty();
  mDragWindowHandle.frameLeft=0;
  mDragWindowHandle.frameTop=0;
  final Point p=new Point();
  mDisplay.getRealSize(p);
  mDragWindowHandle.frameRight=p.x;
  mDragWindowHandle.frameBottom=p.y;
  if (WindowManagerService.DEBUG_ORIENTATION) {
    Slog.d(TAG,"Pausing rotation during re-position");
  }
  mService.pauseRotationLocked();
  mDimLayer=new DimLayer(mService,this,mDisplay.getDisplayId());
  mSideMargin=dipToPixel(SIDE_MARGIN_DIP,mDisplayMetrics);
  mMinVisibleWidth=dipToPixel(MINIMUM_VISIBLE_WIDTH_IN_DP,mDisplayMetrics);
  mMinVisibleHeight=dipToPixel(MINIMUM_VISIBLE_HEIGHT_IN_DP,mDisplayMetrics);
  mDragEnded=false;
}
