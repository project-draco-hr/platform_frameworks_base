{
  if (DEBUG_TASK_POSITIONING) {
    Slog.d(TAG,"notifyMoveLocked: {" + x + ","+ y+ "}");
  }
  if (mCtrlType != CTRL_NONE) {
    final int deltaX=Math.round(x - mStartDragX);
    final int deltaY=Math.round(y - mStartDragY);
    int left=mWindowOriginalBounds.left;
    int top=mWindowOriginalBounds.top;
    int right=mWindowOriginalBounds.right;
    int bottom=mWindowOriginalBounds.bottom;
    if ((mCtrlType & CTRL_LEFT) != 0) {
      left=Math.min(left + deltaX,right - mMinVisibleWidth);
    }
    if ((mCtrlType & CTRL_TOP) != 0) {
      top=Math.min(top + deltaY,bottom - mMinVisibleHeight);
    }
    if ((mCtrlType & CTRL_RIGHT) != 0) {
      right=Math.max(left + mMinVisibleWidth,right + deltaX);
    }
    if ((mCtrlType & CTRL_BOTTOM) != 0) {
      bottom=Math.max(top + mMinVisibleHeight,bottom + deltaY);
    }
    mWindowDragBounds.set(left,top,right,bottom);
    mTask.setDragResizing(true);
    return false;
  }
  mTask.mStack.getDimBounds(mTmpRect);
  if (!mTask.isDockedInEffect()) {
    mTmpRect.inset(mMinVisibleWidth,mMinVisibleHeight);
  }
  boolean dragEnded=false;
  final int nX=(int)x;
  final int nY=(int)y;
  if (!mTmpRect.contains(nX,nY)) {
    x=Math.min(Math.max(x,mTmpRect.left),mTmpRect.right);
    y=Math.min(Math.max(y,mTmpRect.top),mTmpRect.bottom);
    dragEnded=true;
  }
  updateWindowDragBounds(nX,nY);
  updateDimLayerVisibility(nX);
  return dragEnded;
}
