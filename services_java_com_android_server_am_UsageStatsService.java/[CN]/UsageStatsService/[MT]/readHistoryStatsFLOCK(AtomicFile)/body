{
  FileInputStream fis=null;
  try {
    fis=mHistoryFile.openRead();
    XmlPullParser parser=Xml.newPullParser();
    parser.setInput(fis,null);
    int eventType=parser.getEventType();
    while (eventType != XmlPullParser.START_TAG) {
      eventType=parser.next();
    }
    String tagName=parser.getName();
    if ("usage-history".equals(tagName)) {
      String pkg=null;
      do {
        eventType=parser.next();
        if (eventType == XmlPullParser.START_TAG) {
          tagName=parser.getName();
          int depth=parser.getDepth();
          if ("pkg".equals(tagName) && depth == 2) {
            pkg=parser.getAttributeValue(null,"name");
          }
 else           if ("comp".equals(tagName) && depth == 3 && pkg != null) {
            String comp=parser.getAttributeValue(null,"name");
            String lastResumeTimeStr=parser.getAttributeValue(null,"lrt");
            if (comp != null && lastResumeTimeStr != null) {
              try {
                long lastResumeTime=Long.parseLong(lastResumeTimeStr);
synchronized (mStatsLock) {
                  Map<String,Long> lrt=mLastResumeTimes.get(pkg);
                  if (lrt == null) {
                    lrt=new HashMap<String,Long>();
                    mLastResumeTimes.put(pkg,lrt);
                  }
                  lrt.put(comp,lastResumeTime);
                }
              }
 catch (              NumberFormatException e) {
              }
            }
          }
        }
 else         if (eventType == XmlPullParser.END_TAG) {
          if ("pkg".equals(parser.getName())) {
            pkg=null;
          }
        }
      }
 while (eventType != XmlPullParser.END_DOCUMENT);
    }
  }
 catch (  XmlPullParserException e) {
    Slog.w(TAG,"Error reading history stats: " + e);
  }
catch (  IOException e) {
    Slog.w(TAG,"Error reading history stats: " + e);
  }
 finally {
    if (fis != null) {
      try {
        fis.close();
      }
 catch (      IOException e) {
      }
    }
  }
}
