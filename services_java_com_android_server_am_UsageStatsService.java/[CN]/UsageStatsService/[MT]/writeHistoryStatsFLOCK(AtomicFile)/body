{
  FileOutputStream fos=null;
  try {
    fos=historyFile.startWrite();
    XmlSerializer out=new FastXmlSerializer();
    out.setOutput(fos,"utf-8");
    out.startDocument(null,true);
    out.setFeature("http://xmlpull.org/v1/doc/features.html#indent-output",true);
    out.startTag(null,"usage-history");
synchronized (mStatsLock) {
      for (      Map.Entry<String,Map<String,Long>> pkgEntry : mLastResumeTimes.entrySet()) {
        out.startTag(null,"pkg");
        out.attribute(null,"name",pkgEntry.getKey());
        for (        Map.Entry<String,Long> compEntry : pkgEntry.getValue().entrySet()) {
          out.startTag(null,"comp");
          out.attribute(null,"name",compEntry.getKey());
          out.attribute(null,"lrt",compEntry.getValue().toString());
          out.endTag(null,"comp");
        }
        out.endTag(null,"pkg");
      }
    }
    out.endTag(null,"usage-history");
    out.endDocument();
    historyFile.finishWrite(fos);
  }
 catch (  IOException e) {
    Slog.w(TAG,"Error writing history stats" + e);
    if (fos != null) {
      historyFile.failWrite(fos);
    }
  }
}
