{
  out.writeInt(mLaunchCount);
  out.writeLong(mUsageTime);
  final int N=mLaunchTimes.size();
  out.writeInt(N);
  if (N > 0) {
    for (    Map.Entry<String,TimeStats> ent : mLaunchTimes.entrySet()) {
      out.writeString(ent.getKey());
      TimeStats times=ent.getValue();
      if (allTimes) {
        final int M=times.size;
        out.writeInt(M);
        out.writeInt(times.count);
        for (int j=0; j < M; j++) {
          out.writeInt(times.array[j]);
        }
      }
 else {
        times.computeStats();
        out.writeInt(-1);
        out.writeInt(times.count);
        out.writeInt(times.samples);
        out.writeInt(times.minimum);
        out.writeInt(times.maximum);
        out.writeInt(times.average);
        out.writeInt(times.median);
      }
    }
  }
}
