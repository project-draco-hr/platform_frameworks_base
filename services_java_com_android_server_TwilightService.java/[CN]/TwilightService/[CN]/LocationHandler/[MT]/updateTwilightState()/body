{
  final long now=System.currentTimeMillis();
  mTwilightCalculator.calculateTwilight(now - DateUtils.DAY_IN_MILLIS,mLocation.getLatitude(),mLocation.getLongitude());
  final long yesterdaySunset=mTwilightCalculator.mSunset;
  mTwilightCalculator.calculateTwilight(now,mLocation.getLatitude(),mLocation.getLongitude());
  final boolean isNight=(mTwilightCalculator.mState == TwilightCalculator.NIGHT);
  final long todaySunrise=mTwilightCalculator.mSunrise;
  final long todaySunset=mTwilightCalculator.mSunset;
  mTwilightCalculator.calculateTwilight(now + DateUtils.DAY_IN_MILLIS,mLocation.getLatitude(),mLocation.getLongitude());
  final long tomorrowSunrise=mTwilightCalculator.mSunrise;
  TwilightState state=new TwilightState(isNight,yesterdaySunset,todaySunrise,todaySunset,tomorrowSunrise);
  if (DEBUG) {
    Slog.d(TAG,"Updating twilight state: " + state);
  }
  setTwilightState(state);
  long nextUpdate=0;
  if (todaySunrise == -1 || todaySunset == -1) {
    nextUpdate=now + 12 * DateUtils.HOUR_IN_MILLIS;
  }
 else {
    nextUpdate+=DateUtils.MINUTE_IN_MILLIS;
    if (now > todaySunset) {
      nextUpdate+=tomorrowSunrise;
    }
 else     if (now > todaySunrise) {
      nextUpdate+=todaySunset;
    }
 else {
      nextUpdate+=todaySunrise;
    }
  }
  if (DEBUG) {
    Slog.d(TAG,"Next update in " + (nextUpdate - now) + " ms");
  }
  Intent updateIntent=new Intent(ACTION_UPDATE_TWILIGHT_STATE);
  PendingIntent pendingIntent=PendingIntent.getBroadcast(mContext,0,updateIntent,0);
  mAlarmManager.cancel(pendingIntent);
  mAlarmManager.set(AlarmManager.RTC_WAKEUP,nextUpdate,pendingIntent);
}
