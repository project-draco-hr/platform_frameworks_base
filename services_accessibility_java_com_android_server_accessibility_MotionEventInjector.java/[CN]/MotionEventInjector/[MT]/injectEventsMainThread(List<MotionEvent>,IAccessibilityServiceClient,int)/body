{
  if (mIsDestroyed) {
    try {
      serviceInterface.onPerformGestureResult(sequence,false);
    }
 catch (    RemoteException re) {
      Slog.e(LOG_TAG,"Error sending status with mIsDestroyed to " + serviceInterface,re);
    }
    return;
  }
  cancelAnyPendingInjectedEvents();
  mSourceOfInjectedGesture=events.get(0).getSource();
  cancelAnyGestureInProgress(mSourceOfInjectedGesture);
  mServiceInterfaceForCurrentGesture=serviceInterface;
  mSequenceForCurrentGesture=sequence;
  if (mNext == null) {
    notifyService(false);
    return;
  }
  long startTime=SystemClock.uptimeMillis();
  for (int i=0; i < events.size(); i++) {
    MotionEvent event=events.get(i);
    int numPointers=event.getPointerCount();
    if (numPointers > mPointerCoords.length) {
      mPointerCoords=new MotionEvent.PointerCoords[numPointers];
      mPointerProperties=new MotionEvent.PointerProperties[numPointers];
    }
    for (int j=0; j < numPointers; j++) {
      if (mPointerCoords[j] == null) {
        mPointerCoords[j]=new MotionEvent.PointerCoords();
        mPointerProperties[j]=new MotionEvent.PointerProperties();
      }
      event.getPointerCoords(j,mPointerCoords[j]);
      event.getPointerProperties(j,mPointerProperties[j]);
    }
    MotionEvent offsetEvent=MotionEvent.obtain(startTime + event.getDownTime(),startTime + event.getEventTime(),event.getAction(),numPointers,mPointerProperties,mPointerCoords,event.getMetaState(),event.getButtonState(),event.getXPrecision(),event.getYPrecision(),event.getDeviceId(),event.getEdgeFlags(),event.getSource(),event.getFlags());
    Message message=mHandler.obtainMessage(MESSAGE_SEND_MOTION_EVENT,offsetEvent);
    mHandler.sendMessageDelayed(message,event.getEventTime());
  }
}
