{
  List<Statement> statements=new ArrayList<Statement>();
  if (maxIncludeLevel < 0) {
    return Result.create(statements,DO_NOT_CACHE_RESULT);
  }
  WebContent webContent;
  try {
    URL url=new URL(urlString);
    if (!source.followInsecureInclude() && !url.getProtocol().toLowerCase().equals("https")) {
      return Result.create(statements,DO_NOT_CACHE_RESULT);
    }
    webContent=mUrlFetcher.getWebContentFromUrl(url,HTTP_CONTENT_SIZE_LIMIT_IN_BYTES,HTTP_CONNECTION_TIMEOUT_MILLIS);
  }
 catch (  IOException e) {
    return Result.create(statements,DO_NOT_CACHE_RESULT);
  }
  try {
    ParsedStatement result=StatementParser.parseStatementList(webContent.getContent(),source);
    statements.addAll(result.getStatements());
    for (    String delegate : result.getDelegates()) {
      statements.addAll(retrieveStatementFromUrl(delegate,maxIncludeLevel - 1,source).getStatements());
    }
    return Result.create(statements,webContent.getExpireTimeMillis());
  }
 catch (  JSONException e) {
    return Result.create(statements,DO_NOT_CACHE_RESULT);
  }
}
