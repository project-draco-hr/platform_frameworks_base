{
  boolean returnValue=false;
  ByteArrayOutputStream out=new ByteArrayOutputStream();
  int bodyLength=-1;
  byte[] headerArray=ObexHelper.createHeader(mRequestHeader,true);
  if (mPrivateOutput != null) {
    bodyLength=mPrivateOutput.size();
  }
  if ((ObexHelper.BASE_PACKET_LENGTH + headerArray.length) > mMaxPacketSize) {
    int end=0;
    int start=0;
    while (end != headerArray.length) {
      end=ObexHelper.findHeaderEnd(headerArray,start,mMaxPacketSize - ObexHelper.BASE_PACKET_LENGTH);
      if (end == -1) {
        mOperationDone=true;
        abort();
        mExceptionMessage="Header larger then can be sent in a packet";
        mInputOpen=false;
        if (mPrivateInput != null) {
          mPrivateInput.close();
        }
        if (mPrivateOutput != null) {
          mPrivateOutput.close();
        }
        throw new IOException("OBEX Packet exceeds max packet size");
      }
      byte[] sendHeader=new byte[end - start];
      System.arraycopy(headerArray,start,sendHeader,0,sendHeader.length);
      if (!mParent.sendRequest(type,sendHeader,mReplyHeader,mPrivateInput)) {
        return false;
      }
      if (mReplyHeader.responseCode != ResponseCodes.OBEX_HTTP_CONTINUE) {
        return false;
      }
      start=end;
    }
    if (bodyLength > 0) {
      return true;
    }
 else {
      return false;
    }
  }
 else {
    out.write(headerArray);
  }
  if (bodyLength > 0) {
    if (bodyLength > (mMaxPacketSize - headerArray.length - 6)) {
      returnValue=true;
      bodyLength=mMaxPacketSize - headerArray.length - 6;
    }
    byte[] body=mPrivateOutput.readBytes(bodyLength);
    if ((mPrivateOutput.isClosed()) && (!returnValue) && (!mEndOfBodySent)&& ((type & 0x80) != 0)) {
      out.write(0x49);
      mEndOfBodySent=true;
    }
 else {
      out.write(0x48);
    }
    bodyLength+=3;
    out.write((byte)(bodyLength >> 8));
    out.write((byte)bodyLength);
    if (body != null) {
      out.write(body);
    }
  }
  if (mPrivateOutputOpen && bodyLength <= 0 && !mEndOfBodySent) {
    if ((type & 0x80) == 0) {
      out.write(0x48);
    }
 else {
      out.write(0x49);
      mEndOfBodySent=true;
    }
    bodyLength=3;
    out.write((byte)(bodyLength >> 8));
    out.write((byte)bodyLength);
  }
  if (out.size() == 0) {
    if (!mParent.sendRequest(type,null,mReplyHeader,mPrivateInput)) {
      return false;
    }
    return returnValue;
  }
  if ((out.size() > 0) && (!mParent.sendRequest(type,out.toByteArray(),mReplyHeader,mPrivateInput))) {
    return false;
  }
  if ((mPrivateOutput != null) && (mPrivateOutput.size() > 0))   returnValue=true;
  return returnValue;
}
