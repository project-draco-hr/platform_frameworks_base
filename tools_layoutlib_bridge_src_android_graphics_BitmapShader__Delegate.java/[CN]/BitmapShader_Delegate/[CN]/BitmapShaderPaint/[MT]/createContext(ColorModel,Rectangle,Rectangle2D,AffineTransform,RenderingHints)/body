{
  AffineTransform canvasMatrix;
  try {
    canvasMatrix=xform.createInverse();
  }
 catch (  NoninvertibleTransformException e) {
    Bridge.getLog().fidelityWarning(LayoutLog.TAG_MATRIX_INVERSE,"Unable to inverse matrix in BitmapShader",e,null);
    canvasMatrix=new AffineTransform();
  }
  AffineTransform localMatrix=getLocalMatrix();
  try {
    localMatrix=localMatrix.createInverse();
  }
 catch (  NoninvertibleTransformException e) {
    Bridge.getLog().fidelityWarning(LayoutLog.TAG_MATRIX_INVERSE,"Unable to inverse matrix in BitmapShader",e,null);
    localMatrix=new AffineTransform();
  }
  if (!colorModel.isCompatibleRaster(mImage.getRaster())) {
    colorModel=ColorModel.getRGBdefault();
  }
  return new BitmapShaderContext(canvasMatrix,localMatrix,colorModel);
}
