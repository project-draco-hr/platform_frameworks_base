{
  if (mMediaPlayer == null || !mMediaPlayer.isPlaying()) {
    if (mMediaPlayer == null) {
      try {
        mMediaPlayer=new MediaPlayer();
        if (mSession != 0) {
          mMediaPlayer.setAudioSessionId(mSession);
          Log.d(TAG,"mMediaPlayer.setAudioSessionId(): " + mSession);
        }
        if (mFileName.equals("")) {
          Log.d(TAG,"Playing from resource");
          AssetFileDescriptor afd=mContext.getResources().openRawResourceFd(mFileResId);
          mMediaPlayer.setDataSource(afd.getFileDescriptor(),afd.getStartOffset(),afd.getLength());
          afd.close();
        }
 else {
          Log.d(TAG,"Playing file: " + mFileName);
          mMediaPlayer.setDataSource(mFileName);
        }
        mMediaPlayer.setAudioStreamType(mStreamType);
        mMediaPlayer.prepare();
        mMediaPlayer.setLooping(true);
      }
 catch (      IOException ex) {
        Log.e(TAG,"mMediaPlayercreate failed:",ex);
        mMediaPlayer=null;
      }
catch (      IllegalArgumentException ex) {
        Log.e(TAG,"mMediaPlayercreate failed:",ex);
        mMediaPlayer=null;
      }
catch (      SecurityException ex) {
        Log.e(TAG,"mMediaPlayercreate failed:",ex);
        mMediaPlayer=null;
      }
      if (mMediaPlayer != null) {
        mMediaPlayer.setAuxEffectSendLevel(mSendLevel);
        mMediaPlayer.attachAuxEffect(mEffectId);
        mMediaPlayer.setOnCompletionListener(new MediaPlayer.OnCompletionListener(){
          public void onCompletion(          MediaPlayer mp){
            updatePlayPauseButton();
          }
        }
);
        mSessionText.setText("Session: " + Integer.toString(mMediaPlayer.getAudioSessionId()));
      }
    }
    if (mMediaPlayer != null) {
      mMediaPlayer.start();
    }
  }
 else {
    mMediaPlayer.pause();
  }
  updatePlayPauseButton();
}
