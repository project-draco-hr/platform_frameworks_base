{
  if (sBindings.size() > 0) {
    return;
  }
  String webContentKeyBindingsString=Settings.Secure.getString(mWebView.getContext().getContentResolver(),Settings.Secure.ACCESSIBILITY_WEB_CONTENT_KEY_BINDINGS);
  SimpleStringSplitter semiColonSplitter=new SimpleStringSplitter(';');
  semiColonSplitter.setString(webContentKeyBindingsString);
  ArrayList<AccessibilityWebContentKeyBinding> bindings=new ArrayList<AccessibilityWebContentKeyBinding>();
  while (semiColonSplitter.hasNext()) {
    String bindingString=semiColonSplitter.next();
    if (TextUtils.isEmpty(bindingString)) {
      Log.e(LOG_TAG,"Malformed Web content key binding: " + webContentKeyBindingsString);
      continue;
    }
    String[] keyValueArray=bindingString.split("=");
    if (keyValueArray.length != 2) {
      Log.e(LOG_TAG,"Disregarding malformed Web content key binding: " + bindingString);
      continue;
    }
    try {
      SimpleStringSplitter colonSplitter=new SimpleStringSplitter(':');
      int key=Integer.decode(keyValueArray[0].trim());
      String[] actionStrings=keyValueArray[1].split(":");
      int[] actions=new int[actionStrings.length];
      for (int i=0, count=actions.length; i < count; i++) {
        actions[i]=Integer.decode(actionStrings[i].trim());
      }
      bindings.add(new AccessibilityWebContentKeyBinding(key,actions));
    }
 catch (    NumberFormatException nfe) {
      Log.e(LOG_TAG,"Disregarding malformed key binding: " + bindingString);
    }
  }
  for (  AccessibilityWebContentKeyBinding binding : bindings) {
    sBindings.put(binding.getKey(),binding);
  }
}
