{
  if (mAccessibilityJSONObject == null) {
    mAccessibilityJSONObject=new JSONObject();
  }
 else {
    final Iterator<?> keys=mAccessibilityJSONObject.keys();
    while (keys.hasNext()) {
      keys.next();
      keys.remove();
    }
  }
  try {
    mAccessibilityJSONObject.accumulate("action",action);
switch (action) {
case AccessibilityNodeInfo.ACTION_NEXT_AT_MOVEMENT_GRANULARITY:
case AccessibilityNodeInfo.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY:
      final int granularity=arguments.getInt(AccessibilityNodeInfo.ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT);
    mAccessibilityJSONObject.accumulate("granularity",granularity);
  break;
case AccessibilityNodeInfo.ACTION_NEXT_HTML_ELEMENT:
case AccessibilityNodeInfo.ACTION_PREVIOUS_HTML_ELEMENT:
final String element=arguments.getString(AccessibilityNodeInfo.ACTION_ARGUMENT_HTML_ELEMENT_STRING);
mAccessibilityJSONObject.accumulate("element",element);
break;
}
}
 catch (JSONException e) {
return false;
}
final String jsonString=mAccessibilityJSONObject.toString();
final String jsCode=String.format(ACCESSIBILITY_ANDROIDVOX_TEMPLATE,jsonString);
return mCallback.performAction(mWebView,jsCode);
}
