{
  final int what=msg.what & MSG_MASK;
switch (what) {
case MSG_ICON:
{
      final int index=msg.what & INDEX_MASK;
      final int viewIndex=mList.getViewIndex(index);
switch (msg.arg1) {
case OP_SET_ICON:
{
          StatusBarIcon icon=(StatusBarIcon)msg.obj;
          StatusBarIcon old=mList.getIcon(index);
          if (old == null) {
            mList.setIcon(index,icon);
            mCallbacks.addIcon(mList.getSlot(index),index,viewIndex,icon);
          }
 else {
            mList.setIcon(index,icon);
            mCallbacks.updateIcon(mList.getSlot(index),index,viewIndex,old,icon);
          }
          break;
        }
case OP_REMOVE_ICON:
      if (mList.getIcon(index) != null) {
        mList.removeIcon(index);
        mCallbacks.removeIcon(mList.getSlot(index),index,viewIndex);
      }
    break;
}
break;
}
case MSG_DISABLE:
mCallbacks.disable(msg.arg1,msg.arg2,true);
break;
case MSG_EXPAND_NOTIFICATIONS:
mCallbacks.animateExpandNotificationsPanel();
break;
case MSG_COLLAPSE_PANELS:
mCallbacks.animateCollapsePanels(0);
break;
case MSG_EXPAND_SETTINGS:
mCallbacks.animateExpandSettingsPanel((String)msg.obj);
break;
case MSG_SET_SYSTEMUI_VISIBILITY:
mCallbacks.setSystemUiVisibility(msg.arg1,msg.arg2);
break;
case MSG_TOP_APP_WINDOW_CHANGED:
mCallbacks.topAppWindowChanged(msg.arg1 != 0);
break;
case MSG_SHOW_IME_BUTTON:
mCallbacks.setImeWindowStatus((IBinder)msg.obj,msg.arg1,msg.arg2,msg.getData().getBoolean(SHOW_IME_SWITCHER_KEY,false));
break;
case MSG_SHOW_RECENT_APPS:
mCallbacks.showRecentApps(msg.arg1 != 0);
break;
case MSG_HIDE_RECENT_APPS:
mCallbacks.hideRecentApps(msg.arg1 != 0,msg.arg2 != 0);
break;
case MSG_TOGGLE_RECENT_APPS:
mCallbacks.toggleRecentApps();
break;
case MSG_PRELOAD_RECENT_APPS:
mCallbacks.preloadRecentApps();
break;
case MSG_CANCEL_PRELOAD_RECENT_APPS:
mCallbacks.cancelPreloadRecentApps();
break;
case MSG_TOGGLE_KEYBOARD_SHORTCUTS:
mCallbacks.toggleKeyboardShortcutsMenu();
break;
case MSG_SET_WINDOW_STATE:
mCallbacks.setWindowState(msg.arg1,msg.arg2);
break;
case MSG_BUZZ_BEEP_BLINKED:
mCallbacks.buzzBeepBlinked();
break;
case MSG_NOTIFICATION_LIGHT_OFF:
mCallbacks.notificationLightOff();
break;
case MSG_NOTIFICATION_LIGHT_PULSE:
mCallbacks.notificationLightPulse((Integer)msg.obj,msg.arg1,msg.arg2);
break;
case MSG_SHOW_SCREEN_PIN_REQUEST:
mCallbacks.showScreenPinningRequest();
break;
case MSG_APP_TRANSITION_PENDING:
mCallbacks.appTransitionPending();
break;
case MSG_APP_TRANSITION_CANCELLED:
mCallbacks.appTransitionCancelled();
break;
case MSG_APP_TRANSITION_STARTING:
Pair<Long,Long> data=(Pair<Long,Long>)msg.obj;
mCallbacks.appTransitionStarting(data.first,data.second);
break;
case MSG_ASSIST_DISCLOSURE:
mCallbacks.showAssistDisclosure();
break;
case MSG_START_ASSIST:
mCallbacks.startAssist((Bundle)msg.obj);
break;
case MSG_CAMERA_LAUNCH_GESTURE:
mCallbacks.onCameraLaunchGestureDetected(msg.arg1);
break;
}
}
