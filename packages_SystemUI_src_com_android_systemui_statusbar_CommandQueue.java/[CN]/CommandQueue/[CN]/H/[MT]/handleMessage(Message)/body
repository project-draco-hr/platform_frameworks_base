{
  final int what=msg.what & MSG_MASK;
switch (what) {
case MSG_ICON:
{
      final int index=msg.what & INDEX_MASK;
      final int viewIndex=mList.getViewIndex(index);
switch (msg.arg1) {
case OP_SET_ICON:
{
          StatusBarIcon icon=(StatusBarIcon)msg.obj;
          StatusBarIcon old=mList.getIcon(index);
          if (old == null) {
            mList.setIcon(index,icon);
            mCallbacks.addIcon(mList.getSlot(index),index,viewIndex,icon);
          }
 else {
            mList.setIcon(index,icon);
            mCallbacks.updateIcon(mList.getSlot(index),index,viewIndex,old,icon);
          }
          break;
        }
case OP_REMOVE_ICON:
      mList.removeIcon(index);
    mCallbacks.removeIcon(mList.getSlot(index),index,viewIndex);
  break;
}
break;
}
case MSG_ADD_NOTIFICATION:
{
final NotificationQueueEntry ne=(NotificationQueueEntry)msg.obj;
mCallbacks.addNotification(ne.key,ne.notification);
break;
}
case MSG_UPDATE_NOTIFICATION:
{
final NotificationQueueEntry ne=(NotificationQueueEntry)msg.obj;
mCallbacks.updateNotification(ne.key,ne.notification);
break;
}
case MSG_REMOVE_NOTIFICATION:
{
mCallbacks.removeNotification((IBinder)msg.obj);
break;
}
case MSG_DISABLE:
mCallbacks.disable(msg.arg1);
break;
case MSG_SET_VISIBILITY:
if (msg.arg1 == OP_EXPAND) {
mCallbacks.animateExpand();
}
 else {
mCallbacks.animateCollapse();
}
}
}
