{
  mKeyStore.load(null,null);
{
    final String privateKeyAlias=Credentials.USER_PRIVATE_KEY + TEST_ALIAS_1;
    assertTrue(mAndroidKeyStore.generate(privateKeyAlias,android.security.KeyStore.UID_SELF,NativeCrypto.EVP_PKEY_RSA,1024,android.security.KeyStore.FLAG_NONE,null));
    X509Certificate cert=generateCertificate(mAndroidKeyStore,TEST_ALIAS_1,TEST_SERIAL_1,TEST_DN_1,NOW,NOW_PLUS_10_YEARS);
    assertTrue(mAndroidKeyStore.put(Credentials.USER_CERTIFICATE + TEST_ALIAS_1,cert.getEncoded(),android.security.KeyStore.UID_SELF,android.security.KeyStore.FLAG_NONE));
  }
{
    Entry entry=mKeyStore.getEntry(TEST_ALIAS_1,null);
    try {
      mKeyStore.setEntry(TEST_ALIAS_1,entry,new KeyStoreParameter.Builder(getContext()).setEncryptionRequired(true).build());
      fail("Should not allow setting of Entry without unlocked keystore");
    }
 catch (    KeyStoreException success) {
    }
    assertTrue(mAndroidKeyStore.password("1111"));
    assertTrue(mAndroidKeyStore.isUnlocked());
    mKeyStore.setEntry(TEST_ALIAS_1,entry,new KeyStoreParameter.Builder(getContext()).setEncryptionRequired(true).build());
  }
}
