{
  State orgState=mStateStack[mStateStackTopIndex].state;
  boolean recordLogMsg=mSm.recordLogRec(mMsg) && (msg.obj != mSmHandlerObj);
  if (mLogRecords.logOnlyTransitions()) {
    if (mDestState != null) {
      mLogRecords.add(mSm,mMsg,mSm.getLogRecString(mMsg),msgProcessedState,orgState,mDestState);
    }
  }
 else   if (recordLogMsg) {
    mLogRecords.add(mSm,mMsg,mSm.getLogRecString(mMsg),msgProcessedState,orgState,mDestState);
  }
  State destState=mDestState;
  if (destState != null) {
    while (true) {
      if (mDbg)       mSm.log("handleMessage: new destination call exit/enter");
      StateInfo commonStateInfo=setupTempStateStackWithStatesToEnter(destState);
      mTransitionInProgress=true;
      invokeExitMethods(commonStateInfo);
      int stateStackEnteringIndex=moveTempStateStackToStateStack();
      invokeEnterMethods(stateStackEnteringIndex);
      moveDeferredMessageAtFrontOfQueue();
      if (destState != mDestState) {
        destState=mDestState;
      }
 else {
        break;
      }
    }
    mDestState=null;
  }
  if (destState != null) {
    if (destState == mQuittingState) {
      mSm.onQuitting();
      cleanupAfterQuitting();
    }
 else     if (destState == mHaltingState) {
      mSm.onHalting();
    }
  }
}
