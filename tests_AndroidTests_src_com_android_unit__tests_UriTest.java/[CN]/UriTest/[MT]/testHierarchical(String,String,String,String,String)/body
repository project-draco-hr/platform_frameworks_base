{
  StringBuilder sb=new StringBuilder();
  if (authority != null) {
    sb.append("//").append(authority);
  }
  if (path != null) {
    sb.append(path);
  }
  if (query != null) {
    sb.append('?').append(query);
  }
  String ssp=sb.toString();
  if (scheme != null) {
    sb.insert(0,scheme + ":");
  }
  if (fragment != null) {
    sb.append('#').append(fragment);
  }
  String uriString=sb.toString();
  Uri uri=Uri.parse(uriString);
  compareHierarchical(uriString,ssp,uri,scheme,authority,path,query,fragment);
  compareHierarchical(uriString,ssp,uri,scheme,authority,path,query,fragment);
  uri=uri.buildUpon().build();
  compareHierarchical(uriString,ssp,uri,scheme,authority,path,query,fragment);
  compareHierarchical(uriString,ssp,uri,scheme,authority,path,query,fragment);
  Uri built=new Uri.Builder().scheme(scheme).encodedAuthority(authority).encodedPath(path).encodedQuery(query).encodedFragment(fragment).build();
  compareHierarchical(uriString,ssp,built,scheme,authority,path,query,fragment);
  compareHierarchical(uriString,ssp,built,scheme,authority,path,query,fragment);
  built=new Uri.Builder().scheme(scheme).authority(authority).path(path).query(query).fragment(fragment).build();
  compareHierarchical(uriString,ssp,built,scheme,authority,path,query,fragment);
  compareHierarchical(uriString,ssp,built,scheme,authority,path,query,fragment);
  built=built.buildUpon().build();
  compareHierarchical(uriString,ssp,built,scheme,authority,path,query,fragment);
  compareHierarchical(uriString,ssp,built,scheme,authority,path,query,fragment);
}
