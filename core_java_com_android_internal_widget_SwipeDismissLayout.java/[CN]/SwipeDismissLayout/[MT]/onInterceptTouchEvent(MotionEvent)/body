{
  ev.offsetLocation(mTranslationX,0);
switch (ev.getActionMasked()) {
case MotionEvent.ACTION_DOWN:
    resetMembers();
  mDownX=ev.getRawX();
mDownY=ev.getRawY();
mActiveTouchId=ev.getPointerId(0);
mVelocityTracker=VelocityTracker.obtain();
mVelocityTracker.addMovement(ev);
break;
case MotionEvent.ACTION_POINTER_DOWN:
int actionIndex=ev.getActionIndex();
mActiveTouchId=ev.getPointerId(actionIndex);
break;
case MotionEvent.ACTION_POINTER_UP:
actionIndex=ev.getActionIndex();
int pointerId=ev.getPointerId(actionIndex);
if (pointerId == mActiveTouchId) {
int newActionIndex=actionIndex == 0 ? 1 : 0;
mActiveTouchId=ev.getPointerId(newActionIndex);
}
break;
case MotionEvent.ACTION_CANCEL:
case MotionEvent.ACTION_UP:
resetMembers();
break;
case MotionEvent.ACTION_MOVE:
if (mVelocityTracker == null || mDiscardIntercept) {
break;
}
int pointerIndex=ev.findPointerIndex(mActiveTouchId);
if (pointerIndex == -1) {
Log.e(TAG,"Invalid pointer index: ignoring.");
mDiscardIntercept=true;
break;
}
float dx=ev.getRawX() - mDownX;
float x=ev.getX(pointerIndex);
float y=ev.getY(pointerIndex);
if (dx != 0 && canScroll(this,false,dx,x,y)) {
mDiscardIntercept=true;
break;
}
updateSwiping(ev);
break;
}
return !mDiscardIntercept && mSwiping;
}
