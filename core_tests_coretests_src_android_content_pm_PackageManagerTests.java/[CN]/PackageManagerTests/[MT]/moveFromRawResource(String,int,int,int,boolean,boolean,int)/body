{
  int origDefaultLoc=getDefaultInstallLoc();
  InstallParams ip=null;
  try {
    setInstallLoc(PackageHelper.APP_INSTALL_AUTO);
    ip=installFromRawResource("install.apk",rawResId,installFlags,false,false,-1,PackageInfo.INSTALL_LOCATION_UNSPECIFIED);
    ApplicationInfo oldAppInfo=getPm().getApplicationInfo(ip.pkg.packageName,0);
    if (fail) {
      assertTrue(invokeMovePackageFail(ip.pkg.packageName,moveFlags,result));
      ApplicationInfo info=getPm().getApplicationInfo(ip.pkg.packageName,0);
      assertNotNull(info);
      assertEquals(oldAppInfo.flags,info.flags);
    }
 else {
      MoveReceiver receiver=new MoveReceiver(ip.pkg.packageName);
      boolean retCode=invokeMovePackage(ip.pkg.packageName,moveFlags,receiver);
      assertTrue(retCode);
      ApplicationInfo info=getPm().getApplicationInfo(ip.pkg.packageName,0);
      assertNotNull("ApplicationInfo for recently installed application should exist",info);
      if ((moveFlags & PackageManager.MOVE_INTERNAL) != 0) {
        assertTrue("ApplicationInfo.FLAG_EXTERNAL_STORAGE flag should NOT be set",(info.flags & ApplicationInfo.FLAG_EXTERNAL_STORAGE) == 0);
        assertTrue("ApplicationInfo.nativeLibraryDir should start with " + info.dataDir,info.nativeLibraryDir.startsWith(info.dataDir));
      }
 else       if ((moveFlags & PackageManager.MOVE_EXTERNAL_MEDIA) != 0) {
        assertTrue("ApplicationInfo.FLAG_EXTERNAL_STORAGE flag should be set",(info.flags & ApplicationInfo.FLAG_EXTERNAL_STORAGE) != 0);
        assertTrue("ApplicationInfo.nativeLibraryDir should start with " + SECURE_CONTAINERS_PREFIX,info.nativeLibraryDir.startsWith(SECURE_CONTAINERS_PREFIX));
        final File nativeLibSymLink=new File(info.dataDir,"lib");
        assertTrue("The data directory should have a 'lib' symlink that points to the ASEC container",nativeLibSymLink.getCanonicalPath().startsWith(SECURE_CONTAINERS_PREFIX));
      }
    }
  }
 catch (  NameNotFoundException e) {
    failStr("Pkg hasnt been installed correctly");
  }
catch (  Exception e) {
    failStr("Failed with exception : " + e);
  }
 finally {
    if (ip != null) {
      cleanUpInstall(ip);
    }
    setInstallLoc(origDefaultLoc);
  }
}
