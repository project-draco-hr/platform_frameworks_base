{
  PackageManager pm=mContext.getPackageManager();
  File filesDir=mContext.getFilesDir();
  File outFile=new File(filesDir,outFileName);
  Uri packageURI=getInstallablePackage(rawResId,outFile);
  PackageParser.Package pkg=parsePackage(packageURI);
  assertNotNull(pkg);
  if ((flags & PackageManager.INSTALL_REPLACE_EXISTING) == 0) {
    try {
      ApplicationInfo appInfo=pm.getApplicationInfo(pkg.packageName,PackageManager.GET_UNINSTALLED_PACKAGES);
      GenericReceiver receiver=new DeleteReceiver(pkg.packageName);
      invokeDeletePackage(packageURI,0,pkg.packageName,receiver);
    }
 catch (    NameNotFoundException e1) {
    }
catch (    Exception e) {
      failStr(e);
    }
  }
  InstallParams ip=null;
  try {
    if (fail) {
      assertTrue(invokeInstallPackageFail(packageURI,flags,pkg.packageName,result));
      if ((flags & PackageManager.INSTALL_REPLACE_EXISTING) == 0) {
        assertNotInstalled(pkg.packageName);
      }
    }
 else {
      InstallReceiver receiver=new InstallReceiver(pkg.packageName);
      assertTrue(invokeInstallPackage(packageURI,flags,pkg.packageName,receiver));
      assertInstall(pkg,flags,expInstallLocation);
      ip=new InstallParams(pkg,outFileName,packageURI);
    }
    return ip;
  }
 catch (  Exception e) {
    failStr("Failed with exception : " + e);
  }
 finally {
    if (cleanUp) {
      cleanUpInstall(ip);
    }
  }
  return ip;
}
