{
  boolean inAnimTests=mAnimTests != null;
  Resources resources=mWeb.getResources();
  String animFramerateString=resources.getString(R.string.animation_framerate);
  for (  Map.Entry<String,Double> e : mSingleStats.entrySet()) {
    String name=e.getKey();
    if (inAnimTests) {
      if (name.equals(animFramerateString)) {
        String fullName=ANIM_TEST_NAMES[mAnimTestNr] + " " + name;
        fullName+=mDoubleBuffering ? " tiled" : " webkit";
        if (!mAnimDataMap.containsKey(fullName)) {
          mAnimDataMap.put(fullName,new AnimStat());
        }
        AnimStat statVals=mAnimDataMap.get(fullName);
        statVals.aggVal+=e.getValue();
        statVals.aggSqrVal+=e.getValue() * e.getValue();
        statVals.count+=1;
      }
    }
 else {
      double aggVal=mDataMap.containsKey(name) ? mDataMap.get(name) : 0;
      mDataMap.put(name,aggVal + e.getValue());
    }
  }
  if (inAnimTests) {
    return;
  }
  mCount++;
  for (int metricIndex=0; metricIndex < Metrics.length; metricIndex++) {
    for (int statIndex=0; statIndex < Stats.length; statIndex++) {
      String metricLabel=resources.getString(Metrics[metricIndex].getLabelId());
      String statLabel=resources.getString(Stats[statIndex].getLabelId());
      String label=metricLabel + " " + statLabel;
      double aggVal=mDataMap.containsKey(label) ? mDataMap.get(label) : 0;
      aggVal+=mStats[metricIndex][statIndex];
      mDataMap.put(label,aggVal);
    }
  }
}
