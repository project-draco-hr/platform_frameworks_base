{
  FileInputStream fin=new FileInputStream(cache);
  BufferedInputStream bin=new BufferedInputStream(fin,32 * 1024);
  DataInputStream in=new DataInputStream(bin);
  int version=in.readInt();
  if (version == ANCESTRAL_RECORD_VERSION) {
    mStoredSdkVersion=in.readInt();
    mStoredIncrementalVersion=in.readUTF();
    int nPackages=in.readInt();
    if (nPackages > 0) {
      HashMap<String,Metadata> restoredMetadata=new HashMap<String,Metadata>(nPackages);
      ArrayList<byte[]> hashes=null;
      for (int pack=0; pack < nPackages; pack++) {
        final String name=in.readUTF();
        final int versionCode=in.readInt();
        final int nHashes=in.readInt();
        if (nHashes > 0) {
          hashes=new ArrayList<byte[]>(nHashes);
          for (int i=0; i < nHashes; i++) {
            int len=in.readInt();
            byte[] hash=new byte[len];
            in.read(hash);
            hashes.add(hash);
          }
        }
        restoredMetadata.put(name,new Metadata(versionCode,hashes));
      }
      mRestoredSignatures=restoredMetadata;
    }
  }
}
