{
  List<Keyphrase> keyphrases=new ArrayList<>();
  String selectQuery="SELECT  * FROM " + KeyphraseContract.TABLE + " WHERE "+ KeyphraseContract.KEY_SOUND_MODEL_ID+ " = '"+ modelId+ "'";
  Cursor c=db.rawQuery(selectQuery,null);
  if (c.moveToFirst()) {
    do {
      int id=c.getInt(c.getColumnIndex(KeyphraseContract.KEY_ID));
      int modes=c.getInt(c.getColumnIndex(KeyphraseContract.KEY_RECOGNITION_MODES));
      int[] users=getArrayForCommaSeparatedString(c.getString(c.getColumnIndex(KeyphraseContract.KEY_USERS)));
      String locale=c.getString(c.getColumnIndex(KeyphraseContract.KEY_LOCALE));
      String hintText=c.getString(c.getColumnIndex(KeyphraseContract.KEY_HINT_TEXT));
      if (users == null) {
        Slog.w(TAG,"Ignoring keyphrase since it doesn't specify users");
        continue;
      }
      boolean isAvailableForCurrentUser=false;
      int currentUser=mUserManager.getUserHandle();
      for (      int user : users) {
        if (currentUser == user) {
          isAvailableForCurrentUser=true;
          break;
        }
      }
      if (!isAvailableForCurrentUser) {
        Slog.w(TAG,"Ignoring keyphrase since it's not for the current user");
        continue;
      }
      keyphrases.add(new Keyphrase(id,modes,locale,hintText,users));
    }
 while (c.moveToNext());
  }
  Keyphrase[] keyphraseArr=new Keyphrase[keyphrases.size()];
  keyphrases.toArray(keyphraseArr);
  c.close();
  return keyphraseArr;
}
