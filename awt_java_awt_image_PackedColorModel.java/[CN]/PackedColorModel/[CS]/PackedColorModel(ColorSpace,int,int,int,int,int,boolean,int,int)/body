{
  super(bits,createBits(rmask,gmask,bmask,amask),space,(amask == 0 ? false : true),isAlphaPremultiplied,trans,validateTransferType(transferType));
  if (pixel_bits < 1 || pixel_bits > 32) {
    throw new IllegalArgumentException(Messages.getString("awt.236"));
  }
  if (cs.getType() != ColorSpace.TYPE_RGB) {
    throw new IllegalArgumentException(Messages.getString("awt.239"));
  }
  for (int i=0; i < numColorComponents; i++) {
    if (cs.getMinValue(i) != 0.0f || cs.getMaxValue(i) != 1.0f) {
      throw new IllegalArgumentException(Messages.getString("awt.23A"));
    }
  }
  componentMasks=new int[numComponents];
  componentMasks[0]=rmask;
  componentMasks[1]=gmask;
  componentMasks[2]=bmask;
  if (hasAlpha) {
    componentMasks[3]=amask;
    if (this.bits[3] == 1) {
      transparency=Transparency.BITMASK;
    }
  }
  parseComponents();
}
