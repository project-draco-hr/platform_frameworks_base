{
  setupPassword();
  mKeyStore.load(null,null);
  setupKey();
  Entry e=mKeyStore.getEntry(TEST_ALIAS_1,null);
  assertNotNull(e);
  assertTrue(e instanceof PrivateKeyEntry);
  PrivateKeyEntry privEntry=(PrivateKeyEntry)e;
  PrivateKey privKey=privEntry.getPrivateKey();
  assertNotNull(privKey);
  PublicKey pubKey=privEntry.getCertificate().getPublicKey();
  Cipher c=Cipher.getInstance("RSA/ECB/PKCS1Padding");
  c.init(Cipher.WRAP_MODE,pubKey);
  byte[] expectedKey=new byte[]{0x00,0x05,(byte)0xAA,(byte)0x0A5,(byte)0xFF,0x55,0x0A};
  SecretKey expectedSecret=new SecretKeySpec(expectedKey,"AES");
  byte[] wrappedExpected=c.wrap(expectedSecret);
  c.init(Cipher.UNWRAP_MODE,privKey);
  SecretKey actualSecret=(SecretKey)c.unwrap(wrappedExpected,"AES",Cipher.SECRET_KEY);
  assertEquals(Arrays.toString(expectedSecret.getEncoded()),Arrays.toString(actualSecret.getEncoded()));
}
