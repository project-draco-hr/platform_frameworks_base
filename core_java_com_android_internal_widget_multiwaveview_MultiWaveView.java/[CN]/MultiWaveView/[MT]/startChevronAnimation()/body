{
  final float r=mHandleDrawable.getWidth() * 0.4f;
  final float chevronAnimationDistance=mOuterRadius * 0.9f / 2.0f;
  final float from[][]={{-r,0},{+r,0},{0,-r},{0,+r}};
  final float to[][]={{-chevronAnimationDistance,0},{chevronAnimationDistance,0},{0,-chevronAnimationDistance},{0,+chevronAnimationDistance}};
  mChevronAnimations.clear();
  final float startScale=0.5f;
  final float endScale=2.0f;
  for (int direction=0; direction < 4; direction++) {
    for (int count=0; count < mFeedbackCount; count++) {
      int delay=count * CHEVRON_INCREMENTAL_DELAY;
      final TargetDrawable icon=mChevronDrawables.get(direction * mFeedbackCount + count);
      if (icon == null) {
        continue;
      }
      mChevronAnimations.add(Tweener.to(icon,CHEVRON_ANIMATION_DURATION,"ease",mChevronAnimationInterpolator,"delay",delay,"x",new float[]{from[direction][0],to[direction][0]},"y",new float[]{from[direction][1],to[direction][1]},"alpha",new float[]{1.0f,0.0f},"scaleX",new float[]{startScale,endScale},"scaleY",new float[]{startScale,endScale},"onUpdate",mUpdateListener));
    }
  }
}
