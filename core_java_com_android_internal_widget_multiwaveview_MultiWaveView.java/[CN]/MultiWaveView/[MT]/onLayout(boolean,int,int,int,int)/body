{
  super.onLayout(changed,left,top,right,bottom);
  final int width=right - left;
  final int height=bottom - top;
  mWaveCenterX=mHorizontalOffset + Math.max(width,mOuterRing.getWidth()) / 2;
  mWaveCenterY=mVerticalOffset + Math.max(height,mOuterRing.getHeight()) / 2;
  mHandleDrawable.setX(mWaveCenterX);
  mHandleDrawable.setY(mWaveCenterY);
  mOuterRing.setX(mWaveCenterX);
  mOuterRing.setY(Math.max(mWaveCenterY,mWaveCenterY));
  mOuterRing.setAlpha(0.0f);
  if (mOuterRadius == 0.0f) {
    mOuterRadius=0.5f * (float)Math.sqrt(dist2(mWaveCenterX,mWaveCenterY));
  }
  if (mHitRadius == 0.0f) {
    mHitRadius=mTargetDrawables.get(0).getWidth() / 2.0f;
  }
  if (mSnapMargin == 0.0f) {
    mSnapMargin=TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,SNAP_MARGIN_DEFAULT,getContext().getResources().getDisplayMetrics());
  }
  for (int i=0; i < mTargetDrawables.size(); i++) {
    final TargetDrawable targetIcon=mTargetDrawables.get(i);
    double angle=-2.0f * Math.PI * i / mTargetDrawables.size();
    float xPosition=mWaveCenterX + mOuterRadius * (float)Math.cos(angle);
    float yPosition=mWaveCenterY + mOuterRadius * (float)Math.sin(angle);
    targetIcon.setX(xPosition);
    targetIcon.setY(yPosition);
    targetIcon.setAlpha(0.0f);
  }
  hideChevrons();
  hideTargets(false);
  if (DEBUG)   dump();
}
