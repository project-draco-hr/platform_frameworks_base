{
  String fName=getName();
  assertNotNull(fName);
  Method method=null;
  try {
    method=getClass().getMethod(fName,(Class[])null);
  }
 catch (  NoSuchMethodException e) {
    fail("Method \"" + fName + "\" not found");
  }
  if (!Modifier.isPublic(method.getModifiers())) {
    fail("Method \"" + fName + "\" should be public");
  }
  int runCount=1;
  if (method.isAnnotationPresent(FlakyTest.class)) {
    runCount=method.getAnnotation(FlakyTest.class).tolerance();
  }
  if (method.isAnnotationPresent(UiThreadTest.class)) {
    final int tolerance=runCount;
    final Method testMethod=method;
    final Throwable[] exceptions=new Throwable[1];
    getInstrumentation().runOnMainSync(new Runnable(){
      public void run(){
        try {
          runMethod(testMethod,tolerance);
        }
 catch (        Throwable throwable) {
          exceptions[0]=throwable;
        }
      }
    }
);
    if (exceptions[0] != null) {
      throw exceptions[0];
    }
  }
 else {
    runMethod(method,runCount);
  }
}
