{
  super.onCreate(savedInstanceState);
  setContentView(R.layout.media_route_controller_dialog);
  mVolumeLayout=(LinearLayout)findViewById(R.id.media_route_volume_layout);
  mVolumeSlider=(SeekBar)findViewById(R.id.media_route_volume_slider);
  mVolumeSlider.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener(){
    private final Runnable mStopTrackingTouch=new Runnable(){
      @Override public void run(){
        if (mVolumeSliderTouched) {
          mVolumeSliderTouched=false;
          updateVolume();
        }
      }
    }
;
    @Override public void onStartTrackingTouch(    SeekBar seekBar){
      if (mVolumeSliderTouched) {
        mVolumeSlider.removeCallbacks(mStopTrackingTouch);
      }
 else {
        mVolumeSliderTouched=true;
      }
    }
    @Override public void onStopTrackingTouch(    SeekBar seekBar){
      mVolumeSlider.postDelayed(mStopTrackingTouch,VOLUME_UPDATE_DELAY_MILLIS);
    }
    @Override public void onProgressChanged(    SeekBar seekBar,    int progress,    boolean fromUser){
      if (fromUser) {
        mRoute.requestSetVolume(progress);
      }
    }
  }
);
  mDisconnectButton=(Button)findViewById(R.id.media_route_disconnect_button);
  mDisconnectButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      if (mRoute.isSelected()) {
        mRouter.getDefaultRoute().select();
      }
      dismiss();
    }
  }
);
  mCreated=true;
  if (update()) {
    mControlView=onCreateMediaControlView(savedInstanceState);
    FrameLayout controlFrame=(FrameLayout)findViewById(R.id.media_route_control_frame);
    if (mControlView != null) {
      controlFrame.addView(mControlView);
      controlFrame.setVisibility(View.VISIBLE);
    }
 else {
      controlFrame.setVisibility(View.GONE);
    }
  }
}
