{
  mTempAccessibilityServiceInfoList.clear();
  List<ResolveInfo> installedServices=mPackageManager.queryIntentServicesAsUser(new Intent(AccessibilityService.SERVICE_INTERFACE),PackageManager.GET_SERVICES | PackageManager.GET_META_DATA | PackageManager.MATCH_DISABLED_UNTIL_USED_COMPONENTS| PackageManager.MATCH_DIRECT_BOOT_AWARE| PackageManager.MATCH_DIRECT_BOOT_UNAWARE,mCurrentUserId);
  for (int i=0, count=installedServices.size(); i < count; i++) {
    ResolveInfo resolveInfo=installedServices.get(i);
    ServiceInfo serviceInfo=resolveInfo.serviceInfo;
    if (!android.Manifest.permission.BIND_ACCESSIBILITY_SERVICE.equals(serviceInfo.permission)) {
      Slog.w(LOG_TAG,"Skipping accessibilty service " + new ComponentName(serviceInfo.packageName,serviceInfo.name).flattenToShortString() + ": it does not require the permission "+ android.Manifest.permission.BIND_ACCESSIBILITY_SERVICE);
      continue;
    }
    AccessibilityServiceInfo accessibilityServiceInfo;
    try {
      accessibilityServiceInfo=new AccessibilityServiceInfo(resolveInfo,mContext);
      mTempAccessibilityServiceInfoList.add(accessibilityServiceInfo);
    }
 catch (    XmlPullParserException|IOException xppe) {
      Slog.e(LOG_TAG,"Error while initializing AccessibilityServiceInfo",xppe);
    }
  }
  if (!mTempAccessibilityServiceInfoList.equals(userState.mInstalledServices)) {
    userState.mInstalledServices.clear();
    userState.mInstalledServices.addAll(mTempAccessibilityServiceInfoList);
    mTempAccessibilityServiceInfoList.clear();
    return true;
  }
  mTempAccessibilityServiceInfoList.clear();
  return false;
}
