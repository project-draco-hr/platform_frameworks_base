{
  Map<ComponentName,Service> componentNameToServiceMap=userState.mComponentNameToServiceMap;
  boolean isUnlockingOrUnlocked=mContext.getSystemService(UserManager.class).isUserUnlockingOrUnlocked(userState.mUserId);
  for (int i=0, count=userState.mInstalledServices.size(); i < count; i++) {
    AccessibilityServiceInfo installedService=userState.mInstalledServices.get(i);
    ComponentName componentName=ComponentName.unflattenFromString(installedService.getId());
    Service service=componentNameToServiceMap.get(componentName);
    if (!isUnlockingOrUnlocked && !installedService.isDirectBootAware()) {
      Slog.d(LOG_TAG,"Ignoring non-encryption-aware service " + componentName);
      continue;
    }
    if (userState.mBindingServices.contains(componentName)) {
      continue;
    }
    if (userState.mEnabledServices.contains(componentName)) {
      if (service == null) {
        service=new Service(userState.mUserId,componentName,installedService);
      }
 else       if (userState.mBoundServices.contains(service)) {
        continue;
      }
      service.bindLocked();
    }
 else {
      if (service != null) {
        service.unbindLocked();
      }
    }
  }
  updateAccessibilityEnabledSetting(userState);
}
