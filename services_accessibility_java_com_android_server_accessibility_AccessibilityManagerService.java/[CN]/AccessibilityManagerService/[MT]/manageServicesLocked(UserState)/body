{
  Map<ComponentName,Service> componentNameToServiceMap=userState.mComponentNameToServiceMap;
  boolean isEnabled=userState.mIsAccessibilityEnabled;
  for (int i=0, count=userState.mInstalledServices.size(); i < count; i++) {
    AccessibilityServiceInfo installedService=userState.mInstalledServices.get(i);
    ComponentName componentName=ComponentName.unflattenFromString(installedService.getId());
    Service service=componentNameToServiceMap.get(componentName);
    if (isEnabled) {
      if (userState.mBindingServices.contains(componentName)) {
        continue;
      }
      if (userState.mEnabledServices.contains(componentName)) {
        if (service == null) {
          service=new Service(userState.mUserId,componentName,installedService);
        }
 else         if (userState.mBoundServices.contains(service)) {
          continue;
        }
        service.bindLocked();
      }
 else {
        if (service != null) {
          service.unbindLocked();
        }
      }
    }
 else {
      if (service != null) {
        service.unbindLocked();
      }
 else {
        userState.mBindingServices.remove(componentName);
      }
    }
  }
  if (isEnabled && userState.mBoundServices.isEmpty() && userState.mBindingServices.isEmpty()) {
    userState.mIsAccessibilityEnabled=false;
    final long identity=Binder.clearCallingIdentity();
    try {
      Settings.Secure.putIntForUser(mContext.getContentResolver(),Settings.Secure.ACCESSIBILITY_ENABLED,0,userState.mUserId);
    }
  finally {
      Binder.restoreCallingIdentity(identity);
    }
  }
}
