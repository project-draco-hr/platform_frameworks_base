{
  mSecurityPolicy.enforceCallingPermission(Manifest.permission.DUMP,FUNCTION_DUMP);
synchronized (mLock) {
    pw.println("ACCESSIBILITY MANAGER (dumpsys accessibility)");
    pw.println();
    final int userCount=mUserStates.size();
    for (int i=0; i < userCount; i++) {
      UserState userState=mUserStates.valueAt(i);
      pw.append("User state[attributes:{id=" + userState.mUserId);
      pw.append(", currentUser=" + (userState.mUserId == mCurrentUserId));
      pw.append(", accessibilityEnabled=" + userState.mIsAccessibilityEnabled);
      pw.append(", touchExplorationEnabled=" + userState.mIsTouchExplorationEnabled);
      pw.append(", displayMagnificationEnabled=" + userState.mIsDisplayMagnificationEnabled);
      if (userState.mUiAutomationService != null) {
        pw.append(", ");
        userState.mUiAutomationService.dump(fd,pw,args);
        pw.println();
      }
      pw.append("}");
      pw.println();
      pw.append("           services:{");
      final int serviceCount=userState.mBoundServices.size();
      for (int j=0; j < serviceCount; j++) {
        if (j > 0) {
          pw.append(", ");
          pw.println();
          pw.append("                     ");
        }
        Service service=userState.mBoundServices.get(j);
        service.dump(fd,pw,args);
      }
      pw.println("}]");
      pw.println();
    }
    final int windowCount=mSecurityPolicy.mWindows.size();
    for (int j=0; j < windowCount; j++) {
      if (j > 0) {
        pw.append(',');
        pw.println();
      }
      pw.append("Window[");
      AccessibilityWindowInfo window=mSecurityPolicy.mWindows.get(j);
      pw.append(window.toString());
      pw.append(']');
    }
  }
}
