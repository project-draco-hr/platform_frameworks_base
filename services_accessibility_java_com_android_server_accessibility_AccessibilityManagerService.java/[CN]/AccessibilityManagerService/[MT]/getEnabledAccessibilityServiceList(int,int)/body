{
  List<AccessibilityServiceInfo> result=null;
synchronized (mLock) {
    final int resolvedUserId=mSecurityPolicy.resolveCallingUserIdEnforcingPermissionsLocked(userId);
    UserState userState=getUserStateLocked(resolvedUserId);
    if (userState.isUiAutomationSuppressingOtherServices()) {
      return Collections.emptyList();
    }
    result=mEnabledServicesForFeedbackTempList;
    result.clear();
    List<Service> services=userState.mBoundServices;
    while (feedbackType != 0) {
      final int feedbackTypeBit=(1 << Integer.numberOfTrailingZeros(feedbackType));
      feedbackType&=~feedbackTypeBit;
      final int serviceCount=services.size();
      for (int i=0; i < serviceCount; i++) {
        Service service=services.get(i);
        if (!sFakeAccessibilityServiceComponentName.equals(service.mComponentName) && (service.mFeedbackType & feedbackTypeBit) != 0) {
          result.add(service.mAccessibilityServiceInfo);
        }
      }
    }
  }
  return result;
}
