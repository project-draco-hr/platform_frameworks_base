{
  final int type=message.what;
switch (type) {
case MSG_ON_GESTURE:
{
      final int gestureId=message.arg1;
      notifyGestureInternal(gestureId);
    }
  break;
case MSG_ON_KEY_EVENT:
{
  KeyEvent event=(KeyEvent)message.obj;
  final int policyFlags=message.arg1;
  notifyKeyEventInternal(event,policyFlags);
}
break;
case MSG_CLEAR_ACCESSIBILITY_CACHE:
{
notifyClearAccessibilityCacheInternal();
}
break;
case MSG_ON_KEY_EVENT_TIMEOUT:
{
PendingEvent eventState=(PendingEvent)message.obj;
setOnKeyEventResult(false,eventState.sequence);
}
break;
default :
{
throw new IllegalArgumentException("Unknown message: " + type);
}
}
}
