{
  ensureWindowsAvailableTimed();
synchronized (mLock) {
    final int resolvedUserId=mSecurityPolicy.resolveCallingUserIdEnforcingPermissionsLocked(UserHandle.USER_CURRENT);
    if (resolvedUserId != mCurrentUserId) {
      return null;
    }
    final boolean permissionGranted=mSecurityPolicy.canRetrieveWindowsLocked(this);
    if (!permissionGranted) {
      return null;
    }
    List<AccessibilityWindowInfo> windows=new ArrayList<>();
    final int windowCount=mSecurityPolicy.mWindows.size();
    for (int i=0; i < windowCount; i++) {
      AccessibilityWindowInfo window=mSecurityPolicy.mWindows.get(i);
      AccessibilityWindowInfo windowClone=AccessibilityWindowInfo.obtain(window);
      windowClone.setConnectionId(mId);
      windows.add(windowClone);
    }
    return windows;
  }
}
