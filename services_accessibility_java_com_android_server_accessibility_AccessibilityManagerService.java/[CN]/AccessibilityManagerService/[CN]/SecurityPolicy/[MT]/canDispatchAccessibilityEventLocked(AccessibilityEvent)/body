{
  final int eventType=event.getEventType();
switch (eventType) {
case AccessibilityEvent.TYPE_WINDOW_STATE_CHANGED:
    if (mWindowsForAccessibilityCallback != null) {
      AccessibilityWindowInfo window=findWindowById(event.getWindowId());
      if (window == null) {
        mShowingFocusedWindowEvent=AccessibilityEvent.obtain(event);
        return false;
      }
    }
case AccessibilityEvent.TYPE_NOTIFICATION_STATE_CHANGED:
case AccessibilityEvent.TYPE_TOUCH_EXPLORATION_GESTURE_START:
case AccessibilityEvent.TYPE_TOUCH_EXPLORATION_GESTURE_END:
case AccessibilityEvent.TYPE_GESTURE_DETECTION_START:
case AccessibilityEvent.TYPE_GESTURE_DETECTION_END:
case AccessibilityEvent.TYPE_TOUCH_INTERACTION_START:
case AccessibilityEvent.TYPE_TOUCH_INTERACTION_END:
case AccessibilityEvent.TYPE_VIEW_HOVER_ENTER:
case AccessibilityEvent.TYPE_VIEW_HOVER_EXIT:
case AccessibilityEvent.TYPE_WINDOWS_CHANGED:
{
    return true;
  }
default :
{
  return isRetrievalAllowingWindow(event.getWindowId());
}
}
}
