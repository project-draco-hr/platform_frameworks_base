{
  AccessibilityNodeInfo focus=getAccessibilityFocusNotLocked();
  if (focus == null) {
    return false;
  }
synchronized (mLock) {
    Rect boundsInScreen=mTempRect;
    focus.getBoundsInScreen(boundsInScreen);
    Rect windowBounds=mTempRect1;
    getWindowBounds(focus.getWindowId(),windowBounds);
    boundsInScreen.intersect(windowBounds);
    if (boundsInScreen.isEmpty()) {
      return false;
    }
    MagnificationSpec spec=getCompatibleMagnificationSpecLocked(focus.getWindowId());
    if (spec != null && !spec.isNop()) {
      boundsInScreen.offset((int)-spec.offsetX,(int)-spec.offsetY);
      boundsInScreen.scale(1 / spec.scale);
    }
    Point screenSize=mTempPoint;
    mDefaultDisplay.getRealSize(screenSize);
    boundsInScreen.intersect(0,0,screenSize.x,screenSize.y);
    if (boundsInScreen.isEmpty()) {
      return false;
    }
    outPoint.set(boundsInScreen.centerX(),boundsInScreen.centerY());
  }
  return true;
}
