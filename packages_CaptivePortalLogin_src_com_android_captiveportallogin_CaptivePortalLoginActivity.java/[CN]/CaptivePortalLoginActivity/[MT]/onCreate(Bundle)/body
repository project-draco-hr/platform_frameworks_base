{
  super.onCreate(savedInstanceState);
  mCm=ConnectivityManager.from(this);
  String url=getIntent().getStringExtra(ConnectivityManager.EXTRA_CAPTIVE_PORTAL_URL);
  if (url == null)   url=mCm.getCaptivePortalServerUrl();
  try {
    mURL=new URL(url);
  }
 catch (  MalformedURLException e) {
    Log.e(TAG,"Invalid captive portal URL, url=" + url);
    done(Result.WANTED_AS_IS);
  }
  mNetwork=getIntent().getParcelableExtra(ConnectivityManager.EXTRA_NETWORK);
  mCaptivePortal=getIntent().getParcelableExtra(ConnectivityManager.EXTRA_CAPTIVE_PORTAL);
  mCm.bindProcessToNetwork(mNetwork);
  setContentView(R.layout.activity_captive_portal_login);
  getActionBar().setDisplayShowHomeEnabled(false);
  final NetworkCapabilities networkCapabilities=mCm.getNetworkCapabilities(mNetwork);
  if (networkCapabilities == null) {
    finish();
    return;
  }
  mNetworkCallback=new NetworkCallback(){
    @Override public void onLost(    Network lostNetwork){
      if (mNetwork.equals(lostNetwork))       done(Result.UNWANTED);
    }
  }
;
  final NetworkRequest.Builder builder=new NetworkRequest.Builder();
  for (  int transportType : networkCapabilities.getTransportTypes()) {
    builder.addTransportType(transportType);
  }
  mCm.registerNetworkCallback(builder.build(),mNetworkCallback);
  final WebView myWebView=(WebView)findViewById(R.id.webview);
  myWebView.clearCache(true);
  WebSettings webSettings=myWebView.getSettings();
  webSettings.setJavaScriptEnabled(true);
  mWebViewClient=new MyWebViewClient();
  myWebView.setWebViewClient(mWebViewClient);
  myWebView.setWebChromeClient(new MyWebChromeClient());
  myWebView.loadData("","text/html",null);
}
