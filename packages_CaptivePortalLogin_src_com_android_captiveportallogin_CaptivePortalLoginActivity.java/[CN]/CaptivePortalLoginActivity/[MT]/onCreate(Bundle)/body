{
  super.onCreate(savedInstanceState);
  String server=Settings.Global.getString(getContentResolver(),"captive_portal_server");
  if (server == null)   server=DEFAULT_SERVER;
  try {
    mURL=new URL("http://" + server + "/generate_204");
  }
 catch (  MalformedURLException e) {
    done(true);
  }
  setContentView(R.layout.activity_captive_portal_login);
  getActionBar().setDisplayShowHomeEnabled(false);
  mNetId=Integer.parseInt(getIntent().getStringExtra(Intent.EXTRA_TEXT));
  final Network network=new Network(mNetId);
  ConnectivityManager.setProcessDefaultNetwork(network);
  final NetworkCapabilities networkCapabilities=ConnectivityManager.from(this).getNetworkCapabilities(network);
  if (networkCapabilities == null) {
    finish();
    return;
  }
  mNetworkCallback=new NetworkCallback(){
    @Override public void onLost(    Network lostNetwork){
      if (network.equals(lostNetwork))       done(false);
    }
  }
;
  final NetworkRequest.Builder builder=new NetworkRequest.Builder();
  for (  int transportType : networkCapabilities.getTransportTypes()) {
    builder.addTransportType(transportType);
  }
  ConnectivityManager.from(this).registerNetworkCallback(builder.build(),mNetworkCallback);
  WebView myWebView=(WebView)findViewById(R.id.webview);
  WebSettings webSettings=myWebView.getSettings();
  webSettings.setJavaScriptEnabled(true);
  myWebView.setWebViewClient(new MyWebViewClient());
  myWebView.setWebChromeClient(new MyWebChromeClient());
  myWebView.loadUrl(mURL.toString());
}
