{
  mHaveFrame=true;
  final int type=mAttrs.type;
  if (mAppToken != null) {
    StackBox stack=mService.mTaskIdToTask.get(mAppToken.groupId).mStack.mStackBox;
    mContainingFrame.set(stack.mBounds);
  }
 else {
    mContainingFrame.set(pf);
  }
  final Rect display=mDisplayFrame;
  display.set(df);
  final int pw=mContainingFrame.width();
  final int ph=mContainingFrame.height();
  int w, h;
  if ((mAttrs.flags & WindowManager.LayoutParams.FLAG_SCALED) != 0) {
    if (mAttrs.width < 0) {
      w=pw;
    }
 else     if (mEnforceSizeCompat) {
      w=(int)(mAttrs.width * mGlobalScale + .5f);
    }
 else {
      w=mAttrs.width;
    }
    if (mAttrs.height < 0) {
      h=ph;
    }
 else     if (mEnforceSizeCompat) {
      h=(int)(mAttrs.height * mGlobalScale + .5f);
    }
 else {
      h=mAttrs.height;
    }
  }
 else {
    if (mAttrs.width == WindowManager.LayoutParams.MATCH_PARENT) {
      w=pw;
    }
 else     if (mEnforceSizeCompat) {
      w=(int)(mRequestedWidth * mGlobalScale + .5f);
    }
 else {
      w=mRequestedWidth;
    }
    if (mAttrs.height == WindowManager.LayoutParams.MATCH_PARENT) {
      h=ph;
    }
 else     if (mEnforceSizeCompat) {
      h=(int)(mRequestedHeight * mGlobalScale + .5f);
    }
 else {
      h=mRequestedHeight;
    }
  }
  if (!mParentFrame.equals(pf)) {
    mParentFrame.set(pf);
    mContentChanged=true;
  }
  if (mRequestedWidth != mLastRequestedWidth || mRequestedHeight != mLastRequestedHeight) {
    mLastRequestedWidth=mRequestedWidth;
    mLastRequestedHeight=mRequestedHeight;
    mContentChanged=true;
  }
  final Rect overscan=mOverscanFrame;
  overscan.set(of);
  final Rect content=mContentFrame;
  content.set(cf);
  final Rect visible=mVisibleFrame;
  visible.set(vf);
  final Rect frame=mFrame;
  final int fw=frame.width();
  final int fh=frame.height();
  float x, y;
  if (mEnforceSizeCompat) {
    x=mAttrs.x * mGlobalScale;
    y=mAttrs.y * mGlobalScale;
  }
 else {
    x=mAttrs.x;
    y=mAttrs.y;
  }
  Gravity.apply(mAttrs.gravity,w,h,mContainingFrame,(int)(x + mAttrs.horizontalMargin * pw),(int)(y + mAttrs.verticalMargin * ph),frame);
  Gravity.applyDisplay(mAttrs.gravity,df,frame);
  if (overscan.left < frame.left)   overscan.left=frame.left;
  if (overscan.top < frame.top)   overscan.top=frame.top;
  if (overscan.right > frame.right)   overscan.right=frame.right;
  if (overscan.bottom > frame.bottom)   overscan.bottom=frame.bottom;
  if (content.left < frame.left)   content.left=frame.left;
  if (content.top < frame.top)   content.top=frame.top;
  if (content.right > frame.right)   content.right=frame.right;
  if (content.bottom > frame.bottom)   content.bottom=frame.bottom;
  if (visible.left < frame.left)   visible.left=frame.left;
  if (visible.top < frame.top)   visible.top=frame.top;
  if (visible.right > frame.right)   visible.right=frame.right;
  if (visible.bottom > frame.bottom)   visible.bottom=frame.bottom;
  final Rect overscanInsets=mOverscanInsets;
  overscanInsets.left=overscan.left - frame.left;
  overscanInsets.top=overscan.top - frame.top;
  overscanInsets.right=frame.right - overscan.right;
  overscanInsets.bottom=frame.bottom - overscan.bottom;
  final Rect contentInsets=mContentInsets;
  contentInsets.left=content.left - frame.left;
  contentInsets.top=content.top - frame.top;
  contentInsets.right=frame.right - content.right;
  contentInsets.bottom=frame.bottom - content.bottom;
  final Rect visibleInsets=mVisibleInsets;
  visibleInsets.left=visible.left - frame.left;
  visibleInsets.top=visible.top - frame.top;
  visibleInsets.right=frame.right - visible.right;
  visibleInsets.bottom=frame.bottom - visible.bottom;
  mCompatFrame.set(frame);
  if (mEnforceSizeCompat) {
    overscanInsets.scale(mInvGlobalScale);
    contentInsets.scale(mInvGlobalScale);
    visibleInsets.scale(mInvGlobalScale);
    mCompatFrame.scale(mInvGlobalScale);
  }
  if (mIsWallpaper && (fw != frame.width() || fh != frame.height())) {
    final DisplayInfo displayInfo=mDisplayContent.getDisplayInfo();
    mService.updateWallpaperOffsetLocked(this,displayInfo.appWidth,displayInfo.appHeight,false);
  }
  if (WindowManagerService.localLOGV) {
    Slog.v(TAG,"Resolving (mRequestedWidth=" + mRequestedWidth + ", mRequestedheight="+ mRequestedHeight+ ") to"+ " (pw="+ pw+ ", ph="+ ph+ "): frame="+ mFrame.toShortString()+ " ci="+ contentInsets.toShortString()+ " vi="+ visibleInsets.toShortString());
  }
}
