{
  if (!FileUtils.isValidFatFilename(displayName)) {
    throw new SecurityException(displayName + " is not a valid filename");
  }
  Query query=new Query().setFilterById(id);
  Cursor cursor=null;
  String oldDisplayName=null;
  String mimeType=null;
  try {
    cursor=query(query);
    if (cursor == null) {
      return false;
    }
    if (cursor.moveToFirst()) {
      int status=cursor.getInt(cursor.getColumnIndexOrThrow(COLUMN_STATUS));
      if (DownloadManager.STATUS_SUCCESSFUL != status) {
        return false;
      }
      oldDisplayName=cursor.getString(cursor.getColumnIndexOrThrow(COLUMN_TITLE));
      mimeType=cursor.getString(cursor.getColumnIndexOrThrow(COLUMN_MEDIA_TYPE));
    }
  }
  finally {
    if (cursor != null) {
      cursor.close();
    }
  }
  if (oldDisplayName == null || mimeType == null) {
    throw new IllegalStateException("Document with id " + id + " does not exist");
  }
  final File parent=Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS);
  final File before=new File(parent,oldDisplayName);
  final File after=new File(parent,displayName);
  if (after.exists()) {
    throw new IllegalStateException("Already exists " + after);
  }
  if (!before.renameTo(after)) {
    throw new IllegalStateException("Failed to rename to " + after);
  }
  if (mimeType.startsWith("image/")) {
    context.getContentResolver().delete(Images.Media.EXTERNAL_CONTENT_URI,Images.Media.DATA + "=?",new String[]{before.getAbsolutePath()});
    Intent intent=new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);
    intent.setData(Uri.fromFile(after));
    context.sendBroadcast(intent);
  }
  ContentValues values=new ContentValues();
  values.put(Downloads.Impl.COLUMN_TITLE,displayName);
  values.put(Downloads.Impl._DATA,after.toString());
  values.putNull(Downloads.Impl.COLUMN_MEDIAPROVIDER_URI);
  long[] ids={id};
  return (mResolver.update(mBaseUri,values,getWhereClauseForIds(ids),getWhereArgsForIds(ids)) == 1);
}
