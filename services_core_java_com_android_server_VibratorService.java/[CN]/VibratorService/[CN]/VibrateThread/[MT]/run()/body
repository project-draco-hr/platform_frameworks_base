{
  Process.setThreadPriority(Process.THREAD_PRIORITY_URGENT_DISPLAY);
synchronized (this) {
    final long[] pattern=mVibration.mPattern;
    final int len=pattern.length;
    final int repeat=mVibration.mRepeat;
    final int uid=mVibration.mUid;
    final int usageHint=mVibration.mUsageHint;
    int index=0;
    long duration=0;
    while (!mDone) {
      if (index < len) {
        duration+=pattern[index++];
      }
      delay(duration);
      if (mDone) {
        break;
      }
      if (index < len) {
        duration=pattern[index++];
        if (duration > 0) {
          VibratorService.this.doVibratorOn(duration,uid,usageHint);
        }
      }
 else {
        if (repeat < 0) {
          break;
        }
 else {
          index=repeat;
          duration=0;
        }
      }
    }
    mWakeLock.release();
  }
synchronized (mVibrations) {
    if (mThread == this) {
      mThread=null;
    }
    if (!mDone) {
      unlinkVibration(mVibration);
      startNextVibrationLocked();
    }
  }
}
