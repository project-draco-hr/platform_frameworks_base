{
  StyleResourceValue style=null;
  if (resid != 0) {
    style=getStyleByDynamicId(resid);
    if (style == null) {
      ResourceReference ref=resolveId(resid);
      if (ref != null) {
        style=mRenderResources.getStyle(ref.getName(),ref.isFramework());
      }
    }
    if (style == null) {
      throw new Resources.NotFoundException();
    }
  }
  if (mTypedArrayCache == null) {
    mTypedArrayCache=new IdentityHashMap<int[],Map<List<StyleResourceValue>,Map<Integer,BridgeTypedArray>>>();
  }
  Map<List<StyleResourceValue>,Map<Integer,BridgeTypedArray>> map2=mTypedArrayCache.get(attrs);
  if (map2 == null) {
    map2=new HashMap<List<StyleResourceValue>,Map<Integer,BridgeTypedArray>>();
    mTypedArrayCache.put(attrs,map2);
  }
  List<StyleResourceValue> currentThemes=mRenderResources.getAllThemes();
  Map<Integer,BridgeTypedArray> map3=map2.get(currentThemes);
  if (map3 == null) {
    map3=new HashMap<Integer,BridgeTypedArray>();
    currentThemes=new ArrayList<StyleResourceValue>(currentThemes);
    map2.put(currentThemes,map3);
  }
  BridgeTypedArray ta=map3.get(resid);
  if (ta == null) {
    ta=createStyleBasedTypedArray(style,attrs);
    map3.put(resid,ta);
  }
  return ta;
}
