{
synchronized (mMutex) {
    if (mServiceConnection != this) {
      return;
    }
    ILocationProvider provider=getProvider();
    if (provider == null) {
      return;
    }
    try {
      if (mEnabled) {
        provider.enable();
      }
      if (mLocationTracking) {
        provider.enableLocationTracking(true);
      }
      if (mMinTime >= 0) {
        provider.setMinTime(mMinTime,mMinTimeSource);
      }
      if (mNetworkInfo != null) {
        provider.updateNetworkState(mNetworkState,mNetworkInfo);
      }
    }
 catch (    RemoteException e) {
    }
    if (mCachedAttributes == null) {
      try {
        mCachedAttributes=new DummyLocationProvider(mName,null);
        mCachedAttributes.setRequiresNetwork(provider.requiresNetwork());
        mCachedAttributes.setRequiresSatellite(provider.requiresSatellite());
        mCachedAttributes.setRequiresCell(provider.requiresCell());
        mCachedAttributes.setHasMonetaryCost(provider.hasMonetaryCost());
        mCachedAttributes.setSupportsAltitude(provider.supportsAltitude());
        mCachedAttributes.setSupportsSpeed(provider.supportsSpeed());
        mCachedAttributes.setSupportsBearing(provider.supportsBearing());
        mCachedAttributes.setPowerRequirement(provider.getPowerRequirement());
        mCachedAttributes.setAccuracy(provider.getAccuracy());
      }
 catch (      RemoteException e) {
        mCachedAttributes=null;
      }
    }
  }
}
