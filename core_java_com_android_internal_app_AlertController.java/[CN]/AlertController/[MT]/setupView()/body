{
  final View parentPanel=mWindow.findViewById(R.id.parentPanel);
  final View defaultTopPanel=parentPanel.findViewById(R.id.topPanel);
  final View defaultContentPanel=parentPanel.findViewById(R.id.contentPanel);
  final View defaultButtonPanel=parentPanel.findViewById(R.id.buttonPanel);
  final ViewGroup customPanel=(ViewGroup)parentPanel.findViewById(R.id.customPanel);
  setupCustomContent(customPanel);
  final View customTopPanel=customPanel.findViewById(R.id.topPanel);
  final View customContentPanel=customPanel.findViewById(R.id.contentPanel);
  final View customButtonPanel=customPanel.findViewById(R.id.buttonPanel);
  final ViewGroup topPanel=resolvePanel(customTopPanel,defaultTopPanel);
  final ViewGroup contentPanel=resolvePanel(customContentPanel,defaultContentPanel);
  final ViewGroup buttonPanel=resolvePanel(customButtonPanel,defaultButtonPanel);
  setupContent(contentPanel);
  setupButtons(buttonPanel);
  setupTitle(topPanel);
  final boolean hasCustomPanel=customPanel != null && customPanel.getVisibility() != View.GONE;
  final boolean hasTopPanel=topPanel != null && topPanel.getVisibility() != View.GONE;
  final boolean hasButtonPanel=buttonPanel != null && buttonPanel.getVisibility() != View.GONE;
  if (!hasButtonPanel) {
    if (contentPanel != null) {
      final View spacer=contentPanel.findViewById(R.id.textSpacerNoButtons);
      if (spacer != null) {
        spacer.setVisibility(View.VISIBLE);
      }
    }
    mWindow.setCloseOnTouchOutsideIfNotSet(true);
  }
  if (hasTopPanel) {
    if (mScrollView != null) {
      mScrollView.setClipToPadding(true);
    }
    View divider=null;
    if (mMessage != null || mListView != null || hasCustomPanel) {
      if (!hasCustomPanel) {
        divider=topPanel.findViewById(R.id.titleDividerNoCustom);
      }
      if (divider == null) {
        divider=topPanel.findViewById(R.id.titleDivider);
      }
    }
 else {
      divider=topPanel.findViewById(R.id.titleDividerTop);
    }
    if (divider != null) {
      divider.setVisibility(View.VISIBLE);
    }
  }
 else {
    if (contentPanel != null) {
      final View spacer=contentPanel.findViewById(R.id.textSpacerNoTitle);
      if (spacer != null) {
        spacer.setVisibility(View.VISIBLE);
      }
    }
  }
  if (mListView instanceof RecycleListView) {
    ((RecycleListView)mListView).setHasDecor(hasTopPanel,hasButtonPanel);
  }
  if (!hasCustomPanel) {
    final View content=mListView != null ? mListView : mScrollView;
    if (content != null) {
      final int indicators=(hasTopPanel ? View.SCROLL_INDICATOR_TOP : 0) | (hasButtonPanel ? View.SCROLL_INDICATOR_BOTTOM : 0);
      content.setScrollIndicators(indicators,View.SCROLL_INDICATOR_TOP | View.SCROLL_INDICATOR_BOTTOM);
    }
  }
  final TypedArray a=mContext.obtainStyledAttributes(null,R.styleable.AlertDialog,R.attr.alertDialogStyle,0);
  setBackground(a,topPanel,contentPanel,customPanel,buttonPanel,hasTopPanel,hasCustomPanel,hasButtonPanel);
  a.recycle();
}
