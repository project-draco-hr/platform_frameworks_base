{
  final int resolvedAppId=resolveCallingAppEnforcingPermissions(appId);
  final int resolvedUserId=resolveCallingUserEnforcingPermissions(userId);
  final UserState userState;
  final RemotePrintSpooler spooler;
synchronized (mLock) {
    userState=getOrCreateUserStateLocked(resolvedUserId);
    spooler=userState.getSpoolerLocked();
  }
  final long identity=Binder.clearCallingIdentity();
  try {
    PrintJobInfo printJobInfo=spooler.getPrintJobInfo(printJobId,resolvedAppId);
    if (printJobInfo == null) {
      return;
    }
    if (printJobInfo.getState() != PrintJobInfo.STATE_FAILED) {
      ComponentName printServiceName=printJobInfo.getPrinterId().getServiceName();
      RemotePrintService printService=null;
synchronized (mLock) {
        printService=userState.getActiveServicesLocked().get(printServiceName);
      }
      if (printService == null) {
        return;
      }
      printService.onRequestCancelPrintJob(printJobInfo);
    }
 else {
      spooler.setPrintJobState(printJobId,PrintJobInfo.STATE_CANCELED,null);
    }
  }
  finally {
    Binder.restoreCallingIdentity(identity);
  }
}
