{
  super(context,attrs);
  Resources res=context.getResources();
  TypedArray a=context.obtainStyledAttributes(attrs,R.styleable.GlowPadView);
  mInnerRadius=a.getDimension(R.styleable.GlowPadView_innerRadius,mInnerRadius);
  mOuterRadius=a.getDimension(R.styleable.GlowPadView_outerRadius,mOuterRadius);
  mSnapMargin=a.getDimension(R.styleable.GlowPadView_snapMargin,mSnapMargin);
  mVibrationDuration=a.getInt(R.styleable.GlowPadView_vibrationDuration,mVibrationDuration);
  mFeedbackCount=a.getInt(R.styleable.GlowPadView_feedbackCount,mFeedbackCount);
  TypedValue handle=a.peekValue(R.styleable.GlowPadView_handleDrawable);
  mHandleDrawable=new TargetDrawable(res,handle != null ? handle.resourceId : 0);
  mHandleDrawable.setState(TargetDrawable.STATE_INACTIVE);
  mOuterRing=new TargetDrawable(res,getResourceId(a,R.styleable.GlowPadView_outerRingDrawable));
  mAlwaysTrackFinger=a.getBoolean(R.styleable.GlowPadView_alwaysTrackFinger,false);
  int pointId=getResourceId(a,R.styleable.GlowPadView_pointDrawable);
  Drawable pointDrawable=pointId != 0 ? res.getDrawable(pointId) : null;
  mGlowRadius=a.getDimension(R.styleable.GlowPadView_glowRadius,0.0f);
  TypedValue outValue=new TypedValue();
  if (a.getValue(R.styleable.GlowPadView_targetDrawables,outValue)) {
    internalSetTargetResources(outValue.resourceId);
  }
  if (mTargetDrawables == null || mTargetDrawables.size() == 0) {
    throw new IllegalStateException("Must specify at least one target drawable");
  }
  if (a.getValue(R.styleable.GlowPadView_targetDescriptions,outValue)) {
    final int resourceId=outValue.resourceId;
    if (resourceId == 0) {
      throw new IllegalStateException("Must specify target descriptions");
    }
    setTargetDescriptionsResourceId(resourceId);
  }
  if (a.getValue(R.styleable.GlowPadView_directionDescriptions,outValue)) {
    final int resourceId=outValue.resourceId;
    if (resourceId == 0) {
      throw new IllegalStateException("Must specify direction descriptions");
    }
    setDirectionDescriptionsResourceId(resourceId);
  }
  mGravity=a.getInt(R.styleable.GlowPadView_gravity,Gravity.TOP);
  a.recycle();
  setVibrateEnabled(mVibrationDuration > 0);
  assignDefaultsIfNeeded();
  mPointCloud=new PointCloud(pointDrawable);
  mPointCloud.makePointCloud(mInnerRadius,mOuterRadius);
  mPointCloud.glowManager.setRadius(mGlowRadius);
}
