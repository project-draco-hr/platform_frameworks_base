{
  if (!force && !mUpdateInputWindowsNeeded) {
    return;
  }
  mUpdateInputWindowsNeeded=false;
  if (false)   Slog.d(WindowManagerService.TAG,">>>>>> ENTERED updateInputWindowsLw");
  final ArrayList<WindowState> windows=mService.mWindows;
  final WindowStateAnimator universeBackground=mService.mAnimator.mUniverseBackground;
  final int aboveUniverseLayer=mService.mAnimator.mAboveUniverseLayer;
  boolean addedUniverse=false;
  final boolean inDrag=(mService.mDragState != null);
  if (inDrag) {
    if (WindowManagerService.DEBUG_DRAG) {
      Log.d(WindowManagerService.TAG,"Inserting drag window");
    }
    final InputWindowHandle dragWindowHandle=mService.mDragState.mDragWindowHandle;
    if (dragWindowHandle != null) {
      addInputWindowHandleLw(dragWindowHandle);
    }
 else {
      Slog.w(WindowManagerService.TAG,"Drag is in progress but there is no " + "drag window handle.");
    }
  }
  final int NFW=mService.mFakeWindows.size();
  for (int i=0; i < NFW; i++) {
    addInputWindowHandleLw(mService.mFakeWindows.get(i).mWindowHandle);
  }
  final int N=windows.size();
  for (int i=N - 1; i >= 0; i--) {
    final WindowState child=windows.get(i);
    final InputChannel inputChannel=child.mInputChannel;
    final InputWindowHandle inputWindowHandle=child.mInputWindowHandle;
    if (inputChannel == null || inputWindowHandle == null || child.mRemoved) {
      continue;
    }
    final int flags=child.mAttrs.flags;
    final int type=child.mAttrs.type;
    final boolean hasFocus=(child == mInputFocus);
    final boolean isVisible=child.isVisibleLw();
    final boolean hasWallpaper=(child == mService.mWallpaperTarget) && (type != WindowManager.LayoutParams.TYPE_KEYGUARD);
    if (inDrag && isVisible) {
      mService.mDragState.sendDragStartedIfNeededLw(child);
    }
    if (universeBackground != null && !addedUniverse && child.mBaseLayer < aboveUniverseLayer) {
      final WindowState u=universeBackground.mWin;
      if (u.mInputChannel != null && u.mInputWindowHandle != null) {
        addInputWindowHandleLw(u.mInputWindowHandle,u,u.mAttrs.flags,u.mAttrs.type,true,u == mInputFocus,false);
      }
      addedUniverse=true;
    }
    if (child.mWinAnimator != universeBackground) {
      addInputWindowHandleLw(inputWindowHandle,child,flags,type,isVisible,hasFocus,hasWallpaper);
    }
  }
  mService.mInputManager.setInputWindows(mInputWindowHandles);
  clearInputWindowHandlesLw();
  if (false)   Slog.d(WindowManagerService.TAG,"<<<<<<< EXITED updateInputWindowsLw");
}
