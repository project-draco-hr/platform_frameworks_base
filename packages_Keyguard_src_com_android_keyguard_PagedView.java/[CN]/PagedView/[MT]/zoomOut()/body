{
  if (mZoomInOutAnim != null && mZoomInOutAnim.isRunning()) {
    mZoomInOutAnim.cancel();
  }
  if (!(getScaleX() < 1f || getScaleY() < 1f)) {
    mZoomInOutAnim=new AnimatorSet();
    mZoomInOutAnim.setDuration(REORDERING_ZOOM_IN_OUT_DURATION);
    mZoomInOutAnim.playTogether(ObjectAnimator.ofFloat(this,"scaleX",mMinScale),ObjectAnimator.ofFloat(this,"scaleY",mMinScale));
    mZoomInOutAnim.addListener(new AnimatorListenerAdapter(){
      @Override public void onAnimationStart(      Animator animation){
        if (mDeleteDropTarget != null) {
          mDeleteDropTarget.setVisibility(View.VISIBLE);
          mDeleteDropTarget.animate().alpha(1f).setDuration(REORDERING_DELETE_DROP_TARGET_FADE_DURATION).setListener(new AnimatorListenerAdapter(){
            @Override public void onAnimationStart(            Animator animation){
              mDeleteDropTarget.setAlpha(0f);
            }
          }
);
        }
      }
    }
);
    mZoomInOutAnim.start();
    return true;
  }
  return false;
}
