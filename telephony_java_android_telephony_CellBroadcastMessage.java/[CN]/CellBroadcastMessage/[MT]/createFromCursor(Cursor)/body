{
  int geoScope=cursor.getInt(cursor.getColumnIndexOrThrow(Telephony.CellBroadcasts.GEOGRAPHICAL_SCOPE));
  int serialNum=cursor.getInt(cursor.getColumnIndexOrThrow(Telephony.CellBroadcasts.SERIAL_NUMBER));
  int category=cursor.getInt(cursor.getColumnIndexOrThrow(Telephony.CellBroadcasts.SERVICE_CATEGORY));
  String language=cursor.getString(cursor.getColumnIndexOrThrow(Telephony.CellBroadcasts.LANGUAGE_CODE));
  String body=cursor.getString(cursor.getColumnIndexOrThrow(Telephony.CellBroadcasts.MESSAGE_BODY));
  int format=cursor.getInt(cursor.getColumnIndexOrThrow(Telephony.CellBroadcasts.MESSAGE_FORMAT));
  int priority=cursor.getInt(cursor.getColumnIndexOrThrow(Telephony.CellBroadcasts.MESSAGE_PRIORITY));
  String plmn;
  int plmnColumn=cursor.getColumnIndex(Telephony.CellBroadcasts.PLMN);
  if (plmnColumn != -1 && !cursor.isNull(plmnColumn)) {
    plmn=cursor.getString(plmnColumn);
  }
 else {
    plmn=null;
  }
  int lac;
  int lacColumn=cursor.getColumnIndex(Telephony.CellBroadcasts.LAC);
  if (lacColumn != -1 && !cursor.isNull(lacColumn)) {
    lac=cursor.getInt(lacColumn);
  }
 else {
    lac=-1;
  }
  int cid;
  int cidColumn=cursor.getColumnIndex(Telephony.CellBroadcasts.CID);
  if (cidColumn != -1 && !cursor.isNull(cidColumn)) {
    cid=cursor.getInt(cidColumn);
  }
 else {
    cid=-1;
  }
  SmsCbLocation location=new SmsCbLocation(plmn,lac,cid);
  SmsCbEtwsInfo etwsInfo;
  int etwsWarningTypeColumn=cursor.getColumnIndex(Telephony.CellBroadcasts.ETWS_WARNING_TYPE);
  if (etwsWarningTypeColumn != -1 && !cursor.isNull(etwsWarningTypeColumn)) {
    int warningType=cursor.getInt(etwsWarningTypeColumn);
    etwsInfo=new SmsCbEtwsInfo(warningType,false,false,null);
  }
 else {
    etwsInfo=null;
  }
  SmsCbCmasInfo cmasInfo;
  int cmasMessageClassColumn=cursor.getColumnIndex(Telephony.CellBroadcasts.CMAS_MESSAGE_CLASS);
  if (cmasMessageClassColumn != -1 && !cursor.isNull(cmasMessageClassColumn)) {
    int messageClass=cursor.getInt(cmasMessageClassColumn);
    int cmasCategory;
    int cmasCategoryColumn=cursor.getColumnIndex(Telephony.CellBroadcasts.CMAS_CATEGORY);
    if (cmasCategoryColumn != -1 && !cursor.isNull(cmasCategoryColumn)) {
      cmasCategory=cursor.getInt(cmasCategoryColumn);
    }
 else {
      cmasCategory=SmsCbCmasInfo.CMAS_CATEGORY_UNKNOWN;
    }
    int responseType;
    int cmasResponseTypeColumn=cursor.getColumnIndex(Telephony.CellBroadcasts.CMAS_RESPONSE_TYPE);
    if (cmasResponseTypeColumn != -1 && !cursor.isNull(cmasResponseTypeColumn)) {
      responseType=cursor.getInt(cmasResponseTypeColumn);
    }
 else {
      responseType=SmsCbCmasInfo.CMAS_RESPONSE_TYPE_UNKNOWN;
    }
    int severity;
    int cmasSeverityColumn=cursor.getColumnIndex(Telephony.CellBroadcasts.CMAS_SEVERITY);
    if (cmasSeverityColumn != -1 && !cursor.isNull(cmasSeverityColumn)) {
      severity=cursor.getInt(cmasSeverityColumn);
    }
 else {
      severity=SmsCbCmasInfo.CMAS_SEVERITY_UNKNOWN;
    }
    int urgency;
    int cmasUrgencyColumn=cursor.getColumnIndex(Telephony.CellBroadcasts.CMAS_URGENCY);
    if (cmasUrgencyColumn != -1 && !cursor.isNull(cmasUrgencyColumn)) {
      urgency=cursor.getInt(cmasUrgencyColumn);
    }
 else {
      urgency=SmsCbCmasInfo.CMAS_URGENCY_UNKNOWN;
    }
    int certainty;
    int cmasCertaintyColumn=cursor.getColumnIndex(Telephony.CellBroadcasts.CMAS_CERTAINTY);
    if (cmasCertaintyColumn != -1 && !cursor.isNull(cmasCertaintyColumn)) {
      certainty=cursor.getInt(cmasCertaintyColumn);
    }
 else {
      certainty=SmsCbCmasInfo.CMAS_CERTAINTY_UNKNOWN;
    }
    cmasInfo=new SmsCbCmasInfo(messageClass,cmasCategory,responseType,severity,urgency,certainty);
  }
 else {
    cmasInfo=null;
  }
  SmsCbMessage msg=new SmsCbMessage(format,geoScope,serialNum,location,category,language,body,priority,etwsInfo,cmasInfo);
  long deliveryTime=cursor.getLong(cursor.getColumnIndexOrThrow(Telephony.CellBroadcasts.DELIVERY_TIME));
  boolean isRead=(cursor.getInt(cursor.getColumnIndexOrThrow(Telephony.CellBroadcasts.MESSAGE_READ)) != 0);
  return new CellBroadcastMessage(msg,deliveryTime,isRead);
}
