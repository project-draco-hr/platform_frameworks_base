{
  List<Surface> outputSurfaces=new ArrayList<Surface>(2);
  assertTrue("Both preview and recording surfaces should be valid",mPreviewSurface.isValid() && mRecordingSurface.isValid());
  outputSurfaces.add(mPreviewSurface);
  outputSurfaces.add(mRecordingSurface);
  if (mReaderSurface != null) {
    outputSurfaces.add(mReaderSurface);
  }
  mSessionListener=new BlockingSessionCallback();
  mSession=configureCameraSession(mCamera,outputSurfaces,useHighSpeedSession,mSessionListener,mHandler);
  List<CaptureRequest> slowMoRequests=null;
  if (useHighSpeedSession) {
    CaptureRequest.Builder requestBuilder=mCamera.createCaptureRequest(CameraDevice.TEMPLATE_RECORD);
    requestBuilder.set(CaptureRequest.CONTROL_AE_TARGET_FPS_RANGE,fpsRange);
    requestBuilder.addTarget(mPreviewSurface);
    requestBuilder.addTarget(mRecordingSurface);
    slowMoRequests=((CameraConstrainedHighSpeedCaptureSession)mSession).createHighSpeedRequestList(requestBuilder.build());
  }
 else {
    CaptureRequest.Builder recordingRequestBuilder=mCamera.createCaptureRequest(CameraDevice.TEMPLATE_RECORD);
    recordingRequestBuilder.set(CaptureRequest.CONTROL_MODE,CaptureRequest.CONTROL_MODE_USE_SCENE_MODE);
    recordingRequestBuilder.set(CaptureRequest.CONTROL_SCENE_MODE,CaptureRequest.CONTROL_SCENE_MODE_HIGH_SPEED_VIDEO);
    CaptureRequest.Builder recordingOnlyBuilder=mCamera.createCaptureRequest(CameraDevice.TEMPLATE_RECORD);
    recordingOnlyBuilder.set(CaptureRequest.CONTROL_MODE,CaptureRequest.CONTROL_MODE_USE_SCENE_MODE);
    recordingOnlyBuilder.set(CaptureRequest.CONTROL_SCENE_MODE,CaptureRequest.CONTROL_SCENE_MODE_HIGH_SPEED_VIDEO);
    int slowMotionFactor=captureRate / videoFrameRate;
    recordingRequestBuilder.set(CaptureRequest.CONTROL_AE_TARGET_FPS_RANGE,fpsRange);
    recordingRequestBuilder.addTarget(mRecordingSurface);
    recordingRequestBuilder.addTarget(mPreviewSurface);
    recordingOnlyBuilder.set(CaptureRequest.CONTROL_AE_TARGET_FPS_RANGE,fpsRange);
    recordingOnlyBuilder.addTarget(mRecordingSurface);
    slowMoRequests=new ArrayList<CaptureRequest>();
    slowMoRequests.add(recordingRequestBuilder.build());
    for (int i=0; i < slowMotionFactor - 1; i++) {
      slowMoRequests.add(recordingOnlyBuilder.build());
    }
  }
  mSession.setRepeatingBurst(slowMoRequests,listener,mHandler);
  if (useMediaRecorder) {
    mMediaRecorder.start();
  }
 else {
  }
}
