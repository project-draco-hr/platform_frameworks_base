{
  File tempFile=null;
  try {
    tempFile=mContext.getCacheDir().createTempFile("mtp","tmp");
    try (final FileOutputStream tempOutputStream=new ParcelFileDescriptor.AutoCloseOutputStream(ParcelFileDescriptor.open(tempFile,ParcelFileDescriptor.MODE_WRITE_ONLY));final ParcelFileDescriptor.AutoCloseInputStream inputStream=new ParcelFileDescriptor.AutoCloseInputStream(mDescriptors[0])){
      final byte[] buffer=new byte[32 * 1024];
      int bytes;
      while ((bytes=inputStream.read(buffer)) != -1) {
        mDescriptors[0].checkError();
        tempOutputStream.write(buffer,0,bytes);
      }
      tempOutputStream.flush();
    }
     final MtpObjectInfo placeholderObjectInfo=mManager.getObjectInfo(mIdentifier.mDeviceId,mIdentifier.mObjectHandle);
    mManager.deleteDocument(mIdentifier.mDeviceId,mIdentifier.mObjectHandle);
    final int targetObjectHandle=mManager.createDocument(mIdentifier.mDeviceId,new MtpObjectInfo.Builder(placeholderObjectInfo).setCompressedSize((int)tempFile.length()).build());
    final ParcelFileDescriptor tempInputDescriptor=ParcelFileDescriptor.open(tempFile,ParcelFileDescriptor.MODE_READ_ONLY);
    mManager.sendObject(mIdentifier.mDeviceId,targetObjectHandle,(int)tempFile.length(),tempInputDescriptor);
  }
 catch (  IOException error) {
    Log.w(MtpDocumentsProvider.TAG,"Failed to send a file because of: " + error.getMessage());
  }
 finally {
    if (tempFile != null) {
      tempFile.delete();
    }
  }
}
