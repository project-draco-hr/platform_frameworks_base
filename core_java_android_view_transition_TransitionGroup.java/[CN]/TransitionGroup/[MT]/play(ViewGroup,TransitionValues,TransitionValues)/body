{
  final View view=(endValues != null) ? endValues.view : (startValues != null) ? startValues.view : null;
  final int targetId=(view != null) ? view.getId() : -1;
  if (targetId < 0) {
    return null;
  }
  setupStartEndListeners();
  if (!mPlayTogether) {
    final ViewGroup finalSceneRoot=sceneRoot;
    final TransitionValues finalStartValues=startValues;
    final TransitionValues finalEndValues=endValues;
    for (int i=1; i < mTransitions.size(); ++i) {
      Transition previousTransition=mTransitions.get(i - 1);
      final Transition nextTransition=mTransitions.get(i);
      previousTransition.addListener(new TransitionListenerAdapter(){
        @Override public void onTransitionEnd(        Transition transition){
          nextTransition.startTransition();
          if (nextTransition.isValidTarget(view,targetId)) {
            animate(nextTransition.play(finalSceneRoot,finalStartValues,finalEndValues));
          }
 else {
            nextTransition.endTransition();
          }
        }
      }
);
    }
    Transition firstTransition=mTransitions.get(0);
    if (firstTransition != null) {
      firstTransition.startTransition();
      if (firstTransition.isValidTarget(view,targetId)) {
        animate(firstTransition.play(finalSceneRoot,finalStartValues,finalEndValues));
      }
 else {
        firstTransition.endTransition();
      }
    }
  }
 else {
    for (    Transition childTransition : mTransitions) {
      childTransition.startTransition();
      if (childTransition.isValidTarget(view,targetId)) {
        animate(childTransition.play(sceneRoot,startValues,endValues));
      }
 else {
        childTransition.endTransition();
      }
    }
  }
  return null;
}
