{
  final SessionParams sessionParams=new SessionParams(SessionParams.MODE_FULL_INSTALL);
  final InstallParams params=new InstallParams();
  params.sessionParams=sessionParams;
  String opt;
  while ((opt=nextOption()) != null) {
switch (opt) {
case "-l":
      sessionParams.installFlags|=PackageManager.INSTALL_FORWARD_LOCK;
    break;
case "-r":
  sessionParams.installFlags|=PackageManager.INSTALL_REPLACE_EXISTING;
break;
case "-i":
params.installerPackageName=nextArg();
if (params.installerPackageName == null) {
throw new IllegalArgumentException("Missing installer package");
}
break;
case "-t":
sessionParams.installFlags|=PackageManager.INSTALL_ALLOW_TEST;
break;
case "-s":
sessionParams.installFlags|=PackageManager.INSTALL_EXTERNAL;
break;
case "-f":
sessionParams.installFlags|=PackageManager.INSTALL_INTERNAL;
break;
case "-d":
sessionParams.installFlags|=PackageManager.INSTALL_ALLOW_DOWNGRADE;
break;
case "-g":
sessionParams.installFlags|=PackageManager.INSTALL_GRANT_RUNTIME_PERMISSIONS;
break;
case "--dont-kill":
sessionParams.installFlags|=PackageManager.INSTALL_DONT_KILL_APP;
break;
case "--originating-uri":
sessionParams.originatingUri=Uri.parse(nextOptionData());
break;
case "--referrer":
sessionParams.referrerUri=Uri.parse(nextOptionData());
break;
case "-p":
sessionParams.mode=SessionParams.MODE_INHERIT_EXISTING;
sessionParams.appPackageName=nextOptionData();
if (sessionParams.appPackageName == null) {
throw new IllegalArgumentException("Missing inherit package name");
}
break;
case "-S":
sessionParams.setSize(Long.parseLong(nextOptionData()));
break;
case "--abi":
sessionParams.abiOverride=checkAbiArgument(nextOptionData());
break;
case "--ephemeral":
sessionParams.installFlags|=PackageManager.INSTALL_EPHEMERAL;
break;
case "--user":
params.userId=UserHandle.parseUserArg(nextOptionData());
break;
case "--install-location":
sessionParams.installLocation=Integer.parseInt(nextOptionData());
break;
case "--force-uuid":
sessionParams.installFlags|=PackageManager.INSTALL_FORCE_VOLUME_UUID;
sessionParams.volumeUuid=nextOptionData();
if ("internal".equals(sessionParams.volumeUuid)) {
sessionParams.volumeUuid=null;
}
break;
case "--force-sdk":
sessionParams.installFlags|=PackageManager.INSTALL_FORCE_SDK;
break;
default :
throw new IllegalArgumentException("Unknown option " + opt);
}
}
return params;
}
