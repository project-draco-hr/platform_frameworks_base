{
  int userId=0;
  String option=nextOption();
  if (option != null && option.equals("--user")) {
    String optionData=nextOptionData();
    if (optionData == null || !isNumber(optionData)) {
      System.err.println("Error: no USER_ID specified");
      showUsage();
      return;
    }
 else {
      userId=Integer.parseInt(optionData);
    }
  }
  String pkg=nextArg();
  if (pkg == null) {
    System.err.println("Error: no package or component specified");
    showUsage();
    return;
  }
  ComponentName cn=ComponentName.unflattenFromString(pkg);
  if (cn == null) {
    try {
      mPm.setApplicationEnabledSetting(pkg,state,0,userId);
      System.err.println("Package " + pkg + " new state: "+ enabledSettingToString(mPm.getApplicationEnabledSetting(pkg,userId)));
    }
 catch (    RemoteException e) {
      System.err.println(e.toString());
      System.err.println(PM_NOT_RUNNING_ERR);
    }
  }
 else {
    try {
      mPm.setComponentEnabledSetting(cn,state,0,userId);
      System.err.println("Component " + cn.toShortString() + " new state: "+ enabledSettingToString(mPm.getComponentEnabledSetting(cn,userId)));
    }
 catch (    RemoteException e) {
      System.err.println(e.toString());
      System.err.println(PM_NOT_RUNNING_ERR);
    }
  }
}
