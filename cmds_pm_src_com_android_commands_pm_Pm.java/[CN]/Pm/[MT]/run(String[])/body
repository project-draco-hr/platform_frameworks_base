{
  boolean validCommand=false;
  if (args.length < 1) {
    showUsage();
    return;
  }
  mPm=IPackageManager.Stub.asInterface(ServiceManager.getService("package"));
  if (mPm == null) {
    System.err.println(PM_NOT_RUNNING_ERR);
    return;
  }
  mArgs=args;
  String op=args[0];
  mNextArg=1;
  if ("list".equals(op)) {
    runList();
    return;
  }
  if ("path".equals(op)) {
    runPath();
    return;
  }
  if ("install".equals(op)) {
    runInstall();
    return;
  }
  if ("uninstall".equals(op)) {
    runUninstall();
    return;
  }
  if ("clear".equals(op)) {
    runClear();
    return;
  }
  if ("enable".equals(op)) {
    runSetEnabledSetting(PackageManager.COMPONENT_ENABLED_STATE_ENABLED);
    return;
  }
  if ("disable".equals(op)) {
    runSetEnabledSetting(PackageManager.COMPONENT_ENABLED_STATE_DISABLED);
    return;
  }
  if ("disable-user".equals(op)) {
    runSetEnabledSetting(PackageManager.COMPONENT_ENABLED_STATE_DISABLED_USER);
    return;
  }
  if ("grant".equals(op)) {
    runGrantRevokePermission(true);
    return;
  }
  if ("revoke".equals(op)) {
    runGrantRevokePermission(false);
    return;
  }
  if ("set-install-location".equals(op)) {
    runSetInstallLocation();
    return;
  }
  if ("get-install-location".equals(op)) {
    runGetInstallLocation();
    return;
  }
  if ("create-user".equals(op)) {
    runCreateUser();
    return;
  }
  if ("remove-user".equals(op)) {
    runRemoveUser();
    return;
  }
  if ("list-users".equals(op)) {
    runListUsers();
    return;
  }
  try {
    if (args.length == 1) {
      if (args[0].equalsIgnoreCase("-l")) {
        validCommand=true;
        runListPackages(false);
      }
 else       if (args[0].equalsIgnoreCase("-lf")) {
        validCommand=true;
        runListPackages(true);
      }
    }
 else     if (args.length == 2) {
      if (args[0].equalsIgnoreCase("-p")) {
        validCommand=true;
        displayPackageFilePath(args[1]);
      }
    }
  }
  finally {
    if (validCommand == false) {
      if (op != null) {
        System.err.println("Error: unknown command '" + op + "'");
      }
      showUsage();
    }
  }
}
