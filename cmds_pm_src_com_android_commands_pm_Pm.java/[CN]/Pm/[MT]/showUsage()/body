{
  System.err.println("usage: pm path [--user USER_ID] PACKAGE");
  System.err.println("       pm dump PACKAGE");
  System.err.println("       pm install [-lrtsfd] [-i PACKAGE] [--user USER_ID] [PATH]");
  System.err.println("       pm install-create [-lrtsfdp] [-i PACKAGE] [-S BYTES]");
  System.err.println("               [--install-location 0/1/2]");
  System.err.println("               [--force-uuid internal|UUID]");
  System.err.println("       pm install-write [-S BYTES] SESSION_ID SPLIT_NAME [PATH]");
  System.err.println("       pm install-commit SESSION_ID");
  System.err.println("       pm install-abandon SESSION_ID");
  System.err.println("       pm uninstall [-k] [--user USER_ID] PACKAGE");
  System.err.println("       pm set-installer PACKAGE INSTALLER");
  System.err.println("       pm move-package PACKAGE [internal|UUID]");
  System.err.println("       pm move-primary-storage [internal|UUID]");
  System.err.println("       pm clear [--user USER_ID] PACKAGE");
  System.err.println("       pm enable [--user USER_ID] PACKAGE_OR_COMPONENT");
  System.err.println("       pm disable [--user USER_ID] PACKAGE_OR_COMPONENT");
  System.err.println("       pm disable-user [--user USER_ID] PACKAGE_OR_COMPONENT");
  System.err.println("       pm disable-until-used [--user USER_ID] PACKAGE_OR_COMPONENT");
  System.err.println("       pm default-state [--user USER_ID] PACKAGE_OR_COMPONENT");
  System.err.println("       pm hide [--user USER_ID] PACKAGE_OR_COMPONENT");
  System.err.println("       pm unhide [--user USER_ID] PACKAGE_OR_COMPONENT");
  System.err.println("       pm grant [--user USER_ID] PACKAGE PERMISSION");
  System.err.println("       pm revoke [--user USER_ID] PACKAGE PERMISSION");
  System.err.println("       pm reset-permissions");
  System.err.println("       pm set-app-link [--user USER_ID] PACKAGE {always|ask|never|undefined}");
  System.err.println("       pm get-app-link [--user USER_ID] PACKAGE");
  System.err.println("       pm set-install-location [0/auto] [1/internal] [2/external]");
  System.err.println("       pm get-install-location");
  System.err.println("       pm set-permission-enforced PERMISSION [true|false]");
  System.err.println("       pm trim-caches DESIRED_FREE_SPACE [internal|UUID]");
  System.err.println("       pm create-user [--profileOf USER_ID] [--managed] [--restricted] [--ephemeral] [--guest] USER_NAME");
  System.err.println("       pm remove-user USER_ID");
  System.err.println("       pm get-max-users");
  System.err.println("");
  System.err.println("NOTE: 'pm list' commands have moved! Run 'adb shell cmd package'");
  System.err.println("  to display the new commands.");
  System.err.println("");
  System.err.println("pm path: print the path to the .apk of the given PACKAGE.");
  System.err.println("");
  System.err.println("pm dump: print system state associated with the given PACKAGE.");
  System.err.println("");
  System.err.println("pm install: install a single legacy package");
  System.err.println("pm install-create: create an install session");
  System.err.println("    -l: forward lock application");
  System.err.println("    -r: replace existing application");
  System.err.println("    -t: allow test packages");
  System.err.println("    -i: specify the installer package name");
  System.err.println("    -s: install application on sdcard");
  System.err.println("    -f: install application on internal flash");
  System.err.println("    -d: allow version code downgrade (debuggable packages only)");
  System.err.println("    -p: partial application install");
  System.err.println("    -g: grant all runtime permissions");
  System.err.println("    -S: size in bytes of entire session");
  System.err.println("");
  System.err.println("pm install-write: write a package into existing session; path may");
  System.err.println("  be '-' to read from stdin");
  System.err.println("    -S: size in bytes of package, required for stdin");
  System.err.println("");
  System.err.println("pm install-commit: perform install of fully staged session");
  System.err.println("pm install-abandon: abandon session");
  System.err.println("");
  System.err.println("pm set-installer: set installer package name");
  System.err.println("");
  System.err.println("pm uninstall: removes a package from the system. Options:");
  System.err.println("    -k: keep the data and cache directories around after package removal.");
  System.err.println("");
  System.err.println("pm clear: deletes all data associated with a package.");
  System.err.println("");
  System.err.println("pm enable, disable, disable-user, disable-until-used, default-state:");
  System.err.println("  these commands change the enabled state of a given package or");
  System.err.println("  component (written as \"package/class\").");
  System.err.println("");
  System.err.println("pm grant, revoke: these commands either grant or revoke permissions");
  System.err.println("    to apps. The permissions must be declared as used in the app's");
  System.err.println("    manifest, be runtime permissions (protection level dangerous),");
  System.err.println("    and the app targeting SDK greater than Lollipop MR1.");
  System.err.println("");
  System.err.println("pm reset-permissions: revert all runtime permissions to their default state.");
  System.err.println("");
  System.err.println("pm get-install-location: returns the current install location.");
  System.err.println("    0 [auto]: Let system decide the best location");
  System.err.println("    1 [internal]: Install on internal device storage");
  System.err.println("    2 [external]: Install on external media");
  System.err.println("");
  System.err.println("pm set-install-location: changes the default install location.");
  System.err.println("  NOTE: this is only intended for debugging; using this can cause");
  System.err.println("  applications to break and other undersireable behavior.");
  System.err.println("    0 [auto]: Let system decide the best location");
  System.err.println("    1 [internal]: Install on internal device storage");
  System.err.println("    2 [external]: Install on external media");
  System.err.println("");
  System.err.println("pm trim-caches: trim cache files to reach the given free space.");
  System.err.println("");
  System.err.println("pm create-user: create a new user with the given USER_NAME,");
  System.err.println("  printing the new user identifier of the user.");
  System.err.println("");
  System.err.println("pm remove-user: remove the user with the given USER_IDENTIFIER,");
  System.err.println("  deleting all data associated with that user");
  System.err.println("");
  return 1;
}
