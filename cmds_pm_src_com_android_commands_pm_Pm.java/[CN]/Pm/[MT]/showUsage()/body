{
  System.err.println("usage: pm list packages [-f] [-d] [-e] [-s] [-3] [-i] [-u] [FILTER]");
  System.err.println("       pm list permission-groups");
  System.err.println("       pm list permissions [-g] [-f] [-d] [-u] [GROUP]");
  System.err.println("       pm list instrumentation [-f] [TARGET-PACKAGE]");
  System.err.println("       pm list features");
  System.err.println("       pm list libraries");
  System.err.println("       pm path PACKAGE");
  System.err.println("       pm install [-l] [-r] [-t] [-i INSTALLER_PACKAGE_NAME] [-s] [-f] PATH");
  System.err.println("       pm uninstall [-k] PACKAGE");
  System.err.println("       pm clear PACKAGE");
  System.err.println("       pm enable PACKAGE_OR_COMPONENT");
  System.err.println("       pm disable PACKAGE_OR_COMPONENT");
  System.err.println("       pm disable-user PACKAGE_OR_COMPONENT");
  System.err.println("       pm grant PACKAGE PERMISSION");
  System.err.println("       pm revoke PACKAGE PERMISSION");
  System.err.println("       pm set-install-location [0/auto] [1/internal] [2/external]");
  System.err.println("       pm get-install-location");
  System.err.println("       pm create-profile USER_NAME");
  System.err.println("       pm remove-profile USER_ID");
  System.err.println("");
  System.err.println("pm list packages: prints all packages, optionally only");
  System.err.println("  those whose package name contains the text in FILTER.  Options:");
  System.err.println("    -f: see their associated file.");
  System.err.println("    -d: filter to only show disbled packages.");
  System.err.println("    -e: filter to only show enabled packages.");
  System.err.println("    -s: filter to only show system packages.");
  System.err.println("    -3: filter to only show third party packages.");
  System.err.println("    -i: see the installer for the packages.");
  System.err.println("    -u: also include uninstalled packages.");
  System.err.println("");
  System.err.println("pm list permission-groups: prints all known permission groups.");
  System.err.println("");
  System.err.println("pm list permissions: prints all known permissions, optionally only");
  System.err.println("  those in GROUP.  Options:");
  System.err.println("    -g: organize by group.");
  System.err.println("    -f: print all information.");
  System.err.println("    -s: short summary.");
  System.err.println("    -d: only list dangerous permissions.");
  System.err.println("    -u: list only the permissions users will see.");
  System.err.println("");
  System.err.println("pm list instrumentation: use to list all test packages; optionally");
  System.err.println("  supply <TARGET-PACKAGE> to list the test packages for a particular");
  System.err.println("  application.  Options:");
  System.err.println("    -f: list the .apk file for the test package.");
  System.err.println("");
  System.err.println("pm list features: prints all features of the system.");
  System.err.println("");
  System.err.println("pm path: print the path to the .apk of the given PACKAGE.");
  System.err.println("");
  System.err.println("pm install: installs a package to the system.  Options:");
  System.err.println("    -l: install the package with FORWARD_LOCK.");
  System.err.println("    -r: reinstall an exisiting app, keeping its data.");
  System.err.println("    -t: allow test .apks to be installed.");
  System.err.println("    -i: specify the installer package name.");
  System.err.println("    -s: install package on sdcard.");
  System.err.println("    -f: install package on internal flash.");
  System.err.println("");
  System.err.println("pm uninstall: removes a package from the system. Options:");
  System.err.println("    -k: keep the data and cache directories around after package removal.");
  System.err.println("");
  System.err.println("pm clear: deletes all data associated with a package.");
  System.err.println("");
  System.err.println("pm enable, disable, disable-user: these commands change the enabled state");
  System.err.println("  of a given package or component (written as \"package/class\").");
  System.err.println("");
  System.err.println("pm grant, revoke: these commands either grant or revoke permissions");
  System.err.println("  to applications.  Only optional permissions the application has");
  System.err.println("  declared can be granted or revoked.");
  System.err.println("");
  System.err.println("pm get-install-location: returns the current install location.");
  System.err.println("    0 [auto]: Let system decide the best location");
  System.err.println("    1 [internal]: Install on internal device storage");
  System.err.println("    2 [external]: Install on external media");
  System.err.println("");
  System.err.println("pm set-install-location: changes the default install location.");
  System.err.println("  NOTE: this is only intended for debugging; using this can cause");
  System.err.println("  applications to break and other undersireable behavior.");
  System.err.println("    0 [auto]: Let system decide the best location");
  System.err.println("    1 [internal]: Install on internal device storage");
  System.err.println("    2 [external]: Install on external media");
}
