{
  int userId=UserHandle.USER_OWNER;
  String opt=null;
  while ((opt=nextOption()) != null) {
    if (opt.equals("--user")) {
      userId=Integer.parseInt(nextArg());
    }
  }
  String pkg=nextArg();
  if (pkg == null) {
    System.err.println("Error: no package specified");
    showUsage();
    return 1;
  }
  String perm=nextArg();
  if (perm == null) {
    System.err.println("Error: no permission specified");
    showUsage();
    return 1;
  }
  try {
    if (grant) {
      mPm.grantRuntimePermission(pkg,perm,userId);
    }
 else {
      mPm.revokeRuntimePermission(pkg,perm,userId);
    }
    return 0;
  }
 catch (  RemoteException e) {
    System.err.println(e.toString());
    System.err.println(PM_NOT_RUNNING_ERR);
    return 1;
  }
catch (  IllegalArgumentException e) {
    System.err.println("Bad argument: " + e.toString());
    showUsage();
    return 1;
  }
catch (  SecurityException e) {
    System.err.println("Operation not allowed: " + e.toString());
    return 1;
  }
}
