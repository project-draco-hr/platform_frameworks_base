{
  if (mChanging) {
    return;
  }
  setPadding(mFramePadding.left + mBackgroundPadding.left,mFramePadding.top + mBackgroundPadding.top,mFramePadding.right + mBackgroundPadding.right,mFramePadding.bottom + mBackgroundPadding.bottom);
  requestLayout();
  invalidate();
  int opacity=PixelFormat.OPAQUE;
  if (windowHasShadow()) {
    opacity=PixelFormat.TRANSLUCENT;
  }
 else {
    Drawable bg=getBackground();
    Drawable fg=getForeground();
    if (bg != null) {
      if (fg == null) {
        opacity=bg.getOpacity();
      }
 else       if (mFramePadding.left <= 0 && mFramePadding.top <= 0 && mFramePadding.right <= 0 && mFramePadding.bottom <= 0) {
        int fop=fg.getOpacity();
        int bop=bg.getOpacity();
        if (false)         Log.v(TAG,"Background opacity: " + bop + ", Frame opacity: "+ fop);
        if (fop == PixelFormat.OPAQUE || bop == PixelFormat.OPAQUE) {
          opacity=PixelFormat.OPAQUE;
        }
 else         if (fop == PixelFormat.UNKNOWN) {
          opacity=bop;
        }
 else         if (bop == PixelFormat.UNKNOWN) {
          opacity=fop;
        }
 else {
          opacity=Drawable.resolveOpacity(fop,bop);
        }
      }
 else {
        if (false)         Log.v(TAG,"Padding: " + mFramePadding);
        opacity=PixelFormat.TRANSLUCENT;
      }
    }
    if (false)     Log.v(TAG,"Background: " + bg + ", Frame: "+ fg);
  }
  if (false)   Log.v(TAG,"Selected default opacity: " + opacity);
  mDefaultOpacity=opacity;
  if (mFeatureId < 0) {
    setDefaultWindowFormat(opacity);
  }
}
