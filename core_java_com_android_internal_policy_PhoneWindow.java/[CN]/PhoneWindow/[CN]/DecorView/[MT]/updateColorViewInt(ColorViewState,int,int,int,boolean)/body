{
  boolean show=height > 0 && (sysUiVis & state.systemUiHideFlag) == 0 && (getAttributes().flags & state.hideWindowFlag) == 0 && (getAttributes().flags & state.translucentFlag) == 0 && (color & Color.BLACK) != 0 && (getAttributes().flags & FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS) != 0;
  boolean visibilityChanged=false;
  View view=state.view;
  if (view == null) {
    if (show) {
      state.view=view=new View(mContext);
      view.setBackgroundColor(color);
      view.setTransitionName(state.transitionName);
      view.setId(state.id);
      visibilityChanged=true;
      view.setVisibility(INVISIBLE);
      state.targetVisibility=VISIBLE;
      addView(view,new LayoutParams(LayoutParams.MATCH_PARENT,height,Gravity.START | state.verticalGravity));
      updateColorViewTranslations();
    }
  }
 else {
    int vis=show ? VISIBLE : INVISIBLE;
    visibilityChanged=state.targetVisibility != vis;
    state.targetVisibility=vis;
    if (show) {
      LayoutParams lp=(LayoutParams)view.getLayoutParams();
      if (lp.height != height) {
        lp.height=height;
        view.setLayoutParams(lp);
      }
      view.setBackgroundColor(color);
    }
  }
  if (visibilityChanged) {
    view.animate().cancel();
    if (animate) {
      if (show) {
        if (view.getVisibility() != VISIBLE) {
          view.setVisibility(VISIBLE);
          view.setAlpha(0.0f);
        }
        view.animate().alpha(1.0f).setInterpolator(mShowInterpolator).setDuration(mBarEnterExitDuration);
      }
 else {
        view.animate().alpha(0.0f).setInterpolator(mHideInterpolator).setDuration(mBarEnterExitDuration).withEndAction(new Runnable(){
          @Override public void run(){
            state.view.setAlpha(1.0f);
            state.view.setVisibility(INVISIBLE);
          }
        }
);
      }
    }
 else {
      view.setAlpha(1.0f);
      view.setVisibility(show ? VISIBLE : INVISIBLE);
    }
  }
}
