{
  mWrapped.onDestroyActionMode(mode);
  if (mode == mPrimaryActionMode) {
    if (mPrimaryActionModePopup != null) {
      removeCallbacks(mShowPrimaryActionModePopup);
    }
    if (mPrimaryActionModeView != null) {
      endOnGoingFadeAnimation();
      mFadeAnim=ObjectAnimator.ofFloat(mPrimaryActionModeView,View.ALPHA,1f,0f);
      mFadeAnim.addListener(new Animator.AnimatorListener(){
        @Override public void onAnimationStart(        Animator animation){
        }
        @Override public void onAnimationEnd(        Animator animation){
          mPrimaryActionModeView.setVisibility(GONE);
          if (mPrimaryActionModePopup != null) {
            mPrimaryActionModePopup.dismiss();
          }
          mPrimaryActionModeView.removeAllViews();
          mFadeAnim=null;
        }
        @Override public void onAnimationCancel(        Animator animation){
        }
        @Override public void onAnimationRepeat(        Animator animation){
        }
      }
);
      mFadeAnim.start();
    }
    mPrimaryActionMode=null;
  }
 else   if (mode == mFloatingActionMode) {
    cleanupFloatingActionModeViews();
    mFloatingActionMode=null;
  }
  if (getCallback() != null && !isDestroyed()) {
    try {
      getCallback().onActionModeFinished(mode);
    }
 catch (    AbstractMethodError ame) {
    }
  }
  requestFitSystemWindows();
}
