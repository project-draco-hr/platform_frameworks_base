{
  if (mContentParent == null) {
    return;
  }
  SparseArray<Parcelable> savedStates=savedInstanceState.getSparseParcelableArray(VIEWS_TAG);
  if (savedStates != null) {
    mContentParent.restoreHierarchyState(savedStates);
  }
  int focusedViewId=savedInstanceState.getInt(FOCUSED_ID_TAG,View.NO_ID);
  if (focusedViewId != View.NO_ID) {
    View needsFocus=mContentParent.findViewById(focusedViewId);
    if (needsFocus != null) {
      needsFocus.requestFocus();
    }
 else {
      Log.w(TAG,"Previously focused view reported id " + focusedViewId + " during save, but can't be found during restore.");
    }
  }
  final int accessFocusHostViewId=savedInstanceState.getInt(ACCESSIBILITY_FOCUSED_ID_TAG,View.NO_ID);
  final int accessFocusVirtualViewId=savedInstanceState.getInt(ACCESSIBILITY_FOCUSED_VIRTUAL_ID_TAG,AccessibilityNodeInfo.UNDEFINED_ITEM_ID);
  tryRestoreAccessibilityFocus(accessFocusHostViewId,accessFocusVirtualViewId);
  SparseArray<Parcelable> panelStates=savedInstanceState.getSparseParcelableArray(PANELS_TAG);
  if (panelStates != null) {
    restorePanelState(panelStates);
  }
  if (mDecorContentParent != null) {
    SparseArray<Parcelable> actionBarStates=savedInstanceState.getSparseParcelableArray(ACTION_BAR_TAG);
    if (actionBarStates != null) {
      doPendingInvalidatePanelMenu();
      mDecorContentParent.restoreToolbarHierarchyState(actionBarStates);
    }
 else {
      Log.w(TAG,"Missing saved instance states for action bar views! " + "State will not be restored.");
    }
  }
}
