{
  Bundle outState=new Bundle();
  if (mContentParent == null) {
    return outState;
  }
  SparseArray<Parcelable> states=new SparseArray<Parcelable>();
  mContentParent.saveHierarchyState(states);
  outState.putSparseParcelableArray(VIEWS_TAG,states);
  final View focusedView=mContentParent.findFocus();
  if (focusedView != null && focusedView.getId() != View.NO_ID) {
    outState.putInt(FOCUSED_ID_TAG,focusedView.getId());
  }
  if (mDecor != null) {
    final ViewRootImpl viewRootImpl=mDecor.getViewRootImpl();
    if (viewRootImpl != null) {
      final View accessFocusHost=viewRootImpl.getAccessibilityFocusedHost();
      if (accessFocusHost != null && accessFocusHost.getId() != View.NO_ID) {
        outState.putInt(ACCESSIBILITY_FOCUSED_ID_TAG,accessFocusHost.getId());
        final AccessibilityNodeInfo accessFocusedNode=viewRootImpl.getAccessibilityFocusedVirtualView();
        if (accessFocusedNode != null) {
          final int virtualNodeId=AccessibilityNodeInfo.getVirtualDescendantId(accessFocusedNode.getSourceNodeId());
          outState.putInt(ACCESSIBILITY_FOCUSED_VIRTUAL_ID_TAG,virtualNodeId);
        }
      }
    }
  }
  SparseArray<Parcelable> panelStates=new SparseArray<Parcelable>();
  savePanelState(panelStates);
  if (panelStates.size() > 0) {
    outState.putSparseParcelableArray(PANELS_TAG,panelStates);
  }
  if (mDecorContentParent != null) {
    SparseArray<Parcelable> actionBarStates=new SparseArray<Parcelable>();
    mDecorContentParent.saveToolbarHierarchyState(actionBarStates);
    outState.putSparseParcelableArray(ACTION_BAR_TAG,actionBarStates);
  }
  return outState;
}
