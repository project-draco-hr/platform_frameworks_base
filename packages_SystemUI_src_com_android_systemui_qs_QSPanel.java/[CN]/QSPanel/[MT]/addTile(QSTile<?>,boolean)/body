{
  final TileRecord r=new TileRecord();
  r.tile=tile;
  r.tileView=createTileView(tile,collapsedView);
  final QSTile.Callback callback=new QSTile.Callback(){
    @Override public void onStateChanged(    QSTile.State state){
      drawTile(r,state);
    }
    @Override public void onShowDetail(    boolean show){
      QSPanel.this.showDetail(show,r);
    }
    @Override public void onToggleStateChanged(    boolean state){
      if (mDetailRecord == r) {
        fireToggleStateChanged(state);
      }
    }
    @Override public void onScanStateChanged(    boolean state){
      r.scanState=state;
      if (mDetailRecord == r) {
        fireScanStateChanged(r.scanState);
      }
    }
    @Override public void onAnnouncementRequested(    CharSequence announcement){
      announceForAccessibility(announcement);
    }
  }
;
  r.tile.addCallback(callback);
  final View.OnClickListener click=new View.OnClickListener(){
    @Override public void onClick(    View v){
      onTileClick(r.tile);
    }
  }
;
  final View.OnLongClickListener longClick=new View.OnLongClickListener(){
    @Override public boolean onLongClick(    View v){
      r.tile.longClick();
      return true;
    }
  }
;
  r.tileView.init(click,longClick);
  r.tile.setListening(mListening);
  callback.onStateChanged(r.tile.getState());
  r.tile.refreshState();
  mRecords.add(r);
  if (mTileLayout != null) {
    mTileLayout.addTile(r);
  }
}
