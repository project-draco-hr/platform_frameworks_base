{
  MultiRectArea dst=new MultiRectArea(false);
  int dx=x2 - x1;
  int dy=y2 - y1;
  if (dx == 0 && dy == 0) {
    if ((clip == null || clip.contains(x1,y1)) && (dasher == null || dasher.visible)) {
      dst=new MultiRectArea(x1,y1,x1,y1);
    }
    return dst;
  }
  if (dy < 0) {
    return rasterize(x2,y2,x1,y1,clip,dasher,true);
  }
  Line line;
  if (dasher == null) {
    if (dx == 0) {
      line=new Line.Ortog.Ver(x1,y1,x2,y2,dst);
    }
 else     if (dy == 0) {
      line=new Line.Ortog.Hor(x1,y1,x2,y2,dst);
    }
 else {
      if (dy < Math.abs(dx)) {
        line=new Line.Diag.Hor(x1,y1,x2,y2,dst);
      }
 else {
        line=new Line.Diag.Ver(x1,y1,x2,y2,dst);
      }
    }
  }
 else {
    if (dx == 0) {
      line=new Line.Ortog.VerDashed(x1,y1,x2,y2,dst,dasher,invert);
    }
 else     if (dy == 0) {
      line=new Line.Ortog.HorDashed(x1,y1,x2,y2,dst,dasher);
    }
 else {
      if (dy < Math.abs(dx)) {
        line=new Line.Diag.HorDashed(x1,y1,x2,y2,dst,dasher,invert);
      }
 else {
        line=new Line.Diag.VerDashed(x1,y1,x2,y2,dst,dasher,invert);
      }
    }
  }
  if (clip == null || clip.isEmpty()) {
    line.rasterize();
  }
 else {
    for (int i=1; i < clip.rect[0]; i+=4) {
      line.rasterize(clip.rect,i);
    }
  }
  return dst;
}
