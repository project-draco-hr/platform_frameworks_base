{
switch (msg.what) {
case MSG_SET_CALL_SERVICE_ADAPTER:
    mAdapter=new CallServiceAdapter((ICallServiceAdapter)msg.obj);
  onAdapterAttached(mAdapter);
break;
case MSG_IS_COMPATIBLE_WITH:
isCompatibleWith((CallInfo)msg.obj);
break;
case MSG_CALL:
call((CallInfo)msg.obj);
break;
case MSG_ABORT:
abort((String)msg.obj);
break;
case MSG_SET_INCOMING_CALL_ID:
{
SomeArgs args=(SomeArgs)msg.obj;
try {
String callId=(String)args.arg1;
Bundle extras=(Bundle)args.arg2;
setIncomingCallId(callId,extras);
}
  finally {
args.recycle();
}
break;
}
case MSG_ANSWER:
answer((String)msg.obj);
break;
case MSG_REJECT:
reject((String)msg.obj);
break;
case MSG_DISCONNECT:
disconnect((String)msg.obj);
break;
case MSG_HOLD:
hold((String)msg.obj);
break;
case MSG_UNHOLD:
unhold((String)msg.obj);
break;
case MSG_ON_AUDIO_STATE_CHANGED:
{
SomeArgs args=(SomeArgs)msg.obj;
try {
String callId=(String)args.arg1;
CallAudioState audioState=(CallAudioState)args.arg2;
onAudioStateChanged(callId,audioState);
}
  finally {
args.recycle();
}
break;
}
case MSG_PLAY_DTMF_TONE:
playDtmfTone((String)msg.obj,(char)msg.arg1);
break;
case MSG_STOP_DTMF_TONE:
stopDtmfTone((String)msg.obj);
break;
case MSG_CONFERENCE:
{
SomeArgs args=(SomeArgs)msg.obj;
try {
String conferenceCallId=(String)args.arg1;
String callId=(String)args.arg2;
conference(conferenceCallId,callId);
}
  finally {
args.recycle();
}
break;
}
case MSG_ON_POST_DIAL_CONTINUE:
{
SomeArgs args=(SomeArgs)msg.obj;
try {
String callId=(String)args.arg1;
boolean proceed=(args.argi1 == 1);
onPostDialContinue(callId,proceed);
}
  finally {
args.recycle();
}
break;
}
case MSG_SPLIT_FROM_CONFERENCE:
splitFromConference((String)msg.obj);
break;
default :
break;
}
}
