{
  boolean success=false;
synchronized (mLock) {
    PrintJobInfo printJob=getPrintJobInfo(printJobId,PrintManager.APP_ID_ANY);
    if (printJob != null) {
      final int oldState=printJob.getState();
      if (oldState == state) {
        return false;
      }
      success=true;
      printJob.setState(state);
      printJob.setStateReason(error);
      mNotificationController.onPrintJobStateChanged(printJob);
      if (DEBUG_PRINT_JOB_LIFECYCLE) {
        Slog.i(LOG_TAG,"[STATE CHANGED] " + printJob);
      }
switch (state) {
case PrintJobInfo.STATE_COMPLETED:
case PrintJobInfo.STATE_CANCELED:
        removePrintJobFileLocked(printJob.getId());
case PrintJobInfo.STATE_FAILED:
{
        PrinterId printerId=printJob.getPrinterId();
        if (printerId != null) {
          ComponentName service=printerId.getServiceName();
          if (!hasActivePrintJobsForServiceLocked(service)) {
            sendOnAllPrintJobsForServiceHandled(service);
          }
        }
      }
    break;
case PrintJobInfo.STATE_QUEUED:
{
    sendOnPrintJobQueued(new PrintJobInfo(printJob));
  }
break;
}
if (shouldPersistPrintJob(printJob)) {
mPersistanceManager.writeStateLocked();
}
if (!hasActivePrintJobsLocked()) {
notifyOnAllPrintJobsHandled();
}
Message message=mHandlerCaller.obtainMessageIIO(HandlerCallerCallback.MSG_ON_PRINT_JOB_STATE_CHANGED,printJob.getAppId(),0,printJob.getId());
mHandlerCaller.executeOrSendMessage(message);
}
}
return success;
}
