{
switch (message.what) {
case MSG_SET_CLIENT:
{
synchronized (mLock) {
        mClient=(IPrintSpoolerClient)message.obj;
        if (mClient != null) {
          Message msg=mHandlerCaller.obtainMessage(HandlerCallerCallback.MSG_CHECK_ALL_PRINTJOBS_HANDLED);
          mHandlerCaller.sendMessageDelayed(msg,CHECK_ALL_PRINTJOBS_HANDLED_DELAY);
        }
      }
    }
  break;
case MSG_START_PRINT_JOB_CONFIG_ACTIVITY:
{
  SomeArgs args=(SomeArgs)message.obj;
  IPrintClient client=(IPrintClient)args.arg1;
  IntentSender sender=(IntentSender)args.arg2;
  args.recycle();
  try {
    client.startPrintJobConfigActivity(sender);
  }
 catch (  RemoteException re) {
    Slog.i(LOG_TAG,"Error starting print job config activity!",re);
  }
}
break;
case MSG_ON_PRINT_JOB_QUEUED:
{
PrintJobInfo printJob=(PrintJobInfo)message.obj;
if (mClient != null) {
try {
  mClient.onPrintJobQueued(printJob);
}
 catch (RemoteException re) {
  Slog.e(LOG_TAG,"Error notify for a queued print job.",re);
}
}
}
break;
case MSG_ON_ALL_PRINT_JOBS_FOR_SERIVICE_HANDLED:
{
ComponentName service=(ComponentName)message.obj;
if (mClient != null) {
try {
mClient.onAllPrintJobsForServiceHandled(service);
}
 catch (RemoteException re) {
Slog.e(LOG_TAG,"Error notify for all print jobs per service" + " handled.",re);
}
}
}
break;
case MSG_ON_ALL_PRINT_JOBS_HANDLED:
{
if (mClient != null) {
try {
mClient.onAllPrintJobsHandled();
}
 catch (RemoteException re) {
Slog.e(LOG_TAG,"Error notify for all print job handled.",re);
}
}
}
break;
case MSG_CHECK_ALL_PRINTJOBS_HANDLED:
{
checkAllPrintJobsHandled();
}
break;
case MSG_ON_PRINT_JOB_STATE_CHANGED:
{
if (mClient != null) {
PrintJobInfo printJob=(PrintJobInfo)message.obj;
try {
mClient.onPrintJobStateChanged(printJob);
}
 catch (RemoteException re) {
Slog.e(LOG_TAG,"Error notify for print job state change.",re);
}
}
}
break;
}
}
