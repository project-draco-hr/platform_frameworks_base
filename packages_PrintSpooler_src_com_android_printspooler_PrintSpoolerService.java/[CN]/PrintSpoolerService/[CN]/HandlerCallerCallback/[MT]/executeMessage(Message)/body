{
switch (message.what) {
case MSG_CREATE_PRINTER_DISCOVERY_SESSION:
{
      final IPrintSpoolerClient client;
synchronized (mLock) {
        client=mClient;
      }
      if (client != null) {
        try {
          client.createPrinterDiscoverySession();
        }
 catch (        RemoteException re) {
          Log.e(LOG_TAG,"Error creating printer discovery session.",re);
        }
      }
    }
  break;
case MSG_DESTROY_PRINTER_DISCOVERY_SESSION:
{
  final IPrintSpoolerClient client;
synchronized (mLock) {
    client=mClient;
  }
  if (client != null) {
    try {
      client.destroyPrinterDiscoverySession();
    }
 catch (    RemoteException re) {
      Log.e(LOG_TAG,"Error destroying printer discovery session.",re);
    }
  }
}
break;
case MSG_START_PRINTER_DISCOVERY:
{
final IPrintSpoolerClient client;
synchronized (mLock) {
client=mClient;
}
if (client != null) {
List<PrinterId> priorityList=(ArrayList<PrinterId>)message.obj;
try {
  client.startPrinterDiscovery(priorityList);
}
 catch (RemoteException re) {
  Log.e(LOG_TAG,"Error starting printer discovery.",re);
}
}
}
break;
case MSG_STOP_PRINTER_DISCOVERY:
{
final IPrintSpoolerClient client;
synchronized (mLock) {
client=mClient;
}
if (client != null) {
try {
client.stopPrinterDiscovery();
}
 catch (RemoteException re) {
Log.e(LOG_TAG,"Error stopping printer discovery.",re);
}
}
}
break;
case MSG_REQUEST_PRINTER_UPDATE:
{
final IPrintSpoolerClient client;
synchronized (mLock) {
client=mClient;
}
if (client != null) {
PrinterId printerId=(PrinterId)message.obj;
try {
client.requestPrinterUpdate(printerId);
}
 catch (RemoteException re) {
Log.e(LOG_TAG,"Error requesing printer update.",re);
}
}
}
break;
case MSG_SET_CLIENT:
{
synchronized (mLock) {
mClient=(IPrintSpoolerClient)message.obj;
if (mClient != null) {
Message msg=mHandlerCaller.obtainMessage(HandlerCallerCallback.MSG_CHECK_ALL_PRINTJOBS_HANDLED);
mHandlerCaller.sendMessageDelayed(msg,CHECK_ALL_PRINTJOBS_HANDLED_DELAY);
}
}
}
break;
case MSG_START_PRINT_JOB_CONFIG_ACTIVITY:
{
SomeArgs args=(SomeArgs)message.obj;
IPrintClient client=(IPrintClient)args.arg1;
IntentSender sender=(IntentSender)args.arg2;
args.recycle();
try {
client.startPrintJobConfigActivity(sender);
}
 catch (RemoteException re) {
Slog.i(LOG_TAG,"Error starting print job config activity!",re);
}
}
break;
case MSG_ON_PRINT_JOB_QUEUED:
{
PrintJobInfo printJob=(PrintJobInfo)message.obj;
if (mClient != null) {
try {
mClient.onPrintJobQueued(printJob);
}
 catch (RemoteException re) {
Slog.e(LOG_TAG,"Error notify for a queued print job.",re);
}
}
}
break;
case MSG_ON_ALL_PRINT_JOBS_FOR_SERIVICE_HANDLED:
{
ComponentName service=(ComponentName)message.obj;
if (mClient != null) {
try {
mClient.onAllPrintJobsForServiceHandled(service);
}
 catch (RemoteException re) {
Slog.e(LOG_TAG,"Error notify for all print jobs per service" + " handled.",re);
}
}
}
break;
case MSG_ON_ALL_PRINT_JOBS_HANDLED:
{
if (mClient != null) {
try {
mClient.onAllPrintJobsHandled();
}
 catch (RemoteException re) {
Slog.e(LOG_TAG,"Error notify for all print job handled.",re);
}
}
}
break;
case MSG_CHECK_ALL_PRINTJOBS_HANDLED:
{
checkAllPrintJobsHandled();
}
break;
case MSG_ON_PRINTERS_ADDED:
{
final PrinterDiscoverySession session;
synchronized (mLock) {
session=mDiscoverySession;
}
if (session != null) {
List<PrinterInfo> printers=(ArrayList<PrinterInfo>)message.obj;
session.onPrintersAdded(printers);
}
}
break;
case MSG_ON_PRINTERS_REMOVED:
{
final PrinterDiscoverySession session;
synchronized (mLock) {
session=mDiscoverySession;
}
if (session != null) {
List<PrinterId> printerIds=(ArrayList<PrinterId>)message.obj;
session.onPrintersRemoved(printerIds);
}
}
break;
case MSG_ON_PRINTERS_UPDATED:
{
final PrinterDiscoverySession session;
synchronized (mLock) {
session=mDiscoverySession;
}
if (session != null) {
List<PrinterInfo> printers=(ArrayList<PrinterInfo>)message.obj;
session.onPrintersUpdated(printers);
}
}
break;
}
}
