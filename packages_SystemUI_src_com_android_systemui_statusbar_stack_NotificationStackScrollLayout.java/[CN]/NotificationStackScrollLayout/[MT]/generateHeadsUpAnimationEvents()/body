{
  for (  Pair<ExpandableNotificationRow,Boolean> eventPair : mHeadsUpChangeAnimations) {
    ExpandableNotificationRow row=eventPair.first;
    boolean isHeadsUp=eventPair.second;
    int type=AnimationEvent.ANIMATION_TYPE_HEADS_UP_OTHER;
    boolean onBottom=false;
    boolean pinnedAndClosed=row.isPinned() && !mIsExpanded;
    if (!mIsExpanded && !isHeadsUp) {
      type=row.wasJustClicked() ? AnimationEvent.ANIMATION_TYPE_HEADS_UP_DISAPPEAR_CLICK : AnimationEvent.ANIMATION_TYPE_HEADS_UP_DISAPPEAR;
    }
 else {
      StackViewState viewState=mCurrentStackScrollState.getViewStateForView(row);
      if (viewState == null) {
        continue;
      }
      if (isHeadsUp && (mAddedHeadsUpChildren.contains(row) || pinnedAndClosed)) {
        if (pinnedAndClosed || shouldHunAppearFromBottom(viewState)) {
          type=AnimationEvent.ANIMATION_TYPE_HEADS_UP_APPEAR;
        }
 else {
          type=AnimationEvent.ANIMATION_TYPE_ADD;
        }
        onBottom=!pinnedAndClosed;
      }
    }
    AnimationEvent event=new AnimationEvent(row,type);
    event.headsUpFromBottom=onBottom;
    mAnimationEvents.add(event);
  }
  mHeadsUpChangeAnimations.clear();
  mAddedHeadsUpChildren.clear();
}
