{
  setIsExpanded(height > 0.0f);
  int newStackHeight=(int)height;
  int itemHeight=getItemHeight();
  int bottomStackPeekSize=mBottomStackPeekSize;
  int minStackHeight=itemHeight + bottomStackPeekSize;
  int stackHeight;
  if (newStackHeight - mTopPadding >= minStackHeight) {
    setTranslationY(0);
    stackHeight=newStackHeight;
  }
 else {
    int translationY=(newStackHeight - minStackHeight);
    float partiallyThere=(float)(newStackHeight - mTopPadding) / minStackHeight;
    partiallyThere=Math.max(0,partiallyThere);
    translationY+=(1 - partiallyThere) * bottomStackPeekSize;
    setTranslationY(translationY - mTopPadding);
    stackHeight=(int)(height - (translationY - mTopPadding));
  }
  if (stackHeight != mCurrentStackHeight) {
    mCurrentStackHeight=stackHeight;
    updateAlgorithmHeightAndPadding();
    requestChildrenUpdate();
  }
}
