{
  int previousEndValue=mEndAnimationRect.top;
  int newEndValue=mBackgroundBounds.top;
  ObjectAnimator previousAnimator=mTopAnimator;
  if (previousAnimator != null && previousEndValue == newEndValue) {
    return;
  }
  if (!mAnimateNextBackgroundTop) {
    if (previousAnimator != null) {
      int previousStartValue=mStartAnimationRect.top;
      PropertyValuesHolder[] values=previousAnimator.getValues();
      values[0].setIntValues(previousStartValue,newEndValue);
      mStartAnimationRect.top=previousStartValue;
      mEndAnimationRect.top=newEndValue;
      previousAnimator.setCurrentPlayTime(previousAnimator.getCurrentPlayTime());
      return;
    }
 else {
      setBackgroundTop(newEndValue);
      return;
    }
  }
  if (previousAnimator != null) {
    previousAnimator.cancel();
  }
  ObjectAnimator animator=ObjectAnimator.ofInt(this,"backgroundTop",mCurrentBounds.top,newEndValue);
  Interpolator interpolator=Interpolators.FAST_OUT_SLOW_IN;
  animator.setInterpolator(interpolator);
  animator.setDuration(StackStateAnimator.ANIMATION_DURATION_STANDARD);
  animator.addListener(new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator animation){
      mStartAnimationRect.top=-1;
      mEndAnimationRect.top=-1;
      mTopAnimator=null;
    }
  }
);
  animator.start();
  mStartAnimationRect.top=mCurrentBounds.top;
  mEndAnimationRect.top=newEndValue;
  mTopAnimator=animator;
}
