{
  mHandler.removeCallbacks(mFalsingCheck);
  if (mCurrIconRow != null) {
    mCurrIconRow.setSnapping(false);
    boolean onLeft=mGearSnappedTo ? mGearSnappedOnLeft : mCurrIconRow.isIconOnLeft();
    boolean locationChange=isTowardsGear(translation,onLeft) ? false : mCurrIconRow.isIconLocationChange(translation);
    if (locationChange) {
      setSnappedToGear(false);
      if (!mHandler.hasCallbacks(mCheckForDrag)) {
        mCheckForDrag=null;
      }
 else {
        mCurrIconRow.setGearAlpha(0f);
        mCurrIconRow.setIconLocation(translation > 0);
      }
    }
  }
  final boolean gutsExposed=(view instanceof ExpandableNotificationRow) && ((ExpandableNotificationRow)view).areGutsExposed();
  if (!isPinnedHeadsUp(view) && !gutsExposed) {
    checkForDrag();
  }
}
