{
  if (DEBUG)   Slog.d(TAG,"refreshAgentList()");
  PackageManager pm=mContext.getPackageManager();
  List<UserInfo> userInfos=mUserManager.getUsers(true);
  LockPatternUtils lockPatternUtils=new LockPatternUtils(mContext);
  ArraySet<AgentInfo> obsoleteAgents=new ArraySet<>();
  obsoleteAgents.addAll(mActiveAgents);
  for (  UserInfo userInfo : userInfos) {
    if (lockPatternUtils.getKeyguardStoredPasswordQuality() == DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED)     continue;
    DevicePolicyManager dpm=lockPatternUtils.getDevicePolicyManager();
    int disabledFeatures=dpm.getKeyguardDisabledFeatures(null,userInfo.id);
    final boolean disableTrustAgents=(disabledFeatures & DevicePolicyManager.KEYGUARD_DISABLE_TRUST_AGENTS) != 0;
    List<ComponentName> enabledAgents=lockPatternUtils.getEnabledTrustAgents(userInfo.id);
    if (enabledAgents == null) {
      continue;
    }
    List<ResolveInfo> resolveInfos=pm.queryIntentServicesAsUser(TRUST_AGENT_INTENT,PackageManager.GET_META_DATA,userInfo.id);
    for (    ResolveInfo resolveInfo : resolveInfos) {
      if (resolveInfo.serviceInfo == null)       continue;
      String packageName=resolveInfo.serviceInfo.packageName;
      if (pm.checkPermission(PERMISSION_PROVIDE_AGENT,packageName) != PackageManager.PERMISSION_GRANTED) {
        Log.w(TAG,"Skipping agent because package " + packageName + " does not have permission "+ PERMISSION_PROVIDE_AGENT+ ".");
        continue;
      }
      ComponentName name=getComponentName(resolveInfo);
      if (!enabledAgents.contains(name))       continue;
      if (disableTrustAgents) {
        List<String> features=dpm.getTrustAgentFeaturesEnabled(null,name);
        if (features == null || features.isEmpty())         continue;
      }
      AgentInfo agentInfo=new AgentInfo();
      agentInfo.component=name;
      agentInfo.userId=userInfo.id;
      if (!mActiveAgents.contains(agentInfo)) {
        agentInfo.label=resolveInfo.loadLabel(pm);
        agentInfo.icon=resolveInfo.loadIcon(pm);
        agentInfo.settings=getSettingsComponentName(pm,resolveInfo);
        agentInfo.agent=new TrustAgentWrapper(mContext,this,new Intent().setComponent(name),userInfo.getUserHandle());
        mActiveAgents.add(agentInfo);
      }
 else {
        obsoleteAgents.remove(agentInfo);
      }
    }
  }
  boolean trustMayHaveChanged=false;
  for (int i=0; i < obsoleteAgents.size(); i++) {
    AgentInfo info=obsoleteAgents.valueAt(i);
    if (info.agent.isManagingTrust()) {
      trustMayHaveChanged=true;
    }
    info.agent.unbind();
    mActiveAgents.remove(info);
  }
  if (trustMayHaveChanged) {
    updateTrustAll();
  }
}
