{
  if (DEBUG)   Slog.d(TAG,"refreshAgentList()");
  if (!mTrustAgentsCanRun) {
    return;
  }
  if (userId != UserHandle.USER_ALL && userId < UserHandle.USER_OWNER) {
    Log.e(TAG,"refreshAgentList(userId=" + userId + "): Invalid user handle,"+ " must be USER_ALL or a specific user.",new Throwable("here"));
    userId=UserHandle.USER_ALL;
  }
  PackageManager pm=mContext.getPackageManager();
  List<UserInfo> userInfos;
  if (userId == UserHandle.USER_ALL) {
    userInfos=mUserManager.getUsers(true);
  }
 else {
    userInfos=new ArrayList<>();
    userInfos.add(mUserManager.getUserInfo(userId));
  }
  LockPatternUtils lockPatternUtils=mLockPatternUtils;
  ArraySet<AgentInfo> obsoleteAgents=new ArraySet<>();
  obsoleteAgents.addAll(mActiveAgents);
  for (  UserInfo userInfo : userInfos) {
    if (userInfo == null || userInfo.partial || !userInfo.isEnabled() || userInfo.guestToRemove)     continue;
    if (!userInfo.supportsSwitchToByUser())     continue;
    if (!mActivityManager.isUserRunning(userInfo.id))     continue;
    if (!lockPatternUtils.isSecure(userInfo.id))     continue;
    if (!getUserHasAuthenticated(userInfo.id))     continue;
    DevicePolicyManager dpm=lockPatternUtils.getDevicePolicyManager();
    int disabledFeatures=dpm.getKeyguardDisabledFeatures(null,userInfo.id);
    final boolean disableTrustAgents=(disabledFeatures & DevicePolicyManager.KEYGUARD_DISABLE_TRUST_AGENTS) != 0;
    List<ComponentName> enabledAgents=lockPatternUtils.getEnabledTrustAgents(userInfo.id);
    if (enabledAgents == null) {
      continue;
    }
    List<ResolveInfo> resolveInfos=resolveAllowedTrustAgents(pm,userInfo.id);
    for (    ResolveInfo resolveInfo : resolveInfos) {
      ComponentName name=getComponentName(resolveInfo);
      if (!enabledAgents.contains(name))       continue;
      if (disableTrustAgents) {
        List<PersistableBundle> config=dpm.getTrustAgentConfiguration(null,name,userInfo.id);
        if (config == null || config.isEmpty())         continue;
      }
      AgentInfo agentInfo=new AgentInfo();
      agentInfo.component=name;
      agentInfo.userId=userInfo.id;
      if (!mActiveAgents.contains(agentInfo)) {
        agentInfo.label=resolveInfo.loadLabel(pm);
        agentInfo.icon=resolveInfo.loadIcon(pm);
        agentInfo.settings=getSettingsComponentName(pm,resolveInfo);
        agentInfo.agent=new TrustAgentWrapper(mContext,this,new Intent().setComponent(name),userInfo.getUserHandle());
        mActiveAgents.add(agentInfo);
      }
 else {
        obsoleteAgents.remove(agentInfo);
      }
    }
  }
  boolean trustMayHaveChanged=false;
  for (int i=0; i < obsoleteAgents.size(); i++) {
    AgentInfo info=obsoleteAgents.valueAt(i);
    if (userId == UserHandle.USER_ALL || userId == info.userId) {
      if (info.agent.isManagingTrust()) {
        trustMayHaveChanged=true;
      }
      info.agent.destroy();
      mActiveAgents.remove(info);
    }
  }
  if (trustMayHaveChanged) {
    if (userId == UserHandle.USER_ALL) {
      updateTrustAll();
    }
 else {
      updateTrust(userId,0);
    }
  }
}
