{
  Map<String,String> pddAttributes=new HashMap<>();
  pddAttributes.put(OMAConstants.TAG_Version,OMAConstants.MOVersion);
  pddAttributes.put("requestReason",sRequestReasons.get(reason));
  if (sessionID != null) {
    pddAttributes.put(OMAConstants.TAG_SessionID,sessionID);
  }
  if (redirURI != null) {
    pddAttributes.put("redirectURI",redirURI);
  }
  XMLNode pddNode=new XMLNode(parent,OMAConstants.TAG_PostDevData,pddAttributes);
  XMLNode vNode=new XMLNode(pddNode,OMAConstants.TAG_SupportedVersions,(HashMap<String,String>)null);
  vNode.setText("1.0");
  pddNode.addChild(vNode);
  XMLNode moNode=new XMLNode(pddNode,OMAConstants.TAG_SupportedMOs,(HashMap<String,String>)null);
  StringBuilder sb=new StringBuilder();
  boolean first=true;
  for (  String urn : OMAConstants.SupportedMO_URNs) {
    if (first) {
      first=false;
    }
 else {
      sb.append(' ');
    }
    sb.append(urn);
  }
  moNode.setText(sb.toString());
  pddNode.addChild(moNode);
  if (mos != null) {
    for (    MOTree moTree : mos) {
      Map<String,String> map=null;
      if (moTree.getUrn() != null) {
        map=new HashMap<>(1);
        map.put(OMAConstants.SppMOAttribute,moTree.getUrn());
      }
      moNode=new XMLNode(pddNode,OMAConstants.TAG_MOContainer,map);
      moNode.setText(moTree.toXml());
      pddNode.addChild(moNode);
    }
  }
  parent.addChild(pddNode);
  return pddNode;
}
