{
  if (VDBG)   Slog.v(TAG,"systemReady");
  mContext.registerReceiver(new BroadcastReceiver(){
    @Override public void onReceive(    Context context,    Intent intent){
      dispatchPoll();
    }
  }
,new IntentFilter(ACTION_POLL));
  mContext.registerReceiver(new BroadcastReceiver(){
    @Override public void onReceive(    Context context,    Intent intent){
      dispatchReset();
    }
  }
,new IntentFilter(ACTION_RESET));
  FileInputStream stream=null;
  try {
    Properties properties=new Properties();
    File file=new File(PROPERTIES_FILE);
    stream=new FileInputStream(file);
    properties.load(stream);
    final String ntpServer=properties.getProperty("NTP_SERVER",null);
    if (mTime instanceof NtpTrustedTime) {
      ((NtpTrustedTime)mTime).setNtpServer(ntpServer,MAX_NTP_FETCH_WAIT);
    }
  }
 catch (  IOException e) {
    Slog.e(TAG,"Could not open GPS configuration file " + PROPERTIES_FILE);
  }
 finally {
    if (stream != null) {
      try {
        stream.close();
      }
 catch (      Exception e) {
      }
    }
  }
  mThread=new HandlerThread(TAG);
  mThread.start();
  mHandler=new MyHandler(mThread.getLooper());
  mHandler.obtainMessage(EVENT_REBOOT_RECOVERY).sendToTarget();
  mInterfaceObserver=new InterfaceObserver(mHandler,EVENT_IFACE_UP,mIface);
  try {
    mNMService.registerObserver(mInterfaceObserver);
  }
 catch (  RemoteException e) {
    Slog.e(TAG,"Could not register InterfaceObserver " + e);
  }
  mSettingsObserver=new SettingsObserver(mHandler,EVENT_POLICY_CHANGED);
  mSettingsObserver.register(mContext);
}
