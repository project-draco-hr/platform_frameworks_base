{
  if (mPolicyThreshold == 0)   return;
  if (currentTotal > mPolicyThreshold) {
    if (mThrottleLevel != 1) {
synchronized (ThrottleService.this) {
        mThrottleLevel=1;
      }
      if (DBG)       Slog.d(TAG,"Threshold " + mPolicyThreshold + " exceeded!");
      try {
        mNMService.setInterfaceThrottle(mPolicyIface,mPolicyThrottleValue,mPolicyThrottleValue);
      }
 catch (      Exception e) {
        Slog.e(TAG,"error setting Throttle: " + e);
      }
      mNotificationManager.cancel(com.android.internal.R.drawable.stat_sys_throttle_warning);
      postNotification(com.android.internal.R.string.throttled_notification_title,com.android.internal.R.string.throttled_notification_message,com.android.internal.R.drawable.stat_sys_throttled,Notification.FLAG_ONGOING_EVENT);
      Intent broadcast=new Intent(ThrottleManager.THROTTLE_ACTION);
      broadcast.putExtra(ThrottleManager.EXTRA_THROTTLE_LEVEL,mPolicyThrottleValue);
      mContext.sendStickyBroadcast(broadcast);
    }
  }
 else {
    if ((mPolicyNotificationsAllowedMask & NOTIFICATION_WARNING) != 0) {
      if (currentTotal > (mPolicyThreshold / 2) && !mWarningNotificationSent) {
        mWarningNotificationSent=true;
        mNotificationManager.cancel(com.android.internal.R.drawable.stat_sys_throttle_warning);
        postNotification(com.android.internal.R.string.throttle_warning_notification_title,com.android.internal.R.string.throttle_warning_notification_message,com.android.internal.R.drawable.stat_sys_throttle_warning,0);
      }
 else {
        mWarningNotificationSent=false;
      }
    }
  }
}
