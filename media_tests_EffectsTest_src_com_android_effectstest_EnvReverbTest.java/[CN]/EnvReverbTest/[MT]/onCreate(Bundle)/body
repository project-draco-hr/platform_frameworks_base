{
  super.onCreate(icicle);
  Log.d(TAG,"onCreate");
  SeekBar seekBar;
  TextView textView;
  ToggleButton button;
  setContentView(R.layout.envreverbtest);
  ImageView playPause=(ImageView)findViewById(R.id.playPause1);
  ImageView stop=(ImageView)findViewById(R.id.stop1);
  textView=(TextView)findViewById(R.id.sessionText);
  if (sPlayerController == null) {
    sPlayerController=new SimplePlayer(this,R.id.playPause1,playPause,R.id.stop1,stop,textView,R.raw.mp3_sample,AudioManager.STREAM_MUSIC,0);
  }
 else {
    sPlayerController.set(this,R.id.playPause1,playPause,R.id.stop1,stop,textView,AudioManager.STREAM_MUSIC,0);
  }
  mSendLevelSeekBar=(SeekBar)findViewById(R.id.sendLevelSeekBar);
  mSendLevelDisplay=(TextView)findViewById(R.id.sendLevelValue);
  mSendLevelSeekBar.setMax(100);
  mSendLevelSeekBar.setOnSeekBarChangeListener(this);
  mSendLevelSeekBar.setProgress(expToLin(sSendLevel,100));
  sPlayerController.setAuxEffectSendLevel(sSendLevel);
  mOnOffButton=(ToggleButton)findViewById(R.id.rvbOnOff);
  mReleaseButton=(ToggleButton)findViewById(R.id.rvbReleaseButton);
  mAttachButton=(ToggleButton)findViewById(R.id.attachButton);
  getEffect(0);
  if (mReverb != null) {
    mOnOffButton.setOnCheckedChangeListener(this);
    mReleaseButton.setOnCheckedChangeListener(this);
    mAttachButton.setOnCheckedChangeListener(this);
    seekBar=(SeekBar)findViewById(R.id.rvbParam1SeekBar);
    textView=(TextView)findViewById(R.id.rvbParam1Value);
    mParameters[0]=new RoomLevelParam(mReverb,seekBar,textView);
    seekBar.setOnSeekBarChangeListener(mParameters[0]);
    seekBar=(SeekBar)findViewById(R.id.rvbParam2SeekBar);
    textView=(TextView)findViewById(R.id.rvbParam2Value);
    mParameters[1]=new RoomHFLevelParam(mReverb,seekBar,textView);
    seekBar.setOnSeekBarChangeListener(mParameters[1]);
    seekBar=(SeekBar)findViewById(R.id.rvbParam3SeekBar);
    textView=(TextView)findViewById(R.id.rvbParam3Value);
    mParameters[2]=new DecayTimeParam(mReverb,seekBar,textView);
    seekBar.setOnSeekBarChangeListener(mParameters[2]);
    seekBar=(SeekBar)findViewById(R.id.rvbParam4SeekBar);
    textView=(TextView)findViewById(R.id.rvbParam4Value);
    mParameters[3]=new DecayHFRatioParam(mReverb,seekBar,textView);
    seekBar.setOnSeekBarChangeListener(mParameters[3]);
    seekBar=(SeekBar)findViewById(R.id.rvbParam5SeekBar);
    textView=(TextView)findViewById(R.id.rvbParam5Value);
    mParameters[4]=new ReflectionsLevelParam(mReverb,seekBar,textView);
    seekBar.setOnSeekBarChangeListener(mParameters[4]);
    seekBar=(SeekBar)findViewById(R.id.rvbParam6SeekBar);
    textView=(TextView)findViewById(R.id.rvbParam6Value);
    mParameters[5]=new ReflectionsDelayParam(mReverb,seekBar,textView);
    seekBar.setOnSeekBarChangeListener(mParameters[5]);
    seekBar=(SeekBar)findViewById(R.id.rvbParam7SeekBar);
    textView=(TextView)findViewById(R.id.rvbParam7Value);
    mParameters[6]=new ReverbLevelParam(mReverb,seekBar,textView);
    seekBar.setOnSeekBarChangeListener(mParameters[6]);
    seekBar=(SeekBar)findViewById(R.id.rvbParam8SeekBar);
    textView=(TextView)findViewById(R.id.rvbParam8Value);
    mParameters[7]=new ReverbDelayParam(mReverb,seekBar,textView);
    seekBar.setOnSeekBarChangeListener(mParameters[7]);
    seekBar=(SeekBar)findViewById(R.id.rvbParam9SeekBar);
    textView=(TextView)findViewById(R.id.rvbParam9Value);
    mParameters[8]=new DiffusionParam(mReverb,seekBar,textView);
    seekBar.setOnSeekBarChangeListener(mParameters[8]);
    seekBar=(SeekBar)findViewById(R.id.rvbParam10SeekBar);
    textView=(TextView)findViewById(R.id.rvbParam10Value);
    mParameters[9]=new DensityParam(mReverb,seekBar,textView);
    seekBar.setOnSeekBarChangeListener(mParameters[9]);
  }
}
