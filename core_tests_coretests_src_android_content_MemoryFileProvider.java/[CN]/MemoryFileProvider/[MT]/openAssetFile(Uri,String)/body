{
  int match=sURLMatcher.match(url);
switch (match) {
case DATA_ID_BLOB:
    String sql="SELECT _blob FROM data WHERE _id=" + url.getPathSegments().get(1);
  return getBlobColumnAsAssetFile(url,mode,sql);
case HUGE:
try {
  MemoryFile memoryFile=new MemoryFile(null,5000000);
  memoryFile.writeBytes(TEST_BLOB,0,1000000,TEST_BLOB.length);
  memoryFile.deactivate();
  return AssetFileDescriptor.fromMemoryFile(memoryFile);
}
 catch (IOException ex) {
  throw new FileNotFoundException("Error reading " + url + ":"+ ex.toString());
}
case FILE:
File file=getContext().getFileStreamPath(DATA_FILE);
ParcelFileDescriptor fd=ParcelFileDescriptor.open(file,ParcelFileDescriptor.MODE_READ_ONLY);
return new AssetFileDescriptor(fd,0,AssetFileDescriptor.UNKNOWN_LENGTH);
default :
throw new FileNotFoundException("No files supported by provider at " + url);
}
}
