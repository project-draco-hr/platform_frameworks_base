{
  int action=event.getAction();
  if (mReleaseTouchListenerOnUp) {
    if (action == MotionEvent.ACTION_UP || action == MotionEvent.ACTION_CANCEL) {
      mOwnerView.setOnTouchListener(null);
      setTouchTargetView(null);
      mReleaseTouchListenerOnUp=false;
    }
    return true;
  }
  dismissControlsDelayed(ZOOM_CONTROLS_TIMEOUT);
  View targetView=mTouchTargetView;
switch (action) {
case MotionEvent.ACTION_DOWN:
    targetView=getViewForTouch((int)event.getRawX(),(int)event.getRawY());
  setTouchTargetView(targetView);
break;
case MotionEvent.ACTION_UP:
case MotionEvent.ACTION_CANCEL:
setTouchTargetView(null);
break;
}
if (targetView != null) {
int targetViewRawX=mContainerLocation[0] + mTouchTargetLocationInWindow[0];
int targetViewRawY=mContainerLocation[1] + mTouchTargetLocationInWindow[1];
MotionEvent containerEvent=MotionEvent.obtain(event);
containerEvent.offsetLocation(mOwnerViewBounds.left - targetViewRawX,mOwnerViewBounds.top - targetViewRawY);
boolean retValue=targetView.dispatchTouchEvent(containerEvent);
containerEvent.recycle();
return retValue;
}
 else {
return false;
}
}
