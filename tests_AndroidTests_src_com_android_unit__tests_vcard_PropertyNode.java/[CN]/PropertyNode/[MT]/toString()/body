{
  StringBuilder builder=new StringBuilder();
  builder.append("propName: ");
  builder.append(propName);
  builder.append(", paramMap: ");
  builder.append(paramMap.toString());
  builder.append(", paramMap_TYPE: [");
  boolean first=true;
  for (  String elem : paramMap_TYPE) {
    if (first) {
      first=false;
    }
 else {
      builder.append(", ");
    }
    builder.append('"');
    builder.append(elem);
    builder.append('"');
  }
  builder.append("]");
  if (!propGroupSet.isEmpty()) {
    builder.append(", propGroupSet: [");
    for (    String elem : propGroupSet) {
      if (first) {
        first=false;
      }
 else {
        builder.append(", ");
      }
      builder.append('"');
      builder.append(elem);
      builder.append('"');
    }
    builder.append("]");
  }
  if (propValue_vector != null && propValue_vector.size() > 1) {
    builder.append(", propValue_vector size: ");
    builder.append(propValue_vector.size());
  }
  if (propValue_bytes != null) {
    builder.append(", propValue_bytes size: ");
    builder.append(propValue_bytes.length);
  }
  builder.append(", propValue: ");
  builder.append(propValue);
  return builder.toString();
}
