{
  getAccountsByTypeAndFeatures(mAccountType,mFeatures,new AccountManagerCallback<Account[]>(){
    @Override public void run(    AccountManagerFuture<Account[]> future){
      Account[] accounts;
      try {
        accounts=future.getResult();
      }
 catch (      OperationCanceledException e) {
        setException(e);
        return;
      }
catch (      IOException e) {
        setException(e);
        return;
      }
catch (      AuthenticatorException e) {
        setException(e);
        return;
      }
      mNumAccounts=accounts.length;
      if (accounts.length == 0) {
        if (mActivity != null) {
          mFuture=addAccount(mAccountType,mAuthTokenType,mFeatures,mAddAccountOptions,mActivity,mMyCallback,mHandler);
        }
 else {
          Bundle result=new Bundle();
          result.putString(KEY_ACCOUNT_NAME,null);
          result.putString(KEY_ACCOUNT_TYPE,null);
          result.putString(KEY_AUTHTOKEN,null);
          try {
            mResponse.onResult(result);
          }
 catch (          RemoteException e) {
          }
        }
      }
 else       if (accounts.length == 1) {
        if (mActivity == null) {
          mFuture=getAuthToken(accounts[0],mAuthTokenType,false,mMyCallback,mHandler);
        }
 else {
          mFuture=getAuthToken(accounts[0],mAuthTokenType,mLoginOptions,mActivity,mMyCallback,mHandler);
        }
      }
 else {
        if (mActivity != null) {
          IAccountManagerResponse chooseResponse=new IAccountManagerResponse.Stub(){
            @Override public void onResult(            Bundle value) throws RemoteException {
              Account account=new Account(value.getString(KEY_ACCOUNT_NAME),value.getString(KEY_ACCOUNT_TYPE));
              mFuture=getAuthToken(account,mAuthTokenType,mLoginOptions,mActivity,mMyCallback,mHandler);
            }
            @Override public void onError(            int errorCode,            String errorMessage) throws RemoteException {
              mResponse.onError(errorCode,errorMessage);
            }
          }
;
          Intent intent=new Intent();
          ComponentName componentName=ComponentName.unflattenFromString(Resources.getSystem().getString(R.string.config_chooseAccountActivity));
          intent.setClassName(componentName.getPackageName(),componentName.getClassName());
          intent.putExtra(KEY_ACCOUNTS,accounts);
          intent.putExtra(KEY_ACCOUNT_MANAGER_RESPONSE,new AccountManagerResponse(chooseResponse));
          mActivity.startActivity(intent);
        }
 else {
          Bundle result=new Bundle();
          result.putString(KEY_ACCOUNTS,null);
          try {
            mResponse.onResult(result);
          }
 catch (          RemoteException e) {
          }
        }
      }
    }
  }
,mHandler);
}
