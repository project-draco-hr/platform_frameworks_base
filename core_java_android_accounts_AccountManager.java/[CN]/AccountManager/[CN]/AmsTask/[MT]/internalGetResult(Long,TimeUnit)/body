{
  try {
    if (timeout == null) {
      return get();
    }
 else {
      return get(timeout,unit);
    }
  }
 catch (  CancellationException e) {
    throw new OperationCanceledException();
  }
catch (  TimeoutException e) {
  }
catch (  InterruptedException e) {
  }
catch (  ExecutionException e) {
    final Throwable cause=e.getCause();
    if (cause instanceof IOException) {
      throw (IOException)cause;
    }
 else     if (cause instanceof UnsupportedOperationException) {
      throw new AuthenticatorException(cause);
    }
 else     if (cause instanceof AuthenticatorException) {
      throw (AuthenticatorException)cause;
    }
 else     if (cause instanceof RuntimeException) {
      throw (RuntimeException)cause;
    }
 else     if (cause instanceof Error) {
      throw (Error)cause;
    }
 else {
      throw new IllegalStateException(cause);
    }
  }
 finally {
    cancel(true);
  }
  throw new OperationCanceledException();
}
