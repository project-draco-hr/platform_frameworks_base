{
  if (type == null)   throw new IllegalArgumentException("type is null");
  return new Future2Task<Account[]>(handler,callback){
    public void doWork() throws RemoteException {
      mService.getAccountsByFeatures(mResponse,type,features,mContext.getOpPackageName());
    }
    public Account[] bundleToResult(    Bundle bundle) throws AuthenticatorException {
      if (!bundle.containsKey(KEY_ACCOUNTS)) {
        throw new AuthenticatorException("no result in response");
      }
      final Parcelable[] parcelables=bundle.getParcelableArray(KEY_ACCOUNTS);
      Account[] descs=new Account[parcelables.length];
      for (int i=0; i < parcelables.length; i++) {
        descs[i]=(Account)parcelables[i];
      }
      return descs;
    }
  }
.start();
}
