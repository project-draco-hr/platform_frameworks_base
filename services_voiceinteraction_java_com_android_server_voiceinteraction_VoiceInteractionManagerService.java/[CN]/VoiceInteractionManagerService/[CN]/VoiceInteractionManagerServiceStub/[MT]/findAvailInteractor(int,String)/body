{
  List<ResolveInfo> available=mContext.getPackageManager().queryIntentServicesAsUser(new Intent(VoiceInteractionService.SERVICE_INTERFACE),0,userHandle);
  int numAvailable=available.size();
  if (numAvailable == 0) {
    Slog.w(TAG,"no available voice interaction services found for user " + userHandle);
    return null;
  }
 else {
    VoiceInteractionServiceInfo foundInfo=null;
    for (int i=0; i < numAvailable; i++) {
      ServiceInfo cur=available.get(i).serviceInfo;
      if ((cur.applicationInfo.flags & ApplicationInfo.FLAG_SYSTEM) != 0) {
        ComponentName comp=new ComponentName(cur.packageName,cur.name);
        try {
          VoiceInteractionServiceInfo info=new VoiceInteractionServiceInfo(mContext.getPackageManager(),comp,userHandle);
          if (info.getParseError() == null) {
            if (packageName == null || info.getServiceInfo().packageName.equals(packageName)) {
              if (foundInfo == null) {
                foundInfo=info;
              }
 else {
                Slog.w(TAG,"More than one voice interaction service, " + "picking first " + new ComponentName(foundInfo.getServiceInfo().packageName,foundInfo.getServiceInfo().name) + " over "+ new ComponentName(cur.packageName,cur.name));
              }
            }
          }
 else {
            Slog.w(TAG,"Bad interaction service " + comp + ": "+ info.getParseError());
          }
        }
 catch (        PackageManager.NameNotFoundException e) {
          Slog.w(TAG,"Failure looking up interaction service " + comp);
        }
catch (        RemoteException e) {
        }
      }
    }
    return foundInfo;
  }
}
