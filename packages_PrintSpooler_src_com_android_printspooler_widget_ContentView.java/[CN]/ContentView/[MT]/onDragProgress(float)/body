{
  final int summaryCount=mSummaryContent.getChildCount();
  for (int i=0; i < summaryCount; i++) {
    View child=mSummaryContent.getChildAt(i);
    child.setAlpha(progress);
  }
  if (progress == 0) {
    if (mOptionsStateChangeListener != null) {
      mOptionsStateChangeListener.onOptionsOpened();
    }
    mSummaryContent.setVisibility(View.GONE);
    mExpandCollapseIcon.setBackgroundResource(R.drawable.ic_expand_less);
  }
 else {
    mSummaryContent.setVisibility(View.VISIBLE);
  }
  final float inverseAlpha=1.0f - progress;
  final int optionCount=mOptionsContainer.getChildCount();
  for (int i=0; i < optionCount; i++) {
    View child=mOptionsContainer.getChildAt(i);
    child.setAlpha(inverseAlpha);
  }
  if (mMoreOptionsContainer.getVisibility() != View.GONE) {
    final int moreOptionCount=mMoreOptionsContainer.getChildCount();
    for (int i=0; i < moreOptionCount; i++) {
      View child=mMoreOptionsContainer.getChildAt(i);
      child.setAlpha(inverseAlpha);
    }
  }
  if (inverseAlpha == 0) {
    if (mOptionsStateChangeListener != null) {
      mOptionsStateChangeListener.onOptionsClosed();
    }
    if (mMoreOptionsContainer.getVisibility() != View.GONE) {
      mMoreOptionsContainer.setVisibility(View.INVISIBLE);
    }
    mDraggableContent.setVisibility(View.INVISIBLE);
    mExpandCollapseIcon.setBackgroundResource(R.drawable.ic_expand_more);
  }
 else {
    if (mMoreOptionsContainer.getVisibility() != View.GONE) {
      mMoreOptionsContainer.setVisibility(View.VISIBLE);
    }
    mDraggableContent.setVisibility(View.VISIBLE);
  }
}
