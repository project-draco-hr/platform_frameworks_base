{
  measureChild(mStaticContent,widthMeasureSpec,heightMeasureSpec);
  if (mSummaryContent.getVisibility() != View.GONE) {
    measureChild(mSummaryContent,widthMeasureSpec,heightMeasureSpec);
  }
  measureChild(mDynamicContent,widthMeasureSpec,heightMeasureSpec);
  final int heightSize=MeasureSpec.getSize(heightMeasureSpec);
  if (mOldDraggableHeight != mDraggableContent.getMeasuredHeight()) {
    mCurrentOptionsOffsetY-=mDraggableContent.getMeasuredHeight() - mOldDraggableHeight;
    mOldDraggableHeight=mDraggableContent.getMeasuredHeight();
  }
  mClosedOptionsOffsetY=mSummaryContent.getMeasuredHeight() - mDraggableContent.getMeasuredHeight();
  ViewGroup.LayoutParams params=mEmbeddedContentContainer.getLayoutParams();
  if (params.height == 0) {
    params.height=heightSize - mStaticContent.getMeasuredHeight() - mSummaryContent.getMeasuredHeight()- mDynamicContent.getMeasuredHeight() + mDraggableContent.getMeasuredHeight();
    mCurrentOptionsOffsetY=mClosedOptionsOffsetY;
  }
  final int hostHeightMeasureSpec=MeasureSpec.makeMeasureSpec(MeasureSpec.UNSPECIFIED,0);
  measureChild(mEmbeddedContentContainer,widthMeasureSpec,hostHeightMeasureSpec);
  setMeasuredDimension(resolveSize(MeasureSpec.getSize(widthMeasureSpec),widthMeasureSpec),resolveSize(heightSize,heightMeasureSpec));
}
