{
  a1.setStartDelay(20);
  final MyListener normalEndingListener=new MyListener();
  a1.addListener(normalEndingListener);
  runTestOnUiThread(new Runnable(){
    @Override public void run(){
      assertFalse(a1.isStarted());
      assertFalse(normalEndingListener.startCalled);
      assertFalse(normalEndingListener.endCalled);
      a1.start();
    }
  }
);
  Thread.sleep(a1.getTotalDuration() + POLL_INTERVAL);
  runTestOnUiThread(new Runnable(){
    @Override public void run(){
      final MyListener l1=new MyListener();
      a1.addListener(l1);
      final MyListener l2=new MyListener();
      a2.addListener(l2);
      assertFalse(a1.isStarted());
      assertFalse(l1.startCalled);
      assertFalse(l1.endCalled);
      assertFalse(a2.isStarted());
      assertFalse(l2.startCalled);
      assertFalse(l1.endCalled);
      a1.end();
      a2.end();
      assertTrue(l1.startCalled);
      assertTrue(l1.endCalled);
      assertFalse(a1.isStarted());
      assertTrue(l1.endTime >= l1.startTime);
      assertTrue(l2.startCalled);
      assertTrue(l2.endCalled);
      assertFalse(a2.isStarted());
      assertTrue(l2.endTime >= l1.startTime);
    }
  }
);
}
