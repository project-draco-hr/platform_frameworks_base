{
  final ValueAnimator a=ValueAnimator.ofFloat(5f,20f);
  assertEquals(a.getStartDelay(),0);
  final long delay=200;
  a.setStartDelay(delay);
  assertEquals(a.getStartDelay(),delay);
  final MyUpdateListener listener=new MyUpdateListener();
  a.addUpdateListener(listener);
  final long[] startTime=new long[1];
  runTestOnUiThread(new Runnable(){
    @Override public void run(){
      assertFalse(a.isStarted());
      assertFalse(a.isRunning());
      a.start();
      startTime[0]=SystemClock.uptimeMillis();
      assertTrue(a.isStarted());
      assertFalse(a.isRunning());
    }
  }
);
  Thread.sleep(a.getTotalDuration());
  runTestOnUiThread(new Runnable(){
    @Override public void run(){
      assertTrue(listener.wasRunning);
      assertTrue(listener.firstRunningFrameTime - startTime[0] >= delay);
    }
  }
);
  Thread.sleep(a.getTotalDuration());
  runTestOnUiThread(new Runnable(){
    @Override public void run(){
      assertFalse(a.isStarted());
    }
  }
);
}
