{
  final MyListener l1=new MyListener();
  a1.addListener(l1);
  final MyListener l2=new MyListener();
  a2.addListener(l2);
  runTestOnUiThread(new Runnable(){
    @Override public void run(){
      a1.start();
      a2.start();
    }
  }
);
  Thread.sleep(POLL_INTERVAL);
  runTestOnUiThread(new Runnable(){
    @Override public void run(){
      assertFalse(l1.endCalled);
      assertFalse(l2.endCalled);
      assertNotEqual(A1_END_VALUE,a1.getAnimatedValue());
      assertNotEqual(A1_END_VALUE,a2.getAnimatedValue());
      a2.end();
    }
  }
);
  Thread.sleep(a1.getTotalDuration());
  runTestOnUiThread(new Runnable(){
    @Override public void run(){
      assertFalse(l1.cancelCalled);
      assertTrue(l1.endCalled);
      assertFalse(l2.cancelCalled);
      assertTrue(l2.endCalled);
      assertEquals(A1_END_VALUE,((Float)(a1.getAnimatedValue())).floatValue());
      assertEquals(A2_END_VALUE,((Integer)(a2.getAnimatedValue())).intValue());
    }
  }
);
}
