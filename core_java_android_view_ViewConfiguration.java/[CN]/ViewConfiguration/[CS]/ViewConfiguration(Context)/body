{
  final Resources res=context.getResources();
  final DisplayMetrics metrics=res.getDisplayMetrics();
  final Configuration config=res.getConfiguration();
  final float density=metrics.density;
  final float sizeAndDensity;
  if (config.isLayoutSizeAtLeast(Configuration.SCREENLAYOUT_SIZE_XLARGE)) {
    sizeAndDensity=density * 1.5f;
  }
 else {
    sizeAndDensity=density;
  }
  mEdgeSlop=(int)(sizeAndDensity * EDGE_SLOP + 0.5f);
  mFadingEdgeLength=(int)(sizeAndDensity * FADING_EDGE_LENGTH + 0.5f);
  mScrollbarSize=(int)(density * SCROLL_BAR_SIZE + 0.5f);
  mDoubleTapSlop=(int)(sizeAndDensity * DOUBLE_TAP_SLOP + 0.5f);
  mWindowTouchSlop=(int)(sizeAndDensity * WINDOW_TOUCH_SLOP + 0.5f);
  final WindowManager win=(WindowManager)context.getSystemService(Context.WINDOW_SERVICE);
  final Display display=win.getDefaultDisplay();
  final Point size=new Point();
  display.getRealSize(size);
  mMaximumDrawingCacheSize=4 * size.x * size.y;
  mOverscrollDistance=(int)(sizeAndDensity * OVERSCROLL_DISTANCE + 0.5f);
  mOverflingDistance=(int)(sizeAndDensity * OVERFLING_DISTANCE + 0.5f);
  if (!sHasPermanentMenuKeySet) {
    final int configVal=res.getInteger(com.android.internal.R.integer.config_overrideHasPermanentMenuKey);
switch (configVal) {
default :
case HAS_PERMANENT_MENU_KEY_AUTODETECT:
{
        IWindowManager wm=WindowManagerGlobal.getWindowManagerService();
        try {
          sHasPermanentMenuKey=!wm.hasNavigationBar();
          sHasPermanentMenuKeySet=true;
        }
 catch (        RemoteException ex) {
          sHasPermanentMenuKey=false;
        }
      }
    break;
case HAS_PERMANENT_MENU_KEY_TRUE:
  sHasPermanentMenuKey=true;
sHasPermanentMenuKeySet=true;
break;
case HAS_PERMANENT_MENU_KEY_FALSE:
sHasPermanentMenuKey=false;
sHasPermanentMenuKeySet=true;
break;
}
}
mFadingMarqueeEnabled=res.getBoolean(com.android.internal.R.bool.config_ui_enableFadingMarquee);
mTouchSlop=res.getDimensionPixelSize(com.android.internal.R.dimen.config_viewConfigurationTouchSlop);
mPagingTouchSlop=mTouchSlop * 2;
mDoubleTapTouchSlop=mTouchSlop;
mMinimumFlingVelocity=res.getDimensionPixelSize(com.android.internal.R.dimen.config_viewMinFlingVelocity);
mMaximumFlingVelocity=res.getDimensionPixelSize(com.android.internal.R.dimen.config_viewMaxFlingVelocity);
}
