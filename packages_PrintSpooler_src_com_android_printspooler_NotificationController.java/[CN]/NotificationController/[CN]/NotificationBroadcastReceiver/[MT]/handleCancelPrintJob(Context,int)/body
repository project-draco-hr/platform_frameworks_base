{
  if (DEBUG) {
    Log.i(LOG_TAG,"handleCancelPrintJob() printJobId:" + printJobId);
  }
  PrintSpooler printSpooler=PrintSpooler.getInstance(context);
  final PrintJobInfo printJob=printSpooler.getPrintJobInfo(printJobId,PrintManager.APP_ID_ANY);
  if (printJob == null || printJob.getState() == PrintJobInfo.STATE_CANCELED) {
    return;
  }
  NotificationManager notificationManager=(NotificationManager)context.getSystemService(Context.NOTIFICATION_SERVICE);
  Notification.Builder builder=new Notification.Builder(context).setSmallIcon(android.R.drawable.ic_secure).setContentTitle(context.getString(R.string.cancelling_notification_title_template,printJob.getLabel())).setContentText(printJob.getPrinterId().getPrinterName()).setOngoing(true).setWhen(System.currentTimeMillis()).setShowWhen(true);
  notificationManager.notify(printJob.getId(),builder.build());
  IPrintManager printManager=IPrintManager.Stub.asInterface(ServiceManager.getService(Context.PRINT_SERVICE));
  try {
    printManager.cancelPrintJob(printJobId,PrintManager.APP_ID_ANY,UserHandle.myUserId());
  }
 catch (  RemoteException re) {
    Log.i(LOG_TAG,"Error requestion print job cancellation",re);
  }
}
