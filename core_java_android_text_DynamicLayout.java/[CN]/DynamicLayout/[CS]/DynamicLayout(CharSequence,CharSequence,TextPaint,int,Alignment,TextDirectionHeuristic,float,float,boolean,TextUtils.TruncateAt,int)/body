{
  super((ellipsize == null) ? display : (display instanceof Spanned) ? new SpannedEllipsizer(display) : new Ellipsizer(display),paint,width,align,textDir,spacingmult,spacingadd);
  mBase=base;
  mDisplay=display;
  if (ellipsize != null) {
    mInts=new PackedIntVector(COLUMNS_ELLIPSIZE);
    mEllipsizedWidth=ellipsizedWidth;
    mEllipsizeAt=ellipsize;
  }
 else {
    mInts=new PackedIntVector(COLUMNS_NORMAL);
    mEllipsizedWidth=width;
    mEllipsizeAt=null;
  }
  mObjects=new PackedObjectVector<Directions>(1);
  mBlockEnds=new int[]{0};
  mBlockIndices=new int[]{INVALID_BLOCK_INDEX};
  mNumberOfBlocks=1;
  mIncludePad=includepad;
  if (ellipsize != null) {
    Ellipsizer e=(Ellipsizer)getText();
    e.mLayout=this;
    e.mWidth=ellipsizedWidth;
    e.mMethod=ellipsize;
    mEllipsize=true;
  }
  int[] start;
  if (ellipsize != null) {
    start=new int[COLUMNS_ELLIPSIZE];
    start[ELLIPSIS_START]=ELLIPSIS_UNDEFINED;
  }
 else {
    start=new int[COLUMNS_NORMAL];
  }
  Directions[] dirs=new Directions[]{DIRS_ALL_LEFT_TO_RIGHT};
  Paint.FontMetricsInt fm=paint.getFontMetricsInt();
  int asc=fm.ascent;
  int desc=fm.descent;
  start[DIR]=DIR_LEFT_TO_RIGHT << DIR_SHIFT;
  start[TOP]=0;
  start[DESCENT]=desc;
  mInts.insertAt(0,start);
  start[TOP]=desc - asc;
  mInts.insertAt(1,start);
  mObjects.insertAt(0,dirs);
  reflow(base,0,0,base.length());
  if (base instanceof Spannable) {
    if (mWatcher == null)     mWatcher=new ChangeWatcher(this);
    Spannable sp=(Spannable)base;
    ChangeWatcher[] spans=sp.getSpans(0,sp.length(),ChangeWatcher.class);
    for (int i=0; i < spans.length; i++)     sp.removeSpan(spans[i]);
    sp.setSpan(mWatcher,0,base.length(),Spannable.SPAN_INCLUSIVE_INCLUSIVE | (PRIORITY << Spannable.SPAN_PRIORITY_SHIFT));
  }
}
