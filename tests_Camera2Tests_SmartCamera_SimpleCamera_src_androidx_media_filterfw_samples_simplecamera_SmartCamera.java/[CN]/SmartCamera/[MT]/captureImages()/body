{
  ((WaveTriggerFilter)mGraph.getFilter("snapEffect")).trigger();
  mGraph.getVariable("startCapture").setValue(false);
  Bitmap bitmap=null;
  Drawable res=getResources().getDrawable(R.drawable.black_screen);
  Calendar cal=Calendar.getInstance();
  SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd_HH:mm:ss");
  Log.v(TAG,"numImages: " + numImages + " count: "+ count+ " hasReachedMax: "+ countHasReachedMax);
  int maxI=countHasReachedMax ? numImages : count + 1;
  if (maxI != 0) {
    if (maxI == 1)     mImagesSavedTextView.setText("Image Saved");
 else {
      mImagesSavedTextView.setText("" + maxI + " Images Saved");
    }
  }
  for (int i=0; i < maxI; i++) {
    bitmap=((BitmapDrawable)mImages.get(i).getDrawable()).getBitmap();
    mImages.get(i).setImageDrawable(res);
    MediaStore.Images.Media.insertImage(getContentResolver(),bitmap,sdf.format(cal.getTime()) + "_image" + i+ ".jpg","image " + i);
  }
  mStartStopButton.setText("Start");
  count=-1;
  countHasReachedMax=false;
  mSpinner.setEnabled(true);
  mHandler.postDelayed(new Runnable(){
    public void run(){
      clearImagesSavedTextView();
    }
  }
,5000);
}
