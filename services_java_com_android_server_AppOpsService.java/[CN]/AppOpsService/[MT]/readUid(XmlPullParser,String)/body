{
  int uid=Integer.parseInt(parser.getAttributeValue(null,"n"));
  int outerDepth=parser.getDepth();
  int type;
  while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && (type != XmlPullParser.END_TAG || parser.getDepth() > outerDepth)) {
    if (type == XmlPullParser.END_TAG || type == XmlPullParser.TEXT) {
      continue;
    }
    String tagName=parser.getName();
    if (tagName.equals("op")) {
      Op op=new Op(Integer.parseInt(parser.getAttributeValue(null,"n")));
      op.time=Long.parseLong(parser.getAttributeValue(null,"t"));
      op.duration=Integer.parseInt(parser.getAttributeValue(null,"d"));
      HashMap<String,Ops> pkgOps=mUidOps.get(uid);
      if (pkgOps == null) {
        pkgOps=new HashMap<String,Ops>();
        mUidOps.put(uid,pkgOps);
      }
      Ops ops=pkgOps.get(pkgName);
      if (ops == null) {
        ops=new Ops(pkgName,uid);
        pkgOps.put(pkgName,ops);
      }
      ops.put(op.op,op);
    }
 else {
      Slog.w(TAG,"Unknown element under <pkg>: " + parser.getName());
      XmlUtils.skipCurrentTag(parser);
    }
  }
}
