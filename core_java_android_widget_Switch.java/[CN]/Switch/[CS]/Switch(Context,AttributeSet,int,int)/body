{
  super(context,attrs,defStyleAttr,defStyleRes);
  mTextPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);
  final Resources res=getResources();
  mTextPaint.density=res.getDisplayMetrics().density;
  mTextPaint.setCompatibilityScaling(res.getCompatibilityInfo().applicationScale);
  final TypedArray a=context.obtainStyledAttributes(attrs,com.android.internal.R.styleable.Switch,defStyleAttr,defStyleRes);
  mThumbDrawable=a.getDrawable(com.android.internal.R.styleable.Switch_thumb);
  if (mThumbDrawable != null) {
    mThumbDrawable.setCallback(this);
  }
  mTrackDrawable=a.getDrawable(com.android.internal.R.styleable.Switch_track);
  if (mTrackDrawable != null) {
    mTrackDrawable.setCallback(this);
  }
  mTextOn=a.getText(com.android.internal.R.styleable.Switch_textOn);
  mTextOff=a.getText(com.android.internal.R.styleable.Switch_textOff);
  mShowText=a.getBoolean(com.android.internal.R.styleable.Switch_showText,true);
  mThumbTextPadding=a.getDimensionPixelSize(com.android.internal.R.styleable.Switch_thumbTextPadding,0);
  mSwitchMinWidth=a.getDimensionPixelSize(com.android.internal.R.styleable.Switch_switchMinWidth,0);
  mSwitchPadding=a.getDimensionPixelSize(com.android.internal.R.styleable.Switch_switchPadding,0);
  mSplitTrack=a.getBoolean(com.android.internal.R.styleable.Switch_splitTrack,false);
  ColorStateList thumbTintList=a.getColorStateList(com.android.internal.R.styleable.Switch_thumbTint);
  if (thumbTintList != null) {
    mThumbTintList=thumbTintList;
    mHasThumbTint=true;
  }
  PorterDuff.Mode thumbTintMode=Drawable.parseTintMode(a.getInt(com.android.internal.R.styleable.Switch_thumbTintMode,-1),null);
  if (mThumbTintMode != thumbTintMode) {
    mThumbTintMode=thumbTintMode;
    mHasThumbTintMode=true;
  }
  if (mHasThumbTint || mHasThumbTintMode) {
    applyThumbTint();
  }
  ColorStateList trackTintList=a.getColorStateList(com.android.internal.R.styleable.Switch_trackTint);
  if (trackTintList != null) {
    mTrackTintList=trackTintList;
    mHasTrackTint=true;
  }
  PorterDuff.Mode trackTintMode=Drawable.parseTintMode(a.getInt(com.android.internal.R.styleable.Switch_trackTintMode,-1),null);
  if (mTrackTintMode != trackTintMode) {
    mTrackTintMode=trackTintMode;
    mHasTrackTintMode=true;
  }
  if (mHasTrackTint || mHasTrackTintMode) {
    applyTrackTint();
  }
  final int appearance=a.getResourceId(com.android.internal.R.styleable.Switch_switchTextAppearance,0);
  if (appearance != 0) {
    setSwitchTextAppearance(context,appearance);
  }
  a.recycle();
  final ViewConfiguration config=ViewConfiguration.get(context);
  mTouchSlop=config.getScaledTouchSlop();
  mMinFlingVelocity=config.getScaledMinimumFlingVelocity();
  refreshDrawableState();
  setChecked(isChecked());
}
