{
  final int widthMode=MeasureSpec.getMode(widthMeasureSpec);
  final int heightMode=MeasureSpec.getMode(heightMeasureSpec);
  int widthSize=MeasureSpec.getSize(widthMeasureSpec);
  int heightSize=MeasureSpec.getSize(heightMeasureSpec);
  if (mOnLayout == null) {
    mOnLayout=makeLayout(mTextOn);
  }
  if (mOffLayout == null) {
    mOffLayout=makeLayout(mTextOff);
  }
  mTrackDrawable.getPadding(mTempRect);
  final int maxTextWidth=Math.max(mOnLayout.getWidth(),mOffLayout.getWidth());
  final int switchWidth=Math.max(mSwitchMinWidth,maxTextWidth * 2 + mThumbTextPadding * 4 + mTempRect.left + mTempRect.right);
  final int switchHeight=mTrackDrawable.getIntrinsicHeight();
  mThumbWidth=maxTextWidth + mThumbTextPadding * 2;
switch (widthMode) {
case MeasureSpec.AT_MOST:
    widthSize=Math.min(widthSize,switchWidth);
  break;
case MeasureSpec.UNSPECIFIED:
widthSize=switchWidth;
break;
case MeasureSpec.EXACTLY:
break;
}
switch (heightMode) {
case MeasureSpec.AT_MOST:
heightSize=Math.min(heightSize,switchHeight);
break;
case MeasureSpec.UNSPECIFIED:
heightSize=switchHeight;
break;
case MeasureSpec.EXACTLY:
break;
}
mSwitchWidth=switchWidth;
mSwitchHeight=switchHeight;
super.onMeasure(widthMeasureSpec,heightMeasureSpec);
final int measuredWidth=getMeasuredWidth();
final int measuredHeight=getMeasuredHeight();
if (measuredHeight < switchHeight) {
setMeasuredDimension(measuredWidth,switchHeight);
}
}
