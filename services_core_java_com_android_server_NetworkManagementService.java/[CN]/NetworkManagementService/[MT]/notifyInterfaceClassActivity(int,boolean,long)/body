{
  try {
    getBatteryStats().noteDataConnectionActive(type,active,tsNanos);
  }
 catch (  RemoteException e) {
  }
  final int length=mObservers.beginBroadcast();
  try {
    for (int i=0; i < length; i++) {
      try {
        mObservers.getBroadcastItem(i).interfaceClassDataActivityChanged(Integer.toString(type),active,tsNanos);
      }
 catch (      RemoteException e) {
      }
catch (      RuntimeException e) {
      }
    }
  }
  finally {
    mObservers.finishBroadcast();
  }
  boolean report=false;
synchronized (mIdleTimerLock) {
    if (mActiveIdleTimers.isEmpty()) {
      active=true;
    }
    if (mNetworkActive != active) {
      mNetworkActive=active;
      report=active;
    }
  }
  if (report) {
    reportNetworkActive();
  }
}
