{
  final boolean isMobile=ConnectivityManager.isNetworkTypeMobile(type);
  if (isMobile) {
    if (!fromRadio) {
      if (mMobileActivityFromRadio) {
        powerState=mLastPowerStateFromRadio;
      }
    }
 else {
      mMobileActivityFromRadio=true;
    }
    if (mLastPowerStateFromRadio != powerState) {
      mLastPowerStateFromRadio=powerState;
      try {
        getBatteryStats().noteMobileRadioPowerState(powerState,tsNanos);
      }
 catch (      RemoteException e) {
      }
    }
  }
  if (ConnectivityManager.isNetworkTypeWifi(type)) {
    if (mLastPowerStateFromWifi != powerState) {
      mLastPowerStateFromWifi=powerState;
      try {
        getBatteryStats().noteWifiRadioPowerState(powerState,tsNanos);
      }
 catch (      RemoteException e) {
      }
    }
  }
  boolean isActive=powerState == DataConnectionRealTimeInfo.DC_POWER_STATE_MEDIUM || powerState == DataConnectionRealTimeInfo.DC_POWER_STATE_HIGH;
  if (!isMobile || fromRadio || !mMobileActivityFromRadio) {
    final int length=mObservers.beginBroadcast();
    try {
      for (int i=0; i < length; i++) {
        try {
          mObservers.getBroadcastItem(i).interfaceClassDataActivityChanged(Integer.toString(type),isActive,tsNanos);
        }
 catch (        RemoteException e) {
        }
catch (        RuntimeException e) {
        }
      }
    }
  finally {
      mObservers.finishBroadcast();
    }
  }
  boolean report=false;
synchronized (mIdleTimerLock) {
    if (mActiveIdleTimers.isEmpty()) {
      isActive=true;
    }
    if (mNetworkActive != isActive) {
      mNetworkActive=isActive;
      report=isActive;
    }
  }
  if (report) {
    reportNetworkActive();
  }
}
