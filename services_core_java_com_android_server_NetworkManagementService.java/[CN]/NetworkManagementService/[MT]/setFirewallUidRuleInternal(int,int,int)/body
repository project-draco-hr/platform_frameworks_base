{
synchronized (mQuotaLock) {
    SparseIntArray uidFirewallRules=getUidFirewallRules(chain);
    final int oldUidFirewallRule=uidFirewallRules.get(uid,FIREWALL_RULE_DEFAULT);
    if (DBG) {
      Slog.d(TAG,"oldRule = " + oldUidFirewallRule + ", newRule="+ rule+ " for uid="+ uid);
    }
    if (oldUidFirewallRule == rule) {
      if (DBG)       Slog.d(TAG,"!!!!! Skipping change");
      return;
    }
    try {
      String ruleName;
      if (getFirewallType(chain) == FIREWALL_TYPE_WHITELIST) {
        if (rule == NetworkPolicyManager.FIREWALL_RULE_ALLOW) {
          ruleName="allow";
        }
 else {
          ruleName="deny";
        }
      }
 else {
        if (rule == NetworkPolicyManager.FIREWALL_RULE_DENY) {
          ruleName="deny";
        }
 else {
          ruleName="allow";
        }
      }
      if (rule == NetworkPolicyManager.FIREWALL_RULE_DEFAULT) {
        uidFirewallRules.delete(uid);
      }
 else {
        uidFirewallRules.put(uid,rule);
      }
      mConnector.execute("firewall","set_uid_rule",getFirewallChainName(chain),uid,ruleName);
    }
 catch (    NativeDaemonConnectorException e) {
      throw e.rethrowAsParcelableException();
    }
  }
}
