{
synchronized (mQuotaLock) {
    SparseIntArray uidFirewallRules=getUidFirewallRules(chain);
    final int oldUidFirewallRule=uidFirewallRules.get(uid,FIREWALL_RULE_DEFAULT);
    if (DBG) {
      Slog.d(TAG,"oldRule = " + oldUidFirewallRule + ", newRule="+ rule+ " for uid="+ uid+ " on chain "+ chain);
    }
    if (oldUidFirewallRule == rule) {
      if (DBG)       Slog.d(TAG,"!!!!! Skipping change");
      return;
    }
    try {
      String ruleName=getFirewallRuleName(chain,rule);
      String oldRuleName=getFirewallRuleName(chain,oldUidFirewallRule);
      if (rule == NetworkPolicyManager.FIREWALL_RULE_DEFAULT) {
        uidFirewallRules.delete(uid);
      }
 else {
        uidFirewallRules.put(uid,rule);
      }
      if (!ruleName.equals(oldRuleName)) {
        mConnector.execute("firewall","set_uid_rule",getFirewallChainName(chain),uid,ruleName);
      }
    }
 catch (    NativeDaemonConnectorException e) {
      throw e.rethrowAsParcelableException();
    }
  }
}
