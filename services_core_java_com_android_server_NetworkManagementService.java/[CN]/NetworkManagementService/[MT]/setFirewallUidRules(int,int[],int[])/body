{
  enforceSystemUid();
synchronized (mQuotaLock) {
    SparseIntArray uidFirewallRules=getUidFirewallRules(chain);
    SparseIntArray newRules=new SparseIntArray();
    for (int index=uids.length - 1; index >= 0; --index) {
      int uid=uids[index];
      int rule=rules[index];
      setFirewallUidRule(chain,uid,rule);
      newRules.put(uid,rule);
    }
    SparseIntArray rulesToRemove=new SparseIntArray();
    for (int index=uidFirewallRules.size() - 1; index >= 0; --index) {
      int uid=uidFirewallRules.keyAt(index);
      if (newRules.indexOfKey(uid) < 0) {
        rulesToRemove.put(uid,FIREWALL_RULE_DEFAULT);
      }
    }
    for (int index=rulesToRemove.size() - 1; index >= 0; --index) {
      int uid=rulesToRemove.keyAt(index);
      setFirewallUidRuleInternal(chain,uid,FIREWALL_RULE_DEFAULT);
    }
  }
}
