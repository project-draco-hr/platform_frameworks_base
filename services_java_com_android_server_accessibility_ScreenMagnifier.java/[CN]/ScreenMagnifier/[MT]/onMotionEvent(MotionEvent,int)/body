{
switch (mCurrentState) {
case STATE_DELEGATING:
{
      handleMotionEventStateDelegating(event,policyFlags);
    }
  break;
case STATE_DETECTING:
{
  mDetectingStateHandler.onMotionEvent(event,policyFlags);
}
break;
case STATE_VIEWPORT_DRAGGING:
{
mStateViewportDraggingHandler.onMotionEvent(event,policyFlags);
}
break;
case STATE_SCALING:
case STATE_PANNING:
case STATE_DECIDE_PAN_OR_SCALE:
{
}
break;
default :
{
throw new IllegalStateException("Unknown state: " + mCurrentState);
}
}
mGestureDetector.onMotionEvent(event);
}
