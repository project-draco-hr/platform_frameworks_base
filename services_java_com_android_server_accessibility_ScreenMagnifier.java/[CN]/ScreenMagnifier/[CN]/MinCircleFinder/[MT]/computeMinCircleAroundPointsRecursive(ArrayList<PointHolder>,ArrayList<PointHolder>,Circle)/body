{
  if (points.isEmpty()) {
    if (boundary.size() == 0) {
      outCircle.initialize();
    }
 else     if (boundary.size() == 1) {
      outCircle.initialize(boundary.get(0).mData,boundary.get(0).mData);
    }
 else     if (boundary.size() == 2) {
      outCircle.initialize(boundary.get(0).mData,boundary.get(1).mData);
    }
 else     if (boundary.size() == 3) {
      outCircle.initialize(boundary.get(0).mData,boundary.get(1).mData,boundary.get(2).mData);
    }
    return;
  }
  PointHolder point=points.remove(points.size() - 1);
  computeMinCircleAroundPointsRecursive(points,boundary,outCircle);
  if (!outCircle.contains(point.mData)) {
    boundary.add(point);
    computeMinCircleAroundPointsRecursive(points,boundary,outCircle);
    boundary.remove(point);
  }
  points.add(point);
}
