{
  final int action=message.what;
switch (action) {
case MESSAGE_SHOW_VIEWPORT_FRAME:
{
      mViewport.setFrameShown(true,true);
    }
  break;
case MESSAGE_ON_RECTANGLE_ON_SCREEN_REQUESTED:
{
  SomeArgs args=(SomeArgs)message.obj;
  try {
    mTempRect.set(args.argi1,args.argi2,args.argi3,args.argi4);
    final boolean immediate=(message.arg1 == 1);
    handleOnRectangleOnScreenRequested(mTempRect,immediate);
  }
  finally {
    args.recycle();
  }
}
break;
case MESSAGE_ON_WINDOW_TRANSITION:
{
final int transition=message.arg1;
WindowInfo info=(WindowInfo)message.obj;
handleOnWindowTransition(transition,info);
}
break;
case MESSAGE_ON_ROTATION_CHANGED:
{
final int rotation=message.arg1;
handleOnRotationChanged(rotation);
}
break;
case MESSAGE_ON_WINDOW_LAYERS_CHANGED:
{
mViewport.recomputeBounds(mMagnificationController.isMagnifying());
}
break;
default :
{
throw new IllegalArgumentException("Unknown message: " + action);
}
}
}
