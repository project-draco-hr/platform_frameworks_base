{
  final int action=event.getActionMasked();
switch (action) {
case MotionEvent.ACTION_DOWN:
{
      throw new IllegalArgumentException("Unexpected event type: ACTION_DOWN");
    }
case MotionEvent.ACTION_POINTER_DOWN:
{
    clear();
    transitionToState(STATE_SCALING);
  }
break;
case MotionEvent.ACTION_MOVE:
{
if (event.getPointerCount() != 1) {
  throw new IllegalStateException("Should have one pointer down.");
}
final float eventX=event.getX();
final float eventY=event.getY();
if (mViewport.getBounds().contains((int)eventX,(int)eventY)) {
  if (mLastMoveOutsideMagnifiedRegion) {
    mLastMoveOutsideMagnifiedRegion=false;
    mMagnificationController.setMagnifiedRegionCenter(eventX,eventY,true);
  }
 else {
    mMagnificationController.setMagnifiedRegionCenter(eventX,eventY,false);
  }
}
 else {
  mLastMoveOutsideMagnifiedRegion=true;
}
}
break;
case MotionEvent.ACTION_UP:
{
if (!mTranslationEnabledBeforePan) {
mMagnificationController.reset(true);
mViewport.setFrameShown(false,true);
}
clear();
transitionToState(STATE_DETECTING);
}
break;
case MotionEvent.ACTION_POINTER_UP:
{
throw new IllegalArgumentException("Unexpected event type: ACTION_POINTER_UP");
}
}
}
