{
  if ((mFadingMode & OUT) != OUT) {
    return null;
  }
  if (Transition.DBG) {
    Log.d(LOG_TAG,"Fade.disappear: startView, startVis, endView, endVis = " + startView + ", "+ startVisibility+ ", "+ endView+ ", "+ endVisibility);
  }
  View view;
  View overlayView=null;
  View viewToKeep=null;
  final int finalVisibility=endVisibility;
  if (endView == null) {
    view=startView;
    overlayView=view;
  }
 else {
    if (endVisibility == View.INVISIBLE) {
      view=endView;
      viewToKeep=view;
    }
 else {
      if (startView == endView) {
        view=endView;
        viewToKeep=view;
      }
 else {
        view=startView;
        overlayView=view;
      }
    }
  }
  final float startAlpha=view.getAlpha();
  float endAlpha=0;
  final View finalView=view;
  final View finalOverlayView=overlayView;
  final View finalViewToKeep=viewToKeep;
  final ViewGroup finalSceneRoot=sceneRoot;
  final Animator.AnimatorListener endListener=new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator animation){
      finalView.setAlpha(startAlpha);
      if (finalViewToKeep != null) {
        finalViewToKeep.setVisibility(finalVisibility);
      }
      if (finalOverlayView != null) {
        finalSceneRoot.getOverlay().remove(finalOverlayView);
      }
    }
  }
;
  return runAnimation(view,startAlpha,endAlpha,endListener);
}
