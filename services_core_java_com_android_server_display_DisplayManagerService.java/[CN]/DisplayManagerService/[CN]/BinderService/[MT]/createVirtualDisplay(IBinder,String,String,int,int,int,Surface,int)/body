{
  final int callingUid=Binder.getCallingUid();
  if (!validatePackageName(callingUid,packageName)) {
    throw new SecurityException("packageName must match the calling uid");
  }
  if (appToken == null) {
    throw new IllegalArgumentException("appToken must not be null");
  }
  if (TextUtils.isEmpty(name)) {
    throw new IllegalArgumentException("name must be non-null and non-empty");
  }
  if (width <= 0 || height <= 0 || densityDpi <= 0) {
    throw new IllegalArgumentException("width, height, and densityDpi must be " + "greater than 0");
  }
  if (surface == null) {
    throw new IllegalArgumentException("surface must not be null");
  }
  if (callingUid != Process.SYSTEM_UID && (flags & DisplayManager.VIRTUAL_DISPLAY_FLAG_PUBLIC) != 0) {
    if (mContext.checkCallingPermission(android.Manifest.permission.CAPTURE_VIDEO_OUTPUT) != PackageManager.PERMISSION_GRANTED && mContext.checkCallingPermission(android.Manifest.permission.CAPTURE_SECURE_VIDEO_OUTPUT) != PackageManager.PERMISSION_GRANTED) {
      throw new SecurityException("Requires CAPTURE_VIDEO_OUTPUT or " + "CAPTURE_SECURE_VIDEO_OUTPUT permission to create a " + "public virtual display.");
    }
  }
  if ((flags & DisplayManager.VIRTUAL_DISPLAY_FLAG_SECURE) != 0) {
    if (mContext.checkCallingPermission(android.Manifest.permission.CAPTURE_SECURE_VIDEO_OUTPUT) != PackageManager.PERMISSION_GRANTED) {
      throw new SecurityException("Requires CAPTURE_SECURE_VIDEO_OUTPUT " + "to create a secure virtual display.");
    }
  }
  final long token=Binder.clearCallingIdentity();
  try {
    return createVirtualDisplayInternal(appToken,callingUid,packageName,name,width,height,densityDpi,surface,flags);
  }
  finally {
    Binder.restoreCallingIdentity(token);
  }
}
