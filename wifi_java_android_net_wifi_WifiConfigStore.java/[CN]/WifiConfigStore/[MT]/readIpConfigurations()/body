{
  File f=new File(ipConfigFile);
  byte[] buffer;
  FileInputStream s=null;
  try {
    buffer=new byte[(int)f.length()];
    s=new FileInputStream(f);
    s.read(buffer);
  }
 catch (  IOException e) {
    Log.e(TAG,"Error reading data file");
    return;
  }
 finally {
    if (s != null) {
      try {
        s.close();
      }
 catch (      Exception e) {
      }
    }
  }
  String data=new String(buffer);
  if (data == null || data.length() == 0) {
    Log.d(TAG,"IP configuration file empty");
    return;
  }
  String[] parsed=data.split("\n");
  try {
    if (Integer.parseInt(parsed[0]) != IPCONFIG_FILE_VERSION) {
      Log.e(TAG,"Bad version on IP configuration file, ignore read");
      return;
    }
    for (    String line : parsed) {
      int hashKey=-1;
      DhcpInfo ipConfig=new DhcpInfo();
      String[] keyVals=line.split(":");
      for (      String keyVal : keyVals) {
        String[] keyValPair=keyVal.split("=");
        if (keyValPair[0].equals("id")) {
          hashKey=Integer.parseInt(keyValPair[1]);
        }
 else         if (keyValPair[0].equals("ip")) {
          ipConfig.ipAddress=Integer.parseInt(keyValPair[1]);
        }
 else         if (keyValPair[0].equals("gateway")) {
          ipConfig.gateway=Integer.parseInt(keyValPair[1]);
        }
 else         if (keyValPair[0].equals("netmask")) {
          ipConfig.netmask=Integer.parseInt(keyValPair[1]);
        }
 else         if (keyValPair[0].equals("dns1")) {
          ipConfig.dns1=Integer.parseInt(keyValPair[1]);
        }
 else         if (keyValPair[0].equals("dns2")) {
          ipConfig.dns2=Integer.parseInt(keyValPair[1]);
        }
 else {
          Log.w(TAG,"Ignoring " + keyVal);
        }
      }
      if (hashKey != -1) {
synchronized (sConfiguredNetworks) {
          WifiConfiguration config=sConfiguredNetworks.get(sNetworkIds.get(hashKey));
          if (config == null) {
            Log.e(TAG,"IP configuration found for missing network, ignored");
          }
 else {
            config.ipAssignment=WifiConfiguration.IpAssignment.STATIC;
            config.ipConfig=ipConfig;
          }
        }
      }
 else {
        Log.e(TAG,"Missing id while parsing configuration" + line);
      }
    }
  }
 catch (  NumberFormatException e) {
    Log.e(TAG,"Error parsing configuration");
  }
}
