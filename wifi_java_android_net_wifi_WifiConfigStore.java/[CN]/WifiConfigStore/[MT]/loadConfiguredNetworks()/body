{
  String listStr=mWifiNative.listNetworks();
  mLastPriority=0;
  mConfiguredNetworks.clear();
  mNetworkIds.clear();
  if (listStr == null)   return;
  String[] lines=listStr.split("\n");
  for (int i=1; i < lines.length; i++) {
    String[] result=lines[i].split("\t");
    WifiConfiguration config=new WifiConfiguration();
    try {
      config.networkId=Integer.parseInt(result[0]);
    }
 catch (    NumberFormatException e) {
      continue;
    }
    if (result.length > 3) {
      if (result[3].indexOf("[CURRENT]") != -1)       config.status=WifiConfiguration.Status.CURRENT;
 else       if (result[3].indexOf("[DISABLED]") != -1)       config.status=WifiConfiguration.Status.DISABLED;
 else       config.status=WifiConfiguration.Status.ENABLED;
    }
 else {
      config.status=WifiConfiguration.Status.ENABLED;
    }
    readNetworkVariables(config);
    if (config.priority > mLastPriority) {
      mLastPriority=config.priority;
    }
    config.ipAssignment=IpAssignment.DHCP;
    config.proxySettings=ProxySettings.NONE;
    mConfiguredNetworks.put(config.networkId,config);
    mNetworkIds.put(configKey(config),config.networkId);
  }
  readIpAndProxyConfigurations();
  sendConfiguredNetworksChangedBroadcast();
}
