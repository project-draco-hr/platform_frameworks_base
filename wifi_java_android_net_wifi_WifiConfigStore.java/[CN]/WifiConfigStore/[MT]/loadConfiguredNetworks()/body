{
  String listStr=mWifiNative.listNetworks();
  mLastPriority=0;
  mConfiguredNetworks.clear();
  mNetworkIds.clear();
  if (listStr == null)   return;
  String[] lines=listStr.split("\n");
  for (int i=1; i < lines.length; i++) {
    String[] result=lines[i].split("\t");
    WifiConfiguration config=new WifiConfiguration();
    try {
      config.networkId=Integer.parseInt(result[0]);
    }
 catch (    NumberFormatException e) {
      loge("Failed to read network-id '" + result[0] + "'");
      continue;
    }
    if (result.length > 3) {
      if (result[3].indexOf("[CURRENT]") != -1)       config.status=WifiConfiguration.Status.CURRENT;
 else       if (result[3].indexOf("[DISABLED]") != -1)       config.status=WifiConfiguration.Status.DISABLED;
 else       config.status=WifiConfiguration.Status.ENABLED;
    }
 else {
      config.status=WifiConfiguration.Status.ENABLED;
    }
    readNetworkVariables(config);
    if (config.priority > mLastPriority) {
      mLastPriority=config.priority;
    }
    config.ipAssignment=IpAssignment.DHCP;
    config.proxySettings=ProxySettings.NONE;
    mConfiguredNetworks.put(config.networkId,config);
    mNetworkIds.put(configKey(config),config.networkId);
    localLog("loaded configured network",config.networkId);
  }
  readIpAndProxyConfigurations();
  sendConfiguredNetworksChangedBroadcast();
  localLog("loadConfiguredNetworks loaded " + mNetworkIds.size() + " networks");
  if (mNetworkIds.size() == 0) {
    BufferedReader reader=null;
    try {
      reader=new BufferedReader(new FileReader(SUPPLICANT_CONFIG_FILE));
      localLog("--- Begin wpa_supplicant.conf Contents ---");
      for (String line=reader.readLine(); line != null; line=reader.readLine()) {
        localLog(line);
      }
      localLog("--- End wpa_supplicant.conf Contents ---");
    }
 catch (    FileNotFoundException e) {
      localLog("Could not open " + SUPPLICANT_CONFIG_FILE + ", "+ e);
    }
catch (    IOException e) {
      localLog("Could not read " + SUPPLICANT_CONFIG_FILE + ", "+ e);
    }
 finally {
      try {
        if (reader != null) {
          reader.close();
        }
      }
 catch (      IOException e) {
      }
    }
  }
}
