{
  final ArrayList<Document> result=Lists.newArrayList();
  final ContentResolver resolver=getContext().getContentResolver();
  final Cursor cursor=resolver.query(uri,null,null,null,null,signal);
  try {
    while (cursor != null && cursor.moveToNext()) {
      Document doc=null;
switch (mType) {
case TYPE_NORMAL:
case TYPE_SEARCH:
        doc=Document.fromDirectoryCursor(uri,cursor);
      break;
case TYPE_RECENT_OPEN:
    try {
      doc=Document.fromRecentOpenCursor(resolver,cursor);
    }
 catch (    FileNotFoundException e) {
      Log.w(TAG,"Failed to find recent: " + e);
    }
  break;
default :
throw new IllegalArgumentException("Unknown type");
}
if (doc != null && (mFilter == null || mFilter.apply(doc))) {
result.add(doc);
}
}
}
  finally {
IoUtils.closeQuietly(cursor);
}
if (mSortOrder != null) {
Collections.sort(result,mSortOrder);
}
return result;
}
