{
  AppWindowToken appWindowToken=null;
  WindowState windowState=null;
  boolean aboveSystem=false;
synchronized (mService.mWindowMap) {
    if (inputWindowHandle != null) {
      windowState=(WindowState)inputWindowHandle.windowState;
      if (windowState != null) {
        appWindowToken=windowState.mAppToken;
      }
    }
    if (appWindowToken == null && inputApplicationHandle != null) {
      appWindowToken=(AppWindowToken)inputApplicationHandle.appWindowToken;
    }
    if (windowState != null) {
      Slog.i(TAG_WM,"Input event dispatching timed out " + "sending to " + windowState.mAttrs.getTitle() + ".  Reason: "+ reason);
      int systemAlertLayer=mService.mPolicy.windowTypeToLayerLw(WindowManager.LayoutParams.TYPE_SYSTEM_ALERT);
      aboveSystem=windowState.mBaseLayer > systemAlertLayer;
    }
 else     if (appWindowToken != null) {
      Slog.i(TAG_WM,"Input event dispatching timed out " + "sending to application " + appWindowToken.stringName + ".  Reason: "+ reason);
    }
 else {
      Slog.i(TAG_WM,"Input event dispatching timed out " + ".  Reason: " + reason);
    }
    mService.saveANRStateLocked(appWindowToken,windowState,reason);
  }
  if (appWindowToken != null && appWindowToken.appToken != null) {
    try {
      boolean abort=appWindowToken.appToken.keyDispatchingTimedOut(reason);
      if (!abort) {
        return appWindowToken.inputDispatchingTimeoutNanos;
      }
    }
 catch (    RemoteException ex) {
    }
  }
 else   if (windowState != null) {
    try {
      long timeout=ActivityManagerNative.getDefault().inputDispatchingTimedOut(windowState.mSession.mPid,aboveSystem,reason);
      if (timeout >= 0) {
        return timeout * 1000000L;
      }
    }
 catch (    RemoteException ex) {
    }
  }
  return 0;
}
