{
  if (!mEnabled) {
    Log.e(TAG,"Cannot use seekTo() from a disabled RemoteController");
    return false;
  }
  if (timeMs < 0) {
    throw new IllegalArgumentException("illegal negative time value");
  }
  if (USE_SESSIONS) {
synchronized (mInfoLock) {
      if (mCurrentSession != null) {
        mCurrentSession.getTransportControls().seekTo(timeMs);
      }
    }
  }
 else {
    final int genId;
synchronized (mGenLock) {
      genId=mClientGenerationIdCurrent;
    }
    mAudioManager.setRemoteControlClientPlaybackPosition(genId,timeMs);
  }
  return true;
}
