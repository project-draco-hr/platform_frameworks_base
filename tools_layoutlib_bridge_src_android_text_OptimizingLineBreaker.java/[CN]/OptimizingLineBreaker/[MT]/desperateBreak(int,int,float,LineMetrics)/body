{
  float w=0, pw=0;
  boolean breakFound=false;
  int breakIndex=0, firstTabIndex=Integer.MAX_VALUE;
  for (int i=start; i < limit; i++) {
    Primitive p=mPrimitives.get(i);
    if (p.type == PrimitiveType.BOX || p.type == PrimitiveType.GLUE) {
      w+=p.width;
      if (p.type == PrimitiveType.BOX) {
        pw=w;
      }
    }
 else     if (p.type == PrimitiveType.VARIABLE) {
      w=mTabStops.width(w);
      firstTabIndex=Math.min(firstTabIndex,i);
    }
    if (pw > maxWidth && breakFound) {
      break;
    }
    if (i > start && (p.type == PrimitiveType.PENALTY || p.type == PrimitiveType.WORD_BREAK)) {
      breakFound=true;
      breakIndex=i;
    }
  }
  if (breakFound) {
    lineMetrics.mWidth=w;
    lineMetrics.mPrintedWidth=pw;
    lineMetrics.mHasTabs=(start <= firstTabIndex && firstTabIndex < breakIndex);
    return breakIndex;
  }
 else {
    return -1;
  }
}
