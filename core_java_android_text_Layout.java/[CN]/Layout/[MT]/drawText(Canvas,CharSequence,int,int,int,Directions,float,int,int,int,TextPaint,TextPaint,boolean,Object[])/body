{
  char[] buf;
  if (!hasTabs) {
    if (directions == DIRS_ALL_LEFT_TO_RIGHT) {
      if (DEBUG) {
        Assert.assertTrue(DIR_LEFT_TO_RIGHT == dir);
      }
      Styled.drawText(canvas,text,start,end,dir,false,x,top,y,bottom,paint,workPaint,false);
      return;
    }
    buf=null;
  }
 else {
    buf=TextUtils.obtain(end - start);
    TextUtils.getChars(text,start,end,buf,0);
  }
  float h=0;
  int lastRunIndex=directions.mDirections.length - 2;
  for (int i=0; i < directions.mDirections.length; i+=2) {
    int here=start + directions.mDirections[i];
    int there=here + (directions.mDirections[i + 1] & RUN_LENGTH_MASK);
    boolean runIsRtl=(directions.mDirections[i + 1] & RUN_RTL_FLAG) != 0;
    if (there > end)     there=end;
    int segstart=here;
    for (int j=hasTabs ? here : there; j <= there; j++) {
      int pj=j - start;
      if (j == there || buf[pj] == '\t') {
        h+=Styled.drawText(canvas,text,segstart,j,dir,runIsRtl,x + h,top,y,bottom,paint,workPaint,i != lastRunIndex || j != end);
        if (j != there)         h=dir * nextTab(text,start,end,h * dir,parspans);
        segstart=j + 1;
      }
 else       if (hasTabs && buf[pj] >= 0xD800 && buf[pj] <= 0xDFFF && j + 1 < there) {
        int emoji=Character.codePointAt(buf,pj);
        if (emoji >= MIN_EMOJI && emoji <= MAX_EMOJI) {
          Bitmap bm=EMOJI_FACTORY.getBitmapFromAndroidPua(emoji);
          if (bm != null) {
            h+=Styled.drawText(canvas,text,segstart,j,dir,runIsRtl,x + h,top,y,bottom,paint,workPaint,i != lastRunIndex || j != end);
            if (mEmojiRect == null) {
              mEmojiRect=new RectF();
            }
            workPaint.set(paint);
            Styled.measureText(paint,workPaint,text,j,j + 1,null);
            float bitmapHeight=bm.getHeight();
            float textHeight=-workPaint.ascent();
            float scale=textHeight / bitmapHeight;
            float width=bm.getWidth() * scale;
            mEmojiRect.set(x + h,y - textHeight,x + h + width,y);
            canvas.drawBitmap(bm,null,mEmojiRect,paint);
            h+=width;
            j++;
            segstart=j + 1;
          }
        }
      }
    }
  }
  if (hasTabs)   TextUtils.recycle(buf);
}
