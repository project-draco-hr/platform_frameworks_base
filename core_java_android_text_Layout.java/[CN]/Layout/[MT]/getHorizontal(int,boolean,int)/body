{
  int start=getLineStart(line);
  int end=getLineEnd(line);
  int dir=getParagraphDirection(line);
  boolean hasTabOrEmoji=getLineContainsTab(line);
  Directions directions=getLineDirections(line);
  TabStops tabStops=null;
  if (hasTabOrEmoji && mText instanceof Spanned) {
    TabStopSpan[] tabs=((Spanned)mText).getSpans(start,end,TabStopSpan.class);
    if (tabs.length > 0) {
      tabStops=new TabStops(TAB_INCREMENT,tabs);
    }
  }
  TextLine tl=TextLine.obtain();
  tl.set(mPaint,mText,start,end,dir,directions,hasTabOrEmoji,tabStops);
  float wid=tl.measure(offset - start,trailing,null);
  TextLine.recycle(tl);
  int left=getParagraphLeft(line);
  int right=getParagraphRight(line);
  return getLineStartPos(line,left,right) + wid;
}
