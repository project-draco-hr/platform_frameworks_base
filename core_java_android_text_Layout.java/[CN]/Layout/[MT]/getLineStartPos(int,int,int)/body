{
  Alignment align=getParagraphAlignment(line);
  int dir=getParagraphDirection(line);
  int x;
  if (align == Alignment.ALIGN_NORMAL) {
    if (dir == DIR_LEFT_TO_RIGHT) {
      x=left;
    }
 else {
      x=right;
    }
  }
 else {
    TabStops tabStops=null;
    if (mSpannedText && getLineContainsTab(line)) {
      Spanned spanned=(Spanned)mText;
      int start=getLineStart(line);
      int spanEnd=spanned.nextSpanTransition(start,spanned.length(),TabStopSpan.class);
      TabStopSpan[] tabSpans=getParagraphSpans(spanned,start,spanEnd,TabStopSpan.class);
      if (tabSpans.length > 0) {
        tabStops=new TabStops(TAB_INCREMENT,tabSpans);
      }
    }
    int max=(int)getLineExtent(line,tabStops,false);
    if (align == Alignment.ALIGN_OPPOSITE) {
      if (dir == DIR_LEFT_TO_RIGHT) {
        x=right - max;
      }
 else {
        x=left - max;
      }
    }
 else {
      max=max & ~1;
      x=(left + right - max) >> 1;
    }
  }
  return x;
}
