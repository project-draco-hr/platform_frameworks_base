{
  if (mSpannedText) {
    if (lineBackgroundSpans == null) {
      lineBackgroundSpans=new SpanSet<LineBackgroundSpan>(LineBackgroundSpan.class);
    }
    Spanned buffer=(Spanned)mText;
    int textLength=buffer.length();
    lineBackgroundSpans.init(buffer,0,textLength);
    if (lineBackgroundSpans.numberOfSpans > 0) {
      int previousLineBottom=getLineTop(firstLine);
      int previousLineEnd=getLineStart(firstLine);
      ParagraphStyle[] spans=NO_PARA_SPANS;
      int spansLength=0;
      TextPaint paint=mPaint;
      int spanEnd=0;
      final int width=mWidth;
      for (int i=firstLine; i <= lastLine; i++) {
        int start=previousLineEnd;
        int end=getLineStart(i + 1);
        previousLineEnd=end;
        int ltop=previousLineBottom;
        int lbottom=getLineTop(i + 1);
        previousLineBottom=lbottom;
        int lbaseline=lbottom - getLineDescent(i);
        if (start >= spanEnd) {
          spanEnd=lineBackgroundSpans.getNextTransition(start,textLength);
          spansLength=0;
          if (start != end || start == 0) {
            for (int j=0; j < lineBackgroundSpans.numberOfSpans; j++) {
              if (lineBackgroundSpans.spanStarts[j] >= end || lineBackgroundSpans.spanEnds[j] <= start)               continue;
              if (spansLength == spans.length) {
                int newSize=ArrayUtils.idealObjectArraySize(2 * spansLength);
                ParagraphStyle[] newSpans=new ParagraphStyle[newSize];
                System.arraycopy(spans,0,newSpans,0,spansLength);
                spans=newSpans;
              }
              spans[spansLength++]=lineBackgroundSpans.spans[j];
            }
          }
        }
        for (int n=0; n < spansLength; n++) {
          LineBackgroundSpan lineBackgroundSpan=(LineBackgroundSpan)spans[n];
          lineBackgroundSpan.drawBackground(canvas,paint,0,width,ltop,lbaseline,lbottom,buffer,start,end,i);
        }
      }
    }
    lineBackgroundSpans.recycle();
  }
  if (highlight != null) {
    if (cursorOffsetVertical != 0)     canvas.translate(0,cursorOffsetVertical);
    canvas.drawPath(highlight,highlightPaint);
    if (cursorOffsetVertical != 0)     canvas.translate(0,-cursorOffsetVertical);
  }
}
