{
  Settings.Global.putInt(mRunner.getContext().getContentResolver(),Settings.Global.WIFI_SCAN_ALWAYS_AVAILABLE,0);
  Settings.Global.putInt(mRunner.getContext().getContentResolver(),Settings.Global.WIFI_SLEEP_POLICY,Settings.Global.WIFI_SLEEP_POLICY_NEVER);
  Settings.Global.putLong(mRunner.getContext().getContentResolver(),Settings.Global.WIFI_IDLE_MS,WIFI_IDLE_MS);
  WifiConfiguration config;
  if (mPassword == null) {
    config=WifiConfigurationHelper.createOpenConfig(mSsid);
  }
 else {
    config=WifiConfigurationHelper.createPskConfig(mSsid,mPassword);
  }
  assertTrue("Failed to connect to Wi-Fi network: " + mSsid,connectToWifiWithConfiguration(config));
  assertTrue("wifi not connected",waitForNetworkState(ConnectivityManager.TYPE_WIFI,State.CONNECTED,WIFI_CONNECTION_TIMEOUT));
  assertTrue("Wi-Fi is connected, but no data connection.",pingTest());
  long i, sum=0, avgReconnectTime=0;
  for (i=1; i <= mReconnectIterations; i++) {
    writeOutput(String.format("iteration %d out of %d",i,mReconnectIterations));
    logv("iteration: " + i);
    turnScreenOff();
    long start=SystemClock.uptimeMillis();
    PowerManager pm=(PowerManager)mRunner.getContext().getSystemService(Context.POWER_SERVICE);
    while (pm.isInteractive() && ((SystemClock.uptimeMillis() - start) < SCREEN_OFF_TIMER)) {
      SystemClock.sleep(100);
    }
    assertFalse("screen still on",pm.isInteractive());
    SystemClock.sleep(WIFI_IDLE_MS + WIFI_SHUTDOWN_DELAY);
    if (mWifiOnlyFlag) {
      assertTrue("expected wifi disconnect, still has active connection",waitUntilNoActiveNetworkConnection(2 * LONG_TIMEOUT));
    }
 else {
      assertTrue("no fallback on mobile or wifi didn't disconnect",waitForNetworkState(ConnectivityManager.TYPE_MOBILE,State.CONNECTED,2 * LONG_TIMEOUT));
    }
    SystemClock.sleep(mWifiSleepTime);
    if (mWifiOnlyFlag) {
      NetworkInfo ni=mCm.getActiveNetworkInfo();
      if (ni != null) {
        Log.e(mLogTag,"has active network while in wifi sleep: " + ni.toString());
        fail("active network detected");
      }
    }
 else {
      assertEquals("mobile not connected",State.CONNECTED,mCm.getNetworkInfo(ConnectivityManager.TYPE_MOBILE).getState());
      assertTrue("no connectivity over mobile",pingTest());
    }
    turnScreenOn();
    long startTime=SystemClock.uptimeMillis();
    assertTrue("screen on: wifi not enabled before timeout",waitForWifiState(WifiManager.WIFI_STATE_ENABLED,SHORT_TIMEOUT));
    assertTrue("screen on: wifi not connected before timeout",waitForNetworkState(ConnectivityManager.TYPE_WIFI,State.CONNECTED,LONG_TIMEOUT));
    long connectionTime=SystemClock.uptimeMillis() - startTime;
    sum+=connectionTime;
    avgReconnectTime=sum / i;
    logv("average reconnection time is: " + avgReconnectTime);
    assertTrue("Reconnect to Wi-Fi network, but no data connection.",pingTest());
  }
  Bundle result=new Bundle();
  result.putLong("actual-iterations",i - 1);
  result.putLong("avg-reconnect-time",avgReconnectTime);
  getInstrumentation().sendStatus(Activity.RESULT_FIRST_USER,result);
  if (i == mReconnectIterations + 1) {
    writeOutput(String.format("iteration %d out of %d",i,mReconnectIterations));
  }
}
