{
  final String packageName=ShortcutService.parseStringAttribute(parser,ATTR_NAME);
  final int userId=ShortcutService.parseIntAttribute(parser,ATTR_USER_ID,ownerUserId);
  final int versionCode=ShortcutService.parseIntAttribute(parser,ATTR_VERSION);
  final boolean shadow=ShortcutService.parseBooleanAttribute(parser,ATTR_SHADOW);
  final ArrayList<byte[]> hashes=new ArrayList<>();
  final int outerDepth=parser.getDepth();
  int type;
  while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && (type != XmlPullParser.END_TAG || parser.getDepth() > outerDepth)) {
    if (type != XmlPullParser.START_TAG) {
      continue;
    }
    final int depth=parser.getDepth();
    final String tag=parser.getName();
switch (tag) {
case TAG_SIGNATURE:
{
        final String hash=ShortcutService.parseStringAttribute(parser,ATTR_SIGNATURE_HASH);
        hashes.add(Base64.decode(hash.getBytes()));
        continue;
      }
  }
  throw ShortcutService.throwForInvalidTag(depth,tag);
}
return new ShortcutPackageInfo(packageName,userId,versionCode,hashes,shadow);
}
