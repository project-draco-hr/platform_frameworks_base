{
  if (appearing) {
    animatedCell.scale=0.0f;
    animatedCell.alpha=1.0f;
  }
  animatedCell.translateY=appearing ? translationY : 0;
  ValueAnimator animator=ValueAnimator.ofFloat(animatedCell.translateY,appearing ? 0 : translationY);
  animator.setInterpolator(interpolator);
  animator.setDuration(duration);
  animator.setStartDelay(delay);
  animator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){
    @Override public void onAnimationUpdate(    ValueAnimator animation){
      float animatedFraction=animation.getAnimatedFraction();
      if (appearing) {
        animatedCell.scale=animatedFraction;
      }
 else {
        animatedCell.alpha=1 - animatedFraction;
      }
      animatedCell.translateY=(float)animation.getAnimatedValue();
      mLockPatternView.invalidate();
    }
  }
);
  if (finishListener != null) {
    animator.addListener(new AnimatorListenerAdapter(){
      @Override public void onAnimationEnd(      Animator animation){
        finishListener.run();
      }
    }
);
    mAppearAnimationUtils.createAnimation(mEcaView,delay,duration,translationY,appearing,interpolator,null);
  }
  animator.start();
  mLockPatternView.invalidate();
}
