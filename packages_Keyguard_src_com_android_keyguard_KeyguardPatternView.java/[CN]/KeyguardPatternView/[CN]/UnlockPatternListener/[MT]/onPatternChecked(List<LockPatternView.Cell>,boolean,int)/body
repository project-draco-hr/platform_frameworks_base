{
  if (matched) {
    mCallback.reportUnlockAttempt(true,0);
    mLockPatternView.setDisplayMode(LockPatternView.DisplayMode.Correct);
    mCallback.dismiss(true);
  }
 else {
    if (pattern.size() > MIN_PATTERN_BEFORE_POKE_WAKELOCK) {
      mCallback.userActivity();
    }
    mLockPatternView.setDisplayMode(LockPatternView.DisplayMode.Wrong);
    mCallback.reportUnlockAttempt(false,timeoutMs);
    int attempts=mKeyguardUpdateMonitor.getFailedUnlockAttempts();
    if (timeoutMs > 0) {
      long deadline=mLockPatternUtils.setLockoutAttemptDeadline(KeyguardUpdateMonitor.getCurrentUser(),timeoutMs);
      handleAttemptLockout(deadline);
    }
 else {
      mSecurityMessageDisplay.setMessage(R.string.kg_wrong_pattern,true);
      mLockPatternView.postDelayed(mCancelPatternRunnable,PATTERN_CLEAR_TIMEOUT_MS);
    }
  }
}
