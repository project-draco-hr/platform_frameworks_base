{
  super.onCreate(savedInstanceState);
  getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
  detectRefreshRate();
  RelativeLayout rootLayout=new RelativeLayout(this);
  rootLayout.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.MATCH_PARENT));
  CustomLayout layout=new CustomLayout(this);
  layout.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.MATCH_PARENT));
  Rect rect=new Rect();
  getWindow().getDecorView().getWindowVisibleDisplayFrame(rect);
  mWidth=rect.right;
  mHeight=rect.bottom;
  long maxMemoryPerSurface=roundToNextPowerOf2(mWidth) * roundToNextPowerOf2(mHeight) * 4;
  int surfaceCnt=(int)((getMemoryInfo().availMem * 3) / (4 * maxMemoryPerSurface));
  if (surfaceCnt < MIN_NUMBER_OF_SURFACES) {
    throw new RuntimeException("Not enough memory to allocate " + MIN_NUMBER_OF_SURFACES + " surfaces.");
  }
  if (surfaceCnt > MAX_NUMBER_OF_SURFACES) {
    surfaceCnt=MAX_NUMBER_OF_SURFACES;
  }
  LinearLayout controlLayout=new LinearLayout(this);
  controlLayout.setOrientation(LinearLayout.VERTICAL);
  controlLayout.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.MATCH_PARENT));
  mMeasureCompositionButton=createButton("Compositor speed.",controlLayout);
  mMeasureAllocationButton=createButton("Allocation speed",controlLayout);
  String[] pixelFomats=new String[PIXEL_FORMATS.length];
  for (int i=0; i < pixelFomats.length; ++i) {
    pixelFomats[i]=getPixelFormatInfo(PIXEL_FORMATS[i]);
  }
  mPixelFormatSelector=new Spinner(this);
  ArrayAdapter<String> pixelFormatSelectorAdapter=new ArrayAdapter<String>(this,android.R.layout.simple_spinner_item,pixelFomats);
  pixelFormatSelectorAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
  mPixelFormatSelector.setAdapter(pixelFormatSelectorAdapter);
  mPixelFormatSelector.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,ViewGroup.LayoutParams.WRAP_CONTENT));
  controlLayout.addView(mPixelFormatSelector);
  mResultView=new TextView(this);
  mResultView.setBackgroundColor(0);
  mResultView.setText("Press button to start test.");
  mResultView.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,ViewGroup.LayoutParams.WRAP_CONTENT));
  controlLayout.addView(mResultView);
  mSystemInfoView=new TextView(this);
  mSystemInfoView.setBackgroundColor(0);
  mSystemInfoView.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,ViewGroup.LayoutParams.WRAP_CONTENT));
  controlLayout.addView(mSystemInfoView);
  for (int i=0; i < surfaceCnt; ++i) {
    CustomSurfaceView view=new CustomSurfaceView(this,"Surface:" + i);
    if (i == 0) {
      view.setLayoutParams(new CustomLayout.LayoutParams(0,0,mWidth,mHeight));
      view.setZOrderMediaOverlay(false);
    }
 else {
      int x=i;
      int y=(surfaceCnt - i);
      view.setLayoutParams(new CustomLayout.LayoutParams(x,y,x + mWidth,y + mHeight));
      view.setZOrderMediaOverlay(true);
    }
    view.setVisibility(View.INVISIBLE);
    layout.addView(view);
    mViews.add(view);
  }
  rootLayout.addView(layout);
  rootLayout.addView(controlLayout);
  setContentView(rootLayout);
}
