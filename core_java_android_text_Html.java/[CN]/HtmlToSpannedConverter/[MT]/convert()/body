{
  mReader.setContentHandler(this);
  try {
    mReader.parse(new InputSource(new StringReader(mSource)));
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
catch (  SAXException e) {
    throw new RuntimeException(e);
  }
  Object[] obj=mSpannableStringBuilder.getSpans(0,mSpannableStringBuilder.length(),ParagraphStyle.class);
  for (int i=0; i < obj.length; i++) {
    int start=mSpannableStringBuilder.getSpanStart(obj[i]);
    int end=mSpannableStringBuilder.getSpanEnd(obj[i]);
    if (end - 2 >= 0) {
      if (mSpannableStringBuilder.charAt(end - 1) == '\n' && mSpannableStringBuilder.charAt(end - 2) == '\n') {
        end--;
      }
    }
    if (end == start) {
      mSpannableStringBuilder.removeSpan(obj[i]);
    }
 else {
      mSpannableStringBuilder.setSpan(obj[i],start,end,Spannable.SPAN_PARAGRAPH);
    }
  }
  return mSpannableStringBuilder;
}
