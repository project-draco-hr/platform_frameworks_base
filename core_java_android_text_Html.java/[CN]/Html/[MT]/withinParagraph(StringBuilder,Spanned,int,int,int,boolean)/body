{
  int next;
  for (int i=start; i < end; i=next) {
    next=text.nextSpanTransition(i,end,CharacterStyle.class);
    CharacterStyle[] style=text.getSpans(i,next,CharacterStyle.class);
    for (int j=0; j < style.length; j++) {
      if (style[j] instanceof StyleSpan) {
        int s=((StyleSpan)style[j]).getStyle();
        if ((s & Typeface.BOLD) != 0) {
          out.append("<b>");
        }
        if ((s & Typeface.ITALIC) != 0) {
          out.append("<i>");
        }
      }
      if (style[j] instanceof TypefaceSpan) {
        String s=((TypefaceSpan)style[j]).getFamily();
        if (s.equals("monospace")) {
          out.append("<tt>");
        }
      }
      if (style[j] instanceof SuperscriptSpan) {
        out.append("<sup>");
      }
      if (style[j] instanceof SubscriptSpan) {
        out.append("<sub>");
      }
      if (style[j] instanceof UnderlineSpan) {
        out.append("<u>");
      }
      if (style[j] instanceof StrikethroughSpan) {
        out.append("<strike>");
      }
      if (style[j] instanceof URLSpan) {
        out.append("<a href=\"");
        out.append(((URLSpan)style[j]).getURL());
        out.append("\">");
      }
      if (style[j] instanceof ImageSpan) {
        out.append("<img src=\"");
        out.append(((ImageSpan)style[j]).getSource());
        out.append("\">");
        i=next;
      }
      if (style[j] instanceof AbsoluteSizeSpan) {
        out.append("<font size =\"");
        out.append(((AbsoluteSizeSpan)style[j]).getSize() / 6);
        out.append("\">");
      }
      if (style[j] instanceof ForegroundColorSpan) {
        out.append("<font color =\"#");
        String color=Integer.toHexString(((ForegroundColorSpan)style[j]).getForegroundColor() + 0x01000000);
        while (color.length() < 6) {
          color="0" + color;
        }
        out.append(color);
        out.append("\">");
      }
    }
    withinStyle(out,text,i,next);
    for (int j=style.length - 1; j >= 0; j--) {
      if (style[j] instanceof ForegroundColorSpan) {
        out.append("</font>");
      }
      if (style[j] instanceof AbsoluteSizeSpan) {
        out.append("</font>");
      }
      if (style[j] instanceof URLSpan) {
        out.append("</a>");
      }
      if (style[j] instanceof StrikethroughSpan) {
        out.append("</strike>");
      }
      if (style[j] instanceof UnderlineSpan) {
        out.append("</u>");
      }
      if (style[j] instanceof SubscriptSpan) {
        out.append("</sub>");
      }
      if (style[j] instanceof SuperscriptSpan) {
        out.append("</sup>");
      }
      if (style[j] instanceof TypefaceSpan) {
        String s=((TypefaceSpan)style[j]).getFamily();
        if (s.equals("monospace")) {
          out.append("</tt>");
        }
      }
      if (style[j] instanceof StyleSpan) {
        int s=((StyleSpan)style[j]).getStyle();
        if ((s & Typeface.BOLD) != 0) {
          out.append("</b>");
        }
        if ((s & Typeface.ITALIC) != 0) {
          out.append("</i>");
        }
      }
    }
  }
  String p=last ? "" : "</p>\n" + getOpenParaTagWithDirection(text,start,end);
  if (nl == 1) {
    out.append("<br>\n");
  }
 else   if (nl == 2) {
    out.append(p);
  }
 else {
    for (int i=2; i < nl; i++) {
      out.append("<br>");
    }
    out.append(p);
  }
}
