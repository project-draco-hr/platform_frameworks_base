{
  final ConstantState cs=dr.getConstantState();
  if (cs == null) {
    return;
  }
  if (dr.canApplyTheme() && theme != null && !theme.canCacheDrawables()) {
    return;
  }
  if (mPreloading) {
    final int changingConfigs=cs.getChangingConfigurations();
    if (isColorDrawable) {
      if (verifyPreloadConfig(changingConfigs,0,value.resourceId,"drawable")) {
        sPreloadedColorDrawables.put(key,cs);
      }
    }
 else {
      if (verifyPreloadConfig(changingConfigs,LAYOUT_DIR_CONFIG,value.resourceId,"drawable")) {
        if ((changingConfigs & LAYOUT_DIR_CONFIG) == 0) {
          sPreloadedDrawables[0].put(key,cs);
          sPreloadedDrawables[1].put(key,cs);
        }
 else {
          sPreloadedDrawables[mConfiguration.getLayoutDirection()].put(key,cs);
        }
      }
    }
  }
 else {
synchronized (mAccessLock) {
      final LongSparseArray<WeakReference<ConstantState>> themedCache;
      if (!dr.canApplyTheme()) {
        themedCache=caches.getUnthemed(true);
      }
 else {
        themedCache=caches.getOrCreate(theme == null ? 0 : theme.mThemeResId);
      }
      themedCache.put(key,new WeakReference<ConstantState>(cs));
    }
  }
}
