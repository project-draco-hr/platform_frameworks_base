{
  if (TRACE_FOR_PRELOAD) {
    if ((id >>> 24) == 0x1) {
      final String name=getResourceName(id);
      if (name != null)       android.util.Log.d("PreloadColorStateList",name);
    }
  }
  final long key=(((long)value.assetCookie) << 32) | value.data;
  ColorStateList csl;
  if (value.type >= TypedValue.TYPE_FIRST_COLOR_INT && value.type <= TypedValue.TYPE_LAST_COLOR_INT) {
    csl=sPreloadedColorStateLists.get(key);
    if (csl != null) {
      return csl;
    }
    csl=ColorStateList.valueOf(value.data);
    if (mPreloading) {
      if (verifyPreloadConfig(value,"color")) {
        sPreloadedColorStateLists.put(key,csl);
      }
    }
    return csl;
  }
  csl=getCachedColorStateList(key);
  if (csl != null) {
    return csl;
  }
  csl=sPreloadedColorStateLists.get(key);
  if (csl != null) {
    return csl;
  }
  if (value.string == null) {
    throw new NotFoundException("Resource is not a ColorStateList (color or path): " + value);
  }
  String file=value.string.toString();
  if (file.endsWith(".xml")) {
    try {
      XmlResourceParser rp=loadXmlResourceParser(file,id,value.assetCookie,"colorstatelist");
      csl=ColorStateList.createFromXml(this,rp);
      rp.close();
    }
 catch (    Exception e) {
      NotFoundException rnf=new NotFoundException("File " + file + " from color state list resource ID #0x"+ Integer.toHexString(id));
      rnf.initCause(e);
      throw rnf;
    }
  }
 else {
    throw new NotFoundException("File " + file + " from drawable resource ID #0x"+ Integer.toHexString(id)+ ": .xml extension required");
  }
  if (csl != null) {
    if (mPreloading) {
      if (verifyPreloadConfig(value,"color")) {
        sPreloadedColorStateLists.put(key,csl);
      }
    }
 else {
synchronized (mTmpValue) {
        mColorStateListCache.put(key,new WeakReference<ColorStateList>(csl));
      }
    }
  }
  return csl;
}
