{
synchronized (mTmpValue) {
    int configChanges=0xfffffff;
    if (config != null) {
      configChanges=mConfiguration.updateFrom(config);
    }
    if (metrics != null) {
      mMetrics.setTo(metrics);
      mMetrics.updateMetrics(mCompatibilityInfo,mConfiguration.orientation);
    }
    mMetrics.scaledDensity=mMetrics.density * mConfiguration.fontScale;
    String locale=null;
    if (mConfiguration.locale != null) {
      locale=mConfiguration.locale.getLanguage();
      if (mConfiguration.locale.getCountry() != null) {
        locale+="-" + mConfiguration.locale.getCountry();
      }
    }
    int width, height;
    if (mMetrics.widthPixels >= mMetrics.heightPixels) {
      width=mMetrics.widthPixels;
      height=mMetrics.heightPixels;
    }
 else {
      width=mMetrics.heightPixels;
      height=mMetrics.widthPixels;
    }
    int keyboardHidden=mConfiguration.keyboardHidden;
    if (keyboardHidden == Configuration.HARDKEYBOARDHIDDEN_NO && mConfiguration.hardKeyboardHidden == Configuration.HARDKEYBOARDHIDDEN_YES) {
      keyboardHidden=Configuration.KEYBOARDHIDDEN_SOFT;
    }
    mAssets.setConfiguration(mConfiguration.mcc,mConfiguration.mnc,locale,mConfiguration.orientation,mConfiguration.touchscreen,(int)(mMetrics.density * 160),mConfiguration.keyboard,keyboardHidden,mConfiguration.navigation,width,height,sSdkVersion);
    int N=mDrawableCache.size();
    if (DEBUG_CONFIG) {
      Log.d(TAG,"Cleaning up drawables config changes: 0x" + Integer.toHexString(configChanges));
    }
    for (int i=0; i < N; i++) {
      WeakReference<Drawable.ConstantState> ref=mDrawableCache.valueAt(i);
      if (ref != null) {
        Drawable.ConstantState cs=ref.get();
        if (cs != null) {
          if (Configuration.needNewResources(configChanges,cs.getChangingConfigurations())) {
            if (DEBUG_CONFIG) {
              Log.d(TAG,"FLUSHING #0x" + Long.toHexString(mDrawableCache.keyAt(i)) + " / "+ cs+ " with changes: 0x"+ Integer.toHexString(cs.getChangingConfigurations()));
            }
            mDrawableCache.setValueAt(i,null);
          }
 else           if (DEBUG_CONFIG) {
            Log.d(TAG,"(Keeping #0x" + Long.toHexString(mDrawableCache.keyAt(i)) + " / "+ cs+ " with changes: 0x"+ Integer.toHexString(cs.getChangingConfigurations())+ ")");
          }
        }
      }
    }
    mDrawableCache.clear();
    mColorStateListCache.clear();
    flushLayoutCache();
  }
synchronized (mSync) {
    if (mPluralRule != null) {
      mPluralRule=PluralRules.ruleForLocale(config.locale);
    }
  }
}
