{
  if (value.type >= TypedValue.TYPE_FIRST_COLOR_INT && value.type <= TypedValue.TYPE_LAST_COLOR_INT) {
    Drawable dr=new ColorDrawable(value.data);
    dr.setChangingConfigurations(value.changingConfigurations);
    return dr;
  }
  final int key=(value.assetCookie << 24) | value.data;
  Drawable dr=getCachedDrawable(key);
  if (dr != null) {
    return dr;
  }
  Drawable.ConstantState cs=mPreloadedDrawables.get(key);
  if (cs != null) {
    dr=cs.newDrawable();
  }
 else {
    if (value.string == null) {
      throw new NotFoundException("Resource is not a Drawable (color or path): " + value);
    }
    String file=value.string.toString();
    if (DEBUG_LOAD)     Log.v(TAG,"Loading drawable for cookie " + value.assetCookie + ": "+ file);
    if (file.endsWith(".xml")) {
      try {
        XmlResourceParser rp=loadXmlResourceParser(file,id,value.assetCookie,"drawable");
        dr=Drawable.createFromXml(this,rp);
        rp.close();
      }
 catch (      Exception e) {
        NotFoundException rnf=new NotFoundException("File " + file + " from drawable resource ID #0x"+ Integer.toHexString(id));
        rnf.initCause(e);
        throw rnf;
      }
    }
 else {
      try {
        InputStream is=mAssets.openNonAsset(value.assetCookie,file,AssetManager.ACCESS_BUFFER);
        dr=Drawable.createFromStream(is,file);
        is.close();
      }
 catch (      Exception e) {
        NotFoundException rnf=new NotFoundException("File " + file + " from drawable resource ID #0x"+ Integer.toHexString(id));
        rnf.initCause(e);
        throw rnf;
      }
    }
  }
  if (dr != null) {
    dr.setChangingConfigurations(value.changingConfigurations);
    cs=dr.getConstantState();
    if (cs != null) {
      if (mPreloading) {
        mPreloadedDrawables.put(key,cs);
      }
synchronized (mTmpValue) {
        mDrawableCache.put(key,new WeakReference<Drawable.ConstantState>(cs));
      }
    }
  }
  return dr;
}
