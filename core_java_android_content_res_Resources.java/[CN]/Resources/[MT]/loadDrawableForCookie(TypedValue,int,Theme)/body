{
  if (value.string == null) {
    throw new NotFoundException("Resource is not a Drawable (color or path): " + value);
  }
  final String file=value.string.toString();
  if (TRACE_FOR_MISS_PRELOAD) {
    if ((id >>> 24) == 0x1) {
      final String name=getResourceName(id);
      if (name != null) {
        Log.d(TAG,"Loading framework drawable #" + Integer.toHexString(id) + ": "+ name+ " at "+ file);
      }
    }
  }
  if (DEBUG_LOAD) {
    Log.v(TAG,"Loading drawable for cookie " + value.assetCookie + ": "+ file);
  }
  final Drawable dr;
  Trace.traceBegin(Trace.TRACE_TAG_RESOURCES,file);
  try {
    if (file.endsWith(".xml")) {
      final XmlResourceParser rp=loadXmlResourceParser(file,id,value.assetCookie,"drawable");
      dr=Drawable.createFromXmlThemed(this,rp,theme);
      rp.close();
    }
 else {
      final InputStream is=mAssets.openNonAsset(value.assetCookie,file,AssetManager.ACCESS_STREAMING);
      dr=Drawable.createFromResourceStreamThemed(this,value,is,file,null,theme);
      is.close();
    }
  }
 catch (  Exception e) {
    Trace.traceEnd(Trace.TRACE_TAG_RESOURCES);
    final NotFoundException rnf=new NotFoundException("File " + file + " from drawable resource ID #0x"+ Integer.toHexString(id));
    rnf.initCause(e);
    throw rnf;
  }
  Trace.traceEnd(Trace.TRACE_TAG_RESOURCES);
  return dr;
}
