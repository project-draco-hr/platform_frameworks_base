{
  if (value.string == null) {
    throw new NotFoundException("Resource \"" + getResourceName(id) + "\" ("+ Integer.toHexString(id)+ ") is not a ColorStateList: "+ value);
  }
  final String file=value.string.toString();
  if (TRACE_FOR_MISS_PRELOAD) {
    if ((id >>> 24) == 0x1) {
      final String name=getResourceName(id);
      if (name != null) {
        Log.d(TAG,"Loading framework color state list #" + Integer.toHexString(id) + ": "+ name+ " at "+ file);
      }
    }
  }
  if (DEBUG_LOAD) {
    Log.v(TAG,"Loading color state list for cookie " + value.assetCookie + ": "+ file);
  }
  final ColorStateList csl;
  Trace.traceBegin(Trace.TRACE_TAG_RESOURCES,file);
  if (file.endsWith(".xml")) {
    try {
      final XmlResourceParser rp=loadXmlResourceParser(file,id,value.assetCookie,"colorstatelist");
      csl=ColorStateList.createFromXml(this,rp,theme);
      rp.close();
    }
 catch (    Exception e) {
      Trace.traceEnd(Trace.TRACE_TAG_RESOURCES);
      final NotFoundException rnf=new NotFoundException("File " + file + " from color state list resource ID #0x"+ Integer.toHexString(id));
      rnf.initCause(e);
      throw rnf;
    }
  }
 else {
    Trace.traceEnd(Trace.TRACE_TAG_RESOURCES);
    throw new NotFoundException("File " + file + " from drawable resource ID #0x"+ Integer.toHexString(id)+ ": .xml extension required");
  }
  Trace.traceEnd(Trace.TRACE_TAG_RESOURCES);
  return csl;
}
