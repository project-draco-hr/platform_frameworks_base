{
  if (TRACE_FOR_PRELOAD) {
    if ((id >>> 24) == 0x1) {
      final String name=getResourceName(id);
      if (name != null) {
        Log.d("PreloadDrawable",name);
      }
    }
  }
  final boolean isColorDrawable;
  final ArrayMap<String,LongSparseArray<WeakReference<ConstantState>>> caches;
  final long key;
  if (value.type >= TypedValue.TYPE_FIRST_COLOR_INT && value.type <= TypedValue.TYPE_LAST_COLOR_INT) {
    isColorDrawable=true;
    caches=mColorDrawableCache;
    key=value.data;
  }
 else {
    isColorDrawable=false;
    caches=mDrawableCache;
    key=(((long)value.assetCookie) << 32) | value.data;
  }
  if (!mPreloading) {
    final Drawable cachedDrawable=getCachedDrawable(caches,key,theme);
    if (cachedDrawable != null) {
      return cachedDrawable;
    }
  }
  final ConstantState cs;
  if (isColorDrawable) {
    cs=sPreloadedColorDrawables.get(key);
  }
 else {
    cs=sPreloadedDrawables[mConfiguration.getLayoutDirection()].get(key);
  }
  final Drawable dr;
  if (cs != null) {
    final Drawable clonedDr=cs.newDrawable(this);
    if (theme != null) {
      dr=clonedDr.mutate();
      dr.applyTheme(theme);
      dr.clearMutated();
    }
 else {
      dr=clonedDr;
    }
  }
 else   if (isColorDrawable) {
    dr=new ColorDrawable(value.data);
  }
 else {
    dr=loadDrawableForCookie(value,id,theme);
  }
  if (dr != null) {
    dr.setChangingConfigurations(value.changingConfigurations);
    cacheDrawable(value,theme,isColorDrawable,caches,key,dr);
  }
  return dr;
}
