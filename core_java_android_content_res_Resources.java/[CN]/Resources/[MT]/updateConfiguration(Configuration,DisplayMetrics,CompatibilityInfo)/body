{
synchronized (mAccessLock) {
    if (false) {
      Slog.i(TAG,"**** Updating config of " + this + ": old config is "+ mConfiguration+ " old compat is "+ mCompatibilityInfo);
      Slog.i(TAG,"**** Updating config of " + this + ": new config is "+ config+ " new compat is "+ compat);
    }
    if (compat != null) {
      mCompatibilityInfo=compat;
    }
    if (metrics != null) {
      mMetrics.setTo(metrics);
    }
    mCompatibilityInfo.applyToDisplayMetrics(mMetrics);
    final int configChanges=calcConfigChanges(config);
    LocaleList locales=mConfiguration.getLocales();
    if (locales.isEmpty()) {
      locales=LocaleList.getDefault();
      mConfiguration.setLocales(locales);
    }
    if (mConfiguration.densityDpi != Configuration.DENSITY_DPI_UNDEFINED) {
      mMetrics.densityDpi=mConfiguration.densityDpi;
      mMetrics.density=mConfiguration.densityDpi * DisplayMetrics.DENSITY_DEFAULT_SCALE;
    }
    mMetrics.scaledDensity=mMetrics.density * mConfiguration.fontScale;
    final int width, height;
    if (mMetrics.widthPixels >= mMetrics.heightPixels) {
      width=mMetrics.widthPixels;
      height=mMetrics.heightPixels;
    }
 else {
      width=mMetrics.heightPixels;
      height=mMetrics.widthPixels;
    }
    final int keyboardHidden;
    if (mConfiguration.keyboardHidden == Configuration.KEYBOARDHIDDEN_NO && mConfiguration.hardKeyboardHidden == Configuration.HARDKEYBOARDHIDDEN_YES) {
      keyboardHidden=Configuration.KEYBOARDHIDDEN_SOFT;
    }
 else {
      keyboardHidden=mConfiguration.keyboardHidden;
    }
    mAssets.setConfiguration(mConfiguration.mcc,mConfiguration.mnc,adjustLanguageTag(locales.getPrimary().toLanguageTag()),mConfiguration.orientation,mConfiguration.touchscreen,mConfiguration.densityDpi,mConfiguration.keyboard,keyboardHidden,mConfiguration.navigation,width,height,mConfiguration.smallestScreenWidthDp,mConfiguration.screenWidthDp,mConfiguration.screenHeightDp,mConfiguration.screenLayout,mConfiguration.uiMode,Build.VERSION.RESOURCES_SDK_INT);
    if (DEBUG_CONFIG) {
      Slog.i(TAG,"**** Updating config of " + this + ": final config is "+ mConfiguration+ " final compat is "+ mCompatibilityInfo);
    }
    mDrawableCache.onConfigurationChange(configChanges);
    mColorDrawableCache.onConfigurationChange(configChanges);
    mColorStateListCache.onConfigurationChange(configChanges);
    mAnimatorCache.onConfigurationChange(configChanges);
    mStateListAnimatorCache.onConfigurationChange(configChanges);
    flushLayoutCache();
  }
synchronized (sSync) {
    if (mPluralRule != null) {
      mPluralRule=PluralRules.forLocale(config.getLocales().getPrimary());
    }
  }
}
