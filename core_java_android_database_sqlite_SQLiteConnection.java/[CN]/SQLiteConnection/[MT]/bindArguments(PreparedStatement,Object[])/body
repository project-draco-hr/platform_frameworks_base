{
  final int count=bindArgs != null ? bindArgs.length : 0;
  if (count != statement.mNumParameters) {
    throw new SQLiteBindOrColumnIndexOutOfRangeException("Expected " + statement.mNumParameters + " bind arguments but "+ count+ " were provided.");
  }
  if (count == 0) {
    return;
  }
  final long statementPtr=statement.mStatementPtr;
  for (int i=0; i < count; i++) {
    final Object arg=bindArgs[i];
switch (DatabaseUtils.getTypeOfObject(arg)) {
case Cursor.FIELD_TYPE_NULL:
      nativeBindNull(mConnectionPtr,statementPtr,i + 1);
    break;
case Cursor.FIELD_TYPE_INTEGER:
  nativeBindLong(mConnectionPtr,statementPtr,i + 1,((Number)arg).longValue());
break;
case Cursor.FIELD_TYPE_FLOAT:
nativeBindDouble(mConnectionPtr,statementPtr,i + 1,((Number)arg).doubleValue());
break;
case Cursor.FIELD_TYPE_BLOB:
nativeBindBlob(mConnectionPtr,statementPtr,i + 1,(byte[])arg);
break;
case Cursor.FIELD_TYPE_STRING:
default :
if (arg instanceof Boolean) {
nativeBindLong(mConnectionPtr,statementPtr,i + 1,((Boolean)arg).booleanValue() ? 1 : 0);
}
 else {
nativeBindString(mConnectionPtr,statementPtr,i + 1,arg.toString());
}
break;
}
}
}
