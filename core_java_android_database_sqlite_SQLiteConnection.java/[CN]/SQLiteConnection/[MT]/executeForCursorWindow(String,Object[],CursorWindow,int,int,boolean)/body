{
  if (sql == null) {
    throw new IllegalArgumentException("sql must not be null.");
  }
  if (window == null) {
    throw new IllegalArgumentException("window must not be null.");
  }
  int actualPos=-1;
  int countedRows=-1;
  int filledRows=-1;
  mRecentOperations.beginOperation("executeForCursorWindow",sql,bindArgs);
  try {
    PreparedStatement statement=acquirePreparedStatement(sql);
    try {
      throwIfStatementForbidden(statement);
      bindArguments(statement,bindArgs);
      applyBlockGuardPolicy(statement);
      final long result=nativeExecuteForCursorWindow(mConnectionPtr,statement.mStatementPtr,window.mWindowPtr,startPos,requiredPos,countAllRows);
      actualPos=(int)(result >> 32);
      countedRows=(int)result;
      filledRows=window.getNumRows();
      window.setStartPosition(actualPos);
      return countedRows;
    }
  finally {
      releasePreparedStatement(statement);
    }
  }
 catch (  RuntimeException ex) {
    mRecentOperations.failOperation(ex);
    throw ex;
  }
 finally {
    if (mRecentOperations.endOperationDeferLog()) {
      mRecentOperations.logOperation("window='" + window + "', startPos="+ startPos+ ", actualPos="+ actualPos+ ", filledRows="+ filledRows+ ", countedRows="+ countedRows);
    }
  }
}
