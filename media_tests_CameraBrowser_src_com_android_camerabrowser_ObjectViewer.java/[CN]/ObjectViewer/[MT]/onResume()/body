{
  super.onResume();
  MtpObjectInfo info=mClient.getObjectInfo(mDeviceName,mObjectID);
  if (info != null) {
    TextView view=(TextView)findViewById(R.id.name);
    mFileName=info.getName();
    view.setText(mFileName);
    view=(TextView)findViewById(R.id.format);
    view.setText(Integer.toHexString(info.getFormat()).toUpperCase(Locale.ROOT));
    view=(TextView)findViewById(R.id.size);
    view.setText(Long.toString(info.getCompressedSize()));
    view=(TextView)findViewById(R.id.thumb_width);
    view.setText(Long.toString(info.getThumbPixWidth()));
    view=(TextView)findViewById(R.id.thumb_height);
    view.setText(Long.toString(info.getThumbPixHeight()));
    view=(TextView)findViewById(R.id.thumb_size);
    view.setText(Long.toString(info.getThumbCompressedSize()));
    view=(TextView)findViewById(R.id.width);
    view.setText(Long.toString(info.getImagePixWidth()));
    view=(TextView)findViewById(R.id.height);
    view.setText(Long.toString(info.getImagePixHeight()));
    view=(TextView)findViewById(R.id.depth);
    view.setText(Long.toString(info.getImagePixDepth()));
    view=(TextView)findViewById(R.id.sequence);
    view.setText(Long.toString(info.getSequenceNumber()));
    view=(TextView)findViewById(R.id.created);
    Date date=new Date(info.getDateCreated() * 1000);
    view.setText(date.toString());
    view=(TextView)findViewById(R.id.modified);
    date=new Date(info.getDateModified() * 1000);
    view.setText(date.toString());
    view=(TextView)findViewById(R.id.keywords);
    view.setText(info.getKeywords());
    int thumbFormat=info.getThumbFormat();
    if (thumbFormat == MtpConstants.FORMAT_EXIF_JPEG || thumbFormat == MtpConstants.FORMAT_JFIF) {
      byte[] thumbnail=mClient.getThumbnail(mDeviceName,info.getObjectHandle());
      if (thumbnail != null) {
        Bitmap bitmap=BitmapFactory.decodeByteArray(thumbnail,0,thumbnail.length);
        if (bitmap != null) {
          ImageView thumbView=(ImageView)findViewById(R.id.thumbnail);
          thumbView.setImageBitmap(bitmap);
        }
      }
    }
  }
}
