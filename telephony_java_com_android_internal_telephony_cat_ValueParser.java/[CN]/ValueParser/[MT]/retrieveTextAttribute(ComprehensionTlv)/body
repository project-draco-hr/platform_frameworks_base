{
  ArrayList<TextAttribute> lst=new ArrayList<TextAttribute>();
  byte[] rawValue=ctlv.getRawValue();
  int valueIndex=ctlv.getValueIndex();
  int length=ctlv.getLength();
  if (length != 0) {
    int itemCount=length / 4;
    try {
      for (int i=0; i < itemCount; i++, valueIndex+=4) {
        int start=rawValue[valueIndex] & 0xff;
        int textLength=rawValue[valueIndex + 1] & 0xff;
        int format=rawValue[valueIndex + 2] & 0xff;
        int colorValue=rawValue[valueIndex + 3] & 0xff;
        int alignValue=format & 0x03;
        TextAlignment align=TextAlignment.fromInt(alignValue);
        int sizeValue=(format >> 2) & 0x03;
        FontSize size=FontSize.fromInt(sizeValue);
        if (size == null) {
          size=FontSize.NORMAL;
        }
        boolean bold=(format & 0x10) != 0;
        boolean italic=(format & 0x20) != 0;
        boolean underlined=(format & 0x40) != 0;
        boolean strikeThrough=(format & 0x80) != 0;
        TextColor color=TextColor.fromInt(colorValue);
        TextAttribute attr=new TextAttribute(start,textLength,align,size,bold,italic,underlined,strikeThrough,color);
        lst.add(attr);
      }
      return lst;
    }
 catch (    IndexOutOfBoundsException e) {
      throw new ResultException(ResultCode.CMD_DATA_NOT_UNDERSTOOD);
    }
  }
  return null;
}
