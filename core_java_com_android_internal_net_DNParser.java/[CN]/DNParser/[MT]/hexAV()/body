{
  if (pos + 4 >= length) {
    throw new IOException(ERROR_PARSE_ERROR);
  }
  beg=pos;
  pos++;
  while (true) {
    if (pos == length || chars[pos] == '+' || chars[pos] == ',' || chars[pos] == ';') {
      end=pos;
      break;
    }
    if (chars[pos] == ' ') {
      end=pos;
      pos++;
      for (; pos < length && chars[pos] == ' '; pos++) {
      }
      break;
    }
 else     if (chars[pos] >= 'A' && chars[pos] <= 'F') {
      chars[pos]+=32;
    }
    pos++;
  }
  int hexLen=end - beg;
  if (hexLen < 5 || (hexLen & 1) == 0) {
    throw new IOException(ERROR_PARSE_ERROR);
  }
  byte[] encoded=new byte[hexLen / 2];
  for (int i=0, p=beg + 1; i < encoded.length; p+=2, i++) {
    encoded[i]=(byte)getByte(p);
  }
  return new String(chars,beg,hexLen);
}
