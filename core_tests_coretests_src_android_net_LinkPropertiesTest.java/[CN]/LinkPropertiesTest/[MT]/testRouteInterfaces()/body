{
  LinkAddress prefix=new LinkAddress(NetworkUtils.numericToInetAddress("2001:db8::"),32);
  InetAddress address=NetworkUtils.numericToInetAddress(ADDRV6);
  LinkProperties lp=new LinkProperties();
  RouteInfo r=new RouteInfo(prefix,address,null);
  lp.addRoute(r);
  assertEquals(1,lp.getRoutes().size());
  assertAllRoutesHaveInterface(null,lp);
  r=new RouteInfo(prefix,address,"wlan0");
  try {
    lp.addRoute(r);
    fail("Adding wlan0 route to LP with no interface, expect exception");
  }
 catch (  IllegalArgumentException expected) {
  }
  lp.setInterfaceName("rmnet0");
  assertAllRoutesHaveInterface("rmnet0",lp);
  try {
    lp.addRoute(r);
    fail("Adding wlan0 route to rmnet0 LP, expect exception");
  }
 catch (  IllegalArgumentException expected) {
  }
  lp.setInterfaceName("wlan0");
  lp.addRoute(r);
  assertEquals(2,lp.getRoutes().size());
  assertAllRoutesHaveInterface("wlan0",lp);
  r=RouteInfo.makeHostRoute(NetworkUtils.numericToInetAddress(ADDRV6),null);
  lp.addRoute(r);
  assertEquals(3,lp.getRoutes().size());
  assertAllRoutesHaveInterface("wlan0",lp);
  LinkProperties lp2=new LinkProperties(lp);
  assertAllRoutesHaveInterface("wlan0",lp);
  assertEquals(0,lp.compareRoutes(lp2).added.size());
  assertEquals(0,lp.compareRoutes(lp2).removed.size());
  lp2.setInterfaceName("p2p0");
  assertAllRoutesHaveInterface("p2p0",lp2);
  assertEquals(3,lp.compareRoutes(lp2).added.size());
  assertEquals(3,lp.compareRoutes(lp2).removed.size());
}
