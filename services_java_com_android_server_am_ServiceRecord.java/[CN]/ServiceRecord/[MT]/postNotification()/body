{
  final int appUid=appInfo.uid;
  final int appPid=app.pid;
  if (foregroundId != 0 && foregroundNoti != null) {
    final String localPackageName=packageName;
    final int localForegroundId=foregroundId;
    final Notification localForegroundNoti=foregroundNoti;
    ams.mHandler.post(new Runnable(){
      public void run(){
        NotificationManagerService nm=(NotificationManagerService)NotificationManager.getService();
        if (nm == null) {
          return;
        }
        try {
          if (localForegroundNoti.icon == 0) {
            localForegroundNoti.icon=appInfo.icon;
            localForegroundNoti.contentView=null;
            localForegroundNoti.bigContentView=null;
            CharSequence appName=appInfo.loadLabel(ams.mContext.getPackageManager());
            if (appName == null) {
              appName=appInfo.packageName;
            }
            Context ctx=null;
            try {
              ctx=ams.mContext.createPackageContext(appInfo.packageName,0);
              Intent runningIntent=new Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS);
              runningIntent.setData(Uri.fromParts("package",appInfo.packageName,null));
              PendingIntent pi=PendingIntent.getActivity(ams.mContext,0,runningIntent,PendingIntent.FLAG_UPDATE_CURRENT);
              localForegroundNoti.setLatestEventInfo(ctx,ams.mContext.getString(com.android.internal.R.string.app_running_notification_title,appName),ams.mContext.getString(com.android.internal.R.string.app_running_notification_text,appName),pi);
            }
 catch (            PackageManager.NameNotFoundException e) {
              localForegroundNoti.icon=0;
            }
          }
          if (localForegroundNoti.icon == 0) {
            throw new RuntimeException("icon must be non-zero");
          }
          int[] outId=new int[1];
          nm.enqueueNotificationInternal(localPackageName,localPackageName,appUid,appPid,null,localForegroundId,localForegroundNoti,outId,userId);
        }
 catch (        RuntimeException e) {
          Slog.w(ActivityManagerService.TAG,"Error showing notification for service",e);
          ams.setServiceForeground(name,ServiceRecord.this,0,null,true);
          ams.crashApplication(appUid,appPid,localPackageName,"Bad notification for startForeground: " + e);
        }
      }
    }
);
  }
}
