{
  if (mPeerSd == null) {
    Log.v(TAG,"startAudioInternal() mPeerSd = null");
    throw new IllegalStateException("mPeerSd = null");
  }
  stopCall(DONT_RELEASE_SOCKET);
  mInCall=true;
  SimpleSessionDescription offer=new SimpleSessionDescription(mPeerSd);
  AudioStream stream=mAudioStream;
  AudioCodec codec=null;
  for (  Media media : offer.getMedia()) {
    if ((codec == null) && (media.getPort() > 0) && "audio".equals(media.getType())&& "RTP/AVP".equals(media.getProtocol())) {
      for (      int type : media.getRtpPayloadTypes()) {
        codec=AudioCodec.getCodec(type,media.getRtpmap(type),media.getFmtp(type));
        if (codec != null) {
          break;
        }
      }
      if (codec != null) {
        String address=media.getAddress();
        if (address == null) {
          address=offer.getAddress();
        }
        stream.associate(InetAddress.getByName(address),media.getPort());
        stream.setDtmfType(-1);
        stream.setCodec(codec);
        for (        int type : media.getRtpPayloadTypes()) {
          String rtpmap=media.getRtpmap(type);
          if ((type != codec.type) && (rtpmap != null) && rtpmap.startsWith("telephone-event")) {
            stream.setDtmfType(type);
          }
        }
        if (mHold) {
          stream.setMode(RtpStream.MODE_NORMAL);
        }
 else         if (media.getAttribute("recvonly") != null) {
          stream.setMode(RtpStream.MODE_SEND_ONLY);
        }
 else         if (media.getAttribute("sendonly") != null) {
          stream.setMode(RtpStream.MODE_RECEIVE_ONLY);
        }
 else         if (offer.getAttribute("recvonly") != null) {
          stream.setMode(RtpStream.MODE_SEND_ONLY);
        }
 else         if (offer.getAttribute("sendonly") != null) {
          stream.setMode(RtpStream.MODE_RECEIVE_ONLY);
        }
 else {
          stream.setMode(RtpStream.MODE_NORMAL);
        }
        break;
      }
    }
  }
  if (codec == null) {
    throw new IllegalStateException("Reject SDP: no suitable codecs");
  }
  if (!mHold) {
    ((AudioManager)mContext.getSystemService(Context.AUDIO_SERVICE)).setMode(AudioManager.MODE_NORMAL);
  }
  AudioGroup audioGroup=getAudioGroup();
  if (mHold) {
    if (audioGroup != null) {
      audioGroup.setMode(AudioGroup.MODE_ON_HOLD);
    }
  }
 else {
    if (audioGroup == null)     audioGroup=new AudioGroup();
    mAudioStream.join(audioGroup);
    if (mMuted) {
      audioGroup.setMode(AudioGroup.MODE_MUTED);
    }
 else {
      audioGroup.setMode(AudioGroup.MODE_NORMAL);
    }
  }
}
