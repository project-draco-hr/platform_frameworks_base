{
  Object listener=removeListener(message.arg2);
switch (message.what) {
case AsyncChannel.CMD_CHANNEL_DISCONNECTED:
    if (mChannelListener != null) {
      mChannelListener.onChannelDisconnected();
      mChannelListener=null;
    }
  break;
case WifiManager.CONNECT_NETWORK_FAILED:
case WifiManager.FORGET_NETWORK_FAILED:
case WifiManager.SAVE_NETWORK_FAILED:
case WifiManager.CANCEL_WPS_FAILED:
case WifiManager.DISABLE_NETWORK_FAILED:
if (listener != null) {
  ((ActionListener)listener).onFailure(message.arg1);
}
break;
case WifiManager.CONNECT_NETWORK_SUCCEEDED:
case WifiManager.FORGET_NETWORK_SUCCEEDED:
case WifiManager.SAVE_NETWORK_SUCCEEDED:
case WifiManager.CANCEL_WPS_SUCCEDED:
case WifiManager.DISABLE_NETWORK_SUCCEEDED:
if (listener != null) {
((ActionListener)listener).onSuccess();
}
break;
case WifiManager.START_WPS_SUCCEEDED:
if (listener != null) {
WpsResult result=(WpsResult)message.obj;
((WpsListener)listener).onStartSuccess(result.pin);
synchronized (mListenerMapLock) {
mListenerMap.put(message.arg2,listener);
}
}
break;
case WifiManager.WPS_COMPLETED:
if (listener != null) {
((WpsListener)listener).onCompletion();
}
break;
case WifiManager.WPS_FAILED:
if (listener != null) {
((WpsListener)listener).onFailure(message.arg1);
}
break;
default :
break;
}
}
