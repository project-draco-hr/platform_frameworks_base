{
  mContext=context;
  mVersionName=queryVersionName(context);
  Collection<Bitmap> bitmaps=new HashSet<Bitmap>(300);
  int totalPixelCount=0;
  final Resources resources=context.getResources();
  final LongSparseArray<Drawable.ConstantState> drawables=resources.getPreloadedDrawables();
  final int count=drawables.size();
  for (int i=0; i < count; i++) {
    try {
      totalPixelCount+=drawables.valueAt(i).addAtlasableBitmaps(bitmaps);
    }
 catch (    Throwable t) {
      Log.e("AssetAtlas","Failed to fetch preloaded drawable state",t);
      throw t;
    }
  }
  ArrayList<Bitmap> sortedBitmaps=new ArrayList<Bitmap>(bitmaps);
  Collections.sort(sortedBitmaps,new Comparator<Bitmap>(){
    @Override public int compare(    Bitmap b1,    Bitmap b2){
      if (b1.getWidth() == b2.getWidth()) {
        return b2.getHeight() - b1.getHeight();
      }
      return b2.getWidth() - b1.getWidth();
    }
  }
);
  new Thread(new Renderer(sortedBitmaps,totalPixelCount)).start();
}
