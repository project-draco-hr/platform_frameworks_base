{
  if (!KeyProperties.KEY_ALGORITHM_EC.equalsIgnoreCase(key.getAlgorithm())) {
    throw new InvalidKeyException("Unsupported key algorithm: " + key.getAlgorithm() + ". Only"+ KeyProperties.KEY_ALGORITHM_EC+ " supported");
  }
  KeyCharacteristics keyCharacteristics=new KeyCharacteristics();
  int errorCode=getKeyStore().getKeyCharacteristics(key.getAlias(),null,null,keyCharacteristics);
  if (errorCode != KeyStore.NO_ERROR) {
    throw getKeyStore().getInvalidKeyException(key.getAlias(),errorCode);
  }
  long keySizeBits=keyCharacteristics.getUnsignedInt(KeymasterDefs.KM_TAG_KEY_SIZE,-1);
  if (keySizeBits == -1) {
    throw new InvalidKeyException("Size of key not known");
  }
 else   if (keySizeBits > Integer.MAX_VALUE) {
    throw new InvalidKeyException("Key too large: " + keySizeBits + " bits");
  }
  mGroupSizeBits=(int)keySizeBits;
  super.initKey(key);
}
