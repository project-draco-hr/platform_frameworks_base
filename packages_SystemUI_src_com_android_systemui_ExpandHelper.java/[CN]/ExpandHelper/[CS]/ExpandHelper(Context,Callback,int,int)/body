{
  mSmallSize=small;
  mMaximumStretch=mSmallSize * STRETCH_INTERVAL;
  mLargeSize=large;
  mContext=context;
  mCallback=callback;
  mScaler=new ViewScaler();
  mGravity=Gravity.TOP;
  mScaleAnimation=ObjectAnimator.ofFloat(mScaler,"height",0f);
  mScaleAnimation.setDuration(EXPAND_DURATION);
  mPopLimit=mContext.getResources().getDimension(R.dimen.blinds_pop_threshold);
  mPopDuration=mContext.getResources().getInteger(R.integer.blinds_pop_duration_ms);
  mPullGestureMinXSpan=mContext.getResources().getDimension(R.dimen.pull_span_min);
  AnimatorListenerAdapter glowVisibilityController=new AnimatorListenerAdapter(){
    @Override public void onAnimationStart(    Animator animation){
      View target=(View)((ObjectAnimator)animation).getTarget();
      if (target.getAlpha() <= 0.0f) {
        target.setVisibility(View.VISIBLE);
      }
    }
    @Override public void onAnimationEnd(    Animator animation){
      View target=(View)((ObjectAnimator)animation).getTarget();
      if (target.getAlpha() <= 0.0f) {
        target.setVisibility(View.INVISIBLE);
      }
    }
  }
;
  mGlowTopAnimation=ObjectAnimator.ofFloat(null,"alpha",0f);
  mGlowTopAnimation.addListener(glowVisibilityController);
  mGlowBottomAnimation=ObjectAnimator.ofFloat(null,"alpha",0f);
  mGlowBottomAnimation.addListener(glowVisibilityController);
  mGlowAnimationSet=new AnimatorSet();
  mGlowAnimationSet.play(mGlowTopAnimation).with(mGlowBottomAnimation);
  mGlowAnimationSet.setDuration(GLOW_DURATION);
  final ViewConfiguration configuration=ViewConfiguration.get(mContext);
  mTouchSlop=configuration.getScaledTouchSlop();
  mSGD=new ScaleGestureDetector(context,new ScaleGestureDetector.SimpleOnScaleGestureListener(){
    @Override public boolean onScaleBegin(    ScaleGestureDetector detector){
      if (DEBUG_SCALE)       Slog.v(TAG,"onscalebegin()");
      float focusX=detector.getFocusX();
      float focusY=detector.getFocusY();
      mInitialTouchFocusY=focusY;
      mInitialTouchSpan=Math.abs(detector.getCurrentSpan());
      if (DEBUG_SCALE)       Slog.d(TAG,"got mInitialTouchSpan: (" + mInitialTouchSpan + ")");
      final View underFocus=findView(focusX,focusY);
      if (underFocus != null) {
        startExpanding(underFocus,STRETCH);
      }
      return mExpanding;
    }
    @Override public boolean onScale(    ScaleGestureDetector detector){
      if (DEBUG_SCALE)       Slog.v(TAG,"onscale() on " + mCurrView);
      updateExpansion();
      return true;
    }
    @Override public void onScaleEnd(    ScaleGestureDetector detector){
      if (DEBUG_SCALE)       Slog.v(TAG,"onscaleend()");
      if (DEBUG_SCALE)       Slog.d(TAG,"scale end");
      finishExpanding(false);
      clearView();
    }
  }
);
}
