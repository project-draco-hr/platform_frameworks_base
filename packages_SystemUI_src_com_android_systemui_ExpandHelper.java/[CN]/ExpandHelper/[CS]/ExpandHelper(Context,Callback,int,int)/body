{
  mSmallSize=small;
  mMaximumStretch=mSmallSize * STRETCH_INTERVAL;
  mLargeSize=large;
  mContext=context;
  mCallback=callback;
  mScaler=new ViewScaler();
  mScaleAnimation=ObjectAnimator.ofFloat(mScaler,"height",0f);
  mScaleAnimation.setDuration(EXPAND_DURATION);
  mGlowTopAnimation=ObjectAnimator.ofFloat(null,"alpha",0f);
  mGlowBottomAnimation=ObjectAnimator.ofFloat(null,"alpha",0f);
  mGlowAnimationSet=new AnimatorSet();
  mGlowAnimationSet.play(mGlowTopAnimation).with(mGlowBottomAnimation);
  mGlowAnimationSet.setDuration(GLOW_DURATION);
  mDetector=new ScaleGestureDetector(context,new ScaleGestureDetector.SimpleOnScaleGestureListener(){
    @Override public boolean onScaleBegin(    ScaleGestureDetector detector){
      if (DEBUG)       Log.v(TAG,"onscalebegin()");
      View v=mCallback.getChildAtPosition(detector.getFocusX(),detector.getFocusY());
      mInitialTouchFocusY=detector.getFocusY();
      mInitialTouchSpan=Math.abs(detector.getCurrentSpan());
      if (DEBUG)       Log.d(TAG,"got mInitialTouchSpan: (" + mInitialTouchSpan + ")");
      mStretching=initScale(v);
      return mStretching;
    }
    @Override public boolean onScale(    ScaleGestureDetector detector){
      if (DEBUG)       Log.v(TAG,"onscale() on " + mCurrView);
      float span=Math.abs(detector.getCurrentSpan()) - mInitialTouchSpan;
      span*=USE_SPAN ? 1f : 0f;
      float drag=detector.getFocusY() - mInitialTouchFocusY;
      drag*=USE_DRAG ? 1f : 0f;
      float pull=Math.abs(drag) + Math.abs(span) + 1f;
      float hand=drag * Math.abs(drag) / pull + span * Math.abs(span) / pull;
      if (DEBUG)       Log.d(TAG,"current span handle is: " + hand);
      hand=hand + mOldHeight;
      float target=hand;
      if (DEBUG)       Log.d(TAG,"target is: " + target);
      hand=hand < mSmallSize ? mSmallSize : (hand > mLargeSize ? mLargeSize : hand);
      hand=hand > mNaturalHeight ? mNaturalHeight : hand;
      if (DEBUG)       Log.d(TAG,"scale continues: hand =" + hand);
      mScaler.setHeight(hand);
      float stretch=(float)Math.abs((target - hand) / mMaximumStretch);
      float strength=1f / (1f + (float)Math.pow(Math.E,-1 * ((8f * stretch) - 5f)));
      if (DEBUG)       Log.d(TAG,"stretch: " + stretch + " strength: "+ strength);
      setGlow(GLOW_BASE + strength * (1f - GLOW_BASE));
      return true;
    }
    @Override public void onScaleEnd(    ScaleGestureDetector detector){
      if (DEBUG)       Log.v(TAG,"onscaleend()");
      if (DEBUG)       Log.d(TAG,"scale end");
      finishScale(false);
    }
  }
);
}
