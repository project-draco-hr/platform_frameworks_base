{
  mSmallSize=small;
  mMaximumStretch=mSmallSize * STRETCH_INTERVAL;
  mLargeSize=large;
  mContext=context;
  mCallback=callback;
  mScaler=new ViewScaler();
  mGravity=Gravity.TOP;
  mScaleAnimation=ObjectAnimator.ofFloat(mScaler,"height",0f);
  mScaleAnimation.setDuration(EXPAND_DURATION);
  mPopLimit=mContext.getResources().getDimension(R.dimen.blinds_pop_threshold);
  mPopDuration=mContext.getResources().getInteger(R.integer.blinds_pop_duration_ms);
  mPullGestureMinXSpan=mContext.getResources().getDimension(R.dimen.pull_span_min);
  AnimatorListenerAdapter glowVisibilityController=new AnimatorListenerAdapter(){
    @Override public void onAnimationStart(    Animator animation){
      View target=(View)((ObjectAnimator)animation).getTarget();
      if (target.getAlpha() <= 0.0f) {
        target.setVisibility(View.VISIBLE);
      }
    }
    @Override public void onAnimationEnd(    Animator animation){
      View target=(View)((ObjectAnimator)animation).getTarget();
      if (target.getAlpha() <= 0.0f) {
        target.setVisibility(View.INVISIBLE);
      }
    }
  }
;
  final ViewConfiguration configuration=ViewConfiguration.get(mContext);
  mTouchSlop=configuration.getScaledTouchSlop();
  mSGD=new ScaleGestureDetector(context,mScaleGestureListener);
}
