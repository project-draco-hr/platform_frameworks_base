{
  if (!isEnabled()) {
    return false;
  }
  trackVelocity(ev);
  final int action=ev.getAction();
  if (DEBUG_SCALE)   Log.d(TAG,"intercept: act=" + MotionEvent.actionToString(action) + " expanding="+ mExpanding+ (0 != (mExpansionStyle & BLINDS) ? " (blinds)" : "")+ (0 != (mExpansionStyle & PULL) ? " (pull)" : "")+ (0 != (mExpansionStyle & STRETCH) ? " (stretch)" : ""));
  mSGD.onTouchEvent(ev);
  final int x=(int)mSGD.getFocusX();
  final int y=(int)mSGD.getFocusY();
  mInitialTouchFocusY=y;
  mInitialTouchSpan=mSGD.getCurrentSpan();
  mLastFocusY=mInitialTouchFocusY;
  mLastSpanY=mInitialTouchSpan;
  if (DEBUG_SCALE)   Log.d(TAG,"set initial span: " + mInitialTouchSpan);
  if (mExpanding) {
    mLastMotionY=ev.getRawY();
    maybeRecycleVelocityTracker(ev);
    return true;
  }
 else {
    if ((action == MotionEvent.ACTION_MOVE) && 0 != (mExpansionStyle & BLINDS)) {
      return true;
    }
switch (action & MotionEvent.ACTION_MASK) {
case MotionEvent.ACTION_MOVE:
{
        final float xspan=mSGD.getCurrentSpanX();
        if (xspan > mPullGestureMinXSpan && xspan > mSGD.getCurrentSpanY() && !mExpanding) {
          if (DEBUG_SCALE)           Log.v(TAG,"got pull gesture (xspan=" + xspan + "px)");
          startExpanding(mResizedView,PULL);
          mWatchingForPull=false;
        }
        if (mWatchingForPull) {
          final float yDiff=ev.getRawY() - mInitialTouchY;
          if (yDiff > mTouchSlop) {
            if (DEBUG)             Log.v(TAG,"got venetian gesture (dy=" + yDiff + "px)");
            mWatchingForPull=false;
            if (mResizedView != null && !isFullyExpanded(mResizedView)) {
              if (startExpanding(mResizedView,BLINDS)) {
                mLastMotionY=ev.getRawY();
                mInitialTouchY=ev.getRawY();
                mHasPopped=false;
              }
            }
          }
        }
        break;
      }
case MotionEvent.ACTION_DOWN:
    mWatchingForPull=mScrollAdapter != null && isInside(mScrollAdapter.getHostView(),x,y) && mScrollAdapter.isScrolledToTop();
  mResizedView=findView(x,y);
mInitialTouchY=ev.getY();
break;
case MotionEvent.ACTION_CANCEL:
case MotionEvent.ACTION_UP:
if (DEBUG) Log.d(TAG,"up/cancel");
finishExpanding(false,getCurrentVelocity());
clearView();
break;
}
mLastMotionY=ev.getRawY();
maybeRecycleVelocityTracker(ev);
return mExpanding;
}
}
