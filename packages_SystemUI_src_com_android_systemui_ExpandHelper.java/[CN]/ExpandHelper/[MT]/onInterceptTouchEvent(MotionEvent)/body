{
  final int action=ev.getAction();
  if (DEBUG_SCALE)   Log.d(TAG,"intercept: act=" + MotionEvent.actionToString(action) + " expanding="+ mExpanding+ (0 != (mExpansionStyle & BLINDS) ? " (blinds)" : "")+ (0 != (mExpansionStyle & PULL) ? " (pull)" : "")+ (0 != (mExpansionStyle & STRETCH) ? " (stretch)" : ""));
  mSGD.onTouchEvent(ev);
  final int x=(int)mSGD.getFocusX();
  final int y=(int)mSGD.getFocusY();
  mInitialTouchFocusY=y;
  mInitialTouchSpan=mSGD.getCurrentSpan();
  mLastFocusY=mInitialTouchFocusY;
  mLastSpanY=mInitialTouchSpan;
  if (DEBUG_SCALE)   Log.d(TAG,"set initial span: " + mInitialTouchSpan);
  if (mExpanding) {
    return true;
  }
 else {
    if ((action == MotionEvent.ACTION_MOVE) && 0 != (mExpansionStyle & BLINDS)) {
      return true;
    }
    final float xspan=mSGD.getCurrentSpanX();
    if ((action == MotionEvent.ACTION_MOVE && xspan > mPullGestureMinXSpan && xspan > mSGD.getCurrentSpanY())) {
      if (DEBUG_SCALE)       Log.v(TAG,"got pull gesture (xspan=" + xspan + "px)");
      final View underFocus=findView(x,y);
      if (underFocus != null) {
        startExpanding(underFocus,PULL);
      }
      return true;
    }
    if (mScrollView != null && mScrollView.getScrollY() > 0) {
      return false;
    }
switch (action & MotionEvent.ACTION_MASK) {
case MotionEvent.ACTION_MOVE:
{
        if (mWatchingForPull) {
          final int yDiff=y - mLastMotionY;
          if (yDiff > mTouchSlop) {
            if (DEBUG)             Log.v(TAG,"got venetian gesture (dy=" + yDiff + "px)");
            mLastMotionY=y;
            final View underFocus=findView(x,y);
            if (underFocus != null) {
              startExpanding(underFocus,BLINDS);
              mInitialTouchY=mLastMotionY;
              mHasPopped=false;
            }
          }
        }
        break;
      }
case MotionEvent.ACTION_DOWN:
    mWatchingForPull=isInside(mScrollView,x,y);
  mLastMotionY=y;
break;
case MotionEvent.ACTION_CANCEL:
case MotionEvent.ACTION_UP:
if (DEBUG) Log.d(TAG,"up/cancel");
finishExpanding(false);
clearView();
break;
}
return mExpanding;
}
}
