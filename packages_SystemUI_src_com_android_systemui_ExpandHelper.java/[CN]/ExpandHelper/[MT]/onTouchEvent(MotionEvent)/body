{
  final int action=ev.getAction();
  if (DEBUG_SCALE)   Slog.d(TAG,"touch: act=" + MotionEvent.actionToString(action) + " expanding="+ mExpanding+ (0 != (mExpansionStyle & BLINDS) ? " (blinds)" : "")+ (0 != (mExpansionStyle & PULL) ? " (pull)" : "")+ (0 != (mExpansionStyle & STRETCH) ? " (stretch)" : ""));
  mSGD.onTouchEvent(ev);
switch (action) {
case MotionEvent.ACTION_MOVE:
{
      if (0 != (mExpansionStyle & BLINDS)) {
        final float rawHeight=ev.getY() - mInitialTouchY + mOldHeight;
        final float newHeight=clamp(rawHeight);
        final boolean wasClosed=(mOldHeight == mSmallSize);
        boolean isFinished=false;
        if (rawHeight > mNaturalHeight) {
          isFinished=true;
        }
        if (rawHeight < mSmallSize) {
          isFinished=true;
        }
        final float pull=Math.abs(ev.getY() - mInitialTouchY);
        if (mHasPopped || pull > mPopLimit) {
          if (!mHasPopped) {
            vibrate(mPopDuration);
            mHasPopped=true;
          }
        }
        if (mHasPopped) {
          mScaler.setHeight(newHeight);
          setGlow(GLOW_BASE);
        }
 else {
          setGlow(calculateGlow(4f * pull,0f));
        }
        final int x=(int)mSGD.getFocusX();
        final int y=(int)mSGD.getFocusY();
        View underFocus=findView(x,y);
        if (isFinished && underFocus != null && underFocus != mCurrView) {
          finishExpanding(false);
          startExpanding(underFocus,BLINDS);
          mInitialTouchY=y;
          mHasPopped=false;
        }
        return true;
      }
      if (mExpanding) {
        updateExpansion();
        return true;
      }
      break;
    }
case MotionEvent.ACTION_UP:
case MotionEvent.ACTION_CANCEL:
  if (DEBUG)   Slog.d(TAG,"up/cancel");
finishExpanding(false);
clearView();
break;
}
return true;
}
