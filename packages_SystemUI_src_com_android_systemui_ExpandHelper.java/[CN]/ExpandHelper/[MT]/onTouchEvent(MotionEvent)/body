{
  final int action=ev.getAction();
  if (DEBUG_SCALE)   Slog.d(TAG,"touch: act=" + (action) + " stretching="+ mStretching+ " onefinger="+ mPullingWithOneFinger);
  if (mStretching) {
    mDetector.onTouchEvent(ev);
  }
switch (action) {
case MotionEvent.ACTION_MOVE:
{
      if (mPullingWithOneFinger) {
        float target=ev.getY() - mInitialTouchY + mOldHeight;
        float newHeight=clamp(target);
        if (mHasPopped || target > mPopLimit) {
          if (!mHasPopped) {
            vibrate(mPopDuration);
            mHasPopped=true;
          }
          mScaler.setHeight(newHeight);
          if (target > mNaturalHeight) {
            View previous=mCallback.getPreviousChild(mCurrView);
            if (previous != null) {
              setGlow(0f);
              pushView(previous);
              initScale(previous);
              mInitialTouchY=ev.getY();
              target=mOldHeight;
              newHeight=clamp(target);
              mHasPopped=false;
            }
 else {
              setGlow(calculateGlow(target,newHeight));
            }
          }
 else           if (target < mSmallSize && !popStack.empty()) {
            setGlow(0f);
            initScale(popView());
            mInitialTouchY=ev.getY();
            setGlow(GLOW_BASE);
          }
 else {
            setGlow(calculateGlow(target,newHeight));
          }
        }
 else {
          if (target < mSmallSize && !popStack.empty()) {
            setGlow(0f);
            initScale(popView());
            mInitialTouchY=ev.getY();
            setGlow(GLOW_BASE);
          }
 else {
            setGlow(calculateGlow(4f * target,mSmallSize));
          }
        }
        return true;
      }
      break;
    }
case MotionEvent.ACTION_UP:
case MotionEvent.ACTION_CANCEL:
  if (DEBUG)   Slog.d(TAG,"cancel");
mStretching=false;
if (mPullingWithOneFinger) {
finishScale(false);
mPullingWithOneFinger=false;
}
clearView();
break;
}
return true;
}
