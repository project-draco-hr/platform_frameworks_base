{
  if (!ted.mReprocess) {
    if (ted.mAction == MotionEvent.ACTION_DOWN && mPreventDefault == PREVENT_DEFAULT_MAYBE_YES) {
      mPreventDefault=ted.mNativeResult ? PREVENT_DEFAULT_YES : PREVENT_DEFAULT_NO_FROM_TOUCH_DOWN;
    }
 else     if (ted.mAction == MotionEvent.ACTION_MOVE && mPreventDefault == PREVENT_DEFAULT_NO_FROM_TOUCH_DOWN) {
      mPreventDefault=ted.mNativeResult ? PREVENT_DEFAULT_YES : PREVENT_DEFAULT_NO;
    }
    if (mPreventDefault == PREVENT_DEFAULT_YES) {
      mTouchHighlightRegion.setEmpty();
    }
  }
 else {
    if (ted.mPoints.length > 1) {
      if (!ted.mNativeResult && mPreventDefault != PREVENT_DEFAULT_YES) {
        mPreventDefault=PREVENT_DEFAULT_NO;
        handleMultiTouchInWebView(ted.mMotionEvent);
      }
 else {
        mPreventDefault=PREVENT_DEFAULT_YES;
      }
      return;
    }
    if (!ted.mNativeResult) {
switch (ted.mAction) {
case MotionEvent.ACTION_DOWN:
        mLastDeferTouchX=contentToViewX(ted.mPoints[0].x) - mScrollX;
      mLastDeferTouchY=contentToViewY(ted.mPoints[0].y) - mScrollY;
    mDeferTouchMode=TOUCH_INIT_MODE;
  break;
case MotionEvent.ACTION_MOVE:
{
  int x=contentToViewX(ted.mPoints[0].x) - mScrollX;
  int y=contentToViewY(ted.mPoints[0].y) - mScrollY;
  if (mDeferTouchMode != TOUCH_DRAG_MODE) {
    mDeferTouchMode=TOUCH_DRAG_MODE;
    mLastDeferTouchX=x;
    mLastDeferTouchY=y;
    startScrollingLayer(x,y);
    startDrag();
  }
  int deltaX=pinLocX((int)(mScrollX + mLastDeferTouchX - x)) - mScrollX;
  int deltaY=pinLocY((int)(mScrollY + mLastDeferTouchY - y)) - mScrollY;
  doDrag(deltaX,deltaY);
  if (deltaX != 0)   mLastDeferTouchX=x;
  if (deltaY != 0)   mLastDeferTouchY=y;
  break;
}
case MotionEvent.ACTION_UP:
case MotionEvent.ACTION_CANCEL:
if (mDeferTouchMode == TOUCH_DRAG_MODE) {
mScroller.springBack(mScrollX,mScrollY,0,computeMaxScrollX(),0,computeMaxScrollY());
invalidate();
WebViewCore.resumePriority();
WebViewCore.resumeUpdatePicture(mWebViewCore);
}
mDeferTouchMode=TOUCH_DONE_MODE;
break;
case WebViewCore.ACTION_DOUBLETAP:
mLastTouchX=contentToViewX(ted.mPoints[0].x) - mScrollX;
mLastTouchY=contentToViewY(ted.mPoints[0].y) - mScrollY;
mZoomManager.handleDoubleTap(mLastTouchX,mLastTouchY);
mDeferTouchMode=TOUCH_DONE_MODE;
break;
case WebViewCore.ACTION_LONGPRESS:
HitTestResult hitTest=getHitTestResult();
if (hitTest != null && hitTest.mType != HitTestResult.UNKNOWN_TYPE) {
performLongClick();
}
mDeferTouchMode=TOUCH_DONE_MODE;
break;
}
}
}
}
