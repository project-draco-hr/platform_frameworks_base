{
  if (mTranslate == null) {
    Rect bounds=mPreviousRegion.getBounds();
    Point from=new Point(bounds.centerX(),bounds.centerY());
    mNewRegion.getBounds(bounds);
    Point to=new Point(bounds.centerX(),bounds.centerY());
    mTranslate=new Point(from.x - to.x,from.y - to.y);
  }
  int alpha=(int)(mProgress * mMaxAlpha);
  RegionIterator iter=new RegionIterator(mPreviousRegion);
  Rect r=new Rect();
  mPaint.setAlpha(mMaxAlpha - alpha);
  float tx=mTranslate.x * mProgress;
  float ty=mTranslate.y * mProgress;
  int save=canvas.save(Canvas.MATRIX_SAVE_FLAG);
  canvas.translate(-tx,-ty);
  while (iter.next(r)) {
    canvas.drawRect(r,mPaint);
  }
  canvas.restoreToCount(save);
  iter=new RegionIterator(mNewRegion);
  r=new Rect();
  mPaint.setAlpha(alpha);
  save=canvas.save(Canvas.MATRIX_SAVE_FLAG);
  tx=mTranslate.x - tx;
  ty=mTranslate.y - ty;
  canvas.translate(tx,ty);
  while (iter.next(r)) {
    canvas.drawRect(r,mPaint);
  }
  canvas.restoreToCount(save);
}
