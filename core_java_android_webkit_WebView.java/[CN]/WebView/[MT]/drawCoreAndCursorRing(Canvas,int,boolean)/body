{
  if (mDrawHistory) {
    canvas.scale(mZoomManager.getScale(),mZoomManager.getScale());
    canvas.drawPicture(mHistoryPicture);
    return;
  }
  if (mNativeClass == 0)   return;
  boolean animateZoom=mZoomManager.isFixedLengthAnimationInProgress();
  boolean animateScroll=((!mScroller.isFinished() || mVelocityTracker != null) && (mTouchMode != TOUCH_DRAG_MODE || mHeldMotionless != MOTIONLESS_TRUE)) || mDeferTouchMode == TOUCH_DRAG_MODE;
  if (mTouchMode == TOUCH_DRAG_MODE) {
    if (mHeldMotionless == MOTIONLESS_PENDING) {
      mPrivateHandler.removeMessages(DRAG_HELD_MOTIONLESS);
      mPrivateHandler.removeMessages(AWAKEN_SCROLL_BARS);
      mHeldMotionless=MOTIONLESS_FALSE;
    }
    if (mHeldMotionless == MOTIONLESS_FALSE) {
      mPrivateHandler.sendMessageDelayed(mPrivateHandler.obtainMessage(DRAG_HELD_MOTIONLESS),MOTIONLESS_TIME);
      mPrivateHandler.sendMessageDelayed(mPrivateHandler.obtainMessage(AWAKEN_SCROLL_BARS),ViewConfiguration.getScrollDefaultDelay());
      mHeldMotionless=MOTIONLESS_PENDING;
    }
  }
  int saveCount=canvas.save();
  if (animateZoom) {
    mZoomManager.animateZoom(canvas);
  }
 else   if (!canvas.isHardwareAccelerated()) {
    canvas.scale(mZoomManager.getScale(),mZoomManager.getScale());
  }
  boolean UIAnimationsRunning=false;
  if (mNativeClass != 0 && nativeEvaluateLayersAnimations(mNativeClass)) {
    UIAnimationsRunning=true;
    if (!canvas.isHardwareAccelerated())     invalidate();
  }
  int extras=DRAW_EXTRAS_NONE;
  if (mFindIsUp) {
    extras=DRAW_EXTRAS_FIND;
  }
 else   if (mSelectingText && (!USE_JAVA_TEXT_SELECTION || DEBUG_TEXT_HANDLES)) {
    extras=DRAW_EXTRAS_SELECTION;
    nativeSetSelectionPointer(mNativeClass,mDrawSelectionPointer,mZoomManager.getInvScale(),mSelectX,mSelectY - getTitleHeight());
  }
 else   if (drawCursorRing) {
    extras=DRAW_EXTRAS_CURSOR_RING;
  }
  if (DebugFlags.WEB_VIEW) {
    Log.v(LOGTAG,"mFindIsUp=" + mFindIsUp + " mSelectingText="+ mSelectingText+ " nativePageShouldHandleShiftAndArrows()="+ nativePageShouldHandleShiftAndArrows()+ " animateZoom="+ animateZoom+ " extras="+ extras);
  }
  if (canvas.isHardwareAccelerated()) {
    int functor=nativeGetDrawGLFunction(mNativeClass,mGLViewportEmpty ? null : mGLRectViewport,mGLViewportEmpty ? null : mViewRectViewport,getScale(),extras);
    ((HardwareCanvas)canvas).callDrawGLFunction(functor);
    if (mHardwareAccelSkia != getSettings().getHardwareAccelSkiaEnabled()) {
      mHardwareAccelSkia=getSettings().getHardwareAccelSkiaEnabled();
      nativeUseHardwareAccelSkia(mHardwareAccelSkia);
    }
  }
 else {
    DrawFilter df=null;
    if (mZoomManager.isZoomAnimating() || UIAnimationsRunning) {
      df=mZoomFilter;
    }
 else     if (animateScroll) {
      df=mScrollFilter;
    }
    canvas.setDrawFilter(df);
    int content=nativeDraw(canvas,color,extras,false);
    canvas.setDrawFilter(null);
    if (!mBlockWebkitViewMessages && content != 0) {
      mWebViewCore.sendMessage(EventHub.SPLIT_PICTURE_SET,content,0);
    }
  }
  canvas.restoreToCount(saveCount);
  if (mSelectingText && USE_JAVA_TEXT_SELECTION) {
    drawTextSelectionHandles(canvas);
  }
  if (extras == DRAW_EXTRAS_CURSOR_RING) {
    if (mTouchMode == TOUCH_SHORTPRESS_START_MODE) {
      mTouchMode=TOUCH_SHORTPRESS_MODE;
    }
  }
  if (mFocusSizeChanged) {
    mFocusSizeChanged=false;
    if (!canvas.isHardwareAccelerated() && !animateZoom && inEditingMode()) {
      didUpdateWebTextViewDimensions(ANYWHERE);
    }
  }
}
