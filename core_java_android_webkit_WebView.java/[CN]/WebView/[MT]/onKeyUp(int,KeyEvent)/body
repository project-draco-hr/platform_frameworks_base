{
  if (DebugFlags.WEB_VIEW) {
    Log.v(LOGTAG,"keyUp at " + System.currentTimeMillis() + ", "+ event+ ", unicode="+ event.getUnicodeChar());
  }
  if (mNativeClass == 0) {
    return false;
  }
  if (keyCode == KeyEvent.KEYCODE_CALL && nativeHasCursorNode()) {
    String text=nativeCursorText();
    if (!nativeCursorIsTextInput() && text != null && text.startsWith(SCHEME_TEL)) {
      Intent intent=new Intent(Intent.ACTION_DIAL,Uri.parse(text));
      getContext().startActivity(intent);
      return true;
    }
  }
  if (event.isSystem() || mCallbackProxy.uiOverrideKeyEvent(event)) {
    return false;
  }
  if (mTouchMode >= FIRST_SCROLL_ZOOM && mTouchMode <= LAST_SCROLL_ZOOM) {
    if (KeyEvent.KEYCODE_DPAD_CENTER == keyCode && mTouchMode != SCROLL_ZOOM_ANIMATION_IN) {
      setZoomScrollIn();
      mTouchMode=SCROLL_ZOOM_ANIMATION_IN;
      invalidate();
      return true;
    }
    return false;
  }
  if (keyCode == KeyEvent.KEYCODE_SHIFT_LEFT || keyCode == KeyEvent.KEYCODE_SHIFT_RIGHT) {
    if (commitCopy()) {
      return true;
    }
  }
  if (keyCode >= KeyEvent.KEYCODE_DPAD_UP && keyCode <= KeyEvent.KEYCODE_DPAD_RIGHT) {
    return false;
  }
  if (keyCode == KeyEvent.KEYCODE_DPAD_CENTER) {
    mPrivateHandler.removeMessages(LONG_PRESS_CENTER);
    mGotCenterDown=false;
    if (mShiftIsPressed) {
      return false;
    }
    if (getSettings().supportZoom() && mTouchMode == TOUCH_DOUBLECLICK_MODE) {
      zoomScrollOut();
    }
 else {
      mPrivateHandler.sendMessageDelayed(mPrivateHandler.obtainMessage(SWITCH_TO_CLICK),TAP_TIMEOUT);
      if (DebugFlags.WEB_VIEW) {
        Log.v(LOGTAG,"TOUCH_DOUBLECLICK_MODE");
      }
      mTouchMode=TOUCH_DOUBLECLICK_MODE;
    }
    return true;
  }
  if (nativeCursorWantsKeyEvents() || true) {
    mWebViewCore.sendMessage(EventHub.KEY_UP,event);
    return true;
  }
  return false;
}
