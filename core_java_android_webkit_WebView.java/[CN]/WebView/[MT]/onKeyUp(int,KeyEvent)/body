{
  if (DebugFlags.WEB_VIEW) {
    Log.v(LOGTAG,"keyUp at " + System.currentTimeMillis() + ", "+ event+ ", unicode="+ event.getUnicodeChar());
  }
  if (mNativeClass == 0) {
    return false;
  }
  if (keyCode == KeyEvent.KEYCODE_CALL && nativeHasCursorNode()) {
    String text=nativeCursorText();
    if (!nativeCursorIsTextInput() && text != null && text.startsWith(SCHEME_TEL)) {
      Intent intent=new Intent(Intent.ACTION_DIAL,Uri.parse(text));
      getContext().startActivity(intent);
      return true;
    }
  }
  if (event.isSystem() || mCallbackProxy.uiOverrideKeyEvent(event)) {
    return false;
  }
  if (keyCode == KeyEvent.KEYCODE_SHIFT_LEFT || keyCode == KeyEvent.KEYCODE_SHIFT_RIGHT) {
    if (nativeFocusIsPlugin()) {
      mShiftIsPressed=false;
    }
 else     if (copySelection()) {
      selectionDone();
      return true;
    }
  }
  if (keyCode >= KeyEvent.KEYCODE_DPAD_UP && keyCode <= KeyEvent.KEYCODE_DPAD_RIGHT) {
    if (nativeFocusIsPlugin()) {
      letPluginHandleNavKey(keyCode,event.getEventTime(),false);
      return true;
    }
    return false;
  }
  if (keyCode == KeyEvent.KEYCODE_DPAD_CENTER) {
    mPrivateHandler.removeMessages(LONG_PRESS_CENTER);
    mGotCenterDown=false;
    if (mSelectingText) {
      if (mExtendSelection) {
        copySelection();
        selectionDone();
      }
 else {
        mExtendSelection=true;
        nativeSetExtendSelection();
        invalidate();
      }
      return true;
    }
    Rect visibleRect=sendOurVisibleRect();
    if (!nativeCursorIntersects(visibleRect)) {
      return false;
    }
    WebViewCore.CursorData data=cursorData();
    mWebViewCore.sendMessage(EventHub.SET_MOVE_MOUSE,data);
    playSoundEffect(SoundEffectConstants.CLICK);
    if (nativeCursorIsTextInput()) {
      rebuildWebTextView();
      centerKeyPressOnTextField();
      if (inEditingMode()) {
        mWebTextView.setDefaultSelection();
      }
      return true;
    }
    clearTextEntry(true);
    nativeSetFollowedLink(true);
    if (!mCallbackProxy.uiOverrideUrlLoading(nativeCursorText())) {
      mWebViewCore.sendMessage(EventHub.CLICK,data.mFrame,nativeCursorNodePointer());
    }
    return true;
  }
  if (nativeCursorWantsKeyEvents() || true) {
    mWebViewCore.sendMessage(EventHub.KEY_UP,event);
    return true;
  }
  return false;
}
