{
  if (DebugFlags.WEB_VIEW) {
    Log.v(LOGTAG,"keyUp at " + System.currentTimeMillis() + ", "+ event);
  }
  if (mNativeClass == 0) {
    return false;
  }
  if (keyCode == KeyEvent.KEYCODE_CALL && nativeHasCursorNode()) {
    String text=nativeCursorText();
    if (!nativeCursorIsTextInput() && text != null && text.startsWith(SCHEME_TEL)) {
      Intent intent=new Intent(Intent.ACTION_DIAL,Uri.parse(text));
      getContext().startActivity(intent);
      return true;
    }
  }
  if (event.isSystem() || mCallbackProxy.uiOverrideKeyEvent(event)) {
    return false;
  }
  if (mTouchMode >= FIRST_SCROLL_ZOOM && mTouchMode <= LAST_SCROLL_ZOOM) {
    if (KeyEvent.KEYCODE_DPAD_CENTER == keyCode && mTouchMode != SCROLL_ZOOM_ANIMATION_IN) {
      setZoomScrollIn();
      mTouchMode=SCROLL_ZOOM_ANIMATION_IN;
      invalidate();
      return true;
    }
    return false;
  }
  if (keyCode == KeyEvent.KEYCODE_SHIFT_LEFT || keyCode == KeyEvent.KEYCODE_SHIFT_RIGHT) {
    if (commitCopy()) {
      return true;
    }
  }
  if (keyCode >= KeyEvent.KEYCODE_DPAD_UP && keyCode <= KeyEvent.KEYCODE_DPAD_RIGHT) {
    return false;
  }
  if (keyCode == KeyEvent.KEYCODE_DPAD_CENTER || keyCode == KeyEvent.KEYCODE_ENTER) {
    mPrivateHandler.removeMessages(LONG_PRESS_ENTER);
    mGotEnterDown=false;
    if (KeyEvent.KEYCODE_DPAD_CENTER == keyCode) {
      if (mShiftIsPressed) {
        return false;
      }
      if (getSettings().supportZoom()) {
        if (mTouchMode == TOUCH_DOUBLECLICK_MODE) {
          zoomScrollOut();
        }
 else {
          if (DebugFlags.WEB_VIEW) {
            Log.v(LOGTAG,"TOUCH_DOUBLECLICK_MODE");
          }
          mPrivateHandler.sendMessageDelayed(mPrivateHandler.obtainMessage(SWITCH_TO_CLICK),TAP_TIMEOUT);
          mTouchMode=TOUCH_DOUBLECLICK_MODE;
        }
        return true;
      }
    }
    Rect visibleRect=sendOurVisibleRect();
    if (nativeCursorIntersects(visibleRect)) {
      nativeSetFollowedLink(true);
      mWebViewCore.sendMessage(EventHub.SET_MOVE_MOUSE,EventHub.BLOCK_FOCUS_CHANGE_UNTIL_KEY_UP,0,cursorData());
      playSoundEffect(SoundEffectConstants.CLICK);
      return true;
    }
 else     if (nativeHasCursorNode()) {
      return true;
    }
    return false;
  }
  if (nativeFocusNodeWantsKeyEvents() || true) {
    mWebViewCore.sendMessage(EventHub.KEY_UP,event);
    return true;
  }
  return false;
}
