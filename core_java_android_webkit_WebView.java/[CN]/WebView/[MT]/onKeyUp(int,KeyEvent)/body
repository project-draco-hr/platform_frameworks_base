{
  if (keyCode == KeyEvent.KEYCODE_SHIFT_LEFT || keyCode == KeyEvent.KEYCODE_SHIFT_RIGHT) {
    if (mExtendSelection) {
      Region selection=new Region(nativeGetSelection());
      if (selection.isEmpty() == false) {
        Toast.makeText(mContext,com.android.internal.R.string.text_copied,Toast.LENGTH_SHORT).show();
        mWebViewCore.sendMessage(EventHub.GET_SELECTION,selection);
      }
    }
    mShiftIsPressed=false;
    return true;
  }
  if (LOGV_ENABLED) {
    Log.v(LOGTAG,"MT keyUp at" + System.currentTimeMillis() + ", "+ event);
  }
  if (keyCode == KeyEvent.KEYCODE_ALT_LEFT || keyCode == KeyEvent.KEYCODE_ALT_RIGHT) {
    mAltIsPressed=false;
  }
  if (event.isSystem() || mCallbackProxy.uiOverrideKeyEvent(event)) {
    return false;
  }
  if (mTouchMode >= FIRST_SCROLL_ZOOM && mTouchMode <= LAST_SCROLL_ZOOM) {
    if (KeyEvent.KEYCODE_DPAD_CENTER == keyCode && mTouchMode != SCROLL_ZOOM_ANIMATION_IN) {
      setZoomScrollIn();
      mTouchMode=SCROLL_ZOOM_ANIMATION_IN;
      invalidate();
      return true;
    }
    return false;
  }
  Rect visibleRect=sendOurVisibleRect();
  boolean nodeOnScreen=false;
  boolean isTextField=false;
  boolean isTextArea=false;
  FocusNode node=null;
  if (mNativeClass != 0 && nativeUpdateFocusNode()) {
    node=mFocusNode;
    isTextField=node.mIsTextField;
    isTextArea=node.mIsTextArea;
    nodeOnScreen=Rect.intersects(node.mBounds,visibleRect);
  }
  if (KeyEvent.KEYCODE_DPAD_CENTER == keyCode) {
    if (mShiftIsPressed) {
      return false;
    }
    if (getSettings().supportZoom()) {
      if (mTouchMode == TOUCH_DOUBLECLICK_MODE) {
        zoomScrollOut();
      }
 else {
        if (LOGV_ENABLED)         Log.v(LOGTAG,"TOUCH_DOUBLECLICK_MODE");
        mPrivateHandler.sendMessageDelayed(mPrivateHandler.obtainMessage(SWITCH_TO_ENTER),TAP_TIMEOUT);
        mTouchMode=TOUCH_DOUBLECLICK_MODE;
      }
      return true;
    }
 else {
      keyCode=KeyEvent.KEYCODE_ENTER;
    }
  }
  if (KeyEvent.KEYCODE_ENTER == keyCode) {
    if (LOGV_ENABLED)     Log.v(LOGTAG,"KEYCODE_ENTER == keyCode");
    if (!nodeOnScreen) {
      return false;
    }
    if (node != null && !isTextField && !isTextArea) {
      nativeSetFollowedLink(true);
      mWebViewCore.sendMessage(EventHub.SET_FINAL_FOCUS,EventHub.BLOCK_FOCUS_CHANGE_UNTIL_KEY_UP,0,new WebViewCore.FocusData(mFocusData));
      if (mCallbackProxy.uiOverrideUrlLoading(node.mText)) {
        return true;
      }
      playSoundEffect(SoundEffectConstants.CLICK);
    }
  }
  if (!nodeOnScreen) {
    return false;
  }
  if (LOGV_ENABLED)   Log.v(LOGTAG,"onKeyUp send EventHub.KEY_UP");
  mWebViewCore.sendMessage(EventHub.KEY_UP,keyCode,0,event);
  return true;
}
