{
  float invScale=mZoomScrollInvLimit;
  int elapsed=0;
  if (mTouchMode != SCROLL_ZOOM_OUT) {
    elapsed=(int)Math.min(System.currentTimeMillis() - mZoomScrollStart,SCROLL_ZOOM_DURATION);
    float transitionScale=(mZoomScrollInvLimit - mInvActualScale) * elapsed / SCROLL_ZOOM_DURATION;
    if (mTouchMode == SCROLL_ZOOM_ANIMATION_OUT) {
      invScale=mInvActualScale + transitionScale;
    }
 else {
      invScale=mZoomScrollInvLimit - transitionScale;
    }
  }
  float scale=scrollZoomGridScale(invScale);
  invScale=1.0f / scale;
  int width=getViewWidth();
  int height=getViewHeight();
  float halfScale=scrollZoomMagScale(invScale);
  Rect scrollFrame=scrollZoomFrame(width,height,halfScale);
  if (elapsed == SCROLL_ZOOM_DURATION) {
    if (mTouchMode == SCROLL_ZOOM_ANIMATION_IN) {
      setHorizontalScrollBarEnabled(true);
      setVerticalScrollBarEnabled(true);
      updateTextEntry();
      scrollTo((int)(scrollFrame.centerX() * mActualScale) - (width >> 1),(int)(scrollFrame.centerY() * mActualScale) - (height >> 1));
      mTouchMode=TOUCH_DONE_MODE;
    }
 else {
      mTouchMode=SCROLL_ZOOM_OUT;
    }
  }
  float newX=scrollZoomX(scale);
  float newY=scrollZoomY(scale);
  if (LOGV_ENABLED) {
    Log.v(LOGTAG,"scrollZoomDraw scale=" + scale + " + ("+ newX+ ", "+ newY+ ") mZoomScroll=("+ mZoomScrollX+ ", "+ mZoomScrollY+ ")"+ " invScale="+ invScale+ " scale="+ scale);
  }
  canvas.translate(newX,newY);
  canvas.scale(scale,scale);
  boolean animating=mTouchMode != SCROLL_ZOOM_OUT;
  if (mDrawHistory) {
    int sc=canvas.save(Canvas.CLIP_SAVE_FLAG);
    Rect clip=new Rect(0,0,mHistoryPicture.getWidth(),mHistoryPicture.getHeight());
    canvas.clipRect(clip,Region.Op.DIFFERENCE);
    canvas.drawColor(mBackgroundColor);
    canvas.restoreToCount(sc);
    canvas.drawPicture(mHistoryPicture);
  }
 else {
    mWebViewCore.drawContentPicture(canvas,mBackgroundColor,animating,true);
  }
  if (mTouchMode == TOUCH_DONE_MODE) {
    return;
  }
  Paint paint=new Paint(Paint.ANTI_ALIAS_FLAG);
  paint.setStyle(Paint.Style.STROKE);
  paint.setStrokeWidth(30.0f);
  paint.setARGB(0x50,0,0,0);
  int maxX=mContentWidth - width;
  int maxY=mContentHeight - height;
  if (true) {
    drawMagnifyFrame(canvas,scrollFrame,paint);
  }
 else {
    canvas.drawRect(scrollFrame,paint);
  }
  int sc=canvas.save();
  canvas.clipRect(scrollFrame);
  float halfX=(float)mZoomScrollX / maxX;
  if (mContentWidth * mZoomScrollLimit < width) {
    halfX=zoomFrameScaleX(width,0.5f,halfX);
  }
  float halfY=(float)mZoomScrollY / maxY;
  if (mContentHeight * mZoomScrollLimit < height) {
    halfY=zoomFrameScaleY(height,0.5f,halfY);
  }
  canvas.scale(halfScale,halfScale,mZoomScrollX + width * halfX,mZoomScrollY + height * halfY);
  if (LOGV_ENABLED) {
    Log.v(LOGTAG,"scrollZoomDraw halfScale=" + halfScale + " w/h=("+ width+ ", "+ height+ ") half=("+ halfX+ ", "+ halfY+ ")");
  }
  if (mDrawHistory) {
    canvas.drawPicture(mHistoryPicture);
  }
 else {
    mWebViewCore.drawContentPicture(canvas,mBackgroundColor,animating,false);
  }
  canvas.restoreToCount(sc);
  if (mTouchMode != SCROLL_ZOOM_OUT) {
    invalidate();
  }
}
