{
  if (!hasFocus() && (null == mWebTextView || !mWebTextView.hasFocus())) {
    return;
  }
  boolean alreadyThere=inEditingMode();
  if (0 == mNativeClass || !nativeFocusCandidateIsTextInput()) {
    if (alreadyThere) {
      mWebTextView.remove();
    }
    return;
  }
  if (mWebTextView == null) {
    mWebTextView=new WebTextView(mContext,WebView.this,mAutoFillData.getQueryId());
    mTextGeneration=0;
  }
  mWebTextView.updateTextSize();
  Rect visibleRect=new Rect();
  calcOurContentVisibleRect(visibleRect);
  Rect bounds=nativeFocusCandidateNodeBounds();
  Rect vBox=contentToViewRect(bounds);
  mWebTextView.setRect(vBox.left,vBox.top,vBox.width(),vBox.height());
  if (!Rect.intersects(bounds,visibleRect)) {
    revealSelection();
  }
  String text=nativeFocusCandidateText();
  int nodePointer=nativeFocusCandidatePointer();
  mWebTextView.setNodePointer(nodePointer);
  mWebTextView.setType(nativeFocusCandidateType());
  mWebTextView.setGravityForRtl(nativeFocusCandidateIsRtlText());
  updateWebTextViewPadding();
  if (null == text) {
    if (DebugFlags.WEB_VIEW) {
      Log.v(LOGTAG,"rebuildWebTextView null == text");
    }
    text="";
  }
  mWebTextView.setTextAndKeepSelection(text);
  InputMethodManager imm=InputMethodManager.peekInstance();
  if (imm != null && imm.isActive(mWebTextView)) {
    imm.restartInput(mWebTextView);
  }
  if (isFocused()) {
    mWebTextView.requestFocus();
  }
}
