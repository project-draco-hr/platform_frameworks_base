{
  if ((deltaX | deltaY) != 0) {
    final int oldX=mScrollX;
    final int oldY=mScrollY;
    final int rangeX=computeMaxScrollX();
    final int rangeY=computeMaxScrollY();
    overscrollBy(deltaX,deltaY,oldX,oldY,rangeX,rangeY,mOverscrollDistance,mOverscrollDistance,true);
    if (mEdgeGlowTop != null) {
      if (rangeX > 0) {
        final int pulledToX=oldX + deltaX;
        if (pulledToX < 0) {
          mEdgeGlowLeft.onPull((float)deltaX / getWidth());
        }
 else         if (pulledToX > rangeX) {
          mEdgeGlowRight.onPull((float)deltaX / getWidth());
        }
      }
      if (rangeY > 0 || getOverscrollMode() == OVERSCROLL_ALWAYS) {
        final int pulledToY=oldY + deltaY;
        if (pulledToY < 0) {
          mEdgeGlowTop.onPull((float)deltaY / getHeight());
        }
 else         if (pulledToY > rangeY) {
          mEdgeGlowBottom.onPull((float)deltaY / getHeight());
        }
      }
    }
  }
  if (!getSettings().getBuiltInZoomControls()) {
    boolean showPlusMinus=mMinZoomScale < mMaxZoomScale;
    if (mZoomControls != null && showPlusMinus) {
      if (mZoomControls.getVisibility() == View.VISIBLE) {
        mPrivateHandler.removeCallbacks(mZoomControlRunnable);
      }
 else {
        mZoomControls.show(showPlusMinus,false);
      }
      mPrivateHandler.postDelayed(mZoomControlRunnable,ZOOM_CONTROLS_TIMEOUT);
    }
  }
}
