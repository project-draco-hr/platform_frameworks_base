{
  if (mNativeClass == 0) {
    return false;
  }
  mLastFocusTime=time;
  mLastFocusBounds=nativeGetFocusRingBounds();
  boolean keyHandled=nativeMoveFocus(keyCode,count,noScroll) == false;
  if (LOGV_ENABLED) {
    Log.v(LOGTAG,"navHandledKey mLastFocusBounds=" + mLastFocusBounds + " mLastFocusTime="+ mLastFocusTime+ " handled="+ keyHandled);
  }
  if (keyHandled == false || mHeightCanMeasure == false) {
    return keyHandled;
  }
  Rect contentFocus=nativeGetFocusRingBounds();
  if (contentFocus.isEmpty())   return keyHandled;
  Rect viewFocus=new Rect(contentToView(contentFocus.left),contentToView(contentFocus.top),contentToView(contentFocus.right),contentToView(contentFocus.bottom));
  Rect visRect=new Rect();
  calcOurVisibleRect(visRect);
  Rect outset=new Rect(visRect);
  int maxXScroll=visRect.width() / 2;
  int maxYScroll=visRect.height() / 2;
  outset.inset(-maxXScroll,-maxYScroll);
  if (Rect.intersects(outset,viewFocus) == false) {
    return keyHandled;
  }
  int maxH=Math.min(viewFocus.right - visRect.right,maxXScroll);
  if (maxH > 0) {
    pinScrollBy(maxH,0,true);
  }
 else {
    maxH=Math.max(viewFocus.left - visRect.left,-maxXScroll);
    if (maxH < 0) {
      pinScrollBy(maxH,0,true);
    }
  }
  if (mLastFocusBounds.isEmpty())   return keyHandled;
  if (mLastFocusBounds.equals(contentFocus))   return keyHandled;
  if (LOGV_ENABLED) {
    Log.v(LOGTAG,"navHandledKey contentFocus=" + contentFocus);
  }
  requestRectangleOnScreen(viewFocus);
  mUserScroll=true;
  return keyHandled;
}
