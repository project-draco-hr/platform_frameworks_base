{
  if (Math.abs(x - mLastZoomScrollRawX) < 1.5f && Math.abs(y - mLastZoomScrollRawY) < 1.5f) {
    return;
  }
  mLastZoomScrollRawX=x;
  mLastZoomScrollRawY=y;
  int oldX=mZoomScrollX;
  int oldY=mZoomScrollY;
  int width=getViewWidth();
  int height=getViewHeight();
  int maxZoomX=mContentWidth - width;
  if (maxZoomX > 0) {
    int maxScreenX=width - (int)Math.ceil(width * mZoomScrollLimit) - SCROLL_ZOOM_FINGER_BUFFER;
    if (LOGV_ENABLED) {
      Log.v(LOGTAG,"moveZoomScrollWindow-X" + " maxScreenX=" + maxScreenX + " width="+ width+ " mZoomScrollLimit="+ mZoomScrollLimit+ " x="+ x);
    }
    x+=maxScreenX * mLastScrollX / maxZoomX - mLastTouchX;
    x=Math.max(0,Math.min(maxScreenX,x));
    mZoomScrollX=(int)(x * maxZoomX / maxScreenX);
  }
  int maxZoomY=mContentHeight - height;
  if (maxZoomY > 0) {
    int maxScreenY=height - (int)Math.ceil(height * mZoomScrollLimit) - SCROLL_ZOOM_FINGER_BUFFER;
    if (LOGV_ENABLED) {
      Log.v(LOGTAG,"moveZoomScrollWindow-Y" + " maxScreenY=" + maxScreenY + " height="+ height+ " mZoomScrollLimit="+ mZoomScrollLimit+ " y="+ y);
    }
    y+=maxScreenY * mLastScrollY / maxZoomY - mLastTouchY;
    y=Math.max(0,Math.min(maxScreenY,y));
    mZoomScrollY=(int)(y * maxZoomY / maxScreenY);
  }
  if (oldX != mZoomScrollX || oldY != mZoomScrollY) {
    invalidate();
  }
  if (LOGV_ENABLED) {
    Log.v(LOGTAG,"moveZoomScrollWindow" + " scrollTo=(" + mZoomScrollX + ", "+ mZoomScrollY+ ")"+ " mLastTouch=("+ mLastTouchX+ ", "+ mLastTouchY+ ")"+ " maxZoom=("+ maxZoomX+ ", "+ maxZoomY+ ")"+ " last=("+ mLastScrollX+ ", "+ mLastScrollY+ ")"+ " x="+ x+ " y="+ y);
  }
}
