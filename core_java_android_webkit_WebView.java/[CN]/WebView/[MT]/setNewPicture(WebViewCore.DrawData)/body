{
  if (mNativeClass == 0) {
    if (mDelaySetPicture != null) {
      throw new IllegalStateException("Tried to setNewPicture with a delay picture already set! (memory leak)");
    }
    mDelaySetPicture=draw;
    return;
  }
  WebViewCore.ViewState viewState=draw.mViewState;
  boolean isPictureAfterFirstLayout=viewState != null;
  setBaseLayer(draw.mBaseLayer,draw.mInvalRegion,getSettings().getShowVisualIndicator(),isPictureAfterFirstLayout);
  final Point viewSize=draw.mViewSize;
  if (isPictureAfterFirstLayout) {
    mLastWidthSent=0;
    mZoomManager.onFirstLayout(draw);
    if (!mDrawHistory) {
      mSendScrollEvent=false;
      setContentScrollTo(viewState.mScrollX,viewState.mScrollY);
      mSendScrollEvent=true;
      clearTextEntry();
    }
  }
  final boolean updateLayout=viewSize.x == mLastWidthSent && viewSize.y == mLastHeightSent;
  mSendScrollEvent=false;
  recordNewContentSize(draw.mContentSize.x,draw.mContentSize.y,updateLayout);
  mSendScrollEvent=true;
  if (DebugFlags.WEB_VIEW) {
    Rect b=draw.mInvalRegion.getBounds();
    Log.v(LOGTAG,"NEW_PICTURE_MSG_ID {" + b.left + ","+ b.top+ ","+ b.right+ ","+ b.bottom+ "}");
  }
  invalidateContentRect(draw.mInvalRegion.getBounds());
  if (mPictureListener != null) {
    mPictureListener.onNewPicture(WebView.this,capturePicture());
  }
  mZoomManager.onNewPicture(draw);
  if (draw.mFocusSizeChanged && inEditingMode()) {
    mFocusSizeChanged=true;
  }
  if (isPictureAfterFirstLayout) {
    mViewManager.postReadyToDrawAll();
  }
}
