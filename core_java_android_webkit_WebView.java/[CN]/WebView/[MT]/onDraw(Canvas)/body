{
  if (inFullScreenMode()) {
    return;
  }
  if (mNativeClass == 0) {
    canvas.drawColor(mBackgroundColor);
    return;
  }
  if ((mContentWidth | mContentHeight) == 0 && mHistoryPicture == null) {
    canvas.drawColor(mBackgroundColor);
    return;
  }
  if (canvas.isHardwareAccelerated()) {
    mZoomManager.setHardwareAccelerated();
  }
  int saveCount=canvas.save();
  if (mInOverScrollMode && !getSettings().getUseWebViewBackgroundForOverscrollBackground()) {
    drawOverScrollBackground(canvas);
  }
  if (mTitleBar != null) {
    canvas.translate(0,getTitleHeight());
  }
  boolean drawJavaRings=!mTouchHighlightRegion.isEmpty() && (mTouchMode == TOUCH_INIT_MODE || mTouchMode == TOUCH_SHORTPRESS_START_MODE || mTouchMode == TOUCH_SHORTPRESS_MODE || mTouchMode == TOUCH_DONE_MODE);
  boolean drawNativeRings=!drawJavaRings;
  if (sDisableNavcache) {
    drawNativeRings=!drawJavaRings && !isInTouchMode();
  }
  drawContent(canvas,drawNativeRings);
  canvas.restoreToCount(saveCount);
  if (AUTO_REDRAW_HACK && mAutoRedraw) {
    invalidate();
  }
  mWebViewCore.signalRepaintDone();
  if (mOverScrollGlow != null && mOverScrollGlow.drawEdgeGlows(canvas)) {
    invalidate();
  }
  if (drawJavaRings) {
    long delay=System.currentTimeMillis() - mTouchHighlightRequested;
    if (delay < ViewConfiguration.getTapTimeout()) {
      Rect r=mTouchHighlightRegion.getBounds();
      postInvalidateDelayed(delay,r.left,r.top,r.right,r.bottom);
    }
 else {
      RegionIterator iter=new RegionIterator(mTouchHighlightRegion);
      Rect r=new Rect();
      while (iter.next(r)) {
        canvas.drawRect(r,mTouchHightlightPaint);
      }
    }
  }
  if (DEBUG_TOUCH_HIGHLIGHT) {
    if (getSettings().getNavDump()) {
      if ((mTouchHighlightX | mTouchHighlightY) != 0) {
        if (mTouchCrossHairColor == null) {
          mTouchCrossHairColor=new Paint();
          mTouchCrossHairColor.setColor(Color.RED);
        }
        canvas.drawLine(mTouchHighlightX - mNavSlop,mTouchHighlightY - mNavSlop,mTouchHighlightX + mNavSlop + 1,mTouchHighlightY + mNavSlop + 1,mTouchCrossHairColor);
        canvas.drawLine(mTouchHighlightX + mNavSlop + 1,mTouchHighlightY - mNavSlop,mTouchHighlightX - mNavSlop,mTouchHighlightY + mNavSlop + 1,mTouchCrossHairColor);
      }
    }
  }
}
