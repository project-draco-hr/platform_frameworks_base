{
  if (mWebViewCore.getSettings().getUseWideViewPort() == false) {
    return;
  }
  mZoomCenterX=mLastTouchX;
  mZoomCenterY=mLastTouchY;
  mAnchorX=viewToContentX((int)mZoomCenterX + mScrollX);
  mAnchorY=viewToContentY((int)mZoomCenterY + mScrollY);
  WebSettings settings=getSettings();
  if (settings.getBuiltInZoomControls()) {
    if (mZoomButtonsController.isVisible()) {
      mZoomButtonsController.setVisible(false);
    }
  }
 else {
    if (mZoomControlRunnable != null) {
      mPrivateHandler.removeCallbacks(mZoomControlRunnable);
    }
    if (mZoomControls != null) {
      mZoomControls.hide();
    }
  }
  settings.setDoubleTapToastCount(0);
  ViewManager.ChildView plugin=mViewManager.hitTest(mAnchorX,mAnchorY);
  if (plugin != null) {
    if (isPluginFitOnScreen(plugin)) {
      mInZoomOverview=true;
      if (mScrollY < getTitleHeight())       mScrollY=0;
      zoomWithPreview((float)getViewWidth() / mZoomOverviewWidth,true);
    }
 else {
      mInZoomOverview=false;
      centerFitRect(plugin.x,plugin.y,plugin.width,plugin.height);
    }
    return;
  }
  boolean zoomToDefault=false;
  if ((settings.getLayoutAlgorithm() == WebSettings.LayoutAlgorithm.NARROW_COLUMNS) && (Math.abs(mActualScale - mTextWrapScale) >= MINIMUM_SCALE_INCREMENT)) {
    setNewZoomScale(mActualScale,true,true);
    float overviewScale=(float)getViewWidth() / mZoomOverviewWidth;
    if (Math.abs(mActualScale - overviewScale) < MINIMUM_SCALE_INCREMENT) {
      mInZoomOverview=true;
    }
  }
 else   if (!mInZoomOverview) {
    float newScale=(float)getViewWidth() / mZoomOverviewWidth;
    if (Math.abs(mActualScale - newScale) >= MINIMUM_SCALE_INCREMENT) {
      mInZoomOverview=true;
      if (mScrollY < getTitleHeight())       mScrollY=0;
      zoomWithPreview(newScale,true);
    }
 else     if (Math.abs(mActualScale - mDefaultScale) >= MINIMUM_SCALE_INCREMENT) {
      zoomToDefault=true;
    }
  }
 else {
    zoomToDefault=true;
  }
  if (zoomToDefault) {
    mInZoomOverview=false;
    int left=nativeGetBlockLeftEdge(mAnchorX,mAnchorY,mActualScale);
    if (left != NO_LEFTEDGE) {
      int viewLeft=contentToViewX(left < 5 ? 0 : (left - 5)) - mScrollX;
      if (viewLeft > 0) {
        mZoomCenterX=viewLeft * mDefaultScale / (mDefaultScale - mActualScale);
      }
 else {
        scrollBy(viewLeft,0);
        mZoomCenterX=0;
      }
    }
    zoomWithPreview(mDefaultScale,true);
  }
}
