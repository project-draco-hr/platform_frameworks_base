{
  int viewWidth=getViewWidth();
  int viewHeight=getViewHeightWithTitle();
  float scale=Math.min((float)viewWidth / child.width,(float)viewHeight / child.height);
  if (scale < mMinZoomScale) {
    scale=mMinZoomScale;
  }
 else   if (scale > mMaxZoomScale) {
    scale=mMaxZoomScale;
  }
  if (Math.abs(scale - mActualScale) < MINIMUM_SCALE_INCREMENT) {
    pinScrollTo(contentToViewX(child.x + child.width / 2) - viewWidth / 2,contentToViewY(child.y + child.height / 2) - viewHeight / 2,true,0);
  }
 else {
    int oldScreenX=contentToViewX(child.x) - mScrollX;
    int newPluginX=(int)(child.x * scale);
    int newPluginWidth=(int)(child.width * scale);
    int newMaxWidth=(int)(mContentWidth * scale);
    int newScreenX=(viewWidth - newPluginWidth) / 2;
    if (newScreenX > newPluginX) {
      newScreenX=newPluginX;
    }
 else     if (newScreenX > (newMaxWidth - newPluginX - newPluginWidth)) {
      newScreenX=viewWidth - (newMaxWidth - newPluginX);
    }
    mZoomCenterX=(oldScreenX * scale - newScreenX * mActualScale) / (scale - mActualScale);
    int oldScreenY=contentToViewY(child.y) - mScrollY;
    int newPluginY=(int)(child.y * scale) + getTitleHeight();
    int newPluginHeight=(int)(child.height * scale);
    int newMaxHeight=(int)(mContentHeight * scale) + getTitleHeight();
    int newScreenY=(viewHeight - newPluginHeight) / 2;
    if (newScreenY > newPluginY) {
      newScreenY=newPluginY;
    }
 else     if (newScreenY > (newMaxHeight - newPluginY - newPluginHeight)) {
      newScreenY=viewHeight - (newMaxHeight - newPluginY);
    }
    mZoomCenterY=(oldScreenY * scale - newScreenY * mActualScale) / (scale - mActualScale);
    zoomWithPreview(scale,false);
  }
}
