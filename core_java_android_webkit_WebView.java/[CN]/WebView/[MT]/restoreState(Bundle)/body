{
  WebBackForwardList returnList=null;
  if (inState.containsKey("index") && inState.containsKey("history")) {
    mCertificate=SslCertificate.restoreState(inState.getBundle("certificate"));
    final WebBackForwardList list=mCallbackProxy.getBackForwardList();
    final int index=inState.getInt("index");
synchronized (list) {
      final List<byte[]> history=(List<byte[]>)inState.getSerializable("history");
      final int size=history.size();
      if (index < 0 || index >= size) {
        return null;
      }
      for (int i=0; i < size; i++) {
        byte[] data=history.remove(0);
        if (data == null) {
          return null;
        }
        WebHistoryItem item=new WebHistoryItem(data);
        list.addHistoryItem(item);
      }
      if (inState.containsKey("picture")) {
        String path=inState.getString("picture");
        File f=new File(path);
        if (f.exists()) {
          Picture p=null;
          try {
            final FileInputStream in=new FileInputStream(f);
            p=Picture.createFromStream(in);
            in.close();
            f.delete();
          }
 catch (          FileNotFoundException e) {
            e.printStackTrace();
          }
catch (          RuntimeException e) {
            e.printStackTrace();
          }
catch (          IOException e) {
            e.printStackTrace();
          }
          if (p != null) {
            int sx=inState.getInt("scrollX",0);
            int sy=inState.getInt("scrollY",0);
            float scale=inState.getFloat("scale",1.0f);
            mDrawHistory=true;
            mHistoryPicture=p;
            mScrollX=sx;
            mScrollY=sy;
            mHistoryWidth=Math.round(p.getWidth() * scale);
            mHistoryHeight=Math.round(p.getHeight() * scale);
            mActualScale=scale;
            invalidate();
          }
        }
      }
      returnList=copyBackForwardList();
      returnList.setCurrentIndex(index);
    }
    mWebViewCore.removeMessages();
    mWebViewCore.sendMessage(EventHub.RESTORE_STATE,index);
  }
  return returnList;
}
