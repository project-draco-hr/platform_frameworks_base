{
  long time=ev.getEventTime();
  if (mAltIsPressed) {
    if (ev.getY() > 0)     pageDown(true);
    if (ev.getY() < 0)     pageUp(true);
    return true;
  }
  if (ev.getAction() == MotionEvent.ACTION_DOWN) {
    mPrivateHandler.removeMessages(SWITCH_TO_ENTER);
    mPrivateHandler.sendMessageDelayed(mPrivateHandler.obtainMessage(LONG_PRESS_TRACKBALL),1000);
    mTrackTrackball=true;
    mTrackballDown=true;
    if (time - mLastFocusTime <= TRACKBALL_TIMEOUT && !mLastFocusBounds.equals(nativeGetFocusRingBounds())) {
      nativeSelectBestAt(mLastFocusBounds);
    }
    if (LOGV_ENABLED) {
      Log.v(LOGTAG,"onTrackballEvent down ev=" + ev + " time="+ time+ " mLastFocusTime="+ mLastFocusTime);
    }
    return false;
  }
 else   if (mTrackTrackball) {
    mPrivateHandler.removeMessages(LONG_PRESS_TRACKBALL);
    mTrackTrackball=false;
  }
  if (ev.getAction() == MotionEvent.ACTION_UP) {
    mTrackballDown=false;
    mTrackballUpTime=time;
    if (mShiftIsPressed) {
      mExtendSelection=true;
    }
    if (LOGV_ENABLED) {
      Log.v(LOGTAG,"onTrackballEvent up ev=" + ev + " time="+ time);
    }
    return false;
  }
  if (mMapTrackballToArrowKeys && mShiftIsPressed == false) {
    if (LOGV_ENABLED)     Log.v(LOGTAG,"onTrackballEvent gmail quit");
    return false;
  }
  if (mTouchMode == TOUCH_DOUBLECLICK_MODE) {
    if (LOGV_ENABLED)     Log.v(LOGTAG,"onTrackballEvent 2 click quit");
    return true;
  }
  if (mTrackballDown) {
    if (LOGV_ENABLED)     Log.v(LOGTAG,"onTrackballEvent down quit");
    return true;
  }
  if (time - mTrackballUpTime < TRACKBALL_TIMEOUT) {
    if (LOGV_ENABLED)     Log.v(LOGTAG,"onTrackballEvent up timeout quit");
    return true;
  }
  switchOutDrawHistory();
  if (time - mTrackballLastTime > TRACKBALL_TIMEOUT) {
    if (LOGV_ENABLED) {
      Log.v(LOGTAG,"onTrackballEvent time=" + time + " last="+ mTrackballLastTime);
    }
    mTrackballFirstTime=time;
    mTrackballXMove=mTrackballYMove=0;
  }
  mTrackballLastTime=time;
  if (LOGV_ENABLED) {
    Log.v(LOGTAG,"onTrackballEvent ev=" + ev + " time="+ time);
  }
  mTrackballRemainsX+=ev.getX();
  mTrackballRemainsY+=ev.getY();
  doTrackball(time);
  return true;
}
