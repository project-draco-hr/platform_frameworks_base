{
  if (mNativeClass == 0) {
    return false;
  }
  if (ignorePlugin == false && nativePluginEatsNavKey()) {
    KeyEvent event=new KeyEvent(time,time,KeyEvent.ACTION_DOWN,keyCode,count,(mShiftIsPressed ? KeyEvent.META_SHIFT_ON : 0) | (false ? KeyEvent.META_ALT_ON : 0) | (false ? KeyEvent.META_SYM_ON : 0),0,0,0);
    mWebViewCore.sendMessage(EventHub.KEY_DOWN,event);
    mWebViewCore.sendMessage(EventHub.KEY_UP,event);
    return true;
  }
  mLastCursorTime=time;
  mLastCursorBounds=nativeGetCursorRingBounds();
  boolean keyHandled=nativeMoveCursor(keyCode,count,noScroll) == false;
  if (DebugFlags.WEB_VIEW) {
    Log.v(LOGTAG,"navHandledKey mLastCursorBounds=" + mLastCursorBounds + " mLastCursorTime="+ mLastCursorTime+ " handled="+ keyHandled);
  }
  if (keyHandled == false || mHeightCanMeasure == false) {
    return keyHandled;
  }
  Rect contentCursorRingBounds=nativeGetCursorRingBounds();
  if (contentCursorRingBounds.isEmpty())   return keyHandled;
  Rect viewCursorRingBounds=contentToViewRect(contentCursorRingBounds);
  Rect visRect=new Rect();
  calcOurVisibleRect(visRect);
  Rect outset=new Rect(visRect);
  int maxXScroll=visRect.width() / 2;
  int maxYScroll=visRect.height() / 2;
  outset.inset(-maxXScroll,-maxYScroll);
  if (Rect.intersects(outset,viewCursorRingBounds) == false) {
    return keyHandled;
  }
  int maxH=Math.min(viewCursorRingBounds.right - visRect.right,maxXScroll);
  if (maxH > 0) {
    pinScrollBy(maxH,0,true,0);
  }
 else {
    maxH=Math.max(viewCursorRingBounds.left - visRect.left,-maxXScroll);
    if (maxH < 0) {
      pinScrollBy(maxH,0,true,0);
    }
  }
  if (mLastCursorBounds.isEmpty())   return keyHandled;
  if (mLastCursorBounds.equals(contentCursorRingBounds)) {
    return keyHandled;
  }
  if (DebugFlags.WEB_VIEW) {
    Log.v(LOGTAG,"navHandledKey contentCursorRingBounds=" + contentCursorRingBounds);
  }
  requestRectangleOnScreen(viewCursorRingBounds);
  mUserScroll=true;
  return keyHandled;
}
