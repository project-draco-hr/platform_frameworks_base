{
  int action=ev.getAction();
  if ((action & 0xff) == MotionEvent.ACTION_POINTER_DOWN) {
    cancelTouch();
    mInZoomOverview=false;
    if (inEditingMode() && nativeFocusCandidateIsPassword()) {
      mWebTextView.setInPassword(false);
    }
    float x0=ev.getX(0);
    float y0=ev.getY(0);
    float x1=ev.getX(1);
    float y1=ev.getY(1);
    mPinchDistance=Math.sqrt((x0 - x1) * (x0 - x1) + (y0 - y1) * (y0 - y1));
  }
 else   if ((action & 0xff) == MotionEvent.ACTION_POINTER_UP) {
    if (mPreviewZoomOnly) {
      mPreviewZoomOnly=false;
      mAnchorX=viewToContentX((int)mZoomCenterX + mScrollX);
      mAnchorY=viewToContentY((int)mZoomCenterY + mScrollY);
      boolean reflowNow=!getSettings().getPluginsEnabled();
      setNewZoomScale(mActualScale,reflowNow,true);
      invalidate();
    }
    if (inEditingMode()) {
      adjustTextView(true);
    }
    mTouchMode=TOUCH_PINCH_DRAG;
    int id=(((action & MotionEvent.ACTION_POINTER_ID_MASK) >> MotionEvent.ACTION_POINTER_ID_SHIFT) == 0) ? 1 : 0;
    startTouch(ev.getX(id),ev.getY(id),ev.getEventTime());
  }
 else   if (action == MotionEvent.ACTION_MOVE) {
    float x0=ev.getX(0);
    float y0=ev.getY(0);
    float x1=ev.getX(1);
    float y1=ev.getY(1);
    double distance=Math.sqrt((x0 - x1) * (x0 - x1) + (y0 - y1) * (y0 - y1));
    float scale=(float)(Math.round(distance / mPinchDistance * mActualScale * 100) / 100.0);
    float pressure=ev.getPressure(0) + ev.getPressure(1);
    if (Math.abs(scale - mActualScale) >= SCALE_INCREMENT && (!mPreviewZoomOnly || (pressure / mLastPressure) > PRESSURE_THRESHOLD)) {
      mPreviewZoomOnly=true;
      if (scale > mActualScale) {
        scale=Math.min(scale,mActualScale * 1.25f);
      }
 else {
        scale=Math.max(scale,mActualScale * 0.8f);
      }
      mZoomCenterX=(x0 + x1) / 2;
      mZoomCenterY=(y0 + y1) / 2;
      setNewZoomScale(scale,false,false);
      invalidate();
      mPinchDistance=distance;
      mLastPressure=pressure;
    }
  }
 else {
    Log.w(LOGTAG,action + " should not happen during doMultiTouch");
    return false;
  }
  return true;
}
