{
  int viewWidth=getViewWidth();
  int viewHeight=getViewHeightWithTitle();
  float scale=Math.min((float)viewWidth / docWidth,(float)viewHeight / docHeight);
  if (scale < mMinZoomScale) {
    scale=mMinZoomScale;
  }
 else   if (scale > mMaxZoomScale) {
    scale=mMaxZoomScale;
  }
  if (Math.abs(scale - mActualScale) < MINIMUM_SCALE_INCREMENT) {
    pinScrollTo(contentToViewX(docX + docWidth / 2) - viewWidth / 2,contentToViewY(docY + docHeight / 2) - viewHeight / 2,true,0);
  }
 else {
    int oldScreenX=contentToViewX(docX) - mScrollX;
    int rectViewX=(int)(docX * scale);
    int rectViewWidth=(int)(docWidth * scale);
    int newMaxWidth=(int)(mContentWidth * scale);
    int newScreenX=(viewWidth - rectViewWidth) / 2;
    if (newScreenX > rectViewX) {
      newScreenX=rectViewX;
    }
 else     if (newScreenX > (newMaxWidth - rectViewX - rectViewWidth)) {
      newScreenX=viewWidth - (newMaxWidth - rectViewX);
    }
    mZoomCenterX=(oldScreenX * scale - newScreenX * mActualScale) / (scale - mActualScale);
    int oldScreenY=contentToViewY(docY) - mScrollY;
    int rectViewY=(int)(docY * scale) + getTitleHeight();
    int rectViewHeight=(int)(docHeight * scale);
    int newMaxHeight=(int)(mContentHeight * scale) + getTitleHeight();
    int newScreenY=(viewHeight - rectViewHeight) / 2;
    if (newScreenY > rectViewY) {
      newScreenY=rectViewY;
    }
 else     if (newScreenY > (newMaxHeight - rectViewY - rectViewHeight)) {
      newScreenY=viewHeight - (newMaxHeight - rectViewY);
    }
    mZoomCenterY=(oldScreenY * scale - newScreenY * mActualScale) / (scale - mActualScale);
    zoomWithPreview(scale,false);
  }
}
