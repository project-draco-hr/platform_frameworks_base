{
  int viewWidth=getViewWidth();
  int viewHeight=getViewHeightWithTitle();
  float scale=Math.min((float)viewWidth / docWidth,(float)viewHeight / docHeight);
  if (scale < mZoomManager.mMinZoomScale) {
    scale=mZoomManager.mMinZoomScale;
  }
 else   if (scale > mZoomManager.mMaxZoomScale) {
    scale=mZoomManager.mMaxZoomScale;
  }
  if (!mZoomManager.willScaleTriggerZoom(scale)) {
    pinScrollTo(contentToViewX(docX + docWidth / 2) - viewWidth / 2,contentToViewY(docY + docHeight / 2) - viewHeight / 2,true,0);
  }
 else {
    float actualScale=mZoomManager.mActualScale;
    float oldScreenX=docX * actualScale - mScrollX;
    float rectViewX=docX * scale;
    float rectViewWidth=docWidth * scale;
    float newMaxWidth=mContentWidth * scale;
    float newScreenX=(viewWidth - rectViewWidth) / 2;
    if (newScreenX > rectViewX) {
      newScreenX=rectViewX;
    }
 else     if (newScreenX > (newMaxWidth - rectViewX - rectViewWidth)) {
      newScreenX=viewWidth - (newMaxWidth - rectViewX);
    }
    float zoomCenterX=(oldScreenX * scale - newScreenX * actualScale) / (scale - actualScale);
    float oldScreenY=docY * actualScale + getTitleHeight() - mScrollY;
    float rectViewY=docY * scale + getTitleHeight();
    float rectViewHeight=docHeight * scale;
    float newMaxHeight=mContentHeight * scale + getTitleHeight();
    float newScreenY=(viewHeight - rectViewHeight) / 2;
    if (newScreenY > rectViewY) {
      newScreenY=rectViewY;
    }
 else     if (newScreenY > (newMaxHeight - rectViewY - rectViewHeight)) {
      newScreenY=viewHeight - (newMaxHeight - rectViewY);
    }
    float zoomCenterY=(oldScreenY * scale - newScreenY * actualScale) / (scale - actualScale);
    mZoomManager.setZoomCenter(zoomCenterX,zoomCenterY);
    mZoomManager.animateZoom(scale,false);
  }
}
