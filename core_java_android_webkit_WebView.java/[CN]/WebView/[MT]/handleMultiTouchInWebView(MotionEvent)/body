{
  if (DebugFlags.WEB_VIEW) {
    Log.v(LOGTAG,"multi-touch: " + ev + " at "+ ev.getEventTime()+ " mTouchMode="+ mTouchMode+ " numPointers="+ ev.getPointerCount()+ " scrolloffset=("+ mScrollX+ ","+ mScrollY+ ")");
  }
  final ScaleGestureDetector detector=mZoomManager.getMultiTouchGestureDetector();
  if (detector == null)   return;
  float x=ev.getX();
  float y=ev.getY();
  if (mPreventDefault != PREVENT_DEFAULT_YES) {
    detector.onTouchEvent(ev);
    if (detector.isInProgress()) {
      if (DebugFlags.WEB_VIEW) {
        Log.v(LOGTAG,"detector is in progress");
      }
      mLastTouchTime=ev.getEventTime();
      x=detector.getFocusX();
      y=detector.getFocusY();
      cancelLongPress();
      mPrivateHandler.removeMessages(SWITCH_TO_LONGPRESS);
      if (!mZoomManager.supportsPanDuringZoom()) {
        return;
      }
      mTouchMode=TOUCH_DRAG_MODE;
      if (mVelocityTracker == null) {
        mVelocityTracker=VelocityTracker.obtain();
      }
    }
  }
  int action=ev.getActionMasked();
  if (action == MotionEvent.ACTION_POINTER_DOWN) {
    cancelTouch();
    action=MotionEvent.ACTION_DOWN;
  }
 else   if (action == MotionEvent.ACTION_POINTER_UP && ev.getPointerCount() >= 2) {
    mLastTouchX=Math.round(x);
    mLastTouchY=Math.round(y);
  }
 else   if (action == MotionEvent.ACTION_MOVE) {
    if (x < 0 || y < 0) {
      return;
    }
  }
  handleTouchEventCommon(ev,action,Math.round(x),Math.round(y));
}
