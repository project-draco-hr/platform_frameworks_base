{
  if (DebugFlags.WEB_VIEW) {
    Log.v(LOGTAG,"multi-touch: " + ev + " at "+ ev.getEventTime()+ " mTouchMode="+ mTouchMode+ " numPointers="+ ev.getPointerCount()+ " scrolloffset=("+ mScrollX+ ","+ mScrollY+ ")");
  }
  final ScaleGestureDetector detector=mZoomManager.getMultiTouchGestureDetector();
  if (detector == null)   return false;
  int action=ev.getAction();
  float x=ev.getX();
  float y=ev.getY();
  long eventTime=ev.getEventTime();
  if (!detector.isInProgress() && ev.getActionMasked() != MotionEvent.ACTION_POINTER_DOWN) {
    MotionEvent temp=MotionEvent.obtain(ev);
    try {
      temp.setAction(temp.getAction() & ~MotionEvent.ACTION_MASK | MotionEvent.ACTION_POINTER_DOWN);
      detector.onTouchEvent(temp);
    }
  finally {
      temp.recycle();
    }
  }
  detector.onTouchEvent(ev);
  if (detector.isInProgress()) {
    if (DebugFlags.WEB_VIEW) {
      Log.v(LOGTAG,"detector is in progress");
    }
    mLastTouchTime=eventTime;
    cancelLongPress();
    mPrivateHandler.removeMessages(SWITCH_TO_LONGPRESS);
    if (!mZoomManager.supportsPanDuringZoom()) {
      return false;
    }
    mTouchMode=TOUCH_DRAG_MODE;
    if (mVelocityTracker == null) {
      mVelocityTracker=VelocityTracker.obtain();
    }
  }
  action=ev.getAction() & MotionEvent.ACTION_MASK;
  if (action == MotionEvent.ACTION_POINTER_DOWN) {
    cancelTouch();
    action=MotionEvent.ACTION_DOWN;
  }
 else   if (action == MotionEvent.ACTION_POINTER_UP) {
    mLastTouchX=x;
    mLastTouchY=y;
  }
 else   if (action == MotionEvent.ACTION_MOVE) {
    if (x < 0 || y < 0) {
      return false;
    }
  }
  return handleTouchEventCommon(ev);
}
