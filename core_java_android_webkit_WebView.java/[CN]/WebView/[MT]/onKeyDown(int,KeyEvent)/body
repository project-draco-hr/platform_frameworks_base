{
  if (mTouchMode >= FIRST_SCROLL_ZOOM && mTouchMode <= LAST_SCROLL_ZOOM) {
    return false;
  }
  if (keyCode != KeyEvent.KEYCODE_DPAD_CENTER && keyCode != KeyEvent.KEYCODE_ENTER) {
    mGotDown=false;
  }
  if (mAltIsPressed == false && (keyCode == KeyEvent.KEYCODE_ALT_LEFT || keyCode == KeyEvent.KEYCODE_ALT_RIGHT)) {
    mAltIsPressed=true;
  }
  if (ENABLE_COPY_PASTE && mShiftIsPressed == false && (keyCode == KeyEvent.KEYCODE_SHIFT_LEFT || keyCode == KeyEvent.KEYCODE_SHIFT_RIGHT)) {
    mExtendSelection=false;
    mShiftIsPressed=true;
    if (mNativeClass != 0 && nativeUpdateFocusNode()) {
      FocusNode node=mFocusNode;
      mSelectX=node.mBounds.left;
      mSelectY=node.mBounds.top;
    }
 else {
      mSelectX=mScrollX + SELECT_CURSOR_OFFSET;
      mSelectY=mScrollY + SELECT_CURSOR_OFFSET;
    }
  }
  if (keyCode == KeyEvent.KEYCODE_CALL) {
    if (mNativeClass != 0 && nativeUpdateFocusNode()) {
      FocusNode node=mFocusNode;
      String text=node.mText;
      if (!node.mIsTextField && !node.mIsTextArea && text != null && text.startsWith(SCHEME_TEL)) {
        Intent intent=new Intent(Intent.ACTION_DIAL,Uri.parse(text));
        getContext().startActivity(intent);
        return true;
      }
    }
    return false;
  }
  if (event.isSystem() || mCallbackProxy.uiOverrideKeyEvent(event)) {
    return false;
  }
  if (LOGV_ENABLED) {
    Log.v(LOGTAG,"keyDown at " + System.currentTimeMillis() + ", "+ event);
  }
  boolean isArrowKey=keyCode == KeyEvent.KEYCODE_DPAD_UP || keyCode == KeyEvent.KEYCODE_DPAD_DOWN || keyCode == KeyEvent.KEYCODE_DPAD_LEFT || keyCode == KeyEvent.KEYCODE_DPAD_RIGHT;
  if (isArrowKey && event.getEventTime() - mTrackballLastTime <= TRACKBALL_KEY_TIMEOUT) {
    if (LOGV_ENABLED)     Log.v(LOGTAG,"ignore arrow");
    return false;
  }
  boolean weHandledTheKey=false;
  if (event.getMetaState() == 0) {
switch (keyCode) {
case KeyEvent.KEYCODE_DPAD_UP:
case KeyEvent.KEYCODE_DPAD_DOWN:
case KeyEvent.KEYCODE_DPAD_RIGHT:
case KeyEvent.KEYCODE_DPAD_LEFT:
      switchOutDrawHistory();
    weHandledTheKey=navHandledKey(keyCode,1,false,event.getEventTime());
  if (weHandledTheKey) {
    playSoundEffect(keyCodeToSoundsEffect(keyCode));
  }
break;
case KeyEvent.KEYCODE_DPAD_CENTER:
case KeyEvent.KEYCODE_ENTER:
if (event.getRepeatCount() == 0) {
switchOutDrawHistory();
mDownTime=event.getEventTime();
mGotDown=true;
return true;
}
if (mGotDown && event.getEventTime() - mDownTime > ViewConfiguration.getLongPressTimeout()) {
performLongClick();
mGotDown=false;
return true;
}
break;
case KeyEvent.KEYCODE_9:
if (mNativeClass != 0 && getSettings().getNavDump()) {
debugDump();
}
break;
default :
break;
}
}
if (!weHandledTheKey && !isArrowKey) {
mWebViewCore.sendMessage(EventHub.KEY_DOWN,keyCode,0,event);
}
return weHandledTheKey;
}
