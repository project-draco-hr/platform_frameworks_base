{
  if (LOGV_ENABLED) {
    Log.v(LOGTAG,"keyDown at " + System.currentTimeMillis() + ", "+ event);
  }
  if (mNativeClass == 0) {
    return false;
  }
  if (AUTO_REDRAW_HACK && (keyCode == KeyEvent.KEYCODE_CALL)) {
    mAutoRedraw=!mAutoRedraw;
    if (mAutoRedraw) {
      invalidate();
    }
    return true;
  }
  if (event.isSystem() || mCallbackProxy.uiOverrideKeyEvent(event) || (mTouchMode >= FIRST_SCROLL_ZOOM && mTouchMode <= LAST_SCROLL_ZOOM)) {
    return false;
  }
  if (ENABLE_COPY_PASTE && mShiftIsPressed == false && (keyCode == KeyEvent.KEYCODE_SHIFT_LEFT || keyCode == KeyEvent.KEYCODE_SHIFT_RIGHT)) {
    mExtendSelection=false;
    mShiftIsPressed=true;
    if (nativeUpdateFocusNode()) {
      FocusNode node=mFocusNode;
      mSelectX=contentToView(node.mBounds.left);
      mSelectY=contentToView(node.mBounds.top);
    }
 else {
      mSelectX=mScrollX + (int)mLastTouchX;
      mSelectY=mScrollY + (int)mLastTouchY;
    }
  }
  if (keyCode >= KeyEvent.KEYCODE_DPAD_UP && keyCode <= KeyEvent.KEYCODE_DPAD_RIGHT) {
    switchOutDrawHistory();
    if (navHandledKey(keyCode,1,false,event.getEventTime())) {
      playSoundEffect(keyCodeToSoundsEffect(keyCode));
      return true;
    }
    return false;
  }
  if (keyCode == KeyEvent.KEYCODE_DPAD_CENTER || keyCode == KeyEvent.KEYCODE_ENTER) {
    switchOutDrawHistory();
    if (event.getRepeatCount() == 0) {
      mGotEnterDown=true;
      mPrivateHandler.sendMessageDelayed(mPrivateHandler.obtainMessage(LONG_PRESS_ENTER),LONG_PRESS_TIMEOUT);
      nativeRecordButtons(true,true);
      mWebViewCore.sendMessage(EventHub.KEY_DOWN,keyCode,EventHub.KEYEVENT_UNHANDLED_TYPE,event);
      return true;
    }
    return false;
  }
  if (getSettings().getNavDump()) {
switch (keyCode) {
case KeyEvent.KEYCODE_4:
      nativeDumpDisplayTree(getUrl());
    break;
case KeyEvent.KEYCODE_5:
case KeyEvent.KEYCODE_6:
  mWebViewCore.sendMessage(EventHub.DUMP_DOMTREE,(keyCode == KeyEvent.KEYCODE_5) ? 1 : 0,0);
break;
case KeyEvent.KEYCODE_7:
case KeyEvent.KEYCODE_8:
mWebViewCore.sendMessage(EventHub.DUMP_RENDERTREE,(keyCode == KeyEvent.KEYCODE_7) ? 1 : 0,0);
break;
case KeyEvent.KEYCODE_9:
debugDump();
break;
}
}
if (nativeFocusNodeWantsKeyEvents()) {
mWebViewCore.sendMessage(EventHub.KEY_DOWN,keyCode,EventHub.KEYEVENT_FOCUS_NODE_TYPE,event);
return true;
}
 else if (false) {
mWebViewCore.sendMessage(EventHub.KEY_DOWN,keyCode,EventHub.KEYEVENT_UNHANDLED_TYPE,event);
return true;
}
return false;
}
