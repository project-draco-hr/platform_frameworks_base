{
  NetworkInfo info=(NetworkInfo)(intent.getParcelableExtra(ConnectivityManager.EXTRA_NETWORK_INFO));
  int connectionStatus=intent.getIntExtra(ConnectivityManager.EXTRA_INET_CONDITION,0);
  int inetCondition=(connectionStatus > INET_CONDITION_THRESHOLD ? 1 : 0);
switch (info.getType()) {
case ConnectivityManager.TYPE_MOBILE:
    mInetCondition=inetCondition;
  updateDataNetType(info.getSubtype());
updateDataIcon();
updateSignalStrength();
break;
case ConnectivityManager.TYPE_WIFI:
mInetCondition=inetCondition;
if (info.isConnected()) {
mIsWifiConnected=true;
int iconId;
String contentDescription=null;
if (mLastWifiSignalLevel == -1) {
iconId=sWifiSignalImages[mInetCondition][0];
contentDescription=mContext.getString(sWifiConnectionStrength[0]);
}
 else {
iconId=sWifiSignalImages[mInetCondition][mLastWifiSignalLevel];
contentDescription=mContext.getString(sWifiConnectionStrength[mLastWifiSignalLevel]);
}
mService.setIcon("wifi",iconId,0,contentDescription);
mService.setIconVisibility("wifi",true);
}
 else {
mLastWifiSignalLevel=-1;
mIsWifiConnected=false;
int iconId=sWifiSignalImages[0][0];
String contentDescription=mContext.getString(R.string.accessibility_no_wifi);
mService.setIcon("wifi",iconId,0,contentDescription);
mService.setIconVisibility("wifi",false);
}
updateSignalStrength();
break;
}
}
