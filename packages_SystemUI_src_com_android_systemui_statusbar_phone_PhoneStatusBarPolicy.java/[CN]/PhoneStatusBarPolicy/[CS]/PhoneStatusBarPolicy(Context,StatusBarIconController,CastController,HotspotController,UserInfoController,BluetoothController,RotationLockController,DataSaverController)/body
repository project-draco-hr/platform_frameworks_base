{
  mContext=context;
  mIconController=iconController;
  mCast=cast;
  mHotspot=hotspot;
  mBluetooth=bluetooth;
  mBluetooth.addStateChangedCallback(this);
  mAlarmManager=(AlarmManager)context.getSystemService(Context.ALARM_SERVICE);
  mUserInfoController=userInfoController;
  mUserManager=(UserManager)mContext.getSystemService(Context.USER_SERVICE);
  mRotationLockController=rotationLockController;
  mDataSaver=dataSaver;
  mSlotCast=context.getString(com.android.internal.R.string.status_bar_cast);
  mSlotHotspot=context.getString(com.android.internal.R.string.status_bar_hotspot);
  mSlotBluetooth=context.getString(com.android.internal.R.string.status_bar_bluetooth);
  mSlotTty=context.getString(com.android.internal.R.string.status_bar_tty);
  mSlotZen=context.getString(com.android.internal.R.string.status_bar_zen);
  mSlotVolume=context.getString(com.android.internal.R.string.status_bar_volume);
  mSlotAlarmClock=context.getString(com.android.internal.R.string.status_bar_alarm_clock);
  mSlotManagedProfile=context.getString(com.android.internal.R.string.status_bar_managed_profile);
  mSlotRotate=context.getString(com.android.internal.R.string.status_bar_rotate);
  mSlotHeadset=context.getString(com.android.internal.R.string.status_bar_headset);
  mSlotDataSaver=context.getString(com.android.internal.R.string.status_bar_data_saver);
  mRotationLockController.addRotationLockControllerCallback(this);
  IntentFilter filter=new IntentFilter();
  filter.addAction(AlarmManager.ACTION_NEXT_ALARM_CLOCK_CHANGED);
  filter.addAction(AudioManager.RINGER_MODE_CHANGED_ACTION);
  filter.addAction(AudioManager.INTERNAL_RINGER_MODE_CHANGED_ACTION);
  filter.addAction(AudioManager.ACTION_HEADSET_PLUG);
  filter.addAction(TelephonyIntents.ACTION_SIM_STATE_CHANGED);
  filter.addAction(TelecomManager.ACTION_CURRENT_TTY_MODE_CHANGED);
  filter.addAction(Intent.ACTION_MANAGED_PROFILE_AVAILABLE);
  filter.addAction(Intent.ACTION_MANAGED_PROFILE_UNAVAILABLE);
  filter.addAction(Intent.ACTION_MANAGED_PROFILE_REMOVED);
  mContext.registerReceiver(mIntentReceiver,filter,null,mHandler);
  try {
    ActivityManagerNative.getDefault().registerUserSwitchObserver(mUserSwitchListener);
  }
 catch (  RemoteException e) {
  }
  mIconController.setIcon(mSlotTty,R.drawable.stat_sys_tty_mode,null);
  mIconController.setIconVisibility(mSlotTty,false);
  updateBluetooth();
  mIconController.setIcon(mSlotAlarmClock,R.drawable.stat_sys_alarm,null);
  mIconController.setIconVisibility(mSlotAlarmClock,false);
  mIconController.setIcon(mSlotZen,R.drawable.stat_sys_zen_important,null);
  mIconController.setIconVisibility(mSlotZen,false);
  mIconController.setIcon(mSlotVolume,R.drawable.stat_sys_ringer_vibrate,null);
  mIconController.setIconVisibility(mSlotVolume,false);
  updateVolumeZen();
  mIconController.setIcon(mSlotCast,R.drawable.stat_sys_cast,null);
  mIconController.setIconVisibility(mSlotCast,false);
  mCast.addCallback(mCastCallback);
  mIconController.setIcon(mSlotHotspot,R.drawable.stat_sys_hotspot,mContext.getString(R.string.accessibility_status_bar_hotspot));
  mIconController.setIconVisibility(mSlotHotspot,mHotspot.isHotspotEnabled());
  mHotspot.addCallback(mHotspotCallback);
  mIconController.setIcon(mSlotManagedProfile,R.drawable.stat_sys_managed_profile_status,mContext.getString(R.string.accessibility_managed_profile));
  mIconController.setIconVisibility(mSlotManagedProfile,mManagedProfileIconVisible);
  mIconController.setIcon(mSlotDataSaver,R.drawable.stat_sys_data_saver,context.getString(R.string.accessibility_data_saver_on));
  mIconController.setIconVisibility(mSlotDataSaver,false);
  mDataSaver.addListener(this);
}
