{
  if ((configStr.startsWith("\"") && configStr.endsWith("\""))) {
    configStr=configStr.substring(1,configStr.length() - 1);
  }
  if (DBG)   log("configure: '" + configStr + "'");
  if (!TextUtils.isEmpty(configStr)) {
    int defaultRandomization=0;
    if (DBG)     log("configure: not empty");
    mMaxRetryCount=0;
    resetRetryCount();
    mRetryArray.clear();
    String strArray[]=configStr.split(",");
    for (int i=0; i < strArray.length; i++) {
      if (DBG)       log("configure: strArray[" + i + "]='"+ strArray[i]+ "'");
      Pair<Boolean,Integer> value;
      String splitStr[]=strArray[i].split("=",2);
      splitStr[0]=splitStr[0].trim();
      if (DBG)       log("configure: splitStr[0]='" + splitStr[0] + "'");
      if (splitStr.length > 1) {
        splitStr[1]=splitStr[1].trim();
        if (DBG)         log("configure: splitStr[1]='" + splitStr[1] + "'");
        if (TextUtils.equals(splitStr[0],"default_randomization")) {
          value=parseNonNegativeInt(splitStr[0],splitStr[1]);
          if (!value.first)           return false;
          defaultRandomization=value.second;
        }
 else         if (TextUtils.equals(splitStr[0],"max_retries")) {
          if (TextUtils.equals("infinite",splitStr[1])) {
            mRetryForever=true;
          }
 else {
            value=parseNonNegativeInt(splitStr[0],splitStr[1]);
            if (!value.first)             return false;
            mMaxRetryCount=value.second;
          }
        }
 else {
          Log.e(LOG_TAG,"Unrecognized configuration name value pair: " + strArray[i]);
          return false;
        }
      }
 else {
        splitStr=strArray[i].split(":",2);
        splitStr[0]=splitStr[0].trim();
        RetryRec rr=new RetryRec(0,0);
        value=parseNonNegativeInt("delayTime",splitStr[0]);
        if (!value.first)         return false;
        rr.mDelayTime=value.second;
        if (splitStr.length > 1) {
          splitStr[1]=splitStr[1].trim();
          if (DBG)           log("configure: splitStr[1]='" + splitStr[1] + "'");
          value=parseNonNegativeInt("randomizationTime",splitStr[1]);
          if (!value.first)           return false;
          rr.mRandomizationTime=value.second;
        }
 else {
          rr.mRandomizationTime=defaultRandomization;
        }
        mRetryArray.add(rr);
      }
    }
    if (mRetryArray.size() > mMaxRetryCount) {
      mMaxRetryCount=mRetryArray.size();
      if (DBG)       log("configure: setting mMaxRetryCount=" + mMaxRetryCount);
    }
    if (DBG)     log("configure: true");
    return true;
  }
 else {
    if (DBG)     log("configure: false it's empty");
    return false;
  }
}
