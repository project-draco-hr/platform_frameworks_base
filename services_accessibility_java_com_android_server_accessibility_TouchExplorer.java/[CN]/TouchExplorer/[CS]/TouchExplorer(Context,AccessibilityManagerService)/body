{
  mContext=context;
  mAms=service;
  mReceivedPointerTracker=new ReceivedPointerTracker();
  mInjectedPointerTracker=new InjectedPointerTracker();
  mDetermineUserIntentTimeout=ViewConfiguration.getDoubleTapTimeout();
  mDoubleTapSlop=ViewConfiguration.get(context).getScaledDoubleTapSlop();
  mHandler=new Handler(context.getMainLooper());
  mExitGestureDetectionModeDelayed=new ExitGestureDetectionModeDelayed();
  mGestureLibrary=GestureLibraries.fromRawResource(context,R.raw.accessibility_gestures);
  mGestureLibrary.setOrientationStyle(8);
  mGestureLibrary.setSequenceType(GestureStore.SEQUENCE_SENSITIVE);
  mGestureLibrary.load();
  mSendHoverEnterAndMoveDelayed=new SendHoverEnterAndMoveDelayed();
  mSendHoverExitDelayed=new SendHoverExitDelayed();
  mSendTouchExplorationEndDelayed=new SendAccessibilityEventDelayed(AccessibilityEvent.TYPE_TOUCH_EXPLORATION_GESTURE_END,mDetermineUserIntentTimeout);
  mSendTouchInteractionEndDelayed=new SendAccessibilityEventDelayed(AccessibilityEvent.TYPE_TOUCH_INTERACTION_END,mDetermineUserIntentTimeout);
  mDoubleTapDetector=new DoubleTapDetector(mContext);
  final float density=context.getResources().getDisplayMetrics().density;
  mScaledMinPointerDistanceToUseMiddleLocation=(int)(MIN_POINTER_DISTANCE_TO_USE_MIDDLE_LOCATION_DIP * density);
  mScaledGestureDetectionVelocity=(int)(GESTURE_DETECTION_VELOCITY_DIP * density);
}
