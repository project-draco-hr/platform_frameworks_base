{
  final int pointerIdBits=(1 << mDraggingPointerId);
switch (event.getActionMasked()) {
case MotionEvent.ACTION_DOWN:
{
      throw new IllegalStateException("Dragging state can be reached only if two " + "pointers are already down");
    }
case MotionEvent.ACTION_POINTER_DOWN:
{
    mCurrentState=STATE_DELEGATING;
    if (mDraggingPointerId != INVALID_POINTER_ID) {
      sendMotionEvent(event,MotionEvent.ACTION_UP,pointerIdBits,policyFlags);
    }
    sendDownForAllNotInjectedPointers(event,policyFlags);
  }
break;
case MotionEvent.ACTION_MOVE:
{
switch (event.getPointerCount()) {
case 1:
{
  }
break;
case 2:
{
if (isDraggingGesture(event)) {
  final float firstPtrX=event.getX(0);
  final float firstPtrY=event.getY(0);
  final float secondPtrX=event.getX(1);
  final float secondPtrY=event.getY(1);
  final float deltaX=firstPtrX - secondPtrX;
  final float deltaY=firstPtrY - secondPtrY;
  final double distance=Math.hypot(deltaX,deltaY);
  if (distance > mScaledMinPointerDistanceToUseMiddleLocation) {
    event.setLocation(deltaX / 2,deltaY / 2);
  }
  sendMotionEvent(event,MotionEvent.ACTION_MOVE,pointerIdBits,policyFlags);
}
 else {
  mCurrentState=STATE_DELEGATING;
  sendMotionEvent(event,MotionEvent.ACTION_UP,pointerIdBits,policyFlags);
  sendDownForAllNotInjectedPointers(event,policyFlags);
}
}
break;
default :
{
mCurrentState=STATE_DELEGATING;
sendMotionEvent(event,MotionEvent.ACTION_UP,pointerIdBits,policyFlags);
sendDownForAllNotInjectedPointers(event,policyFlags);
}
}
}
break;
case MotionEvent.ACTION_POINTER_UP:
{
final int pointerId=event.getPointerId(event.getActionIndex());
if (pointerId == mDraggingPointerId) {
mDraggingPointerId=INVALID_POINTER_ID;
sendMotionEvent(event,MotionEvent.ACTION_UP,pointerIdBits,policyFlags);
}
mCurrentState=STATE_TOUCH_EXPLORING;
}
break;
case MotionEvent.ACTION_UP:
{
mAms.onTouchInteractionEnd();
sendAccessibilityEvent(AccessibilityEvent.TYPE_TOUCH_INTERACTION_END);
final int pointerId=event.getPointerId(event.getActionIndex());
if (pointerId == mDraggingPointerId) {
mDraggingPointerId=INVALID_POINTER_ID;
sendMotionEvent(event,MotionEvent.ACTION_UP,pointerIdBits,policyFlags);
}
mCurrentState=STATE_TOUCH_EXPLORING;
}
break;
case MotionEvent.ACTION_CANCEL:
{
clear(event,policyFlags);
}
break;
}
}
