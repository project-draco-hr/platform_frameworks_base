{
  if (mCurrentState != STATE_TOUCH_EXPLORING) {
    return false;
  }
  mSendHoverEnterAndMoveDelayed.cancel();
  mSendHoverExitDelayed.cancel();
  if (mSendTouchExplorationEndDelayed.isPending()) {
    mSendTouchExplorationEndDelayed.forceSendAndRemove();
  }
  if (mSendTouchInteractionEndDelayed.isPending()) {
    mSendTouchInteractionEndDelayed.forceSendAndRemove();
  }
  final int pointerIndex=event.getActionIndex();
  final int pointerId=event.getPointerId(pointerIndex);
  Point clickLocation=mTempPoint;
  final int result=computeClickLocation(clickLocation);
  if (result == CLICK_LOCATION_NONE) {
    return true;
  }
  PointerProperties[] properties=new PointerProperties[1];
  properties[0]=new PointerProperties();
  event.getPointerProperties(pointerIndex,properties[0]);
  PointerCoords[] coords=new PointerCoords[1];
  coords[0]=new PointerCoords();
  coords[0].x=clickLocation.x;
  coords[0].y=clickLocation.y;
  MotionEvent click_event=MotionEvent.obtain(event.getDownTime(),event.getEventTime(),MotionEvent.ACTION_DOWN,1,properties,coords,0,0,1.0f,1.0f,event.getDeviceId(),0,event.getSource(),event.getFlags());
  final boolean targetAccessibilityFocus=(result == CLICK_LOCATION_ACCESSIBILITY_FOCUS);
  sendActionDownAndUp(click_event,policyFlags,targetAccessibilityFocus);
  click_event.recycle();
  return true;
}
