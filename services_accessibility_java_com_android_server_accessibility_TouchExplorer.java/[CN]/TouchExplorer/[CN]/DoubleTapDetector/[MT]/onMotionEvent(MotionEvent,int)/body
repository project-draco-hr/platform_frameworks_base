{
  final int actionIndex=event.getActionIndex();
  final int action=event.getActionMasked();
switch (action) {
case MotionEvent.ACTION_DOWN:
case MotionEvent.ACTION_POINTER_DOWN:
{
      if (mFirstTapEvent != null && !GestureUtils.isSamePointerContext(mFirstTapEvent,event)) {
        clear();
      }
      mDownEvent=MotionEvent.obtain(event);
    }
  break;
case MotionEvent.ACTION_UP:
case MotionEvent.ACTION_POINTER_UP:
{
  if (mDownEvent == null) {
    return;
  }
  if (!GestureUtils.isSamePointerContext(mDownEvent,event)) {
    clear();
    return;
  }
  if (GestureUtils.isTap(mDownEvent,event,mTapTimeout,mTouchSlop,actionIndex)) {
    if (mFirstTapEvent == null || GestureUtils.isTimedOut(mFirstTapEvent,event,mDoubleTapTimeout)) {
      mFirstTapEvent=MotionEvent.obtain(event);
      mDownEvent.recycle();
      mDownEvent=null;
      return;
    }
    if (GestureUtils.isMultiTap(mFirstTapEvent,event,mDoubleTapTimeout,mDoubleTapSlop,actionIndex)) {
      onDoubleTap(event,policyFlags);
      mFirstTapEvent.recycle();
      mFirstTapEvent=null;
      mDownEvent.recycle();
      mDownEvent=null;
      return;
    }
    mFirstTapEvent.recycle();
    mFirstTapEvent=null;
  }
 else {
    if (mFirstTapEvent != null) {
      mFirstTapEvent.recycle();
      mFirstTapEvent=null;
    }
  }
  mDownEvent.recycle();
  mDownEvent=null;
}
break;
}
}
