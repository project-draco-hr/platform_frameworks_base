{
  float[] pts=RecognitionUtil.resample(gesture,64);
  PointF center=RecognitionUtil.computeCentroid(pts);
  float inductiveOrientation=(float)Math.atan2(pts[1] - center.y,pts[0] - center.x);
  inductiveOrientation*=180 / Math.PI;
  float minDeviation=Float.MAX_VALUE;
  for (int i=0; i < targetOrientations.length; i++) {
    float delta=targetOrientations[i] - inductiveOrientation;
    if (Math.abs(delta) < Math.abs(minDeviation)) {
      minDeviation=delta;
    }
  }
  android.graphics.Matrix m=new android.graphics.Matrix();
  m.setTranslate(-center.x,-center.y);
  android.graphics.Matrix rotation=new android.graphics.Matrix();
  rotation.setRotate(minDeviation);
  m.postConcat(rotation);
  m.mapPoints(pts);
  return new Instance(gesture.getID(),pts,label);
}
