{
  if (false) {
    Log.v(LOGTAG,"TestEventHandler:status() major: " + major_version + " minor: "+ minor_version+ " code: "+ code+ " reason: "+ reason_phrase);
  }
  eventsReceived[TEST_STATUS]=true;
  if (notExpecting[TEST_STATUS]) {
    expectDetails.append("Status event received but not expected");
    expectDetails.append("\r\n");
  }
  majorVersion=major_version;
  minorVersion=minor_version;
  responseCode=code;
  reasonPhrase=reason_phrase;
  if (expectMajor != -1) {
    if (expectMajor == major_version) {
      expectMajor=-1;
    }
 else {
      expectDetails.append("Major version expected:" + expectMajor + " got:"+ major_version);
      expectDetails.append("\r\n");
    }
  }
  if (expectMinor != -1) {
    if (expectMinor == minor_version) {
      expectMinor=-1;
    }
 else {
      expectDetails.append("Minor version expected:" + expectMinor + " got:"+ minor_version);
      expectDetails.append("\r\n");
    }
  }
  if (expectCode != -1) {
    if (expectCode == code) {
      expectCode=-1;
    }
 else {
      expectDetails.append("Status code expected:" + expectCode + " got:"+ code);
      expectDetails.append("\r\n");
    }
  }
  if ((expectMajor == -1) && (expectMinor == -1) && (expectCode == -1)) {
    expects[TEST_STATUS]=false;
  }
 else {
    System.out.println("MAJOR = " + expectMajor + " MINOR = "+ expectMinor+ " CODE = "+ expectCode);
  }
}
