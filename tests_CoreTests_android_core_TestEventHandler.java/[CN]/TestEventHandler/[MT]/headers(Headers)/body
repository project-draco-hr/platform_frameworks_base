{
  if (false) {
    Log.v(LOGTAG,"TestEventHandler:headers()");
  }
  expects[TEST_HEADERS]=false;
  if (notExpecting[TEST_HEADERS]) {
    expectDetails.append("Header event received but not expected");
    expectDetails.append("\r\n");
  }
  if (expectHeaders.isEmpty()) {
    return;
  }
  for (int i=expectHeaders.size() - 1; i >= 0; i--) {
    TestHeader h=expectHeaders.get(i);
    System.out.println("Expected header name: " + h.name);
    String s=null;
switch (h.name.hashCode()) {
case -1132779846:
      s=Long.toString(headers.getContentLength());
    break;
case 785670158:
  s=headers.getContentType();
break;
case 2095084583:
s=headers.getContentEncoding();
break;
case 1901043637:
s=headers.getLocation();
break;
case -243037365:
s=headers.getWwwAuthenticate();
break;
case -301767724:
s=headers.getProxyAuthenticate();
break;
case -1267267485:
s=headers.getContentDisposition();
break;
case 1397189435:
s=headers.getAcceptRanges();
break;
case -1309235404:
s=headers.getExpires();
break;
case -208775662:
s=headers.getCacheControl();
break;
case 150043680:
s=headers.getLastModified();
break;
case 3123477:
s=headers.getEtag();
break;
case -775651618:
int ct=headers.getConnectionType();
if (ct == Headers.CONN_CLOSE) {
s=HTTP.CONN_CLOSE;
}
 else if (ct == Headers.CONN_KEEP_ALIVE) {
s=HTTP.CONN_KEEP_ALIVE;
}
break;
default :
s=null;
}
if (evaluateHeader(h,s)) {
expectHeaders.remove(i);
}
}
}
