{
  Map<String,I18Name> friendlyNames=new HashMap<>();
  for (  Asn1Object name : altName.getChildren()) {
    if (name.getAsn1Class() == Asn1Class.Context && name.getTag() == OtherName) {
      Asn1Constructed otherName=(Asn1Constructed)name;
      Iterator<Asn1Object> children=otherName.getChildren().iterator();
      if (children.hasNext()) {
        Asn1Object oidObject=children.next();
        if (OidMappings.sIdWfaHotspotFriendlyName.equals(oidObject) && children.hasNext()) {
          Asn1Constructed value=castObject(children.next(),Asn1Constructed.class);
          String text=castObject(value.getChildren().iterator().next(),Asn1String.class).getString();
          I18Name friendlyName=new I18Name(text);
          friendlyNames.put(friendlyName.getLanguage(),friendlyName);
        }
      }
    }
  }
  Log.d(OSUManager.TAG,"Friendly names: " + friendlyNames.values());
  for (  I18Name osuName : mOSUInfo.getOSUProvider().getNames()) {
    I18Name friendlyName=friendlyNames.get(osuName.getLanguage());
    if (!osuName.equals(friendlyName)) {
      throw new IOException("Friendly name '" + osuName + " not in certificate");
    }
  }
}
