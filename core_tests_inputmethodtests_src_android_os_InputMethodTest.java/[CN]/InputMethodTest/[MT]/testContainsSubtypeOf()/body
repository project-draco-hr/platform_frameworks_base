{
  final InputMethodSubtype nonAutoEnUS=createDummyInputMethodSubtype("en_US",SUBTYPE_MODE_KEYBOARD,!IS_AUX,!IS_OVERRIDES_IMPLICITLY_ENABLED_SUBTYPE,IS_ASCII_CAPABLE,!IS_ENABLED_WHEN_DEFAULT_IS_NOT_ASCII_CAPABLE);
  final InputMethodSubtype nonAutoEnGB=createDummyInputMethodSubtype("en_GB",SUBTYPE_MODE_KEYBOARD,!IS_AUX,!IS_OVERRIDES_IMPLICITLY_ENABLED_SUBTYPE,IS_ASCII_CAPABLE,IS_ENABLED_WHEN_DEFAULT_IS_NOT_ASCII_CAPABLE);
  final InputMethodSubtype nonAutoFil=createDummyInputMethodSubtype("fil",SUBTYPE_MODE_KEYBOARD,!IS_AUX,!IS_OVERRIDES_IMPLICITLY_ENABLED_SUBTYPE,IS_ASCII_CAPABLE,!IS_ENABLED_WHEN_DEFAULT_IS_NOT_ASCII_CAPABLE);
  final InputMethodSubtype nonAutoFilPH=createDummyInputMethodSubtype("fil_PH",SUBTYPE_MODE_KEYBOARD,!IS_AUX,!IS_OVERRIDES_IMPLICITLY_ENABLED_SUBTYPE,IS_ASCII_CAPABLE,!IS_ENABLED_WHEN_DEFAULT_IS_NOT_ASCII_CAPABLE);
  final InputMethodSubtype nonAutoIn=createDummyInputMethodSubtype("in",SUBTYPE_MODE_KEYBOARD,!IS_AUX,!IS_OVERRIDES_IMPLICITLY_ENABLED_SUBTYPE,IS_ASCII_CAPABLE,IS_ENABLED_WHEN_DEFAULT_IS_NOT_ASCII_CAPABLE);
  final InputMethodSubtype nonAutoId=createDummyInputMethodSubtype("id",SUBTYPE_MODE_KEYBOARD,!IS_AUX,!IS_OVERRIDES_IMPLICITLY_ENABLED_SUBTYPE,IS_ASCII_CAPABLE,IS_ENABLED_WHEN_DEFAULT_IS_NOT_ASCII_CAPABLE);
  final boolean CHECK_COUNTRY=true;
{
    final ArrayList<InputMethodSubtype> subtypes=new ArrayList<InputMethodSubtype>();
    subtypes.add(nonAutoEnUS);
    final InputMethodInfo imi=createDummyInputMethodInfo("com.android.apps.inputmethod.latin","com.android.apps.inputmethod.latin","DummyLatinIme",!IS_AUX,IS_DEFAULT,subtypes);
    assertTrue(InputMethodUtils.containsSubtypeOf(imi,LOCALE_EN,!CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
    assertFalse(InputMethodUtils.containsSubtypeOf(imi,LOCALE_EN,CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
    assertTrue(InputMethodUtils.containsSubtypeOf(imi,LOCALE_EN_US,!CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
    assertTrue(InputMethodUtils.containsSubtypeOf(imi,LOCALE_EN_US,CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
    assertFalse(InputMethodUtils.containsSubtypeOf(imi,LOCALE_EN_US,!CHECK_COUNTRY,SUBTYPE_MODE_VOICE));
    assertFalse(InputMethodUtils.containsSubtypeOf(imi,LOCALE_EN_US,CHECK_COUNTRY,SUBTYPE_MODE_VOICE));
    assertTrue(InputMethodUtils.containsSubtypeOf(imi,LOCALE_EN_US,!CHECK_COUNTRY,SUBTYPE_MODE_ANY));
    assertTrue(InputMethodUtils.containsSubtypeOf(imi,LOCALE_EN_US,CHECK_COUNTRY,SUBTYPE_MODE_ANY));
    assertTrue(InputMethodUtils.containsSubtypeOf(imi,LOCALE_EN_GB,!CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
    assertFalse(InputMethodUtils.containsSubtypeOf(imi,LOCALE_EN_GB,CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
  }
{
    final ArrayList<InputMethodSubtype> subtypes=new ArrayList<InputMethodSubtype>();
    subtypes.add(nonAutoFil);
    final InputMethodInfo imi=createDummyInputMethodInfo("com.android.apps.inputmethod.latin","com.android.apps.inputmethod.latin","DummyLatinIme",!IS_AUX,IS_DEFAULT,subtypes);
    assertTrue(InputMethodUtils.containsSubtypeOf(imi,LOCALE_FIL,!CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
    assertTrue(InputMethodUtils.containsSubtypeOf(imi,LOCALE_FIL,CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
    assertTrue(InputMethodUtils.containsSubtypeOf(imi,LOCALE_FIL_PH,!CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
    assertFalse(InputMethodUtils.containsSubtypeOf(imi,LOCALE_FIL_PH,CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
    assertFalse(InputMethodUtils.containsSubtypeOf(imi,LOCALE_FI,!CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
    assertFalse(InputMethodUtils.containsSubtypeOf(imi,LOCALE_FI,CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
    assertFalse(InputMethodUtils.containsSubtypeOf(imi,LOCALE_FI_FI,!CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
    assertFalse(InputMethodUtils.containsSubtypeOf(imi,LOCALE_FI_FI,CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
  }
{
    final ArrayList<InputMethodSubtype> subtypes=new ArrayList<InputMethodSubtype>();
    subtypes.add(nonAutoFilPH);
    final InputMethodInfo imi=createDummyInputMethodInfo("com.android.apps.inputmethod.latin","com.android.apps.inputmethod.latin","DummyLatinIme",!IS_AUX,IS_DEFAULT,subtypes);
    assertTrue(InputMethodUtils.containsSubtypeOf(imi,LOCALE_FIL,!CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
    assertFalse(InputMethodUtils.containsSubtypeOf(imi,LOCALE_FIL,CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
    assertTrue(InputMethodUtils.containsSubtypeOf(imi,LOCALE_FIL_PH,!CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
    assertTrue(InputMethodUtils.containsSubtypeOf(imi,LOCALE_FIL_PH,CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
    assertFalse(InputMethodUtils.containsSubtypeOf(imi,LOCALE_FI,!CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
    assertFalse(InputMethodUtils.containsSubtypeOf(imi,LOCALE_FI,CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
    assertFalse(InputMethodUtils.containsSubtypeOf(imi,LOCALE_FI_FI,!CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
    assertFalse(InputMethodUtils.containsSubtypeOf(imi,LOCALE_FI_FI,CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
  }
{
    final ArrayList<InputMethodSubtype> subtypes=new ArrayList<InputMethodSubtype>();
    subtypes.add(nonAutoIn);
    subtypes.add(nonAutoEnUS);
    final InputMethodInfo imi=createDummyInputMethodInfo("com.android.apps.inputmethod.latin","com.android.apps.inputmethod.latin","DummyLatinIme",!IS_AUX,IS_DEFAULT,subtypes);
    assertTrue(InputMethodUtils.containsSubtypeOf(imi,LOCALE_IN,!CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
    assertTrue(InputMethodUtils.containsSubtypeOf(imi,LOCALE_IN,CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
    assertTrue(InputMethodUtils.containsSubtypeOf(imi,LOCALE_ID,!CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
    assertTrue(InputMethodUtils.containsSubtypeOf(imi,LOCALE_ID,CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
  }
{
    final ArrayList<InputMethodSubtype> subtypes=new ArrayList<InputMethodSubtype>();
    subtypes.add(nonAutoId);
    subtypes.add(nonAutoEnUS);
    final InputMethodInfo imi=createDummyInputMethodInfo("com.android.apps.inputmethod.latin","com.android.apps.inputmethod.latin","DummyLatinIme",!IS_AUX,IS_DEFAULT,subtypes);
    assertTrue(InputMethodUtils.containsSubtypeOf(imi,LOCALE_IN,!CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
    assertFalse(InputMethodUtils.containsSubtypeOf(imi,LOCALE_IN,CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
    assertTrue(InputMethodUtils.containsSubtypeOf(imi,LOCALE_ID,!CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
    assertFalse(InputMethodUtils.containsSubtypeOf(imi,LOCALE_ID,CHECK_COUNTRY,SUBTYPE_MODE_KEYBOARD));
  }
}
