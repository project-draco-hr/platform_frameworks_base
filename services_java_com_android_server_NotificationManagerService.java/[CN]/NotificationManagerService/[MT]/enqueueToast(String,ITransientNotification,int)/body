{
  if (DBG)   Slog.i(TAG,"enqueueToast pkg=" + pkg + " callback="+ callback+ " duration="+ duration);
  if (pkg == null || callback == null) {
    Slog.e(TAG,"Not doing toast. pkg=" + pkg + " callback="+ callback);
    return;
  }
  final boolean isSystemToast=isCallerSystem() || ("android".equals(pkg));
  if (ENABLE_BLOCKED_TOASTS && !noteNotificationOp(pkg,Binder.getCallingUid())) {
    if (!isSystemToast) {
      Slog.e(TAG,"Suppressing toast from package " + pkg + " by user request.");
      return;
    }
  }
synchronized (mToastQueue) {
    int callingPid=Binder.getCallingPid();
    long callingId=Binder.clearCallingIdentity();
    try {
      ToastRecord record;
      int index=indexOfToastLocked(pkg,callback);
      if (index >= 0) {
        record=mToastQueue.get(index);
        record.update(duration);
      }
 else {
        if (!isSystemToast) {
          int count=0;
          final int N=mToastQueue.size();
          for (int i=0; i < N; i++) {
            final ToastRecord r=mToastQueue.get(i);
            if (r.pkg.equals(pkg)) {
              count++;
              if (count >= MAX_PACKAGE_NOTIFICATIONS) {
                Slog.e(TAG,"Package has already posted " + count + " toasts. Not showing more. Package="+ pkg);
                return;
              }
            }
          }
        }
        record=new ToastRecord(callingPid,pkg,callback,duration);
        mToastQueue.add(record);
        index=mToastQueue.size() - 1;
        keepProcessAliveLocked(callingPid);
      }
      if (index == 0) {
        showNextToastLocked();
      }
    }
  finally {
      Binder.restoreCallingIdentity(callingId);
    }
  }
}
