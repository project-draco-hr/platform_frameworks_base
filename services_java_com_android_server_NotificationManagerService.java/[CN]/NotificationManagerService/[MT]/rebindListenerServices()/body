{
  final int currentUser=ActivityManager.getCurrentUser();
  String flat=Settings.Secure.getStringForUser(mContext.getContentResolver(),Settings.Secure.ENABLED_NOTIFICATION_LISTENERS,currentUser);
  NotificationListenerInfo[] toRemove=new NotificationListenerInfo[mListeners.size()];
  final ArrayList<ComponentName> toAdd;
synchronized (mNotificationList) {
    toRemove=mListeners.toArray(toRemove);
    toAdd=new ArrayList<ComponentName>();
    final HashSet<ComponentName> newEnabled=new HashSet<ComponentName>();
    final HashSet<String> newPackages=new HashSet<String>();
    if (flat != null) {
      String[] components=flat.split(ENABLED_NOTIFICATION_LISTENERS_SEPARATOR);
      for (int i=0; i < components.length; i++) {
        final ComponentName component=ComponentName.unflattenFromString(components[i]);
        if (component != null) {
          newEnabled.add(component);
          toAdd.add(component);
          newPackages.add(component.getPackageName());
        }
      }
      mEnabledListenersForCurrentUser=newEnabled;
      mEnabledListenerPackageNames=newPackages;
    }
  }
  for (  NotificationListenerInfo info : toRemove) {
    final ComponentName component=info.component;
    final int oldUser=info.userid;
    Slog.v(TAG,"disabling notification listener for user " + oldUser + ": "+ component);
    unregisterListenerService(component,info.userid);
  }
  final int N=toAdd.size();
  for (int i=0; i < N; i++) {
    final ComponentName component=toAdd.get(i);
    Slog.v(TAG,"enabling notification listener for user " + currentUser + ": "+ component);
    registerListenerService(component,currentUser);
  }
}
