{
  ParserRuleContext _parentctx=_ctx;
  int _parentState=getState();
  ConstantExpressionContext _localctx=new ConstantExpressionContext(_ctx,_parentState);
  ConstantExpressionContext _prevctx=_localctx;
  int _startState=6;
  enterRecursionRule(_localctx,6,RULE_constantExpression,_p);
  try {
    int _alt;
    enterOuterAlt(_localctx,1);
{
{
        setState(51);
        identifier();
      }
      _ctx.stop=_input.LT(-1);
      setState(58);
      _errHandler.sync(this);
      _alt=getInterpreter().adaptivePredict(_input,2,_ctx);
      while (_alt != 2 && _alt != org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER) {
        if (_alt == 1) {
          if (_parseListeners != null)           triggerExitRuleEvent();
          _prevctx=_localctx;
{
{
              _localctx=new ConstantExpressionContext(_parentctx,_parentState);
              pushNewRecursionContext(_localctx,_startState,RULE_constantExpression);
              setState(53);
              if (!(precpred(_ctx,2)))               throw new FailedPredicateException(this,"precpred(_ctx, 2)");
              setState(54);
              match(T__15);
              setState(55);
              match(Identifier);
            }
          }
        }
        setState(60);
        _errHandler.sync(this);
        _alt=getInterpreter().adaptivePredict(_input,2,_ctx);
      }
    }
  }
 catch (  RecognitionException re) {
    _localctx.exception=re;
    _errHandler.reportError(this,re);
    _errHandler.recover(this,re);
  }
 finally {
    unrollRecursionContexts(_parentctx);
  }
  return _localctx;
}
