{
  ClassOrInterfaceTypeContext _localctx=new ClassOrInterfaceTypeContext(_ctx,getState());
  enterRule(_localctx,32,RULE_classOrInterfaceType);
  try {
    int _alt;
    enterOuterAlt(_localctx,1);
{
      setState(221);
      identifier();
      setState(223);
switch (getInterpreter().adaptivePredict(_input,16,_ctx)) {
case 1:
{
          setState(222);
          typeArguments();
        }
      break;
  }
  setState(232);
  _errHandler.sync(this);
  _alt=getInterpreter().adaptivePredict(_input,18,_ctx);
  while (_alt != 2 && _alt != org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER) {
    if (_alt == 1) {
{
{
          setState(225);
          match(T__15);
          setState(226);
          match(Identifier);
          setState(228);
switch (getInterpreter().adaptivePredict(_input,17,_ctx)) {
case 1:
{
              setState(227);
              typeArguments();
            }
          break;
      }
    }
  }
}
setState(234);
_errHandler.sync(this);
_alt=getInterpreter().adaptivePredict(_input,18,_ctx);
}
}
}
 catch (RecognitionException re) {
_localctx.exception=re;
_errHandler.reportError(this,re);
_errHandler.recover(this,re);
}
 finally {
exitRule();
}
return _localctx;
}
