{
  mInvalidated=false;
  if (mBitmap == null || (mUserDrawable == null && mUserIcon == null)) {
    return;
  }
  final Canvas canvas=new Canvas(mBitmap);
  canvas.drawColor(0,PorterDuff.Mode.CLEAR);
  if (mUserDrawable != null) {
    mUserDrawable.draw(canvas);
  }
 else   if (mUserIcon != null) {
    int saveId=canvas.save();
    canvas.concat(mIconMatrix);
    canvas.drawCircle(mUserIcon.getWidth() * 0.5f,mUserIcon.getHeight() * 0.5f,mIntrinsicRadius,mIconPaint);
    canvas.restoreToCount(saveId);
  }
  if (mFrameColor != null) {
    mFramePaint.setColor(mFrameColor.getColorForState(getState(),Color.TRANSPARENT));
  }
  if ((mFrameWidth + mFramePadding) > 0.001f) {
    float radius=mDisplayRadius - mPadding - mFrameWidth * 0.5f;
    canvas.drawCircle(getBounds().exactCenterX(),getBounds().exactCenterY(),radius,mFramePaint);
  }
  if ((mBadge != null) && (mBadgeRadius > 0.001f)) {
    final float badgeDiameter=mBadgeRadius * 2f;
    final float badgeTop=mBitmap.getHeight() - badgeDiameter;
    float badgeLeft=mBitmap.getWidth() - badgeDiameter;
    mBadge.setBounds((int)badgeLeft,(int)badgeTop,(int)(badgeLeft + badgeDiameter),(int)(badgeTop + badgeDiameter));
    final float borderRadius=mBadge.getBounds().width() * 0.5f + mBadgeMargin;
    canvas.drawCircle(badgeLeft + mBadgeRadius,badgeTop + mBadgeRadius,borderRadius,mClearPaint);
    mBadge.draw(canvas);
  }
}
