{
  StatusBarIconList iconList=new StatusBarIconList();
  ArrayList<IBinder> notificationKeys=new ArrayList<IBinder>();
  ArrayList<StatusBarNotification> notifications=new ArrayList<StatusBarNotification>();
  mCommandQueue=new CommandQueue(this,iconList);
  mBarService=IStatusBarService.Stub.asInterface(ServiceManager.getService(Context.STATUS_BAR_SERVICE));
  try {
    mBarService.registerStatusBar(mCommandQueue,iconList,notificationKeys,notifications);
  }
 catch (  RemoteException ex) {
  }
  int N=iconList.size();
  int viewIndex=0;
  for (int i=0; i < N; i++) {
    StatusBarIcon icon=iconList.getIcon(i);
    if (icon != null) {
      addIcon(iconList.getSlot(i),i,viewIndex,icon);
      viewIndex++;
    }
  }
  N=notificationKeys.size();
  if (N == notifications.size()) {
    for (int i=0; i < N; i++) {
      addNotification(notificationKeys.get(i),notifications.get(i));
    }
  }
 else {
    Log.wtf(TAG,"Notification list length mismatch: keys=" + N + " notifications="+ notifications.size());
  }
  addStatusBarView();
}
