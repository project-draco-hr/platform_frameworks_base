{
  int indexToSkipController=0;
  int indexToSkipSubscription=1;
  int[] testSubscriptions=new int[]{1,5,3};
  MobileSignalController[] mobileSignalControllers=new MobileSignalController[]{Mockito.mock(MobileSignalController.class),Mockito.mock(MobileSignalController.class),Mockito.mock(MobileSignalController.class)};
  mNetworkController.mMobileSignalControllers.clear();
  List<SubscriptionInfo> subscriptions=new ArrayList<>();
  for (int i=0; i < testSubscriptions.length; i++) {
    if (i != indexToSkipController) {
      mNetworkController.mMobileSignalControllers.put(testSubscriptions[i],mobileSignalControllers[i]);
    }
    if (i != indexToSkipSubscription) {
      SubscriptionInfo mockSubInfo=Mockito.mock(SubscriptionInfo.class);
      Mockito.when(mockSubInfo.getSubscriptionId()).thenReturn(testSubscriptions[i]);
      Mockito.when(mockSubInfo.getSimSlotIndex()).thenReturn(testSubscriptions[i]);
      subscriptions.add(mockSubInfo);
    }
  }
  mNetworkController.mListening=true;
  mNetworkController.setCurrentSubscriptions(subscriptions);
  for (int i=0; i < testSubscriptions.length; i++) {
    if (i == indexToSkipController) {
      assertTrue(mNetworkController.mMobileSignalControllers.containsKey(testSubscriptions[i]));
    }
 else     if (i == indexToSkipSubscription) {
      assertFalse(mNetworkController.mMobileSignalControllers.containsKey(testSubscriptions[i]));
    }
 else {
      Mockito.verify(mobileSignalControllers[i],Mockito.never()).unregisterListener();
    }
  }
}
