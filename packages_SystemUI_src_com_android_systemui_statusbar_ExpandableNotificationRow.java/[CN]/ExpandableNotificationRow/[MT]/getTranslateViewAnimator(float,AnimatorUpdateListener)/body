{
  if (areGutsExposed()) {
    return null;
  }
  AnimatorSet set=new AnimatorSet();
  if (mTranslateableViews != null) {
    for (int i=0; i < mTranslateableViews.size(); i++) {
      final View animView=mTranslateableViews.get(i);
      final ObjectAnimator translateAnim=ObjectAnimator.ofFloat(animView,"translationX",leftTarget);
      if (i == 0) {
        translateAnim.addUpdateListener(new AnimatorUpdateListener(){
          @Override public void onAnimationUpdate(          ValueAnimator animation){
            setTranslationForOutline((float)animation.getAnimatedValue());
            if (mSettingsIconRow != null) {
              mSettingsIconRow.updateSettingsIcons((float)animation.getAnimatedValue(),getMeasuredWidth());
            }
          }
        }
);
        if (listener != null) {
          translateAnim.addUpdateListener(listener);
        }
      }
      translateAnim.addListener(new AnimatorListenerAdapter(){
        @Override public void onAnimationEnd(        Animator anim){
          if (mSettingsIconRow != null && leftTarget == 0) {
            mSettingsIconRow.resetState();
          }
          mTranslateAnim=null;
        }
      }
);
      set.play(translateAnim);
    }
  }
  return set;
}
