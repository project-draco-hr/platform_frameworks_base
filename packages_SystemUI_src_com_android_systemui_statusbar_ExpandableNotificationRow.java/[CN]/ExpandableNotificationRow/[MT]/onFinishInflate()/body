{
  super.onFinishInflate();
  mPublicLayout=(NotificationContentView)findViewById(R.id.expandedPublic);
  mPublicLayout.setContainingNotification(this);
  mPrivateLayout=(NotificationContentView)findViewById(R.id.expanded);
  mPrivateLayout.setExpandClickListener(mExpandClickListener);
  mPrivateLayout.setContainingNotification(this);
  mPublicLayout.setExpandClickListener(mExpandClickListener);
  mSettingsIconRowStub=(ViewStub)findViewById(R.id.settings_icon_row_stub);
  mSettingsIconRowStub.setOnInflateListener(new ViewStub.OnInflateListener(){
    @Override public void onInflate(    ViewStub stub,    View inflated){
      mSettingsIconRow=(NotificationSettingsIconRow)inflated;
      mSettingsIconRow.setNotificationRowParent(ExpandableNotificationRow.this);
    }
  }
);
  mGutsStub=(ViewStub)findViewById(R.id.notification_guts_stub);
  mGutsStub.setOnInflateListener(new ViewStub.OnInflateListener(){
    @Override public void onInflate(    ViewStub stub,    View inflated){
      mGuts=(NotificationGuts)inflated;
      mGuts.setClipTopAmount(getClipTopAmount());
      mGuts.setActualHeight(getActualHeight());
      mGutsStub=null;
    }
  }
);
  mChildrenContainerStub=(ViewStub)findViewById(R.id.child_container_stub);
  mChildrenContainerStub.setOnInflateListener(new ViewStub.OnInflateListener(){
    @Override public void onInflate(    ViewStub stub,    View inflated){
      mChildrenContainer=(NotificationChildrenContainer)inflated;
      mChildrenContainer.setNotificationParent(ExpandableNotificationRow.this);
      mTranslateableViews.add(mChildrenContainer);
    }
  }
);
  mVetoButton=findViewById(R.id.veto);
  mTranslateableViews=new ArrayList<View>();
  for (int i=0; i < getChildCount(); i++) {
    mTranslateableViews.add(getChildAt(i));
  }
  mTranslateableViews.remove(mVetoButton);
  mTranslateableViews.remove(mSettingsIconRowStub);
  mTranslateableViews.remove(mChildrenContainerStub);
  mTranslateableViews.remove(mGutsStub);
}
