{
synchronized (mPRStack) {
    boolean rcdRegistered=false;
    final Iterator<DisplayInfoForServer> displayIterator=mRcDisplays.iterator();
    while (displayIterator.hasNext()) {
      final DisplayInfoForServer di=displayIterator.next();
      if (di.mRcDisplay.asBinder().equals(rcd.asBinder())) {
        di.mWantsPositionSync=wantsSync;
        rcdRegistered=true;
        break;
      }
    }
    if (!rcdRegistered) {
      return;
    }
    final Iterator<PlayerRecord> stackIterator=mPRStack.iterator();
    while (stackIterator.hasNext()) {
      final PlayerRecord prse=stackIterator.next();
      if (prse.getRcc() != null) {
        try {
          prse.getRcc().setWantsSyncForDisplay(rcd,wantsSync);
        }
 catch (        RemoteException e) {
          Log.e(TAG,"Error setting position sync flag for RCD on RCC: ",e);
        }
      }
    }
  }
}
