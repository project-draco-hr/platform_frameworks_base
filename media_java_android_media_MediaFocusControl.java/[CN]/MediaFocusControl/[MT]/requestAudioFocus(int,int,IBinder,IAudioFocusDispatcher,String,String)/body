{
  Log.i(TAG," AudioFocus  requestAudioFocus() from " + clientId);
  if (!cb.pingBinder()) {
    Log.e(TAG," AudioFocus DOA client for requestAudioFocus(), aborting.");
    return AudioManager.AUDIOFOCUS_REQUEST_FAILED;
  }
  if (mAppOps.noteOp(AppOpsManager.OP_TAKE_AUDIO_FOCUS,Binder.getCallingUid(),callingPackageName) != AppOpsManager.MODE_ALLOWED) {
    return AudioManager.AUDIOFOCUS_REQUEST_FAILED;
  }
synchronized (mAudioFocusLock) {
    if (!canReassignAudioFocus()) {
      return AudioManager.AUDIOFOCUS_REQUEST_FAILED;
    }
    AudioFocusDeathHandler afdh=new AudioFocusDeathHandler(cb);
    try {
      cb.linkToDeath(afdh,0);
    }
 catch (    RemoteException e) {
      Log.w(TAG,"AudioFocus  requestAudioFocus() could not link to " + cb + " binder death");
      return AudioManager.AUDIOFOCUS_REQUEST_FAILED;
    }
    if (!mFocusStack.empty() && mFocusStack.peek().hasSameClient(clientId)) {
      if (mFocusStack.peek().getGainRequest() == focusChangeHint) {
        cb.unlinkToDeath(afdh,0);
        return AudioManager.AUDIOFOCUS_REQUEST_GRANTED;
      }
      FocusRequester fr=mFocusStack.pop();
      fr.release();
    }
    removeFocusStackEntry(clientId,false);
    if (!mFocusStack.empty()) {
      propagateFocusLossFromGain_syncAf(focusChangeHint);
    }
    mFocusStack.push(new FocusRequester(mainStreamType,focusChangeHint,fd,cb,clientId,afdh,callingPackageName,Binder.getCallingUid()));
synchronized (mRCStack) {
      checkUpdateRemoteControlDisplay_syncAfRcs(RC_INFO_ALL);
    }
  }
  return AudioManager.AUDIOFOCUS_REQUEST_GRANTED;
}
