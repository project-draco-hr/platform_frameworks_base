{
  if (DEBUG_RC) {
    Log.d(TAG,"onReevaluateRemoteControlDisplays()");
  }
  final int currentUser=ActivityManager.getCurrentUser();
  final String enabledNotifListeners=Settings.Secure.getStringForUser(mContext.getContentResolver(),Settings.Secure.ENABLED_NOTIFICATION_LISTENERS,currentUser);
  if (DEBUG_RC) {
    Log.d(TAG," > enabled list: " + enabledNotifListeners);
  }
synchronized (mAudioFocusLock) {
synchronized (mPRStack) {
      final String[] enabledComponents;
      if (enabledNotifListeners == null) {
        enabledComponents=null;
      }
 else {
        enabledComponents=enabledNotifListeners.split(":");
      }
      final Iterator<DisplayInfoForServer> displayIterator=mRcDisplays.iterator();
      while (displayIterator.hasNext()) {
        final DisplayInfoForServer di=displayIterator.next();
        if (di.mClientNotifListComp != null) {
          boolean wasEnabled=di.mEnabled;
          di.mEnabled=isComponentInStringArray(di.mClientNotifListComp,enabledComponents);
          if (wasEnabled != di.mEnabled) {
            try {
              di.mRcDisplay.setEnabled(di.mEnabled);
              enableRemoteControlDisplayForClient_syncRcStack(di.mRcDisplay,di.mEnabled);
              if (di.mEnabled) {
                sendMsg(mEventHandler,MSG_RCDISPLAY_INIT_INFO,SENDMSG_QUEUE,di.mArtworkExpectedWidth,di.mArtworkExpectedHeight,di.mRcDisplay,0);
              }
            }
 catch (            RemoteException e) {
              Log.e(TAG,"Error en/disabling RCD: ",e);
            }
          }
        }
      }
    }
  }
}
