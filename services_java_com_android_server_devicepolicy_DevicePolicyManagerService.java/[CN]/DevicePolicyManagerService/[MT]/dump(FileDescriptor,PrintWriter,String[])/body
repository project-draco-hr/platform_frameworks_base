{
  if (mContext.checkCallingOrSelfPermission(android.Manifest.permission.DUMP) != PackageManager.PERMISSION_GRANTED) {
    pw.println("Permission Denial: can't dump DevicePolicyManagerService from from pid=" + Binder.getCallingPid() + ", uid="+ Binder.getCallingUid());
    return;
  }
  final Printer p=new PrintWriterPrinter(pw);
synchronized (this) {
    p.println("Current Device Policy Manager state:");
    int userCount=mUserData.size();
    for (int u=0; u < userCount; u++) {
      DevicePolicyData policy=getUserData(mUserData.keyAt(u));
      p.println("  Enabled Device Admins (User " + policy.mUserHandle + "):");
      final int N=policy.mAdminList.size();
      for (int i=0; i < N; i++) {
        ActiveAdmin ap=policy.mAdminList.get(i);
        if (ap != null) {
          pw.print("  ");
          pw.print(ap.info.getComponent().flattenToShortString());
          pw.println(":");
          ap.dump("    ",pw);
        }
      }
      pw.println(" ");
      pw.print("  mPasswordOwner=");
      pw.println(policy.mPasswordOwner);
    }
  }
}
