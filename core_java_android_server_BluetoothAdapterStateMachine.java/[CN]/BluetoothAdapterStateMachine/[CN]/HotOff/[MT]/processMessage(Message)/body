{
  if (DBG)   log("HotOff process message: " + message.what);
  boolean retValue=HANDLED;
switch (message.what) {
case USER_TURN_ON:
    if ((Boolean)message.obj) {
      mPersistSwitchOn=true;
    }
case TURN_ON_CONTINUE:
  mBluetoothService.switchConnectable(true);
transitionTo(mSwitching);
broadcastState(BluetoothAdapter.STATE_TURNING_ON);
break;
case AIRPLANE_MODE_ON:
case TURN_COLD:
mBluetoothService.shutoffBluetooth();
mEventLoop.stop();
transitionTo(mPowerOff);
broadcastState(BluetoothAdapter.STATE_OFF);
break;
case AIRPLANE_MODE_OFF:
if (getBluetoothPersistedSetting()) {
mBluetoothService.switchConnectable(true);
transitionTo(mSwitching);
broadcastState(BluetoothAdapter.STATE_TURNING_ON);
}
break;
case USER_TURN_OFF:
break;
default :
return NOT_HANDLED;
}
return retValue;
}
