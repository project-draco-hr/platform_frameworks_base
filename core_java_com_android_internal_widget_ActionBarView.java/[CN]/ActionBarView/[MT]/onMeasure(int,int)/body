{
  int widthMode=MeasureSpec.getMode(widthMeasureSpec);
  if (widthMode != MeasureSpec.EXACTLY) {
    throw new IllegalStateException(getClass().getSimpleName() + " can only be used " + "with android:layout_width=\"match_parent\" (or fill_parent)");
  }
  int heightMode=MeasureSpec.getMode(heightMeasureSpec);
  if (heightMode != MeasureSpec.AT_MOST) {
    throw new IllegalStateException(getClass().getSimpleName() + " can only be used " + "with android:layout_height=\"wrap_content\"");
  }
  int contentWidth=MeasureSpec.getSize(widthMeasureSpec);
  int availableWidth=contentWidth - getPaddingLeft() - getPaddingRight();
  final int height=mContentHeight - getPaddingTop() - getPaddingBottom();
  final int childSpecHeight=MeasureSpec.makeMeasureSpec(height,MeasureSpec.AT_MOST);
  if (mLogoView != null && mLogoView.getVisibility() != GONE) {
    availableWidth=measureChildView(mLogoView,availableWidth,childSpecHeight,mSpacing);
  }
  if (mIconView != null && mIconView.getVisibility() != GONE) {
    availableWidth=measureChildView(mIconView,availableWidth,childSpecHeight,mSpacing);
  }
  if (mMenuView != null) {
    availableWidth=measureChildView(mMenuView,availableWidth,childSpecHeight,0);
  }
switch (mNavigationMode) {
case ActionBar.NAVIGATION_MODE_STANDARD:
    if (mTitleLayout != null) {
      measureChildView(mTitleLayout,availableWidth,childSpecHeight,mSpacing);
    }
  break;
case ActionBar.NAVIGATION_MODE_DROPDOWN_LIST:
if (mSpinner != null) {
  mSpinner.measure(MeasureSpec.makeMeasureSpec(availableWidth,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY));
}
break;
case ActionBar.NAVIGATION_MODE_CUSTOM:
if (mCustomNavView != null) {
mCustomNavView.measure(MeasureSpec.makeMeasureSpec(availableWidth,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY));
}
break;
}
setMeasuredDimension(contentWidth,mContentHeight);
}
