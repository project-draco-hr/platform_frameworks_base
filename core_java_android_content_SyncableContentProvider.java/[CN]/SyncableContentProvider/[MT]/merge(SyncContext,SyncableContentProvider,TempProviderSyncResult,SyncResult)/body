{
  SQLiteDatabase db=mOpenHelper.getWritableDatabase();
  db.beginTransaction();
  try {
synchronized (this) {
      mIsMergeCancelled=false;
    }
    Iterable<? extends AbstractTableMerger> mergers=getMergers();
    try {
      for (      AbstractTableMerger merger : mergers) {
synchronized (this) {
          if (mIsMergeCancelled)           break;
          mCurrentMerger=merger;
        }
        merger.merge(context,getSyncingAccount(),diffs,result,syncResult,this);
      }
      if (mIsMergeCancelled)       return;
      if (diffs != null) {
        mSyncState.copySyncState(diffs.mOpenHelper.getReadableDatabase(),mOpenHelper.getWritableDatabase(),getSyncingAccount());
      }
    }
  finally {
synchronized (this) {
        mCurrentMerger=null;
      }
    }
    db.setTransactionSuccessful();
  }
  finally {
    db.endTransaction();
  }
}
