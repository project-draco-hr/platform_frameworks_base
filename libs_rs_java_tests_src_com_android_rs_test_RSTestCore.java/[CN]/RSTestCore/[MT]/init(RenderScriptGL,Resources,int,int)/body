{
  mRS=rs;
  mRes=res;
  mWidth=width;
  mHeight=height;
  mScript=new ScriptC_rslist(mRS,mRes,R.raw.rslist,true);
  unitTests=new ArrayList<UnitTest>();
  unitTests.add(new UT_primitives(mRes));
  unitTests.add(new UT_fp_mad(mRes));
  UnitTest[] uta=new UnitTest[unitTests.size()];
  uta=unitTests.toArray(uta);
  ListIterator<UnitTest> test_iter=unitTests.listIterator();
  while (test_iter.hasNext()) {
    UnitTest t=test_iter.next();
    t.start();
    try {
      t.join();
    }
 catch (    InterruptedException e) {
    }
  }
  mListAllocs=new ScriptField_ListAllocs_s(mRS,uta.length);
  for (int i=0; i < uta.length; i++) {
    ScriptField_ListAllocs_s.Item listElem=new ScriptField_ListAllocs_s.Item();
    listElem.text=Allocation.createFromString(mRS,uta[i].name);
    listElem.result=uta[i].result;
    mListAllocs.set(listElem,i,false);
  }
  mListAllocs.copyAll();
  mScript.bind_gList(mListAllocs);
  mFont=Font.createFromFamily(mRS,mRes,"serif",Font.Style.BOLD,8);
  mScript.set_gFont(mFont);
  mRS.contextBindRootScript(mScript);
  mRS.finish();
}
