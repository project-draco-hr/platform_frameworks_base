{
  if (TextUtils.isEmpty(spec))   return null;
  try {
    final StepFunction rt=new StepFunction();
    rt.mSpec=spec;
    final String[] tokens=spec.split(",");
    rt.mSteps=new long[tokens.length - 1];
    rt.mValues=new long[tokens.length - 1];
    for (int i=0; i < tokens.length - 1; i++) {
      final Matcher m=PATTERN.matcher(tokens[i]);
      if (!m.matches())       throw new IllegalArgumentException("Bad token: " + tokens[i]);
      rt.mSteps[i]=Long.parseLong(m.group(1));
      rt.mValues[i]=Long.parseLong(m.group(3));
    }
    rt.mDefault=Long.parseLong(tokens[tokens.length - 1]);
    return rt;
  }
 catch (  RuntimeException e) {
    Log.w(TAG,"Error parsing spec: " + spec,e);
    return null;
  }
}
