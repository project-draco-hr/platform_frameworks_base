{
  for (  String instructionSet : instructionSets) {
    if (!isValidInstructionSet(instructionSet)) {
      Slog.e(TAG,"Invalid instruction set: " + instructionSet);
      return -1;
    }
  }
  StringBuilder builder=new StringBuilder("getsize");
  builder.append(' ');
  builder.append(pkgName);
  builder.append(' ');
  builder.append(persona);
  builder.append(' ');
  builder.append(apkPath);
  builder.append(' ');
  builder.append(libDirPath != null ? libDirPath : "!");
  builder.append(' ');
  builder.append(fwdLockApkPath != null ? fwdLockApkPath : "!");
  builder.append(' ');
  builder.append(asecPath != null ? asecPath : "!");
  builder.append(' ');
  builder.append(instructionSets[0]);
  String s=mInstaller.transact(builder.toString());
  String res[]=s.split(" ");
  if ((res == null) || (res.length != 5)) {
    return -1;
  }
  try {
    pStats.codeSize=Long.parseLong(res[1]);
    pStats.dataSize=Long.parseLong(res[2]);
    pStats.cacheSize=Long.parseLong(res[3]);
    pStats.externalCodeSize=Long.parseLong(res[4]);
    return Integer.parseInt(res[0]);
  }
 catch (  NumberFormatException e) {
    return -1;
  }
}
