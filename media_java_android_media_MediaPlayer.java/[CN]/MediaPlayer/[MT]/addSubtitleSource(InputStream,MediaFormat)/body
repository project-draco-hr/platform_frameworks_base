{
  final InputStream fIs=is;
  final MediaFormat fFormat=format;
synchronized (mOpenSubtitleSources) {
    mOpenSubtitleSources.add(is);
  }
  final HandlerThread thread=new HandlerThread("SubtitleReadThread",Process.THREAD_PRIORITY_BACKGROUND + Process.THREAD_PRIORITY_MORE_FAVORABLE);
  thread.start();
  Handler handler=new Handler(thread.getLooper());
  handler.post(new Runnable(){
    private int addTrack(){
      if (fIs == null || mSubtitleController == null) {
        return MEDIA_INFO_UNSUPPORTED_SUBTITLE;
      }
      SubtitleTrack track=mSubtitleController.addTrack(fFormat);
      if (track == null) {
        return MEDIA_INFO_UNSUPPORTED_SUBTITLE;
      }
      Scanner scanner=new Scanner(fIs,"UTF-8");
      String contents=scanner.useDelimiter("\\A").next();
synchronized (mOpenSubtitleSources) {
        mOpenSubtitleSources.remove(fIs);
      }
      scanner.close();
      mOutOfBandSubtitleTracks.add(track);
      track.onData(contents,true,~0);
      return MEDIA_INFO_EXTERNAL_METADATA_UPDATE;
    }
    public void run(){
      int res=addTrack();
      if (mEventHandler != null) {
        Message m=mEventHandler.obtainMessage(MEDIA_INFO,res,0,null);
        mEventHandler.sendMessage(m);
      }
      thread.getLooper().quitSafely();
    }
  }
);
}
