{
  mCurrEvent=MotionEvent.obtain(curr);
  mRotateDegrees=-1;
  mCurrLen=-1;
  mPrevLen=-1;
  mScaleFactor=-1;
  final MotionEvent prev=mPrevEvent;
  float px0=prev.getX(0);
  float py0=prev.getY(0);
  float px1=prev.getX(1);
  float py1=prev.getY(1);
  float cx0=curr.getX(0);
  float cy0=curr.getY(0);
  float cx1=curr.getX(1);
  float cy1=curr.getY(1);
  final float dx0=cx0 - px0;
  final float dy0=cy0 - py0;
  final float dx1=cx1 - px1;
  final float dy1=cy1 - py1;
  if (cx0 == cx1) {
    if (Math.abs(dx0) > mPointerJumpLimit) {
      cx0=px0;
    }
 else     if (Math.abs(dx1) > mPointerJumpLimit) {
      cx1=px1;
    }
  }
 else   if (cy0 == cy1) {
    if (Math.abs(dy0) > mPointerJumpLimit) {
      cy0=py0;
    }
 else     if (Math.abs(dy1) > mPointerJumpLimit) {
      cy1=py1;
    }
  }
  final float pvx=px1 - px0;
  final float pvy=py1 - py0;
  final float cvx=cx1 - cx0;
  final float cvy=cy1 - cy0;
  mPrevFingerDiffX=pvx;
  mPrevFingerDiffY=pvy;
  mCurrFingerDiffX=cvx;
  mCurrFingerDiffY=cvy;
  final float pmidx=px0 + pvx * 0.5f;
  final float pmidy=py0 + pvy * 0.5f;
  final float cmidx=cx0 + cvx * 0.5f;
  final float cmidy=cy0 + cvy * 0.5f;
  mCenterX=cmidx;
  mCenterY=cmidy;
  mTransX=cmidx - pmidx;
  mTransY=cmidy - pmidy;
}
