{
  final MatrixCursor result=new MatrixCursor(resolveDocumentProjection(projection));
  final File parent;
synchronized (mRootsLock) {
    parent=mIdToPath.get(rootId);
  }
  final LinkedList<File> pending=new LinkedList<File>();
  pending.add(parent);
  while (!pending.isEmpty() && result.getCount() < 24) {
    final File file=pending.removeFirst();
    if (file.isDirectory()) {
      for (      File child : file.listFiles()) {
        pending.add(child);
      }
    }
    if (file.getName().toLowerCase().contains(query)) {
      includeFile(result,null,file);
    }
  }
  return result;
}
