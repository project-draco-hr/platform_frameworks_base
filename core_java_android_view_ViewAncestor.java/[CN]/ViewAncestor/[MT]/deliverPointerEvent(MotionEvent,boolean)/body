{
  if (ViewDebug.DEBUG_LATENCY) {
    mInputEventDeliverTimeNanos=System.nanoTime();
  }
  if (mInputEventConsistencyVerifier != null) {
    if (event.isTouchEvent()) {
      mInputEventConsistencyVerifier.onTouchEvent(event,0);
    }
 else {
      mInputEventConsistencyVerifier.onGenericMotionEvent(event,0);
    }
  }
  if (mView == null || !mAdded) {
    finishMotionEvent(event,sendDone,false);
    return;
  }
  if (mTranslator != null) {
    mTranslator.translateEventInScreenToAppWindow(event);
  }
  boolean isDown=event.getAction() == MotionEvent.ACTION_DOWN;
  if (isDown) {
    ensureTouchMode(true);
  }
  if (mCurScrollY != 0) {
    event.offsetLocation(0,mCurScrollY);
  }
  if (MEASURE_LATENCY) {
    lt.sample("A Dispatching PointerEvents",System.nanoTime() - event.getEventTimeNano());
  }
  mLastTouchPoint.x=event.getRawX();
  mLastTouchPoint.y=event.getRawY();
  boolean handled=mView.dispatchPointerEvent(event);
  if (MEASURE_LATENCY) {
    lt.sample("B Dispatched PointerEvents ",System.nanoTime() - event.getEventTimeNano());
  }
  if (handled) {
    finishMotionEvent(event,sendDone,true);
    return;
  }
  final int edgeFlags=event.getEdgeFlags();
  if (edgeFlags != 0 && mView instanceof ViewGroup) {
    final int edgeSlop=mViewConfiguration.getScaledEdgeSlop();
    int direction=View.FOCUS_UP;
    int x=(int)event.getX();
    int y=(int)event.getY();
    final int[] deltas=new int[2];
    if ((edgeFlags & MotionEvent.EDGE_TOP) != 0) {
      direction=View.FOCUS_DOWN;
      if ((edgeFlags & MotionEvent.EDGE_LEFT) != 0) {
        deltas[0]=edgeSlop;
        x+=edgeSlop;
      }
 else       if ((edgeFlags & MotionEvent.EDGE_RIGHT) != 0) {
        deltas[0]=-edgeSlop;
        x-=edgeSlop;
      }
    }
 else     if ((edgeFlags & MotionEvent.EDGE_BOTTOM) != 0) {
      direction=View.FOCUS_UP;
      if ((edgeFlags & MotionEvent.EDGE_LEFT) != 0) {
        deltas[0]=edgeSlop;
        x+=edgeSlop;
      }
 else       if ((edgeFlags & MotionEvent.EDGE_RIGHT) != 0) {
        deltas[0]=-edgeSlop;
        x-=edgeSlop;
      }
    }
 else     if ((edgeFlags & MotionEvent.EDGE_LEFT) != 0) {
      direction=View.FOCUS_RIGHT;
    }
 else     if ((edgeFlags & MotionEvent.EDGE_RIGHT) != 0) {
      direction=View.FOCUS_LEFT;
    }
    View nearest=FocusFinder.getInstance().findNearestTouchable(((ViewGroup)mView),x,y,direction,deltas);
    if (nearest != null) {
      event.offsetLocation(deltas[0],deltas[1]);
      event.setEdgeFlags(0);
      if (mView.dispatchPointerEvent(event)) {
        finishMotionEvent(event,sendDone,true);
        return;
      }
    }
  }
  finishMotionEvent(event,sendDone,false);
}
