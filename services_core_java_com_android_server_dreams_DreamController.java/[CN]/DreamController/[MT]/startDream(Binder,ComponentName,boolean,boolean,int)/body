{
  stopDream(true);
  Trace.traceBegin(Trace.TRACE_TAG_POWER,"startDream");
  try {
    mContext.sendBroadcastAsUser(mCloseNotificationShadeIntent,UserHandle.ALL);
    Slog.i(TAG,"Starting dream: name=" + name + ", isTest="+ isTest+ ", canDoze="+ canDoze+ ", userId="+ userId);
    mCurrentDream=new DreamRecord(token,name,isTest,canDoze,userId);
    mDreamStartTime=SystemClock.elapsedRealtime();
    MetricsLogger.visible(mContext,mCurrentDream.mCanDoze ? MetricsLogger.DOZING : MetricsLogger.DREAMING);
    try {
      mIWindowManager.addWindowToken(token,WindowManager.LayoutParams.TYPE_DREAM);
    }
 catch (    RemoteException ex) {
      Slog.e(TAG,"Unable to add window token for dream.",ex);
      stopDream(true);
      return;
    }
    Intent intent=new Intent(DreamService.SERVICE_INTERFACE);
    intent.setComponent(name);
    intent.addFlags(Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS);
    try {
      if (!mContext.bindServiceAsUser(intent,mCurrentDream,Context.BIND_AUTO_CREATE | Context.BIND_FOREGROUND_SERVICE,new UserHandle(userId))) {
        Slog.e(TAG,"Unable to bind dream service: " + intent);
        stopDream(true);
        return;
      }
    }
 catch (    SecurityException ex) {
      Slog.e(TAG,"Unable to bind dream service: " + intent,ex);
      stopDream(true);
      return;
    }
    mCurrentDream.mBound=true;
    mHandler.postDelayed(mStopUnconnectedDreamRunnable,DREAM_CONNECTION_TIMEOUT);
  }
  finally {
    Trace.traceEnd(Trace.TRACE_TAG_POWER);
  }
}
