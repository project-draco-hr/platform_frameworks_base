{
  if (mResourceData[index] == null) {
    return null;
  }
  ResourceValue resValue=mResourceData[index];
  String value=resValue.getValue();
  if (value == null) {
    return null;
  }
  if (RenderResources.REFERENCE_NULL.equals(value)) {
    return null;
  }
  File f=new File(value);
  if (f.isFile()) {
    try {
      KXmlParser parser=new KXmlParser();
      parser.setFeature(XmlPullParser.FEATURE_PROCESS_NAMESPACES,true);
      parser.setInput(new FileInputStream(f),"UTF-8");
      BridgeXmlBlockParser blockParser=new BridgeXmlBlockParser(parser,mContext,resValue.isFramework());
      try {
        return ColorStateList.createFromXml(mContext.getResources(),blockParser);
      }
  finally {
        blockParser.ensurePopped();
      }
    }
 catch (    XmlPullParserException e) {
      Bridge.getLog().error(LayoutLog.TAG_BROKEN,"Failed to configure parser for " + value,e,null);
      return null;
    }
catch (    Exception e) {
      Bridge.getLog().error(LayoutLog.TAG_RESOURCES_READ,"Failed to parse file " + value,e,null);
      return null;
    }
  }
  try {
    int color=ResourceHelper.getColor(value);
    return ColorStateList.valueOf(color);
  }
 catch (  NumberFormatException e) {
    Bridge.getLog().error(LayoutLog.TAG_RESOURCES_FORMAT,e.getMessage(),e,null);
  }
  return null;
}
