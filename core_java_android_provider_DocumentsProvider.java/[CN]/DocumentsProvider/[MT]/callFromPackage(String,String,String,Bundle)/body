{
  if (!method.startsWith("android:")) {
    return super.callFromPackage(callingPackage,method,arg,extras);
  }
  getContext().enforceCallingOrSelfPermission(android.Manifest.permission.MANAGE_DOCUMENTS,"Document management");
  final Bundle out=new Bundle();
  try {
    if (METHOD_GET_ROOTS.equals(method)) {
      final List<DocumentRoot> roots=getDocumentRoots();
      out.putParcelableList(EXTRA_ROOTS,roots);
    }
 else     if (METHOD_CREATE_DOCUMENT.equals(method)) {
      final String docId=extras.getString(DocumentColumns.DOC_ID);
      final String mimeType=extras.getString(DocumentColumns.MIME_TYPE);
      final String displayName=extras.getString(DocumentColumns.DISPLAY_NAME);
      final String newDocId=createDocument(docId,mimeType,displayName);
      out.putString(DocumentColumns.DOC_ID,newDocId);
    }
 else     if (METHOD_RENAME_DOCUMENT.equals(method)) {
      final String docId=extras.getString(DocumentColumns.DOC_ID);
      final String displayName=extras.getString(DocumentColumns.DISPLAY_NAME);
      renameDocument(docId,displayName);
    }
 else     if (METHOD_DELETE_DOCUMENT.equals(method)) {
      final String docId=extras.getString(DocumentColumns.DOC_ID);
      deleteDocument(docId);
    }
 else {
      throw new UnsupportedOperationException("Method not supported " + method);
    }
  }
 catch (  FileNotFoundException e) {
    throw new IllegalStateException("Failed call " + method,e);
  }
  return out;
}
