{
  if (!method.startsWith("android:")) {
    return super.call(method,arg,extras);
  }
  final Uri documentUri=extras.getParcelable(DocumentsContract.EXTRA_URI);
  final String authority=documentUri.getAuthority();
  final String documentId=DocumentsContract.getDocumentId(documentUri);
  if (!mAuthority.equals(authority)) {
    throw new SecurityException("Requested authority " + authority + " doesn't match provider "+ mAuthority);
  }
  enforceVia(documentUri);
  final Bundle out=new Bundle();
  try {
    if (METHOD_CREATE_DOCUMENT.equals(method)) {
      enforceWritePermissionInner(documentUri);
      final String mimeType=extras.getString(Document.COLUMN_MIME_TYPE);
      final String displayName=extras.getString(Document.COLUMN_DISPLAY_NAME);
      final String newDocumentId=createDocument(documentId,mimeType,displayName);
      final Uri newDocumentUri=DocumentsContract.buildDocumentMaybeViaUri(documentUri,newDocumentId);
      out.putParcelable(DocumentsContract.EXTRA_URI,newDocumentUri);
    }
 else     if (METHOD_DELETE_DOCUMENT.equals(method)) {
      enforceWritePermissionInner(documentUri);
      deleteDocument(documentId);
      revokeDocumentPermission(documentId);
    }
 else {
      throw new UnsupportedOperationException("Method not supported " + method);
    }
  }
 catch (  FileNotFoundException e) {
    throw new IllegalStateException("Failed call " + method,e);
  }
  return out;
}
