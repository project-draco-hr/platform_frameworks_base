{
  double thetaD=Math.toRadians(theta);
  double cosTheta=Math.cos(thetaD);
  double sinTheta=Math.sin(thetaD);
  double x0p=(x0 * cosTheta + y0 * sinTheta) / a;
  double y0p=(-x0 * sinTheta + y0 * cosTheta) / b;
  double x1p=(x1 * cosTheta + y1 * sinTheta) / a;
  double y1p=(-x1 * sinTheta + y1 * cosTheta) / b;
  double dx=x0p - x1p;
  double dy=y0p - y1p;
  double xm=(x0p + x1p) / 2;
  double ym=(y0p + y1p) / 2;
  double dsq=dx * dx + dy * dy;
  if (dsq == 0.0) {
    Log.w(LOGTAG," Points are coincident");
    return;
  }
  double disc=1.0 / dsq - 1.0 / 4.0;
  if (disc < 0.0) {
    Log.w(LOGTAG,"Points are too far apart " + dsq);
    float adjust=(float)(Math.sqrt(dsq) / 1.99999);
    drawArc(p,x0,y0,x1,y1,a * adjust,b * adjust,theta,isMoreThanHalf,isPositiveArc);
    return;
  }
  double s=Math.sqrt(disc);
  double sdx=s * dx;
  double sdy=s * dy;
  double cx;
  double cy;
  if (isMoreThanHalf == isPositiveArc) {
    cx=xm - sdy;
    cy=ym + sdx;
  }
 else {
    cx=xm + sdy;
    cy=ym - sdx;
  }
  double eta0=Math.atan2((y0p - cy),(x0p - cx));
  double eta1=Math.atan2((y1p - cy),(x1p - cx));
  double sweep=(eta1 - eta0);
  if (isPositiveArc != (sweep >= 0)) {
    if (sweep > 0) {
      sweep-=2 * Math.PI;
    }
 else {
      sweep+=2 * Math.PI;
    }
  }
  cx*=a;
  cy*=b;
  double tcx=cx;
  cx=cx * cosTheta - cy * sinTheta;
  cy=tcx * sinTheta + cy * cosTheta;
  arcToBezier(p,cx,cy,a,b,x0,y0,thetaD,eta0,sweep);
}
