{
  StringBuilder sb=new StringBuilder();
  sb.append("DisplayInfo{\"");
  sb.append(name);
  sb.append("\", app ");
  sb.append(appWidth);
  sb.append(" x ");
  sb.append(appHeight);
  sb.append(", real ");
  sb.append(logicalWidth);
  sb.append(" x ");
  sb.append(logicalHeight);
  if (overscanLeft != 0 || overscanTop != 0 || overscanRight != 0 || overscanBottom != 0) {
    sb.append(", overscan (");
    sb.append(overscanLeft);
    sb.append(",");
    sb.append(overscanTop);
    sb.append(",");
    sb.append(overscanRight);
    sb.append(",");
    sb.append(overscanBottom);
    sb.append(")");
  }
  sb.append(", largest app ");
  sb.append(largestNominalAppWidth);
  sb.append(" x ");
  sb.append(largestNominalAppHeight);
  sb.append(", smallest app ");
  sb.append(smallestNominalAppWidth);
  sb.append(" x ");
  sb.append(smallestNominalAppHeight);
  sb.append(", ");
  sb.append(refreshRate);
  sb.append(" fps, rotation ");
  sb.append(rotation);
  sb.append(", density ");
  sb.append(logicalDensityDpi);
  sb.append(" (");
  sb.append(physicalXDpi);
  sb.append(" x ");
  sb.append(physicalYDpi);
  sb.append(") dpi, layerStack ");
  sb.append(layerStack);
  sb.append(", appVsyncOff ");
  sb.append(appVsyncOffsetNanos);
  sb.append(", presDeadline ");
  sb.append(presentationDeadlineNanos);
  sb.append(", type ");
  sb.append(Display.typeToString(type));
  if (address != null) {
    sb.append(", address ").append(address);
  }
  sb.append(", state ");
  sb.append(Display.stateToString(state));
  if (ownerUid != 0 || ownerPackageName != null) {
    sb.append(", owner ").append(ownerPackageName);
    sb.append(" (uid ").append(ownerUid).append(")");
  }
  sb.append(flagsToString(flags));
  sb.append("}");
  return sb.toString();
}
