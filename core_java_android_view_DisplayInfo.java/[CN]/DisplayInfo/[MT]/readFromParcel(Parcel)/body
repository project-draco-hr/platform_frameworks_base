{
  layerStack=source.readInt();
  flags=source.readInt();
  type=source.readInt();
  address=source.readString();
  name=source.readString();
  appWidth=source.readInt();
  appHeight=source.readInt();
  smallestNominalAppWidth=source.readInt();
  smallestNominalAppHeight=source.readInt();
  largestNominalAppWidth=source.readInt();
  largestNominalAppHeight=source.readInt();
  logicalWidth=source.readInt();
  logicalHeight=source.readInt();
  overscanLeft=source.readInt();
  overscanTop=source.readInt();
  overscanRight=source.readInt();
  overscanBottom=source.readInt();
  rotation=source.readInt();
  modeId=source.readInt();
  defaultModeId=source.readInt();
  int nModes=source.readInt();
  supportedModes=new Display.Mode[nModes];
  for (int i=0; i < nModes; i++) {
    supportedModes[i]=Display.Mode.CREATOR.createFromParcel(source);
  }
  colorTransformId=source.readInt();
  defaultColorTransformId=source.readInt();
  int nColorTransforms=source.readInt();
  supportedColorTransforms=new Display.ColorTransform[nColorTransforms];
  for (int i=0; i < nColorTransforms; i++) {
    supportedColorTransforms[i]=Display.ColorTransform.CREATOR.createFromParcel(source);
  }
  hdrCapabilities=Display.HdrCapabilities.CREATOR.createFromParcel(source);
  logicalDensityDpi=source.readInt();
  physicalXDpi=source.readFloat();
  physicalYDpi=source.readFloat();
  appVsyncOffsetNanos=source.readLong();
  presentationDeadlineNanos=source.readLong();
  state=source.readInt();
  ownerUid=source.readInt();
  ownerPackageName=source.readString();
  uniqueId=source.readString();
}
