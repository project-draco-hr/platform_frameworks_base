{
  super.onCreate(savedInstanceState);
  Intent intent=getIntent();
  Bundle bundle=intent.getExtras();
  if (bundle == null) {
    if (sOsuService == null) {
      Intent serviceIntent=new Intent(this,OSUService.class);
      serviceIntent.putExtra(ACTION_KEY,"dummy-key");
      startService(serviceIntent);
      return;
    }
    List<OSUInfo> osuInfos=sOsuService.getOsuInfos();
    setContentView(R.layout.activity_main);
    Log.d("osu","osu count:" + osuInfos.size());
    View noOsuView=findViewById(R.id.no_osu);
    if (osuInfos.size() > 0) {
      noOsuView.setVisibility(View.GONE);
      osuListAdapter=new OsuListAdapter2(this,osuInfos);
      osuListView=(ListView)findViewById(R.id.profile_list);
      osuListView.setAdapter(osuListAdapter);
      osuListView.setOnItemClickListener(new AdapterView.OnItemClickListener(){
        @Override public void onItemClick(        AdapterView<?> adapterView,        View view,        int position,        long id){
          OSUInfo osuData=(OSUInfo)adapterView.getAdapter().getItem(position);
          Log.d("osu","launch osu:" + osuData.getName(LOCALE) + " id:"+ osuData.getOsuID());
          sOsuService.selectOsu(osuData.getOsuID());
          finish();
        }
      }
);
    }
 else {
      noOsuView.setVisibility(View.VISIBLE);
    }
  }
 else   if (intent.getAction().equals(AppBridge.ACTION_OSU_NOTIFICATION)) {
    if (bundle.containsKey(AppBridge.OSU_COUNT)) {
      showOsuCount(bundle.getInt("osu-count",0),Collections.<OSUInfo>emptyList());
    }
 else     if (bundle.containsKey(AppBridge.PROV_SUCCESS)) {
      showStatus(bundle.getBoolean(AppBridge.PROV_SUCCESS),bundle.getString(AppBridge.SP_NAME),bundle.getString(AppBridge.PROV_MESSAGE),null);
    }
 else     if (bundle.containsKey(AppBridge.DEAUTH)) {
      showDeauth(bundle.getString(AppBridge.SP_NAME),bundle.getBoolean(AppBridge.DEAUTH),bundle.getInt(AppBridge.DEAUTH_DELAY),bundle.getString(AppBridge.DEAUTH_URL));
    }
  }
}
