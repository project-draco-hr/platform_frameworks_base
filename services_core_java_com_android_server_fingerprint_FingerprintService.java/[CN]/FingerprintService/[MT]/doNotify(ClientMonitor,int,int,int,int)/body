{
  ContentResolver contentResolver=mContext.getContentResolver();
  boolean operationCompleted=false;
switch (type) {
case FINGERPRINT_ERROR:
{
      final int error=arg1;
      clientMonitor.sendError(error);
      removeClient(clientMonitor);
      operationCompleted=true;
    }
  break;
case FINGERPRINT_ACQUIRED:
clientMonitor.sendAcquired(arg1);
break;
case FINGERPRINT_AUTHENTICATED:
{
final int fpId=arg1;
final int groupId=arg2;
clientMonitor.sendAuthenticated(fpId,groupId);
if (fpId == 0) {
if (clientMonitor == mAuthClient) {
  operationCompleted=handleFailedAttempt(clientMonitor);
}
}
 else {
mLockoutReset.run();
}
}
break;
case FINGERPRINT_TEMPLATE_ENROLLING:
{
final int fpId=arg1;
final int groupId=arg2;
final int remaining=arg3;
clientMonitor.sendEnrollResult(fpId,groupId,remaining);
if (remaining == 0) {
addTemplateForUser(clientMonitor,contentResolver,fpId);
operationCompleted=true;
}
}
break;
case FINGERPRINT_TEMPLATE_REMOVED:
{
final int fingerId=arg1;
final int groupId=arg2;
removeTemplateForUser(clientMonitor,contentResolver,fingerId);
if (fingerId == 0) {
operationCompleted=true;
}
 else {
clientMonitor.sendRemoved(fingerId,groupId);
}
}
break;
}
return operationCompleted;
}
