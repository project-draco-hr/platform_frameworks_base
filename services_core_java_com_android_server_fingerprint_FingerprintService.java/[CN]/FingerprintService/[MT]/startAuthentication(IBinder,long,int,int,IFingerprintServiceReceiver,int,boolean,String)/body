{
  updateActiveGroup(groupId,opPackageName);
  if (DEBUG)   Slog.v(TAG,"startAuthentication(" + opPackageName + ")");
  AuthenticationClient client=new AuthenticationClient(getContext(),mHalDeviceId,token,receiver,callingUserId,groupId,opId,restricted,opPackageName){
    @Override public boolean handleFailedAttempt(){
      mFailedAttempts++;
      if (inLockoutMode()) {
        scheduleLockoutReset();
        return true;
      }
      return false;
    }
    @Override public void resetFailedAttempts(){
      FingerprintService.this.resetFailedAttempts();
    }
    @Override public void notifyUserActivity(){
      FingerprintService.this.userActivity();
    }
    @Override public IFingerprintDaemon getFingerprintDaemon(){
      return FingerprintService.this.getFingerprintDaemon();
    }
  }
;
  if (inLockoutMode()) {
    Slog.v(TAG,"In lockout mode; disallowing authentication");
    if (!client.onError(FingerprintManager.FINGERPRINT_ERROR_LOCKOUT)) {
      Slog.w(TAG,"Cannot send timeout message to client");
    }
    return;
  }
  startClient(client,true);
}
