{
  try {
    ActivityManagerNative.getDefault().registerUserSwitchObserver(new SynchronousUserSwitchObserver(){
      @Override public void onUserSwitching(      int newUserId) throws RemoteException {
        mHandler.obtainMessage(MSG_USER_SWITCHING,newUserId,0).sendToTarget();
        if (reply != null) {
          try {
            reply.sendResult(null);
          }
 catch (          RemoteException e) {
          }
        }
      }
      @Override public void onUserSwitchComplete(      int newUserId) throws RemoteException {
      }
      @Override public void onForegroundProfileSwitch(      int newProfileId){
      }
    }
);
  }
 catch (  RemoteException e) {
    Slog.w(TAG,"Failed to listen for user switching event",e);
  }
}
