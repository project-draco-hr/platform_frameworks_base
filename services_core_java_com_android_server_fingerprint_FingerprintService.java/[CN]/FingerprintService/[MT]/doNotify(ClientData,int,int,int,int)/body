{
  if (clientData.receiver == null) {
    if (DEBUG)     Slog.v(TAG,"receiver not registered!!");
    return false;
  }
  ContentResolver contentResolver=mContext.getContentResolver();
  boolean operationCompleted=false;
switch (type) {
case FINGERPRINT_ERROR:
    clientData.receiver.onError(mHalDeviceId,arg1);
  if (arg1 == FingerprintManager.FINGERPRINT_ERROR_CANCELED) {
    if (mEnrollClient != null) {
      mEnrollClient.destroy();
      mEnrollClient=null;
    }
    if (mAuthClient != null) {
      mAuthClient.destroy();
      mAuthClient=null;
    }
  }
operationCompleted=true;
break;
case FINGERPRINT_ACQUIRED:
clientData.receiver.onAcquired(mHalDeviceId,arg1);
break;
case FINGERPRINT_PROCESSED:
clientData.receiver.onProcessed(mHalDeviceId,arg1,arg2);
operationCompleted=true;
break;
case FINGERPRINT_TEMPLATE_ENROLLING:
{
final int fpId=arg1;
final int groupId=arg2;
final int remaining=arg3;
clientData.receiver.onEnrollResult(mHalDeviceId,fpId,groupId,remaining);
if (remaining == 0) {
addTemplateForUser(clientData,contentResolver,fpId);
operationCompleted=true;
}
}
break;
case FINGERPRINT_TEMPLATE_REMOVED:
{
final int fingerId=arg1;
final int groupId=arg2;
removeTemplateForUser(clientData,contentResolver,fingerId);
if (fingerId == 0) {
operationCompleted=true;
}
 else {
clientData.receiver.onRemoved(mHalDeviceId,fingerId,groupId);
}
}
break;
}
return operationCompleted;
}
