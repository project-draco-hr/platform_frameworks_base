{
  if (mMessageStreamer != null) {
    return;
  }
  if (mCachedException != null) {
    return;
  }
  if (mKey == null) {
    throw new IllegalStateException("Not initialized");
  }
  KeymasterArguments keymasterInputArgs=new KeymasterArguments();
  addAlgorithmSpecificParametersToBegin(keymasterInputArgs);
  OperationResult opResult=mKeyStore.begin(mKey.getAlias(),mSigning ? KeymasterDefs.KM_PURPOSE_SIGN : KeymasterDefs.KM_PURPOSE_VERIFY,true,keymasterInputArgs,null,mKey.getUid());
  if (opResult == null) {
    throw new KeyStoreConnectException();
  }
  mOperationToken=opResult.token;
  mOperationHandle=opResult.operationHandle;
  InvalidKeyException e=KeyStoreCryptoOperationUtils.getInvalidKeyExceptionForInit(mKeyStore,mKey,opResult.resultCode);
  if (e != null) {
    throw e;
  }
  if (mOperationToken == null) {
    throw new ProviderException("Keystore returned null operation token");
  }
  if (mOperationHandle == 0) {
    throw new ProviderException("Keystore returned invalid operation handle");
  }
  mMessageStreamer=createMainDataStreamer(mKeyStore,opResult.token);
}
