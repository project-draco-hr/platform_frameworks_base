{
  ColorStateList c=Resources.getSystem().getColorStateList(android.R.color.primary_text_dark);
  Spanned s;
  TextAppearanceSpan[] colors;
  s=Html.fromHtml("<font color=\"@android:color/primary_text_dark\">something</font>");
  colors=s.getSpans(0,s.length(),TextAppearanceSpan.class);
  assertEquals(1,colors.length);
  assertEquals(c.toString(),colors[0].getTextColor().toString());
  s=Html.fromHtml("<font color=\"@android:primary_text_dark\">something</font>");
  colors=s.getSpans(0,s.length(),TextAppearanceSpan.class);
  assertEquals(1,colors.length);
  assertEquals(c.toString(),colors[0].getTextColor().toString());
  s=Html.fromHtml("<font color=\"@color/primary_text_dark\">something</font>");
  colors=s.getSpans(0,s.length(),TextAppearanceSpan.class);
  assertEquals(1,colors.length);
  assertEquals(c.toString(),colors[0].getTextColor().toString());
  s=Html.fromHtml("<font color=\"@primary_text_dark\">something</font>");
  colors=s.getSpans(0,s.length(),TextAppearanceSpan.class);
  assertEquals(1,colors.length);
  assertEquals(c.toString(),colors[0].getTextColor().toString());
  s=Html.fromHtml("<font color=\"@" + android.R.color.primary_text_dark + "\">something</font>");
  colors=s.getSpans(0,s.length(),TextAppearanceSpan.class);
  assertEquals(1,colors.length);
  assertEquals(c.toString(),colors[0].getTextColor().toString());
  s=Html.fromHtml("<font color=\"gibberish\">something</font>");
  colors=s.getSpans(0,s.length(),TextAppearanceSpan.class);
  assertEquals(colors.length,0);
}
