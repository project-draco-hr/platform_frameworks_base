{
synchronized (mQueue) {
    pw.println("mExpanded=" + mExpanded + ", mExpandedVisible="+ mExpandedVisible);
    pw.println("mTicking=" + mTicking);
    pw.println("mTracking=" + mTracking);
    pw.println("mAnimating=" + mAnimating + ", mAnimY="+ mAnimY+ ", mAnimVel="+ mAnimVel+ ", mAnimAccel="+ mAnimAccel);
    pw.println("mCurAnimationTime=" + mCurAnimationTime + " mAnimLastTime="+ mAnimLastTime);
    pw.println("mDisplayHeight=" + mDisplayHeight + " mAnimatingReveal="+ mAnimatingReveal+ " mViewDelta="+ mViewDelta);
    pw.println("mDisplayHeight=" + mDisplayHeight);
    final int N=mQueue.size();
    pw.println("mQueue.size=" + N);
    for (int i=0; i < N; i++) {
      PendingOp op=mQueue.get(i);
      pw.println("  [" + i + "] key="+ op.key+ " code="+ op.code+ " visible="+ op.visible);
      pw.println("         iconData=" + op.iconData);
      pw.println("         notificationData=" + op.notificationData);
    }
    pw.println("mExpandedParams: " + mExpandedParams);
    pw.println("mExpandedView: " + viewInfo(mExpandedView));
    pw.println("mExpandedDialog: " + mExpandedDialog);
    pw.println("mTrackingParams: " + mTrackingParams);
    pw.println("mTrackingView: " + viewInfo(mTrackingView));
    pw.println("mOngoingTitle: " + viewInfo(mOngoingTitle));
    pw.println("mOngoingItems: " + viewInfo(mOngoingItems));
    pw.println("mLatestTitle: " + viewInfo(mLatestTitle));
    pw.println("mLatestItems: " + viewInfo(mLatestItems));
    pw.println("mNoNotificationsTitle: " + viewInfo(mNoNotificationsTitle));
    pw.println("mCloseView: " + viewInfo(mCloseView));
    pw.println("mTickerView: " + viewInfo(mTickerView));
    pw.println("mScrollView: " + viewInfo(mScrollView) + " scroll "+ mScrollView.getScrollX()+ ","+ mScrollView.getScrollY());
    pw.println("mNotificationLinearLayout: " + viewInfo(mNotificationLinearLayout));
  }
synchronized (mIconMap) {
    final int N=mIconMap.size();
    pw.println("mIconMap.size=" + N);
    Set<IBinder> keys=mIconMap.keySet();
    int i=0;
    for (    IBinder key : keys) {
      StatusBarIcon icon=mIconMap.get(key);
      pw.println("  [" + i + "] key="+ key);
      pw.println("         data=" + icon.mData);
      i++;
    }
  }
synchronized (mNotificationData) {
    int N=mNotificationData.ongoingCount();
    pw.println("ongoingCount.size=" + N);
    for (int i=0; i < N; i++) {
      StatusBarNotification n=mNotificationData.getOngoing(i);
      pw.println("  [" + i + "] key="+ n.key+ " view="+ n.view);
      pw.println("         data=" + n.data);
    }
    N=mNotificationData.latestCount();
    pw.println("ongoingCount.size=" + N);
    for (int i=0; i < N; i++) {
      StatusBarNotification n=mNotificationData.getLatest(i);
      pw.println("  [" + i + "] key="+ n.key+ " view="+ n.view);
      pw.println("         data=" + n.data);
    }
  }
synchronized (mDisableRecords) {
    final int N=mDisableRecords.size();
    pw.println("mDisableRecords.size=" + N + " mDisabled=0x"+ Integer.toHexString(mDisabled));
    for (int i=0; i < N; i++) {
      DisableRecord tok=mDisableRecords.get(i);
      pw.println("  [" + i + "] what=0x"+ Integer.toHexString(tok.what)+ " pkg="+ tok.pkg+ " token="+ tok.token);
    }
  }
  if (false) {
    pw.println("see the logcat for a dump of the views we have created.");
    mHandler.post(new Runnable(){
      public void run(){
        mStatusBarView.getLocationOnScreen(mAbsPos);
        Log.d(TAG,"mStatusBarView: ----- (" + mAbsPos[0] + ","+ mAbsPos[1]+ ") "+ mStatusBarView.getWidth()+ "x"+ mStatusBarView.getHeight());
        mStatusBarView.debug();
        mExpandedView.getLocationOnScreen(mAbsPos);
        Log.d(TAG,"mExpandedView: ----- (" + mAbsPos[0] + ","+ mAbsPos[1]+ ") "+ mExpandedView.getWidth()+ "x"+ mExpandedView.getHeight());
        mExpandedView.debug();
        mTrackingView.getLocationOnScreen(mAbsPos);
        Log.d(TAG,"mTrackingView: ----- (" + mAbsPos[0] + ","+ mAbsPos[1]+ ") "+ mTrackingView.getWidth()+ "x"+ mTrackingView.getHeight());
        mTrackingView.debug();
      }
    }
);
  }
}
