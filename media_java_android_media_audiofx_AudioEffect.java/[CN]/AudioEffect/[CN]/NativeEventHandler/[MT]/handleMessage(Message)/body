{
  if (mAudioEffect == null) {
    return;
  }
switch (msg.what) {
case NATIVE_EVENT_ENABLED_STATUS:
    OnEnableStatusChangeListener enableStatusChangeListener=null;
synchronized (mListenerLock) {
    enableStatusChangeListener=mAudioEffect.mEnableStatusChangeListener;
  }
if (enableStatusChangeListener != null) {
  enableStatusChangeListener.onEnableStatusChange(mAudioEffect,(boolean)(msg.arg1 != 0));
}
break;
case NATIVE_EVENT_CONTROL_STATUS:
OnControlStatusChangeListener controlStatusChangeListener=null;
synchronized (mListenerLock) {
controlStatusChangeListener=mAudioEffect.mControlChangeStatusListener;
}
if (controlStatusChangeListener != null) {
controlStatusChangeListener.onControlStatusChange(mAudioEffect,(boolean)(msg.arg1 != 0));
}
break;
case NATIVE_EVENT_PARAMETER_CHANGED:
OnParameterChangeListener parameterChangeListener=null;
synchronized (mListenerLock) {
parameterChangeListener=mAudioEffect.mParameterChangeListener;
}
if (parameterChangeListener != null) {
int vOffset=msg.arg1;
byte[] p=(byte[])msg.obj;
int status=byteArrayToInt(p,0);
int psize=byteArrayToInt(p,4);
int vsize=byteArrayToInt(p,8);
byte[] param=new byte[psize];
byte[] value=new byte[vsize];
System.arraycopy(p,12,param,0,psize);
System.arraycopy(p,vOffset,value,0,vsize);
parameterChangeListener.onParameterChange(mAudioEffect,status,param,value);
}
break;
default :
Log.e(TAG,"handleMessage() Unknown event type: " + msg.what);
break;
}
}
