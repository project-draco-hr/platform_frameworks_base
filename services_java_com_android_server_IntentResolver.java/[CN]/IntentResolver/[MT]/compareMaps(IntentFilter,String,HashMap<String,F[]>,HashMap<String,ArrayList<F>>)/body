{
  if (cur.size() != old.size()) {
    StringBuilder missing=new StringBuilder(128);
    for (    Map.Entry<String,ArrayList<F>> e : old.entrySet()) {
      final F[] curArray=cur.get(e.getKey());
      if (curArray == null) {
        if (missing.length() > 0) {
          missing.append(' ');
        }
        missing.append(e.getKey());
      }
    }
    StringBuilder extra=new StringBuilder(128);
    for (    Map.Entry<String,F[]> e : cur.entrySet()) {
      if (old.get(e.getKey()) == null) {
        if (extra.length() > 0) {
          extra.append(' ');
        }
        extra.append(e.getKey());
      }
    }
    StringBuilder srcStr=new StringBuilder(1024);
    StringBuilderPrinter printer=new StringBuilderPrinter(srcStr);
    src.dump(printer,"");
    ValidationFailure here=new ValidationFailure();
    here.fillInStackTrace();
    Log.wtf(TAG,"New map " + name + " size is "+ cur.size()+ "; old implementation is "+ old.size()+ "; missing: "+ missing.toString()+ "; extra: "+ extra.toString()+ "; src: "+ srcStr.toString(),here);
    return;
  }
  for (  Map.Entry<String,ArrayList<F>> e : old.entrySet()) {
    final F[] curArray=cur.get(e.getKey());
    int curLen=curArray != null ? curArray.length : 0;
    if (curLen == 0) {
      ValidationFailure here=new ValidationFailure();
      here.fillInStackTrace();
      Log.wtf(TAG,"New map " + name + " doesn't contain expected key "+ e.getKey()+ " (array="+ curArray+ ")");
      return;
    }
    while (curLen > 0 && curArray[curLen - 1] == null) {
      curLen--;
    }
    final ArrayList<F> oldArray=e.getValue();
    final int oldLen=oldArray.size();
    if (curLen != oldLen) {
      ValidationFailure here=new ValidationFailure();
      here.fillInStackTrace();
      Log.wtf(TAG,"New map " + name + " entry "+ e.getKey()+ " size is "+ curLen+ "; old implementation is "+ oldLen,here);
      return;
    }
    for (int i=0; i < oldLen; i++) {
      F f=oldArray.get(i);
      boolean found=false;
      for (int j=0; j < curLen; j++) {
        if (curArray[j] == f) {
          found=true;
          break;
        }
      }
      if (!found) {
        ValidationFailure here=new ValidationFailure();
        here.fillInStackTrace();
        Log.wtf(TAG,"New map " + name + " entry + "+ e.getKey()+ " doesn't contain expected filter "+ f,here);
      }
    }
    for (int i=0; i < curLen; i++) {
      if (curArray[i] == null) {
        ValidationFailure here=new ValidationFailure();
        here.fillInStackTrace();
        Log.wtf(TAG,"New map " + name + " entry + "+ e.getKey()+ " has unexpected null at "+ i+ "; array: "+ curArray,here);
        break;
      }
    }
  }
}
