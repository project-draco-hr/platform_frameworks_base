{
  final View transformedView=mTransformedView;
  int[] otherPosition=otherState.getLocationOnScreen();
  int[] ownStablePosition=getLaidOutLocationOnScreen();
  if ((animationFlags & ANIMATE_X) != 0) {
    transformedView.setTranslationX(otherPosition[0] - ownStablePosition[0]);
    transformedView.animate().translationX(0);
  }
  if ((animationFlags & ANIMATE_Y) != 0) {
    transformedView.setTranslationY(otherPosition[1] - ownStablePosition[1]);
    transformedView.animate().translationY(0);
  }
  if (animateScale()) {
    View otherView=otherState.getTransformedView();
    if (otherView.getWidth() != transformedView.getWidth()) {
      float scaleX=(otherView.getWidth() * otherView.getScaleX() / (float)transformedView.getWidth());
      transformedView.setScaleX(scaleX);
      transformedView.setPivotX(0);
      transformedView.animate().scaleX(1.0f);
    }
    if (otherView.getHeight() != transformedView.getHeight()) {
      float scaleY=(otherView.getHeight() * otherView.getScaleY() / (float)transformedView.getHeight());
      transformedView.setScaleY(scaleY);
      transformedView.setPivotY(0);
      transformedView.animate().scaleY(1.0f);
    }
  }
  transformedView.animate().setInterpolator(TransformState.FAST_OUT_SLOW_IN).setDuration(StackStateAnimator.ANIMATION_DURATION_STANDARD).withEndAction(new Runnable(){
    @Override public void run(){
      setClippingDeactivated(transformedView,false);
    }
  }
);
  setClippingDeactivated(transformedView,true);
}
