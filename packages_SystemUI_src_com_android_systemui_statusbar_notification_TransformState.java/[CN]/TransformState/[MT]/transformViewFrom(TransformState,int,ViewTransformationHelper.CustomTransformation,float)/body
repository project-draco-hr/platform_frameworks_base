{
  final View transformedView=mTransformedView;
  boolean transformX=(transformationFlags & TRANSOFORM_X) != 0;
  boolean transformY=(transformationFlags & TRANSOFORM_Y) != 0;
  boolean transformScale=transformScale();
  if (transformationAmount == 0.0f || transformX && getTransformationStartX() == UNDEFINED || transformY && getTransformationStartY() == UNDEFINED || transformScale && getTransformationStartScaleX() == UNDEFINED || transformScale && getTransformationStartScaleY() == UNDEFINED) {
    int[] otherPosition;
    if (transformationAmount != 0.0f) {
      otherPosition=otherState.getLaidOutLocationOnScreen();
    }
 else {
      otherPosition=otherState.getLocationOnScreen();
    }
    int[] ownStablePosition=getLaidOutLocationOnScreen();
    if (customTransformation == null || !customTransformation.initTransformation(this,otherState)) {
      if (transformX) {
        setTransformationStartX(otherPosition[0] - ownStablePosition[0]);
      }
      if (transformY) {
        setTransformationStartY(otherPosition[1] - ownStablePosition[1]);
      }
      View otherView=otherState.getTransformedView();
      if (transformScale && otherView.getWidth() != transformedView.getWidth()) {
        setTransformationStartScaleX(otherView.getWidth() * otherView.getScaleX() / (float)transformedView.getWidth());
        transformedView.setPivotX(0);
      }
 else {
        setTransformationStartScaleX(UNDEFINED);
      }
      if (transformScale && otherView.getHeight() != transformedView.getHeight()) {
        setTransformationStartScaleY(otherView.getHeight() * otherView.getScaleY() / (float)transformedView.getHeight());
        transformedView.setPivotY(0);
      }
 else {
        setTransformationStartScaleY(UNDEFINED);
      }
    }
    if (!transformX) {
      setTransformationStartX(UNDEFINED);
    }
    if (!transformY) {
      setTransformationStartY(UNDEFINED);
    }
    if (!transformScale) {
      setTransformationStartScaleX(UNDEFINED);
      setTransformationStartScaleY(UNDEFINED);
    }
    setClippingDeactivated(transformedView,true);
  }
  float interpolatedValue=Interpolators.FAST_OUT_SLOW_IN.getInterpolation(transformationAmount);
  if (transformX) {
    transformedView.setTranslationX(NotificationUtils.interpolate(getTransformationStartX(),0.0f,interpolatedValue));
  }
  if (transformY) {
    transformedView.setTranslationY(NotificationUtils.interpolate(getTransformationStartY(),0.0f,interpolatedValue));
  }
  if (transformScale) {
    float transformationStartScaleX=getTransformationStartScaleX();
    if (transformationStartScaleX != UNDEFINED) {
      transformedView.setScaleX(NotificationUtils.interpolate(transformationStartScaleX,1.0f,interpolatedValue));
    }
    float transformationStartScaleY=getTransformationStartScaleY();
    if (transformationStartScaleY != UNDEFINED) {
      transformedView.setScaleY(NotificationUtils.interpolate(transformationStartScaleY,1.0f,interpolatedValue));
    }
  }
}
