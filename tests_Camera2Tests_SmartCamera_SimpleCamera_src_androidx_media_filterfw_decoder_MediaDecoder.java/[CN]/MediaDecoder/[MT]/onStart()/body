{
  if (mOpenGLEnabled) {
    getRenderTarget().focus();
  }
  mMediaExtractor=new MediaExtractor();
  mMediaExtractor.setDataSource(mContext,mUri,null);
  mVideoTrackIndex=-1;
  mAudioTrackIndex=-1;
  for (int i=0; i < mMediaExtractor.getTrackCount(); i++) {
    MediaFormat format=mMediaExtractor.getTrackFormat(i);
    if (DEBUG) {
      Log.i(LOG_TAG,"Uri " + mUri + ", track "+ i+ ": "+ format);
    }
    if (DecoderUtil.isVideoFormat(format) && mVideoTrackIndex == -1) {
      mVideoTrackIndex=i;
    }
 else     if (DecoderUtil.isAudioFormat(format) && mAudioTrackIndex == -1) {
      mAudioTrackIndex=i;
    }
  }
  if (mVideoTrackIndex == -1 && mAudioTrackIndex == -1) {
    throw new IllegalArgumentException("Couldn't find a video or audio track in the provided file");
  }
  if (mVideoTrackIndex != -1) {
    MediaFormat videoFormat=mMediaExtractor.getTrackFormat(mVideoTrackIndex);
    mVideoTrackDecoder=mOpenGLEnabled ? new GpuVideoTrackDecoder(mVideoTrackIndex,videoFormat,this) : new CpuVideoTrackDecoder(mVideoTrackIndex,videoFormat,this);
    mVideoTrackDecoder.init();
    mMediaExtractor.selectTrack(mVideoTrackIndex);
    if (Build.VERSION.SDK_INT >= 17) {
      retrieveDefaultRotation();
    }
  }
  if (mAudioTrackIndex != -1) {
    MediaFormat audioFormat=mMediaExtractor.getTrackFormat(mAudioTrackIndex);
    mAudioTrackDecoder=new AudioTrackDecoder(mAudioTrackIndex,audioFormat,this);
    mAudioTrackDecoder.init();
    mMediaExtractor.selectTrack(mAudioTrackIndex);
  }
  if (mStartMicros > 0) {
    mMediaExtractor.seekTo(mStartMicros,MediaExtractor.SEEK_TO_PREVIOUS_SYNC);
  }
  mStarted=true;
  mListener.onDecodingStarted();
}
