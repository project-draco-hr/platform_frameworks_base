{
  populate();
  int count=getChildCount();
  final boolean measureMatchParentChildren=MeasureSpec.getMode(widthMeasureSpec) != MeasureSpec.EXACTLY || MeasureSpec.getMode(heightMeasureSpec) != MeasureSpec.EXACTLY;
  int maxHeight=0;
  int maxWidth=0;
  int childState=0;
  for (int i=0; i < count; i++) {
    final View child=getChildAt(i);
    if (child.getVisibility() != GONE) {
      measureChild(child,widthMeasureSpec,heightMeasureSpec);
      final LayoutParams lp=(LayoutParams)child.getLayoutParams();
      maxWidth=Math.max(maxWidth,child.getMeasuredWidth());
      maxHeight=Math.max(maxHeight,child.getMeasuredHeight());
      childState=combineMeasuredStates(childState,child.getMeasuredState());
      if (measureMatchParentChildren) {
        if (lp.width == LayoutParams.MATCH_PARENT || lp.height == LayoutParams.MATCH_PARENT) {
          mMatchParentChildren.add(child);
        }
      }
    }
  }
  maxWidth+=getPaddingLeft() + getPaddingRight();
  maxHeight+=getPaddingTop() + getPaddingBottom();
  maxHeight=Math.max(maxHeight,getSuggestedMinimumHeight());
  maxWidth=Math.max(maxWidth,getSuggestedMinimumWidth());
  final Drawable drawable=getForeground();
  if (drawable != null) {
    maxHeight=Math.max(maxHeight,drawable.getMinimumHeight());
    maxWidth=Math.max(maxWidth,drawable.getMinimumWidth());
  }
  setMeasuredDimension(resolveSizeAndState(maxWidth,widthMeasureSpec,childState),resolveSizeAndState(maxHeight,heightMeasureSpec,childState << MEASURED_HEIGHT_STATE_SHIFT));
  count=mMatchParentChildren.size();
  if (count > 1) {
    for (int i=0; i < count; i++) {
      final View child=mMatchParentChildren.get(i);
      final LayoutParams lp=(LayoutParams)child.getLayoutParams();
      final int childWidthMeasureSpec;
      final int childHeightMeasureSpec;
      if (lp.width == LayoutParams.MATCH_PARENT) {
        childWidthMeasureSpec=MeasureSpec.makeMeasureSpec(getMeasuredWidth() - getPaddingLeft() - getPaddingRight(),MeasureSpec.EXACTLY);
      }
 else {
        childWidthMeasureSpec=getChildMeasureSpec(widthMeasureSpec,getPaddingLeft() + getPaddingRight(),lp.width);
      }
      if (lp.height == LayoutParams.MATCH_PARENT) {
        childHeightMeasureSpec=MeasureSpec.makeMeasureSpec(getMeasuredHeight() - getPaddingTop() - getPaddingBottom(),MeasureSpec.EXACTLY);
      }
 else {
        childHeightMeasureSpec=getChildMeasureSpec(heightMeasureSpec,getPaddingTop() + getPaddingBottom(),lp.height);
      }
      child.measure(childWidthMeasureSpec,childHeightMeasureSpec);
    }
  }
  mMatchParentChildren.clear();
}
