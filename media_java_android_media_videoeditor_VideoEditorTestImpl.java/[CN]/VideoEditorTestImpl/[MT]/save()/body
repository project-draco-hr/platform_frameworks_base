{
  final XmlSerializer serializer=Xml.newSerializer();
  final StringWriter writer=new StringWriter();
  serializer.setOutput(writer);
  serializer.startDocument("UTF-8",true);
  serializer.startTag("",TAG_PROJECT);
  serializer.attribute("",ATTR_ASPECT_RATIO,Integer.toString(mAspectRatio));
  serializer.startTag("",TAG_MEDIA_ITEMS);
  for (  MediaItem mediaItem : mMediaItems) {
    serializer.startTag("",TAG_MEDIA_ITEM);
    serializer.attribute("",ATTR_ID,mediaItem.getId());
    serializer.attribute("",ATTR_TYPE,mediaItem.getClass().getSimpleName());
    serializer.attribute("",ATTR_FILENAME,mediaItem.getFilename());
    serializer.attribute("",ATTR_RENDERING_MODE,Integer.toString(mediaItem.getRenderingMode()));
    if (mediaItem instanceof MediaVideoItem) {
      final MediaVideoItem mvi=(MediaVideoItem)mediaItem;
      serializer.attribute("",ATTR_BEGIN_TIME,Long.toString(mvi.getBoundaryBeginTime()));
      serializer.attribute("",ATTR_END_TIME,Long.toString(mvi.getBoundaryEndTime()));
      serializer.attribute("",ATTR_VOLUME,Integer.toString(mvi.getVolume()));
      if (mvi.getAudioWaveformFilename() != null) {
        serializer.attribute("",ATTR_AUDIO_WAVEFORM_FILENAME,mvi.getAudioWaveformFilename());
      }
    }
 else     if (mediaItem instanceof MediaImageItem) {
      serializer.attribute("",ATTR_DURATION,Long.toString(mediaItem.getDuration()));
    }
    serializer.endTag("",TAG_MEDIA_ITEM);
  }
  serializer.endTag("",TAG_MEDIA_ITEMS);
  serializer.endTag("",TAG_PROJECT);
  serializer.endDocument();
  final FileOutputStream out=new FileOutputStream(new File(getPath(),PROJECT_FILENAME));
  out.write(writer.toString().getBytes());
  out.flush();
  out.close();
}
