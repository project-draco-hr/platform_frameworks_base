{
  final String transitionId=parser.getAttributeValue("",ATTR_ID);
  final String type=parser.getAttributeValue("",ATTR_TYPE);
  final long durationMs=Long.parseLong(parser.getAttributeValue("",ATTR_DURATION));
  final int behavior=Integer.parseInt(parser.getAttributeValue("",ATTR_BEHAVIOR));
  final String beforeMediaItemId=parser.getAttributeValue("",ATTR_BEFORE_MEDIA_ITEM_ID);
  final MediaItem beforeMediaItem;
  if (beforeMediaItemId != null) {
    beforeMediaItem=getMediaItem(beforeMediaItemId);
  }
 else {
    beforeMediaItem=null;
  }
  final String afterMediaItemId=parser.getAttributeValue("",ATTR_AFTER_MEDIA_ITEM_ID);
  final MediaItem afterMediaItem;
  if (afterMediaItemId != null) {
    afterMediaItem=getMediaItem(afterMediaItemId);
  }
 else {
    afterMediaItem=null;
  }
  final Transition transition;
  if (TransitionStartCurtainOpening.class.getSimpleName().equals(type)) {
    transition=new TransitionStartCurtainOpening(transitionId,beforeMediaItem,durationMs,behavior);
  }
 else   if (TransitionStartFadeFromBlack.class.getSimpleName().equals(type)) {
    transition=new TransitionStartFadeFromBlack(transitionId,beforeMediaItem,durationMs,behavior);
  }
 else   if (TransitionAlpha.class.getSimpleName().equals(type)) {
    final int blending=Integer.parseInt(parser.getAttributeValue("",ATTR_BLENDING));
    final String maskFilename=parser.getAttributeValue("",ATTR_MASK);
    final boolean invert=Boolean.getBoolean(parser.getAttributeValue("",ATTR_INVERT));
    transition=new TransitionAlpha(transitionId,afterMediaItem,beforeMediaItem,durationMs,behavior,maskFilename,blending,invert);
  }
 else   if (TransitionCrossfade.class.getSimpleName().equals(type)) {
    transition=new TransitionCrossfade(transitionId,afterMediaItem,beforeMediaItem,durationMs,behavior);
  }
 else   if (TransitionSliding.class.getSimpleName().equals(type)) {
    final int direction=Integer.parseInt(parser.getAttributeValue("",ATTR_DIRECTION));
    transition=new TransitionSliding(transitionId,afterMediaItem,beforeMediaItem,durationMs,behavior,direction);
  }
 else   if (TransitionFadeToBlack.class.getSimpleName().equals(type)) {
    transition=new TransitionFadeToBlack(transitionId,afterMediaItem,beforeMediaItem,durationMs,behavior);
  }
 else   if (TransitionEndCurtainClosing.class.getSimpleName().equals(type)) {
    transition=new TransitionEndCurtainClosing(transitionId,afterMediaItem,durationMs,behavior);
  }
 else   if (TransitionEndFadeToBlack.class.getSimpleName().equals(type)) {
    transition=new TransitionEndFadeToBlack(transitionId,afterMediaItem,durationMs,behavior);
  }
 else {
    transition=null;
  }
  if (beforeMediaItem != null) {
    beforeMediaItem.setBeginTransition(transition);
  }
  if (afterMediaItem != null) {
    afterMediaItem.setEndTransition(transition);
  }
  return transition;
}
