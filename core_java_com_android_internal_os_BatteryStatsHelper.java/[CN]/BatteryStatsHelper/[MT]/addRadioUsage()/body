{
  double power=0;
  final int BINS=SignalStrength.NUM_SIGNAL_STRENGTH_BINS;
  long signalTimeMs=0;
  long noCoverageTimeMs=0;
  for (int i=0; i < BINS; i++) {
    long strengthTimeMs=mStats.getPhoneSignalStrengthTime(i,mRawRealtime,mStatsType) / 1000;
    double p=(strengthTimeMs * mPowerProfile.getAveragePower(PowerProfile.POWER_RADIO_ON,i)) / (60 * 60 * 1000);
    if (DEBUG && p != 0) {
      Log.d(TAG,"Cell strength #" + i + ": time="+ strengthTimeMs+ " power="+ makemAh(p));
    }
    power+=p;
    signalTimeMs+=strengthTimeMs;
    if (i == 0) {
      noCoverageTimeMs=strengthTimeMs;
    }
  }
  long scanningTimeMs=mStats.getPhoneSignalScanningTime(mRawRealtime,mStatsType) / 1000;
  double p=(scanningTimeMs * mPowerProfile.getAveragePower(PowerProfile.POWER_RADIO_SCANNING)) / (60 * 60 * 1000);
  if (DEBUG && p != 0) {
    Log.d(TAG,"Cell radio scanning: time=" + scanningTimeMs + " power="+ makemAh(p));
  }
  power+=p;
  long radioActiveTimeUs=mStats.getMobileRadioActiveTime(mRawRealtime,mStatsType);
  long remainingActiveTime=(radioActiveTimeUs - mAppMobileActive) / 1000;
  if (remainingActiveTime > 0) {
    power+=getMobilePowerPerMs() * remainingActiveTime;
  }
  if (power != 0) {
    BatterySipper bs=addEntry(BatterySipper.DrainType.CELL,signalTimeMs,power);
    if (signalTimeMs != 0) {
      bs.noCoveragePercent=noCoverageTimeMs * 100.0 / signalTimeMs;
    }
    bs.mobileActive=remainingActiveTime;
    bs.mobileActiveCount=mStats.getMobileRadioActiveUnknownCount(mStatsType);
  }
}
