{
  if (message == null || destinationAddress == null) {
    return null;
  }
  if (encoding == ENCODING_UNKNOWN) {
    TextEncodingDetails ted=calculateLength(message,false);
    encoding=ted.codeUnitSize;
    languageTable=ted.languageTable;
    languageShiftTable=ted.languageShiftTable;
    if (encoding == ENCODING_7BIT && (languageTable != 0 || languageShiftTable != 0)) {
      if (header != null) {
        SmsHeader smsHeader=SmsHeader.fromByteArray(header);
        if (smsHeader.languageTable != languageTable || smsHeader.languageShiftTable != languageShiftTable) {
          Log.w(LOG_TAG,"Updating language table in SMS header: " + smsHeader.languageTable + " -> "+ languageTable+ ", "+ smsHeader.languageShiftTable+ " -> "+ languageShiftTable);
          smsHeader.languageTable=languageTable;
          smsHeader.languageShiftTable=languageShiftTable;
          header=SmsHeader.toByteArray(smsHeader);
        }
      }
 else {
        SmsHeader smsHeader=new SmsHeader();
        smsHeader.languageTable=languageTable;
        smsHeader.languageShiftTable=languageShiftTable;
        header=SmsHeader.toByteArray(smsHeader);
      }
    }
  }
  SubmitPdu ret=new SubmitPdu();
  byte mtiByte=(byte)(0x01 | (header != null ? 0x40 : 0x00));
  ByteArrayOutputStream bo=getSubmitPduHead(scAddress,destinationAddress,mtiByte,statusReportRequested,ret);
  byte[] userData;
  try {
    if (encoding == ENCODING_7BIT) {
      userData=GsmAlphabet.stringToGsm7BitPackedWithHeader(message,header,languageTable,languageShiftTable);
    }
 else {
      try {
        userData=encodeUCS2(message,header);
      }
 catch (      UnsupportedEncodingException uex) {
        Log.e(LOG_TAG,"Implausible UnsupportedEncodingException ",uex);
        return null;
      }
    }
  }
 catch (  EncodeException ex) {
    try {
      userData=encodeUCS2(message,header);
      encoding=ENCODING_16BIT;
    }
 catch (    UnsupportedEncodingException uex) {
      Log.e(LOG_TAG,"Implausible UnsupportedEncodingException ",uex);
      return null;
    }
  }
  if (encoding == ENCODING_7BIT) {
    if ((0xff & userData[0]) > MAX_USER_DATA_SEPTETS) {
      Log.e(LOG_TAG,"Message too long (" + (0xff & userData[0]) + " septets)");
      return null;
    }
    bo.write(0x00);
  }
 else {
    if ((0xff & userData[0]) > MAX_USER_DATA_BYTES) {
      Log.e(LOG_TAG,"Message too long (" + (0xff & userData[0]) + " bytes)");
      return null;
    }
    bo.write(0x08);
  }
  bo.write(userData,0,userData.length);
  ret.encodedMessage=bo.toByteArray();
  return ret;
}
