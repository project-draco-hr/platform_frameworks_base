{
  if (mDatabaseHelper == null) {
    return null;
  }
synchronized (this.getClass()) {
    if (mNeedsCacheLoad) {
      mNeedsCacheLoad=false;
      long t0=System.currentTimeMillis();
      Cursor cur=null;
      try {
        cur=mDatabaseHelper.getReadableDatabase().query(SSL_CACHE_TABLE,PROJECTION,null,null,null,null,null);
        if (cur.moveToFirst()) {
          do {
            String hostPort=cur.getString(SSL_CACHE_HOSTPORT_COL);
            String value=cur.getString(SSL_CACHE_SESSION_COL);
            if (hostPort == null || value == null) {
              continue;
            }
            byte[] der=Base64.decodeBase64(value.getBytes());
            mExternalCache.put(hostPort,der);
          }
 while (cur.moveToNext());
        }
      }
 catch (      SQLException ex) {
        Log.d(TAG,"Error loading SSL cached entries ",ex);
      }
 finally {
        if (cur != null) {
          cur.close();
        }
        if (Log.isLoggable(TAG,Log.DEBUG)) {
          long t1=System.currentTimeMillis();
          Log.d(TAG,"LOADED CACHED SSL " + (t1 - t0) + " ms");
        }
      }
    }
    String key=host + ":" + port;
    return mExternalCache.get(key);
  }
}
