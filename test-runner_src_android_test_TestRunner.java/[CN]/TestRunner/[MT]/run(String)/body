{
  try {
    mClassName=className;
    Class clazz=mContext.getClassLoader().loadClass(className);
    Method method=getChildrenMethod(clazz);
    if (method != null) {
      String[] children=getChildren(method);
      run(children);
    }
 else     if (mRunnableClass.isAssignableFrom(clazz)) {
      Runnable test=(Runnable)clazz.newInstance();
      TestCase testcase=null;
      if (test instanceof TestCase) {
        testcase=(TestCase)test;
      }
      Throwable e=null;
      boolean didSetup=false;
      started(className);
      try {
        if (testcase != null) {
          testcase.setUp(mContext);
          didSetup=true;
        }
        if (mMode == PERFORMANCE) {
          runInPerformanceMode(test,className,false,className);
        }
 else         if (mMode == PROFILING) {
          startProfiling();
          test.run();
          finishProfiling();
        }
 else {
          test.run();
        }
      }
 catch (      Throwable ex) {
        e=ex;
      }
      if (testcase != null && didSetup) {
        try {
          testcase.tearDown();
        }
 catch (        Throwable ex) {
          e=ex;
        }
      }
      finished(className);
      if (e == null) {
        passed(className);
      }
 else {
        failed(className,e);
      }
    }
 else     if (mJUnitClass.isAssignableFrom(clazz)) {
      Throwable e=null;
      JunitTestSuite suite=new JunitTestSuite();
      Method[] methods=getAllTestMethods(clazz);
      for (      Method m : methods) {
        junit.framework.TestCase test=(junit.framework.TestCase)clazz.newInstance();
        test.setName(m.getName());
        if (test instanceof AndroidTestCase) {
          AndroidTestCase testcase=(AndroidTestCase)test;
          try {
            testcase.setContext(mContext);
            testcase.setTestContext(mContext);
          }
 catch (          Exception ex) {
            Log.i("TestHarness",ex.toString());
          }
        }
        suite.addTest(test);
      }
      if (mMode == PERFORMANCE) {
        final int testCount=suite.testCount();
        for (int j=0; j < testCount; j++) {
          Test test=suite.testAt(j);
          started(test.toString());
          try {
            runInPerformanceMode(test,className,true,test.toString());
          }
 catch (          Throwable ex) {
            e=ex;
          }
          finished(test.toString());
          if (e == null) {
            passed(test.toString());
          }
 else {
            failed(test.toString(),e);
          }
        }
      }
 else       if (mMode == PROFILING) {
        startProfiling();
        junit.textui.TestRunner.run(suite);
        finishProfiling();
      }
 else {
        junit.textui.TestRunner.run(suite);
      }
    }
 else {
      System.out.println("Test wasn't Runnable and didn't have a" + " children method: " + className);
    }
  }
 catch (  ClassNotFoundException e) {
    Log.e("ClassNotFoundException for " + className,e.toString());
    if (isJunitTest(className)) {
      runSingleJunitTest(className);
    }
 else {
      missingTest(className,e);
    }
  }
catch (  InstantiationException e) {
    System.out.println("InstantiationException for " + className);
    missingTest(className,e);
  }
catch (  IllegalAccessException e) {
    System.out.println("IllegalAccessException for " + className);
    missingTest(className,e);
  }
}
