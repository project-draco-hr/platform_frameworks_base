{
  final ContentResolver resolver=mResolver.get();
  if (resolver == null)   return;
  WorkerArgs args=(WorkerArgs)msg.obj;
  int token=msg.what;
  int event=msg.arg1;
switch (event) {
case EVENT_ARG_QUERY:
    Cursor cursor;
  try {
    cursor=resolver.query(args.uri,args.projection,args.selection,args.selectionArgs,args.orderBy);
    if (cursor != null) {
      cursor.getCount();
    }
  }
 catch (  Exception e) {
    Log.d(TAG,e.toString());
    cursor=null;
  }
args.result=cursor;
break;
case EVENT_ARG_INSERT:
args.result=resolver.insert(args.uri,args.values);
break;
case EVENT_ARG_UPDATE:
args.result=resolver.update(args.uri,args.values,args.selection,args.selectionArgs);
break;
case EVENT_ARG_DELETE:
args.result=resolver.delete(args.uri,args.selection,args.selectionArgs);
break;
}
Message reply=args.handler.obtainMessage(token);
reply.obj=args;
reply.arg1=msg.arg1;
if (localLOGV) {
Log.d(TAG,"WorkerHandler.handleMsg: msg.arg1=" + msg.arg1 + ", reply.what="+ reply.what);
}
reply.sendToTarget();
}
