{
  final int numPointers=mNumPointers;
  final PointerData[] pointers=mPointers;
  final int lastTouchIndex=mLastTouchIndex;
  for (int p=0; p < numPointers; p++) {
    final PointerData pointerData=pointers[p];
    final long[] pastTime=pointerData.pastTime;
    int oldestTouchIndex=lastTouchIndex;
    int numTouches=1;
    final long minTime=pastTime[lastTouchIndex] - MAX_AGE_MILLISECONDS;
    while (numTouches < NUM_PAST) {
      final int nextOldestTouchIndex=(oldestTouchIndex + NUM_PAST - 1) % NUM_PAST;
      final long nextOldestTime=pastTime[nextOldestTouchIndex];
      if (nextOldestTime < minTime) {
        break;
      }
      oldestTouchIndex=nextOldestTouchIndex;
      numTouches+=1;
    }
    if (numTouches > 3) {
      numTouches-=1;
    }
    final float[] pastX=pointerData.pastX;
    final float[] pastY=pointerData.pastY;
    final float oldestX=pastX[oldestTouchIndex];
    final float oldestY=pastY[oldestTouchIndex];
    final long oldestTime=pastTime[oldestTouchIndex];
    float accumX=0;
    float accumY=0;
    for (int i=1; i < numTouches; i++) {
      final int touchIndex=(oldestTouchIndex + i) % NUM_PAST;
      final int duration=(int)(pastTime[touchIndex] - oldestTime);
      if (duration == 0)       continue;
      float delta=pastX[touchIndex] - oldestX;
      float velocity=(delta / duration) * units;
      accumX=(accumX == 0) ? velocity : (accumX + velocity) * .5f;
      delta=pastY[touchIndex] - oldestY;
      velocity=(delta / duration) * units;
      accumY=(accumY == 0) ? velocity : (accumY + velocity) * .5f;
    }
    if (accumX < -maxVelocity) {
      accumX=-maxVelocity;
    }
 else     if (accumX > maxVelocity) {
      accumX=maxVelocity;
    }
    if (accumY < -maxVelocity) {
      accumY=-maxVelocity;
    }
 else     if (accumY > maxVelocity) {
      accumY=maxVelocity;
    }
    pointerData.xVelocity=accumX;
    pointerData.yVelocity=accumY;
    if (localLOGV) {
      Log.v(TAG,"[" + p + "] Pointer "+ pointerData.id+ ": Y velocity="+ accumX+ " X velocity="+ accumY+ " N="+ numTouches);
    }
  }
}
