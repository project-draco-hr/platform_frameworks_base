{
  SystemServicesProxy ssp=Recents.getSystemServices();
  mRv.getParent().requestDisallowInterceptTouchEvent(true);
  mDragRequested=true;
  mIsDragging=false;
  mDragTask=event.task;
  mTaskView=event.taskView;
  mDropTargets.clear();
  int[] recentsViewLocation=new int[2];
  mRv.getLocationInWindow(recentsViewLocation);
  mTaskViewOffset.set(mTaskView.getLeft() - recentsViewLocation[0] + event.tlOffset.x,mTaskView.getTop() - recentsViewLocation[1] + event.tlOffset.y);
  float x=mDownPos.x - mTaskViewOffset.x;
  float y=mDownPos.y - mTaskViewOffset.y;
  mTaskView.setTranslationX(x);
  mTaskView.setTranslationY(y);
  mVisibleDockStates.clear();
  if (ActivityManager.supportsMultiWindow() && !ssp.hasDockedTask()) {
    if (!event.task.isDockable) {
      Toast.makeText(mRv.getContext(),R.string.recents_drag_non_dockable_task_message,Toast.LENGTH_SHORT).show();
    }
 else {
      TaskStack.DockState[] dockStates=getDockStatesForCurrentOrientation();
      for (      TaskStack.DockState dockState : dockStates) {
        registerDropTargetForCurrentDrag(dockState);
        mVisibleDockStates.add(dockState);
      }
    }
  }
  EventBus.getDefault().send(new DragStartInitializeDropTargetsEvent(event.task,event.taskView,this));
}
