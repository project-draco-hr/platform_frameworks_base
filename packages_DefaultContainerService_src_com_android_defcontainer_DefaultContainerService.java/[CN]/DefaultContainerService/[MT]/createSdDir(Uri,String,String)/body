{
  File tmpPackageFile=new File(packageURI.getPath());
  IMountService mountService=getMountService();
  long len=tmpPackageFile.length();
  int mbLen=(int)(len / (1024 * 1024));
  if ((len - (mbLen * 1024 * 1024)) > 0) {
    mbLen++;
  }
  if (localLOGV)   Log.i(TAG,"mbLen=" + mbLen);
  String cachePath=null;
  int ownerUid=Process.myUid();
  try {
    cachePath=mountService.createSecureContainer(containerId,mbLen,"vfat",sdEncKey,ownerUid);
    if (localLOGV)     Log.i(TAG,"Trying to create secure container for  " + containerId + ", cachePath ="+ cachePath);
    return cachePath;
  }
 catch (  IllegalStateException e) {
    Log.e(TAG,"Failed to create storage on sdcard with exception: " + e);
  }
catch (  RemoteException e) {
    Log.e(TAG,"MounteService not running?");
    return null;
  }
  try {
    mountService.destroySecureContainer(containerId);
    if (localLOGV)     Log.i(TAG,"Destroying cache for " + containerId + ", cachePath ="+ cachePath);
  }
 catch (  IllegalStateException e) {
    Log.e(TAG,"Failed to destroy existing cache: " + e);
    return null;
  }
catch (  RemoteException e) {
    Log.e(TAG,"MounteService not running?");
    return null;
  }
  try {
    cachePath=mountService.createSecureContainer(containerId,mbLen,"vfat",sdEncKey,ownerUid);
    if (localLOGV)     Log.i(TAG,"Trying to install again " + containerId + ", cachePath ="+ cachePath);
    return cachePath;
  }
 catch (  IllegalStateException e) {
    Log.e(TAG,"Failed to create storage on sdcard with exception: " + e);
  }
catch (  RemoteException e) {
    Log.e(TAG,"MounteService not running?");
  }
  return null;
}
