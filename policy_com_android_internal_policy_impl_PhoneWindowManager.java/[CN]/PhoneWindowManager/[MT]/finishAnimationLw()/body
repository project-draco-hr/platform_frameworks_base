{
  int changes=0;
  boolean hiding=false;
  if (mStatusBar != null) {
    if (localLOGV)     Log.i(TAG,"force=" + mForceStatusBar + " top="+ mTopFullscreenOpaqueWindowState);
    if (mForceStatusBar) {
      if (DEBUG_LAYOUT)       Log.v(TAG,"Showing status bar");
      if (mStatusBar.showLw(true))       changes|=FINISH_LAYOUT_REDO_LAYOUT;
    }
 else     if (mTopFullscreenOpaqueWindowState != null) {
      WindowManager.LayoutParams lp=mTopFullscreenOpaqueWindowState.getAttrs();
      boolean hideStatusBar=(lp.flags & WindowManager.LayoutParams.FLAG_FULLSCREEN) != 0;
      if (hideStatusBar) {
        if (DEBUG_LAYOUT)         Log.v(TAG,"Hiding status bar");
        if (mStatusBar.hideLw(true))         changes|=FINISH_LAYOUT_REDO_LAYOUT;
        hiding=true;
      }
 else {
        if (DEBUG_LAYOUT)         Log.v(TAG,"Showing status bar");
        if (mStatusBar.showLw(true))         changes|=FINISH_LAYOUT_REDO_LAYOUT;
      }
    }
  }
  if (changes != 0 && hiding) {
    IStatusBar sbs=IStatusBar.Stub.asInterface(ServiceManager.getService("statusbar"));
    if (sbs != null) {
      try {
        sbs.deactivate();
      }
 catch (      RemoteException e) {
      }
    }
  }
  if (mKeyguard != null) {
    if (localLOGV)     Log.v(TAG,"finishLayoutLw::mHideKeyguard=" + mHideLockScreen);
    if (mDismissKeyguard && !mKeyguardMediator.isSecure()) {
      if (mKeyguard.hideLw(true)) {
        changes|=FINISH_LAYOUT_REDO_LAYOUT | FINISH_LAYOUT_REDO_CONFIG | FINISH_LAYOUT_REDO_WALLPAPER;
      }
      if (mKeyguardMediator.isShowing()) {
        mHandler.post(new Runnable(){
          public void run(){
            mKeyguardMediator.keyguardDone(false,false);
          }
        }
);
      }
    }
 else     if (mHideLockScreen) {
      if (mKeyguard.hideLw(true)) {
        changes|=FINISH_LAYOUT_REDO_LAYOUT | FINISH_LAYOUT_REDO_CONFIG | FINISH_LAYOUT_REDO_WALLPAPER;
      }
      mKeyguardMediator.setHidden(true);
    }
 else {
      if (mKeyguard.showLw(true)) {
        changes|=FINISH_LAYOUT_REDO_LAYOUT | FINISH_LAYOUT_REDO_CONFIG | FINISH_LAYOUT_REDO_WALLPAPER;
      }
      mKeyguardMediator.setHidden(false);
    }
  }
  updateLockScreenTimeout();
  return changes;
}
