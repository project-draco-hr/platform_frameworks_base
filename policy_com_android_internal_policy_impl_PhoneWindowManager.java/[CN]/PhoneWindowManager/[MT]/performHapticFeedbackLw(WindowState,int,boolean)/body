{
  final boolean hapticsDisabled=Settings.System.getInt(mContext.getContentResolver(),Settings.System.HAPTIC_FEEDBACK_ENABLED,0) == 0;
  if (!always && (hapticsDisabled || mKeyguardMediator.isShowingAndNotHidden())) {
    return false;
  }
  long[] pattern=null;
switch (effectId) {
case HapticFeedbackConstants.LONG_PRESS:
    pattern=mLongPressVibePattern;
  break;
case HapticFeedbackConstants.VIRTUAL_KEY:
pattern=mVirtualKeyVibePattern;
break;
case HapticFeedbackConstants.KEYBOARD_TAP:
pattern=mKeyboardTapVibePattern;
break;
case HapticFeedbackConstants.SAFE_MODE_DISABLED:
pattern=mSafeModeDisabledVibePattern;
break;
case HapticFeedbackConstants.SAFE_MODE_ENABLED:
pattern=mSafeModeEnabledVibePattern;
break;
case HapticFeedbackConstants.SCROLL_BARRIER:
pattern=mScrollBarrierVibePattern;
break;
default :
return false;
}
if (pattern.length == 1) {
mVibrator.vibrate(pattern[0]);
}
 else {
mVibrator.vibrate(pattern,-1);
}
return true;
}
