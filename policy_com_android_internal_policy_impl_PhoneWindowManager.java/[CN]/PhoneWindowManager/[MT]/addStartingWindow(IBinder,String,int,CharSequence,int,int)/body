{
  if (!SHOW_STARTING_ANIMATIONS) {
    return null;
  }
  if (packageName == null) {
    return null;
  }
  try {
    Context context=mContext;
    boolean setTheme=false;
    if (theme != 0 || labelRes != 0) {
      try {
        context=context.createPackageContext(packageName,0);
        if (theme != 0) {
          context.setTheme(theme);
          setTheme=true;
        }
      }
 catch (      PackageManager.NameNotFoundException e) {
      }
    }
    if (!setTheme) {
      context.setTheme(com.android.internal.R.style.Theme);
    }
    Window win=PolicyManager.makeNewWindow(context);
    if (win.getWindowStyle().getBoolean(com.android.internal.R.styleable.Window_windowDisablePreview,false)) {
      return null;
    }
    Resources r=context.getResources();
    win.setTitle(r.getText(labelRes,nonLocalizedLabel));
    win.setType(WindowManager.LayoutParams.TYPE_APPLICATION_STARTING);
    win.setFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE | WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE | WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM,WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE | WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE | WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM);
    win.setLayout(WindowManager.LayoutParams.MATCH_PARENT,WindowManager.LayoutParams.MATCH_PARENT);
    final WindowManager.LayoutParams params=win.getAttributes();
    params.token=appToken;
    params.packageName=packageName;
    params.windowAnimations=win.getWindowStyle().getResourceId(com.android.internal.R.styleable.Window_windowAnimationStyle,0);
    params.setTitle("Starting " + packageName);
    WindowManagerImpl wm=(WindowManagerImpl)context.getSystemService(Context.WINDOW_SERVICE);
    View view=win.getDecorView();
    if (win.isFloating()) {
      return null;
    }
    if (localLOGV)     Log.v(TAG,"Adding starting window for " + packageName + " / "+ appToken+ ": "+ (view.getParent() != null ? view : null));
    wm.addView(view,params);
    return view.getParent() != null ? view : null;
  }
 catch (  WindowManagerImpl.BadTokenException e) {
    Log.w(TAG,appToken + " already running, starting window not displayed");
  }
catch (  RuntimeException e) {
    Log.w(TAG,appToken + " failed creating starting window",e);
  }
  return null;
}
