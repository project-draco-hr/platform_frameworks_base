{
  int result=ACTION_PASS_TO_USER;
  final boolean isWakeKey=isWakeKeyTq(event);
  final boolean keyguardShowing=keyguardIsShowingTq();
  if (false) {
    Log.d(TAG,"interceptKeyTq event=" + event + " keycode="+ event.keycode+ " screenIsOn="+ screenIsOn+ " keyguardShowing="+ keyguardShowing);
  }
  if (keyguardShowing) {
    if (screenIsOn) {
      result|=ACTION_PASS_TO_USER;
    }
 else {
      result&=~ACTION_PASS_TO_USER;
      final boolean isKeyDown=(event.type == RawInputEvent.EV_KEY) && (event.value != 0);
      if (isWakeKey && isKeyDown) {
        if (!mKeyguardMediator.onWakeKeyWhenKeyguardShowingTq(event.keycode) && (event.keycode == KeyEvent.KEYCODE_VOLUME_DOWN || event.keycode == KeyEvent.KEYCODE_VOLUME_UP)) {
          if (isInCall()) {
            mKeyguardMediator.pokeWakelock();
          }
 else           if (isMusicActive()) {
            sendVolToMusic(event.keycode);
          }
        }
      }
    }
  }
 else   if (!screenIsOn) {
    if (isWakeKey) {
      result|=ACTION_POKE_USER_ACTIVITY;
      result&=~ACTION_PASS_TO_USER;
    }
  }
  int type=event.type;
  int code=event.keycode;
  boolean down=event.value != 0;
  if (type == RawInputEvent.EV_KEY) {
    if (code == KeyEvent.KEYCODE_ENDCALL || code == KeyEvent.KEYCODE_POWER) {
      if (down) {
        boolean hungUp=false;
        if (code == KeyEvent.KEYCODE_ENDCALL) {
          try {
            ITelephony phoneServ=getPhoneInterface();
            if (phoneServ != null) {
              hungUp=phoneServ.endCall();
            }
 else {
              Log.w(TAG,"!!! Unable to find ITelephony interface !!!");
            }
          }
 catch (          RemoteException ex) {
            Log.w(TAG,"ITelephony.endCall() threw RemoteException" + ex);
          }
        }
        if (hungUp || !screenIsOn) {
          mShouldTurnOffOnKeyUp=false;
        }
 else {
          mShouldTurnOffOnKeyUp=true;
          mHandler.postDelayed(mPowerLongPress,ViewConfiguration.getGlobalActionKeyTimeout());
          result&=~ACTION_PASS_TO_USER;
        }
      }
 else {
        mHandler.removeCallbacks(mPowerLongPress);
        if (mShouldTurnOffOnKeyUp) {
          mShouldTurnOffOnKeyUp=false;
          boolean gohome=(mEndcallBehavior & ENDCALL_HOME) != 0;
          boolean sleeps=(mEndcallBehavior & ENDCALL_SLEEPS) != 0;
          if (keyguardShowing || (sleeps && !gohome) || (gohome && !goHome() && sleeps)) {
            Log.d(TAG,"I'm tired mEndcallBehavior=0x" + Integer.toHexString(mEndcallBehavior));
            result&=~ACTION_POKE_USER_ACTIVITY;
            result|=ACTION_GO_TO_SLEEP;
          }
          result&=~ACTION_PASS_TO_USER;
        }
      }
    }
 else     if (isMediaKey(code)) {
      if ((result & ACTION_PASS_TO_USER) == 0) {
        KeyEvent keyEvent=new KeyEvent(event.when,event.when,down ? KeyEvent.ACTION_DOWN : KeyEvent.ACTION_UP,code,0);
        mBroadcastWakeLock.acquire();
        mHandler.post(new PassHeadsetKey(keyEvent));
      }
    }
 else     if (code == KeyEvent.KEYCODE_CALL) {
      if (down) {
        try {
          ITelephony phoneServ=getPhoneInterface();
          if (phoneServ != null) {
            if (phoneServ.isRinging()) {
              Log.i(TAG,"interceptKeyTq:" + " CALL key-down while ringing: Answer the call!");
              phoneServ.answerRingingCall();
              result&=~ACTION_PASS_TO_USER;
            }
          }
 else {
            Log.w(TAG,"CALL button: Unable to find ITelephony interface");
          }
        }
 catch (        RemoteException ex) {
          Log.w(TAG,"CALL button: RemoteException from getPhoneInterface()",ex);
        }
      }
    }
 else     if ((code == KeyEvent.KEYCODE_VOLUME_UP) || (code == KeyEvent.KEYCODE_VOLUME_DOWN)) {
      if (down) {
        try {
          ITelephony phoneServ=getPhoneInterface();
          if (phoneServ != null) {
            if (phoneServ.isRinging()) {
              Log.i(TAG,"interceptKeyTq:" + " VOLUME key-down while ringing: Silence ringer!");
              phoneServ.silenceRinger();
              result&=~ACTION_PASS_TO_USER;
            }
          }
 else {
            Log.w(TAG,"VOLUME button: Unable to find ITelephony interface");
          }
        }
 catch (        RemoteException ex) {
          Log.w(TAG,"VOLUME button: RemoteException from getPhoneInterface()",ex);
        }
      }
    }
  }
  return result;
}
