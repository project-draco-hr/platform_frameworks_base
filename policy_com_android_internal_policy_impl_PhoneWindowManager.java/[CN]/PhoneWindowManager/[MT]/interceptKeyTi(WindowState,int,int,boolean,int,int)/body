{
  boolean keyguardOn=keyguardOn();
  if (false) {
    Log.d(TAG,"interceptKeyTi code=" + code + " down="+ down+ " repeatCount="+ repeatCount+ " keyguardOn="+ keyguardOn+ " mHomePressed="+ mHomePressed);
  }
  if ((code == KeyEvent.KEYCODE_HOME) && !down) {
    mHandler.removeCallbacks(mHomeLongPress);
  }
  if (mHomePressed) {
    if (code == KeyEvent.KEYCODE_HOME) {
      if (!down) {
        mHomePressed=false;
        if ((flags & KeyEvent.FLAG_CANCELED) == 0) {
          boolean incomingRinging=false;
          try {
            ITelephony phoneServ=getPhoneInterface();
            if (phoneServ != null) {
              incomingRinging=phoneServ.isRinging();
            }
 else {
              Log.w(TAG,"Unable to find ITelephony interface");
            }
          }
 catch (          RemoteException ex) {
            Log.w(TAG,"RemoteException from getPhoneInterface()",ex);
          }
          if (incomingRinging) {
            Log.i(TAG,"Ignoring HOME; there's a ringing incoming call.");
          }
 else {
            launchHomeFromHotKey();
          }
        }
 else {
          Log.i(TAG,"Ignoring HOME; event canceled.");
        }
      }
    }
    return true;
  }
  if (code == KeyEvent.KEYCODE_HOME) {
    WindowManager.LayoutParams attrs=win != null ? win.getAttrs() : null;
    if (attrs != null) {
      final int type=attrs.type;
      if (type == WindowManager.LayoutParams.TYPE_KEYGUARD || type == WindowManager.LayoutParams.TYPE_KEYGUARD_DIALOG) {
        return false;
      }
      final int typeCount=WINDOW_TYPES_WHERE_HOME_DOESNT_WORK.length;
      for (int i=0; i < typeCount; i++) {
        if (type == WINDOW_TYPES_WHERE_HOME_DOESNT_WORK[i]) {
          return true;
        }
      }
    }
    if (down && repeatCount == 0) {
      if (!keyguardOn) {
        mHandler.postDelayed(mHomeLongPress,ViewConfiguration.getGlobalActionKeyTimeout());
      }
      mHomePressed=true;
    }
    return true;
  }
 else   if (code == KeyEvent.KEYCODE_MENU) {
    final int chordBug=KeyEvent.META_SHIFT_ON;
    if (down && repeatCount == 0) {
      if (mEnableShiftMenuBugReports && (metaKeys & chordBug) == chordBug) {
        Intent intent=new Intent(Intent.ACTION_BUG_REPORT);
        mContext.sendOrderedBroadcast(intent,null);
        return true;
      }
 else       if (SHOW_PROCESSES_ON_ALT_MENU && (metaKeys & KeyEvent.META_ALT_ON) == KeyEvent.META_ALT_ON) {
        Intent service=new Intent();
        service.setClassName(mContext,"com.android.server.LoadAverageService");
        ContentResolver res=mContext.getContentResolver();
        boolean shown=Settings.System.getInt(res,Settings.System.SHOW_PROCESSES,0) != 0;
        if (!shown) {
          mContext.startService(service);
        }
 else {
          mContext.stopService(service);
        }
        Settings.System.putInt(res,Settings.System.SHOW_PROCESSES,shown ? 0 : 1);
        return true;
      }
    }
  }
 else   if (code == KeyEvent.KEYCODE_NOTIFICATION) {
    if (down) {
      IStatusBar sbs=IStatusBar.Stub.asInterface(ServiceManager.getService("statusbar"));
      if (sbs != null) {
        try {
          sbs.toggle();
        }
 catch (        RemoteException e) {
          throw new RuntimeException(e);
        }
      }
    }
    return true;
  }
 else   if (code == KeyEvent.KEYCODE_SEARCH) {
    if (down) {
      if (repeatCount == 0) {
        mSearchKeyPressed=true;
      }
    }
 else {
      mSearchKeyPressed=false;
      if (mConsumeSearchKeyUp) {
        mConsumeSearchKeyUp=false;
        return true;
      }
    }
  }
  if (mSearchKeyPressed) {
    if (down && repeatCount == 0 && !keyguardOn) {
      Intent shortcutIntent=mShortcutManager.getIntent(code,metaKeys);
      if (shortcutIntent != null) {
        shortcutIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        mContext.startActivity(shortcutIntent);
        mConsumeSearchKeyUp=true;
        return true;
      }
    }
  }
  return false;
}
