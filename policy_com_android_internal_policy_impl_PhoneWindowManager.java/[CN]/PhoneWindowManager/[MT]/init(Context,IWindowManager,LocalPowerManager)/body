{
  mContext=context;
  mWindowManager=windowManager;
  mPowerManager=powerManager;
  mKeyguardMediator=new KeyguardViewMediator(context,this,powerManager);
  mHandler=new Handler();
  mOrientationListener=new MyOrientationListener(mContext);
  SettingsObserver settingsObserver=new SettingsObserver(mHandler);
  settingsObserver.observe();
  mShortcutManager=new ShortcutManager(context,mHandler);
  mShortcutManager.observe();
  mHomeIntent=new Intent(Intent.ACTION_MAIN,null);
  mHomeIntent.addCategory(Intent.CATEGORY_HOME);
  mHomeIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED);
  PowerManager pm=(PowerManager)context.getSystemService(Context.POWER_SERVICE);
  mBroadcastWakeLock=pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,"PhoneWindowManager.mBroadcastWakeLock");
  mDockWakeLock=pm.newWakeLock(PowerManager.FULL_WAKE_LOCK,"PhoneWindowManager.mDockWakeLock");
  mDockWakeLock.setReferenceCounted(false);
  mEnableShiftMenuBugReports="1".equals(SystemProperties.get("ro.debuggable"));
  mLidOpenRotation=readRotation(com.android.internal.R.integer.config_lidOpenRotation);
  mCarDockRotation=readRotation(com.android.internal.R.integer.config_carDockRotation);
  mDeskDockRotation=readRotation(com.android.internal.R.integer.config_deskDockRotation);
  mCarDockKeepsScreenOn=mContext.getResources().getBoolean(com.android.internal.R.bool.config_carDockKeepsScreenOn);
  mDeskDockKeepsScreenOn=mContext.getResources().getBoolean(com.android.internal.R.bool.config_deskDockKeepsScreenOn);
  mCarDockEnablesAccelerometer=mContext.getResources().getBoolean(com.android.internal.R.bool.config_carDockEnablesAccelerometer);
  mDeskDockEnablesAccelerometer=mContext.getResources().getBoolean(com.android.internal.R.bool.config_deskDockEnablesAccelerometer);
  mLidKeyboardAccessibility=mContext.getResources().getInteger(com.android.internal.R.integer.config_lidKeyboardAccessibility);
  mLidNavigationAccessibility=mContext.getResources().getInteger(com.android.internal.R.integer.config_lidNavigationAccessibility);
  IntentFilter intentFilter=new IntentFilter();
  intentFilter.addAction(Intent.ACTION_POWER_CONNECTED);
  intentFilter.addAction(Intent.ACTION_POWER_DISCONNECTED);
  context.registerReceiver(mPowerReceiver,intentFilter);
  Intent powerIntent=context.registerReceiver(null,new IntentFilter(Intent.ACTION_BATTERY_CHANGED));
  mPlugged=false;
  if (powerIntent != null) {
    mPlugged=powerIntent.getIntExtra(BatteryManager.EXTRA_PLUGGED,0) != 0;
  }
  context.registerReceiver(mDockReceiver,new IntentFilter(Intent.ACTION_DOCK_EVENT));
}
