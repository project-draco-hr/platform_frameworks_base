{
  out.writeString(bssid);
  out.writeString(venueName);
  if (networkAuthTypeList == null) {
    out.writeInt(0);
  }
 else {
    out.writeInt(networkAuthTypeList.size());
    for (    NetworkAuthType auth : networkAuthTypeList) {
      out.writeInt(auth.type);
      out.writeString(auth.redirectUrl);
    }
  }
  if (roamingConsortiumList == null) {
    out.writeInt(0);
  }
 else {
    out.writeInt(roamingConsortiumList.size());
    for (    String oi : roamingConsortiumList)     out.writeString(oi);
  }
  if (ipAddrTypeAvailability == null) {
    out.writeInt(IpAddressType.NULL_VALUE);
  }
 else {
    out.writeInt(ipAddrTypeAvailability.availability);
  }
  if (naiRealmList == null) {
    out.writeInt(0);
  }
 else {
    out.writeInt(naiRealmList.size());
    for (    NaiRealm realm : naiRealmList) {
      out.writeInt(realm.encoding);
      out.writeString(realm.realm);
    }
  }
  if (cellularNetworkList == null) {
    out.writeInt(0);
  }
 else {
    out.writeInt(cellularNetworkList.size());
    for (    CellularNetwork plmn : cellularNetworkList) {
      out.writeString(plmn.mcc);
      out.writeString(plmn.mnc);
    }
  }
  if (domainNameList == null) {
    out.writeInt(0);
  }
 else {
    out.writeInt(domainNameList.size());
    for (    String fqdn : domainNameList)     out.writeString(fqdn);
  }
  out.writeString(operatorFriendlyName);
  if (wanMetrics == null) {
    out.writeInt(0);
  }
 else {
    out.writeInt(1);
    out.writeInt(wanMetrics.wanInfo);
    out.writeLong(wanMetrics.downlinkSpeed);
    out.writeLong(wanMetrics.uplinkSpeed);
    out.writeInt(wanMetrics.downlinkLoad);
    out.writeInt(wanMetrics.uplinkLoad);
    out.writeInt(wanMetrics.lmd);
  }
  if (connectionCapabilityList == null) {
    out.writeInt(0);
  }
 else {
    out.writeInt(connectionCapabilityList.size());
    for (    IpProtoPort ip : connectionCapabilityList) {
      out.writeInt(ip.proto);
      out.writeInt(ip.port);
      out.writeInt(ip.status);
    }
  }
  if (osuProviderList == null) {
    out.writeInt(0);
  }
 else {
    out.writeInt(osuProviderList.size());
    for (    WifiPasspointOsuProvider osu : osuProviderList)     osu.writeToParcel(out,flags);
  }
}
