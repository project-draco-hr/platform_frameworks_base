{
  out.writeString(bssid);
  out.writeString(venueName);
  if (networkAuthType == null) {
    out.writeInt(0);
  }
 else {
    out.writeInt(networkAuthType.size());
    for (    NetworkAuthType auth : networkAuthType) {
      out.writeInt(auth.type);
      out.writeString(auth.redirectUrl);
    }
  }
  if (roamingConsortium == null) {
    out.writeInt(0);
  }
 else {
    out.writeInt(roamingConsortium.size());
    for (    String oi : roamingConsortium)     out.writeString(oi);
  }
  if (ipAddrTypeAvailability == null) {
    out.writeInt(IpAddressType.NULL_VALUE);
  }
 else {
    out.writeInt(ipAddrTypeAvailability.availability);
  }
  if (naiRealm == null) {
    out.writeInt(0);
  }
 else {
    out.writeInt(naiRealm.size());
    for (    NaiRealm realm : naiRealm) {
      out.writeInt(realm.encoding);
      out.writeString(realm.realm);
    }
  }
  if (cellularNetwork == null) {
    out.writeInt(0);
  }
 else {
    out.writeInt(cellularNetwork.size());
    for (    CellularNetwork plmn : cellularNetwork) {
      out.writeString(plmn.mcc);
      out.writeString(plmn.mnc);
    }
  }
  if (domainName == null) {
    out.writeInt(0);
  }
 else {
    out.writeInt(domainName.size());
    for (    String fqdn : domainName)     out.writeString(fqdn);
  }
  out.writeString(operatorFriendlyName);
  if (wanMetrics == null) {
    out.writeInt(0);
  }
 else {
    out.writeInt(1);
    out.writeInt(wanMetrics.wanInfo);
    out.writeLong(wanMetrics.downlinkSpeed);
    out.writeLong(wanMetrics.uplinkSpeed);
    out.writeInt(wanMetrics.downlinkLoad);
    out.writeInt(wanMetrics.uplinkLoad);
    out.writeInt(wanMetrics.lmd);
  }
  if (connectionCapability == null) {
    out.writeInt(0);
  }
 else {
    out.writeInt(connectionCapability.size());
    for (    IpProtoPort ip : connectionCapability) {
      out.writeInt(ip.proto);
      out.writeInt(ip.port);
      out.writeInt(ip.status);
    }
  }
  if (osuProviderList == null) {
    out.writeInt(0);
  }
 else {
    out.writeInt(osuProviderList.size());
    for (    WifiPasspointOsuProvider osu : osuProviderList)     osu.writeToParcel(out,flags);
  }
}
