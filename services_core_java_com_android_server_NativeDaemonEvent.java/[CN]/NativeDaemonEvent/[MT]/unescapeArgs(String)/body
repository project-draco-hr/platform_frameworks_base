{
  final boolean DEBUG_ROUTINE=false;
  final String LOGTAG="unescapeArgs";
  final ArrayList<String> parsed=new ArrayList<String>();
  final int length=rawEvent.length();
  int current=0;
  int wordEnd=-1;
  boolean quoted=false;
  if (DEBUG_ROUTINE)   Slog.e(LOGTAG,"parsing '" + rawEvent + "'");
  if (rawEvent.charAt(current) == '\"') {
    quoted=true;
    current++;
  }
  while (current < length) {
    char terminator=quoted ? '\"' : ' ';
    wordEnd=current;
    while (wordEnd < length && rawEvent.charAt(wordEnd) != terminator) {
      if (rawEvent.charAt(wordEnd) == '\\') {
        ++wordEnd;
      }
      ++wordEnd;
    }
    if (wordEnd > length)     wordEnd=length;
    String word=rawEvent.substring(current,wordEnd);
    current+=word.length();
    if (!quoted) {
      word=word.trim();
    }
 else {
      current++;
    }
    word=word.replace("\\\\","\\");
    word=word.replace("\\\"","\"");
    if (DEBUG_ROUTINE)     Slog.e(LOGTAG,"found '" + word + "'");
    parsed.add(word);
    int nextSpace=rawEvent.indexOf(' ',current);
    int nextQuote=rawEvent.indexOf(" \"",current);
    if (DEBUG_ROUTINE) {
      Slog.e(LOGTAG,"nextSpace=" + nextSpace + ", nextQuote="+ nextQuote);
    }
    if (nextQuote > -1 && nextQuote <= nextSpace) {
      quoted=true;
      current=nextQuote + 2;
    }
 else {
      quoted=false;
      if (nextSpace > -1) {
        current=nextSpace + 1;
      }
    }
    if (DEBUG_ROUTINE) {
      Slog.e(LOGTAG,"next loop - current=" + current + ", length="+ length+ ", quoted="+ quoted);
    }
  }
  return parsed.toArray(new String[parsed.size()]);
}
