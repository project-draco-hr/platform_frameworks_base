{
  final String[] parsed=rawEvent.split(" ");
  if (parsed.length < 2) {
    throw new IllegalArgumentException("Insufficient arguments");
  }
  int skiplength=0;
  final int code;
  try {
    code=Integer.parseInt(parsed[0]);
    skiplength=parsed[0].length() + 1;
  }
 catch (  NumberFormatException e) {
    throw new IllegalArgumentException("problem parsing code",e);
  }
  int cmdNumber=-1;
  if (isClassUnsolicited(code) == false) {
    if (parsed.length < 3) {
      throw new IllegalArgumentException("Insufficient arguemnts");
    }
    try {
      cmdNumber=Integer.parseInt(parsed[1]);
      skiplength+=parsed[1].length() + 1;
    }
 catch (    NumberFormatException e) {
      throw new IllegalArgumentException("problem parsing cmdNumber",e);
    }
  }
  String logMessage=rawEvent;
  if (parsed.length > 2 && parsed[2].equals(SENSITIVE_MARKER)) {
    skiplength+=parsed[2].length() + 1;
    logMessage=parsed[0] + " " + parsed[1]+ " {}";
  }
  final String message=rawEvent.substring(skiplength);
  return new NativeDaemonEvent(cmdNumber,code,message,rawEvent,logMessage,fdList);
}
