{
  readEnabledPrintServicesLocked();
  readInstalledPrintServicesLocked();
  Set<ComponentName> enabledOnFirstBoot=new HashSet<ComponentName>();
  readPrintServicesFromSettingLocked(Settings.Secure.ENABLED_ON_FIRST_BOOT_SYSTEM_PRINT_SERVICES,enabledOnFirstBoot);
  StringBuilder builder=new StringBuilder();
  final int serviceCount=mInstalledServices.size();
  for (int i=0; i < serviceCount; i++) {
    ServiceInfo serviceInfo=mInstalledServices.get(i).getResolveInfo().serviceInfo;
    if ((serviceInfo.applicationInfo.flags & ApplicationInfo.FLAG_SYSTEM) != 0) {
      ComponentName serviceName=new ComponentName(serviceInfo.packageName,serviceInfo.name);
      if (!mEnabledServices.contains(serviceName) && !enabledOnFirstBoot.contains(serviceName)) {
        if (builder.length() > 0) {
          builder.append(":");
        }
        builder.append(serviceName.flattenToString());
      }
    }
  }
  if (builder.length() <= 0) {
    return;
  }
  String servicesToEnable=builder.toString();
  String enabledServices=Settings.Secure.getStringForUser(mContext.getContentResolver(),Settings.Secure.ENABLED_PRINT_SERVICES,mUserId);
  if (TextUtils.isEmpty(enabledServices)) {
    enabledServices=servicesToEnable;
  }
 else {
    enabledServices=enabledServices + ":" + servicesToEnable;
  }
  Settings.Secure.putStringForUser(mContext.getContentResolver(),Settings.Secure.ENABLED_PRINT_SERVICES,enabledServices,mUserId);
  String enabledOnFirstBootServices=Settings.Secure.getStringForUser(mContext.getContentResolver(),Settings.Secure.ENABLED_ON_FIRST_BOOT_SYSTEM_PRINT_SERVICES,mUserId);
  if (TextUtils.isEmpty(enabledOnFirstBootServices)) {
    enabledOnFirstBootServices=servicesToEnable;
  }
 else {
    enabledOnFirstBootServices=enabledOnFirstBootServices + ":" + enabledServices;
  }
  Settings.Secure.putStringForUser(mContext.getContentResolver(),Settings.Secure.ENABLED_ON_FIRST_BOOT_SYSTEM_PRINT_SERVICES,enabledOnFirstBootServices,mUserId);
}
