{
synchronized (userAccounts.cacheLock) {
    final SQLiteDatabase db=userAccounts.openHelper.getReadableDatabase();
    if (isCheckinRequest) {
      Cursor cursor=db.query(TABLE_ACCOUNTS,ACCOUNT_TYPE_COUNT_PROJECTION,null,null,ACCOUNTS_TYPE,null,null);
      try {
        while (cursor.moveToNext()) {
          fout.println(cursor.getString(0) + "," + cursor.getString(1));
        }
      }
  finally {
        if (cursor != null) {
          cursor.close();
        }
      }
    }
 else {
      Account[] accounts=getAccountsFromCacheLocked(userAccounts,null,Process.myUid(),null);
      fout.println("Accounts: " + accounts.length);
      for (      Account account : accounts) {
        fout.println("  " + account);
      }
      fout.println();
      Cursor cursor=db.query(DebugDbHelper.TABLE_DEBUG,null,null,null,null,null,DebugDbHelper.TIMESTAMP);
      fout.println("AccountId, Action_Type, timestamp, UID, TableName, Key");
      fout.println("Accounts History");
      try {
        while (cursor.moveToNext()) {
          fout.println(cursor.getString(0) + "," + cursor.getString(1)+ ","+ cursor.getString(2)+ ","+ cursor.getString(3)+ ","+ cursor.getString(4)+ ","+ cursor.getString(5));
        }
      }
  finally {
        cursor.close();
      }
      fout.println();
synchronized (mSessions) {
        final long now=SystemClock.elapsedRealtime();
        fout.println("Active Sessions: " + mSessions.size());
        for (        Session session : mSessions.values()) {
          fout.println("  " + session.toDebugString(now));
        }
      }
      fout.println();
      mAuthenticatorCache.dump(fd,fout,args,userAccounts.userId);
    }
  }
}
