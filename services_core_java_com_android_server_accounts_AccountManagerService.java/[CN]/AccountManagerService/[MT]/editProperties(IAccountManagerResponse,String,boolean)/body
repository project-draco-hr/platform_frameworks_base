{
  final int callingUid=Binder.getCallingUid();
  if (Log.isLoggable(TAG,Log.VERBOSE)) {
    Log.v(TAG,"editProperties: accountType " + accountType + ", response "+ response+ ", expectActivityLaunch "+ expectActivityLaunch+ ", caller's uid "+ callingUid+ ", pid "+ Binder.getCallingPid());
  }
  if (response == null)   throw new IllegalArgumentException("response is null");
  if (accountType == null)   throw new IllegalArgumentException("accountType is null");
  if (!isAccountOwnedByCallingUid(accountType,callingUid) && !isSystemUid(callingUid)) {
    String msg=String.format("uid %s cannot edit authenticator properites for account type: %s",callingUid,accountType);
    throw new SecurityException(msg);
  }
  UserAccounts accounts=getUserAccountsForCaller();
  long identityToken=clearCallingIdentity();
  try {
    new Session(accounts,response,accountType,expectActivityLaunch,true,null,false){
      @Override public void run() throws RemoteException {
        mAuthenticator.editProperties(this,mAccountType);
      }
      @Override protected String toDebugString(      long now){
        return super.toDebugString(now) + ", editProperties" + ", accountType "+ accountType;
      }
    }
.bind();
  }
  finally {
    restoreCallingIdentity(identityToken);
  }
}
