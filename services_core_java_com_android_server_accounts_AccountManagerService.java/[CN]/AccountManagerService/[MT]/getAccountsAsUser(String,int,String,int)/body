{
  int callingUid=Binder.getCallingUid();
  if (userId != UserHandle.getCallingUserId() && callingUid != Process.myUid() && mContext.checkCallingOrSelfPermission(android.Manifest.permission.INTERACT_ACROSS_USERS_FULL) != PackageManager.PERMISSION_GRANTED) {
    throw new SecurityException("User " + UserHandle.getCallingUserId() + " trying to get account for "+ userId);
  }
  if (Log.isLoggable(TAG,Log.VERBOSE)) {
    Log.v(TAG,"getAccounts: accountType " + type + ", caller's uid "+ Binder.getCallingUid()+ ", pid "+ Binder.getCallingPid());
  }
  if (packageUid != -1 && UserHandle.isSameApp(callingUid,Process.myUid())) {
    callingUid=packageUid;
  }
  List<String> visibleAccountTypes=getTypesVisibleToCaller(callingUid,userId);
  if (visibleAccountTypes.isEmpty() || (type != null && !visibleAccountTypes.contains(type))) {
    return new Account[0];
  }
 else   if (visibleAccountTypes.contains(type)) {
    visibleAccountTypes=new ArrayList<>();
    visibleAccountTypes.add(type);
  }
  long identityToken=clearCallingIdentity();
  try {
    UserAccounts accounts=getUserAccounts(userId);
    return getAccountsInternal(accounts,callingUid,callingPackage,visibleAccountTypes);
  }
  finally {
    restoreCallingIdentity(identityToken);
  }
}
