{
  int deleted;
synchronized (accounts.cacheLock) {
    final SQLiteDatabase db=accounts.openHelper.getWritableDatabase();
    final long accountId=getAccountIdLocked(db,account);
    deleted=db.delete(TABLE_ACCOUNTS,ACCOUNTS_NAME + "=? AND " + ACCOUNTS_TYPE+ "=?",new String[]{account.name,account.type});
    removeAccountFromCacheLocked(accounts,account);
    sendAccountsChangedBroadcast(accounts.userId);
    logRecord(db,DebugDbHelper.ACTION_ACCOUNT_REMOVE,TABLE_ACCOUNTS,accountId,accounts);
  }
  long id=Binder.clearCallingIdentity();
  try {
    int parentUserId=accounts.userId;
    if (canHaveProfile(parentUserId)) {
      List<UserInfo> users=mUserManager.getUsers(true);
      for (      UserInfo user : users) {
        if (user.isRestricted() && parentUserId == (user.restrictedProfileParentId)) {
          removeSharedAccountAsUser(account,user.id,callingUid);
        }
      }
    }
  }
  finally {
    Binder.restoreCallingIdentity(id);
  }
  return (deleted > 0);
}
