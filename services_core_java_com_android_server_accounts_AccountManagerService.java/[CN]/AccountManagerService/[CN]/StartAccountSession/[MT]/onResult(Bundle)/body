{
  Bundle.setDefusable(result,true);
  mNumResults++;
  Intent intent=null;
  if (result != null && (intent=result.getParcelable(AccountManager.KEY_INTENT)) != null) {
    checkKeyIntent(Binder.getCallingUid(),intent);
    if (!mIsPasswordForwardingAllowed) {
      result.remove(AccountManager.KEY_PASSWORD);
    }
  }
  IAccountManagerResponse response;
  if (mExpectActivityLaunch && result != null && result.containsKey(AccountManager.KEY_INTENT)) {
    response=mResponse;
  }
 else {
    response=getResponseAndClose();
  }
  if (response == null) {
    return;
  }
  if (result == null) {
    if (Log.isLoggable(TAG,Log.VERBOSE)) {
      Log.v(TAG,getClass().getSimpleName() + " calling onError() on response " + response);
    }
    sendErrorResponse(response,AccountManager.ERROR_CODE_INVALID_RESPONSE,"null bundle returned");
    return;
  }
  if ((result.getInt(AccountManager.KEY_ERROR_CODE,-1) > 0) && (intent == null)) {
    sendErrorResponse(response,result.getInt(AccountManager.KEY_ERROR_CODE),result.getString(AccountManager.KEY_ERROR_MESSAGE));
    return;
  }
  result.remove(AccountManager.KEY_AUTHTOKEN);
  if (Log.isLoggable(TAG,Log.VERBOSE)) {
    Log.v(TAG,getClass().getSimpleName() + " calling onResult() on response " + response);
  }
  Bundle sessionBundle=result.getBundle(AccountManager.KEY_ACCOUNT_SESSION_BUNDLE);
  if (sessionBundle != null) {
    String accountType=sessionBundle.getString(AccountManager.KEY_ACCOUNT_TYPE);
    if (TextUtils.isEmpty(accountType) || !mAccountType.equalsIgnoreCase(accountType)) {
      Log.w(TAG,"Account type in session bundle doesn't match request.");
    }
    sessionBundle.putString(AccountManager.KEY_ACCOUNT_TYPE,mAccountType);
    try {
      CryptoHelper cryptoHelper=CryptoHelper.getInstance();
      Bundle encryptedBundle=cryptoHelper.encryptBundle(sessionBundle);
      result.putBundle(AccountManager.KEY_ACCOUNT_SESSION_BUNDLE,encryptedBundle);
    }
 catch (    GeneralSecurityException e) {
      if (Log.isLoggable(TAG,Log.DEBUG)) {
        Log.v(TAG,"Failed to encrypt session bundle!",e);
      }
      sendErrorResponse(response,AccountManager.ERROR_CODE_INVALID_RESPONSE,"failed to encrypt session bundle");
      return;
    }
  }
  sendResponse(response,result);
}
