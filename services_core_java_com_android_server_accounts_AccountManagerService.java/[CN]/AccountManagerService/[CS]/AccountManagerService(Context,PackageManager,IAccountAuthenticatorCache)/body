{
  mContext=context;
  mPackageManager=packageManager;
  mAppOpsManager=mContext.getSystemService(AppOpsManager.class);
  mMessageHandler=new MessageHandler(FgThread.get().getLooper());
  mAuthenticatorCache=authenticatorCache;
  mAuthenticatorCache.setListener(this,null);
  sThis.set(this);
  IntentFilter intentFilter=new IntentFilter();
  intentFilter.addAction(Intent.ACTION_PACKAGE_REMOVED);
  intentFilter.addDataScheme("package");
  mContext.registerReceiver(new BroadcastReceiver(){
    @Override public void onReceive(    Context context1,    Intent intent){
      if (!intent.getBooleanExtra(Intent.EXTRA_REPLACING,false)) {
        Runnable r=new Runnable(){
          @Override public void run(){
            purgeOldGrantsAll();
          }
        }
;
        new Thread(r).start();
      }
    }
  }
,intentFilter);
  IntentFilter userFilter=new IntentFilter();
  userFilter.addAction(Intent.ACTION_USER_REMOVED);
  userFilter.addAction(Intent.ACTION_USER_UNLOCKED);
  mContext.registerReceiverAsUser(new BroadcastReceiver(){
    @Override public void onReceive(    Context context,    Intent intent){
      String action=intent.getAction();
      if (Intent.ACTION_USER_REMOVED.equals(action)) {
        onUserRemoved(intent);
      }
 else       if (Intent.ACTION_USER_UNLOCKED.equals(action)) {
        onUserUnlocked(intent);
      }
    }
  }
,UserHandle.ALL,userFilter,null,null);
}
