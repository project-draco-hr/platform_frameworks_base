{
  Float previousStartValue=getChildTag(child,TAG_START_TRANSLATION_Z);
  Float previousEndValue=getChildTag(child,TAG_END_TRANSLATION_Z);
  float newEndValue=viewState.zTranslation;
  if (previousEndValue != null && previousEndValue == newEndValue) {
    return;
  }
  ObjectAnimator previousAnimator=getChildTag(child,TAG_ANIMATOR_TRANSLATION_Z);
  if (!mAnimationFilter.animateZ) {
    if (previousAnimator != null) {
      PropertyValuesHolder[] values=previousAnimator.getValues();
      float relativeDiff=newEndValue - previousEndValue;
      float newStartValue=previousStartValue + relativeDiff;
      values[0].setFloatValues(newStartValue,newEndValue);
      child.setTag(TAG_START_TRANSLATION_Z,newStartValue);
      child.setTag(TAG_END_TRANSLATION_Z,newEndValue);
      previousAnimator.setCurrentPlayTime(previousAnimator.getCurrentPlayTime());
      return;
    }
 else {
      child.setTranslationZ(newEndValue);
    }
  }
  ObjectAnimator animator=ObjectAnimator.ofFloat(child,View.TRANSLATION_Z,child.getTranslationZ(),newEndValue);
  animator.setInterpolator(mFastOutSlowInInterpolator);
  long newDuration=cancelAnimatorAndGetNewDuration(previousAnimator);
  animator.setDuration(newDuration);
  if (delay > 0 && (previousAnimator == null || !previousAnimator.isRunning())) {
    animator.setStartDelay(delay);
  }
  animator.addListener(getGlobalAnimationFinishedListener());
  animator.addListener(new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator animation){
      child.setTag(TAG_ANIMATOR_TRANSLATION_Z,null);
      child.setTag(TAG_START_TRANSLATION_Z,null);
      child.setTag(TAG_END_TRANSLATION_Z,null);
    }
  }
);
  startAnimator(animator);
  child.setTag(TAG_ANIMATOR_TRANSLATION_Z,animator);
  child.setTag(TAG_START_TRANSLATION_Z,child.getTranslationZ());
  child.setTag(TAG_END_TRANSLATION_Z,newEndValue);
}
