{
  final float endAlpha=viewState.alpha;
  Float previousEndValue=getChildTag(child,TAG_END_ALPHA);
  if (previousEndValue != null && previousEndValue == endAlpha) {
    return;
  }
  ObjectAnimator previousAnimator=getChildTag(child,TAG_ANIMATOR_ALPHA);
  long newDuration=cancelAnimatorAndGetNewDuration(previousAnimator,hasNewEvents);
  if (newDuration <= 0) {
    if (previousAnimator == null) {
      child.setAlpha(endAlpha);
      if (endAlpha == 0) {
        child.setVisibility(View.INVISIBLE);
      }
    }
    return;
  }
  ObjectAnimator animator=ObjectAnimator.ofFloat(child,View.ALPHA,child.getAlpha(),endAlpha);
  animator.setInterpolator(mFastOutSlowInInterpolator);
  final int currentLayerType=child.getLayerType();
  child.setLayerType(View.LAYER_TYPE_HARDWARE,null);
  animator.addListener(new AnimatorListenerAdapter(){
    public boolean mWasCancelled;
    @Override public void onAnimationEnd(    Animator animation){
      child.setLayerType(currentLayerType,null);
      if (endAlpha == 0 && !mWasCancelled) {
        child.setVisibility(View.INVISIBLE);
      }
      child.setTag(TAG_ANIMATOR_ALPHA,null);
      child.setTag(TAG_END_ALPHA,null);
    }
    @Override public void onAnimationCancel(    Animator animation){
      mWasCancelled=true;
    }
    @Override public void onAnimationStart(    Animator animation){
      mWasCancelled=false;
    }
  }
);
  animator.addListener(getGlobalAnimationFinishedListener());
  animator.addListener(new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator animation){
    }
  }
);
  animator.start();
  child.setTag(TAG_ANIMATOR_ALPHA,animator);
  child.setTag(TAG_END_ALPHA,endAlpha);
}
