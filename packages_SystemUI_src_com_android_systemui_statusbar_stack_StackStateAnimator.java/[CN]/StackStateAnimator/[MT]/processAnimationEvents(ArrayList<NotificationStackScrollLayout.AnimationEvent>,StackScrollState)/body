{
  for (  NotificationStackScrollLayout.AnimationEvent event : animationEvents) {
    final ExpandableView changingView=(ExpandableView)event.changingView;
    if (event.animationType == NotificationStackScrollLayout.AnimationEvent.ANIMATION_TYPE_ADD) {
      StackViewState viewState=finalState.getViewStateForView(changingView);
      if (viewState == null) {
        continue;
      }
      if (changingView.getVisibility() == View.GONE) {
        finalState.removeViewStateForView(changingView);
        continue;
      }
      finalState.applyState(changingView,viewState);
      mNewAddChildren.add(changingView);
    }
 else     if (event.animationType == NotificationStackScrollLayout.AnimationEvent.ANIMATION_TYPE_REMOVE) {
      if (changingView.getVisibility() == View.GONE) {
        mHostLayout.getOverlay().remove(changingView);
        continue;
      }
      StackViewState viewState=finalState.getViewStateForView(event.viewAfterChangingView);
      int actualHeight=changingView.getActualHeight();
      float translationDirection=-1.0f;
      if (viewState != null) {
        translationDirection=((viewState.yTranslation - (changingView.getTranslationY() + actualHeight / 2.0f)) * 2 / actualHeight);
        translationDirection=Math.max(Math.min(translationDirection,1.0f),-1.0f);
      }
      changingView.performRemoveAnimation(ANIMATION_DURATION_APPEAR_DISAPPEAR,translationDirection,new Runnable(){
        @Override public void run(){
          mHostLayout.getOverlay().remove(changingView);
        }
      }
);
    }
 else     if (event.animationType == NotificationStackScrollLayout.AnimationEvent.ANIMATION_TYPE_REMOVE_SWIPED_OUT) {
      mHostLayout.getOverlay().remove(changingView);
    }
 else     if (event.animationType == NotificationStackScrollLayout.AnimationEvent.ANIMATION_TYPE_GROUP_EXPANSION_CHANGED) {
      ExpandableNotificationRow row=(ExpandableNotificationRow)event.changingView;
      row.prepareExpansionChanged(finalState);
      mChildExpandingView=row;
    }
 else     if (event.animationType == NotificationStackScrollLayout.AnimationEvent.ANIMATION_TYPE_HEADS_UP_APPEAR) {
      StackViewState viewState=finalState.getViewStateForView(changingView);
      mTmpState.copyFrom(viewState);
      if (event.headsUpFromBottom) {
        mTmpState.yTranslation=mHeadsUpAppearHeightBottom;
      }
 else {
        mTmpState.yTranslation=-mTmpState.height;
      }
      mHeadsUpAppearChildren.add(changingView);
      finalState.applyState(changingView,mTmpState);
    }
 else     if (event.animationType == NotificationStackScrollLayout.AnimationEvent.ANIMATION_TYPE_HEADS_UP_DISAPPEAR) {
      mHeadsUpDisappearChildren.add(changingView);
    }
    mNewEvents.add(event);
  }
}
