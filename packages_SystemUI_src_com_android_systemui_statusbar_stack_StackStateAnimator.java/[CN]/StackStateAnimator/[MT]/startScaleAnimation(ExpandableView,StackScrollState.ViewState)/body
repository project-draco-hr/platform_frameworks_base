{
  Float previousEndValue=getChildTag(child,TAG_END_SCALE);
  if (previousEndValue != null && previousEndValue == viewState.scale) {
    return;
  }
  ObjectAnimator previousAnimator=getChildTag(child,TAG_ANIMATOR_SCALE);
  long newDuration=cancelAnimatorAndGetNewDuration(previousAnimator,mAnimationFilter.animateScale);
  if (newDuration <= 0) {
    child.setScaleX(viewState.scale);
    child.setScaleY(viewState.scale);
    if (previousAnimator != null && !isRunning()) {
      onAnimationFinished();
    }
    return;
  }
  PropertyValuesHolder holderX=PropertyValuesHolder.ofFloat(View.SCALE_X,child.getScaleX(),viewState.scale);
  PropertyValuesHolder holderY=PropertyValuesHolder.ofFloat(View.SCALE_Y,child.getScaleY(),viewState.scale);
  ObjectAnimator animator=ObjectAnimator.ofPropertyValuesHolder(child,holderX,holderY);
  animator.setInterpolator(mFastOutSlowInInterpolator);
  animator.setDuration(newDuration);
  animator.addListener(getGlobalAnimationFinishedListener());
  animator.addListener(new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator animation){
      child.setTag(TAG_ANIMATOR_SCALE,null);
      child.setTag(TAG_END_SCALE,null);
    }
  }
);
  startInstantly(animator);
  child.setTag(TAG_ANIMATOR_SCALE,animator);
  child.setTag(TAG_END_SCALE,viewState.scale);
}
