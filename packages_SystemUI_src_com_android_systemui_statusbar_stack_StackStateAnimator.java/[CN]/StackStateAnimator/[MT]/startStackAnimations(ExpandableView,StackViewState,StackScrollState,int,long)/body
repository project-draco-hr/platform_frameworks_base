{
  final float alpha=viewState.alpha;
  boolean wasAdded=mNewAddChildren.contains(child);
  long duration=mCurrentLength;
  if (wasAdded && mAnimationFilter.hasGoToFullShadeEvent) {
    child.setTranslationY(child.getTranslationY() + mGoToFullShadeAppearingTranslation);
    float longerDurationFactor=viewState.notGoneIndex - mCurrentLastNotAddedIndex;
    longerDurationFactor=(float)Math.pow(longerDurationFactor,0.7f);
    duration=ANIMATION_DURATION_APPEAR_DISAPPEAR + 50 + (long)(100 * longerDurationFactor);
  }
  boolean yTranslationChanging=child.getTranslationY() != viewState.yTranslation;
  boolean zTranslationChanging=child.getTranslationZ() != viewState.zTranslation;
  boolean scaleChanging=child.getScaleX() != viewState.scale;
  boolean alphaChanging=alpha != child.getAlpha();
  boolean heightChanging=viewState.height != child.getActualHeight();
  boolean darkChanging=viewState.dark != child.isDark();
  boolean topInsetChanging=viewState.clipTopAmount != child.getClipTopAmount();
  boolean hasDelays=mAnimationFilter.hasDelays;
  boolean isDelayRelevant=yTranslationChanging || zTranslationChanging || scaleChanging|| alphaChanging|| heightChanging|| topInsetChanging|| darkChanging;
  long delay=0;
  if (fixedDelay != -1) {
    delay=fixedDelay;
  }
 else   if (hasDelays && isDelayRelevant || wasAdded) {
    delay=mCurrentAdditionalDelay + calculateChildAnimationDelay(viewState,finalState);
  }
  startViewAnimations(child,viewState,delay,duration);
  if (heightChanging && child.getActualHeight() != 0) {
    startHeightAnimation(child,viewState,duration,delay);
  }
  if (topInsetChanging) {
    startInsetAnimation(child,viewState,duration,delay);
  }
  child.setDimmed(viewState.dimmed,mAnimationFilter.animateDimmed);
  child.setDark(viewState.dark,mAnimationFilter.animateDark,delay);
  child.setBelowSpeedBump(viewState.belowSpeedBump);
  child.setHideSensitive(viewState.hideSensitive,mAnimationFilter.animateHideSensitive,delay,duration);
  if (wasAdded) {
    child.performAddAnimation(delay,mCurrentLength);
  }
  if (child instanceof SpeedBumpView) {
    finalState.performSpeedBumpAnimation(i,(SpeedBumpView)child,viewState,delay + duration);
  }
}
