{
  Integer previousStartValue=getChildTag(child,TAG_START_HEIGHT);
  Integer previousEndValue=getChildTag(child,TAG_END_HEIGHT);
  int newEndValue=viewState.height;
  if (previousEndValue != null && previousEndValue == newEndValue) {
    return;
  }
  ValueAnimator previousAnimator=getChildTag(child,TAG_ANIMATOR_HEIGHT);
  if (!mAnimationFilter.animateHeight) {
    if (previousAnimator != null) {
      PropertyValuesHolder[] values=previousAnimator.getValues();
      int relativeDiff=newEndValue - previousEndValue;
      int newStartValue=previousStartValue + relativeDiff;
      values[0].setIntValues(newStartValue,newEndValue);
      child.setTag(TAG_START_HEIGHT,newStartValue);
      child.setTag(TAG_END_HEIGHT,newEndValue);
      previousAnimator.setCurrentPlayTime(previousAnimator.getCurrentPlayTime());
      return;
    }
 else {
      child.setActualHeight(newEndValue,false);
      return;
    }
  }
  ValueAnimator animator=ValueAnimator.ofInt(child.getActualHeight(),newEndValue);
  animator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){
    @Override public void onAnimationUpdate(    ValueAnimator animation){
      child.setActualHeight((int)animation.getAnimatedValue(),false);
    }
  }
);
  animator.setInterpolator(mFastOutSlowInInterpolator);
  long newDuration=cancelAnimatorAndGetNewDuration(previousAnimator);
  animator.setDuration(newDuration);
  animator.addListener(getGlobalAnimationFinishedListener());
  animator.addListener(new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator animation){
      child.setTag(TAG_ANIMATOR_HEIGHT,null);
      child.setTag(TAG_START_HEIGHT,null);
      child.setTag(TAG_END_HEIGHT,null);
    }
  }
);
  startInstantly(animator);
  child.setTag(TAG_ANIMATOR_HEIGHT,animator);
  child.setTag(TAG_START_HEIGHT,child.getActualHeight());
  child.setTag(TAG_END_HEIGHT,newEndValue);
}
