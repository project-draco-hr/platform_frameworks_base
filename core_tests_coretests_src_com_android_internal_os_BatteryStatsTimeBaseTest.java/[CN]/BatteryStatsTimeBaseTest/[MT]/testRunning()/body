{
  TestTimeBase tb=new TestTimeBase();
  tb.setRunning(true,100,10000);
  tb.setRunning(false,200,11000);
  Assert.assertEquals(100,tb.getUptimeStart());
  Assert.assertEquals(10000,tb.getRealtimeStart());
  BatteryStatsImpl.TimeBaseObs observer1=Mockito.mock(BatteryStatsImpl.TimeBaseObs.class);
  BatteryStatsImpl.TimeBaseObs observer2=Mockito.mock(BatteryStatsImpl.TimeBaseObs.class);
  BatteryStatsImpl.TimeBaseObs observer3=Mockito.mock(BatteryStatsImpl.TimeBaseObs.class);
  tb.add(observer1);
  tb.add(observer2);
  tb.add(observer3);
  Assert.assertTrue(tb.hasObserver(observer1));
  Assert.assertTrue(tb.hasObserver(observer2));
  Assert.assertTrue(tb.hasObserver(observer3));
  tb.remove(observer3);
  Assert.assertTrue(tb.hasObserver(observer1));
  Assert.assertTrue(tb.hasObserver(observer2));
  Assert.assertFalse(tb.hasObserver(observer3));
  tb.setRunning(true,250,14000);
  Assert.assertTrue(tb.isRunning());
  if (false) {
    Log.d(TAG,"mUptimeStart=" + tb.getUptimeStart() + " mRealtimeStart="+ tb.getRealtimeStart()+ " mUptime="+ tb.getUptime(250)+ " mRealtime="+ tb.getRealtime(14000)+ " isRunning="+ tb.isRunning());
  }
  Assert.assertEquals(250,tb.getUptimeStart());
  Assert.assertEquals(14000,tb.getRealtimeStart());
  Assert.assertEquals(100,tb.getUptime(250));
  Assert.assertEquals(1000,tb.getRealtime(14000));
  Mockito.verify(observer1).onTimeStarted(14000,100,1000);
  Mockito.verify(observer1,Mockito.never()).onTimeStopped(-1,-1,-1);
  Mockito.verifyNoMoreInteractions(observer1);
  Mockito.verify(observer2).onTimeStarted(14000,100,1000);
  Mockito.verify(observer2,Mockito.never()).onTimeStopped(-1,-1,-1);
  Mockito.verifyNoMoreInteractions(observer2);
  Mockito.reset(observer1);
  Mockito.reset(observer2);
  Mockito.reset(observer3);
  Assert.assertEquals(400,tb.getUptime(550));
  Assert.assertEquals(1555,tb.getRealtime(14555));
  tb.setRunning(false,402,14002);
  Assert.assertFalse(tb.isRunning());
  if (false) {
    Log.d(TAG,"mUptimeStart=" + tb.getUptimeStart() + " mRealtimeStart="+ tb.getRealtimeStart()+ " mUptime="+ tb.getUptime(250)+ " mRealtime="+ tb.getRealtime(14000)+ " isRunning="+ tb.isRunning());
  }
  Assert.assertEquals(252,tb.getUptime(402));
  Assert.assertEquals(1002,tb.getRealtime(14002));
  Mockito.verify(observer1).onTimeStopped(14002,252,1002);
  Mockito.verify(observer1,Mockito.never()).onTimeStopped(-1,-1,-1);
  Mockito.verifyNoMoreInteractions(observer1);
  Mockito.verify(observer2).onTimeStopped(14002,252,1002);
  Mockito.verify(observer2,Mockito.never()).onTimeStopped(-1,-1,-1);
  Mockito.verifyNoMoreInteractions(observer2);
  Assert.assertEquals(252,tb.getUptime(600));
  Assert.assertEquals(1002,tb.getRealtime(17000));
}
