{
  short type=tag.getDataType();
  if (type == ExifTag.TYPE_ASCII || type == ExifTag.TYPE_UNDEFINED || type == ExifTag.TYPE_UNSIGNED_BYTE) {
    int size=tag.getComponentCount();
    if (mCorrespondingEvent.size() > 0) {
      if (mCorrespondingEvent.firstEntry().getKey() < mTiffStream.getReadByteCount() + size) {
        Object event=mCorrespondingEvent.firstEntry().getValue();
        if (event instanceof ImageEvent) {
          Log.w(TAG,"Thumbnail overlaps value for tag: \n" + tag.toString());
          Entry<Integer,Object> entry=mCorrespondingEvent.pollFirstEntry();
          Log.w(TAG,"Invalid thumbnail offset: " + entry.getKey());
        }
 else {
          if (event instanceof IfdEvent) {
            Log.w(TAG,"Ifd " + ((IfdEvent)event).ifd + " overlaps value for tag: \n"+ tag.toString());
          }
 else           if (event instanceof ExifTagEvent) {
            Log.w(TAG,"Tag value for tag: \n" + ((ExifTagEvent)event).tag.toString() + " overlaps value for tag: \n"+ tag.toString());
          }
          size=mCorrespondingEvent.firstEntry().getKey() - mTiffStream.getReadByteCount();
          Log.w(TAG,"Invalid size of tag: \n" + tag.toString() + " setting count to: "+ size);
          tag.forceSetComponentCount(size);
        }
      }
    }
  }
switch (tag.getDataType()) {
case ExifTag.TYPE_UNSIGNED_BYTE:
case ExifTag.TYPE_UNDEFINED:
{
      byte buf[]=new byte[tag.getComponentCount()];
      read(buf);
      tag.setValue(buf);
    }
  break;
case ExifTag.TYPE_ASCII:
tag.setValue(readString(tag.getComponentCount()));
break;
case ExifTag.TYPE_UNSIGNED_LONG:
{
long value[]=new long[tag.getComponentCount()];
for (int i=0, n=value.length; i < n; i++) {
value[i]=readUnsignedLong();
}
tag.setValue(value);
}
break;
case ExifTag.TYPE_UNSIGNED_RATIONAL:
{
Rational value[]=new Rational[tag.getComponentCount()];
for (int i=0, n=value.length; i < n; i++) {
value[i]=readUnsignedRational();
}
tag.setValue(value);
}
break;
case ExifTag.TYPE_UNSIGNED_SHORT:
{
int value[]=new int[tag.getComponentCount()];
for (int i=0, n=value.length; i < n; i++) {
value[i]=readUnsignedShort();
}
tag.setValue(value);
}
break;
case ExifTag.TYPE_LONG:
{
int value[]=new int[tag.getComponentCount()];
for (int i=0, n=value.length; i < n; i++) {
value[i]=readLong();
}
tag.setValue(value);
}
break;
case ExifTag.TYPE_RATIONAL:
{
Rational value[]=new Rational[tag.getComponentCount()];
for (int i=0, n=value.length; i < n; i++) {
value[i]=readRational();
}
tag.setValue(value);
}
break;
}
if (LOGV) {
Log.v(TAG,"\n" + tag.toString());
}
}
