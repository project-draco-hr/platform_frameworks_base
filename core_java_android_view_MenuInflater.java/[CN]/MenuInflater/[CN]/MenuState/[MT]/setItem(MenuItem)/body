{
  item.setChecked(itemChecked).setVisible(itemVisible).setEnabled(itemEnabled).setCheckable(itemCheckable >= 1).setTitleCondensed(itemTitleCondensed).setIcon(itemIconResId).setAlphabeticShortcut(itemAlphabeticShortcut).setNumericShortcut(itemNumericShortcut);
  if (itemShowAsAction >= 0) {
    item.setShowAsAction(itemShowAsAction);
  }
  if (itemListenerMethodName != null) {
    if (mContext.isRestricted()) {
      throw new IllegalStateException("The android:onClick attribute cannot " + "be used within a restricted context");
    }
    item.setOnMenuItemClickListener(new InflatedOnMenuItemClickListener(mContext,itemListenerMethodName));
  }
  if (item instanceof MenuItemImpl) {
    MenuItemImpl impl=(MenuItemImpl)item;
    if (itemCheckable >= 2) {
      impl.setExclusiveCheckable(true);
    }
  }
  if (itemActionViewClassName != null) {
    try {
      final Class<?> clazz=Class.forName(itemActionViewClassName);
      Constructor<?> c=clazz.getConstructor(ACTION_VIEW_CONSTRUCTOR_SIGNATURE);
      item.setActionView((View)c.newInstance(mContext));
    }
 catch (    Exception e) {
      throw new InflateException(e);
    }
  }
 else   if (itemActionViewLayout > 0) {
    final LayoutInflater inflater=LayoutInflater.from(mContext);
    item.setActionView(inflater.inflate(itemActionViewLayout,null));
  }
}
