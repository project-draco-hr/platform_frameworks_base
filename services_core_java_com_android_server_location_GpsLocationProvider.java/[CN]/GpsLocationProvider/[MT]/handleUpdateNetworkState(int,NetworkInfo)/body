{
  mNetworkAvailable=(state == LocationProvider.AVAILABLE);
  if (DEBUG) {
    Log.d(TAG,"updateNetworkState " + (mNetworkAvailable ? "available" : "unavailable") + " info: "+ info);
  }
  if (info != null) {
    boolean dataEnabled=Settings.Global.getInt(mContext.getContentResolver(),Settings.Global.MOBILE_DATA,1) == 1;
    boolean networkAvailable=info.isAvailable() && dataEnabled;
    String defaultApn=getSelectedApn();
    if (defaultApn == null) {
      defaultApn="dummy-apn";
    }
    native_update_network_state(info.isConnected(),info.getType(),info.isRoaming(),networkAvailable,info.getExtraInfo(),defaultApn);
  }
  if (info != null && info.getType() == ConnectivityManager.TYPE_MOBILE_SUPL && mAGpsDataConnectionState == AGPS_DATA_CONNECTION_OPENING) {
    String apnName=info.getExtraInfo();
    if (mNetworkAvailable) {
      if (apnName == null) {
        apnName="dummy-apn";
      }
      mAGpsApn=apnName;
      if (DEBUG)       Log.d(TAG,"mAGpsDataConnectionIpAddr " + mAGpsDataConnectionIpAddr);
      if (mAGpsDataConnectionIpAddr != 0xffffffff) {
        boolean route_result;
        if (DEBUG)         Log.d(TAG,"call requestRouteToHost");
        route_result=mConnMgr.requestRouteToHost(ConnectivityManager.TYPE_MOBILE_SUPL,mAGpsDataConnectionIpAddr);
        if (route_result == false)         Log.d(TAG,"call requestRouteToHost failed");
      }
      if (DEBUG)       Log.d(TAG,"call native_agps_data_conn_open");
      native_agps_data_conn_open(apnName);
      mAGpsDataConnectionState=AGPS_DATA_CONNECTION_OPEN;
    }
 else {
      if (DEBUG)       Log.d(TAG,"call native_agps_data_conn_failed");
      mAGpsApn=null;
      mAGpsDataConnectionState=AGPS_DATA_CONNECTION_CLOSED;
      native_agps_data_conn_failed();
    }
  }
  if (mNetworkAvailable) {
    if (mInjectNtpTimePending == STATE_PENDING_NETWORK) {
      sendMessage(INJECT_NTP_TIME,0,null);
    }
    if (mDownloadXtraDataPending == STATE_PENDING_NETWORK) {
      sendMessage(DOWNLOAD_XTRA_DATA,0,null);
    }
  }
}
