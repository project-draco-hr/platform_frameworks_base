{
  NetworkInfo info=mConnMgr.getNetworkInfo(network);
  if (info == null) {
    return;
  }
  boolean isConnected=info.isConnected();
  if (DEBUG) {
    String message=String.format("UpdateNetworkState, state=%s, connected=%s, info=%s, capabilities=%S",agpsDataConnStateAsString(),isConnected,info,mConnMgr.getNetworkCapabilities(network));
    Log.d(TAG,message);
  }
  if (native_is_agps_ril_supported()) {
    boolean dataEnabled=TelephonyManager.getDefault().getDataEnabled();
    boolean networkAvailable=info.isAvailable() && dataEnabled;
    String defaultApn=getSelectedApn();
    if (defaultApn == null) {
      defaultApn="dummy-apn";
    }
    native_update_network_state(isConnected,info.getType(),info.isRoaming(),networkAvailable,info.getExtraInfo(),defaultApn);
  }
 else   if (DEBUG) {
    Log.d(TAG,"Skipped network state update because GPS HAL AGPS-RIL is not  supported");
  }
  if (mAGpsDataConnectionState == AGPS_DATA_CONNECTION_OPENING) {
    if (isConnected) {
      String apnName=info.getExtraInfo();
      if (apnName == null) {
        apnName="dummy-apn";
      }
      int apnIpType=getApnIpType(apnName);
      setRouting();
      if (DEBUG) {
        String message=String.format("native_agps_data_conn_open: mAgpsApn=%s, mApnIpType=%s",apnName,apnIpType);
        Log.d(TAG,message);
      }
      native_agps_data_conn_open(apnName,apnIpType);
      mAGpsDataConnectionState=AGPS_DATA_CONNECTION_OPEN;
    }
 else {
      handleReleaseSuplConnection(GPS_AGPS_DATA_CONN_FAILED);
    }
  }
}
