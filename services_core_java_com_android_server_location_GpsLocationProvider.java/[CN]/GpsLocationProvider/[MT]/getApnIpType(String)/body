{
  if (apn == null) {
    return APN_INVALID;
  }
  if (apn.equals(mAGpsApn) && mApnIpType != APN_INVALID) {
    return mApnIpType;
  }
  String selection=String.format("current = 1 and apn = '%s' and carrier_enabled = 1",apn);
  Cursor cursor=null;
  try {
    cursor=mContext.getContentResolver().query(Carriers.CONTENT_URI,new String[]{Carriers.PROTOCOL},selection,null,Carriers.DEFAULT_SORT_ORDER);
    if (null != cursor && cursor.moveToFirst()) {
      return translateToApnIpType(cursor.getString(0),apn);
    }
 else {
      Log.e(TAG,"No entry found in query for APN: " + apn);
    }
  }
 catch (  Exception e) {
    Log.e(TAG,"Error encountered on APN query for: " + apn,e);
  }
 finally {
    if (cursor != null) {
      cursor.close();
    }
  }
  return APN_INVALID;
}
