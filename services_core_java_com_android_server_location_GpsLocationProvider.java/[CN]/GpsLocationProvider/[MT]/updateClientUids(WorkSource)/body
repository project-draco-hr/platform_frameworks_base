{
  WorkSource[] changes=mClientSource.setReturningDiffs(source);
  if (changes == null) {
    return;
  }
  WorkSource newWork=changes[0];
  WorkSource goneWork=changes[1];
  if (newWork != null) {
    int lastuid=-1;
    for (int i=0; i < newWork.size(); i++) {
      try {
        int uid=newWork.get(i);
        mAppOpsService.startOperation(AppOpsManager.getToken(mAppOpsService),AppOpsManager.OP_GPS,uid,newWork.getName(i));
        if (uid != lastuid) {
          lastuid=uid;
          mBatteryStats.noteStartGps(uid);
        }
      }
 catch (      RemoteException e) {
        Log.w(TAG,"RemoteException",e);
      }
    }
  }
  if (goneWork != null) {
    int lastuid=-1;
    for (int i=0; i < goneWork.size(); i++) {
      try {
        int uid=goneWork.get(i);
        mAppOpsService.finishOperation(AppOpsManager.getToken(mAppOpsService),AppOpsManager.OP_GPS,uid,goneWork.getName(i));
        if (uid != lastuid) {
          lastuid=uid;
          mBatteryStats.noteStopGps(uid);
        }
      }
 catch (      RemoteException e) {
        Log.w(TAG,"RemoteException",e);
      }
    }
  }
}
