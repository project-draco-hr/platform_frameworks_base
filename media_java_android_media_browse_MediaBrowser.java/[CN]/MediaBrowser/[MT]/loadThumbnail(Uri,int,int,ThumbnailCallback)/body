{
  if (uri == null) {
    throw new IllegalArgumentException("thumbnail uri cannot be null");
  }
  if (callback == null) {
    throw new IllegalArgumentException("thumbnail callback cannot be null");
  }
  mHandler.post(new Runnable(){
    @Override public void run(){
      for (int i=0; i < mThumbnailRequests.size(); i++) {
        ThumbnailRequest existingRequest=mThumbnailRequests.valueAt(i);
        if (existingRequest.isSameRequest(uri,width,height)) {
          existingRequest.addCallback(callback);
          return;
        }
      }
      final int seq=mNextSeq++;
      ThumbnailRequest request=new ThumbnailRequest(seq,uri,width,height);
      request.addCallback(callback);
      mThumbnailRequests.put(seq,request);
      if (mState == CONNECT_STATE_CONNECTED) {
        try {
          mServiceBinder.loadThumbnail(seq,uri,width,height,mServiceCallbacks);
        }
 catch (        RemoteException e) {
          Log.d(TAG,"loadThumbnail failed with RemoteException uri=" + uri);
        }
      }
    }
  }
);
}
