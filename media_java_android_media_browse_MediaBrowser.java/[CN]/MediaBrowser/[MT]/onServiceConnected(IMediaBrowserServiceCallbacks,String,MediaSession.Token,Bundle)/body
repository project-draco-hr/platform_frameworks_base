{
  mHandler.post(new Runnable(){
    @Override public void run(){
      if (!isCurrent(callback,"onConnect")) {
        return;
      }
      if (mState != CONNECT_STATE_CONNECTING) {
        Log.w(TAG,"onConnect from service while mState=" + getStateLabel(mState) + "... ignoring");
        return;
      }
      mRootId=root;
      mMediaSessionToken=session;
      mExtras=extra;
      mState=CONNECT_STATE_CONNECTED;
      if (DBG) {
        Log.d(TAG,"ServiceCallbacks.onConnect...");
        dump();
      }
      mCallback.onConnected();
      for (      Entry<String,Subscription> subscriptionEntry : mSubscriptions.entrySet()) {
        String id=subscriptionEntry.getKey();
        Subscription sub=subscriptionEntry.getValue();
        List<SubscriptionCallback> callbackList=sub.getCallbacks();
        List<Bundle> optionsList=sub.getOptionsList();
        for (int i=0; i < callbackList.size(); ++i) {
          try {
            mServiceBinder.addSubscription(id,callbackList.get(i).mToken,optionsList.get(i),mServiceCallbacks);
          }
 catch (          RemoteException ex) {
            Log.d(TAG,"addSubscription failed with RemoteException parentId=" + id);
          }
        }
      }
    }
  }
);
}
