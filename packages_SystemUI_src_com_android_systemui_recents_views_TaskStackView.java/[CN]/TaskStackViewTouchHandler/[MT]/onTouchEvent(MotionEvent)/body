{
  Console.log(Constants.DebugFlags.TaskStack.SynchronizeViewsWithModel,"[TaskStackViewTouchHandler|touchEvent]",Console.motionEventActionToString(ev.getAction()),Console.AnsiBlue);
  boolean hasChildren=(mSv.getChildCount() > 0);
  if (!hasChildren) {
    return false;
  }
  if (mInterceptedBySwipeHelper && mSwipeHelper.onTouchEvent(ev)) {
    return true;
  }
  initVelocityTrackerIfNotExists();
  mVelocityTracker.addMovement(ev);
  int action=ev.getAction();
switch (action & MotionEvent.ACTION_MASK) {
case MotionEvent.ACTION_DOWN:
{
      mInitialMotionX=mLastMotionX=(int)ev.getX();
      mInitialMotionY=mLastMotionY=(int)ev.getY();
      mActivePointerId=ev.getPointerId(0);
      mActiveTaskView=findViewAtPoint(mLastMotionX,mLastMotionY);
      mSv.abortScroller();
      mSv.abortBoundScrollAnimation();
      initOrResetVelocityTracker();
      mVelocityTracker.addMovement(ev);
      final ViewParent parent=mSv.getParent();
      if (parent != null) {
        parent.requestDisallowInterceptTouchEvent(true);
      }
      break;
    }
case MotionEvent.ACTION_POINTER_DOWN:
{
    final int index=ev.getActionIndex();
    mActivePointerId=ev.getPointerId(index);
    mLastMotionX=(int)ev.getX(index);
    mLastMotionY=(int)ev.getY(index);
    break;
  }
case MotionEvent.ACTION_MOVE:
{
  if (mActivePointerId == INACTIVE_POINTER_ID)   break;
  int activePointerIndex=ev.findPointerIndex(mActivePointerId);
  int x=(int)ev.getX(activePointerIndex);
  int y=(int)ev.getY(activePointerIndex);
  int deltaY=mLastMotionY - y;
  if (!mIsScrolling) {
    if (Math.abs(y - mInitialMotionY) > mScrollTouchSlop) {
      mIsScrolling=true;
      initOrResetVelocityTracker();
      mVelocityTracker.addMovement(ev);
      final ViewParent parent=mSv.getParent();
      if (parent != null) {
        parent.requestDisallowInterceptTouchEvent(true);
      }
      mSv.addHwLayersRefCount("stackScroll");
    }
  }
  if (mIsScrolling) {
    mSv.setStackScroll(mSv.getStackScroll() + deltaY);
    if (mSv.isScrollOutOfBounds()) {
      mVelocityTracker.clear();
    }
  }
  mLastMotionX=x;
  mLastMotionY=y;
  mTotalScrollMotion+=Math.abs(deltaY);
  break;
}
case MotionEvent.ACTION_UP:
{
final VelocityTracker velocityTracker=mVelocityTracker;
velocityTracker.computeCurrentVelocity(1000,mMaximumVelocity);
int velocity=(int)velocityTracker.getYVelocity(mActivePointerId);
if (mIsScrolling && (Math.abs(velocity) > mMinimumVelocity)) {
  mSv.addHwLayersRefCount("flingScroll");
  int overscrollRange=(int)(Math.min(1f,Math.abs((float)velocity / mMaximumVelocity)) * Constants.Values.TaskStackView.TaskStackOverscrollRange);
  Console.log(Constants.DebugFlags.UI.TouchEvents,"[TaskStackViewTouchHandler|fling]","scroll: " + mSv.getStackScroll() + " velocity: "+ velocity+ " maxVelocity: "+ mMaximumVelocity+ " overscrollRange: "+ overscrollRange,Console.AnsiGreen);
  mSv.mScroller.fling(0,mSv.getStackScroll(),0,-velocity,0,0,mSv.mMinScroll,mSv.mMaxScroll,0,overscrollRange);
  mSv.invalidate();
}
 else if (mSv.isScrollOutOfBounds()) {
  mSv.animateBoundScroll(Constants.Values.TaskStackView.Animation.SnapScrollBackDuration);
}
if (mIsScrolling) {
  mSv.decHwLayersRefCount("stackScroll");
}
mActivePointerId=INACTIVE_POINTER_ID;
mIsScrolling=false;
mTotalScrollMotion=0;
recycleVelocityTracker();
break;
}
case MotionEvent.ACTION_POINTER_UP:
{
int pointerIndex=ev.getActionIndex();
int pointerId=ev.getPointerId(pointerIndex);
if (pointerId == mActivePointerId) {
final int newPointerIndex=(pointerIndex == 0) ? 1 : 0;
mActivePointerId=ev.getPointerId(newPointerIndex);
mLastMotionX=(int)ev.getX(newPointerIndex);
mLastMotionY=(int)ev.getY(newPointerIndex);
mVelocityTracker.clear();
}
break;
}
case MotionEvent.ACTION_CANCEL:
{
if (mIsScrolling) {
mSv.decHwLayersRefCount("stackScroll");
}
if (mSv.isScrollOutOfBounds()) {
mSv.animateBoundScroll(Constants.Values.TaskStackView.Animation.SnapScrollBackDuration);
}
mActivePointerId=INACTIVE_POINTER_ID;
mIsScrolling=false;
mTotalScrollMotion=0;
recycleVelocityTracker();
break;
}
}
return true;
}
