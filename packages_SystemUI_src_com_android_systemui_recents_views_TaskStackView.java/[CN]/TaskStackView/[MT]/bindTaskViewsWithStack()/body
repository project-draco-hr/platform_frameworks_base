{
  final float stackScroll=mStackScroller.getStackScroll();
  final int[] visibleStackRange=mTmpVisibleRange;
  final ArrayList<Task> tasks=mStack.getStackTasks();
  final boolean isValidVisibleStackRange=updateStackTransforms(mCurrentTaskTransforms,tasks,stackScroll,visibleStackRange);
  mTmpTaskViewMap.clear();
  final List<TaskView> taskViews=getTaskViews();
  final int taskViewCount=taskViews.size();
  int lastFocusedTaskIndex=-1;
  for (int i=taskViewCount - 1; i >= 0; i--) {
    final TaskView tv=taskViews.get(i);
    final Task task=tv.getTask();
    final int taskIndex=mStack.indexOfStackTask(task);
    if (task.isFreeformTask() || visibleStackRange[1] <= taskIndex && taskIndex <= visibleStackRange[0]) {
      mTmpTaskViewMap.put(task,tv);
    }
 else {
      if (mTouchExplorationEnabled) {
        lastFocusedTaskIndex=taskIndex;
        resetFocusedTask(task);
      }
      mViewPool.returnViewToPool(tv);
    }
  }
  int lastVisStackIndex=isValidVisibleStackRange ? visibleStackRange[1] : 0;
  for (int i=mStack.getStackTaskCount() - 1; i >= lastVisStackIndex; i--) {
    final Task task=tasks.get(i);
    final TaskViewTransform transform=mCurrentTaskTransforms.get(i);
    if (i > visibleStackRange[0] && !task.isFreeformTask()) {
      continue;
    }
    TaskView tv=mTmpTaskViewMap.get(task);
    if (tv == null) {
      tv=mViewPool.pickUpViewFromPool(task,task);
      if (task.isFreeformTask()) {
        tv.updateViewPropertiesToTaskTransform(transform,TaskViewAnimation.IMMEDIATE,mRequestUpdateClippingListener);
      }
 else {
        if (Float.compare(transform.p,0f) <= 0) {
          tv.updateViewPropertiesToTaskTransform(mLayoutAlgorithm.getBackOfStackTransform(),TaskViewAnimation.IMMEDIATE,mRequestUpdateClippingListener);
        }
 else {
          tv.updateViewPropertiesToTaskTransform(mLayoutAlgorithm.getFrontOfStackTransform(),TaskViewAnimation.IMMEDIATE,mRequestUpdateClippingListener);
        }
      }
    }
 else {
      final int taskIndex=mStack.indexOfStackTask(task);
      final int insertIndex=findTaskViewInsertIndex(task,taskIndex);
      if (insertIndex != getTaskViews().indexOf(tv)) {
        detachViewFromParent(tv);
        attachViewToParent(tv,insertIndex,tv.getLayoutParams());
        updateTaskViewsList();
      }
    }
  }
  if (lastFocusedTaskIndex != -1) {
    if (lastFocusedTaskIndex < visibleStackRange[1]) {
      setFocusedTask(visibleStackRange[1],false,true);
    }
 else {
      setFocusedTask(visibleStackRange[0],false,true);
    }
  }
}
