{
  if (event.dropTarget instanceof TaskStack.DockState) {
    return;
  }
  boolean isFreeformTask=event.task.isFreeformTask();
  boolean hasChangedStacks=(!isFreeformTask && event.dropTarget == mFreeformWorkspaceDropTarget) || (isFreeformTask && event.dropTarget == mStackDropTarget);
  event.postAnimationTrigger.increment();
  if (hasChangedStacks) {
    if (event.dropTarget == mFreeformWorkspaceDropTarget) {
      mStack.moveTaskToStack(event.task,FREEFORM_WORKSPACE_STACK_ID);
    }
 else     if (event.dropTarget == mStackDropTarget) {
      mStack.moveTaskToStack(event.task,FULLSCREEN_WORKSPACE_STACK_ID);
    }
    updateLayout(true);
    event.postAnimationTrigger.addLastDecrementRunnable(new Runnable(){
      @Override public void run(){
        SystemServicesProxy ssp=Recents.getSystemServices();
        ssp.moveTaskToStack(event.task.key.id,event.task.key.stackId);
      }
    }
);
  }
  event.taskView.animate().withEndAction(event.postAnimationTrigger.decrementAsRunnable());
  int x=(int)event.taskView.getTranslationX();
  int y=(int)event.taskView.getTranslationY();
  Rect taskViewRect=new Rect(event.taskView.getLeft(),event.taskView.getTop(),event.taskView.getRight(),event.taskView.getBottom());
  taskViewRect.offset(x,y);
  event.taskView.setTranslationX(0);
  event.taskView.setTranslationY(0);
  event.taskView.setLeftTopRightBottom(taskViewRect.left,taskViewRect.top,taskViewRect.right,taskViewRect.bottom);
  requestSynchronizeStackViewsWithModel(250);
}
