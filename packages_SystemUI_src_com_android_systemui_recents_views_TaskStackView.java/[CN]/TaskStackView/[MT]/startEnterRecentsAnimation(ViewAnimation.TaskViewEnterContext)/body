{
  if (mAwaitingFirstLayout) {
    mStartEnterAnimationRequestedAfterLayout=true;
    mStartEnterAnimationContext=ctx;
    return;
  }
  if (mStack.getTaskCount() > 0) {
    ArrayList<Task> tasks=mStack.getTasks();
    Task targetTask=null;
    int targetTaskId=mConfig.launchedToTaskId;
    if (targetTaskId != -1) {
      int taskCount=tasks.size();
      for (int i=0; i < taskCount; i++) {
        Task t=tasks.get(i);
        if (t.key.id == targetTaskId) {
          targetTask=t;
          break;
        }
      }
    }
    if (targetTask != null) {
      ctx.targetTaskTransform=new TaskViewTransform();
      mStackAlgorithm.getStackTransform(targetTask,getStackScroll(),ctx.targetTaskTransform);
      Rect taskStackBounds=new Rect();
      mConfig.getTaskStackBounds(getMeasuredWidth(),getMeasuredHeight(),taskStackBounds);
      ctx.targetTaskTransform.rect.offset(taskStackBounds.left,taskStackBounds.top);
    }
    int childCount=getChildCount();
    for (int i=childCount - 1; i >= 0; i--) {
      TaskView tv=(TaskView)getChildAt(i);
      Task task=tv.getTask();
      ctx.currentTaskTransform=new TaskViewTransform();
      ctx.currentStackViewIndex=i;
      ctx.currentStackViewCount=childCount;
      ctx.isCurrentTaskLaunchTarget=(task == targetTask);
      mStackAlgorithm.getStackTransform(task,getStackScroll(),ctx.currentTaskTransform);
      tv.startEnterRecentsAnimation(ctx);
    }
    ctx.postAnimationTrigger.addLastDecrementRunnable(new Runnable(){
      @Override public void run(){
        mUIDozeTrigger.startDozing();
      }
    }
);
  }
}
