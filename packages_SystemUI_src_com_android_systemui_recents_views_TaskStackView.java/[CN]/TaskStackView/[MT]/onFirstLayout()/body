{
  int offscreenY=mLayoutAlgorithm.mStackRect.bottom;
  Task launchTargetTask=mStack.getLaunchTarget();
  List<TaskView> taskViews=getTaskViews();
  int taskViewCount=taskViews.size();
  for (int i=taskViewCount - 1; i >= 0; i--) {
    TaskView tv=taskViews.get(i);
    Task task=tv.getTask();
    boolean hideTask=false;
    boolean occludesLaunchTarget=false;
    if (launchTargetTask != null) {
      occludesLaunchTarget=launchTargetTask.group.isTaskAboveTask(task,launchTargetTask);
      hideTask=SystemServicesProxy.isFreeformStack(launchTargetTask.key.stackId) && SystemServicesProxy.isFreeformStack(task.key.stackId);
    }
    tv.prepareEnterRecentsAnimation(task.isLaunchTarget,hideTask,occludesLaunchTarget,offscreenY);
  }
  if (mStartEnterAnimationRequestedAfterLayout) {
    startEnterRecentsAnimation(mStartEnterAnimationContext);
    mStartEnterAnimationRequestedAfterLayout=false;
    mStartEnterAnimationContext=null;
  }
  animateFreeformWorkspaceBackgroundAlpha(mLayoutAlgorithm.getStackState().freeformBackgroundAlpha,150,mFastOutSlowInInterpolator);
  RecentsConfiguration config=Recents.getConfiguration();
  RecentsActivityLaunchState launchState=config.getLaunchState();
  int focusedTaskIndex=launchState.getInitialFocusTaskIndex(mStack.getStackTaskCount());
  if (focusedTaskIndex != -1) {
    setFocusedTask(focusedTaskIndex,false,false,false);
  }
  if (shouldShowHistoryButton() && mStackScroller.getStackScroll() < SHOW_HISTORY_BUTTON_SCROLL_THRESHOLD) {
    EventBus.getDefault().send(new ShowHistoryButtonEvent());
  }
 else {
    EventBus.getDefault().send(new HideHistoryButtonEvent());
  }
  mUIDozeTrigger.startDozing();
}
