{
  int offscreenY=mLayoutAlgorithm.mViewRect.bottom - (mLayoutAlgorithm.mTaskRect.top - mLayoutAlgorithm.mViewRect.top);
  Task launchTargetTask=null;
  List<TaskView> taskViews=getTaskViews();
  int taskViewCount=taskViews.size();
  for (int i=taskViewCount - 1; i >= 0; i--) {
    TaskView tv=taskViews.get(i);
    Task task=tv.getTask();
    if (task.isLaunchTarget) {
      launchTargetTask=task;
      break;
    }
  }
  for (int i=taskViewCount - 1; i >= 0; i--) {
    TaskView tv=taskViews.get(i);
    Task task=tv.getTask();
    boolean occludesLaunchTarget=(launchTargetTask != null) && launchTargetTask.group.isTaskAboveTask(task,launchTargetTask);
    tv.prepareEnterRecentsAnimation(task.isLaunchTarget,occludesLaunchTarget,offscreenY);
  }
  if (mStartEnterAnimationRequestedAfterLayout) {
    startEnterRecentsAnimation(mStartEnterAnimationContext);
    mStartEnterAnimationRequestedAfterLayout=false;
    mStartEnterAnimationContext=null;
  }
  RecentsActivityLaunchState launchState=mConfig.getLaunchState();
  if (launchState.launchedWithAltTab) {
    if (launchState.launchedFromAppWithThumbnail) {
      focusTask(Math.max(0,mStack.getTaskCount() - 2),false,launchState.launchedHasConfigurationChanged);
    }
 else {
      focusTask(Math.max(0,mStack.getTaskCount() - 1),false,launchState.launchedHasConfigurationChanged);
    }
  }
  if (!mConfig.multiWindowEnabled) {
    mUIDozeTrigger.startDozing();
  }
}
