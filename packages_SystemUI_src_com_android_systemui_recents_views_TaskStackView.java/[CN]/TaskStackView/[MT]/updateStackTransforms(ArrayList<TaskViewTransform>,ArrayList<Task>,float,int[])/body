{
  int taskTransformCount=taskTransforms.size();
  int taskCount=tasks.size();
  int frontMostVisibleIndex=-1;
  int backMostVisibleIndex=-1;
  if (taskTransformCount < taskCount) {
    for (int i=taskTransformCount; i < taskCount; i++) {
      taskTransforms.add(new TaskViewTransform());
    }
  }
 else   if (taskTransformCount > taskCount) {
    taskTransforms.subList(0,taskCount);
  }
  TaskViewTransform frontTransform=null;
  for (int i=taskCount - 1; i >= 0; i--) {
    Task task=tasks.get(i);
    TaskViewTransform transform=mLayoutAlgorithm.getStackTransform(task,stackScroll,taskTransforms.get(i),frontTransform);
    if (task.isFreeformTask()) {
      continue;
    }
    if (transform.visible) {
      if (frontMostVisibleIndex < 0) {
        frontMostVisibleIndex=i;
      }
      backMostVisibleIndex=i;
    }
 else {
      if (backMostVisibleIndex != -1) {
        while (i >= 0) {
          taskTransforms.get(i).reset();
          i--;
        }
        break;
      }
    }
    frontTransform=transform;
  }
  if (visibleRangeOut != null) {
    visibleRangeOut[0]=frontMostVisibleIndex;
    visibleRangeOut[1]=backMostVisibleIndex;
  }
  return frontMostVisibleIndex != -1 && backMostVisibleIndex != -1;
}
