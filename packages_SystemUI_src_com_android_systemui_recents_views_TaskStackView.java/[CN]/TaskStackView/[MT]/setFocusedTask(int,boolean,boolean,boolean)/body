{
  int newFocusedTaskIndex=mStack.getStackTaskCount() > 0 ? Math.max(0,Math.min(mStack.getStackTaskCount() - 1,taskIndex)) : -1;
  final Task newFocusedTask=(newFocusedTaskIndex != -1) ? mStack.getStackTasks().get(newFocusedTaskIndex) : null;
  if (mFocusedTaskIndex != -1) {
    Task focusedTask=mStack.getStackTasks().get(mFocusedTaskIndex);
    if (focusedTask != newFocusedTask) {
      resetFocusedTask();
    }
  }
  boolean willScroll=false;
  mFocusedTaskIndex=newFocusedTaskIndex;
  if (mFocusedTaskIndex != -1) {
    Runnable focusTaskRunnable=new Runnable(){
      @Override public void run(){
        TaskView tv=getChildViewForTask(newFocusedTask);
        if (tv != null) {
          tv.setFocusedState(true,animated,requestViewFocus);
        }
      }
    }
;
    if (scrollToTask) {
      RecentsDebugFlags debugFlags=Recents.getDebugFlags();
      float newScroll=mLayoutAlgorithm.getStackScrollForTask(newFocusedTask);
      if (!debugFlags.isFullscreenThumbnailsEnabled()) {
        newScroll-=0.5f;
      }
      newScroll=mStackScroller.getBoundedStackScroll(newScroll);
      if (Float.compare(newScroll,mStackScroller.getStackScroll()) != 0) {
        mStackScroller.animateScroll(mStackScroller.getStackScroll(),newScroll,focusTaskRunnable);
        willScroll=true;
        if (!mEnterAnimationComplete) {
          final List<TaskView> taskViews=getTaskViews();
          for (          TaskView tv : taskViews) {
            tv.cancelEnterRecentsAnimation();
          }
        }
      }
 else {
        focusTaskRunnable.run();
      }
      mLayoutAlgorithm.animateFocusState(TaskStackLayoutAlgorithm.STATE_FOCUSED);
    }
 else {
      focusTaskRunnable.run();
    }
  }
  return willScroll;
}
