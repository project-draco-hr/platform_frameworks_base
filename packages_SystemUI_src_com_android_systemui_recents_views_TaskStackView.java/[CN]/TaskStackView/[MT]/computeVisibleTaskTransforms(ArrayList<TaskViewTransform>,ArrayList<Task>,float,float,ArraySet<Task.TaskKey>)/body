{
  int taskCount=tasks.size();
  int[] visibleTaskRange=mTmpIntPair;
  visibleTaskRange[0]=-1;
  visibleTaskRange[1]=-1;
  boolean useTargetStackScroll=Float.compare(curStackScroll,targetStackScroll) != 0;
  Utilities.matchTaskListSize(tasks,taskTransforms);
  TaskViewTransform frontTransform=null;
  TaskViewTransform frontTransformAtTarget=null;
  TaskViewTransform transform=null;
  TaskViewTransform transformAtTarget=null;
  for (int i=taskCount - 1; i >= 0; i--) {
    Task task=tasks.get(i);
    transform=mLayoutAlgorithm.getStackTransform(task,curStackScroll,taskTransforms.get(i),frontTransform);
    if (useTargetStackScroll && !transform.visible) {
      transformAtTarget=mLayoutAlgorithm.getStackTransform(task,targetStackScroll,new TaskViewTransform(),frontTransformAtTarget);
      if (transformAtTarget.visible) {
        transform.copyFrom(transformAtTarget);
      }
    }
    if (ignoreTasksSet.contains(task.key)) {
      continue;
    }
    if (task.isFreeformTask()) {
      continue;
    }
    frontTransform=transform;
    frontTransformAtTarget=transformAtTarget;
    if (transform.visible) {
      if (visibleTaskRange[0] < 0) {
        visibleTaskRange[0]=i;
      }
      visibleTaskRange[1]=i;
    }
  }
  return visibleTaskRange;
}
