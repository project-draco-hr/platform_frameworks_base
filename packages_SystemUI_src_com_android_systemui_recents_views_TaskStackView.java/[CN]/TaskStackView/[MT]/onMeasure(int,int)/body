{
  int width=MeasureSpec.getSize(widthMeasureSpec);
  int height=MeasureSpec.getSize(heightMeasureSpec);
  Console.log(Constants.Log.UI.MeasureAndLayout,"[TaskStackView|measure]","width: " + width + " height: "+ height+ " awaitingFirstLayout: "+ mAwaitingFirstLayout,Console.AnsiGreen);
  RecentsConfiguration config=RecentsConfiguration.getInstance();
  Rect taskStackBounds=new Rect();
  config.getTaskStackBounds(width,height,taskStackBounds);
  computeRects(width,height,taskStackBounds.left,config.systemInsets.bottom);
  if (Constants.Log.UI.MeasureAndLayout) {
    Console.log("  [TaskStack|fullRect] " + mRect);
    Console.log("  [TaskStack|stackRect] " + mStackRect);
    Console.log("  [TaskStack|stackRectSansPeek] " + mStackRectSansPeek);
    Console.log("  [TaskStack|taskRect] " + mTaskRect);
  }
  if (mAwaitingFirstLayout) {
    setStackScroll(mMaxScroll);
    requestSynchronizeStackViewsWithModel();
    synchronizeStackViewsWithModel();
    if (config.launchedFromAltTab) {
      focusTask(Math.max(0,mStack.getTaskCount() - 2),false);
    }
    if (config.launchedWithThumbnailAnimation) {
      TaskView tv=(TaskView)getChildAt(getChildCount() - 1);
      if (tv != null) {
        tv.animateOnEnterRecents();
      }
    }
  }
  int childCount=getChildCount();
  for (int i=0; i < childCount; i++) {
    TaskView t=(TaskView)getChildAt(i);
    t.measure(MeasureSpec.makeMeasureSpec(mTaskRect.width(),MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(mTaskRect.height(),MeasureSpec.EXACTLY));
  }
  setMeasuredDimension(width,height);
}
