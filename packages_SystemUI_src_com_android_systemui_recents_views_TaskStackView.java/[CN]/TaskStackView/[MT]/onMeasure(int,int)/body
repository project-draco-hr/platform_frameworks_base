{
  mInMeasureLayout=true;
  int width=MeasureSpec.getSize(widthMeasureSpec);
  int height=MeasureSpec.getSize(heightMeasureSpec);
  mLayoutAlgorithm.getTaskStackBounds(new Rect(0,0,width,height),mLayoutAlgorithm.mSystemInsets.top,mLayoutAlgorithm.mSystemInsets.right,mTmpRect);
  if (!mTmpRect.equals(mStableStackBounds)) {
    mStableStackBounds.set(mTmpRect);
    mStackBounds.set(mTmpRect);
    mStableWindowRect.set(0,0,width,height);
    mWindowRect.set(0,0,width,height);
  }
  mStableLayoutAlgorithm.initialize(mStableWindowRect,mStableStackBounds,TaskStackLayoutAlgorithm.StackState.getStackStateForStack(mStack));
  mLayoutAlgorithm.initialize(mWindowRect,mStackBounds,TaskStackLayoutAlgorithm.StackState.getStackStateForStack(mStack));
  updateLayoutAlgorithm(false,EMPTY_TASK_SET);
  if (mAwaitingFirstLayout || mInitialState != INITIAL_STATE_UPDATE_NONE) {
    updateToInitialState(mInitialState != INITIAL_STATE_UPDATE_LAYOUT_ONLY);
    mInitialState=INITIAL_STATE_UPDATE_NONE;
  }
  bindVisibleTaskViews(mStackScroller.getStackScroll(),EMPTY_TASK_SET,false);
  mTmpTaskViews.clear();
  mTmpTaskViews.addAll(getTaskViews());
  mTmpTaskViews.addAll(mViewPool.getViews());
  int taskViewCount=mTmpTaskViews.size();
  for (int i=0; i < taskViewCount; i++) {
    measureTaskView(mTmpTaskViews.get(i));
  }
  setMeasuredDimension(width,height);
  mInMeasureLayout=false;
}
