{
  int encoding;
  boolean hasLanguageIndicator=false;
switch ((mHeader.dataCodingScheme & 0xf0) >> 4) {
case 0x00:
    encoding=SmsMessage.ENCODING_7BIT;
  mLanguage=LANGUAGE_CODES_GROUP_0[mHeader.dataCodingScheme & 0x0f];
break;
case 0x01:
hasLanguageIndicator=true;
if ((mHeader.dataCodingScheme & 0x0f) == 0x01) {
encoding=SmsMessage.ENCODING_16BIT;
}
 else {
encoding=SmsMessage.ENCODING_7BIT;
}
break;
case 0x02:
encoding=SmsMessage.ENCODING_7BIT;
mLanguage=LANGUAGE_CODES_GROUP_2[mHeader.dataCodingScheme & 0x0f];
break;
case 0x03:
encoding=SmsMessage.ENCODING_7BIT;
break;
case 0x04:
case 0x05:
switch ((mHeader.dataCodingScheme & 0x0c) >> 2) {
case 0x01:
encoding=SmsMessage.ENCODING_8BIT;
break;
case 0x02:
encoding=SmsMessage.ENCODING_16BIT;
break;
case 0x00:
default :
encoding=SmsMessage.ENCODING_7BIT;
break;
}
break;
case 0x06:
case 0x07:
case 0x09:
case 0x0e:
encoding=SmsMessage.ENCODING_UNKNOWN;
break;
case 0x0f:
if (((mHeader.dataCodingScheme & 0x04) >> 2) == 0x01) {
encoding=SmsMessage.ENCODING_8BIT;
}
 else {
encoding=SmsMessage.ENCODING_7BIT;
}
break;
default :
encoding=SmsMessage.ENCODING_7BIT;
break;
}
switch (encoding) {
case SmsMessage.ENCODING_7BIT:
mBody=GsmAlphabet.gsm7BitPackedToString(pdu,SmsCbHeader.PDU_HEADER_LENGTH,(pdu.length - SmsCbHeader.PDU_HEADER_LENGTH) * 8 / 7);
if (hasLanguageIndicator && mBody != null && mBody.length() > 2) {
mLanguage=mBody.substring(0,2);
mBody=mBody.substring(3);
}
break;
case SmsMessage.ENCODING_16BIT:
int offset=SmsCbHeader.PDU_HEADER_LENGTH;
if (hasLanguageIndicator && pdu.length >= SmsCbHeader.PDU_HEADER_LENGTH + 2) {
mLanguage=GsmAlphabet.gsm7BitPackedToString(pdu,SmsCbHeader.PDU_HEADER_LENGTH,2);
offset+=2;
}
try {
mBody=new String(pdu,offset,(pdu.length & 0xfffe) - offset,"utf-16");
}
 catch (UnsupportedEncodingException e) {
}
break;
default :
break;
}
if (mBody != null) {
for (int i=mBody.length() - 1; i >= 0; i--) {
if (mBody.charAt(i) != CARRIAGE_RETURN) {
mBody=mBody.substring(0,i + 1);
break;
}
}
}
 else {
mBody="";
}
}
