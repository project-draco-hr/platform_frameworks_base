{
  if (LOGV)   Slog.v(TAG,"performPollLocked(flags=0x" + Integer.toHexString(flags) + ")");
  final long startRealtime=SystemClock.elapsedRealtime();
  final boolean persistNetwork=(flags & FLAG_PERSIST_NETWORK) != 0;
  final boolean persistUid=(flags & FLAG_PERSIST_UID) != 0;
  final boolean persistForce=(flags & FLAG_PERSIST_FORCE) != 0;
  if (mTime.getCacheAge() > mSettings.getTimeCacheMaxAge()) {
    mTime.forceRefresh();
  }
  final long currentTime=mTime.hasCache() ? mTime.currentTimeMillis() : System.currentTimeMillis();
  final long threshold=mSettings.getPersistThreshold();
  try {
    final String[] ifacePairs=mConnManager.getTetheredIfacePairs();
    final NetworkStats tetherSnapshot=mNetworkManager.getNetworkStatsTethering(ifacePairs);
    performTetherPollLocked(tetherSnapshot,currentTime);
    final NetworkStats uidSnapshot=mNetworkManager.getNetworkStatsUidDetail(UID_ALL);
    performUidPollLocked(uidSnapshot,currentTime);
    final NetworkStats persistUidDelta=computeStatsDelta(mLastPersistUidSnapshot,uidSnapshot,true);
    final boolean uidPastThreshold=persistUidDelta.getTotalBytes() > threshold;
    if (persistForce || (persistUid && uidPastThreshold)) {
      writeUidStatsLocked();
      mLastPersistUidSnapshot=uidSnapshot;
    }
    final NetworkStats networkSnapshot=mNetworkManager.getNetworkStatsSummary();
    performNetworkPollLocked(networkSnapshot,currentTime);
    final NetworkStats persistNetworkDelta=computeStatsDelta(mLastPersistNetworkSnapshot,networkSnapshot,true);
    final boolean networkPastThreshold=persistNetworkDelta.getTotalBytes() > threshold;
    if (persistForce || (persistNetwork && networkPastThreshold)) {
      writeNetworkStatsLocked();
      mLastPersistNetworkSnapshot=networkSnapshot;
    }
  }
 catch (  IllegalStateException e) {
    Log.wtf(TAG,"problem reading network stats",e);
  }
catch (  RemoteException e) {
  }
  if (LOGV) {
    final long duration=SystemClock.elapsedRealtime() - startRealtime;
    Slog.v(TAG,"performPollLocked() took " + duration + "ms");
  }
  performSample();
  final Intent updatedIntent=new Intent(ACTION_NETWORK_STATS_UPDATED);
  updatedIntent.setFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY);
  mContext.sendBroadcast(updatedIntent,READ_NETWORK_USAGE_HISTORY);
}
