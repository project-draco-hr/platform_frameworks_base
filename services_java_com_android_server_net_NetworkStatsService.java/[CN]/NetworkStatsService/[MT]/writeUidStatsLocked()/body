{
  if (LOGV)   Slog.v(TAG,"writeUidStatsLocked()");
  if (!mUidStatsLoaded) {
    Slog.w(TAG,"asked to write UID stats when not loaded; skipping");
    return;
  }
  FileOutputStream fos=null;
  try {
    fos=mUidFile.startWrite();
    final DataOutputStream out=new DataOutputStream(fos);
    out.writeInt(FILE_MAGIC);
    out.writeInt(VERSION_UID_WITH_IDENT);
    out.writeInt(mUidStats.size());
    for (    NetworkIdentitySet ident : mUidStats.keySet()) {
      final SparseArray<NetworkStatsHistory> uidStats=mUidStats.get(ident);
      ident.writeToStream(out);
      final int size=uidStats.size();
      out.writeInt(size);
      for (int i=0; i < size; i++) {
        final int uid=uidStats.keyAt(i);
        final NetworkStatsHistory history=uidStats.valueAt(i);
        out.writeInt(uid);
        history.writeToStream(out);
      }
    }
    mUidFile.finishWrite(fos);
  }
 catch (  IOException e) {
    if (fos != null) {
      mUidFile.failWrite(fos);
    }
  }
}
