{
  ensureUidStatsLoadedLocked();
  performPollLocked(FLAG_PERSIST_ALL);
  final ArrayList<UidStatsKey> knownKeys=Lists.newArrayList();
  knownKeys.addAll(mUidStats.keySet());
  for (  UidStatsKey key : knownKeys) {
    if (key.uid == uid) {
      if (key.tag == TAG_NONE) {
        final NetworkStatsHistory uidHistory=mUidStats.get(key);
        final NetworkStatsHistory removedHistory=findOrCreateUidStatsLocked(key.ident,UID_REMOVED,SET_DEFAULT,TAG_NONE);
        removedHistory.recordEntireHistory(uidHistory);
      }
      mUidStats.remove(key);
    }
  }
  if (mLastPollUidSnapshot != null) {
    mLastPollUidSnapshot=mLastPollUidSnapshot.withoutUid(uid);
    mLastPollNetworkXtSnapshot=computeNetworkXtSnapshotFromUid(mLastPollUidSnapshot);
  }
  resetKernelUidStats(uid);
  writeUidStatsLocked();
}
