{
  SparseArray<NetworkStatsHistory> uidStats=mUidStats.get(ident);
  if (uidStats == null) {
    uidStats=new SparseArray<NetworkStatsHistory>();
    mUidStats.put(ident,uidStats);
  }
  final long bucketDuration=mSettings.getUidBucketDuration();
  final NetworkStatsHistory existing=uidStats.get(uid);
  NetworkStatsHistory updated=null;
  if (existing == null) {
    updated=new NetworkStatsHistory(bucketDuration,10);
  }
 else   if (existing.bucketDuration != bucketDuration) {
    updated=new NetworkStatsHistory(bucketDuration,estimateResizeBuckets(existing,bucketDuration));
    updated.recordEntireHistory(existing);
  }
  if (updated != null) {
    uidStats.put(uid,updated);
    return updated;
  }
 else {
    return existing;
  }
}
