{
  AccountManagerService ams=new AccountManagerService(getContext());
  Account a11=new Account("account1","type1");
  Account a12=new Account("account1","type2");
  assertTrue(ams.addAccount(a11,"p11",null));
  assertTrue(ams.addAccount(a12,"p12",null));
  ams.setAuthToken(a11,"att1","a11_att1");
  ams.setAuthToken(a11,"att2","a11_att2");
  ams.setAuthToken(a11,"att3","a11_att3");
  ams.setAuthToken(a12,"att1","a12_att1");
  ams.setAuthToken(a12,"att2","a12_att2");
  ams.setAuthToken(a12,"att3","a12_att3");
  assertEquals("a11_att1",ams.peekAuthToken(a11,"att1"));
  assertEquals("a11_att2",ams.peekAuthToken(a11,"att2"));
  assertEquals("a11_att3",ams.peekAuthToken(a11,"att3"));
  assertEquals("a12_att1",ams.peekAuthToken(a12,"att1"));
  assertEquals("a12_att2",ams.peekAuthToken(a12,"att2"));
  assertEquals("a12_att3",ams.peekAuthToken(a12,"att3"));
  ams.setAuthToken(a11,"att3","a11_att3b");
  ams.invalidateAuthToken(a12.mType,"a12_att2");
  assertEquals("a11_att1",ams.peekAuthToken(a11,"att1"));
  assertEquals("a11_att2",ams.peekAuthToken(a11,"att2"));
  assertEquals("a11_att3b",ams.peekAuthToken(a11,"att3"));
  assertEquals("a12_att1",ams.peekAuthToken(a12,"att1"));
  assertNull(ams.peekAuthToken(a12,"att2"));
  assertEquals("a12_att3",ams.peekAuthToken(a12,"att3"));
  assertEquals(5,ams.mAuthTokenCache.size());
  for (  Map.Entry<AccountManagerService.AuthTokenKey,String> entry : ams.mAuthTokenCache.entrySet()) {
    assertEquals(entry.getValue(),ams.readAuthTokenFromDatabase(entry.getKey().mAccount,entry.getKey().mAuthTokenType));
  }
  assertNull(ams.readAuthTokenFromDatabase(a12,"att2"));
}
