{
  try {
    effectClass.asSubclass(Effect.class);
  }
 catch (  ClassCastException e) {
    throw new IllegalArgumentException("Attempting to allocate effect '" + effectClass + "' which is not a subclass of Effect!",e);
  }
  Constructor effectConstructor=null;
  try {
    effectConstructor=effectClass.getConstructor(EffectContext.class,String.class);
  }
 catch (  NoSuchMethodException e) {
    throw new RuntimeException("The effect class '" + effectClass + "' does not have "+ "the required constructor.",e);
  }
  Effect effect=null;
  try {
    effect=(Effect)effectConstructor.newInstance(mEffectContext,name);
  }
 catch (  Throwable t) {
    throw new RuntimeException("There was an error constructing the effect '" + effectClass + "'!",t);
  }
  return effect;
}
