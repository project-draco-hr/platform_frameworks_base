{
synchronized (mDeviceConnections) {
    if (mServer != null) {
      mDeviceConnections.add(connection);
      connection.notifyClient(mServer);
    }
 else     if (mServiceConnection == null && (mServiceInfo != null || mBluetoothDevice != null)) {
      mDeviceConnections.add(connection);
      mServiceConnection=new ServiceConnection(){
        @Override public void onServiceConnected(        ComponentName name,        IBinder service){
          IMidiDeviceServer server=null;
          if (mBluetoothDevice != null) {
            IBluetoothMidiService mBluetoothMidiService=IBluetoothMidiService.Stub.asInterface(service);
            try {
              IBinder deviceBinder=mBluetoothMidiService.addBluetoothDevice(mBluetoothDevice);
              server=IMidiDeviceServer.Stub.asInterface(deviceBinder);
            }
 catch (            RemoteException e) {
              Log.e(TAG,"Could not call addBluetoothDevice()",e);
            }
          }
 else {
            server=IMidiDeviceServer.Stub.asInterface(service);
          }
          setDeviceServer(server);
        }
        @Override public void onServiceDisconnected(        ComponentName name){
          setDeviceServer(null);
          mServiceConnection=null;
        }
      }
;
      Intent intent;
      if (mBluetoothDevice != null) {
        intent=new Intent(MidiManager.BLUETOOTH_MIDI_SERVICE_INTENT);
        intent.setComponent(new ComponentName(MidiManager.BLUETOOTH_MIDI_SERVICE_PACKAGE,MidiManager.BLUETOOTH_MIDI_SERVICE_CLASS));
      }
 else {
        intent=new Intent(MidiDeviceService.SERVICE_INTERFACE);
        intent.setComponent(new ComponentName(mServiceInfo.packageName,mServiceInfo.name));
      }
      if (!mContext.bindService(intent,mServiceConnection,Context.BIND_AUTO_CREATE)) {
        Log.e(TAG,"Unable to bind service: " + intent);
        setDeviceServer(null);
        mServiceConnection=null;
      }
    }
 else {
      Log.e(TAG,"No way to connect to device in addDeviceConnection");
      connection.notifyClient(null);
    }
  }
}
