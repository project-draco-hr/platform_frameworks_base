{
  final Parcel parcelledData;
synchronized (this) {
    parcelledData=mParcelledData;
  }
  if (parcelledData != null) {
    if (isEmptyParcel()) {
      parcel.writeInt(0);
    }
 else {
      int length=parcelledData.dataSize();
      parcel.writeInt(length);
      parcel.writeInt(BUNDLE_MAGIC);
      parcel.appendFrom(parcelledData,0,length);
    }
  }
 else {
    if (mMap == null || mMap.size() <= 0) {
      parcel.writeInt(0);
      return;
    }
    int lengthPos=parcel.dataPosition();
    parcel.writeInt(-1);
    parcel.writeInt(BUNDLE_MAGIC);
    int startPos=parcel.dataPosition();
    parcel.writeArrayMapInternal(mMap);
    int endPos=parcel.dataPosition();
    parcel.setDataPosition(lengthPos);
    int length=endPos - startPos;
    parcel.writeInt(length);
    parcel.setDataPosition(endPos);
  }
}
