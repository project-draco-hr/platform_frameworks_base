{
synchronized (this) {
    final ArrayMap<ResourcesImpl,ResourcesKey> updatedResourceKeys=new ArrayMap<>();
    final int implCount=mResourceImpls.size();
    for (int i=0; i < implCount; i++) {
      final ResourcesImpl impl=mResourceImpls.valueAt(i).get();
      final ResourcesKey key=mResourceImpls.keyAt(i);
      if (impl != null && key.mResDir.equals(assetPath)) {
        if (!ArrayUtils.contains(key.mLibDirs,libAsset)) {
          final int newLibAssetCount=1 + (key.mLibDirs != null ? key.mLibDirs.length : 0);
          final String[] newLibAssets=new String[newLibAssetCount];
          if (key.mLibDirs != null) {
            System.arraycopy(key.mLibDirs,0,newLibAssets,0,key.mLibDirs.length);
          }
          newLibAssets[newLibAssetCount - 1]=libAsset;
          updatedResourceKeys.put(impl,new ResourcesKey(key.mResDir,key.mSplitResDirs,key.mOverlayDirs,newLibAssets,key.mDisplayId,key.mOverrideConfiguration,key.mCompatInfo));
        }
      }
    }
    if (updatedResourceKeys.isEmpty()) {
      return;
    }
    final int resourcesCount=mResourceReferences.size();
    for (int i=0; i < resourcesCount; i++) {
      final Resources r=mResourceReferences.get(i).get();
      if (r != null) {
        final ResourcesKey key=updatedResourceKeys.get(r.getImpl());
        if (key != null) {
          r.setImpl(findOrCreateResourcesImplForKeyLocked(key));
        }
      }
    }
    for (    ActivityResources activityResources : mActivityResourceReferences.values()) {
      final int resCount=activityResources.activityResources.size();
      for (int i=0; i < resCount; i++) {
        final Resources r=activityResources.activityResources.get(i).get();
        if (r != null) {
          final ResourcesKey key=updatedResourceKeys.get(r.getImpl());
          if (key != null) {
            r.setImpl(findOrCreateResourcesImplForKeyLocked(key));
          }
        }
      }
    }
  }
}
