{
synchronized (this) {
    if (DEBUG) {
      Throwable here=new Throwable();
      here.fillInStackTrace();
      Slog.w(TAG,"!! Get resources for activity=" + activityToken + " key="+ key,here);
    }
    if (activityToken != null) {
      final ActivityResources activityResources=getOrCreateActivityResourcesStructLocked(activityToken);
      ArrayUtils.unstableRemoveIf(activityResources.activityResources,sEmptyReferencePredicate);
      if (key.hasOverrideConfiguration() && !activityResources.overrideConfig.equals(Configuration.EMPTY)) {
        final Configuration temp=new Configuration(activityResources.overrideConfig);
        temp.updateFrom(key.mOverrideConfiguration);
        key.mOverrideConfiguration.setTo(temp);
      }
      ResourcesImpl resourcesImpl=findResourcesImplForKeyLocked(key);
      if (resourcesImpl != null) {
        if (DEBUG) {
          Slog.d(TAG,"- using existing impl=" + resourcesImpl);
        }
        return getOrCreateResourcesForActivityLocked(activityToken,classLoader,resourcesImpl);
      }
    }
 else {
      ArrayUtils.unstableRemoveIf(mResourceReferences,sEmptyReferencePredicate);
      ResourcesImpl resourcesImpl=findResourcesImplForKeyLocked(key);
      if (resourcesImpl != null) {
        if (DEBUG) {
          Slog.d(TAG,"- using existing impl=" + resourcesImpl);
        }
        return getOrCreateResourcesLocked(classLoader,resourcesImpl);
      }
    }
  }
  ResourcesImpl resourcesImpl=createResourcesImpl(key);
synchronized (this) {
    ResourcesImpl existingResourcesImpl=findResourcesImplForKeyLocked(key);
    if (existingResourcesImpl != null) {
      if (DEBUG) {
        Slog.d(TAG,"- got beat! existing impl=" + existingResourcesImpl + " new impl="+ resourcesImpl);
      }
      resourcesImpl.getAssets().close();
      resourcesImpl=existingResourcesImpl;
    }
 else {
      mResourceImpls.put(key,new WeakReference<>(resourcesImpl));
    }
    final Resources resources;
    if (activityToken != null) {
      resources=getOrCreateResourcesForActivityLocked(activityToken,classLoader,resourcesImpl);
    }
 else {
      resources=getOrCreateResourcesLocked(classLoader,resourcesImpl);
    }
    return resources;
  }
}
