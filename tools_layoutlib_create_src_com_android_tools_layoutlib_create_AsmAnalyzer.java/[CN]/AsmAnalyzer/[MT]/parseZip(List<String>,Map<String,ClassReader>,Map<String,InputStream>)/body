{
  if (classes == null || filesFound == null) {
    return;
  }
  Pattern[] includeFilePatterns=new Pattern[mIncludeFileGlobs.length];
  for (int i=0; i < mIncludeFileGlobs.length; ++i) {
    includeFilePatterns[i]=getPatternFromGlob(mIncludeFileGlobs[i]);
  }
  for (  String jarPath : jarPathList) {
    ZipFile zip=new ZipFile(jarPath);
    Enumeration<? extends ZipEntry> entries=zip.entries();
    ZipEntry entry;
    while (entries.hasMoreElements()) {
      entry=entries.nextElement();
      if (entry.getName().endsWith(".class")) {
        ClassReader cr=new ClassReader(zip.getInputStream(entry));
        String className=classReaderToClassName(cr);
        classes.put(className,cr);
      }
 else {
        for (int i=0; i < includeFilePatterns.length; ++i) {
          if (includeFilePatterns[i].matcher(entry.getName()).matches()) {
            filesFound.put(entry.getName(),zip.getInputStream(entry));
            break;
          }
        }
      }
    }
  }
}
