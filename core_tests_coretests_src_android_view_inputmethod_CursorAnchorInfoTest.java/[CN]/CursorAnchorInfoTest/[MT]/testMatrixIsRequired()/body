{
  final int SELECTION_START=30;
  final int SELECTION_END=40;
  final int COMPOSING_TEXT_START=32;
  final String COMPOSING_TEXT="test";
  final int INSERTION_MARKER_FLAGS=FLAG_HAS_VISIBLE_REGION;
  final float INSERTION_MARKER_HORIZONTAL=10.5f;
  final float INSERTION_MARKER_TOP=100.1f;
  final float INSERTION_MARKER_BASELINE=110.4f;
  final float INSERTION_MARKER_BOTOM=111.0f;
  Matrix TRANSFORM_MATRIX=new Matrix(Matrix.IDENTITY_MATRIX);
  TRANSFORM_MATRIX.setScale(10.0f,20.0f);
  final Builder builder=new Builder();
  for (int repeatCount=0; repeatCount < 2; ++repeatCount) {
    builder.setSelectionRange(SELECTION_START,SELECTION_END).setComposingText(COMPOSING_TEXT_START,COMPOSING_TEXT);
    try {
      builder.build();
    }
 catch (    IllegalArgumentException ex) {
      assertTrue(false);
    }
    builder.setInsertionMarkerLocation(INSERTION_MARKER_HORIZONTAL,INSERTION_MARKER_TOP,INSERTION_MARKER_BASELINE,INSERTION_MARKER_BOTOM,INSERTION_MARKER_FLAGS);
    try {
      builder.build();
      assertTrue(false);
    }
 catch (    IllegalArgumentException ex) {
    }
    builder.setMatrix(TRANSFORM_MATRIX);
    try {
      builder.build();
    }
 catch (    IllegalArgumentException ex) {
      assertTrue(false);
    }
    builder.reset();
  }
}
