{
  mText="";
  int length=mTextChars.size();
  int middleIndex=(length - 1) / 2;
  long delayPerElement=RESET_DELAY_PER_ELEMENT;
  for (int i=0; i < length; i++) {
    CharState charState=mTextChars.get(i);
    if (animated) {
      int delayIndex;
      if (i <= middleIndex) {
        delayIndex=i * 2;
      }
 else {
        int distToMiddle=i - middleIndex;
        delayIndex=(length - 1) - (distToMiddle - 1) * 2;
      }
      long startDelay=delayIndex * delayPerElement;
      startDelay=Math.min(startDelay,RESET_MAX_DELAY);
      long maxDelay=delayPerElement * (length - 1);
      maxDelay=Math.min(maxDelay,RESET_MAX_DELAY) + DISAPPEAR_DURATION;
      charState.startRemoveAnimation(startDelay,maxDelay);
      charState.removeDotSwapCallbacks();
    }
 else {
      mCharPool.push(charState);
    }
  }
  if (!animated) {
    mTextChars.clear();
  }
}
