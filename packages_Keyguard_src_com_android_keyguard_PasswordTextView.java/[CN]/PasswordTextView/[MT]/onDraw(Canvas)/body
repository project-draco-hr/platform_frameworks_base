{
  float totalDrawingWidth=getDrawingWidth();
  float currentDrawPosition;
  if ((mGravity & Gravity.HORIZONTAL_GRAVITY_MASK) == Gravity.LEFT) {
    if ((mGravity & Gravity.RELATIVE_LAYOUT_DIRECTION) != 0 && getLayoutDirection() == LAYOUT_DIRECTION_RTL) {
      currentDrawPosition=getWidth() - getPaddingRight() - totalDrawingWidth;
    }
 else {
      currentDrawPosition=getPaddingLeft();
    }
  }
 else {
    currentDrawPosition=getWidth() / 2 - totalDrawingWidth / 2;
  }
  int length=mTextChars.size();
  Rect bounds=getCharBounds();
  int charHeight=(bounds.bottom - bounds.top);
  float yPosition=(getHeight() - getPaddingBottom() - getPaddingTop()) / 2 + getPaddingTop();
  canvas.clipRect(getPaddingLeft(),getPaddingTop(),getWidth() - getPaddingRight(),getHeight() - getPaddingBottom());
  float charLength=bounds.right - bounds.left;
  for (int i=0; i < length; i++) {
    CharState charState=mTextChars.get(i);
    float charWidth=charState.draw(canvas,currentDrawPosition,charHeight,yPosition,charLength);
    currentDrawPosition+=charWidth;
  }
}
