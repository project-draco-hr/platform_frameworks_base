{
  cancelAnimator(dotAnimator);
  if (!mShowPassword) {
    ValueAnimator overShootAnimator=ValueAnimator.ofFloat(currentDotSizeFactor,DOT_OVERSHOOT_FACTOR);
    overShootAnimator.addUpdateListener(dotSizeUpdater);
    overShootAnimator.setInterpolator(mAppearInterpolator);
    long overShootDuration=(long)(DOT_APPEAR_DURATION_OVERSHOOT * OVERSHOOT_TIME_POSITION);
    overShootAnimator.setDuration(overShootDuration);
    ValueAnimator settleBackAnimator=ValueAnimator.ofFloat(DOT_OVERSHOOT_FACTOR,1.0f);
    settleBackAnimator.addUpdateListener(dotSizeUpdater);
    settleBackAnimator.setDuration(DOT_APPEAR_DURATION_OVERSHOOT - overShootDuration);
    settleBackAnimator.addListener(dotFinishListener);
    AnimatorSet animatorSet=new AnimatorSet();
    animatorSet.playSequentially(overShootAnimator,settleBackAnimator);
    animatorSet.setStartDelay(delay);
    animatorSet.start();
    dotAnimator=animatorSet;
  }
 else {
    ValueAnimator growAnimator=ValueAnimator.ofFloat(currentDotSizeFactor,1.0f);
    growAnimator.addUpdateListener(dotSizeUpdater);
    growAnimator.setDuration((long)(APPEAR_DURATION * (1.0f - currentDotSizeFactor)));
    growAnimator.addListener(dotFinishListener);
    growAnimator.setStartDelay(delay);
    growAnimator.start();
    dotAnimator=growAnimator;
  }
  dotAnimationIsGrowing=true;
}
