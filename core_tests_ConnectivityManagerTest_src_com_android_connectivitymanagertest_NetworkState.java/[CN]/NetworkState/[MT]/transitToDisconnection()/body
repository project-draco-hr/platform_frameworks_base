{
  mReason="states: " + printStates();
  if (mStateDepository.get(0) != State.CONNECTED) {
    mReason+=" initial state should be CONNECTED, but it is " + mStateDepository.get(0) + ".";
    return false;
  }
  State lastState=mStateDepository.get(mStateDepository.size() - 1);
  if (lastState != mTransitionTarget) {
    mReason+=" the last state should be DISCONNECTED, but it is " + lastState;
    return false;
  }
  for (int i=1; i < mStateDepository.size() - 1; i++) {
    State preState=mStateDepository.get(i - 1);
    State curState=mStateDepository.get(i);
    if (preState == curState) {
      continue;
    }
 else     if ((preState == State.CONNECTED) && ((curState == State.DISCONNECTING) || (curState == State.DISCONNECTED))) {
      continue;
    }
 else     if ((preState == State.DISCONNECTING) && (curState == State.DISCONNECTED)) {
      continue;
    }
 else {
      mReason+=" Transition state from " + preState.toString() + " to "+ curState.toString()+ " is not valid.";
      return false;
    }
  }
  return true;
}
