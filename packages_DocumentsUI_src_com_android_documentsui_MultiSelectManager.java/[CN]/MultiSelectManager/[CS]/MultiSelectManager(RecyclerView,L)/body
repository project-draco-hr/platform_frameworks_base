{
  this(recyclerView.getAdapter(),new RecyclerViewHelper(){
    @Override public int findEventPosition(    MotionEvent e){
      View view=recyclerView.findChildViewUnder(e.getX(),e.getY());
      return view != null ? recyclerView.getChildAdapterPosition(view) : RecyclerView.NO_POSITION;
    }
  }
);
  GestureDetector.SimpleOnGestureListener listener=new GestureDetector.SimpleOnGestureListener(){
    @Override public boolean onSingleTapUp(    MotionEvent e){
      return MultiSelectManager.this.onSingleTapUp(e);
    }
    @Override public void onLongPress(    MotionEvent e){
      MultiSelectManager.this.onLongPress(e);
    }
  }
;
  CompositeOnGestureListener<? extends Object> compositeListener=new CompositeOnGestureListener<>(listener,gestureDelegate);
  final GestureDetector detector=new GestureDetector(recyclerView.getContext(),gestureDelegate == null ? listener : compositeListener);
  detector.setOnDoubleTapListener(compositeListener);
  recyclerView.addOnItemTouchListener(new RecyclerView.OnItemTouchListener(){
    public boolean onInterceptTouchEvent(    RecyclerView rv,    MotionEvent e){
      detector.onTouchEvent(e);
      return false;
    }
    public void onTouchEvent(    RecyclerView rv,    MotionEvent e){
    }
    public void onRequestDisallowInterceptTouchEvent(    boolean disallowIntercept){
    }
  }
);
}
