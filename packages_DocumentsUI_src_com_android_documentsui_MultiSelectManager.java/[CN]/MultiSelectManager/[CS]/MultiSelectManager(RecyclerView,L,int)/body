{
  this(recyclerView.getAdapter(),new RuntimeRecyclerViewHelper(recyclerView),mode);
  mBandSelectManager=new BandSelectManager((RuntimeRecyclerViewHelper)mHelper);
  GestureDetector.SimpleOnGestureListener listener=new GestureDetector.SimpleOnGestureListener(){
    @Override public boolean onSingleTapUp(    MotionEvent e){
      return MultiSelectManager.this.onSingleTapUp(e);
    }
    @Override public void onLongPress(    MotionEvent e){
      MultiSelectManager.this.onLongPress(e);
    }
  }
;
  CompositeOnGestureListener<? extends Object> compositeListener=new CompositeOnGestureListener<>(listener,gestureDelegate);
  final GestureDetector detector=new GestureDetector(recyclerView.getContext(),compositeListener);
  detector.setOnDoubleTapListener(compositeListener);
  recyclerView.addOnItemTouchListener(new RecyclerView.OnItemTouchListener(){
    public boolean onInterceptTouchEvent(    RecyclerView rv,    MotionEvent e){
      detector.onTouchEvent(e);
      return isMouseEvent(e) && (mBandSelectManager.mIsActive || e.getActionMasked() != MotionEvent.ACTION_UP);
    }
    public void onTouchEvent(    RecyclerView rv,    MotionEvent e){
      checkState(isMouseEvent(e));
      mBandSelectManager.processMotionEvent(e);
    }
    public void onRequestDisallowInterceptTouchEvent(    boolean disallowIntercept){
    }
  }
);
}
