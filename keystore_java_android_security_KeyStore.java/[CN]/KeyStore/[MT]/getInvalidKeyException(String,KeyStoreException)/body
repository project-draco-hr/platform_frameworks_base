{
switch (e.getErrorCode()) {
case KeymasterDefs.KM_ERROR_KEY_EXPIRED:
    return new KeyExpiredException();
case KeymasterDefs.KM_ERROR_KEY_NOT_YET_VALID:
  return new KeyNotYetValidException();
case KeymasterDefs.KM_ERROR_KEY_USER_NOT_AUTHENTICATED:
{
  KeyCharacteristics keyCharacteristics=new KeyCharacteristics();
  int getKeyCharacteristicsErrorCode=getKeyCharacteristics(keystoreKeyAlias,null,null,keyCharacteristics);
  if (getKeyCharacteristicsErrorCode != NO_ERROR) {
    return new InvalidKeyException("Failed to obtained key characteristics",getKeyStoreException(getKeyCharacteristicsErrorCode));
  }
  List<Long> keySids=keyCharacteristics.getLongs(KeymasterDefs.KM_TAG_USER_SECURE_ID);
  if (keySids.isEmpty()) {
    return new KeyPermanentlyInvalidatedException();
  }
  long rootSid=GateKeeper.getSecureUserId();
  if ((rootSid != 0) && (keySids.contains(Long.valueOf(rootSid)))) {
    return new UserNotAuthenticatedException();
  }
  long fingerprintOnlySid=getFingerprintOnlySid();
  if ((fingerprintOnlySid != 0) && (keySids.contains(Long.valueOf(fingerprintOnlySid)))) {
    return new UserNotAuthenticatedException();
  }
  return new KeyPermanentlyInvalidatedException();
}
default :
return new InvalidKeyException("Keystore operation failed",e);
}
}
