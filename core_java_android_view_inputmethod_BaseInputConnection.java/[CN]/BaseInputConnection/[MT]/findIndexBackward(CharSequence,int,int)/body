{
  int currentIndex=from;
  boolean waitingHighSurrogate=false;
  final int N=cs.length();
  if (currentIndex < 0 || N < currentIndex) {
    return INVALID_INDEX;
  }
  if (numCodePoints < 0) {
    return INVALID_INDEX;
  }
  int remainingCodePoints=numCodePoints;
  while (true) {
    if (remainingCodePoints == 0) {
      return currentIndex;
    }
    --currentIndex;
    if (currentIndex < 0) {
      if (waitingHighSurrogate) {
        return INVALID_INDEX;
      }
      return 0;
    }
    final char c=cs.charAt(currentIndex);
    if (waitingHighSurrogate) {
      if (!java.lang.Character.isHighSurrogate(c)) {
        return INVALID_INDEX;
      }
      waitingHighSurrogate=false;
      --remainingCodePoints;
      continue;
    }
    if (!java.lang.Character.isSurrogate(c)) {
      --remainingCodePoints;
      continue;
    }
    if (java.lang.Character.isHighSurrogate(c)) {
      return INVALID_INDEX;
    }
    waitingHighSurrogate=true;
  }
}
