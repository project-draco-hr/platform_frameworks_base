{
  try {
    filterClass.asSubclass(Filter.class);
  }
 catch (  ClassCastException e) {
    throw new IllegalArgumentException("Attempting to allocate class '" + filterClass + "' which is not a subclass of Filter!");
  }
  Constructor filterConstructor=null;
  try {
    filterConstructor=filterClass.getConstructor(String.class);
  }
 catch (  NoSuchMethodException e) {
    throw new IllegalArgumentException("The filter class '" + filterClass + "' does not have a constructor of the form <init>(String name)!");
  }
  Filter filter=null;
  try {
    filter=(Filter)filterConstructor.newInstance(filterName);
  }
 catch (  Throwable t) {
  }
  if (filter == null) {
    throw new IllegalArgumentException("Could not construct the filter '" + filterName + "'!");
  }
  return filter;
}
