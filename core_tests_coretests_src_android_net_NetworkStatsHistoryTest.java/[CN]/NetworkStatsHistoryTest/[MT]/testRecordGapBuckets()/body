{
  final long BUCKET_SIZE=HOUR_IN_MILLIS;
  stats=new NetworkStatsHistory(BUCKET_SIZE);
  final long firstStart=TEST_START;
  final long lastStart=TEST_START + WEEK_IN_MILLIS;
  stats.recordData(firstStart,firstStart + SECOND_IN_MILLIS,new NetworkStats.Entry(128L,2L,256L,4L,1L));
  stats.recordData(lastStart,lastStart + SECOND_IN_MILLIS,new NetworkStats.Entry(64L,1L,512L,8L,2L));
  assertEquals(2,stats.size());
  assertValues(stats,0,SECOND_IN_MILLIS,128L,2L,256L,4L,1L);
  assertValues(stats,1,SECOND_IN_MILLIS,64L,1L,512L,8L,2L);
  final long middleStart=TEST_START + DAY_IN_MILLIS;
  final long middleEnd=middleStart + (HOUR_IN_MILLIS * 2);
  stats.recordData(middleStart,middleEnd,new NetworkStats.Entry(2048L,4L,2048L,4L,2L));
  assertEquals(4,stats.size());
  assertValues(stats,0,SECOND_IN_MILLIS,128L,2L,256L,4L,1L);
  assertValues(stats,1,HOUR_IN_MILLIS,1024L,2L,1024L,2L,1L);
  assertValues(stats,2,HOUR_IN_MILLIS,1024L,2L,1024L,2L,1L);
  assertValues(stats,3,SECOND_IN_MILLIS,64L,1L,512L,8L,2L);
}
