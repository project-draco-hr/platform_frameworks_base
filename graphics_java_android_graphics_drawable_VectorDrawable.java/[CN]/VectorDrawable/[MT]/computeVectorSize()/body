{
  final VPathRenderer pathRenderer=mVectorState.mVPathRenderer;
  final Insets opticalInsets=pathRenderer.mOpticalInsets;
  final int sourceDensity=pathRenderer.mSourceDensity;
  final int targetDensity=mTargetDensity;
  if (targetDensity != sourceDensity) {
    mDpiScaledWidth=Drawable.scaleFromDensity((int)pathRenderer.mBaseWidth,sourceDensity,targetDensity,true);
    mDpiScaledHeight=Drawable.scaleFromDensity((int)pathRenderer.mBaseHeight,sourceDensity,targetDensity,true);
    final int left=Drawable.scaleFromDensity(opticalInsets.left,sourceDensity,targetDensity,false);
    final int right=Drawable.scaleFromDensity(opticalInsets.right,sourceDensity,targetDensity,false);
    final int top=Drawable.scaleFromDensity(opticalInsets.top,sourceDensity,targetDensity,false);
    final int bottom=Drawable.scaleFromDensity(opticalInsets.bottom,sourceDensity,targetDensity,false);
    mDpiScaledInsets=Insets.of(left,top,right,bottom);
  }
 else {
    mDpiScaledWidth=(int)pathRenderer.mBaseWidth;
    mDpiScaledHeight=(int)pathRenderer.mBaseHeight;
    mDpiScaledInsets=opticalInsets;
  }
}
