{
  final Insets opticalInsets=mVectorState.mOpticalInsets;
  final int sourceDensity=mVectorState.mDensity;
  final int targetDensity=mTargetDensity;
  if (targetDensity != sourceDensity) {
    mDpiScaledWidth=Drawable.scaleFromDensity((int)mVectorState.mBaseWidth,sourceDensity,targetDensity,true);
    mDpiScaledHeight=Drawable.scaleFromDensity((int)mVectorState.mBaseHeight,sourceDensity,targetDensity,true);
    final int left=Drawable.scaleFromDensity(opticalInsets.left,sourceDensity,targetDensity,false);
    final int right=Drawable.scaleFromDensity(opticalInsets.right,sourceDensity,targetDensity,false);
    final int top=Drawable.scaleFromDensity(opticalInsets.top,sourceDensity,targetDensity,false);
    final int bottom=Drawable.scaleFromDensity(opticalInsets.bottom,sourceDensity,targetDensity,false);
    mDpiScaledInsets=Insets.of(left,top,right,bottom);
  }
 else {
    mDpiScaledWidth=(int)mVectorState.mBaseWidth;
    mDpiScaledHeight=(int)mVectorState.mBaseHeight;
    mDpiScaledInsets=opticalInsets;
  }
  mDpiScaledDirty=false;
}
