{
  final VectorDrawableState state=mVectorState;
  final VPathRenderer pathRenderer=state.mVPathRenderer;
  boolean noPathTag=true;
  final Stack<VGroup> groupStack=new Stack<VGroup>();
  groupStack.push(pathRenderer.mRootGroup);
  int eventType=parser.getEventType();
  while (eventType != XmlPullParser.END_DOCUMENT) {
    if (eventType == XmlPullParser.START_TAG) {
      final String tagName=parser.getName();
      final VGroup currentGroup=groupStack.peek();
      if (SHAPE_PATH.equals(tagName)) {
        final VFullPath path=new VFullPath();
        path.inflate(res,attrs,theme);
        currentGroup.mChildren.add(path);
        if (path.getPathName() != null) {
          pathRenderer.mVGTargetsMap.put(path.getPathName(),path);
        }
        noPathTag=false;
        state.mChangingConfigurations|=path.mChangingConfigurations;
      }
 else       if (SHAPE_CLIP_PATH.equals(tagName)) {
        final VClipPath path=new VClipPath();
        path.inflate(res,attrs,theme);
        currentGroup.mChildren.add(path);
        if (path.getPathName() != null) {
          pathRenderer.mVGTargetsMap.put(path.getPathName(),path);
        }
        state.mChangingConfigurations|=path.mChangingConfigurations;
      }
 else       if (SHAPE_GROUP.equals(tagName)) {
        VGroup newChildGroup=new VGroup();
        newChildGroup.inflate(res,attrs,theme);
        currentGroup.mChildren.add(newChildGroup);
        groupStack.push(newChildGroup);
        if (newChildGroup.getGroupName() != null) {
          pathRenderer.mVGTargetsMap.put(newChildGroup.getGroupName(),newChildGroup);
        }
        state.mChangingConfigurations|=newChildGroup.mChangingConfigurations;
      }
    }
 else     if (eventType == XmlPullParser.END_TAG) {
      final String tagName=parser.getName();
      if (SHAPE_GROUP.equals(tagName)) {
        groupStack.pop();
      }
    }
    eventType=parser.next();
  }
  if (DBG_VECTOR_DRAWABLE) {
    printGroupTree(pathRenderer.mRootGroup,0);
  }
  if (noPathTag) {
    final StringBuffer tag=new StringBuffer();
    if (tag.length() > 0) {
      tag.append(" or ");
    }
    tag.append(SHAPE_PATH);
    throw new XmlPullParserException("no " + tag + " defined");
  }
}
