{
  boolean noSizeTag=true;
  boolean noViewportTag=true;
  boolean noGroupTag=true;
  boolean noPathTag=true;
  final VAnimatedPath animatedPath=new VAnimatedPath();
  VectorDrawable.VGroup currentGroup=null;
  int eventType=parser.getEventType();
  while (eventType != XmlPullParser.END_DOCUMENT) {
    if (eventType == XmlPullParser.START_TAG) {
      String tagName=parser.getName();
      if (SHAPE_PATH.equals(tagName)) {
        VectorDrawable.VPath p=new VPath(res,attrs);
        currentGroup.add(p);
        noPathTag=false;
      }
 else       if (SHAPE_ANIMATION.equals(tagName)) {
        VectorDrawable.VAnimation anim=new VAnimation(res,attrs,animatedPath.mGroupList);
        animatedPath.addAnimation(anim);
      }
 else       if (SHAPE_SIZE.equals(tagName)) {
        animatedPath.parseSize(res,attrs);
        noSizeTag=false;
      }
 else       if (SHAPE_VIEWPORT.equals(tagName)) {
        animatedPath.parseViewport(res,attrs);
        noViewportTag=false;
      }
 else       if (SHAPE_GROUP.equals(tagName)) {
        currentGroup=new VectorDrawable.VGroup();
        animatedPath.mGroupList.add(currentGroup);
        noGroupTag=false;
      }
 else       if (SHAPE_VECTOR.equals(tagName)) {
        TypedArray a=res.obtainAttributes(attrs,R.styleable.VectorDrawable);
        animatedPath.setTrigger(a.getInteger(R.styleable.VectorDrawable_trigger,0));
        a.recycle();
      }
    }
    eventType=parser.next();
  }
  if (noSizeTag || noViewportTag || noGroupTag|| noPathTag) {
    StringBuffer tag=new StringBuffer();
    if (noSizeTag) {
      tag.append("size");
    }
    if (noViewportTag) {
      if (tag.length() > 0) {
        tag.append(" & ");
      }
      tag.append("size");
    }
    if (noGroupTag) {
      if (tag.length() > 0) {
        tag.append(" & ");
      }
      tag.append("group");
    }
    if (noPathTag) {
      if (tag.length() > 0) {
        tag.append(" or ");
      }
      tag.append("path");
    }
    throw new XmlPullParserException("no " + tag + " defined");
  }
  animatedPath.parseFinish();
  return animatedPath;
}
