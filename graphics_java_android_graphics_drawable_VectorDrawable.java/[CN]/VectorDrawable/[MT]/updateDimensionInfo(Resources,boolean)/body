{
  if (res != null) {
    final int densityDpi=res.getDisplayMetrics().densityDpi;
    final int targetDensity=densityDpi == 0 ? DisplayMetrics.DENSITY_DEFAULT : densityDpi;
    if (updateConstantStateDensity) {
      mVectorState.mVPathRenderer.mTargetDensity=targetDensity;
    }
 else {
      final int constantStateDensity=mVectorState.mVPathRenderer.mTargetDensity;
      if (targetDensity != constantStateDensity && constantStateDensity != 0) {
        mDpiScaledWidth=Bitmap.scaleFromDensity((int)mVectorState.mVPathRenderer.mBaseWidth,constantStateDensity,targetDensity);
        mDpiScaledHeight=Bitmap.scaleFromDensity((int)mVectorState.mVPathRenderer.mBaseHeight,constantStateDensity,targetDensity);
        final int left=Bitmap.scaleFromDensity(mVectorState.mVPathRenderer.mOpticalInsets.left,constantStateDensity,targetDensity);
        final int right=Bitmap.scaleFromDensity(mVectorState.mVPathRenderer.mOpticalInsets.right,constantStateDensity,targetDensity);
        final int top=Bitmap.scaleFromDensity(mVectorState.mVPathRenderer.mOpticalInsets.top,constantStateDensity,targetDensity);
        final int bottom=Bitmap.scaleFromDensity(mVectorState.mVPathRenderer.mOpticalInsets.bottom,constantStateDensity,targetDensity);
        mDpiScaleInsets=Insets.of(left,top,right,bottom);
        return;
      }
    }
  }
  mDpiScaledWidth=(int)mVectorState.mVPathRenderer.mBaseWidth;
  mDpiScaledHeight=(int)mVectorState.mVPathRenderer.mBaseHeight;
  mDpiScaleInsets=mVectorState.mVPathRenderer.mOpticalInsets;
}
