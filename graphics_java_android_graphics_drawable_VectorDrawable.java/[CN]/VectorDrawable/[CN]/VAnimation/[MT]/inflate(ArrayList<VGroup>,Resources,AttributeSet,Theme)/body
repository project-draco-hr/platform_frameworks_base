{
  String value;
  String[] sp;
  int name;
  final TypedArray a=r.obtainAttributes(attrs,R.styleable.VectorDrawableAnimation);
  final int[] themeAttrs=a.extractThemeAttrs();
  mThemeAttrs=themeAttrs;
  value=a.getString(R.styleable.VectorDrawableAnimation_sequence);
  if (value != null) {
    sp=value.split(SEPARATOR);
    final VectorDrawable.VPath[] paths=new VectorDrawable.VPath[sp.length];
    for (int j=0; j < sp.length; j++) {
      mSeqMap.add(sp[j].trim());
      VectorDrawable.VPath path=groups.get(j).get(sp[j]);
      path.mAnimated=true;
      paths[j]=path;
    }
    setPaths(paths);
  }
  name=R.styleable.VectorDrawableAnimation_durations;
  value=a.getString(name);
  if (value != null) {
    long totalDuration=0;
    sp=value.split(SEPARATOR);
    final long[] dur=new long[sp.length];
    for (int j=0; j < dur.length; j++) {
      dur[j]=Long.parseLong(sp[j]);
      totalDuration+=dur[j];
    }
    if (totalDuration == 0) {
      throw new XmlPullParserException(a.getPositionDescription() + " total duration must not be zero");
    }
    setDuration(dur);
  }
  setLimitProperty(a.getInt(R.styleable.VectorDrawableAnimation_limitTo,0));
  setRepeat(a.getInt(R.styleable.VectorDrawableAnimation_repeatCount,1));
  setStartOffset(a.getInt(R.styleable.VectorDrawableAnimation_startDelay,0));
  setMode(a.getInt(R.styleable.VectorDrawableAnimation_repeatStyle,0));
  fixMissingParameters();
  a.recycle();
}
