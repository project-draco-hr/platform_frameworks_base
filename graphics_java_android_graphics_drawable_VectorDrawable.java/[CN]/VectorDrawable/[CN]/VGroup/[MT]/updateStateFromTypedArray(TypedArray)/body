{
  mChangingConfigurations|=a.getChangingConfigurations();
  mThemeAttrs=a.extractThemeAttrs();
  if (mTransform == null) {
    mTransform=new float[TRANSFORM_PROPERTY_COUNT];
  }
  boolean success=nGetGroupProperties(mNativePtr,mTransform,TRANSFORM_PROPERTY_COUNT);
  if (!success) {
    throw new RuntimeException("Error: inconsistent property count");
  }
  float rotate=a.getFloat(R.styleable.VectorDrawableGroup_rotation,mTransform[ROTATE_INDEX]);
  float pivotX=a.getFloat(R.styleable.VectorDrawableGroup_pivotX,mTransform[PIVOT_X_INDEX]);
  float pivotY=a.getFloat(R.styleable.VectorDrawableGroup_pivotY,mTransform[PIVOT_Y_INDEX]);
  float scaleX=a.getFloat(R.styleable.VectorDrawableGroup_scaleX,mTransform[SCALE_X_INDEX]);
  float scaleY=a.getFloat(R.styleable.VectorDrawableGroup_scaleY,mTransform[SCALE_Y_INDEX]);
  float translateX=a.getFloat(R.styleable.VectorDrawableGroup_translateX,mTransform[TRANSLATE_X_INDEX]);
  float translateY=a.getFloat(R.styleable.VectorDrawableGroup_translateY,mTransform[TRANSLATE_Y_INDEX]);
  final String groupName=a.getString(R.styleable.VectorDrawableGroup_name);
  if (groupName != null) {
    mGroupName=groupName;
    nSetName(mNativePtr,mGroupName);
  }
  nUpdateGroupProperties(mNativePtr,rotate,pivotX,pivotY,scaleX,scaleY,translateX,translateY);
}
