{
  if (mTrimPathStart == 0.0f && mTrimPathEnd == 1.0f) {
    return;
  }
  if (temp.mPathMeasure == null) {
    temp.mPathMeasure=new PathMeasure();
  }
  final PathMeasure pathMeasure=temp.mPathMeasure;
  pathMeasure.setPath(path,false);
  final float len=pathMeasure.getLength();
  final float start=len * ((mTrimPathStart + mTrimPathOffset) % 1.0f);
  final float end=len * ((mTrimPathEnd + mTrimPathOffset) % 1.0f);
  path.reset();
  if (start > end) {
    pathMeasure.getSegment(start,len,path,true);
    pathMeasure.getSegment(0,end,path,true);
  }
 else {
    pathMeasure.getSegment(start,end,path,true);
  }
  path.rLineTo(0,0);
}
