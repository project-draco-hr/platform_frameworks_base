{
  mChangingConfigurations|=a.getChangingConfigurations();
  mThemeAttrs=a.extractThemeAttrs();
  final String pathName=a.getString(R.styleable.VectorDrawablePath_name);
  if (pathName != null) {
    mPathName=pathName;
  }
  final String pathData=a.getString(R.styleable.VectorDrawablePath_pathData);
  if (pathData != null) {
    mNodes=PathParser.createNodesFromPathData(pathData);
  }
  final ColorStateList fillColors=a.getColorStateList(R.styleable.VectorDrawablePath_fillColor);
  if (fillColors != null) {
    mFillColors=fillColors;
    mFillColor=fillColors.getDefaultColor();
  }
  final ColorStateList strokeColors=a.getColorStateList(R.styleable.VectorDrawablePath_strokeColor);
  if (strokeColors != null) {
    mStrokeColors=strokeColors;
    mStrokeColor=strokeColors.getDefaultColor();
  }
  mFillAlpha=a.getFloat(R.styleable.VectorDrawablePath_fillAlpha,mFillAlpha);
  mStrokeLineCap=getStrokeLineCap(a.getInt(R.styleable.VectorDrawablePath_strokeLineCap,-1),mStrokeLineCap);
  mStrokeLineJoin=getStrokeLineJoin(a.getInt(R.styleable.VectorDrawablePath_strokeLineJoin,-1),mStrokeLineJoin);
  mStrokeMiterlimit=a.getFloat(R.styleable.VectorDrawablePath_strokeMiterLimit,mStrokeMiterlimit);
  mStrokeAlpha=a.getFloat(R.styleable.VectorDrawablePath_strokeAlpha,mStrokeAlpha);
  mStrokeWidth=a.getFloat(R.styleable.VectorDrawablePath_strokeWidth,mStrokeWidth);
  mTrimPathEnd=a.getFloat(R.styleable.VectorDrawablePath_trimPathEnd,mTrimPathEnd);
  mTrimPathOffset=a.getFloat(R.styleable.VectorDrawablePath_trimPathOffset,mTrimPathOffset);
  mTrimPathStart=a.getFloat(R.styleable.VectorDrawablePath_trimPathStart,mTrimPathStart);
}
