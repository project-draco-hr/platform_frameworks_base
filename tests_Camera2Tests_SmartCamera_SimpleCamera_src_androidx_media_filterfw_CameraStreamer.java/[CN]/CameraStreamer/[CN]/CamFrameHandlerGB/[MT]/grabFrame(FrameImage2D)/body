{
  EGLContext clientContext=RenderTarget.currentContext();
  TextureSource clientTex=textureForContext(clientContext);
  int texWidth=mCameraWidth / 4;
  int texHeight=mCameraHeight + mCameraHeight / 2;
synchronized (mBufferLock) {
    ByteBuffer pixels=ByteBuffer.wrap(readBuffer());
    clientTex.allocateWithPixels(pixels,texWidth,texHeight);
  }
  clientTex.setParameter(GLES20.GL_TEXTURE_MAG_FILTER,GLES20.GL_NEAREST);
  clientTex.setParameter(GLES20.GL_TEXTURE_MIN_FILTER,GLES20.GL_NEAREST);
  ImageShader transferShader=shaderForContext(clientContext);
  transferShader.setTargetCoords(mTargetCoords);
  updateShaderPixelSize(transferShader);
  targetFrame.resize(new int[]{mOutWidth,mOutHeight});
  transferShader.process(clientTex,targetFrame.lockRenderTarget(),mOutWidth,mOutHeight);
  targetFrame.unlock();
}
