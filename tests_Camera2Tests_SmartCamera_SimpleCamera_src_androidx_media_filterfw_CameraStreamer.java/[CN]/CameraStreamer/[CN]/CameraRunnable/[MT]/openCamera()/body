{
  try {
    if (!mCameraLock.tryLock(MAX_CAMERA_WAIT_TIME,TimeUnit.SECONDS)) {
      throw new RuntimeException("Timed out while waiting to acquire camera!");
    }
  }
 catch (  InterruptedException e) {
    throw new RuntimeException("Interrupted while waiting to acquire camera!");
  }
  Object lockContext=new Object();
  mExternalCameraLock.lock(lockContext);
synchronized (this) {
    updateCamera();
    updateRotation();
    mCamFrameHandler.setupServerFrame();
  }
  mCamera.startPreview();
synchronized (mCamListeners) {
    for (    CameraListener listener : mCamListeners) {
      listener.onCameraOpened(CameraStreamer.this);
    }
  }
  mExternalCameraLock.unlock(lockContext);
  mCameraReadyLock.lock();
  mCameraReady.signal();
  mCameraReadyLock.unlock();
}
