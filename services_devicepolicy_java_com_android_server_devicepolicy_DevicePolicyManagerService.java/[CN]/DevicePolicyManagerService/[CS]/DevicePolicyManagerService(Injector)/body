{
  mInjector=injector;
  mContext=Preconditions.checkNotNull(injector.mContext);
  mHandler=new Handler(Preconditions.checkNotNull(injector.getMyLooper()));
  mOwners=Preconditions.checkNotNull(injector.newOwners());
  mUserManager=Preconditions.checkNotNull(injector.getUserManager());
  mUserManagerInternal=Preconditions.checkNotNull(injector.getUserManagerInternal());
  mIPackageManager=Preconditions.checkNotNull(injector.getIPackageManager());
  mTelephonyManager=Preconditions.checkNotNull(injector.getTelephonyManager());
  mLocalService=new LocalService();
  mLockPatternUtils=injector.newLockPatternUtils();
  mSecurityLogMonitor=new SecurityLogMonitor(this);
  mHasFeature=mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_DEVICE_ADMIN);
  if (!mHasFeature) {
    return;
  }
  IntentFilter filter=new IntentFilter();
  filter.addAction(Intent.ACTION_BOOT_COMPLETED);
  filter.addAction(ACTION_EXPIRED_PASSWORD_NOTIFICATION);
  filter.addAction(Intent.ACTION_USER_ADDED);
  filter.addAction(Intent.ACTION_USER_REMOVED);
  filter.addAction(Intent.ACTION_USER_STARTED);
  filter.addAction(KeyChain.ACTION_STORAGE_CHANGED);
  filter.setPriority(IntentFilter.SYSTEM_HIGH_PRIORITY);
  mContext.registerReceiverAsUser(mReceiver,UserHandle.ALL,filter,null,mHandler);
  filter=new IntentFilter();
  filter.addAction(Intent.ACTION_PACKAGE_CHANGED);
  filter.addAction(Intent.ACTION_PACKAGE_REMOVED);
  filter.addAction(Intent.ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE);
  filter.addAction(Intent.ACTION_PACKAGE_ADDED);
  filter.addDataScheme("package");
  mContext.registerReceiverAsUser(mReceiver,UserHandle.ALL,filter,null,mHandler);
  filter=new IntentFilter();
  filter.addAction(Intent.ACTION_MANAGED_PROFILE_ADDED);
  mContext.registerReceiverAsUser(mReceiver,UserHandle.ALL,filter,null,mHandler);
  LocalServices.addService(DevicePolicyManagerInternal.class,mLocalService);
}
