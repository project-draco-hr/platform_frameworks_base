{
  if (!mHasFeature) {
    return null;
  }
  enforceCrossUserPermission(userHandle);
  if (agent == null) {
    throw new NullPointerException("agent is null");
  }
synchronized (this) {
    final String componentName=agent.flattenToString();
    if (admin != null) {
      final ActiveAdmin ap=getActiveAdminUncheckedLocked(admin,userHandle);
      if (ap == null)       return null;
      TrustAgentInfo trustAgentInfo=ap.trustAgentInfos.get(componentName);
      if (trustAgentInfo == null || trustAgentInfo.options == null)       return null;
      List<PersistableBundle> result=new ArrayList<PersistableBundle>();
      result.add(trustAgentInfo.options);
      return result;
    }
    final List<UserInfo> profiles=mUserManager.getProfiles(userHandle);
    List<PersistableBundle> result=null;
    boolean allAdminsHaveOptions=true;
    for (    UserInfo userInfo : profiles) {
      DevicePolicyData policy=getUserDataUnchecked(userInfo.id);
      final int N=policy.mAdminList.size();
      for (int i=0; i < N; i++) {
        final ActiveAdmin active=policy.mAdminList.get(i);
        final boolean disablesTrust=(active.disabledKeyguardFeatures & DevicePolicyManager.KEYGUARD_DISABLE_TRUST_AGENTS) != 0;
        final TrustAgentInfo info=active.trustAgentInfos.get(componentName);
        if (info != null && info.options != null && !info.options.isEmpty()) {
          if (disablesTrust) {
            if (result == null) {
              result=new ArrayList<PersistableBundle>();
            }
            result.add(info.options);
          }
 else {
            Log.w(LOG_TAG,"Ignoring admin " + active.info + " because it has trust options but doesn't declare "+ "KEYGUARD_DISABLE_TRUST_AGENTS");
          }
        }
 else         if (disablesTrust) {
          allAdminsHaveOptions=false;
          break;
        }
      }
    }
    return allAdminsHaveOptions ? result : null;
  }
}
