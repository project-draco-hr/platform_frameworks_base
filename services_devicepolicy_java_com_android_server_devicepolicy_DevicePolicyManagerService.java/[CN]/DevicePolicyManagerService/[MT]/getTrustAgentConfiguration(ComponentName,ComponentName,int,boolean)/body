{
  if (!mHasFeature) {
    return null;
  }
  Preconditions.checkNotNull(agent,"agent null");
  enforceFullCrossUsersPermission(userHandle);
synchronized (this) {
    final String componentName=agent.flattenToString();
    if (admin != null) {
      final ActiveAdmin ap=getActiveAdminUncheckedLocked(admin,userHandle,parent);
      if (ap == null)       return null;
      TrustAgentInfo trustAgentInfo=ap.trustAgentInfos.get(componentName);
      if (trustAgentInfo == null || trustAgentInfo.options == null)       return null;
      List<PersistableBundle> result=new ArrayList<>();
      result.add(trustAgentInfo.options);
      return result;
    }
    List<PersistableBundle> result=null;
    List<ActiveAdmin> admins=getActiveAdminsForLockscreenPoliciesLocked(userHandle,parent);
    boolean allAdminsHaveOptions=true;
    final int N=admins.size();
    for (int i=0; i < N; i++) {
      final ActiveAdmin active=admins.get(i);
      final boolean disablesTrust=(active.disabledKeyguardFeatures & DevicePolicyManager.KEYGUARD_DISABLE_TRUST_AGENTS) != 0;
      final TrustAgentInfo info=active.trustAgentInfos.get(componentName);
      if (info != null && info.options != null && !info.options.isEmpty()) {
        if (disablesTrust) {
          if (result == null) {
            result=new ArrayList<>();
          }
          result.add(info.options);
        }
 else {
          Log.w(LOG_TAG,"Ignoring admin " + active.info + " because it has trust options but doesn't declare "+ "KEYGUARD_DISABLE_TRUST_AGENTS");
        }
      }
 else       if (disablesTrust) {
        allAdminsHaveOptions=false;
        break;
      }
    }
    return allAdminsHaveOptions ? result : null;
  }
}
