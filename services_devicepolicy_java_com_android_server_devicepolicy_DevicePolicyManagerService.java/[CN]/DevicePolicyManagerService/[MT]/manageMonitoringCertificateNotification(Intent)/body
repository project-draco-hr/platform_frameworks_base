{
  final NotificationManager notificationManager=getNotificationManager();
  final boolean hasCert=DevicePolicyManager.hasAnyCaCertsInstalled();
  if (!hasCert) {
    if (intent.getAction().equals(KeyChain.ACTION_STORAGE_CHANGED)) {
      for (      UserInfo user : mUserManager.getUsers()) {
        notificationManager.cancelAsUser(null,MONITORING_CERT_NOTIFICATION_ID,user.getUserHandle());
      }
    }
    return;
  }
  final boolean isManaged=getDeviceOwner() != null;
  int smallIconId;
  String contentText;
  if (isManaged) {
    contentText=mContext.getString(R.string.ssl_ca_cert_noti_managed,getDeviceOwnerName());
    smallIconId=R.drawable.stat_sys_certificate_info;
  }
 else {
    contentText=mContext.getString(R.string.ssl_ca_cert_noti_by_unknown);
    smallIconId=android.R.drawable.stat_sys_warning;
  }
  Intent dialogIntent=new Intent(Settings.ACTION_MONITORING_CERT_INFO);
  dialogIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
  dialogIntent.setPackage("com.android.settings");
  PendingIntent notifyIntent=PendingIntent.getActivityAsUser(mContext,0,dialogIntent,PendingIntent.FLAG_UPDATE_CURRENT,null,UserHandle.CURRENT);
  Notification noti=new Notification.Builder(mContext).setSmallIcon(smallIconId).setContentTitle(mContext.getString(R.string.ssl_ca_cert_warning)).setContentText(contentText).setContentIntent(notifyIntent).setPriority(Notification.PRIORITY_HIGH).setShowWhen(false).build();
  if (intent.getAction().equals(KeyChain.ACTION_STORAGE_CHANGED)) {
    for (    UserInfo user : mUserManager.getUsers()) {
      notificationManager.notifyAsUser(null,MONITORING_CERT_NOTIFICATION_ID,noti,user.getUserHandle());
    }
  }
 else {
    notificationManager.notifyAsUser(null,MONITORING_CERT_NOTIFICATION_ID,noti,UserHandle.CURRENT);
  }
}
