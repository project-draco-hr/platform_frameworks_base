{
  final IKeyChainAliasCallback keyChainAliasResponse=IKeyChainAliasCallback.Stub.asInterface(responseBinder);
  if (keyChainAliasResponse == null) {
    return;
  }
  AsyncTask<Void,Void,Void> task=new AsyncTask<Void,Void,Void>(){
    @Override protected Void doInBackground(    Void... unused){
      try {
        if (alias != null) {
          UserHandle userHandle=new UserHandle(UserHandle.getUserId(uid));
          KeyChain.KeyChainConnection connection=KeyChain.bindAsUser(mContext,userHandle);
          try {
            connection.getService().setGrant(uid,alias,true);
          }
  finally {
            connection.close();
          }
        }
        keyChainAliasResponse.alias(alias);
      }
 catch (      InterruptedException e) {
        Log.w(LOG_TAG,"interrupted while granting access",e);
        Thread.currentThread().interrupt();
      }
catch (      Exception e) {
        Log.e(LOG_TAG,"error while granting access",e);
      }
      return null;
    }
  }
;
  task.execute();
}
