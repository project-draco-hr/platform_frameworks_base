{
  if (mOwners.hasDeviceOwner()) {
    return false;
  }
  final int callingUserId=mInjector.userHandleGetCallingUserId();
  if (DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE.equals(action)) {
    try {
      if (!mIPackageManager.hasSystemFeature(PackageManager.FEATURE_MANAGED_USERS)) {
        return false;
      }
    }
 catch (    RemoteException e) {
      return false;
    }
    final long ident=mInjector.binderClearCallingIdentity();
    try {
      if (!mUserManager.canAddMoreManagedProfiles(callingUserId,true)) {
        return false;
      }
    }
  finally {
      mInjector.binderRestoreCallingIdentity(ident);
    }
    return true;
  }
 else   if (DevicePolicyManager.ACTION_PROVISION_MANAGED_DEVICE.equals(action)) {
    return isDeviceOwnerProvisioningAllowed(callingUserId);
  }
 else   if (DevicePolicyManager.ACTION_PROVISION_MANAGED_USER.equals(action)) {
    if (!UserManager.isSplitSystemUser()) {
      return false;
    }
    if (hasUserSetupCompleted(callingUserId)) {
      return false;
    }
    return true;
  }
 else   if (DevicePolicyManager.ACTION_PROVISION_MANAGED_SHAREABLE_DEVICE.equals(action)) {
    if (!UserManager.isSplitSystemUser()) {
      return false;
    }
    return isDeviceOwnerProvisioningAllowed(callingUserId);
  }
  throw new IllegalArgumentException("Unknown provisioning action " + action);
}
