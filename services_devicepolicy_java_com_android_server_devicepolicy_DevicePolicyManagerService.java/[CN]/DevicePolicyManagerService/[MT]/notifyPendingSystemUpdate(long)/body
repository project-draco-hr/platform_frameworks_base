{
  mContext.enforceCallingOrSelfPermission(permission.NOTIFY_PENDING_SYSTEM_UPDATE,"Only the system update service can broadcast update information");
  if (UserHandle.getCallingUserId() != UserHandle.USER_OWNER) {
    Slog.w(LOG_TAG,"Only the system update service in the primary user " + "can broadcast update information.");
    return;
  }
  Intent intent=new Intent(DeviceAdminReceiver.ACTION_NOTIFY_PENDING_SYSTEM_UPDATE);
  intent.putExtra(DeviceAdminReceiver.EXTRA_SYSTEM_UPDATE_RECEIVED_TIME,updateReceivedTime);
synchronized (this) {
    String deviceOwnerPackage=getDeviceOwner();
    if (deviceOwnerPackage == null) {
      return;
    }
    final UserHandle deviceOwnerUser=new UserHandle(mOwners.getDeviceOwnerUserId());
    ActivityInfo[] receivers=null;
    try {
      receivers=mContext.getPackageManager().getPackageInfo(deviceOwnerPackage,PackageManager.GET_RECEIVERS).receivers;
    }
 catch (    NameNotFoundException e) {
      Log.e(LOG_TAG,"Cannot find device owner package",e);
    }
    if (receivers != null) {
      long ident=Binder.clearCallingIdentity();
      try {
        for (int i=0; i < receivers.length; i++) {
          if (permission.BIND_DEVICE_ADMIN.equals(receivers[i].permission)) {
            intent.setComponent(new ComponentName(deviceOwnerPackage,receivers[i].name));
            mContext.sendBroadcastAsUser(intent,deviceOwnerUser);
          }
        }
      }
  finally {
        Binder.restoreCallingIdentity(ident);
      }
    }
  }
}
