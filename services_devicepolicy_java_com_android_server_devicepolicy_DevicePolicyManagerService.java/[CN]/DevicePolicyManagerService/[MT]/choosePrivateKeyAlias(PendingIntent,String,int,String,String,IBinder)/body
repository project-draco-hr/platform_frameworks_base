{
  if (!mHasFeature) {
    KeyChain.openPrivateKeyAliasChooser(mContext,sender,host,port,alias,response);
    return;
  }
  final int senderUid=Binder.getCallingUid();
  Intent intent=new Intent(DeviceAdminReceiver.ACTION_CHOOSE_PRIVATE_KEY_ALIAS);
synchronized (this) {
    DevicePolicyData userData=getUserData(UserHandle.getCallingUserId());
    ComponentName privateKeyAccessListener=userData.mPrivateKeyAccessListener;
    intent.setComponent(privateKeyAccessListener);
  }
  intent.putExtra(DeviceAdminReceiver.EXTRA_CHOOSE_PRIVATE_KEY_SENDER_UID,senderUid);
  intent.putExtra(DeviceAdminReceiver.EXTRA_CHOOSE_PRIVATE_KEY_HOST,host);
  intent.putExtra(DeviceAdminReceiver.EXTRA_CHOOSE_PRIVATE_KEY_PORT,port);
  intent.putExtra(DeviceAdminReceiver.EXTRA_CHOOSE_PRIVATE_KEY_URL,url);
  intent.putExtra(DeviceAdminReceiver.EXTRA_CHOOSE_PRIVATE_KEY_ALIAS,alias);
  intent.putExtra(DeviceAdminReceiver.EXTRA_CHOOSE_PRIVATE_KEY_RESPONSE,response);
  UserHandle user=Binder.getCallingUserHandle();
  mContext.sendOrderedBroadcastAsUser(intent,user,null,new BroadcastReceiver(){
    @Override public void onReceive(    Context context,    Intent intent){
      String chosenAlias=getResultData();
      if (chosenAlias != null) {
        sendPrivateKeyAliasResponse(senderUid,chosenAlias,response);
        return;
      }
      KeyChain.openPrivateKeyAliasChooser(context,sender,host,port,alias,response);
    }
  }
,null,Activity.RESULT_OK,null,null);
}
