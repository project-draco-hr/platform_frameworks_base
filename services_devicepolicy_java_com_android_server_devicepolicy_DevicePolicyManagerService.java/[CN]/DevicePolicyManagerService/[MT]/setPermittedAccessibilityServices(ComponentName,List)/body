{
  if (!mHasFeature) {
    return false;
  }
  Preconditions.checkNotNull(who,"ComponentName is null");
  if (packageList != null) {
    int userId=UserHandle.getCallingUserId();
    List<AccessibilityServiceInfo> enabledServices=null;
    long id=binderClearCallingIdentity();
    try {
      UserInfo user=mUserManager.getUserInfo(userId);
      if (user.isManagedProfile()) {
        userId=user.profileGroupId;
      }
      AccessibilityManager accessibilityManager=getAccessibilityManagerForUser(userId);
      enabledServices=accessibilityManager.getEnabledAccessibilityServiceList(AccessibilityServiceInfo.FEEDBACK_ALL_MASK);
    }
  finally {
      binderRestoreCallingIdentity(id);
    }
    if (enabledServices != null) {
      List<String> enabledPackages=new ArrayList<String>();
      for (      AccessibilityServiceInfo service : enabledServices) {
        enabledPackages.add(service.getResolveInfo().serviceInfo.packageName);
      }
      if (!checkPackagesInPermittedListOrSystem(enabledPackages,packageList)) {
        Slog.e(LOG_TAG,"Cannot set permitted accessibility services, " + "because it contains already enabled accesibility services.");
        return false;
      }
    }
  }
synchronized (this) {
    ActiveAdmin admin=getActiveAdminForCallerLocked(who,DeviceAdminInfo.USES_POLICY_PROFILE_OWNER);
    admin.permittedAccessiblityServices=packageList;
    saveSettingsLocked(UserHandle.getCallingUserId());
  }
  return true;
}
