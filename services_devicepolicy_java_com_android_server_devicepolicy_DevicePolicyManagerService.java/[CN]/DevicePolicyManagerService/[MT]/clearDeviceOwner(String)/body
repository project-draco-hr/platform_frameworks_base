{
  Preconditions.checkNotNull(packageName,"packageName is null");
  try {
    int uid=mContext.getPackageManager().getPackageUid(packageName,0);
    if (uid != mInjector.binderGetCallingUid()) {
      throw new SecurityException("Invalid packageName");
    }
  }
 catch (  NameNotFoundException e) {
    throw new SecurityException(e);
  }
  if (!isDeviceOwner(packageName)) {
    throw new SecurityException("clearDeviceOwner can only be called by the device owner");
  }
synchronized (this) {
    clearUserPoliciesLocked(new UserHandle(UserHandle.USER_SYSTEM));
    mOwners.clearDeviceOwner();
    mOwners.writeDeviceOwner();
    updateDeviceOwnerLocked();
    long ident=mInjector.binderClearCallingIdentity();
    try {
      mInjector.getIBackupManager().setBackupServiceActive(UserHandle.USER_SYSTEM,true);
    }
 catch (    RemoteException e) {
      throw new IllegalStateException("Failed reactivating backup service.",e);
    }
 finally {
      mInjector.binderRestoreCallingIdentity(ident);
    }
  }
}
