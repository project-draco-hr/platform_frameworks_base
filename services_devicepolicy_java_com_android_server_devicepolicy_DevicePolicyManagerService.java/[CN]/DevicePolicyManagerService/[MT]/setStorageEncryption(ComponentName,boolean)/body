{
  if (!mHasFeature) {
    return DevicePolicyManager.ENCRYPTION_STATUS_UNSUPPORTED;
  }
  Preconditions.checkNotNull(who,"ComponentName is null");
  final int userHandle=UserHandle.getCallingUserId();
synchronized (this) {
    if (userHandle != UserHandle.USER_SYSTEM) {
      Slog.w(LOG_TAG,"Only owner/system user is allowed to set storage encryption. User " + UserHandle.getCallingUserId() + " is not permitted.");
      return 0;
    }
    ActiveAdmin ap=getActiveAdminForCallerLocked(who,DeviceAdminInfo.USES_ENCRYPTED_STORAGE);
    if (!isEncryptionSupported()) {
      return DevicePolicyManager.ENCRYPTION_STATUS_UNSUPPORTED;
    }
    if (ap.encryptionRequested != encrypt) {
      ap.encryptionRequested=encrypt;
      saveSettingsLocked(userHandle);
    }
    DevicePolicyData policy=getUserData(UserHandle.USER_SYSTEM);
    boolean newRequested=false;
    final int N=policy.mAdminList.size();
    for (int i=0; i < N; i++) {
      newRequested|=policy.mAdminList.get(i).encryptionRequested;
    }
    setEncryptionRequested(newRequested);
    return newRequested ? DevicePolicyManager.ENCRYPTION_STATUS_ACTIVE : DevicePolicyManager.ENCRYPTION_STATUS_INACTIVE;
  }
}
