{
  if (!mHasFeature) {
    return false;
  }
  mContext.enforceCallingOrSelfPermission(android.Manifest.permission.MANAGE_USERS,null);
  if (mUserManager.getUserInfo(userHandle) == null) {
    throw new IllegalArgumentException("Attempted to set profile owner for invalid userId: " + userHandle);
  }
  if (packageName == null || !DeviceOwner.isInstalledForUser(packageName,userHandle)) {
    throw new IllegalArgumentException("Package name " + packageName + " not installed for userId:"+ userHandle);
  }
synchronized (this) {
    if (isUserSetupComplete(userHandle)) {
      throw new IllegalStateException("Trying to set profile owner but user is already set-up.");
    }
    long token=Binder.clearCallingIdentity();
    try {
      mAppOpsService.setProfileOwner(packageName,userHandle);
    }
 catch (    RemoteException e) {
      Log.w(LOG_TAG,"Unable to notify AppOpsService of ProfileOwner",e);
    }
 finally {
      Binder.restoreCallingIdentity(token);
    }
    if (mDeviceOwner == null) {
      mDeviceOwner=DeviceOwner.createWithProfileOwner(packageName,ownerName,userHandle);
      mDeviceOwner.writeOwnerFile();
      return true;
    }
 else {
      mDeviceOwner.setProfileOwner(packageName,ownerName,userHandle);
      mDeviceOwner.writeOwnerFile();
      return true;
    }
  }
}
