{
  if (UserHandle.getAppId(Binder.getCallingUid()) != Process.SYSTEM_UID) {
    return;
  }
  final UserHandle caller=Binder.getCallingUserHandle();
  final ComponentName profileOwner=getProfileOwner(caller.getIdentifier());
  if (profileOwner == null) {
    sendPrivateKeyAliasResponse(null,response);
    return;
  }
  Intent intent=new Intent(DeviceAdminReceiver.ACTION_CHOOSE_PRIVATE_KEY_ALIAS);
  intent.setComponent(profileOwner);
  intent.putExtra(DeviceAdminReceiver.EXTRA_CHOOSE_PRIVATE_KEY_SENDER_UID,uid);
  intent.putExtra(DeviceAdminReceiver.EXTRA_CHOOSE_PRIVATE_KEY_HOST,host);
  intent.putExtra(DeviceAdminReceiver.EXTRA_CHOOSE_PRIVATE_KEY_PORT,port);
  intent.putExtra(DeviceAdminReceiver.EXTRA_CHOOSE_PRIVATE_KEY_URL,url);
  intent.putExtra(DeviceAdminReceiver.EXTRA_CHOOSE_PRIVATE_KEY_ALIAS,alias);
  intent.putExtra(DeviceAdminReceiver.EXTRA_CHOOSE_PRIVATE_KEY_RESPONSE,response);
  final long id=Binder.clearCallingIdentity();
  try {
    mContext.sendOrderedBroadcastAsUser(intent,caller,null,new BroadcastReceiver(){
      @Override public void onReceive(      Context context,      Intent intent){
        final String chosenAlias=getResultData();
        sendPrivateKeyAliasResponse(chosenAlias,response);
      }
    }
,null,Activity.RESULT_OK,null,null);
  }
  finally {
    Binder.restoreCallingIdentity(id);
  }
}
