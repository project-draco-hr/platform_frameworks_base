{
  mContext.enforceCallingOrSelfPermission(android.Manifest.permission.MANAGE_DEVICE_ADMINS,null);
  enforceCrossUserPermission(userHandle);
  DevicePolicyData policy=getUserData(userHandle);
  DeviceAdminInfo info=findAdmin(adminReceiver,userHandle);
  if (info == null) {
    throw new IllegalArgumentException("Bad admin: " + adminReceiver);
  }
synchronized (this) {
    long ident=Binder.clearCallingIdentity();
    try {
      if (!refreshing && getActiveAdminUncheckedLocked(adminReceiver,userHandle) != null) {
        throw new IllegalArgumentException("Admin is already added");
      }
      ActiveAdmin newAdmin=new ActiveAdmin(info);
      policy.mAdminMap.put(adminReceiver,newAdmin);
      int replaceIndex=-1;
      if (refreshing) {
        final int N=policy.mAdminList.size();
        for (int i=0; i < N; i++) {
          ActiveAdmin oldAdmin=policy.mAdminList.get(i);
          if (oldAdmin.info.getComponent().equals(adminReceiver)) {
            replaceIndex=i;
            break;
          }
        }
      }
      if (replaceIndex == -1) {
        policy.mAdminList.add(newAdmin);
        enableIfNecessary(info.getPackageName(),userHandle);
      }
 else {
        policy.mAdminList.set(replaceIndex,newAdmin);
      }
      saveSettingsLocked(userHandle);
      sendAdminCommandLocked(newAdmin,DeviceAdminReceiver.ACTION_DEVICE_ADMIN_ENABLED,onEnableData,null);
    }
  finally {
      Binder.restoreCallingIdentity(ident);
    }
  }
}
