{
  pw.print(prefix);
  pw.print("uid=");
  pw.println(getUid());
  pw.print(prefix);
  pw.println("policies:");
  ArrayList<DeviceAdminInfo.PolicyInfo> pols=info.getUsedPolicies();
  if (pols != null) {
    for (int i=0; i < pols.size(); i++) {
      pw.print(prefix);
      pw.print("  ");
      pw.println(pols.get(i).tag);
    }
  }
  pw.print(prefix);
  pw.print("passwordQuality=0x");
  pw.println(Integer.toHexString(passwordQuality));
  pw.print(prefix);
  pw.print("minimumPasswordLength=");
  pw.println(minimumPasswordLength);
  pw.print(prefix);
  pw.print("passwordHistoryLength=");
  pw.println(passwordHistoryLength);
  pw.print(prefix);
  pw.print("minimumPasswordUpperCase=");
  pw.println(minimumPasswordUpperCase);
  pw.print(prefix);
  pw.print("minimumPasswordLowerCase=");
  pw.println(minimumPasswordLowerCase);
  pw.print(prefix);
  pw.print("minimumPasswordLetters=");
  pw.println(minimumPasswordLetters);
  pw.print(prefix);
  pw.print("minimumPasswordNumeric=");
  pw.println(minimumPasswordNumeric);
  pw.print(prefix);
  pw.print("minimumPasswordSymbols=");
  pw.println(minimumPasswordSymbols);
  pw.print(prefix);
  pw.print("minimumPasswordNonLetter=");
  pw.println(minimumPasswordNonLetter);
  pw.print(prefix);
  pw.print("maximumTimeToUnlock=");
  pw.println(maximumTimeToUnlock);
  pw.print(prefix);
  pw.print("maximumFailedPasswordsForWipe=");
  pw.println(maximumFailedPasswordsForWipe);
  pw.print(prefix);
  pw.print("specifiesGlobalProxy=");
  pw.println(specifiesGlobalProxy);
  pw.print(prefix);
  pw.print("passwordExpirationTimeout=");
  pw.println(passwordExpirationTimeout);
  pw.print(prefix);
  pw.print("passwordExpirationDate=");
  pw.println(passwordExpirationDate);
  if (globalProxySpec != null) {
    pw.print(prefix);
    pw.print("globalProxySpec=");
    pw.println(globalProxySpec);
  }
  if (globalProxyExclusionList != null) {
    pw.print(prefix);
    pw.print("globalProxyEclusionList=");
    pw.println(globalProxyExclusionList);
  }
  pw.print(prefix);
  pw.print("encryptionRequested=");
  pw.println(encryptionRequested);
  pw.print(prefix);
  pw.print("disableCamera=");
  pw.println(disableCamera);
  pw.print(prefix);
  pw.print("disableCallerId=");
  pw.println(disableCallerId);
  pw.print(prefix);
  pw.print("disableScreenCapture=");
  pw.println(disableScreenCapture);
  pw.print(prefix);
  pw.print("requireAutoTime=");
  pw.println(requireAutoTime);
  pw.print(prefix);
  pw.print("disabledKeyguardFeatures=");
  pw.println(disabledKeyguardFeatures);
  pw.print(prefix);
  pw.print("crossProfileWidgetProviders=");
  pw.println(crossProfileWidgetProviders);
  if (!(permittedAccessiblityServices == null)) {
    pw.print(prefix);
    pw.print("permittedAccessibilityServices=");
    pw.println(permittedAccessiblityServices.toString());
  }
  if (!(permittedInputMethods == null)) {
    pw.print(prefix);
    pw.print("permittedInputMethods=");
    pw.println(permittedInputMethods.toString());
  }
}
