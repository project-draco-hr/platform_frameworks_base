{
  if (!mUserManager.isUserRunning(userHandle)) {
    return;
  }
  boolean hasCert=false;
  try {
    KeyChainConnection kcs=KeyChain.bindAsUser(mContext,userHandle);
    try {
      if (!kcs.getService().getUserCaAliases().getList().isEmpty()) {
        hasCert=true;
      }
    }
 catch (    RemoteException e) {
      Log.e(LOG_TAG,"Could not connect to KeyChain service",e);
    }
 finally {
      kcs.close();
    }
  }
 catch (  InterruptedException e) {
    Thread.currentThread().interrupt();
  }
catch (  RuntimeException|AssertionError e) {
    Log.e(LOG_TAG,"Could not connect to KeyChain service",e);
  }
  if (!hasCert) {
    mInjector.getNotificationManager().cancelAsUser(null,MONITORING_CERT_NOTIFICATION_ID,userHandle);
    return;
  }
  int smallIconId;
  String contentText;
  final String ownerName=getDeviceOwnerName();
  if (isManagedProfile(userHandle.getIdentifier())) {
    contentText=mContext.getString(R.string.ssl_ca_cert_noti_by_administrator);
    smallIconId=R.drawable.stat_sys_certificate_info;
  }
 else   if (ownerName != null) {
    contentText=mContext.getString(R.string.ssl_ca_cert_noti_managed,ownerName);
    smallIconId=R.drawable.stat_sys_certificate_info;
  }
 else {
    contentText=mContext.getString(R.string.ssl_ca_cert_noti_by_unknown);
    smallIconId=android.R.drawable.stat_sys_warning;
  }
  Intent dialogIntent=new Intent(Settings.ACTION_MONITORING_CERT_INFO);
  dialogIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
  dialogIntent.setPackage("com.android.settings");
  PendingIntent notifyIntent=PendingIntent.getActivityAsUser(mContext,0,dialogIntent,PendingIntent.FLAG_UPDATE_CURRENT,null,userHandle);
  final Context userContext;
  try {
    userContext=mContext.createPackageContextAsUser("android",0,userHandle);
  }
 catch (  PackageManager.NameNotFoundException e) {
    Log.e(LOG_TAG,"Create context as " + userHandle + " failed",e);
    return;
  }
  final Notification noti=new Notification.Builder(userContext).setSmallIcon(smallIconId).setContentTitle(mContext.getString(R.string.ssl_ca_cert_warning)).setContentText(contentText).setContentIntent(notifyIntent).setPriority(Notification.PRIORITY_HIGH).setShowWhen(false).setColor(mContext.getColor(com.android.internal.R.color.system_notification_accent_color)).build();
  mInjector.getNotificationManager().notifyAsUser(null,MONITORING_CERT_NOTIFICATION_ID,noti,userHandle);
}
