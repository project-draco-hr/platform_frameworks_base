{
synchronized (DevicePolicyManagerService.this) {
    final ActiveAdmin deviceOwner=getDeviceOwnerAdminLocked();
    final ActiveAdmin profileOwner=getProfileOwnerAdminLocked(userId);
    final Bundle deviceOwnerRestrictions=deviceOwner == null ? null : deviceOwner.userRestrictions;
    final Bundle profileOwnerRestrictions=profileOwner == null ? null : profileOwner.userRestrictions;
    final boolean cameraDisabled=getCameraDisabled(null,userId);
    if (deviceOwnerRestrictions == null && profileOwnerRestrictions == null && !cameraDisabled) {
      return inBundle;
    }
    final Bundle composed=new Bundle(inBundle);
    UserRestrictionsUtils.merge(composed,deviceOwnerRestrictions);
    UserRestrictionsUtils.merge(composed,profileOwnerRestrictions);
    if (cameraDisabled) {
      composed.putBoolean(UserManager.DISALLOW_CAMERA,true);
    }
    return composed;
  }
}
