{
  removeAllViews();
  final ViewGroup.LayoutParams wrap=new ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,ViewGroup.LayoutParams.WRAP_CONTENT);
  if (FIXED_STARS) {
    for (int i=0; i < 20; i++) {
      ImageView fixedStar=new ImageView(getContext(),null);
      if (DEBUG)       fixedStar.setBackgroundColor(0x8000FF80);
      fixedStar.setImageResource(R.drawable.star_anim);
      addView(fixedStar,wrap);
      final float scale=randfrange(0.1f,1f);
      fixedStar.setScaleX(scale);
      fixedStar.setScaleY(scale);
      fixedStar.setX(randfrange(0,getWidth()));
      fixedStar.setY(randfrange(0,getHeight()));
      final AnimationDrawable anim=(AnimationDrawable)fixedStar.getDrawable();
      postDelayed(new Runnable(){
        public void run(){
          anim.start();
        }
      }
,(int)randfrange(0,1000));
    }
  }
  for (int i=0; i < NUM_CATS; i++) {
    FlyingCat nv=new FlyingCat(getContext(),null);
    addView(nv,wrap);
    nv.z=((float)i / NUM_CATS);
    nv.z*=nv.z;
    nv.reset();
    nv.setX(randfrange(0,Board.this.getWidth()));
    final AnimationDrawable anim=(AnimationDrawable)nv.getDrawable();
    postDelayed(new Runnable(){
      public void run(){
        anim.start();
      }
    }
,(int)randfrange(0,1000));
  }
  if (mAnim != null) {
    mAnim.cancel();
  }
  mAnim=new TimeAnimator();
  mAnim.setTimeListener(new TimeAnimator.TimeListener(){
    public void onTimeUpdate(    TimeAnimator animation,    long totalTime,    long deltaTime){
      for (int i=0; i < getChildCount(); i++) {
        View v=getChildAt(i);
        if (!(v instanceof FlyingCat))         continue;
        FlyingCat nv=(FlyingCat)v;
        nv.update(deltaTime / 1000f);
        final float catWidth=nv.getWidth() * nv.getScaleX();
        final float catHeight=nv.getHeight() * nv.getScaleY();
        if (nv.getX() + catWidth < -2 || nv.getX() > getWidth() + 2 || nv.getY() + catHeight < -2 || nv.getY() > getHeight() + 2) {
          nv.reset();
        }
      }
    }
  }
);
}
