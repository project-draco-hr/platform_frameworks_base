{
  final NetworkStats stats=readNetworkStatsDetailInternal(limitUid,limitIfaces,limitTag,lastStats);
synchronized (sStackedIfaces) {
    final int size=sStackedIfaces.size();
    for (int i=0; i < size; i++) {
      final String stackedIface=sStackedIfaces.keyAt(i);
      final String baseIface=sStackedIfaces.valueAt(i);
      NetworkStats.Entry adjust=new NetworkStats.Entry(baseIface,0,0,0,0L,0L,0L,0L,0L);
      NetworkStats.Entry entry=null;
      for (int j=0; j < stats.size(); j++) {
        entry=stats.getValues(j,entry);
        if (Objects.equals(entry.iface,stackedIface)) {
          adjust.txBytes-=entry.txBytes;
          adjust.txPackets-=entry.txPackets;
        }
      }
      stats.combineValues(adjust);
    }
  }
  NetworkStats.Entry entry=null;
  for (int i=0; i < stats.size(); i++) {
    entry=stats.getValues(i,entry);
    if (entry.iface != null && entry.iface.startsWith("clat")) {
      entry.rxBytes=entry.rxPackets * 20;
      entry.rxPackets=0;
      entry.txBytes=0;
      entry.txPackets=0;
      stats.combineValues(entry);
    }
  }
  return stats;
}
