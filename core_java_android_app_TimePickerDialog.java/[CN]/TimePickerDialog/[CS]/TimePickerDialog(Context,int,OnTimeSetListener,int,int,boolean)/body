{
  super(context,resolveDialogTheme(context,theme));
  mTimeSetCallback=callBack;
  mInitialHourOfDay=hourOfDay;
  mInitialMinute=minute;
  mIs24HourView=is24HourView;
  Context themeContext=getContext();
  LayoutInflater inflater=(LayoutInflater)themeContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
  View view=inflater.inflate(R.layout.time_picker_dialog,null);
  setView(view);
  mTimePicker=(TimePicker)view.findViewById(R.id.timePicker);
  mTimePicker.setLegacyMode(false);
  mTimePicker.setShowDoneButton(true);
  mTimePicker.setDismissCallback(new TimePicker.TimePickerDismissCallback(){
    @Override public void dismiss(    TimePicker view,    boolean isCancel,    int hourOfDay,    int minute){
      if (!isCancel) {
        mTimeSetCallback.onTimeSet(view,hourOfDay,minute);
      }
      TimePickerDialog.this.dismiss();
    }
  }
);
  mTimePicker.setIs24HourView(mIs24HourView);
  mTimePicker.setCurrentHour(mInitialHourOfDay);
  mTimePicker.setCurrentMinute(mInitialMinute);
  mTimePicker.setOnTimeChangedListener(this);
}
