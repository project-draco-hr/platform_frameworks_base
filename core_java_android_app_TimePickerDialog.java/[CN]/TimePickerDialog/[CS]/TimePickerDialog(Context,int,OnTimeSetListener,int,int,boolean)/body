{
  super(context,resolveDialogTheme(context,themeResId));
  mTimeSetListener=listener;
  mInitialHourOfDay=hourOfDay;
  mInitialMinute=minute;
  mIs24HourView=is24HourView;
  final Context themeContext=getContext();
  final TypedValue outValue=new TypedValue();
  context.getTheme().resolveAttribute(R.attr.timePickerDialogTheme,outValue,true);
  final int layoutResId=outValue.resourceId;
  final LayoutInflater inflater=LayoutInflater.from(themeContext);
  final View view=inflater.inflate(R.layout.time_picker_dialog,null);
  setView(view);
  setButton(BUTTON_POSITIVE,themeContext.getString(R.string.ok),this);
  setButton(BUTTON_NEGATIVE,themeContext.getString(R.string.cancel),this);
  setButtonPanelLayoutHint(LAYOUT_HINT_SIDE);
  mTimePicker=(TimePicker)view.findViewById(R.id.timePicker);
  mTimePicker.setIs24HourView(mIs24HourView);
  mTimePicker.setCurrentHour(mInitialHourOfDay);
  mTimePicker.setCurrentMinute(mInitialMinute);
  mTimePicker.setOnTimeChangedListener(this);
  mTimePicker.setValidationCallback(mValidationCallback);
}
