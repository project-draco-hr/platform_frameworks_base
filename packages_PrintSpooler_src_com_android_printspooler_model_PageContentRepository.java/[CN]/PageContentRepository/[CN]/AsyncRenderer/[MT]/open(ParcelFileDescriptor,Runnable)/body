{
  mPageContentCache.invalidate();
  new AsyncTask<Void,Void,Integer>(){
    @Override protected void onPreExecute(){
      Intent intent=new Intent(PdfManipulationService.ACTION_GET_RENDERER);
      intent.setClass(mContext,PdfManipulationService.class);
      mContext.bindService(intent,AsyncRenderer.this,Context.BIND_AUTO_CREATE);
    }
    @Override protected Integer doInBackground(    Void... params){
synchronized (mLock) {
        while (mRenderer == null) {
          try {
            mLock.wait();
          }
 catch (          InterruptedException ie) {
          }
        }
        try {
          return mRenderer.openDocument(source);
        }
 catch (        RemoteException re) {
          Log.e(LOG_TAG,"Cannot open PDF document");
          return MALFORMED_PDF_FILE_ERROR;
        }
 finally {
          IoUtils.closeQuietly(source);
        }
      }
    }
    @Override public void onPostExecute(    Integer pageCount){
      if (pageCount == MALFORMED_PDF_FILE_ERROR) {
        mOnMalformedPdfFileListener.onMalformedPdfFile();
        mPageCount=PrintDocumentInfo.PAGE_COUNT_UNKNOWN;
      }
 else {
        mPageCount=pageCount;
      }
      if (callback != null) {
        callback.run();
      }
    }
  }
.executeOnExecutor(AsyncTask.SERIAL_EXECUTOR,(Void[])null);
}
