{
  out.writeInt(mWakelockStats.size());
  for (  Map.Entry<String,Uid.Wakelock> wakelockEntry : mWakelockStats.entrySet()) {
    out.writeString(wakelockEntry.getKey());
    Uid.Wakelock wakelock=wakelockEntry.getValue();
    wakelock.writeToParcelLocked(out,batteryRealtime);
  }
  out.writeInt(mSensorStats.size());
  for (  Map.Entry<Integer,Uid.Sensor> sensorEntry : mSensorStats.entrySet()) {
    out.writeInt(sensorEntry.getKey());
    Uid.Sensor sensor=sensorEntry.getValue();
    sensor.writeToParcelLocked(out,batteryRealtime);
  }
  out.writeInt(mProcessStats.size());
  for (  Map.Entry<String,Uid.Proc> procEntry : mProcessStats.entrySet()) {
    out.writeString(procEntry.getKey());
    Uid.Proc proc=procEntry.getValue();
    proc.writeToParcelLocked(out);
  }
  out.writeInt(mPackageStats.size());
  for (  Map.Entry<String,Uid.Pkg> pkgEntry : mPackageStats.entrySet()) {
    out.writeString(pkgEntry.getKey());
    Uid.Pkg pkg=pkgEntry.getValue();
    pkg.writeToParcelLocked(out);
  }
  out.writeLong(mLoadedTcpBytesReceived);
  out.writeLong(mLoadedTcpBytesSent);
  out.writeLong(computeCurrentTcpBytesReceived());
  out.writeLong(computeCurrentTcpBytesSent());
  out.writeLong(mTcpBytesReceivedAtLastUnplug);
  out.writeLong(mTcpBytesSentAtLastUnplug);
  if (mWifiRunningTimer != null) {
    out.writeInt(1);
    mWifiRunningTimer.writeToParcel(out,batteryRealtime);
  }
 else {
    out.writeInt(0);
  }
  if (mFullWifiLockTimer != null) {
    out.writeInt(1);
    mFullWifiLockTimer.writeToParcel(out,batteryRealtime);
  }
 else {
    out.writeInt(0);
  }
  if (mWifiScanTimer != null) {
    out.writeInt(1);
    mWifiScanTimer.writeToParcel(out,batteryRealtime);
  }
 else {
    out.writeInt(0);
  }
  if (mWifiMulticastTimer != null) {
    out.writeInt(1);
    mWifiMulticastTimer.writeToParcel(out,batteryRealtime);
  }
 else {
    out.writeInt(0);
  }
  if (mAudioTurnedOnTimer != null) {
    out.writeInt(1);
    mAudioTurnedOnTimer.writeToParcel(out,batteryRealtime);
  }
 else {
    out.writeInt(0);
  }
  if (mVideoTurnedOnTimer != null) {
    out.writeInt(1);
    mVideoTurnedOnTimer.writeToParcel(out,batteryRealtime);
  }
 else {
    out.writeInt(0);
  }
  if (mUserActivityCounters != null) {
    out.writeInt(1);
    for (int i=0; i < NUM_USER_ACTIVITY_TYPES; i++) {
      mUserActivityCounters[i].writeToParcel(out);
    }
  }
 else {
    out.writeInt(0);
  }
}
