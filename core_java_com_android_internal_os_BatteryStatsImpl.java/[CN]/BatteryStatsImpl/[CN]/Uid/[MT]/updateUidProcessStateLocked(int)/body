{
  int uidRunningState;
  if (procState == ActivityManager.PROCESS_STATE_NONEXISTENT) {
    uidRunningState=ActivityManager.PROCESS_STATE_NONEXISTENT;
  }
 else   if (procState == ActivityManager.PROCESS_STATE_TOP) {
    uidRunningState=PROCESS_STATE_TOP;
  }
 else   if (procState <= ActivityManager.PROCESS_STATE_FOREGROUND_SERVICE) {
    uidRunningState=PROCESS_STATE_FOREGROUND_SERVICE;
  }
 else   if (procState <= ActivityManager.PROCESS_STATE_TOP_SLEEPING) {
    uidRunningState=PROCESS_STATE_TOP_SLEEPING;
  }
 else   if (procState <= ActivityManager.PROCESS_STATE_IMPORTANT_FOREGROUND) {
    uidRunningState=PROCESS_STATE_FOREGROUND;
  }
 else   if (procState <= ActivityManager.PROCESS_STATE_RECEIVER) {
    uidRunningState=PROCESS_STATE_BACKGROUND;
  }
 else {
    uidRunningState=PROCESS_STATE_CACHED;
  }
  if (mProcessState == uidRunningState)   return;
  final long elapsedRealtime=mBsi.mClocks.elapsedRealtime();
  if (mProcessState != ActivityManager.PROCESS_STATE_NONEXISTENT) {
    mProcessStateTimer[mProcessState].stopRunningLocked(elapsedRealtime);
  }
  mProcessState=uidRunningState;
  if (uidRunningState != ActivityManager.PROCESS_STATE_NONEXISTENT) {
    if (mProcessStateTimer[uidRunningState] == null) {
      makeProcessState(uidRunningState,null);
    }
    mProcessStateTimer[uidRunningState].startRunningLocked(elapsedRealtime);
  }
}
