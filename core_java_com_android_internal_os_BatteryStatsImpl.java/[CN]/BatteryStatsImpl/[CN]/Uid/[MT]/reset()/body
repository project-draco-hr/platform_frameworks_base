{
  boolean active=false;
  if (mWifiRunningTimer != null) {
    active|=!mWifiRunningTimer.reset(false);
    active|=mWifiRunning;
  }
  if (mFullWifiLockTimer != null) {
    active|=!mFullWifiLockTimer.reset(false);
    active|=mFullWifiLockOut;
  }
  if (mWifiScanTimer != null) {
    active|=!mWifiScanTimer.reset(false);
    active|=mWifiScanStarted;
  }
  if (mWifiBatchedScanTimer != null) {
    for (int i=0; i < NUM_WIFI_BATCHED_SCAN_BINS; i++) {
      if (mWifiBatchedScanTimer[i] != null) {
        active|=!mWifiBatchedScanTimer[i].reset(false);
      }
    }
    active|=(mWifiBatchedScanBinStarted != NO_BATCHED_SCAN_STARTED);
  }
  if (mWifiMulticastTimer != null) {
    active|=!mWifiMulticastTimer.reset(false);
    active|=mWifiMulticastEnabled;
  }
  if (mAudioTurnedOnTimer != null) {
    active|=!mAudioTurnedOnTimer.reset(false);
  }
  if (mVideoTurnedOnTimer != null) {
    active|=!mVideoTurnedOnTimer.reset(false);
  }
  if (mFlashlightTurnedOnTimer != null) {
    active|=!mFlashlightTurnedOnTimer.reset(false);
  }
  if (mCameraTurnedOnTimer != null) {
    active|=!mCameraTurnedOnTimer.reset(false);
  }
  if (mForegroundActivityTimer != null) {
    active|=!mForegroundActivityTimer.reset(false);
  }
  if (mBluetoothScanTimer != null) {
    active|=!mBluetoothScanTimer.reset(false);
  }
  if (mProcessStateTimer != null) {
    for (int i=0; i < NUM_PROCESS_STATE; i++) {
      if (mProcessStateTimer[i] != null) {
        active|=!mProcessStateTimer[i].reset(false);
      }
    }
    active|=(mProcessState != ActivityManager.PROCESS_STATE_NONEXISTENT);
  }
  if (mVibratorOnTimer != null) {
    if (mVibratorOnTimer.reset(false)) {
      mVibratorOnTimer.detach();
      mVibratorOnTimer=null;
    }
 else {
      active=true;
    }
  }
  if (mUserActivityCounters != null) {
    for (int i=0; i < NUM_USER_ACTIVITY_TYPES; i++) {
      mUserActivityCounters[i].reset(false);
    }
  }
  if (mNetworkByteActivityCounters != null) {
    for (int i=0; i < NUM_NETWORK_ACTIVITY_TYPES; i++) {
      mNetworkByteActivityCounters[i].reset(false);
      mNetworkPacketActivityCounters[i].reset(false);
    }
    mMobileRadioActiveTime.reset(false);
    mMobileRadioActiveCount.reset(false);
  }
  if (mWifiControllerActivity != null) {
    mWifiControllerActivity.reset(false);
  }
  if (mBluetoothControllerActivity != null) {
    mBluetoothControllerActivity.reset(false);
  }
  if (mModemControllerActivity != null) {
    mModemControllerActivity.reset(false);
  }
  mUserCpuTime.reset(false);
  mSystemCpuTime.reset(false);
  mCpuPower.reset(false);
  if (mCpuClusterSpeed != null) {
    for (    LongSamplingCounter[] speeds : mCpuClusterSpeed) {
      if (speeds != null) {
        for (        LongSamplingCounter speed : speeds) {
          if (speed != null) {
            speed.reset(false);
          }
        }
      }
    }
  }
  final ArrayMap<String,Wakelock> wakeStats=mWakelockStats.getMap();
  for (int iw=wakeStats.size() - 1; iw >= 0; iw--) {
    Wakelock wl=wakeStats.valueAt(iw);
    if (wl.reset()) {
      wakeStats.removeAt(iw);
    }
 else {
      active=true;
    }
  }
  mWakelockStats.cleanup();
  final ArrayMap<String,StopwatchTimer> syncStats=mSyncStats.getMap();
  for (int is=syncStats.size() - 1; is >= 0; is--) {
    StopwatchTimer timer=syncStats.valueAt(is);
    if (timer.reset(false)) {
      syncStats.removeAt(is);
      timer.detach();
    }
 else {
      active=true;
    }
  }
  mSyncStats.cleanup();
  final ArrayMap<String,StopwatchTimer> jobStats=mJobStats.getMap();
  for (int ij=jobStats.size() - 1; ij >= 0; ij--) {
    StopwatchTimer timer=jobStats.valueAt(ij);
    if (timer.reset(false)) {
      jobStats.removeAt(ij);
      timer.detach();
    }
 else {
      active=true;
    }
  }
  mJobStats.cleanup();
  for (int ise=mSensorStats.size() - 1; ise >= 0; ise--) {
    Sensor s=mSensorStats.valueAt(ise);
    if (s.reset()) {
      mSensorStats.removeAt(ise);
    }
 else {
      active=true;
    }
  }
  for (int ip=mProcessStats.size() - 1; ip >= 0; ip--) {
    Proc proc=mProcessStats.valueAt(ip);
    proc.detach();
  }
  mProcessStats.clear();
  if (mPids.size() > 0) {
    for (int i=mPids.size() - 1; i >= 0; i--) {
      Pid pid=mPids.valueAt(i);
      if (pid.mWakeNesting > 0) {
        active=true;
      }
 else {
        mPids.removeAt(i);
      }
    }
  }
  if (mPackageStats.size() > 0) {
    Iterator<Map.Entry<String,Pkg>> it=mPackageStats.entrySet().iterator();
    while (it.hasNext()) {
      Map.Entry<String,Pkg> pkgEntry=it.next();
      Pkg p=pkgEntry.getValue();
      p.detach();
      if (p.mServiceStats.size() > 0) {
        Iterator<Map.Entry<String,Pkg.Serv>> it2=p.mServiceStats.entrySet().iterator();
        while (it2.hasNext()) {
          Map.Entry<String,Pkg.Serv> servEntry=it2.next();
          servEntry.getValue().detach();
        }
      }
    }
    mPackageStats.clear();
  }
  mLastStepUserTime=mLastStepSystemTime=0;
  mCurStepUserTime=mCurStepSystemTime=0;
  if (!active) {
    if (mWifiRunningTimer != null) {
      mWifiRunningTimer.detach();
    }
    if (mFullWifiLockTimer != null) {
      mFullWifiLockTimer.detach();
    }
    if (mWifiScanTimer != null) {
      mWifiScanTimer.detach();
    }
    for (int i=0; i < NUM_WIFI_BATCHED_SCAN_BINS; i++) {
      if (mWifiBatchedScanTimer[i] != null) {
        mWifiBatchedScanTimer[i].detach();
      }
    }
    if (mWifiMulticastTimer != null) {
      mWifiMulticastTimer.detach();
    }
    if (mAudioTurnedOnTimer != null) {
      mAudioTurnedOnTimer.detach();
      mAudioTurnedOnTimer=null;
    }
    if (mVideoTurnedOnTimer != null) {
      mVideoTurnedOnTimer.detach();
      mVideoTurnedOnTimer=null;
    }
    if (mFlashlightTurnedOnTimer != null) {
      mFlashlightTurnedOnTimer.detach();
      mFlashlightTurnedOnTimer=null;
    }
    if (mCameraTurnedOnTimer != null) {
      mCameraTurnedOnTimer.detach();
      mCameraTurnedOnTimer=null;
    }
    if (mForegroundActivityTimer != null) {
      mForegroundActivityTimer.detach();
      mForegroundActivityTimer=null;
    }
    if (mBluetoothScanTimer != null) {
      mBluetoothScanTimer.detach();
      mBluetoothScanTimer=null;
    }
    if (mUserActivityCounters != null) {
      for (int i=0; i < NUM_USER_ACTIVITY_TYPES; i++) {
        mUserActivityCounters[i].detach();
      }
    }
    if (mNetworkByteActivityCounters != null) {
      for (int i=0; i < NUM_NETWORK_ACTIVITY_TYPES; i++) {
        mNetworkByteActivityCounters[i].detach();
        mNetworkPacketActivityCounters[i].detach();
      }
    }
    if (mWifiControllerActivity != null) {
      mWifiControllerActivity.detach();
    }
    if (mBluetoothControllerActivity != null) {
      mBluetoothControllerActivity.detach();
    }
    if (mModemControllerActivity != null) {
      mModemControllerActivity.detach();
    }
    mPids.clear();
    mUserCpuTime.detach();
    mSystemCpuTime.detach();
    mCpuPower.detach();
    if (mCpuClusterSpeed != null) {
      for (      LongSamplingCounter[] cpuSpeeds : mCpuClusterSpeed) {
        if (cpuSpeeds != null) {
          for (          LongSamplingCounter c : cpuSpeeds) {
            if (c != null) {
              c.detach();
            }
          }
        }
      }
    }
  }
  return !active;
}
