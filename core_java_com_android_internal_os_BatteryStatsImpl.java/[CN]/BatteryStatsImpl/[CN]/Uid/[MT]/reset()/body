{
  boolean active=false;
  if (mWifiRunningTimer != null) {
    active|=!mWifiRunningTimer.reset(false);
    active|=mWifiRunning;
  }
  if (mFullWifiLockTimer != null) {
    active|=!mFullWifiLockTimer.reset(false);
    active|=mFullWifiLockOut;
  }
  if (mWifiScanTimer != null) {
    active|=!mWifiScanTimer.reset(false);
    active|=mWifiScanStarted;
  }
  if (mWifiBatchedScanTimer != null) {
    for (int i=0; i < NUM_WIFI_BATCHED_SCAN_BINS; i++) {
      if (mWifiBatchedScanTimer[i] != null) {
        active|=!mWifiBatchedScanTimer[i].reset(false);
      }
    }
    active|=(mWifiBatchedScanBinStarted != NO_BATCHED_SCAN_STARTED);
  }
  if (mWifiMulticastTimer != null) {
    active|=!mWifiMulticastTimer.reset(false);
    active|=mWifiMulticastEnabled;
  }
  if (mAudioTurnedOnTimer != null) {
    active|=!mAudioTurnedOnTimer.reset(false);
    active|=mAudioTurnedOn;
  }
  if (mVideoTurnedOnTimer != null) {
    active|=!mVideoTurnedOnTimer.reset(false);
    active|=mVideoTurnedOn;
  }
  if (mForegroundActivityTimer != null) {
    active|=!mForegroundActivityTimer.reset(false);
  }
  if (mProcessStateTimer != null) {
    for (int i=0; i < NUM_PROCESS_STATE; i++) {
      if (mProcessStateTimer[i] != null) {
        active|=!mProcessStateTimer[i].reset(false);
      }
    }
    active|=(mProcessState != PROCESS_STATE_NONE);
  }
  if (mVibratorOnTimer != null) {
    if (mVibratorOnTimer.reset(false)) {
      mVibratorOnTimer.detach();
      mVibratorOnTimer=null;
    }
 else {
      active=true;
    }
  }
  if (mUserActivityCounters != null) {
    for (int i=0; i < NUM_USER_ACTIVITY_TYPES; i++) {
      mUserActivityCounters[i].reset(false);
    }
  }
  if (mNetworkByteActivityCounters != null) {
    for (int i=0; i < NUM_NETWORK_ACTIVITY_TYPES; i++) {
      mNetworkByteActivityCounters[i].reset(false);
      mNetworkPacketActivityCounters[i].reset(false);
    }
    mMobileRadioActiveTime.reset(false);
    mMobileRadioActiveCount.reset(false);
  }
  for (int iw=mWakelockStats.size() - 1; iw >= 0; iw--) {
    Wakelock wl=mWakelockStats.valueAt(iw);
    if (wl.reset()) {
      mWakelockStats.removeAt(iw);
    }
 else {
      active=true;
    }
  }
  for (int ise=mSensorStats.size() - 1; ise >= 0; ise--) {
    Sensor s=mSensorStats.valueAt(ise);
    if (s.reset()) {
      mSensorStats.removeAt(ise);
    }
 else {
      active=true;
    }
  }
  for (int ip=mProcessStats.size() - 1; ip >= 0; ip--) {
    Proc proc=mProcessStats.valueAt(ip);
    if (proc.mProcessState == PROCESS_STATE_NONE) {
      proc.detach();
      mProcessStats.removeAt(ip);
    }
 else {
      active=true;
    }
  }
  if (mPids.size() > 0) {
    for (int i=mPids.size() - 1; i >= 0; i--) {
      Pid pid=mPids.valueAt(i);
      if (pid.mWakeNesting > 0) {
        active=true;
      }
 else {
        mPids.removeAt(i);
      }
    }
  }
  if (mPackageStats.size() > 0) {
    Iterator<Map.Entry<String,Pkg>> it=mPackageStats.entrySet().iterator();
    while (it.hasNext()) {
      Map.Entry<String,Pkg> pkgEntry=it.next();
      Pkg p=pkgEntry.getValue();
      p.detach();
      if (p.mServiceStats.size() > 0) {
        Iterator<Map.Entry<String,Pkg.Serv>> it2=p.mServiceStats.entrySet().iterator();
        while (it2.hasNext()) {
          Map.Entry<String,Pkg.Serv> servEntry=it2.next();
          servEntry.getValue().detach();
        }
      }
    }
    mPackageStats.clear();
  }
  if (!active) {
    if (mWifiRunningTimer != null) {
      mWifiRunningTimer.detach();
    }
    if (mFullWifiLockTimer != null) {
      mFullWifiLockTimer.detach();
    }
    if (mWifiScanTimer != null) {
      mWifiScanTimer.detach();
    }
    for (int i=0; i < NUM_WIFI_BATCHED_SCAN_BINS; i++) {
      if (mWifiBatchedScanTimer[i] != null) {
        mWifiBatchedScanTimer[i].detach();
      }
    }
    if (mWifiMulticastTimer != null) {
      mWifiMulticastTimer.detach();
    }
    if (mAudioTurnedOnTimer != null) {
      mAudioTurnedOnTimer.detach();
      mAudioTurnedOnTimer=null;
    }
    if (mVideoTurnedOnTimer != null) {
      mVideoTurnedOnTimer.detach();
      mVideoTurnedOnTimer=null;
    }
    if (mForegroundActivityTimer != null) {
      mForegroundActivityTimer.detach();
      mForegroundActivityTimer=null;
    }
    if (mUserActivityCounters != null) {
      for (int i=0; i < NUM_USER_ACTIVITY_TYPES; i++) {
        mUserActivityCounters[i].detach();
      }
    }
    if (mNetworkByteActivityCounters != null) {
      for (int i=0; i < NUM_NETWORK_ACTIVITY_TYPES; i++) {
        mNetworkByteActivityCounters[i].detach();
        mNetworkPacketActivityCounters[i].detach();
      }
    }
    mPids.clear();
  }
  return !active;
}
