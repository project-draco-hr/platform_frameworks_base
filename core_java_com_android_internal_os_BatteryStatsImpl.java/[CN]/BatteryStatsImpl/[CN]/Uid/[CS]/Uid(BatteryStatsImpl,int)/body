{
  mBsi=bsi;
  mUid=uid;
  mUserCpuTime=new LongSamplingCounter(mBsi.mOnBatteryTimeBase);
  mSystemCpuTime=new LongSamplingCounter(mBsi.mOnBatteryTimeBase);
  mCpuPower=new LongSamplingCounter(mBsi.mOnBatteryTimeBase);
  mWakelockStats=mBsi.new OverflowArrayMap<Wakelock>(){
    @Override public Wakelock instantiateObject(){
      return new Wakelock(mBsi,Uid.this);
    }
  }
;
  mSyncStats=mBsi.new OverflowArrayMap<StopwatchTimer>(){
    @Override public StopwatchTimer instantiateObject(){
      return new StopwatchTimer(mBsi.mClocks,Uid.this,SYNC,null,mBsi.mOnBatteryTimeBase);
    }
  }
;
  mJobStats=mBsi.new OverflowArrayMap<StopwatchTimer>(){
    @Override public StopwatchTimer instantiateObject(){
      return new StopwatchTimer(mBsi.mClocks,Uid.this,JOB,null,mBsi.mOnBatteryTimeBase);
    }
  }
;
  mWifiRunningTimer=new StopwatchTimer(mBsi.mClocks,this,WIFI_RUNNING,mBsi.mWifiRunningTimers,mBsi.mOnBatteryTimeBase);
  mFullWifiLockTimer=new StopwatchTimer(mBsi.mClocks,this,FULL_WIFI_LOCK,mBsi.mFullWifiLockTimers,mBsi.mOnBatteryTimeBase);
  mWifiScanTimer=new StopwatchTimer(mBsi.mClocks,this,WIFI_SCAN,mBsi.mWifiScanTimers,mBsi.mOnBatteryTimeBase);
  mWifiBatchedScanTimer=new StopwatchTimer[NUM_WIFI_BATCHED_SCAN_BINS];
  mWifiMulticastTimer=new StopwatchTimer(mBsi.mClocks,this,WIFI_MULTICAST_ENABLED,mBsi.mWifiMulticastTimers,mBsi.mOnBatteryTimeBase);
  mProcessStateTimer=new StopwatchTimer[NUM_PROCESS_STATE];
}
