{
  final String numAttr=parser.getAttributeValue(null,"n");
  if (numAttr == null) {
    Slog.w(TAG,"Missing 'n' attribute at " + parser.getPositionDescription());
    XmlUtils.skipCurrentTag(parser);
    return;
  }
  final int num=Integer.parseInt(numAttr);
  LevelStepTracker steps=new LevelStepTracker(num);
  if (isCharge) {
    dit.mChargeSteps=steps;
  }
 else {
    dit.mDischargeSteps=steps;
  }
  int i=0;
  int outerDepth=parser.getDepth();
  int type;
  while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && (type != XmlPullParser.END_TAG || parser.getDepth() > outerDepth)) {
    if (type == XmlPullParser.END_TAG || type == XmlPullParser.TEXT) {
      continue;
    }
    String tagName=parser.getName();
    if ("s".equals(tagName)) {
      if (i < num) {
        String valueAttr=parser.getAttributeValue(null,"v");
        if (valueAttr != null) {
          steps.decodeEntryAt(i,valueAttr);
          i++;
        }
      }
    }
 else {
      Slog.w(TAG,"Unknown element under <" + tag + ">: "+ parser.getName());
      XmlUtils.skipCurrentTag(parser);
    }
  }
  steps.mNumStepDurations=i;
}
