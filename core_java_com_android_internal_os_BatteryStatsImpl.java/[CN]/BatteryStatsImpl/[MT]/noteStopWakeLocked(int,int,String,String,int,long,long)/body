{
  uid=mapUid(uid);
  if (type == WAKE_TYPE_PARTIAL) {
    mWakeLockNesting--;
    if (mRecordAllHistory) {
      if (historyName == null) {
        historyName=name;
      }
      if (mActiveEvents.updateState(HistoryItem.EVENT_WAKE_LOCK_FINISH,historyName,uid,0)) {
        addHistoryEventLocked(elapsedRealtime,uptime,HistoryItem.EVENT_WAKE_LOCK_FINISH,historyName,uid);
      }
    }
    if (mWakeLockNesting == 0) {
      mHistoryCur.states&=~HistoryItem.STATE_WAKE_LOCK_FLAG;
      if (DEBUG_HISTORY)       Slog.v(TAG,"Stop wake lock to: " + Integer.toHexString(mHistoryCur.states));
      mInitialAcquireWakeName=null;
      mInitialAcquireWakeUid=-1;
      addHistoryRecordLocked(elapsedRealtime,uptime);
    }
  }
  if (uid >= 0) {
    if (mOnBatteryScreenOffTimeBase.isRunning()) {
      if (DEBUG_ENERGY_CPU) {
        Slog.d(TAG,"Updating cpu time because of -wake_lock");
      }
      requestWakelockCpuUpdate();
    }
    getUidStatsLocked(uid).noteStopWakeLocked(pid,name,type,elapsedRealtime);
  }
}
