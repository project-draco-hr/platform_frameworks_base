{
  int magic=in.readInt();
  if (magic != MAGIC) {
    throw new ParcelFormatException("Bad magic number");
  }
  mStartCount=in.readInt();
  mBatteryUptime=in.readLong();
  mBatteryLastUptime=in.readLong();
  mBatteryRealtime=in.readLong();
  mBatteryLastRealtime=in.readLong();
  mScreenOn=false;
  mScreenOnTimer=new Timer(-1,null,mUnpluggables,in);
  mPhoneOn=false;
  mPhoneOnTimer=new Timer(-2,null,mUnpluggables,in);
  mWifiOn=false;
  mWifiOnTimer=new Timer(-2,null,mUnpluggables,in);
  mBluetoothOn=false;
  mBluetoothOnTimer=new Timer(-2,null,mUnpluggables,in);
  mUptime=in.readLong();
  mUptimeStart=in.readLong();
  mLastUptime=in.readLong();
  mRealtime=in.readLong();
  mRealtimeStart=in.readLong();
  mLastRealtime=in.readLong();
  mOnBattery=in.readInt() != 0;
  mOnBatteryInternal=false;
  mTrackBatteryPastUptime=in.readLong();
  mTrackBatteryUptimeStart=in.readLong();
  mTrackBatteryPastRealtime=in.readLong();
  mTrackBatteryRealtimeStart=in.readLong();
  mUnpluggedBatteryUptime=in.readLong();
  mUnpluggedBatteryRealtime=in.readLong();
  mUnpluggedStartLevel=in.readInt();
  mPluggedStartLevel=in.readInt();
  mLastWriteTime=in.readLong();
  mPartialTimers.clear();
  mFullTimers.clear();
  mWindowTimers.clear();
  int numUids=in.readInt();
  mUidStats.clear();
  for (int i=0; i < numUids; i++) {
    int uid=in.readInt();
    Uid u=new Uid(uid);
    u.readFromParcelLocked(mUnpluggables,in);
    mUidStats.append(uid,u);
  }
}
