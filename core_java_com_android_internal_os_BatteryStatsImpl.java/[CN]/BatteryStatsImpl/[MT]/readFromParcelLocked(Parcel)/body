{
  int magic=in.readInt();
  if (magic != MAGIC) {
    throw new ParcelFormatException("Bad magic number");
  }
  mStartCount=in.readInt();
  mBatteryUptime=in.readLong();
  mBatteryLastUptime=in.readLong();
  mBatteryRealtime=in.readLong();
  mBatteryLastRealtime=in.readLong();
  mScreenOn=false;
  mScreenOnTimer=new StopwatchTimer(-1,null,mUnpluggables,in);
  for (int i=0; i < NUM_SCREEN_BRIGHTNESS_BINS; i++) {
    mScreenBrightnessTimer[i]=new StopwatchTimer(-100 - i,null,mUnpluggables,in);
  }
  mInputEventCounter=new Counter(mUnpluggables,in);
  mPhoneOn=false;
  mPhoneOnTimer=new StopwatchTimer(-2,null,mUnpluggables,in);
  for (int i=0; i < NUM_SIGNAL_STRENGTH_BINS; i++) {
    mPhoneSignalStrengthsTimer[i]=new StopwatchTimer(-200 - i,null,mUnpluggables,in);
  }
  for (int i=0; i < NUM_DATA_CONNECTION_TYPES; i++) {
    mPhoneDataConnectionsTimer[i]=new StopwatchTimer(-300 - i,null,mUnpluggables,in);
  }
  mWifiOn=false;
  mWifiOnTimer=new StopwatchTimer(-2,null,mUnpluggables,in);
  mWifiRunning=false;
  mWifiRunningTimer=new StopwatchTimer(-2,null,mUnpluggables,in);
  mBluetoothOn=false;
  mBluetoothOnTimer=new StopwatchTimer(-2,null,mUnpluggables,in);
  mUptime=in.readLong();
  mUptimeStart=in.readLong();
  mLastUptime=in.readLong();
  mRealtime=in.readLong();
  mRealtimeStart=in.readLong();
  mLastRealtime=in.readLong();
  mOnBattery=in.readInt() != 0;
  mOnBatteryInternal=false;
  mTrackBatteryPastUptime=in.readLong();
  mTrackBatteryUptimeStart=in.readLong();
  mTrackBatteryPastRealtime=in.readLong();
  mTrackBatteryRealtimeStart=in.readLong();
  mUnpluggedBatteryUptime=in.readLong();
  mUnpluggedBatteryRealtime=in.readLong();
  mDischargeStartLevel=in.readInt();
  mDischargeCurrentLevel=in.readInt();
  mLastWriteTime=in.readLong();
  mMobileDataRx[STATS_LAST]=in.readLong();
  mMobileDataRx[STATS_UNPLUGGED]=-1;
  mMobileDataTx[STATS_LAST]=in.readLong();
  mMobileDataTx[STATS_UNPLUGGED]=-1;
  mTotalDataRx[STATS_LAST]=in.readLong();
  mTotalDataRx[STATS_UNPLUGGED]=-1;
  mTotalDataTx[STATS_LAST]=in.readLong();
  mTotalDataTx[STATS_UNPLUGGED]=-1;
  mRadioDataUptime=in.readLong();
  mRadioDataStart=-1;
  mBluetoothPingCount=in.readInt();
  mBluetoothPingStart=-1;
  mKernelWakelockStats.clear();
  int NKW=in.readInt();
  for (int ikw=0; ikw < NKW; ikw++) {
    if (in.readInt() != 0) {
      String wakelockName=in.readString();
      in.readInt();
      SamplingTimer kwlt=new SamplingTimer(mUnpluggables,mOnBattery,in);
      mKernelWakelockStats.put(wakelockName,kwlt);
    }
  }
  mPartialTimers.clear();
  mFullTimers.clear();
  mWindowTimers.clear();
  sNumSpeedSteps=in.readInt();
  int numUids=in.readInt();
  mUidStats.clear();
  for (int i=0; i < numUids; i++) {
    int uid=in.readInt();
    Uid u=new Uid(uid);
    u.readFromParcelLocked(mUnpluggables,in);
    mUidStats.append(uid,u);
  }
}
