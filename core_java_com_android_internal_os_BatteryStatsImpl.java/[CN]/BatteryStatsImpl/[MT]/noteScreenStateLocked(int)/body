{
  if (mScreenState != state) {
    recordDailyStatsIfNeededLocked(true);
    final int oldState=mScreenState;
    mScreenState=state;
    if (DEBUG)     Slog.v(TAG,"Screen state: oldState=" + Display.stateToString(oldState) + ", newState="+ Display.stateToString(state));
    if (state != Display.STATE_UNKNOWN) {
      int stepState=state - 1;
      if (stepState < 4) {
        mModStepMode|=(mCurStepMode & STEP_LEVEL_MODE_SCREEN_STATE) ^ stepState;
        mCurStepMode=(mCurStepMode & ~STEP_LEVEL_MODE_SCREEN_STATE) | stepState;
      }
 else {
        Slog.wtf(TAG,"Unexpected screen state: " + state);
      }
    }
    if (state == Display.STATE_ON) {
      final long elapsedRealtime=SystemClock.elapsedRealtime();
      final long uptime=SystemClock.uptimeMillis();
      mHistoryCur.states|=HistoryItem.STATE_SCREEN_ON_FLAG;
      if (DEBUG_HISTORY)       Slog.v(TAG,"Screen on to: " + Integer.toHexString(mHistoryCur.states));
      addHistoryRecordLocked(elapsedRealtime,uptime);
      mScreenOnTimer.startRunningLocked(elapsedRealtime);
      if (mScreenBrightnessBin >= 0) {
        mScreenBrightnessTimer[mScreenBrightnessBin].startRunningLocked(elapsedRealtime);
      }
      updateTimeBasesLocked(mOnBatteryTimeBase.isRunning(),false,SystemClock.uptimeMillis() * 1000,elapsedRealtime * 1000);
      noteStartWakeLocked(-1,-1,"screen",null,WAKE_TYPE_PARTIAL,false,elapsedRealtime,uptime);
      if (mOnBatteryInternal) {
        updateDischargeScreenLevelsLocked(false,true);
      }
    }
 else     if (oldState == Display.STATE_ON) {
      final long elapsedRealtime=SystemClock.elapsedRealtime();
      final long uptime=SystemClock.uptimeMillis();
      mHistoryCur.states&=~HistoryItem.STATE_SCREEN_ON_FLAG;
      if (DEBUG_HISTORY)       Slog.v(TAG,"Screen off to: " + Integer.toHexString(mHistoryCur.states));
      addHistoryRecordLocked(elapsedRealtime,uptime);
      mScreenOnTimer.stopRunningLocked(elapsedRealtime);
      if (mScreenBrightnessBin >= 0) {
        mScreenBrightnessTimer[mScreenBrightnessBin].stopRunningLocked(elapsedRealtime);
      }
      noteStopWakeLocked(-1,-1,"screen","screen",WAKE_TYPE_PARTIAL,elapsedRealtime,uptime);
      updateTimeBasesLocked(mOnBatteryTimeBase.isRunning(),true,SystemClock.uptimeMillis() * 1000,elapsedRealtime * 1000);
      if (mOnBatteryInternal) {
        updateDischargeScreenLevelsLocked(true,false);
      }
    }
  }
}
