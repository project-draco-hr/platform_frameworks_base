{
synchronized (this) {
    final boolean onBattery=plugType == BATTERY_PLUGGED_NONE;
    final long uptime=SystemClock.uptimeMillis();
    final long elapsedRealtime=SystemClock.elapsedRealtime();
    int oldStatus=mHistoryCur.batteryStatus;
    if (!mHaveBatteryLevel) {
      mHaveBatteryLevel=true;
      if (onBattery == mOnBattery) {
        if (onBattery) {
          mHistoryCur.states&=~HistoryItem.STATE_BATTERY_PLUGGED_FLAG;
        }
 else {
          mHistoryCur.states|=HistoryItem.STATE_BATTERY_PLUGGED_FLAG;
        }
      }
      oldStatus=status;
    }
    if (onBattery) {
      mDischargeCurrentLevel=level;
      if (!mRecordingHistory) {
        mRecordingHistory=true;
        startRecordingHistory(elapsedRealtime,uptime,true);
      }
    }
 else     if (level < 96) {
      if (!mRecordingHistory) {
        mRecordingHistory=true;
        startRecordingHistory(elapsedRealtime,uptime,true);
      }
    }
    mCurrentBatteryLevel=level;
    if (mDischargePlugLevel < 0) {
      mDischargePlugLevel=level;
    }
    if (onBattery != mOnBattery) {
      mHistoryCur.batteryLevel=(byte)level;
      mHistoryCur.batteryStatus=(byte)status;
      mHistoryCur.batteryHealth=(byte)health;
      mHistoryCur.batteryPlugType=(byte)plugType;
      mHistoryCur.batteryTemperature=(short)temp;
      mHistoryCur.batteryVoltage=(char)volt;
      setOnBatteryLocked(elapsedRealtime,uptime,onBattery,oldStatus,level);
    }
 else {
      boolean changed=false;
      if (mHistoryCur.batteryLevel != level) {
        mHistoryCur.batteryLevel=(byte)level;
        changed=true;
      }
      if (mHistoryCur.batteryStatus != status) {
        mHistoryCur.batteryStatus=(byte)status;
        changed=true;
      }
      if (mHistoryCur.batteryHealth != health) {
        mHistoryCur.batteryHealth=(byte)health;
        changed=true;
      }
      if (mHistoryCur.batteryPlugType != plugType) {
        mHistoryCur.batteryPlugType=(byte)plugType;
        changed=true;
      }
      if (temp >= (mHistoryCur.batteryTemperature + 10) || temp <= (mHistoryCur.batteryTemperature - 10)) {
        mHistoryCur.batteryTemperature=(short)temp;
        changed=true;
      }
      if (volt > (mHistoryCur.batteryVoltage + 20) || volt < (mHistoryCur.batteryVoltage - 20)) {
        mHistoryCur.batteryVoltage=(char)volt;
        changed=true;
      }
      if (changed) {
        addHistoryRecordLocked(elapsedRealtime,uptime);
      }
      if (onBattery) {
        if (mLastDischargeStepLevel != level && mMinDischargeStepLevel > level) {
          mNumDischargeStepDurations=addLevelSteps(mDischargeStepDurations,mNumDischargeStepDurations,mLastDischargeStepTime,mLastDischargeStepLevel - level,elapsedRealtime);
          mLastDischargeStepLevel=level;
          mMinDischargeStepLevel=level;
          mLastDischargeStepTime=elapsedRealtime;
        }
      }
 else {
        if (mLastChargeStepLevel != level && mMaxChargeStepLevel < level) {
          mNumChargeStepDurations=addLevelSteps(mChargeStepDurations,mNumChargeStepDurations,mLastChargeStepTime,level - mLastChargeStepLevel,elapsedRealtime);
          mLastChargeStepLevel=level;
          mMaxChargeStepLevel=level;
          mLastChargeStepTime=elapsedRealtime;
        }
      }
    }
    if (!onBattery && status == BatteryManager.BATTERY_STATUS_FULL) {
      mRecordingHistory=DEBUG;
    }
  }
}
