{
  if (DEBUG_ENERGY) {
    Slog.d(TAG,"Updating mobile radio stats");
  }
  NetworkStats delta=null;
  try {
    if (!ArrayUtils.isEmpty(mMobileIfaces)) {
      delta=getNetworkStatsDeltaLocked(mMobileIfaces,mMobileNetworkStats);
    }
  }
 catch (  IOException e) {
    Slog.wtf(TAG,"Failed to get mobile network stats",e);
    return;
  }
  if (delta == null || !mOnBatteryInternal) {
    return;
  }
  long radioTime=mMobileRadioActivePerAppTimer.getTimeSinceMarkLocked(elapsedRealtimeMs * 1000);
  mMobileRadioActivePerAppTimer.setMark(elapsedRealtimeMs);
  long totalPackets=delta.getTotalPackets();
  final int size=delta.size();
  for (int i=0; i < size; i++) {
    final NetworkStats.Entry entry=delta.getValues(i,mTmpNetworkStatsEntry);
    if (entry.rxBytes == 0 || entry.txBytes == 0) {
      continue;
    }
    if (DEBUG_ENERGY) {
      Slog.d(TAG,"Mobile uid " + entry.uid + ": delta rx="+ entry.rxBytes+ " tx="+ entry.txBytes+ " rxPackets="+ entry.rxPackets+ " txPackets="+ entry.txPackets);
    }
    final Uid u=getUidStatsLocked(mapUid(entry.uid));
    u.noteNetworkActivityLocked(NETWORK_MOBILE_RX_DATA,entry.rxBytes,entry.rxPackets);
    u.noteNetworkActivityLocked(NETWORK_MOBILE_TX_DATA,entry.txBytes,entry.txPackets);
    if (radioTime > 0) {
      long appPackets=entry.rxPackets + entry.txPackets;
      long appRadioTime=(radioTime * appPackets) / totalPackets;
      u.noteMobileRadioActiveTimeLocked(appRadioTime);
      radioTime-=appRadioTime;
      totalPackets-=appPackets;
    }
    mNetworkByteActivityCounters[NETWORK_MOBILE_RX_DATA].addCountLocked(entry.rxBytes);
    mNetworkByteActivityCounters[NETWORK_MOBILE_TX_DATA].addCountLocked(entry.txBytes);
    mNetworkPacketActivityCounters[NETWORK_MOBILE_RX_DATA].addCountLocked(entry.rxPackets);
    mNetworkPacketActivityCounters[NETWORK_MOBILE_TX_DATA].addCountLocked(entry.txPackets);
  }
  if (radioTime > 0) {
    mMobileRadioActiveUnknownTime.addCountLocked(radioTime);
    mMobileRadioActiveUnknownCount.addCountLocked(1);
  }
}
