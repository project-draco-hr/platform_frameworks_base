{
  final long currentTime=System.currentTimeMillis();
  final long elapsedRealtime=SystemClock.elapsedRealtime();
  final long uptime=SystemClock.uptimeMillis();
  if (isStartClockTimeValid()) {
    if (mLastRecordedClockTime != 0) {
      long expectedClockTime=mLastRecordedClockTime + (elapsedRealtime - mLastRecordedClockRealtime);
      if (currentTime >= (expectedClockTime - 500) && currentTime <= (expectedClockTime + 500)) {
        return;
      }
    }
  }
  recordCurrentTimeChangeLocked(currentTime,elapsedRealtime,uptime);
  if (isStartClockTimeValid()) {
    mStartClockTime=currentTime;
  }
}
