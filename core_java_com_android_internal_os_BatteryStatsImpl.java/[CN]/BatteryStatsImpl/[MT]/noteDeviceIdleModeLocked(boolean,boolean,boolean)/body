{
  final long elapsedRealtime=SystemClock.elapsedRealtime();
  final long uptime=SystemClock.uptimeMillis();
  boolean nowIdling=enabled;
  if (mDeviceIdling && !enabled && !fromActive&& !fromMotion) {
    nowIdling=true;
  }
  if (mDeviceIdling != nowIdling) {
    mDeviceIdling=nowIdling;
    int stepState=nowIdling ? STEP_LEVEL_MODE_DEVICE_IDLE : 0;
    mModStepMode|=(mCurStepMode & STEP_LEVEL_MODE_DEVICE_IDLE) ^ stepState;
    mCurStepMode=(mCurStepMode & ~STEP_LEVEL_MODE_DEVICE_IDLE) | stepState;
    if (enabled) {
      mDeviceIdlingTimer.startRunningLocked(elapsedRealtime);
    }
 else {
      mDeviceIdlingTimer.stopRunningLocked(elapsedRealtime);
    }
  }
  if (mDeviceIdleModeEnabled != enabled) {
    mDeviceIdleModeEnabled=enabled;
    if (fromMotion) {
      addHistoryEventLocked(elapsedRealtime,uptime,HistoryItem.EVENT_SIGNIFICANT_MOTION,"",0);
    }
    if (fromActive) {
      addHistoryEventLocked(elapsedRealtime,uptime,HistoryItem.EVENT_ACTIVE,"",0);
    }
    if (enabled) {
      mHistoryCur.states2|=HistoryItem.STATE2_DEVICE_IDLE_FLAG;
      if (DEBUG_HISTORY)       Slog.v(TAG,"Device idle mode enabled to: " + Integer.toHexString(mHistoryCur.states2));
      mDeviceIdleModeEnabledTimer.startRunningLocked(elapsedRealtime);
    }
 else {
      mHistoryCur.states2&=~HistoryItem.STATE2_DEVICE_IDLE_FLAG;
      if (DEBUG_HISTORY)       Slog.v(TAG,"Device idle mode disabled to: " + Integer.toHexString(mHistoryCur.states2));
      mDeviceIdleModeEnabledTimer.stopRunningLocked(elapsedRealtime);
    }
    addHistoryRecordLocked(elapsedRealtime,uptime);
  }
}
