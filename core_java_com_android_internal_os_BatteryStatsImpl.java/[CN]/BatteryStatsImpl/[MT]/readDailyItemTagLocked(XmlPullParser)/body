{
  DailyItem dit=new DailyItem();
  String attr=parser.getAttributeValue(null,"start");
  if (attr != null) {
    dit.mStartTime=Long.parseLong(attr);
  }
  attr=parser.getAttributeValue(null,"end");
  if (attr != null) {
    dit.mEndTime=Long.parseLong(attr);
  }
  int outerDepth=parser.getDepth();
  int type;
  while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && (type != XmlPullParser.END_TAG || parser.getDepth() > outerDepth)) {
    if (type == XmlPullParser.END_TAG || type == XmlPullParser.TEXT) {
      continue;
    }
    String tagName=parser.getName();
    if (tagName.equals("dis")) {
      readDailyItemTagDetailsLocked(parser,dit,false,"dis");
    }
 else     if (tagName.equals("chg")) {
      readDailyItemTagDetailsLocked(parser,dit,true,"chg");
    }
 else     if (tagName.equals("upd")) {
      if (dit.mPackageChanges == null) {
        dit.mPackageChanges=new ArrayList<>();
      }
      PackageChange pc=new PackageChange();
      pc.mUpdate=true;
      pc.mPackageName=parser.getAttributeValue(null,"pkg");
      String verStr=parser.getAttributeValue(null,"ver");
      pc.mVersionCode=verStr != null ? Integer.parseInt(verStr) : 0;
      dit.mPackageChanges.add(pc);
      XmlUtils.skipCurrentTag(parser);
    }
 else     if (tagName.equals("rem")) {
      if (dit.mPackageChanges == null) {
        dit.mPackageChanges=new ArrayList<>();
      }
      PackageChange pc=new PackageChange();
      pc.mUpdate=false;
      pc.mPackageName=parser.getAttributeValue(null,"pkg");
      dit.mPackageChanges.add(pc);
      XmlUtils.skipCurrentTag(parser);
    }
 else {
      Slog.w(TAG,"Unknown element under <item>: " + parser.getName());
      XmlUtils.skipCurrentTag(parser);
    }
  }
  mDailyItems.add(dit);
}
