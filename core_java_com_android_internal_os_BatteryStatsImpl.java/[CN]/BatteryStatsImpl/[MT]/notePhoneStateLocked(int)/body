{
  boolean scanning=false;
  int bin=mPhoneSignalStrengthBin;
  if (state == ServiceState.STATE_POWER_OFF) {
    stopAllSignalStrengthTimersLocked(-1);
  }
  if (state == ServiceState.STATE_IN_SERVICE) {
    if (bin == -1)     bin=SIGNAL_STRENGTH_NONE_OR_UNKNOWN;
    if (!mPhoneSignalStrengthsTimer[bin].isRunningLocked()) {
      mPhoneSignalStrengthsTimer[bin].startRunningLocked(this);
    }
  }
 else   if (state == ServiceState.STATE_OUT_OF_SERVICE) {
    scanning=true;
    mPhoneSignalStrengthBin=SIGNAL_STRENGTH_NONE_OR_UNKNOWN;
    stopAllSignalStrengthTimersLocked(mPhoneSignalStrengthBin);
    if (!mPhoneSignalStrengthsTimer[mPhoneSignalStrengthBin].isRunningLocked()) {
      mPhoneSignalStrengthsTimer[mPhoneSignalStrengthBin].startRunningLocked(this);
    }
    if (!mPhoneSignalScanningTimer.isRunningLocked()) {
      mHistoryCur.states|=HistoryItem.STATE_PHONE_SCANNING_FLAG;
      if (DEBUG_HISTORY)       Slog.v(TAG,"Phone started scanning to: " + Integer.toHexString(mHistoryCur.states));
      addHistoryRecordLocked(SystemClock.elapsedRealtime());
      mPhoneSignalScanningTimer.startRunningLocked(this);
    }
  }
  if (!scanning) {
    if (mPhoneSignalScanningTimer.isRunningLocked()) {
      mHistoryCur.states&=~HistoryItem.STATE_PHONE_SCANNING_FLAG;
      if (DEBUG_HISTORY)       Slog.v(TAG,"Phone stopped scanning to: " + Integer.toHexString(mHistoryCur.states));
      addHistoryRecordLocked(SystemClock.elapsedRealtime());
      mPhoneSignalScanningTimer.stopRunningLocked(this);
    }
  }
  if (mPhoneServiceState != state) {
    mHistoryCur.states=(mHistoryCur.states & ~HistoryItem.STATE_PHONE_STATE_MASK) | (state << HistoryItem.STATE_PHONE_STATE_SHIFT);
    if (DEBUG_HISTORY)     Slog.v(TAG,"Phone state " + bin + " to: "+ Integer.toHexString(mHistoryCur.states));
    addHistoryRecordLocked(SystemClock.elapsedRealtime());
    mPhoneServiceState=state;
  }
}
