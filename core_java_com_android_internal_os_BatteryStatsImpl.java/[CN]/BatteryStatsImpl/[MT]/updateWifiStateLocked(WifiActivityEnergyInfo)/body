{
  final NetworkStats delta;
  try {
    delta=getNetworkStatsDeltaLocked(mWifiIfaces,mWifiNetworkStats);
  }
 catch (  IOException e) {
    Slog.wtf(TAG,"Failed to get wifi network stats",e);
    return;
  }
  if (!mOnBatteryInternal) {
    return;
  }
  if (delta != null) {
    final int size=delta.size();
    for (int i=0; i < size; i++) {
      final NetworkStats.Entry entry=delta.getValues(i,mTmpNetworkStatsEntry);
      if (DEBUG) {
        Slog.d(TAG,"Wifi uid " + entry.uid + ": delta rx="+ entry.rxBytes+ " tx="+ entry.txBytes);
      }
      if (entry.rxBytes == 0 || entry.txBytes == 0) {
        continue;
      }
      final Uid u=getUidStatsLocked(mapUid(entry.uid));
      u.noteNetworkActivityLocked(NETWORK_WIFI_RX_DATA,entry.rxBytes,entry.rxPackets);
      u.noteNetworkActivityLocked(NETWORK_WIFI_TX_DATA,entry.txBytes,entry.txPackets);
      mNetworkByteActivityCounters[NETWORK_WIFI_RX_DATA].addCountLocked(entry.rxBytes);
      mNetworkByteActivityCounters[NETWORK_WIFI_TX_DATA].addCountLocked(entry.txBytes);
      mNetworkPacketActivityCounters[NETWORK_WIFI_RX_DATA].addCountLocked(entry.rxPackets);
      mNetworkPacketActivityCounters[NETWORK_WIFI_TX_DATA].addCountLocked(entry.txPackets);
    }
  }
  if (info != null) {
    mWifiActivityCounters[CONTROLLER_RX_TIME].addCountLocked(info.getControllerRxTimeMillis());
    mWifiActivityCounters[CONTROLLER_TX_TIME].addCountLocked(info.getControllerTxTimeMillis());
    mWifiActivityCounters[CONTROLLER_IDLE_TIME].addCountLocked(info.getControllerIdleTimeMillis());
    mWifiActivityCounters[CONTROLLER_ENERGY].addCountLocked(info.getControllerEnergyUsed());
  }
}
