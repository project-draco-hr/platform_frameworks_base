{
  Uid wifiUid=mUidStats.get(Process.WIFI_UID);
  if (wifiUid != null) {
    long uSecTime=computeBatteryRealtime(SystemClock.elapsedRealtime() * 1000,which);
    for (int ip=wifiUid.mProcessStats.size() - 1; ip >= 0; ip--) {
      Uid.Proc proc=wifiUid.mProcessStats.valueAt(ip);
      long totalRunningTime=getGlobalWifiRunningTime(uSecTime,which);
      for (int i=0; i < mUidStats.size(); i++) {
        Uid uid=mUidStats.valueAt(i);
        if (uid.mUid != Process.WIFI_UID) {
          long uidRunningTime=uid.getWifiRunningTime(uSecTime,which);
          if (uidRunningTime > 0) {
            Uid.Proc uidProc=uid.getProcessStatsLocked("*wifi*");
            long time=proc.getUserTime(which);
            time=(time * uidRunningTime) / totalRunningTime;
            uidProc.mUserTime+=time;
            proc.mUserTime-=time;
            time=proc.getSystemTime(which);
            time=(time * uidRunningTime) / totalRunningTime;
            uidProc.mSystemTime+=time;
            proc.mSystemTime-=time;
            time=proc.getForegroundTime(which);
            time=(time * uidRunningTime) / totalRunningTime;
            uidProc.mForegroundTime+=time;
            proc.mForegroundTime-=time;
            for (int sb=0; sb < proc.mSpeedBins.length; sb++) {
              SamplingCounter sc=proc.mSpeedBins[sb];
              if (sc != null) {
                time=sc.getCountLocked(which);
                time=(time * uidRunningTime) / totalRunningTime;
                SamplingCounter uidSc=uidProc.mSpeedBins[sb];
                if (uidSc == null) {
                  uidSc=new SamplingCounter(mOnBatteryTimeBase);
                  uidProc.mSpeedBins[sb]=uidSc;
                }
                uidSc.mCount.addAndGet((int)time);
                sc.mCount.addAndGet((int)-time);
              }
            }
            totalRunningTime-=uidRunningTime;
          }
        }
      }
    }
  }
}
