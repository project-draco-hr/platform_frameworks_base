{
  mStartCount=0;
  initTimes();
  mScreenOnTimer.reset(this,false);
  for (int i=0; i < NUM_SCREEN_BRIGHTNESS_BINS; i++) {
    mScreenBrightnessTimer[i].reset(this,false);
  }
  mInputEventCounter.reset(false);
  mPhoneOnTimer.reset(this,false);
  mAudioOnTimer.reset(this,false);
  mVideoOnTimer.reset(this,false);
  for (int i=0; i < SignalStrength.NUM_SIGNAL_STRENGTH_BINS; i++) {
    mPhoneSignalStrengthsTimer[i].reset(this,false);
  }
  mPhoneSignalScanningTimer.reset(this,false);
  for (int i=0; i < NUM_DATA_CONNECTION_TYPES; i++) {
    mPhoneDataConnectionsTimer[i].reset(this,false);
  }
  for (int i=0; i < NUM_NETWORK_ACTIVITY_TYPES; i++) {
    mNetworkByteActivityCounters[i].reset(false);
    mNetworkPacketActivityCounters[i].reset(false);
  }
  mMobileRadioActiveTimer.reset(this,false);
  mWifiOnTimer.reset(this,false);
  mGlobalWifiRunningTimer.reset(this,false);
  for (int i=0; i < NUM_WIFI_STATES; i++) {
    mWifiStateTimer[i].reset(this,false);
  }
  mBluetoothOnTimer.reset(this,false);
  for (int i=0; i < NUM_BLUETOOTH_STATES; i++) {
    mBluetoothStateTimer[i].reset(this,false);
  }
  for (int i=0; i < mUidStats.size(); i++) {
    if (mUidStats.valueAt(i).reset()) {
      mUidStats.remove(mUidStats.keyAt(i));
      i--;
    }
  }
  if (mKernelWakelockStats.size() > 0) {
    for (    SamplingTimer timer : mKernelWakelockStats.values()) {
      mUnpluggables.remove(timer);
    }
    mKernelWakelockStats.clear();
  }
  initDischarge();
  clearHistoryLocked();
}
