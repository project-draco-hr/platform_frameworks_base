{
  final KernelWakelockStats wakelockStats=mKernelWakelockReader.readKernelWakelockStats(mTmpWakelockStats);
  if (wakelockStats == null) {
    Slog.w(TAG,"Couldn't get kernel wake lock stats");
    return;
  }
  boolean seenNonZeroTime=false;
  for (  Map.Entry<String,KernelWakelockStats.Entry> ent : wakelockStats.entrySet()) {
    String name=ent.getKey();
    KernelWakelockStats.Entry kws=ent.getValue();
    SamplingTimer kwlt=mKernelWakelockStats.get(name);
    if (kwlt == null) {
      kwlt=new SamplingTimer(mClocks,mOnBatteryScreenOffTimeBase);
      mKernelWakelockStats.put(name,kwlt);
    }
    kwlt.update(kws.mTotalTime,kws.mCount);
    kwlt.setUpdateVersion(kws.mVersion);
    if (kws.mVersion != wakelockStats.kernelWakelockVersion) {
      seenNonZeroTime|=kws.mTotalTime > 0;
    }
  }
  int numWakelocksSetStale=0;
  if (wakelockStats.size() != mKernelWakelockStats.size()) {
    for (    Map.Entry<String,SamplingTimer> ent : mKernelWakelockStats.entrySet()) {
      SamplingTimer st=ent.getValue();
      if (st.getUpdateVersion() != wakelockStats.kernelWakelockVersion) {
        st.endSample();
        numWakelocksSetStale++;
      }
    }
  }
  if (!seenNonZeroTime) {
    Slog.wtf(TAG,"All kernel wakelocks had time of zero");
  }
  if (numWakelocksSetStale == mKernelWakelockStats.size()) {
    Slog.wtf(TAG,"All kernel wakelocks were set stale. new version=" + wakelockStats.kernelWakelockVersion);
  }
}
