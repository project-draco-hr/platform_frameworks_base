{
  if (last == null || !last.isDeltaData() || !cur.isDeltaData()) {
    dest.writeInt(DELTA_TIME_ABS);
    cur.writeToParcel(dest,0);
    return;
  }
  final long deltaTime=cur.time - last.time;
  final int lastBatteryLevelInt=buildBatteryLevelInt(last);
  final int lastStateInt=buildStateInt(last);
  int deltaTimeToken;
  if (deltaTime < 0 || deltaTime > Integer.MAX_VALUE) {
    deltaTimeToken=DELTA_TIME_LONG;
  }
 else   if (deltaTime >= DELTA_TIME_ABS) {
    deltaTimeToken=DELTA_TIME_INT;
  }
 else {
    deltaTimeToken=(int)deltaTime;
  }
  int firstToken=deltaTimeToken | (cur.cmd << DELTA_CMD_SHIFT) | (cur.states & DELTA_STATE_MASK);
  final int batteryLevelInt=buildBatteryLevelInt(cur);
  final boolean batteryLevelIntChanged=batteryLevelInt != lastBatteryLevelInt;
  if (batteryLevelIntChanged) {
    firstToken|=DELTA_BATTERY_LEVEL_FLAG;
  }
  final int stateInt=buildStateInt(cur);
  final boolean stateIntChanged=stateInt != lastStateInt;
  if (stateIntChanged) {
    firstToken|=DELTA_STATE_FLAG;
  }
  dest.writeInt(firstToken);
  if (DEBUG)   Slog.i(TAG,"WRITE DELTA: firstToken=0x" + Integer.toHexString(firstToken) + " deltaTime="+ deltaTime);
  if (deltaTimeToken >= DELTA_TIME_INT) {
    if (deltaTimeToken == DELTA_TIME_INT) {
      if (DEBUG)       Slog.i(TAG,"WRITE DELTA: int deltaTime=" + (int)deltaTime);
      dest.writeInt((int)deltaTime);
    }
 else {
      if (DEBUG)       Slog.i(TAG,"WRITE DELTA: long deltaTime=" + deltaTime);
      dest.writeLong(deltaTime);
    }
  }
  if (batteryLevelIntChanged) {
    dest.writeInt(batteryLevelInt);
    if (DEBUG)     Slog.i(TAG,"WRITE DELTA: batteryToken=0x" + Integer.toHexString(batteryLevelInt) + " batteryLevel="+ cur.batteryLevel+ " batteryTemp="+ cur.batteryTemperature+ " batteryVolt="+ (int)cur.batteryVoltage);
  }
  if (stateIntChanged) {
    dest.writeInt(stateInt);
    if (DEBUG)     Slog.i(TAG,"WRITE DELTA: stateToken=0x" + Integer.toHexString(stateInt) + " batteryStatus="+ cur.batteryStatus+ " batteryHealth="+ cur.batteryHealth+ " batteryPlugType="+ cur.batteryPlugType+ " states=0x"+ Integer.toHexString(cur.states));
  }
  if (cur.cmd == HistoryItem.CMD_EVENT) {
    Integer idxObj=mHistoryStringPool.get(cur.eventName);
    int codeAndIndex=(cur.eventCode & 0xffff);
    int idx;
    if (idxObj != null) {
      idx=idxObj;
    }
 else {
      idx=mNextHistoryStringIdx;
      mHistoryStringPool.put(cur.eventName,mNextHistoryStringIdx);
      mNextHistoryStringIdx++;
    }
    codeAndIndex|=(idx << 16);
    dest.writeInt(codeAndIndex);
    dest.writeInt(cur.eventUid);
  }
}
