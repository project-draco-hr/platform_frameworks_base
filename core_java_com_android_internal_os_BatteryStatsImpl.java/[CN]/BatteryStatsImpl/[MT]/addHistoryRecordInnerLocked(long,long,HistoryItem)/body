{
  addHistoryBufferLocked(elapsedRealtimeMs,uptimeMs,cur);
  if (!USE_OLD_HISTORY) {
    return;
  }
  if (!mHaveBatteryLevel || !mRecordingHistory) {
    return;
  }
  if (mHistoryEnd != null && mHistoryEnd.cmd == HistoryItem.CMD_UPDATE && (mHistoryBaseTime + elapsedRealtimeMs) < (mHistoryEnd.time + 1000) && ((mHistoryEnd.states ^ cur.states) & mChangedStates & mActiveHistoryStates) == 0 && ((mHistoryEnd.states2 ^ cur.states2) & mChangedStates2 & mActiveHistoryStates2) == 0) {
    if (mHistoryLastEnd != null && mHistoryLastEnd.cmd == HistoryItem.CMD_UPDATE && (mHistoryBaseTime + elapsedRealtimeMs) < (mHistoryEnd.time + 500) && mHistoryLastEnd.sameNonEvent(cur)) {
      mHistoryLastEnd.next=null;
      mHistoryEnd.next=mHistoryCache;
      mHistoryCache=mHistoryEnd;
      mHistoryEnd=mHistoryLastEnd;
      mHistoryLastEnd=null;
    }
 else {
      mChangedStates|=mHistoryEnd.states ^ (cur.states & mActiveHistoryStates);
      mChangedStates2|=mHistoryEnd.states ^ (cur.states2 & mActiveHistoryStates2);
      mHistoryEnd.setTo(mHistoryEnd.time,HistoryItem.CMD_UPDATE,cur);
    }
    return;
  }
  mChangedStates=0;
  mChangedStates2=0;
  if (mNumHistoryItems == MAX_HISTORY_ITEMS || mNumHistoryItems == MAX_MAX_HISTORY_ITEMS) {
    addHistoryRecordLocked(elapsedRealtimeMs,HistoryItem.CMD_OVERFLOW);
  }
  if (mNumHistoryItems >= MAX_HISTORY_ITEMS) {
    if (mHistoryEnd != null && mHistoryEnd.batteryLevel == cur.batteryLevel && (mNumHistoryItems >= MAX_MAX_HISTORY_ITEMS || ((mHistoryEnd.states ^ (cur.states & mActiveHistoryStates)) & HistoryItem.MOST_INTERESTING_STATES) == 0)) {
      return;
    }
  }
  addHistoryRecordLocked(elapsedRealtimeMs,HistoryItem.CMD_UPDATE);
}
