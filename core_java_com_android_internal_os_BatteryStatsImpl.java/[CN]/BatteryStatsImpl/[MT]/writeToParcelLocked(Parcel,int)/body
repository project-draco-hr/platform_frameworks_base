{
  final long uSecUptime=SystemClock.uptimeMillis() * 1000;
  final long uSecRealtime=SystemClock.elapsedRealtime() * 1000;
  final long batteryUptime=getBatteryUptimeLocked(uSecUptime);
  final long batteryRealtime=getBatteryRealtimeLocked(uSecRealtime);
  out.writeInt(MAGIC);
  out.writeInt(mStartCount);
  out.writeLong(mBatteryUptime);
  out.writeLong(mBatteryLastUptime);
  out.writeLong(mBatteryRealtime);
  out.writeLong(mBatteryLastRealtime);
  mScreenOnTimer.writeToParcel(out,batteryRealtime);
  for (int i=0; i < NUM_SCREEN_BRIGHTNESS_BINS; i++) {
    mScreenBrightnessTimer[i].writeToParcel(out,batteryRealtime);
  }
  mInputEventCounter.writeToParcel(out);
  mPhoneOnTimer.writeToParcel(out,batteryRealtime);
  for (int i=0; i < NUM_SIGNAL_STRENGTH_BINS; i++) {
    mPhoneSignalStrengthsTimer[i].writeToParcel(out,batteryRealtime);
  }
  for (int i=0; i < NUM_DATA_CONNECTION_TYPES; i++) {
    mPhoneDataConnectionsTimer[i].writeToParcel(out,batteryRealtime);
  }
  mWifiOnTimer.writeToParcel(out,batteryRealtime);
  mWifiRunningTimer.writeToParcel(out,batteryRealtime);
  mBluetoothOnTimer.writeToParcel(out,batteryRealtime);
  out.writeLong(mUptime);
  out.writeLong(mUptimeStart);
  out.writeLong(mLastUptime);
  out.writeLong(mRealtime);
  out.writeLong(mRealtimeStart);
  out.writeLong(mLastRealtime);
  out.writeInt(mOnBattery ? 1 : 0);
  out.writeLong(batteryUptime);
  out.writeLong(mTrackBatteryUptimeStart);
  out.writeLong(batteryRealtime);
  out.writeLong(mTrackBatteryRealtimeStart);
  out.writeLong(mUnpluggedBatteryUptime);
  out.writeLong(mUnpluggedBatteryRealtime);
  out.writeInt(mDischargeStartLevel);
  out.writeInt(mDischargeCurrentLevel);
  out.writeLong(mLastWriteTime);
  out.writeInt(mKernelWakelockStats.size());
  for (  Map.Entry<String,SamplingTimer> ent : mKernelWakelockStats.entrySet()) {
    SamplingTimer kwlt=ent.getValue();
    if (kwlt != null) {
      out.writeInt(1);
      out.writeString(ent.getKey());
      Timer.writeTimerToParcel(out,kwlt,batteryRealtime);
    }
 else {
      out.writeInt(0);
    }
  }
  int size=mUidStats.size();
  out.writeInt(size);
  for (int i=0; i < size; i++) {
    out.writeInt(mUidStats.keyAt(i));
    Uid uid=mUidStats.valueAt(i);
    uid.writeToParcelLocked(out,batteryRealtime);
  }
}
