{
  mRecordAllHistory=enabled;
  if (!enabled) {
    mActiveEvents.removeEvents(HistoryItem.EVENT_WAKE_LOCK);
    HashMap<String,SparseIntArray> active=mActiveEvents.getStateForEvent(HistoryItem.EVENT_PROC);
    if (active != null) {
      long mSecRealtime=SystemClock.elapsedRealtime();
      final long mSecUptime=SystemClock.uptimeMillis();
      for (      HashMap.Entry<String,SparseIntArray> ent : active.entrySet()) {
        SparseIntArray uids=ent.getValue();
        for (int j=0; j < uids.size(); j++) {
          addHistoryEventLocked(mSecRealtime,mSecUptime,HistoryItem.EVENT_PROC_FINISH,ent.getKey(),uids.keyAt(j));
        }
      }
    }
  }
 else {
    HashMap<String,SparseIntArray> active=mActiveEvents.getStateForEvent(HistoryItem.EVENT_PROC);
    if (active != null) {
      long mSecRealtime=SystemClock.elapsedRealtime();
      final long mSecUptime=SystemClock.uptimeMillis();
      for (      HashMap.Entry<String,SparseIntArray> ent : active.entrySet()) {
        SparseIntArray uids=ent.getValue();
        for (int j=0; j < uids.size(); j++) {
          addHistoryEventLocked(mSecRealtime,mSecUptime,HistoryItem.EVENT_PROC_START,ent.getKey(),uids.keyAt(j));
        }
      }
    }
  }
}
