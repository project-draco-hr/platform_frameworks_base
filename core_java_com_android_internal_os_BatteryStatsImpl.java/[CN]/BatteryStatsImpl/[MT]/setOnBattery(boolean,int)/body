{
synchronized (this) {
    updateKernelWakelocksLocked();
    if (mOnBattery != onBattery) {
      mOnBattery=mOnBatteryInternal=onBattery;
      long uptime=SystemClock.uptimeMillis() * 1000;
      long mSecRealtime=SystemClock.elapsedRealtime();
      long realtime=mSecRealtime * 1000;
      if (onBattery) {
        clearHistory();
        mHistoryCur.batteryLevel=(byte)level;
        mHistoryCur.states&=~BatteryHistoryRecord.STATE_BATTERY_PLUGGED_FLAG;
        if (DEBUG_HISTORY)         Slog.v(TAG,"Battery unplugged to: " + Integer.toHexString(mHistoryCur.states));
        addHistoryRecord(mSecRealtime);
        mTrackBatteryUptimeStart=uptime;
        mTrackBatteryRealtimeStart=realtime;
        mUnpluggedBatteryUptime=getBatteryUptimeLocked(uptime);
        mUnpluggedBatteryRealtime=getBatteryRealtimeLocked(realtime);
        mDischargeCurrentLevel=mDischargeStartLevel=level;
        doUnplug(mUnpluggedBatteryUptime,mUnpluggedBatteryRealtime);
      }
 else {
        mHistoryCur.batteryLevel=(byte)level;
        mHistoryCur.states|=BatteryHistoryRecord.STATE_BATTERY_PLUGGED_FLAG;
        if (DEBUG_HISTORY)         Slog.v(TAG,"Battery plugged to: " + Integer.toHexString(mHistoryCur.states));
        addHistoryRecord(mSecRealtime);
        mTrackBatteryPastUptime+=uptime - mTrackBatteryUptimeStart;
        mTrackBatteryPastRealtime+=realtime - mTrackBatteryRealtimeStart;
        mDischargeCurrentLevel=level;
        doPlug(getBatteryUptimeLocked(uptime),getBatteryRealtimeLocked(realtime));
      }
      if ((mLastWriteTime + (60 * 1000)) < mSecRealtime) {
        if (mFile != null) {
          writeLocked();
        }
      }
    }
  }
}
