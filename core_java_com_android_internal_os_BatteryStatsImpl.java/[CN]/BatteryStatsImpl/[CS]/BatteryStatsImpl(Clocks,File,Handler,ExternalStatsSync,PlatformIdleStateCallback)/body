{
  init(clocks);
  if (systemDir != null) {
    mFile=new JournaledFile(new File(systemDir,"batterystats.bin"),new File(systemDir,"batterystats.bin.tmp"));
  }
 else {
    mFile=null;
  }
  mCheckinFile=new AtomicFile(new File(systemDir,"batterystats-checkin.bin"));
  mDailyFile=new AtomicFile(new File(systemDir,"batterystats-daily.xml"));
  mExternalSync=externalSync;
  mHandler=new MyHandler(handler.getLooper());
  mStartCount++;
  mScreenOnTimer=new StopwatchTimer(mClocks,null,-1,null,mOnBatteryTimeBase);
  for (int i=0; i < NUM_SCREEN_BRIGHTNESS_BINS; i++) {
    mScreenBrightnessTimer[i]=new StopwatchTimer(mClocks,null,-100 - i,null,mOnBatteryTimeBase);
  }
  mInteractiveTimer=new StopwatchTimer(mClocks,null,-10,null,mOnBatteryTimeBase);
  mPowerSaveModeEnabledTimer=new StopwatchTimer(mClocks,null,-2,null,mOnBatteryTimeBase);
  mDeviceIdleModeLightTimer=new StopwatchTimer(mClocks,null,-11,null,mOnBatteryTimeBase);
  mDeviceIdleModeFullTimer=new StopwatchTimer(mClocks,null,-14,null,mOnBatteryTimeBase);
  mDeviceLightIdlingTimer=new StopwatchTimer(mClocks,null,-15,null,mOnBatteryTimeBase);
  mDeviceIdlingTimer=new StopwatchTimer(mClocks,null,-12,null,mOnBatteryTimeBase);
  mPhoneOnTimer=new StopwatchTimer(mClocks,null,-3,null,mOnBatteryTimeBase);
  for (int i=0; i < SignalStrength.NUM_SIGNAL_STRENGTH_BINS; i++) {
    mPhoneSignalStrengthsTimer[i]=new StopwatchTimer(mClocks,null,-200 - i,null,mOnBatteryTimeBase);
  }
  mPhoneSignalScanningTimer=new StopwatchTimer(mClocks,null,-200 + 1,null,mOnBatteryTimeBase);
  for (int i=0; i < NUM_DATA_CONNECTION_TYPES; i++) {
    mPhoneDataConnectionsTimer[i]=new StopwatchTimer(mClocks,null,-300 - i,null,mOnBatteryTimeBase);
  }
  for (int i=0; i < NUM_NETWORK_ACTIVITY_TYPES; i++) {
    mNetworkByteActivityCounters[i]=new LongSamplingCounter(mOnBatteryTimeBase);
    mNetworkPacketActivityCounters[i]=new LongSamplingCounter(mOnBatteryTimeBase);
  }
  mWifiActivity=new ControllerActivityCounterImpl(mOnBatteryTimeBase,NUM_WIFI_TX_LEVELS);
  mBluetoothActivity=new ControllerActivityCounterImpl(mOnBatteryTimeBase,NUM_BT_TX_LEVELS);
  mModemActivity=new ControllerActivityCounterImpl(mOnBatteryTimeBase,ModemActivityInfo.TX_POWER_LEVELS);
  mMobileRadioActiveTimer=new StopwatchTimer(mClocks,null,-400,null,mOnBatteryTimeBase);
  mMobileRadioActivePerAppTimer=new StopwatchTimer(mClocks,null,-401,null,mOnBatteryTimeBase);
  mMobileRadioActiveAdjustedTime=new LongSamplingCounter(mOnBatteryTimeBase);
  mMobileRadioActiveUnknownTime=new LongSamplingCounter(mOnBatteryTimeBase);
  mMobileRadioActiveUnknownCount=new LongSamplingCounter(mOnBatteryTimeBase);
  mWifiOnTimer=new StopwatchTimer(mClocks,null,-4,null,mOnBatteryTimeBase);
  mGlobalWifiRunningTimer=new StopwatchTimer(mClocks,null,-5,null,mOnBatteryTimeBase);
  for (int i=0; i < NUM_WIFI_STATES; i++) {
    mWifiStateTimer[i]=new StopwatchTimer(mClocks,null,-600 - i,null,mOnBatteryTimeBase);
  }
  for (int i=0; i < NUM_WIFI_SUPPL_STATES; i++) {
    mWifiSupplStateTimer[i]=new StopwatchTimer(mClocks,null,-700 - i,null,mOnBatteryTimeBase);
  }
  for (int i=0; i < NUM_WIFI_SIGNAL_STRENGTH_BINS; i++) {
    mWifiSignalStrengthsTimer[i]=new StopwatchTimer(mClocks,null,-800 - i,null,mOnBatteryTimeBase);
  }
  mAudioOnTimer=new StopwatchTimer(mClocks,null,-7,null,mOnBatteryTimeBase);
  mVideoOnTimer=new StopwatchTimer(mClocks,null,-8,null,mOnBatteryTimeBase);
  mFlashlightOnTimer=new StopwatchTimer(mClocks,null,-9,null,mOnBatteryTimeBase);
  mCameraOnTimer=new StopwatchTimer(mClocks,null,-13,null,mOnBatteryTimeBase);
  mBluetoothScanTimer=new StopwatchTimer(mClocks,null,-14,null,mOnBatteryTimeBase);
  mOnBattery=mOnBatteryInternal=false;
  long uptime=mClocks.uptimeMillis() * 1000;
  long realtime=mClocks.elapsedRealtime() * 1000;
  initTimes(uptime,realtime);
  mStartPlatformVersion=mEndPlatformVersion=Build.ID;
  mDischargeStartLevel=0;
  mDischargeUnplugLevel=0;
  mDischargePlugLevel=-1;
  mDischargeCurrentLevel=0;
  mCurrentBatteryLevel=0;
  initDischarge();
  clearHistoryLocked();
  updateDailyDeadlineLocked();
  mPlatformIdleStateCallback=cb;
}
