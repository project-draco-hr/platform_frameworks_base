{
  mFile=new File(filename);
  mBackupFile=new File(filename + ".bak");
  mStartCount++;
  mScreenOnTimer=new StopwatchTimer(-1,null,mUnpluggables);
  for (int i=0; i < NUM_SCREEN_BRIGHTNESS_BINS; i++) {
    mScreenBrightnessTimer[i]=new StopwatchTimer(-100 - i,null,mUnpluggables);
  }
  mInputEventCounter=new Counter(mUnpluggables);
  mPhoneOnTimer=new StopwatchTimer(-2,null,mUnpluggables);
  for (int i=0; i < NUM_SIGNAL_STRENGTH_BINS; i++) {
    mPhoneSignalStrengthsTimer[i]=new StopwatchTimer(-200 - i,null,mUnpluggables);
  }
  mPhoneSignalScanningTimer=new StopwatchTimer(-200 + 1,null,mUnpluggables);
  for (int i=0; i < NUM_DATA_CONNECTION_TYPES; i++) {
    mPhoneDataConnectionsTimer[i]=new StopwatchTimer(-300 - i,null,mUnpluggables);
  }
  mWifiOnTimer=new StopwatchTimer(-3,null,mUnpluggables);
  mWifiRunningTimer=new StopwatchTimer(-4,null,mUnpluggables);
  mBluetoothOnTimer=new StopwatchTimer(-5,null,mUnpluggables);
  mAudioOnTimer=new StopwatchTimer(-6,null,mUnpluggables);
  mOnBattery=mOnBatteryInternal=false;
  mTrackBatteryPastUptime=0;
  mTrackBatteryPastRealtime=0;
  mUptimeStart=mTrackBatteryUptimeStart=SystemClock.uptimeMillis() * 1000;
  mRealtimeStart=mTrackBatteryRealtimeStart=SystemClock.elapsedRealtime() * 1000;
  mUnpluggedBatteryUptime=getBatteryUptimeLocked(mUptimeStart);
  mUnpluggedBatteryRealtime=getBatteryRealtimeLocked(mRealtimeStart);
  mDischargeStartLevel=0;
  mDischargeCurrentLevel=0;
}
