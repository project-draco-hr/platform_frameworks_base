{
  super.onAttachedToWindow();
  DisplayMetrics metrics=new DisplayMetrics();
  mWindowManager.getDefaultDisplay().getMetrics(metrics);
  float density=metrics.density;
  final ViewGroup clingLayout=(ViewGroup)View.inflate(getContext(),R.layout.transient_navigation_cling,null);
  final Button ok=(Button)clingLayout.findViewById(R.id.ok);
  ok.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      mConfirm.run();
    }
  }
);
  addView(clingLayout,new FrameLayout.LayoutParams(FrameLayout.LayoutParams.MATCH_PARENT,FrameLayout.LayoutParams.WRAP_CONTENT));
  if (ActivityManager.isHighEndGfx()) {
    final View bubble=clingLayout.findViewById(R.id.text);
    bubble.setAlpha(0f);
    bubble.setTranslationY(-OFFSET_DP * density);
    bubble.animate().alpha(1f).translationY(0).setDuration(300).setInterpolator(new DecelerateInterpolator()).start();
    ok.setAlpha(0f);
    ok.setTranslationY(-OFFSET_DP * density);
    ok.animate().alpha(1f).translationY(0).setDuration(300).setStartDelay(200).setInterpolator(new DecelerateInterpolator()).start();
    mColorAnim=ValueAnimator.ofObject(new ArgbEvaluator(),0,BGCOLOR);
    mColorAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){
      @Override public void onAnimationUpdate(      ValueAnimator animation){
        final int c=(Integer)animation.getAnimatedValue();
        mColor.setColor(c);
      }
    }
);
    mColorAnim.setDuration(1000);
    mColorAnim.start();
  }
 else {
    mColor.setColor(BGCOLOR);
  }
}
