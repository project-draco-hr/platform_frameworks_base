{
  SystemServicesProxy ssp=Recents.getSystemServices();
  Rect systemInsets=new Rect();
  ssp.getStableInsets(systemInsets);
  Rect windowRect=ssp.getWindowRect();
  calculateWindowStableInsets(systemInsets,windowRect);
  windowRect.offsetTo(0,0);
  Recents.getConfiguration().update(systemInsets);
  TaskStackLayoutAlgorithm stackLayout=mDummyStackView.getStackAlgorithm();
  if (RecentsDebugFlags.Static.EnableSearchBar && tryAndBindSearchWidget) {
    if (ssp.getOrBindSearchAppWidget(mContext,mAppWidgetHost) != null) {
      stackLayout.getSearchBarBounds(windowRect,mStatusBarHeight,mSearchBarBounds);
    }
  }
  stackLayout.getTaskStackBounds(windowRect,systemInsets.top,systemInsets.right,mSearchBarBounds,mTaskStackBounds);
  Rect taskStackBounds=new Rect(mTaskStackBounds);
  stackLayout.setSystemInsets(systemInsets);
  if (stack != null) {
    stackLayout.initialize(windowRect,taskStackBounds,TaskStackLayoutAlgorithm.StackState.getStackStateForStack(stack));
    mDummyStackView.setTasks(stack,false,false,false);
  }
  Rect taskViewBounds=stackLayout.getUntransformedTaskViewBounds();
  if (!taskViewBounds.equals(mLastTaskViewBounds)) {
    mLastTaskViewBounds.set(taskViewBounds);
    int taskViewWidth=taskViewBounds.width();
synchronized (mHeaderBarLock) {
      mHeaderBar.measure(View.MeasureSpec.makeMeasureSpec(taskViewWidth,View.MeasureSpec.EXACTLY),View.MeasureSpec.makeMeasureSpec(mTaskBarHeight,View.MeasureSpec.EXACTLY));
      mHeaderBar.layout(0,0,taskViewWidth,mTaskBarHeight);
    }
  }
}
