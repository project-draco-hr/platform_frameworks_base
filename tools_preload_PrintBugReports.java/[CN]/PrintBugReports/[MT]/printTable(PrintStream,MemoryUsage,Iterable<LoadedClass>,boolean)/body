{
  out.println("<p><table border=\"1\" cellpadding=\"5\"" + " class=\"sortable\" cellspacing=\"0\">");
  out.println("<thead bgcolor=\"#eeeeee\"><tr>");
  out.println("<th>Name</th>");
  out.println("<th>Preloaded</th>");
  out.println("<th>Total Time (us)</th>");
  out.println("<th>Load Time (us)</th>");
  out.println("<th>Init Time (us)</th>");
  if (PRINT_MEMORY_USAGE) {
    out.println("<th>Total Heap (B)</th>");
    out.println("<th>Dalvik Heap (B)</th>");
    out.println("<th>Native Heap (B)</th>");
    out.println("<th>Total Pages (kB)</th>");
    out.println("<th>Dalvik Pages (kB)</th>");
    out.println("<th>Native Pages (kB)</th>");
    out.println("<th>Other Pages (kB)</th>");
  }
  if (showProcNames) {
    out.println("<th>Loaded by</th>");
  }
  out.println("</tr></thead>");
  for (  LoadedClass clazz : classes) {
    out.println("<tr>");
    out.println("<td>" + clazz.name + "</td>");
    out.println("<td>" + ((clazz.systemClass) ? ((clazz.preloaded) ? "yes" : "no") : "n/a") + "</td>");
    out.println("<td>" + clazz.medianTimeMicros() + "</td>");
    out.println("<td>" + clazz.medianLoadTimeMicros() + "</td>");
    out.println("<td>" + clazz.medianInitTimeMicros() + "</td>");
    if (PRINT_MEMORY_USAGE) {
      if (clazz.memoryUsage.isAvailable()) {
        MemoryUsage subtracted=clazz.memoryUsage.subtract(baseline);
        long totalHeap=subtracted.javaHeapSize() + subtracted.nativeHeapSize;
        out.println("<td>" + totalHeap + "</td>");
        out.println("<td>" + subtracted.javaHeapSize() + "</td>");
        out.println("<td>" + subtracted.nativeHeapSize + "</td>");
        out.println("<td>" + subtracted.totalPages() + "</td>");
        out.println("<td>" + subtracted.javaPagesInK() + "</td>");
        out.println("<td>" + subtracted.nativePagesInK() + "</td>");
        out.println("<td>" + subtracted.otherPagesInK() + "</td>");
      }
 else {
        for (int i=0; i < 7; i++) {
          out.println("<td>&nbsp;</td>");
        }
      }
    }
    if (showProcNames) {
      out.println("<td>");
      Set<String> procNames=new TreeSet<String>();
      for (      Operation op : clazz.loads) {
        procNames.add(op.process.name);
      }
      for (      Operation op : clazz.initializations) {
        procNames.add(op.process.name);
      }
      if (procNames.size() <= 3) {
        for (        String name : procNames) {
          out.print(name + "<br/>");
        }
      }
 else {
        Iterator<String> i=procNames.iterator();
        out.print(i.next() + "<br/>");
        out.print(i.next() + "<br/>");
        out.print("...and " + (procNames.size() - 2) + " others.");
      }
      out.println("</td>");
    }
    out.println("</tr>");
  }
  out.println("</table></p>");
}
