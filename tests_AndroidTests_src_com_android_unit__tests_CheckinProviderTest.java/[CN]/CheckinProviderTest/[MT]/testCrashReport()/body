{
  long start=System.currentTimeMillis();
  ContentResolver r=getContext().getContentResolver();
  Checkin.reportCrash(r,new CrashData("Test","Test Activity",new BuildData("Test Build","123",start),new ThrowableData(new RuntimeException("Test Exception"))));
  Cursor c=r.query(Checkin.Crashes.CONTENT_URI,null,null,null,null);
  Uri uri=null;
  while (c.moveToNext()) {
    String coded=c.getString(c.getColumnIndex(Checkin.Crashes.DATA));
    byte[] bytes=Base64.decodeBase64(coded.getBytes());
    CrashData crash=new CrashData(new DataInputStream(new ByteArrayInputStream(bytes)));
    if (crash.getId().equals("Test") && crash.getTime() > start) {
      assertEquals("Test Activity",crash.getActivity());
      assertEquals("Test Build",crash.getBuildData().getFingerprint());
      assertEquals("Test Exception",crash.getThrowableData().getMessage());
      assertNull(uri);
      uri=ContentUris.withAppendedId(Checkin.Crashes.CONTENT_URI,c.getInt(c.getColumnIndex(Checkin.Crashes._ID)));
    }
  }
  assertNotNull(uri);
  c.close();
  ContentValues values=new ContentValues();
  values.put(Checkin.Crashes.LOGS,"Test Logs");
  assertEquals(1,r.update(uri,values,null,null));
  c=r.query(uri,null,null,null,null);
  assertTrue(c.moveToNext());
  String logs=c.getString(c.getColumnIndex(Checkin.Crashes.LOGS));
  assertEquals("Test Logs",logs);
  c.deleteRow();
  c.close();
  c.requery();
  assertFalse(c.moveToNext());
  c.close();
}
