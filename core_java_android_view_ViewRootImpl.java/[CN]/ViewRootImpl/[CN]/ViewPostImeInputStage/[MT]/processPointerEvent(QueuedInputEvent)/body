{
  final MotionEvent event=(MotionEvent)q.mEvent;
  if (event.getPointerCount() == 1 && event.isFromSource(InputDevice.SOURCE_MOUSE)) {
    if (event.getActionMasked() == MotionEvent.ACTION_HOVER_ENTER || event.getActionMasked() == MotionEvent.ACTION_HOVER_EXIT) {
      mPointerIconShape=PointerIcon.STYLE_NOT_SPECIFIED;
    }
    if (event.getActionMasked() != MotionEvent.ACTION_HOVER_EXIT) {
      if (!updatePointerIcon(event) && event.getActionMasked() == MotionEvent.ACTION_HOVER_MOVE) {
        mPointerIconShape=PointerIcon.STYLE_NOT_SPECIFIED;
      }
    }
  }
  mAttachInfo.mUnbufferedDispatchRequested=false;
  final View eventTarget=(event.isFromSource(InputDevice.SOURCE_MOUSE) && mCapturingView != null) ? mCapturingView : mView;
  boolean handled=eventTarget.dispatchPointerEvent(event);
  if (mAttachInfo.mUnbufferedDispatchRequested && !mUnbufferedInputDispatch) {
    mUnbufferedInputDispatch=true;
    if (mConsumeBatchedInputScheduled) {
      scheduleConsumeBatchedInputImmediately();
    }
  }
  return handled ? FINISH_HANDLED : FORWARD;
}
