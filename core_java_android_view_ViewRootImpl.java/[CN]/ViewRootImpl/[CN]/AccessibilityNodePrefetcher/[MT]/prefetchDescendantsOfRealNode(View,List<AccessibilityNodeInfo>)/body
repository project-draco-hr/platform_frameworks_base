{
  if (root instanceof ViewGroup) {
    ViewGroup rootGroup=(ViewGroup)root;
    HashMap<View,AccessibilityNodeInfo> addedChildren=new HashMap<View,AccessibilityNodeInfo>();
    final int childCount=rootGroup.getChildCount();
    for (int i=0; i < childCount; i++) {
      View child=rootGroup.getChildAt(i);
      if (child.getVisibility() == View.VISIBLE && outInfos.size() < MAX_ACCESSIBILITY_NODE_INFO_BATCH_SIZE) {
        final long childNodeId=AccessibilityNodeInfo.makeNodeId(child.getAccessibilityViewId(),AccessibilityNodeInfo.UNDEFINED);
        AccessibilityNodeProvider provider=child.getAccessibilityNodeProvider();
        if (provider == null) {
          AccessibilityNodeInfo info=child.createAccessibilityNodeInfo();
          if (info != null) {
            outInfos.add(info);
            addedChildren.put(child,null);
          }
        }
 else {
          AccessibilityNodeInfo info=provider.createAccessibilityNodeInfo(AccessibilityNodeInfo.UNDEFINED);
          if (info != null) {
            outInfos.add(info);
            addedChildren.put(child,info);
          }
        }
      }
    }
    if (outInfos.size() < MAX_ACCESSIBILITY_NODE_INFO_BATCH_SIZE) {
      for (      Map.Entry<View,AccessibilityNodeInfo> entry : addedChildren.entrySet()) {
        View addedChild=entry.getKey();
        AccessibilityNodeInfo virtualRoot=entry.getValue();
        if (virtualRoot == null) {
          prefetchDescendantsOfRealNode(addedChild,outInfos);
        }
 else {
          AccessibilityNodeProvider provider=addedChild.getAccessibilityNodeProvider();
          prefetchDescendantsOfVirtualNode(virtualRoot,provider,outInfos);
        }
      }
    }
  }
}
