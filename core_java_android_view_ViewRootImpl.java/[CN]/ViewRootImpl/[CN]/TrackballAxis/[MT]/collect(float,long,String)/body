{
  long normTime;
  if (off > 0) {
    normTime=(long)(off * FAST_MOVE_TIME);
    if (dir < 0) {
      if (DEBUG_TRACKBALL)       Log.v(TAG,axis + " reversed to positive!");
      position=0;
      step=0;
      acceleration=1;
      lastMoveTime=0;
    }
    dir=1;
  }
 else   if (off < 0) {
    normTime=(long)((-off) * FAST_MOVE_TIME);
    if (dir > 0) {
      if (DEBUG_TRACKBALL)       Log.v(TAG,axis + " reversed to negative!");
      position=0;
      step=0;
      acceleration=1;
      lastMoveTime=0;
    }
    dir=-1;
  }
 else {
    normTime=0;
  }
  if (normTime > 0) {
    long delta=time - lastMoveTime;
    lastMoveTime=time;
    float acc=acceleration;
    if (delta < normTime) {
      float scale=(normTime - delta) * ACCEL_MOVE_SCALING_FACTOR;
      if (scale > 1)       acc*=scale;
      if (DEBUG_TRACKBALL)       Log.v(TAG,axis + " accelerate: off=" + off+ " normTime="+ normTime+ " delta="+ delta+ " scale="+ scale+ " acc="+ acc);
      acceleration=acc < MAX_ACCELERATION ? acc : MAX_ACCELERATION;
    }
 else {
      float scale=(delta - normTime) * ACCEL_MOVE_SCALING_FACTOR;
      if (scale > 1)       acc/=scale;
      if (DEBUG_TRACKBALL)       Log.v(TAG,axis + " deccelerate: off=" + off+ " normTime="+ normTime+ " delta="+ delta+ " scale="+ scale+ " acc="+ acc);
      acceleration=acc > 1 ? acc : 1;
    }
  }
  position+=off;
  return Math.abs(position);
}
