{
  SomeArgs args=(SomeArgs)message.obj;
  final int accessibilityId=args.argi1;
  final int action=args.argi2;
  final int interactionId=args.argi3;
  final IAccessibilityInteractionConnectionCallback callback=(IAccessibilityInteractionConnectionCallback)args.arg1;
  mPool.release(args);
  boolean succeeded=false;
  try {
switch (action) {
case AccessibilityNodeInfo.ACTION_FOCUS:
{
        succeeded=performActionFocus(accessibilityId);
      }
    break;
case AccessibilityNodeInfo.ACTION_CLEAR_FOCUS:
{
    succeeded=performActionClearFocus(accessibilityId);
  }
break;
case AccessibilityNodeInfo.ACTION_SELECT:
{
succeeded=performActionSelect(accessibilityId);
}
break;
case AccessibilityNodeInfo.ACTION_CLEAR_SELECTION:
{
succeeded=performActionClearSelection(accessibilityId);
}
break;
}
}
  finally {
try {
callback.setPerformAccessibilityActionResult(succeeded,interactionId);
}
 catch (RemoteException re) {
}
}
}
