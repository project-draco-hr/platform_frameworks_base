{
  SomeArgs args=(SomeArgs)message.obj;
  final String text=(String)args.arg1;
  final int accessibilityViewId=args.argi1;
  final int virtualDescendantId=args.argi2;
  final int interactionId=args.argi3;
  final IAccessibilityInteractionConnectionCallback callback=(IAccessibilityInteractionConnectionCallback)args.arg2;
  mPool.release(args);
  List<AccessibilityNodeInfo> infos=null;
  try {
    View target;
    if (accessibilityViewId != AccessibilityNodeInfo.UNDEFINED) {
      target=findViewByAccessibilityId(accessibilityViewId);
    }
 else {
      target=ViewRootImpl.this.mView;
    }
    if (target != null && isDisplayedOnScreen(target)) {
      AccessibilityNodeProvider provider=target.getAccessibilityNodeProvider();
      if (provider != null) {
        infos=provider.findAccessibilityNodeInfosByText(text,virtualDescendantId);
      }
 else       if (virtualDescendantId == AccessibilityNodeInfo.UNDEFINED) {
        ArrayList<View> foundViews=mAttachInfo.mFocusablesTempList;
        foundViews.clear();
        target.findViewsWithText(foundViews,text,View.FIND_VIEWS_WITH_TEXT | View.FIND_VIEWS_WITH_CONTENT_DESCRIPTION | View.FIND_VIEWS_WITH_ACCESSIBILITY_NODE_PROVIDERS);
        if (!foundViews.isEmpty()) {
          infos=mTempAccessibilityNodeInfoList;
          infos.clear();
          final int viewCount=foundViews.size();
          for (int i=0; i < viewCount; i++) {
            View foundView=foundViews.get(i);
            if (isDisplayedOnScreen(foundView)) {
              provider=foundView.getAccessibilityNodeProvider();
              if (provider != null) {
                List<AccessibilityNodeInfo> infosFromProvider=provider.findAccessibilityNodeInfosByText(text,virtualDescendantId);
                if (infosFromProvider != null) {
                  infos.addAll(infosFromProvider);
                }
              }
 else {
                infos.add(foundView.createAccessibilityNodeInfo());
              }
            }
          }
        }
      }
    }
  }
  finally {
    try {
      callback.setFindAccessibilityNodeInfosResult(infos,interactionId);
    }
 catch (    RemoteException re) {
    }
  }
}
