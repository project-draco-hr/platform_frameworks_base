{
  final View focusedHost=mAccessibilityFocusedHost;
  if (focusedHost == null || mAccessibilityFocusedVirtualView == null) {
    return;
  }
  final AccessibilityNodeProvider provider=focusedHost.getAccessibilityNodeProvider();
  if (provider == null) {
    mAccessibilityFocusedHost=null;
    mAccessibilityFocusedVirtualView=null;
    focusedHost.clearAccessibilityFocusNoCallbacks();
    return;
  }
  final int changes=event.getContentChangeTypes();
  if ((changes & AccessibilityEvent.CONTENT_CHANGE_TYPE_SUBTREE) == 0 && changes != AccessibilityEvent.CONTENT_CHANGE_TYPE_UNDEFINED) {
    return;
  }
  final long eventSourceNodeId=event.getSourceNodeId();
  final int changedViewId=AccessibilityNodeInfo.getAccessibilityViewId(eventSourceNodeId);
  boolean hostInSubtree=false;
  View root=mAccessibilityFocusedHost;
  while (root != null && !hostInSubtree) {
    if (changedViewId == root.getAccessibilityViewId()) {
      hostInSubtree=true;
    }
 else {
      final ViewParent parent=root.getParent();
      if (parent instanceof View) {
        root=(View)parent;
      }
 else {
        root=null;
      }
    }
  }
  if (!hostInSubtree) {
    return;
  }
  final long focusedSourceNodeId=mAccessibilityFocusedVirtualView.getSourceNodeId();
  int focusedChildId=AccessibilityNodeInfo.getVirtualDescendantId(focusedSourceNodeId);
  if (focusedChildId == AccessibilityNodeInfo.UNDEFINED_ITEM_ID) {
    focusedChildId=AccessibilityNodeProvider.HOST_VIEW_ID;
  }
  final Rect oldBounds=mTempRect;
  mAccessibilityFocusedVirtualView.getBoundsInScreen(oldBounds);
  mAccessibilityFocusedVirtualView=provider.createAccessibilityNodeInfo(focusedChildId);
  if (mAccessibilityFocusedVirtualView == null) {
    mAccessibilityFocusedHost=null;
    focusedHost.clearAccessibilityFocusNoCallbacks();
    provider.performAction(focusedChildId,AccessibilityAction.ACTION_CLEAR_ACCESSIBILITY_FOCUS.getId(),null);
    invalidateRectOnScreen(oldBounds);
  }
 else {
    final Rect newBounds=mAccessibilityFocusedVirtualView.getBoundsInScreen();
    if (!oldBounds.equals(newBounds)) {
      oldBounds.union(newBounds);
      invalidateRectOnScreen(oldBounds);
    }
  }
}
