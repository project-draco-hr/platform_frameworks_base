{
  while (mCurrentInputEvent == null && mFirstPendingInputEvent != null) {
    QueuedInputEvent q=mFirstPendingInputEvent;
    mFirstPendingInputEvent=q.mNext;
    q.mNext=null;
    mCurrentInputEvent=q;
    mPendingInputEventCount-=1;
    Trace.traceCounter(Trace.TRACE_TAG_INPUT,mPendingInputEventQueueLengthCounterName,mPendingInputEventCount);
    final int result=deliverInputEvent(q);
    if (result != EVENT_IN_PROGRESS) {
      finishCurrentInputEvent(result == EVENT_HANDLED);
    }
  }
  if (mProcessInputEventsScheduled) {
    mProcessInputEventsScheduled=false;
    mHandler.removeMessages(MSG_PROCESS_INPUT_EVENTS);
  }
}
