{
  while (mPendingInputEventHead != null) {
    QueuedInputEvent q=mPendingInputEventHead;
    mPendingInputEventHead=q.mNext;
    if (mPendingInputEventHead == null) {
      mPendingInputEventTail=null;
    }
    q.mNext=null;
    mPendingInputEventCount-=1;
    Trace.traceCounter(Trace.TRACE_TAG_INPUT,mPendingInputEventQueueLengthCounterName,mPendingInputEventCount);
    long eventTime=q.mEvent.getEventTimeNano();
    long oldestEventTime=eventTime;
    if (q.mEvent instanceof MotionEvent) {
      MotionEvent me=(MotionEvent)q.mEvent;
      if (me.getHistorySize() > 0) {
        oldestEventTime=me.getHistoricalEventTimeNano(0);
      }
    }
    mChoreographer.mFrameInfo.updateInputEventTime(eventTime,oldestEventTime);
    deliverInputEvent(q);
  }
  if (mProcessInputEventsScheduled) {
    mProcessInputEventsScheduled=false;
    mHandler.removeMessages(MSG_PROCESS_INPUT_EVENTS);
  }
}
