{
  while (mPendingInputEventHead != null) {
    QueuedInputEvent q=mPendingInputEventHead;
    mPendingInputEventHead=q.mNext;
    if (mPendingInputEventHead == null) {
      mPendingInputEventTail=null;
    }
    q.mNext=null;
    mPendingInputEventCount-=1;
    Trace.traceCounter(Trace.TRACE_TAG_INPUT,mPendingInputEventQueueLengthCounterName,mPendingInputEventCount);
    int result=deliverInputEvent(q);
    if (result == EVENT_HANDLED || result == EVENT_NOT_HANDLED) {
      finishInputEvent(q,result == EVENT_HANDLED);
    }
 else     if (result == EVENT_PENDING_IME) {
      enqueueActiveInputEvent(q);
    }
 else {
      q.mFlags|=QueuedInputEvent.FLAG_DELIVER_POST_IME;
      if (mActiveInputEventHead == null) {
        result=deliverInputEventPostIme(q);
        finishInputEvent(q,result == EVENT_HANDLED);
      }
 else {
        enqueueActiveInputEvent(q);
      }
    }
  }
  if (mProcessInputEventsScheduled) {
    mProcessInputEventsScheduled=false;
    mHandler.removeMessages(MSG_PROCESS_INPUT_EVENTS);
  }
}
