{
  if (mTraversalScheduled) {
    mTraversalScheduled=false;
    mHandler.getLooper().removeSyncBarrier(mTraversalBarrier);
    doConsumeBatchedInput(false);
    doProcessInputEvents();
    if (mProfile) {
      Debug.startMethodTracing("ViewAncestor");
    }
    final long traversalStartTime;
    if (ViewDebug.DEBUG_LATENCY) {
      traversalStartTime=System.nanoTime();
      if (mLastTraversalFinishedTimeNanos != 0) {
        Log.d(ViewDebug.DEBUG_LATENCY_TAG,"Starting performTraversals(); it has been " + ((traversalStartTime - mLastTraversalFinishedTimeNanos) * 0.000001f) + "ms since the last traversals finished.");
      }
 else {
        Log.d(ViewDebug.DEBUG_LATENCY_TAG,"Starting performTraversals().");
      }
    }
    Trace.traceBegin(Trace.TRACE_TAG_VIEW,"performTraversals");
    try {
      performTraversals();
    }
  finally {
      Trace.traceEnd(Trace.TRACE_TAG_VIEW);
    }
    if (ViewDebug.DEBUG_LATENCY) {
      long now=System.nanoTime();
      Log.d(ViewDebug.DEBUG_LATENCY_TAG,"performTraversals() took " + ((now - traversalStartTime) * 0.000001f) + "ms.");
      mLastTraversalFinishedTimeNanos=now;
    }
    if (mProfile) {
      Debug.stopMethodTracing();
      mProfile=false;
    }
  }
}
