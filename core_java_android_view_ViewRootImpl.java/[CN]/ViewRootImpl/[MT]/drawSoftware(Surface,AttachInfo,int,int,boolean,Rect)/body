{
  final Canvas canvas;
  try {
    final int left=dirty.left;
    final int top=dirty.top;
    final int right=dirty.right;
    final int bottom=dirty.bottom;
    canvas=mSurface.lockCanvas(dirty);
    if (left != dirty.left || top != dirty.top || right != dirty.right || bottom != dirty.bottom) {
      attachInfo.mIgnoreDirtyState=true;
    }
    canvas.setDensity(mDensity);
  }
 catch (  Surface.OutOfResourcesException e) {
    handleOutOfResourcesException(e);
    return false;
  }
catch (  IllegalArgumentException e) {
    Log.e(mTag,"Could not lock surface",e);
    mLayoutRequested=true;
    return false;
  }
  try {
    if (DEBUG_ORIENTATION || DEBUG_DRAW) {
      Log.v(mTag,"Surface " + surface + " drawing to bitmap w="+ canvas.getWidth()+ ", h="+ canvas.getHeight());
    }
    if (!canvas.isOpaque() || yoff != 0 || xoff != 0) {
      canvas.drawColor(0,PorterDuff.Mode.CLEAR);
    }
    dirty.setEmpty();
    mIsAnimating=false;
    mView.mPrivateFlags|=View.PFLAG_DRAWN;
    if (DEBUG_DRAW) {
      Context cxt=mView.getContext();
      Log.i(mTag,"Drawing: package:" + cxt.getPackageName() + ", metrics="+ cxt.getResources().getDisplayMetrics()+ ", compatibilityInfo="+ cxt.getResources().getCompatibilityInfo());
    }
    try {
      canvas.translate(-xoff,-yoff);
      if (mTranslator != null) {
        mTranslator.translateCanvas(canvas);
      }
      canvas.setScreenDensity(scalingRequired ? mNoncompatDensity : 0);
      attachInfo.mSetIgnoreDirtyState=false;
      mView.draw(canvas);
      drawAccessibilityFocusedDrawableIfNeeded(canvas);
    }
  finally {
      if (!attachInfo.mSetIgnoreDirtyState) {
        attachInfo.mIgnoreDirtyState=false;
      }
    }
  }
  finally {
    try {
      surface.unlockCanvasAndPost(canvas);
    }
 catch (    IllegalArgumentException e) {
      Log.e(mTag,"Could not unlock surface",e);
      mLayoutRequested=true;
      return false;
    }
    if (LOCAL_LOGV) {
      Log.v(mTag,"Surface " + surface + " unlockCanvasAndPost");
    }
  }
  return true;
}
