{
  if (LOCAL_LOGV)   Log.v(TAG,"Telling window manager input event is finished");
  if (mFinishedCallback == null) {
    Slog.w(TAG,"Attempted to tell the input queue that the current input event " + "is finished but there is no input event actually in progress.");
    return;
  }
  if (ViewDebug.DEBUG_LATENCY) {
    final long now=System.nanoTime();
    final long eventTime=event.getEventTimeNano();
    final StringBuilder msg=new StringBuilder();
    msg.append("Latency: Spent ");
    msg.append((now - mInputEventReceiveTimeNanos) * 0.000001f);
    msg.append("ms processing ");
    if (event instanceof KeyEvent) {
      final KeyEvent keyEvent=(KeyEvent)event;
      msg.append("key event, action=");
      msg.append(KeyEvent.actionToString(keyEvent.getAction()));
    }
 else {
      final MotionEvent motionEvent=(MotionEvent)event;
      msg.append("motion event, action=");
      msg.append(MotionEvent.actionToString(motionEvent.getAction()));
      msg.append(", historySize=");
      msg.append(motionEvent.getHistorySize());
    }
    msg.append(", handled=");
    msg.append(handled);
    msg.append(", received at +");
    msg.append((mInputEventReceiveTimeNanos - eventTime) * 0.000001f);
    if (mInputEventDeliverTimeNanos != 0) {
      msg.append("ms, delivered at +");
      msg.append((mInputEventDeliverTimeNanos - eventTime) * 0.000001f);
    }
    if (mInputEventDeliverPostImeTimeNanos != 0) {
      msg.append("ms, delivered post IME at +");
      msg.append((mInputEventDeliverPostImeTimeNanos - eventTime) * 0.000001f);
    }
    msg.append("ms, finished at +");
    msg.append((now - eventTime) * 0.000001f);
    msg.append("ms.");
    Log.d(TAG,msg.toString());
  }
  mFinishedCallback.finished(handled);
  mFinishedCallback=null;
}
