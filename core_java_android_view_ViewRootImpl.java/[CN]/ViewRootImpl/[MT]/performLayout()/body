{
  mLayoutRequested=false;
  mScrollMayChange=true;
  final View host=mView;
  if (DEBUG_ORIENTATION || DEBUG_LAYOUT) {
    Log.v(TAG,"Laying out " + host + " to ("+ host.getMeasuredWidth()+ ", "+ host.getMeasuredHeight()+ ")");
  }
  final long startTime;
  if (ViewDebug.DEBUG_PROFILE_LAYOUT) {
    startTime=SystemClock.elapsedRealtime();
  }
  Trace.traceBegin(Trace.TRACE_TAG_VIEW,"layout");
  try {
    host.layout(0,0,host.getMeasuredWidth(),host.getMeasuredHeight());
  }
  finally {
    Trace.traceEnd(Trace.TRACE_TAG_VIEW);
  }
  if (ViewDebug.DEBUG_PROFILE_LAYOUT) {
    EventLog.writeEvent(60001,SystemClock.elapsedRealtime() - startTime);
  }
  if (false && ViewDebug.consistencyCheckEnabled) {
    if (!host.dispatchConsistencyCheck(ViewDebug.CONSISTENCY_LAYOUT)) {
      throw new IllegalStateException("The view hierarchy is an inconsistent state," + "please refer to the logs with the tag " + ViewDebug.CONSISTENCY_LOG_TAG + " for more infomation.");
    }
  }
}
