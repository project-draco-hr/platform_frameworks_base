{
  mLayoutRequested=false;
  mScrollMayChange=true;
  mInLayout=true;
  final View host=mView;
  if (DEBUG_ORIENTATION || DEBUG_LAYOUT) {
    Log.v(TAG,"Laying out " + host + " to ("+ host.getMeasuredWidth()+ ", "+ host.getMeasuredHeight()+ ")");
  }
  Trace.traceBegin(Trace.TRACE_TAG_VIEW,"layout");
  try {
    host.layout(0,0,host.getMeasuredWidth(),host.getMeasuredHeight());
    mInLayout=false;
    int numViewsRequestingLayout=mLayoutRequesters.size();
    if (numViewsRequestingLayout > 0) {
      ArrayList<View> validLayoutRequesters=getValidLayoutRequesters(mLayoutRequesters,false);
      if (validLayoutRequesters != null) {
        mHandlingLayoutInLayoutRequest=true;
        int numValidRequests=validLayoutRequesters.size();
        for (int i=0; i < numValidRequests; ++i) {
          final View view=validLayoutRequesters.get(i);
          Log.w("View","requestLayout() improperly called by " + view + " during layout: running second layout pass");
          view.requestLayout();
        }
        measureHierarchy(host,lp,mView.getContext().getResources(),desiredWindowWidth,desiredWindowHeight);
        mInLayout=true;
        host.layout(0,0,host.getMeasuredWidth(),host.getMeasuredHeight());
        mHandlingLayoutInLayoutRequest=false;
        validLayoutRequesters=getValidLayoutRequesters(mLayoutRequesters,true);
        if (validLayoutRequesters != null) {
          final ArrayList<View> finalRequesters=validLayoutRequesters;
          getRunQueue().post(new Runnable(){
            @Override public void run(){
              int numValidRequests=finalRequesters.size();
              for (int i=0; i < numValidRequests; ++i) {
                final View view=finalRequesters.get(i);
                Log.w("View","requestLayout() improperly called by " + view + " during second layout pass: posting in next frame");
                view.requestLayout();
              }
            }
          }
);
        }
      }
    }
  }
  finally {
    Trace.traceEnd(Trace.TRACE_TAG_VIEW);
  }
  mInLayout=false;
}
