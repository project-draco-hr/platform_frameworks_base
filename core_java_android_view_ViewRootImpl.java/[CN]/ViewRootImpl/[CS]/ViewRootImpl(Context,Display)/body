{
  super();
  if (MEASURE_LATENCY) {
    if (lt == null) {
      lt=new LatencyTimer(100,1000);
    }
  }
  mWindowSession=WindowManagerGlobal.getWindowSession(context.getMainLooper());
  mDisplay=display;
  CompatibilityInfoHolder cih=display.getCompatibilityInfo();
  mCompatibilityInfo=cih != null ? cih : new CompatibilityInfoHolder();
  mThread=Thread.currentThread();
  mLocation=new WindowLeaked(null);
  mLocation.fillInStackTrace();
  mWidth=-1;
  mHeight=-1;
  mDirty=new Rect();
  mTempRect=new Rect();
  mVisRect=new Rect();
  mWinFrame=new Rect();
  mWindow=new W(this);
  mTargetSdkVersion=context.getApplicationInfo().targetSdkVersion;
  mInputMethodCallback=new InputMethodCallback(this);
  mViewVisibility=View.GONE;
  mTransparentRegion=new Region();
  mPreviousTransparentRegion=new Region();
  mFirst=true;
  mAdded=false;
  mAccessibilityManager=AccessibilityManager.getInstance(context);
  mAccessibilityInteractionConnectionManager=new AccessibilityInteractionConnectionManager();
  mAccessibilityManager.addAccessibilityStateChangeListener(mAccessibilityInteractionConnectionManager);
  mAttachInfo=new View.AttachInfo(mWindowSession,mWindow,display,this,mHandler,this);
  mViewConfiguration=ViewConfiguration.get(context);
  mDensity=context.getResources().getDisplayMetrics().densityDpi;
  mNoncompatDensity=context.getResources().getDisplayMetrics().noncompatDensityDpi;
  mFallbackEventHandler=PolicyManager.makeNewFallbackEventHandler(context);
  mChoreographer=Choreographer.getInstance();
  PowerManager powerManager=(PowerManager)context.getSystemService(Context.POWER_SERVICE);
  mAttachInfo.mScreenOn=powerManager.isScreenOn();
  loadSystemProperties();
  mSimulatedDpad=new SimulatedDpad(context);
}
