{
  final SnapTarget snapTarget=mSnapAlgorithm.calculateSnapTarget(position,velocity);
  ValueAnimator anim=ValueAnimator.ofInt(position,snapTarget.position);
  anim.addUpdateListener(new AnimatorUpdateListener(){
    @Override public void onAnimationUpdate(    ValueAnimator animation){
      resizeStack((Integer)animation.getAnimatedValue(),animation.getAnimatedFraction() == 1f ? TASK_POSITION_SAME : snapTarget.position);
    }
  }
);
  anim.addListener(new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator animation){
      commitSnapFlags(snapTarget);
      mWindowManagerProxy.setResizing(false);
      mDockSide=WindowManager.DOCKED_INVALID;
    }
  }
);
  mFlingAnimationUtils.apply(anim,position,snapTarget.position,velocity);
  anim.start();
}
