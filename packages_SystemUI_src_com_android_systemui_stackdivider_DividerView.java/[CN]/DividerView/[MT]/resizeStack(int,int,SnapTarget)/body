{
  calculateBoundsForPosition(position,mDockSide,mDockedRect);
  if (mDockedRect.equals(mLastResizeRect)) {
    return;
  }
  mBackground.invalidate();
  mLastResizeRect.set(mDockedRect);
  if (taskPosition != TASK_POSITION_SAME) {
    calculateBoundsForPosition(position,DockedDividerUtils.invertDockSide(mDockSide),mOtherRect);
    int dockSideInverted=DockedDividerUtils.invertDockSide(mDockSide);
    int taskPositionDocked=restrictDismissingTaskPosition(taskPosition,mDockSide,taskSnapTarget);
    int taskPositionOther=restrictDismissingTaskPosition(taskPosition,dockSideInverted,taskSnapTarget);
    taskPositionDocked=minimizeHoles(position,taskPositionDocked,mDockSide,taskSnapTarget);
    taskPositionOther=minimizeHoles(position,taskPositionOther,dockSideInverted,taskSnapTarget);
    calculateBoundsForPosition(taskPositionDocked,mDockSide,mDockedTaskRect);
    calculateBoundsForPosition(taskPositionOther,dockSideInverted,mOtherTaskRect);
    alignTopLeft(mDockedRect,mDockedTaskRect);
    alignTopLeft(mOtherRect,mOtherTaskRect);
    mDockedInsetRect.set(mDockedTaskRect);
    mOtherInsetRect.set(mOtherTaskRect);
    if (dockSideTopLeft(mDockSide)) {
      alignTopLeft(mDockedRect,mDockedInsetRect);
      alignBottomRight(mOtherRect,mOtherInsetRect);
    }
 else {
      alignBottomRight(mDockedRect,mDockedInsetRect);
      alignTopLeft(mOtherRect,mOtherInsetRect);
    }
    applyDismissingParallax(mDockedTaskRect,mDockSide,taskSnapTarget,position,taskPositionDocked);
    applyDismissingParallax(mOtherTaskRect,dockSideInverted,taskSnapTarget,position,taskPositionOther);
    mWindowManagerProxy.resizeDockedStack(mDockedRect,mDockedTaskRect,mDockedInsetRect,mOtherTaskRect,mOtherInsetRect);
  }
 else {
    mWindowManagerProxy.resizeDockedStack(mDockedRect,null,null,null,null);
  }
  SnapTarget closestDismissTarget=mSnapAlgorithm.getClosestDismissTarget(position);
  float dimFraction=getDimFraction(position,closestDismissTarget);
  mWindowManagerProxy.setResizeDimLayer(dimFraction != 0f,getStackIdForDismissTarget(closestDismissTarget),dimFraction);
}
