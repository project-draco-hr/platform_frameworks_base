{
  final int action=ev.getAction();
  int x, y;
  if (action == MotionEvent.ACTION_DOWN) {
    mGestureAborted=false;
  }
  if (mGestureAborted) {
    return false;
  }
switch (action) {
case MotionEvent.ACTION_DOWN:
    mDownTime=SystemClock.uptimeMillis();
  setPressed(true);
if (mCode != 0) {
  sendEvent(KeyEvent.ACTION_DOWN,0,mDownTime);
}
 else {
  performHapticFeedback(HapticFeedbackConstants.VIRTUAL_KEY);
}
removeCallbacks(mCheckLongPress);
postDelayed(mCheckLongPress,ViewConfiguration.getLongPressTimeout());
break;
case MotionEvent.ACTION_MOVE:
x=(int)ev.getX();
y=(int)ev.getY();
setPressed(x >= -mTouchSlop && x < getWidth() + mTouchSlop && y >= -mTouchSlop && y < getHeight() + mTouchSlop);
break;
case MotionEvent.ACTION_CANCEL:
setPressed(false);
if (mCode != 0) {
sendEvent(KeyEvent.ACTION_UP,KeyEvent.FLAG_CANCELED);
}
removeCallbacks(mCheckLongPress);
break;
case MotionEvent.ACTION_UP:
final boolean doIt=isPressed();
setPressed(false);
if (mCode != 0) {
if (doIt) {
sendEvent(KeyEvent.ACTION_UP,0);
sendAccessibilityEvent(AccessibilityEvent.TYPE_VIEW_CLICKED);
playSoundEffect(SoundEffectConstants.CLICK);
}
 else {
sendEvent(KeyEvent.ACTION_UP,KeyEvent.FLAG_CANCELED);
}
}
 else {
if (doIt) {
performClick();
}
}
removeCallbacks(mCheckLongPress);
break;
}
return true;
}
