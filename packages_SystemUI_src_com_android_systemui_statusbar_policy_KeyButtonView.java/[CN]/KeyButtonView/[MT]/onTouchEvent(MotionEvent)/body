{
  final int action=ev.getAction();
  int x, y;
switch (action) {
case MotionEvent.ACTION_DOWN:
    mDownTime=SystemClock.uptimeMillis();
  mRepeat=0;
mSending=true;
sendEvent(KeyEvent.ACTION_DOWN,KeyEvent.FLAG_FROM_SYSTEM | KeyEvent.FLAG_VIRTUAL_HARD_KEY,mDownTime);
setPressed(true);
removeCallbacks(mCheckLongPress);
postDelayed(mCheckLongPress,ViewConfiguration.getLongPressTimeout());
break;
case MotionEvent.ACTION_MOVE:
if (mSending) {
x=(int)ev.getX();
y=(int)ev.getY();
setPressed(x >= -mTouchSlop && x < getWidth() + mTouchSlop && y >= -mTouchSlop && y < getHeight() + mTouchSlop);
}
break;
case MotionEvent.ACTION_CANCEL:
setPressed(false);
if (mSending) {
mSending=false;
sendEvent(KeyEvent.ACTION_UP,KeyEvent.FLAG_FROM_SYSTEM | KeyEvent.FLAG_VIRTUAL_HARD_KEY | KeyEvent.FLAG_CANCELED);
removeCallbacks(mCheckLongPress);
}
break;
case MotionEvent.ACTION_UP:
final boolean doIt=isPressed();
setPressed(false);
if (mSending) {
mSending=false;
final int flags=KeyEvent.FLAG_FROM_SYSTEM | KeyEvent.FLAG_VIRTUAL_HARD_KEY;
removeCallbacks(mCheckLongPress);
if (mCode != 0) {
if (doIt) {
sendEvent(KeyEvent.ACTION_UP,flags);
sendAccessibilityEvent(AccessibilityEvent.TYPE_VIEW_CLICKED);
playSoundEffect(SoundEffectConstants.CLICK);
}
 else {
sendEvent(KeyEvent.ACTION_UP,flags | KeyEvent.FLAG_CANCELED);
}
}
 else {
if (doIt) performClick();
}
}
break;
}
return true;
}
