{
  SurfaceHolder mSurfaceHolder;
  mSurfaceHolder=MediaFrameworkTest.mSurfaceView.getHolder();
  int recordDuration=MediaRecorderStressTestRunner.mTimeLapseDuration;
  boolean removeVideo=MediaRecorderStressTestRunner.mRemoveVideo;
  double captureRate=MediaRecorderStressTestRunner.mCaptureRate;
  Log.v(TAG,"Start camera time lapse stress:");
  mOutput.write("Total number of loops: " + NUMBER_OF_TIME_LAPSE_LOOPS + "\n");
  try {
    for (int i=0, n=Camera.getNumberOfCameras(); i < n; i++) {
      mOutput.write("No of loop: camera " + i);
      for (int j=0; j < NUMBER_OF_TIME_LAPSE_LOOPS; j++) {
        String fileName=String.format("%s/temp%d_%d%s",Environment.getExternalStorageDirectory(),i,j,OUTPUT_FILE_EXT);
        Log.v(TAG,fileName);
        runOnLooper(new Runnable(){
          @Override public void run(){
            mRecorder=new MediaRecorder();
          }
        }
);
        mRecorder.setOnErrorListener(mRecorderErrorCallback);
        mRecorder.setVideoSource(MediaRecorder.VideoSource.CAMERA);
        CamcorderProfile profile=CamcorderProfile.get(j,CamcorderProfile.QUALITY_TIME_LAPSE_HIGH);
        mRecorder.setProfile(profile);
        mRecorder.setCaptureRate(captureRate);
        mRecorder.setOutputFile(fileName);
        Log.v(TAG,"mediaRecorder setPreviewDisplay");
        mRecorder.setPreviewDisplay(mSurfaceHolder.getSurface());
        mRecorder.prepare();
        mRecorder.start();
        Thread.sleep(recordDuration);
        Log.v(TAG,"Before stop");
        mRecorder.stop();
        mRecorder.release();
        MediaPlayer mp=new MediaPlayer();
        mp.setDataSource(fileName);
        mp.setDisplay(mSurfaceHolder);
        mp.prepare();
        mp.start();
        Thread.sleep(TIME_LAPSE_PLAYBACK_WAIT_TIME);
        mp.release();
        validateRecordedVideo(fileName);
        if (removeVideo) {
          removeRecordedVideo(fileName);
        }
        if (j == 0) {
          mOutput.write(j + 1);
        }
 else {
          mOutput.write(String.format(", %d",(j + 1)));
        }
      }
    }
  }
 catch (  IllegalStateException e) {
    Log.e(TAG,e.toString());
    fail("Camera time lapse stress test IllegalStateException");
  }
catch (  IOException e) {
    Log.e(TAG,e.toString());
    fail("Camera time lapse stress test IOException");
  }
catch (  Exception e) {
    Log.e(TAG,e.toString());
    fail("Camera time lapse stress test Exception");
  }
}
