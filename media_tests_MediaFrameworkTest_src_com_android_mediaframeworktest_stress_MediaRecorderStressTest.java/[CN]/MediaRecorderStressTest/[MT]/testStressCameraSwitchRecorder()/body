{
  SurfaceHolder mSurfaceHolder;
  mSurfaceHolder=MediaFrameworkTest.mSurfaceView.getHolder();
  Log.v(TAG,"Camera and video recorder preview switching");
  mOutput.write("Total number of loops: " + NUMBER_OF_SWTICHING_LOOPS_BW_CAMERA_AND_RECORDER + "\n");
  try {
    Log.v(TAG,"Start preview");
    mOutput.write("No of loop: ");
    for (int i=0; i < NUMBER_OF_SWTICHING_LOOPS_BW_CAMERA_AND_RECORDER; i++) {
      runOnLooper(new Runnable(){
        @Override public void run(){
          mCamera=Camera.open(CAMERA_ID);
        }
      }
);
      mCamera.setErrorCallback(mCameraErrorCallback);
      mCamera.setPreviewDisplay(mSurfaceHolder);
      mCamera.startPreview();
      Thread.sleep(WAIT_TIME_CAMERA_TEST);
      mCamera.stopPreview();
      mCamera.release();
      mCamera=null;
      Log.v(TAG,"release camera");
      String fileName=String.format("%s/temp%d%s",Environment.getExternalStorageDirectory(),i,OUTPUT_FILE_EXT);
      Log.v(TAG,fileName);
      runOnLooper(new Runnable(){
        @Override public void run(){
          mRecorder=new MediaRecorder();
        }
      }
);
      mRecorder.setOnErrorListener(mRecorderErrorCallback);
      mRecorder.setVideoSource(MediaRecorder.VideoSource.CAMERA);
      mRecorder.setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP);
      mRecorder.setOutputFile(fileName);
      mRecorder.setVideoFrameRate(MediaRecorderStressTestRunner.mFrameRate);
      mRecorder.setVideoSize(176,144);
      Log.v(TAG,"Media recorder setEncoder");
      mRecorder.setVideoEncoder(MediaRecorder.VideoEncoder.H263);
      Log.v(TAG,"mediaRecorder setPreview");
      mRecorder.setPreviewDisplay(mSurfaceHolder.getSurface());
      Log.v(TAG,"prepare");
      mRecorder.prepare();
      Log.v(TAG,"before release");
      Thread.sleep(WAIT_TIME_CAMERA_TEST);
      mRecorder.release();
      Log.v(TAG,"release video recorder");
      if (i == 0) {
        mOutput.write(i + 1);
      }
 else {
        mOutput.write(String.format(", %d",(i + 1)));
      }
    }
  }
 catch (  Exception e) {
    Log.e(TAG,e.toString());
    fail("Camera and recorder switch mode");
  }
}
