{
  String filename;
  SurfaceHolder mSurfaceHolder;
  mSurfaceHolder=MediaFrameworkTest.mSurfaceView.getHolder();
  File stressOutFile=new File(MEDIA_STRESS_OUTPUT);
  Writer output=new BufferedWriter(new FileWriter(stressOutFile,true));
  output.write("Video record and play back stress test:\n");
  output.write("Total number of loops:" + NUMBER_OF_RECORDERANDPLAY_STRESS_LOOPS + "\n");
  try {
    output.write("No of loop: ");
    for (int i=0; i < NUMBER_OF_RECORDERANDPLAY_STRESS_LOOPS; i++) {
      filename=OUTPUT_FILE + i + OUTPUT_FILE_EXT;
      Log.v(TAG,filename);
      mRecorder=new MediaRecorder();
      mRecorder.setVideoSource(MediaRecorder.VideoSource.CAMERA);
      mRecorder.setAudioSource(MediaRecorder.AudioSource.MIC);
      mRecorder.setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP);
      mRecorder.setOutputFile(filename);
      mRecorder.setVideoFrameRate(20);
      mRecorder.setVideoSize(352,288);
      mRecorder.setVideoEncoder(MediaRecorder.VideoEncoder.H263);
      mRecorder.setAudioEncoder(MediaRecorder.AudioEncoder.AMR_NB);
      Log.v(TAG,"mediaRecorder setPreview");
      mRecorder.setPreviewDisplay(mSurfaceHolder.getSurface());
      mRecorder.prepare();
      mRecorder.start();
      Thread.sleep(WAIT_TIME_RECORD);
      Log.v(TAG,"Before stop");
      mRecorder.stop();
      mRecorder.release();
      MediaPlayer mp=new MediaPlayer();
      mp.setDataSource(filename);
      mp.setDisplay(MediaFrameworkTest.mSurfaceView.getHolder());
      mp.prepare();
      mp.start();
      Thread.sleep(WAIT_TIME_PLAYBACK);
      mp.release();
      output.write(", " + i);
    }
  }
 catch (  Exception e) {
    Log.v(TAG,e.toString());
  }
  output.write("\n\n");
  output.close();
}
