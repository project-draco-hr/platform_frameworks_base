{
  String text=state.line;
  int len=text.length();
  Parameter parameter=null;
  int startIndex=-1;
  int equalIndex=-1;
  while (state.index < len) {
    char c=text.charAt(state.index);
    if (c == ':') {
      if (parameter != null) {
        if (equalIndex == -1) {
          throw new FormatException("Expected '=' within " + "parameter in " + text);
        }
        parameter.value=text.substring(equalIndex + 1,state.index);
      }
      return parameter;
    }
 else     if (c == ';') {
      if (parameter != null) {
        if (equalIndex == -1) {
          throw new FormatException("Expected '=' within " + "parameter in " + text);
        }
        parameter.value=text.substring(equalIndex + 1,state.index);
        return parameter;
      }
 else {
        parameter=new Parameter();
        startIndex=state.index;
      }
    }
 else     if (c == '=') {
      equalIndex=state.index;
      if ((parameter == null) || (startIndex == -1)) {
        throw new FormatException("Expected ';' before '=' in " + text);
      }
      parameter.name=text.substring(startIndex + 1,equalIndex);
    }
 else     if (c == '"') {
      if (parameter == null) {
        throw new FormatException("Expected parameter before '\"' in " + text);
      }
      if (equalIndex == -1) {
        throw new FormatException("Expected '=' within parameter in " + text);
      }
      if (state.index > equalIndex + 1) {
        throw new FormatException("Parameter value cannot contain a '\"' in " + text);
      }
      final int endQuote=text.indexOf('"',state.index + 1);
      if (endQuote < 0) {
        throw new FormatException("Expected closing '\"' in " + text);
      }
      parameter.value=text.substring(state.index + 1,endQuote);
      state.index=endQuote + 1;
      return parameter;
    }
    ++state.index;
  }
  throw new FormatException("Expected ':' before end of line in " + text);
}
