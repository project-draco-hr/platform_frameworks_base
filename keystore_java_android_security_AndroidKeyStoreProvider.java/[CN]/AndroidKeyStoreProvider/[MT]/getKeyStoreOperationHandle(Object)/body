{
  if (cryptoPrimitive == null) {
    throw new NullPointerException();
  }
  if ((!(cryptoPrimitive instanceof Mac)) && (!(cryptoPrimitive instanceof Cipher))) {
    throw new IllegalArgumentException("Unsupported crypto primitive: " + cryptoPrimitive);
  }
  Object spi;
  try {
    Method getSpiMethod=cryptoPrimitive.getClass().getDeclaredMethod("getSpi");
    getSpiMethod.setAccessible(true);
    spi=getSpiMethod.invoke(cryptoPrimitive);
  }
 catch (  ReflectiveOperationException e) {
    throw new IllegalArgumentException("Unsupported crypto primitive: " + cryptoPrimitive,e);
  }
  if (!(spi instanceof KeyStoreCryptoOperation)) {
    throw new IllegalArgumentException("Crypto primitive not backed by Android KeyStore: " + cryptoPrimitive + ", spi: "+ spi);
  }
  return ((KeyStoreCryptoOperation)spi).getOperationHandle();
}
