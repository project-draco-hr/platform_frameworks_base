{
  Animator currentAnimation=currentDisappearingAnimations.get(child);
  if (currentAnimation != null) {
    currentAnimation.cancel();
  }
  if (mAppearingAnim == null) {
    if (hasListeners()) {
      ArrayList<TransitionListener> listeners=(ArrayList<TransitionListener>)mListeners.clone();
      for (      TransitionListener listener : listeners) {
        listener.endTransition(LayoutTransition.this,parent,child,APPEARING);
      }
    }
    return;
  }
  Animator anim=mAppearingAnim.clone();
  anim.setTarget(child);
  anim.setStartDelay(mAppearingDelay);
  anim.setDuration(mAppearingDuration);
  if (mAppearingInterpolator != sAppearingInterpolator) {
    anim.setInterpolator(mAppearingInterpolator);
  }
  if (anim instanceof ObjectAnimator) {
    ((ObjectAnimator)anim).setCurrentPlayTime(0);
  }
  anim.addListener(new AnimatorListenerAdapter(){
    @Override public void onAnimationEnd(    Animator anim){
      currentAppearingAnimations.remove(child);
      if (hasListeners()) {
        ArrayList<TransitionListener> listeners=(ArrayList<TransitionListener>)mListeners.clone();
        for (        TransitionListener listener : listeners) {
          listener.endTransition(LayoutTransition.this,parent,child,APPEARING);
        }
      }
    }
  }
);
  currentAppearingAnimations.put(child,anim);
  anim.start();
}
