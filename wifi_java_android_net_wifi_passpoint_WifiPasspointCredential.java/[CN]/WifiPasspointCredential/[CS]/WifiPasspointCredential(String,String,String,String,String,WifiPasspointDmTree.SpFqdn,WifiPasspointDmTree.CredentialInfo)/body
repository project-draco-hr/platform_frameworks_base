{
  if (credinfo == null) {
    return;
  }
  mType=type;
  mCaRootCert=caroot;
  mClientCert=clientcert;
  mWifiSpFqdn=sp.nodeName;
  mUpdateIdentifier=sp.perProviderSubscription.UpdateIdentifier;
  mCredentialName=credinfo.nodeName;
  mOtherHomePartnerList=credinfo.homeSP.otherHomePartners.values();
  Set set=credinfo.aAAServerTrustRoot.entrySet();
  Iterator i=set.iterator();
  if (i.hasNext()) {
    Map.Entry entry3=(Map.Entry)i.next();
    WifiPasspointDmTree.AAAServerTrustRoot aaa=(WifiPasspointDmTree.AAAServerTrustRoot)entry3.getValue();
    mAaaCertUrl=aaa.CertURL;
    mAaaSha256Fingerprint=aaa.CertSHA256Fingerprint;
  }
  mCertType=credinfo.credential.digitalCertificate.CertificateType;
  mCertSha256Fingerprint=credinfo.credential.digitalCertificate.CertSHA256Fingerprint;
  mUsername=credinfo.credential.usernamePassword.Username;
  mPasswd=credinfo.credential.usernamePassword.Password;
  mIsMachineRemediation=credinfo.credential.usernamePassword.MachineManaged;
  mInnerMethod=credinfo.credential.usernamePassword.eAPMethod.InnerMethod;
  mImsi=credinfo.credential.sim.IMSI;
  mMcc=mcc;
  mMnc=mnc;
  mCreationDate=credinfo.credential.CreationDate;
  mExpirationDate=credinfo.credential.ExpirationDate;
  mRealm=credinfo.credential.Realm;
  if (credinfo.credentialPriority == null) {
    mCrednetialPriority=128;
  }
 else {
    mCrednetialPriority=Integer.parseInt(credinfo.credentialPriority);
  }
  mHomeSpFqdn=credinfo.homeSP.FQDN;
  mSubscriptionUpdateInterval=credinfo.subscriptionUpdate.UpdateInterval;
  mSubscriptionUpdateMethod=credinfo.subscriptionUpdate.UpdateMethod;
  mSubscriptionUpdateRestriction=credinfo.subscriptionUpdate.Restriction;
  mSubscriptionUpdateURI=credinfo.subscriptionUpdate.URI;
  mSubscriptionUpdateUsername=credinfo.subscriptionUpdate.usernamePassword.Username;
  mSubscriptionUpdatePassword=credinfo.subscriptionUpdate.usernamePassword.Password;
  mPolicyUpdateUri=credinfo.policy.policyUpdate.URI;
  mPolicyUpdateInterval=credinfo.policy.policyUpdate.UpdateInterval;
  mPolicyUpdateUsername=credinfo.policy.policyUpdate.usernamePassword.Username;
  mPolicyUpdatePassword=credinfo.policy.policyUpdate.usernamePassword.Password;
  mPolicyUpdateRestriction=credinfo.policy.policyUpdate.Restriction;
  mPolicyUpdateMethod=credinfo.policy.policyUpdate.UpdateMethod;
  mPreferredRoamingPartnerList=credinfo.policy.preferredRoamingPartnerList.values();
  mMinBackhaulThresholdNetwork=credinfo.policy.minBackhaulThreshold.values();
  mRequiredProtoPortTuple=credinfo.policy.requiredProtoPortTuple.values();
  mMaxBssLoad=credinfo.policy.maximumBSSLoadValue;
  mSpExclusionList=credinfo.policy.sPExclusionList.values();
  mHomeOIList=credinfo.homeSP.homeOIList.values();
  mFriendlyName=credinfo.homeSP.FriendlyName;
  mCheckAaaServerCertStatus=credinfo.credential.CheckAAAServerCertStatus;
}
