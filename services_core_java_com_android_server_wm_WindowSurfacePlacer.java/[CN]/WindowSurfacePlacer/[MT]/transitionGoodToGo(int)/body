{
  if (DEBUG_APP_TRANSITIONS)   Slog.v(TAG,"Checking " + appsCount + " opening apps (frozen="+ mService.mDisplayFrozen+ " timeout="+ mService.mAppTransition.isTimeout()+ ")...");
  int reason=APP_TRANSITION_TIMEOUT;
  if (!mService.mAppTransition.isTimeout()) {
    for (int i=0; i < appsCount; i++) {
      AppWindowToken wtoken=mService.mOpeningApps.valueAt(i);
      if (DEBUG_APP_TRANSITIONS)       Slog.v(TAG,"Check opening app=" + wtoken + ": allDrawn="+ wtoken.allDrawn+ " startingDisplayed="+ wtoken.startingDisplayed+ " startingMoved="+ wtoken.startingMoved);
      final boolean drawnBeforeRestoring=wtoken.allDrawn;
      wtoken.restoreSavedSurfaces();
      if (!wtoken.allDrawn && !wtoken.startingDisplayed && !wtoken.startingMoved) {
        return false;
      }
      if (wtoken.allDrawn) {
        reason=drawnBeforeRestoring ? APP_TRANSITION_WINDOWS_DRAWN : APP_TRANSITION_SAVED_SURFACE;
      }
 else {
        reason=APP_TRANSITION_STARTING_WINDOW;
      }
    }
    if (mService.mAppTransition.isFetchingAppTransitionsSpecs()) {
      if (DEBUG_APP_TRANSITIONS)       Slog.v(TAG,"isFetchingAppTransitionSpecs=true");
      return false;
    }
    boolean wallpaperReady=!mWallpaperControllerLocked.isWallpaperVisible() || mWallpaperControllerLocked.wallpaperTransitionReady();
    if (wallpaperReady) {
      mService.mH.obtainMessage(NOTIFY_APP_TRANSITION_STARTING,reason,0).sendToTarget();
      return true;
    }
    return false;
  }
  mService.mH.obtainMessage(NOTIFY_APP_TRANSITION_STARTING,reason,0).sendToTarget();
  return true;
}
