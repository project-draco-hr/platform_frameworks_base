{
  final WindowState wallpaperTarget=mWallpaperControllerLocked.getWallpaperTarget();
  final WindowState oldWallpaper=mWallpaperControllerLocked.isWallpaperTargetAnimating() ? null : wallpaperTarget;
  if (DEBUG_APP_TRANSITIONS)   Slog.v(TAG,"New wallpaper target=" + wallpaperTarget + ", oldWallpaper="+ oldWallpaper+ ", lower target="+ lowerWallpaperTarget+ ", upper target="+ upperWallpaperTarget);
  mService.mAnimateWallpaperWithTarget=false;
  if (closingAppHasWallpaper && openingAppHasWallpaper) {
    if (DEBUG_APP_TRANSITIONS)     Slog.v(TAG,"Wallpaper animation!");
switch (transit) {
case AppTransition.TRANSIT_ACTIVITY_OPEN:
case AppTransition.TRANSIT_TASK_OPEN:
case AppTransition.TRANSIT_TASK_TO_FRONT:
      transit=AppTransition.TRANSIT_WALLPAPER_INTRA_OPEN;
    break;
case AppTransition.TRANSIT_ACTIVITY_CLOSE:
case AppTransition.TRANSIT_TASK_CLOSE:
case AppTransition.TRANSIT_TASK_TO_BACK:
  transit=AppTransition.TRANSIT_WALLPAPER_INTRA_CLOSE;
break;
}
if (DEBUG_APP_TRANSITIONS) Slog.v(TAG,"New transit: " + AppTransition.appTransitionToString(transit));
}
 else if ((oldWallpaper != null) && !mService.mOpeningApps.isEmpty() && !mService.mOpeningApps.contains(oldWallpaper.mAppToken)) {
transit=AppTransition.TRANSIT_WALLPAPER_CLOSE;
if (DEBUG_APP_TRANSITIONS) Slog.v(TAG,"New transit away from wallpaper: " + AppTransition.appTransitionToString(transit));
}
 else if (wallpaperTarget != null && wallpaperTarget.isVisibleLw()) {
transit=AppTransition.TRANSIT_WALLPAPER_OPEN;
if (DEBUG_APP_TRANSITIONS) Slog.v(TAG,"New transit into wallpaper: " + AppTransition.appTransitionToString(transit));
}
 else {
mService.mAnimateWallpaperWithTarget=true;
}
return transit;
}
