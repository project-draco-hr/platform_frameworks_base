{
  int minSrcX=src.getMinX();
  int minDstX=dst.getMinX();
  int minSrcY=src.getMinY();
  int minDstY=dst.getMinY();
  int skippingChannels=skipAlpha ? 1 : 0;
  int numBands2Process=src.getNumBands() - skippingChannels;
  int numBands=src.getNumBands();
  int srcHeight=src.getHeight();
  int srcWidth=src.getWidth();
  int[] pixels=null;
  int offset=lut.getOffset();
  if (lut instanceof ByteLookupTable) {
    byte[][] byteData=((ByteLookupTable)lut).getTable();
    pixels=src.getPixels(minSrcX,minSrcY,srcWidth,srcHeight,pixels);
    if (lut.getNumComponents() != 1) {
      for (int i=0; i < pixels.length; i+=numBands) {
        for (int b=0; b < numBands2Process; b++) {
          pixels[i + b]=byteData[b][pixels[i + b] - offset] & 0xFF;
        }
      }
    }
 else {
      for (int i=0; i < pixels.length; i+=numBands) {
        for (int b=0; b < numBands2Process; b++) {
          pixels[i + b]=byteData[0][pixels[i + b] - offset] & 0xFF;
        }
      }
    }
    dst.setPixels(minDstX,minDstY,srcWidth,srcHeight,pixels);
  }
 else   if (lut instanceof ShortLookupTable) {
    short[][] shortData=((ShortLookupTable)lut).getTable();
    pixels=src.getPixels(minSrcX,minSrcY,srcWidth,srcHeight,pixels);
    if (lut.getNumComponents() != 1) {
      for (int i=0; i < pixels.length; i+=numBands) {
        for (int b=0; b < numBands2Process; b++) {
          pixels[i + b]=shortData[b][pixels[i + b] - offset] & 0xFFFF;
        }
      }
    }
 else {
      for (int i=0; i < pixels.length; i+=numBands) {
        for (int b=0; b < numBands2Process; b++) {
          pixels[i + b]=shortData[0][pixels[i + b] - offset] & 0xFFFF;
        }
      }
    }
    dst.setPixels(minDstX,minDstY,srcWidth,srcHeight,pixels);
  }
 else {
    int pixel[]=new int[src.getNumBands()];
    int maxY=minSrcY + srcHeight;
    int maxX=minSrcX + srcWidth;
    for (int srcY=minSrcY, dstY=minDstY; srcY < maxY; srcY++, dstY++) {
      for (int srcX=minSrcX, dstX=minDstX; srcX < maxX; srcX++, dstX++) {
        src.getPixel(srcX,srcY,pixel);
        lut.lookupPixel(pixel,pixel);
        dst.setPixel(dstX,dstY,pixel);
      }
    }
  }
  return 0;
}
