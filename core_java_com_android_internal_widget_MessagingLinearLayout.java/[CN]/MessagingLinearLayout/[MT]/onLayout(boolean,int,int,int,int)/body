{
  final int paddingLeft=mPaddingLeft;
  int childTop;
  final int width=right - left;
  final int childRight=width - mPaddingRight;
  final int layoutDirection=getLayoutDirection();
  final int count=getChildCount();
  childTop=mPaddingTop;
  boolean first=true;
  for (int i=0; i < count; i++) {
    final View child=getChildAt(i);
    final LayoutParams lp=(LayoutParams)child.getLayoutParams();
    if (child.getVisibility() == GONE || lp.hide) {
      continue;
    }
    final int childWidth=child.getMeasuredWidth();
    final int childHeight=child.getMeasuredHeight();
    int childLeft;
    if (layoutDirection == LAYOUT_DIRECTION_RTL) {
      childLeft=childRight - childWidth - lp.rightMargin;
    }
 else {
      childLeft=paddingLeft + lp.leftMargin;
    }
    if (!first) {
      childTop+=mSpacing;
    }
    childTop+=lp.topMargin;
    child.layout(childLeft,childTop,childLeft + childWidth,childTop + childHeight);
    childTop+=childHeight + lp.bottomMargin;
    first=false;
  }
}
