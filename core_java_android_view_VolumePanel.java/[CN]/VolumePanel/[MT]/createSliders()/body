{
  final int silentableStreams=System.getInt(mContext.getContentResolver(),System.MODE_RINGER_STREAMS_AFFECTED,((1 << AudioSystem.STREAM_NOTIFICATION) | (1 << AudioSystem.STREAM_RING)));
  LayoutInflater inflater=(LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
  mStreamControls=new HashMap<Integer,StreamControl>(STREAMS.length);
  Resources res=mContext.getResources();
  for (int i=0; i < STREAMS.length; i++) {
    StreamResources streamRes=STREAMS[i];
    int streamType=streamRes.streamType;
    if (mVoiceCapable && streamRes == StreamResources.NotificationStream) {
      streamRes=StreamResources.RingerStream;
    }
    StreamControl sc=new StreamControl();
    sc.streamType=streamType;
    sc.group=(ViewGroup)inflater.inflate(R.layout.volume_adjust_item,null);
    sc.group.setTag(sc);
    sc.icon=(ImageView)sc.group.findViewById(R.id.stream_icon);
    if ((silentableStreams & (1 << sc.streamType)) != 0) {
      sc.icon.setOnClickListener(this);
    }
    sc.icon.setTag(sc);
    sc.icon.setContentDescription(res.getString(streamRes.descRes));
    sc.iconRes=streamRes.iconRes;
    sc.iconMuteRes=streamRes.iconMuteRes;
    sc.icon.setImageResource(sc.iconRes);
    sc.seekbarView=(SeekBar)sc.group.findViewById(R.id.seekbar);
    int plusOne=(streamType == AudioSystem.STREAM_BLUETOOTH_SCO || streamType == AudioSystem.STREAM_VOICE_CALL) ? 1 : 0;
    sc.seekbarView.setMax(getStreamMaxVolume(streamType) + plusOne);
    sc.seekbarView.setOnSeekBarChangeListener(this);
    sc.seekbarView.setTag(sc);
    mStreamControls.put(streamType,sc);
  }
}
