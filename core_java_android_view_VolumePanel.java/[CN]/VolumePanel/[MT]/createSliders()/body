{
  final int silentableStreams=System.getInt(mContext.getContentResolver(),System.MODE_RINGER_STREAMS_AFFECTED,((1 << AudioSystem.STREAM_NOTIFICATION) | (1 << AudioSystem.STREAM_RING)));
  LayoutInflater inflater=(LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
  mStreamControls=new HashMap<Integer,StreamControl>(STREAM_TYPES.length);
  Resources res=mContext.getResources();
  for (int i=0; i < STREAM_TYPES.length; i++) {
    final int streamType=STREAM_TYPES[i];
    StreamControl sc=new StreamControl();
    sc.streamType=streamType;
    sc.group=(ViewGroup)inflater.inflate(R.layout.volume_adjust_item,null);
    sc.group.setTag(sc);
    sc.icon=(ImageView)sc.group.findViewById(R.id.stream_icon);
    if ((silentableStreams & (1 << sc.streamType)) != 0) {
      sc.icon.setOnClickListener(this);
    }
    sc.icon.setTag(sc);
    sc.icon.setContentDescription(res.getString(CONTENT_DESCRIPTIONS[i]));
    sc.iconRes=STREAM_ICONS_NORMAL[i];
    sc.iconMuteRes=STREAM_ICONS_MUTED[i];
    sc.icon.setImageResource(sc.iconRes);
    sc.seekbarView=(SeekBar)sc.group.findViewById(R.id.seekbar);
    int plusOne=(streamType == AudioSystem.STREAM_BLUETOOTH_SCO || streamType == AudioSystem.STREAM_VOICE_CALL) ? 1 : 0;
    sc.seekbarView.setMax(mAudioManager.getStreamMaxVolume(streamType) + plusOne);
    sc.seekbarView.setOnSeekBarChangeListener(this);
    sc.seekbarView.setTag(sc);
    mStreamControls.put(streamType,sc);
  }
}
