{
  int index=mAudioService.getStreamVolume(streamType);
  String message=UNKNOWN_VOLUME_TEXT;
  if (LOGD) {
    Log.d(TAG,"onShowVolumeChanged(streamType: " + streamType + ", flags: "+ flags+ "), index: "+ index);
  }
switch (streamType) {
case AudioManager.STREAM_RING:
{
      message=RINGTONE_VOLUME_TEXT;
      setRingerIcon(index);
      break;
    }
case AudioManager.STREAM_MUSIC:
{
    message=MUSIC_VOLUME_TEXT;
    setOtherIcon(index);
    break;
  }
case AudioManager.STREAM_VOICE_CALL:
{
  message=INCALL_VOLUME_TEXT;
  setOtherIcon(index == 0 ? 1 : index);
  break;
}
case AudioManager.STREAM_ALARM:
{
message=ALARM_VOLUME_TEXT;
setOtherIcon(index);
break;
}
}
if (!mMessage.getText().equals(message)) {
mMessage.setText(message);
}
int max=mAudioService.getStreamMaxVolume(streamType);
if (max != mLevel.getMax()) {
mLevel.setMax(max);
}
mLevel.setProgress(index);
mToast.setView(mView);
mToast.setDuration(Toast.LENGTH_SHORT);
mToast.setGravity(Gravity.TOP,0,0);
mToast.show();
if ((flags & AudioManager.FLAG_VIBRATE) != 0 && mAudioService.isStreamAffectedByRingerMode(streamType) && mAudioService.getRingerMode() == AudioManager.RINGER_MODE_VIBRATE && mAudioService.shouldVibrate(AudioManager.VIBRATE_TYPE_RINGER)) {
sendMessageDelayed(obtainMessage(MSG_VIBRATE),VIBRATE_DELAY);
}
}
