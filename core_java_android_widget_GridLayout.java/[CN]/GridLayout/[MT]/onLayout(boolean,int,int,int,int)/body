{
  int targetWidth=r - l;
  int targetHeight=b - t;
  int paddingLeft=getPaddingLeft();
  int paddingTop=getPaddingTop();
  int paddingRight=getPaddingRight();
  int paddingBottom=getPaddingBottom();
  mHorizontalAxis.layout(targetWidth - paddingLeft - paddingRight);
  mVerticalAxis.layout(targetHeight - paddingTop - paddingBottom);
  for (int i=0, size=getChildCount(); i < size; i++) {
    View view=getChildAt(i);
    LayoutParams lp=getLayoutParams(view);
    Group columnGroup=lp.columnGroup;
    Group rowGroup=lp.rowGroup;
    Interval colSpan=columnGroup.span;
    Interval rowSpan=rowGroup.span;
    int x1=mHorizontalAxis.getLocationIncludingMargin(view,true,colSpan.min);
    int y1=mVerticalAxis.getLocationIncludingMargin(view,true,rowSpan.min);
    int x2=mHorizontalAxis.getLocationIncludingMargin(view,false,colSpan.max);
    int y2=mVerticalAxis.getLocationIncludingMargin(view,false,rowSpan.max);
    int cellWidth=x2 - x1;
    int cellHeight=y2 - y1;
    int pWidth=getMeasurement(view,true,PRF);
    int pHeight=getMeasurement(view,false,PRF);
    Alignment hAlignment=columnGroup.alignment;
    Alignment vAlignment=rowGroup.alignment;
    int dx, dy;
    if (mMarginsIncludedInAlignment) {
      dx=protect(hAlignment.getAlignmentValue(view,cellWidth - pWidth));
      dy=protect(vAlignment.getAlignmentValue(view,cellHeight - pHeight));
    }
 else {
      Bounds colBounds=mHorizontalAxis.getGroupBounds().getValue(i);
      Bounds rowBounds=mVerticalAxis.getGroupBounds().getValue(i);
      int mx=protect(hAlignment.getAlignmentValue(null,cellWidth - colBounds.size()));
      int my=protect(vAlignment.getAlignmentValue(null,cellHeight - rowBounds.size()));
      dx=mx + -colBounds.below - hAlignment.getAlignmentValue(view,pWidth);
      dy=my + -rowBounds.below - vAlignment.getAlignmentValue(view,pHeight);
    }
    int width=hAlignment.getSizeInCell(view,pWidth,cellWidth);
    int height=vAlignment.getSizeInCell(view,pHeight,cellHeight);
    int cx=paddingLeft + x1 + dx;
    int cy=paddingTop + y1 + dy;
    view.layout(cx,cy,cx + width,cy + height);
  }
}
