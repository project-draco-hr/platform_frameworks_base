{
  int targetWidth=right - left;
  int targetHeight=bottom - top;
  int paddingLeft=getPaddingLeft();
  int paddingTop=getPaddingTop();
  int paddingRight=getPaddingRight();
  int paddingBottom=getPaddingBottom();
  horizontalAxis.layout(targetWidth - paddingLeft - paddingRight);
  verticalAxis.layout(targetHeight - paddingTop - paddingBottom);
  int[] hLocations=horizontalAxis.getLocations();
  int[] vLocations=verticalAxis.getLocations();
  for (int i=0, N=getChildCount(); i < N; i++) {
    View c=getChildAt(i);
    if (isGone(c))     continue;
    LayoutParams lp=getLayoutParams(c);
    Spec columnSpec=lp.columnSpec;
    Spec rowSpec=lp.rowSpec;
    Interval colSpan=columnSpec.span;
    Interval rowSpan=rowSpec.span;
    int x1=hLocations[colSpan.min];
    int y1=vLocations[rowSpan.min];
    int x2=hLocations[colSpan.max];
    int y2=vLocations[rowSpan.max];
    int cellWidth=x2 - x1;
    int cellHeight=y2 - y1;
    int pWidth=getMeasurement(c,true);
    int pHeight=getMeasurement(c,false);
    Alignment hAlign=getAlignment(columnSpec.alignment,true);
    Alignment vAlign=getAlignment(rowSpec.alignment,false);
    int dx, dy;
    Bounds colBounds=horizontalAxis.getGroupBounds().getValue(i);
    Bounds rowBounds=verticalAxis.getGroupBounds().getValue(i);
    int c2ax=protect(hAlign.getAlignmentValue(null,cellWidth - colBounds.size(true)));
    int c2ay=protect(vAlign.getAlignmentValue(null,cellHeight - rowBounds.size(true)));
    int leftMargin=getMargin(c,true,true);
    int topMargin=getMargin(c,false,true);
    int rightMargin=getMargin(c,true,false);
    int bottomMargin=getMargin(c,false,false);
    int mWidth=leftMargin + pWidth + rightMargin;
    int mHeight=topMargin + pHeight + bottomMargin;
    int a2vx=colBounds.getOffset(c,hAlign,mWidth);
    int a2vy=rowBounds.getOffset(c,vAlign,mHeight);
    dx=c2ax + a2vx + leftMargin;
    dy=c2ay + a2vy + topMargin;
    cellWidth-=leftMargin + rightMargin;
    cellHeight-=topMargin + bottomMargin;
    int type=PRF;
    int width=hAlign.getSizeInCell(c,pWidth,cellWidth,type);
    int height=vAlign.getSizeInCell(c,pHeight,cellHeight,type);
    int cx=paddingLeft + x1 + dx;
    int cy=paddingTop + y1 + dy;
    if (width != c.getMeasuredWidth() || height != c.getMeasuredHeight()) {
      c.measure(makeMeasureSpec(width,EXACTLY),makeMeasureSpec(height,EXACTLY));
    }
    c.layout(cx,cy,cx + width,cy + height);
  }
}
