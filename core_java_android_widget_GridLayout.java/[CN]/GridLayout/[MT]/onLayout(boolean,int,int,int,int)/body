{
  int targetWidth=right - left;
  int targetHeight=bottom - top;
  int paddingLeft=getPaddingLeft();
  int paddingTop=getPaddingTop();
  int paddingRight=getPaddingRight();
  int paddingBottom=getPaddingBottom();
  mHorizontalAxis.layout(targetWidth - paddingLeft - paddingRight);
  mVerticalAxis.layout(targetHeight - paddingTop - paddingBottom);
  for (int i=0, N=getChildCount(); i < N; i++) {
    View c=getChildAt(i);
    if (isGone(c))     continue;
    LayoutParams lp=getLayoutParams(c);
    Group columnGroup=lp.columnGroup;
    Group rowGroup=lp.rowGroup;
    Interval colSpan=columnGroup.span;
    Interval rowSpan=rowGroup.span;
    int x1=mHorizontalAxis.getLocationIncludingMargin(true,colSpan.min);
    int y1=mVerticalAxis.getLocationIncludingMargin(true,rowSpan.min);
    int x2=mHorizontalAxis.getLocationIncludingMargin(false,colSpan.max);
    int y2=mVerticalAxis.getLocationIncludingMargin(false,rowSpan.max);
    int cellWidth=x2 - x1;
    int cellHeight=y2 - y1;
    int pWidth=getMeasurement(c,true);
    int pHeight=getMeasurement(c,false);
    Alignment hAlign=columnGroup.alignment;
    Alignment vAlign=rowGroup.alignment;
    int dx, dy;
    Bounds colBounds=mHorizontalAxis.getGroupBounds().getValue(i);
    Bounds rowBounds=mVerticalAxis.getGroupBounds().getValue(i);
    int c2ax=protect(hAlign.getAlignmentValue(null,cellWidth - colBounds.size(true)));
    int c2ay=protect(vAlign.getAlignmentValue(null,cellHeight - rowBounds.size(true)));
    if (mAlignmentMode == ALIGN_MARGINS) {
      int leftMargin=getMargin(c,true,true);
      int topMargin=getMargin(c,false,true);
      int rightMargin=getMargin(c,true,false);
      int bottomMargin=getMargin(c,false,false);
      int mWidth=leftMargin + pWidth + rightMargin;
      int mHeight=topMargin + pHeight + bottomMargin;
      int a2vx=colBounds.getOffset(c,hAlign,mWidth);
      int a2vy=rowBounds.getOffset(c,vAlign,mHeight);
      dx=c2ax + a2vx + leftMargin;
      dy=c2ay + a2vy + topMargin;
      cellWidth-=leftMargin + rightMargin;
      cellHeight-=topMargin + bottomMargin;
    }
 else {
      int a2vx=colBounds.getOffset(c,hAlign,pWidth);
      int a2vy=rowBounds.getOffset(c,vAlign,pHeight);
      dx=c2ax + a2vx;
      dy=c2ay + a2vy;
    }
    int type=PRF;
    int width=hAlign.getSizeInCell(c,pWidth,cellWidth,type);
    int height=vAlign.getSizeInCell(c,pHeight,cellHeight,type);
    int cx=paddingLeft + x1 + dx;
    int cy=paddingTop + y1 + dy;
    c.layout(cx,cy,cx + width,cy + height);
  }
}
