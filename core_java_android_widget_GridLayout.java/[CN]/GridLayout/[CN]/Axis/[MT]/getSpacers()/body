{
  List<Interval> result=new ArrayList<Interval>();
  int N=getCount() + 1;
  int[] leadingEdgeCount=new int[N];
  int[] trailingEdgeCount=new int[N];
  for (int i=0, size=getChildCount(); i < size; i++) {
    LayoutParams lp=getLayoutParams(getChildAt(i));
    Group g=horizontal ? lp.columnGroup : lp.rowGroup;
    Interval span=g.span;
    leadingEdgeCount[span.min]++;
    trailingEdgeCount[span.max]++;
  }
  int lastTrailingEdge=0;
  trailingEdgeCount[0]=1;
  leadingEdgeCount[N - 1]=1;
  for (int i=0; i < N; i++) {
    if (trailingEdgeCount[i] > 0) {
      lastTrailingEdge=i;
      continue;
    }
    if (leadingEdgeCount[i] > 0) {
      result.add(new Interval(lastTrailingEdge,i));
    }
  }
  return result;
}
