{
  int N=getCount() + 1;
  int min=getMin();
  int max=getMax();
  int clippedTargetSize=max(min(max,targetSize),min);
  if (DEBUG) {
    Log.d(TAG,"Computing sizes for target " + clippedTargetSize + " for "+ (horizontal ? "col" : "row")+ "s from: "+ arcs);
  }
  int delta=clippedTargetSize - min;
  prefSizeOfWeightedComponent=delta;
  invalidateValues();
  int defaultValue=maximizing ? MAX_VALUE : MIN_VALUE;
  locations=init(defaultValue,0,clippedTargetSize - totalMarginSize());
  computeLocations(locations,maximizing);
  prefSizeOfWeightedComponent=0;
  if (DEBUG) {
    Log.d(TAG,"locations = " + Arrays.toString(locations));
    int[] computedSizes=new int[N - 1];
    for (int i=0; i < N - 1; i++) {
      computedSizes[i]=locations[i + 1] - locations[i];
    }
    Log.d(TAG,"sizes = " + Arrays.toString(computedSizes));
  }
}
