{
  PackedMap<Spec,Bounds> groupBounds=getGroupBounds();
  Spec[] specs=groupBounds.keys;
  Bounds[] bounds=groupBounds.values;
  int totalDelta=0;
  float totalWeight=0;
  final int N=bounds.length;
  for (int i=0; i < N; i++) {
    Spec spec=specs[i];
    Bounds bound=bounds[i];
    if (bound.weight != 0) {
      int minSize=bound.size(true);
      Interval span=spec.span;
      int actualSize=locations[span.max] - locations[span.min];
      int delta=actualSize - minSize;
      totalDelta+=delta;
      totalWeight+=bound.weight;
    }
  }
  for (int i=0; i < N; i++) {
    Bounds bound=bounds[i];
    float weight=bound.weight;
    if (weight != 0) {
      int delta=Math.round((weight * totalDelta / totalWeight));
      bound.shareOfDelta=delta;
      totalDelta-=delta;
      totalWeight-=weight;
    }
  }
}
