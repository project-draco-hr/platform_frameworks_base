{
  if (holder.getItemViewType() == TYPE_DIVIDER) {
    holder.itemView.setVisibility(mTileDividerIndex < mTiles.size() - 1 ? View.VISIBLE : View.INVISIBLE);
    return;
  }
  if (holder.getItemViewType() == TYPE_EDIT) {
    ((TextView)holder.itemView.findViewById(android.R.id.title)).setText(mCurrentDrag != null ? R.string.drag_to_remove_tiles : R.string.drag_to_add_tiles);
    return;
  }
  if (holder.getItemViewType() == TYPE_ACCESSIBLE_DROP) {
    holder.mTileView.setClickable(true);
    holder.mTileView.setFocusable(true);
    holder.mTileView.setFocusableInTouchMode(true);
    holder.mTileView.setVisibility(View.VISIBLE);
    holder.mTileView.setImportantForAccessibility(View.IMPORTANT_FOR_ACCESSIBILITY_YES);
    holder.mTileView.setContentDescription(mContext.getString(R.string.accessibility_qs_edit_position_label,position + 1));
    holder.mTileView.setOnClickListener(new OnClickListener(){
      @Override public void onClick(      View v){
        selectPosition(holder.getAdapterPosition(),v);
      }
    }
);
    if (mNeedsFocus) {
      holder.mTileView.addOnLayoutChangeListener(new OnLayoutChangeListener(){
        @Override public void onLayoutChange(        View v,        int left,        int top,        int right,        int bottom,        int oldLeft,        int oldTop,        int oldRight,        int oldBottom){
          holder.mTileView.removeOnLayoutChangeListener(this);
          holder.mTileView.requestFocus();
        }
      }
);
      mNeedsFocus=false;
    }
    return;
  }
  TileInfo info=mTiles.get(position);
  if (position > mEditIndex) {
    info.state.contentDescription=mContext.getString(R.string.accessibility_qs_edit_add_tile_label,info.state.label);
  }
 else   if (mAccessibilityMoving) {
    info.state.contentDescription=mContext.getString(R.string.accessibility_qs_edit_position_label,position + 1);
  }
 else {
    info.state.contentDescription=mContext.getString(R.string.accessibility_qs_edit_tile_label,position + 1,info.state.label);
  }
  holder.mTileView.onStateChanged(info.state);
  holder.mTileView.setAppLabel(info.appLabel);
  holder.mTileView.setShowAppLabel(mTileDividerIndex > -1 && position > mTileDividerIndex);
  if (mAccessibilityManager.isTouchExplorationEnabled()) {
    final boolean selectable=!mAccessibilityMoving || position < mEditIndex;
    holder.mTileView.setClickable(selectable);
    holder.mTileView.setFocusable(selectable);
    holder.mTileView.setImportantForAccessibility(selectable ? View.IMPORTANT_FOR_ACCESSIBILITY_YES : View.IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS);
    if (selectable) {
      holder.mTileView.setOnClickListener(new OnClickListener(){
        @Override public void onClick(        View v){
          int position=holder.getAdapterPosition();
          if (mAccessibilityMoving) {
            selectPosition(position,v);
          }
 else {
            if (position < mEditIndex) {
              showAccessibilityDialog(position,v);
            }
 else {
              startAccessibleDrag(position);
            }
          }
        }
      }
);
    }
  }
}
