{
  if (mCurrentSpecs == null || mAllTiles == null) {
    return;
  }
  mOtherTiles=new ArrayList<TileInfo>(mAllTiles);
  mTiles.clear();
  for (int i=0; i < mCurrentSpecs.size(); i++) {
    final TileInfo tile=getAndRemoveOther(mCurrentSpecs.get(i));
    if (tile != null) {
      mTiles.add(tile);
    }
  }
  mTiles.add(null);
  for (int i=0; i < mOtherTiles.size(); i++) {
    final TileInfo tile=mOtherTiles.get(i);
    if (tile.isSystem) {
      mOtherTiles.remove(i--);
      mTiles.add(tile);
    }
  }
  mTileDividerIndex=mTiles.size();
  mTiles.add(null);
  mTiles.addAll(mOtherTiles);
  updateDividerLocations();
  notifyDataSetChanged();
}
