{
  SurfaceHolder mSurfaceHolder;
  long randomseed=System.currentTimeMillis();
  Random generator=new Random(randomseed);
  Log.v(TAG,"Random seed: " + randomseed);
  int video_duration=MediaNames.VIDEO_H263_AAC_DURATION;
  int random_play_time=0;
  int random_seek_time=0;
  mSurfaceHolder=MediaFrameworkTest.mSurfaceView.getHolder();
  try {
    for (int i=0; i < NUMBER_OF_STRESS_LOOPS; i++) {
      MediaPlayer mp=new MediaPlayer();
      mp.setDataSource(MediaNames.VIDEO_H263_AMR);
      mp.setDisplay(MediaFrameworkTest.mSurfaceView.getHolder());
      mp.prepare();
      mp.start();
      for (int j=0; j < generator.nextInt(10); j++) {
        random_play_time=generator.nextInt(video_duration / 2);
        Log.v(TAG,"Play time = " + random_play_time);
        Thread.sleep(random_play_time);
        random_seek_time=generator.nextInt(video_duration / 2);
        Log.v(TAG,"Seek time = " + random_seek_time);
        mp.seekTo(random_seek_time);
      }
      long wait_until_playback_finish=video_duration - random_seek_time + PLAYBACK_END_TOLERANCE * 2;
      Thread.sleep(wait_until_playback_finish);
      Log.v(TAG,"CurrentPosition = " + mp.getCurrentPosition());
      if (mp.isPlaying() || mp.getCurrentPosition() > (video_duration + PLAYBACK_END_TOLERANCE)) {
        assertTrue("Current PlayTime greater than duration",false);
      }
      mp.release();
    }
  }
 catch (  Exception e) {
    Log.v(TAG,e.toString());
  }
}
