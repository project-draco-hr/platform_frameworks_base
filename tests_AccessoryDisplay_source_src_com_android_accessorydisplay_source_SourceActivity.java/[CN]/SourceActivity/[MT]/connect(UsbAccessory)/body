{
  if (!isSink(accessory)) {
    mLogger.log("Not connecting to USB accessory because it is not an accessory display sink: " + accessory);
    return;
  }
  if (mConnected) {
    disconnect();
  }
  if (!mUsbManager.hasPermission(accessory)) {
    mLogger.log("Prompting the user for access to the accessory.");
    Intent intent=new Intent(ACTION_USB_ACCESSORY_PERMISSION);
    intent.setPackage(getPackageName());
    PendingIntent pendingIntent=PendingIntent.getBroadcast(this,0,intent,PendingIntent.FLAG_ONE_SHOT);
    mUsbManager.requestPermission(accessory,pendingIntent);
    return;
  }
  ParcelFileDescriptor fd=mUsbManager.openAccessory(accessory);
  if (fd == null) {
    mLogger.logError("Could not obtain accessory connection.");
    return;
  }
  mLogger.log("Connected.");
  mConnected=true;
  mAccessory=accessory;
  mTransport=new UsbAccessoryStreamTransport(mLogger,fd);
  startServices();
  mTransport.startReading();
}
