{
  mState=TO_EDGE;
  mOver=over;
  super.fling(start,velocity,min,max);
  if (start > max) {
    if (start >= max + over) {
      springback(max + over,min,max);
    }
 else {
      if (velocity <= 0) {
        springback(start,min,max);
      }
 else {
        long time=AnimationUtils.currentAnimationTimeMillis();
        final double durationSinceEdge=Math.atan((start - max) * TIME_COEF / velocity) / TIME_COEF;
        mStartTime=(int)(time - 1000.0f * durationSinceEdge);
        mStart=max;
        mVelocity=(int)(velocity / Math.cos(durationSinceEdge * TIME_COEF));
        onEdgeReached();
      }
    }
  }
 else {
    if (start < min) {
      if (start <= min - over) {
        springback(min - over,min,max);
      }
 else {
        if (velocity >= 0) {
          springback(start,min,max);
        }
 else {
          long time=AnimationUtils.currentAnimationTimeMillis();
          final double durationSinceEdge=Math.atan((start - min) * TIME_COEF / velocity) / TIME_COEF;
          mStartTime=(int)(time - 1000.0f * durationSinceEdge);
          mStart=min;
          mVelocity=(int)(velocity / Math.cos(durationSinceEdge * TIME_COEF));
          onEdgeReached();
        }
      }
    }
  }
}
