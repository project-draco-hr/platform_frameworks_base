{
  final long time=AnimationUtils.currentAnimationTimeMillis();
  final long duration=time - mStartTime;
  if (duration > mDuration) {
    return false;
  }
  double distance;
  final float t=duration / 1000.0f;
  if (mState == TO_EDGE) {
    mCurrVelocity=mVelocity + mDeceleration * t;
    distance=mVelocity * t + mDeceleration * t * t / 2.0f;
  }
 else {
    final float d=t * TIME_COEF;
    mCurrVelocity=mVelocity * (float)Math.cos(d);
    distance=mVelocity / TIME_COEF * Math.sin(d);
  }
  mCurrentPosition=mStart + (int)distance;
  return true;
}
