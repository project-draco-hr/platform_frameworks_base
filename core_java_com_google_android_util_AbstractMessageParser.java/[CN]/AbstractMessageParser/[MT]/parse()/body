{
  if (parseMusicTrack()) {
    buildParts(null);
    return;
  }
  String meText=null;
  if (parseMeText && text.startsWith("/me") && (text.length() > 3)&& Character.isWhitespace(text.charAt(3))) {
    meText=text.substring(0,4);
    text=text.substring(4);
  }
  boolean wasSmiley=false;
  while (nextChar < text.length()) {
    if (!isWordBreak(nextChar)) {
      if (!wasSmiley || !isSmileyBreak(nextChar)) {
        throw new AssertionError("last chunk did not end at word break");
      }
    }
    if (parseSmiley()) {
      wasSmiley=true;
    }
 else {
      wasSmiley=false;
      if (!parseAcronym() && !parseURL() && !parseFormatting()) {
        parseText();
      }
    }
  }
  for (int i=0; i < tokens.size(); ++i) {
    if (tokens.get(i).isMedia()) {
      if ((i > 0) && (tokens.get(i - 1) instanceof Html)) {
        ((Html)tokens.get(i - 1)).trimLeadingWhitespace();
      }
      if ((i + 1 < tokens.size()) && (tokens.get(i + 1) instanceof Html)) {
        ((Html)tokens.get(i + 1)).trimTrailingWhitespace();
      }
    }
  }
  for (int i=0; i < tokens.size(); ++i) {
    if (tokens.get(i).isHtml() && (tokens.get(i).toHtml(true).length() == 0)) {
      tokens.remove(i);
      --i;
    }
  }
  buildParts(meText);
}
