{
  StringBuilder html=new StringBuilder();
  for (  Part part : parts) {
    boolean caps=false;
    html.append("<p>");
    for (    Token token : part.getTokens()) {
      if (token.isHtml()) {
        html.append(token.toHtml(caps));
      }
 else {
switch (token.getType()) {
case LINK:
          html.append("<a href=\"");
        html.append(((Link)token).getURL());
      html.append("\">");
    html.append(token.getRawText());
  html.append("</a>");
break;
case SMILEY:
html.append(token.getRawText());
break;
case ACRONYM:
html.append(token.getRawText());
break;
case MUSIC:
html.append(((MusicTrack)token).getTrack());
break;
case GOOGLE_VIDEO:
html.append("<a href=\"");
html.append(((Video)token).getURL(((Video)token).getDocID()));
html.append("\">");
html.append(token.getRawText());
html.append("</a>");
break;
case YOUTUBE_VIDEO:
html.append("<a href=\"");
html.append(((YouTubeVideo)token).getURL(((YouTubeVideo)token).getDocID()));
html.append("\">");
html.append(token.getRawText());
html.append("</a>");
break;
case PHOTO:
{
html.append("<a href=\"");
html.append(Photo.getAlbumURL(((Photo)token).getUser(),((Photo)token).getAlbum()));
html.append("\">");
html.append(token.getRawText());
html.append("</a>");
break;
}
case FLICKR:
Photo p=(Photo)token;
html.append("<a href=\"");
html.append(((FlickrPhoto)token).getUrl());
html.append("\">");
html.append(token.getRawText());
html.append("</a>");
break;
default :
throw new AssertionError("unknown token type: " + token.getType());
}
}
if (token.controlCaps()) {
caps=token.setCaps();
}
}
html.append("</p>\n");
}
return html.toString();
}
