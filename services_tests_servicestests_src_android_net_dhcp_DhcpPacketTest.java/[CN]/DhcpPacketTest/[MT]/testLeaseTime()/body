{
  byte[] noLease=null;
  byte[] tooShortLease=new byte[]{0x00,0x00};
  byte[] tooLongLease=new byte[]{0x00,0x00,0x00,60,0x01};
  byte[] zeroLease=new byte[]{0x00,0x00,0x00,0x00};
  byte[] tenSecondLease=new byte[]{0x00,0x00,0x00,10};
  byte[] oneMinuteLease=new byte[]{0x00,0x00,0x00,60};
  byte[] fiveMinuteLease=new byte[]{0x00,0x00,0x01,0x2c};
  byte[] oneDayLease=new byte[]{0x00,0x01,0x51,(byte)0x80};
  byte[] maxIntPlusOneLease=new byte[]{(byte)0x80,0x00,0x00,0x01};
  byte[] infiniteLease=new byte[]{(byte)0xff,(byte)0xff,(byte)0xff,(byte)0xff};
  assertLeaseTimeParses(true,null,0,noLease);
  assertLeaseTimeParses(false,null,0,tooShortLease);
  assertLeaseTimeParses(false,null,0,tooLongLease);
  assertLeaseTimeParses(true,0,60 * 1000,zeroLease);
  assertLeaseTimeParses(true,10,60 * 1000,tenSecondLease);
  assertLeaseTimeParses(true,60,60 * 1000,oneMinuteLease);
  assertLeaseTimeParses(true,300,300 * 1000,fiveMinuteLease);
  assertLeaseTimeParses(true,86400,86400 * 1000,oneDayLease);
  assertLeaseTimeParses(true,-2147483647,2147483649L * 1000,maxIntPlusOneLease);
  assertLeaseTimeParses(true,DhcpPacket.INFINITE_LEASE,0,infiniteLease);
}
