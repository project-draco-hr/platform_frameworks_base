{
  final ByteBuffer packet=ByteBuffer.wrap(HexEncoding.decode(("450001518d0600004011144dc0a82b01c0a82bf7" + "00430044013d9ac7" + "02010600dfc23d1f0002000000000000c0a82bf7c0a82b0100000000"+ "30766ff2a90c00000000000000000000"+ "0000000000000000000000000000000000000000000000000000000000000000"+ "0000000000000000000000000000000000000000000000000000000000000000"+ "0000000000000000000000000000000000000000000000000000000000000000"+ "0000000000000000000000000000000000000000000000000000000000000000"+ "0000000000000000000000000000000000000000000000000000000000000000"+ "0000000000000000000000000000000000000000000000000000000000000000"+ "638253633501023604c0a82b01330400000e103a04000007083b0400000c4e0104ffffff00"+ "1c04c0a82bff0304c0a82b010604c0a82b012b0f414e44524f49445f4d455445524544ff").toCharArray(),false));
  assertEquals(337,packet.limit());
  DhcpPacket offerPacket=DhcpPacket.decodeFullPacket(packet,ENCAP_L3);
  assertTrue(offerPacket instanceof DhcpOfferPacket);
  DhcpResults dhcpResults=offerPacket.toDhcpResults();
  assertDhcpResults("192.168.43.247/24","192.168.43.1","192.168.43.1",null,"192.168.43.1","ANDROID_METERED",3600,true,0,dhcpResults);
  assertTrue(dhcpResults.hasMeteredHint());
}
