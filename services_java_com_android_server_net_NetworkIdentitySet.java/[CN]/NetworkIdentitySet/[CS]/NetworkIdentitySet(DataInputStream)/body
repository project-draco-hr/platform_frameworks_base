{
  final int version=in.readInt();
switch (version) {
case VERSION_INIT:
{
      final int size=in.readInt();
      for (int i=0; i < size; i++) {
        final int ignoredVersion=in.readInt();
        final int type=in.readInt();
        final int subType=in.readInt();
        final String subscriberId=readOptionalString(in);
        add(new NetworkIdentity(type,subType,subscriberId,false));
      }
      break;
    }
case VERSION_ADD_ROAMING:
{
    final int size=in.readInt();
    for (int i=0; i < size; i++) {
      final int type=in.readInt();
      final int subType=in.readInt();
      final String subscriberId=readOptionalString(in);
      final boolean roaming=in.readBoolean();
      add(new NetworkIdentity(type,subType,subscriberId,roaming));
    }
    break;
  }
default :
{
  throw new ProtocolException("unexpected version: " + version);
}
}
}
