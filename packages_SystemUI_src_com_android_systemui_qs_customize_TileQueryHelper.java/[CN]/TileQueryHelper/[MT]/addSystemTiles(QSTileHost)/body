{
  String possible=mContext.getString(R.string.quick_settings_tiles_default) + ",hotspot,inversion,saver,work,cast,night";
  String[] possibleTiles=possible.split(",");
  final Handler qsHandler=new Handler(host.getLooper());
  final Handler mainHandler=new Handler(Looper.getMainLooper());
  for (int i=0; i < possibleTiles.length; i++) {
    final String spec=possibleTiles[i];
    final QSTile<?> tile=host.createTile(spec);
    if (tile == null) {
      continue;
    }
 else     if (!tile.isAvailable()) {
      tile.destroy();
      continue;
    }
    tile.setListening(this,true);
    tile.clearState();
    tile.refreshState();
    tile.setListening(this,false);
    qsHandler.post(new Runnable(){
      @Override public void run(){
        final QSTile.State state=tile.newTileState();
        tile.getState().copyTo(state);
        state.label=tile.getTileLabel();
        tile.destroy();
        mainHandler.post(new Runnable(){
          @Override public void run(){
            addTile(spec,null,state,true);
            mListener.onTilesChanged(mTiles);
          }
        }
);
      }
    }
);
  }
  qsHandler.post(new Runnable(){
    @Override public void run(){
      mainHandler.post(new Runnable(){
        @Override public void run(){
          new QueryTilesTask().execute(host.getTiles());
        }
      }
);
    }
  }
);
}
