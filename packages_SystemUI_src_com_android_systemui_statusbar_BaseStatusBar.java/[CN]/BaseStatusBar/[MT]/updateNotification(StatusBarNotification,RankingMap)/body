{
  if (DEBUG)   Log.d(TAG,"updateNotification(" + notification + ")");
  final String key=notification.getKey();
  Entry entry=mNotificationData.get(key);
  if (entry == null) {
    return;
  }
  Notification n=notification.getNotification();
  if (DEBUG) {
    logUpdate(entry,n);
  }
  boolean applyInPlace=shouldApplyInPlace(entry,n);
  final boolean shouldInterrupt=shouldInterrupt(notification);
  final boolean alertAgain=alertAgain(entry,n);
  entry.notification=notification;
  mGroupManager.onEntryUpdated(entry,entry.notification);
  boolean updateSuccessful=false;
  if (applyInPlace) {
    if (DEBUG)     Log.d(TAG,"reusing notification for key: " + key);
    try {
      if (entry.icon != null) {
        final StatusBarIcon ic=new StatusBarIcon(notification.getPackageName(),notification.getUser(),n.icon,n.iconLevel,n.number,n.tickerText);
        entry.icon.setNotification(n);
        if (!entry.icon.set(ic)) {
          handleNotificationError(notification,"Couldn't update icon: " + ic);
          return;
        }
      }
      updateNotificationViews(entry,notification);
      updateSuccessful=true;
    }
 catch (    RuntimeException e) {
      Log.w(TAG,"Couldn't reapply views for package " + n.contentView.getPackage(),e);
    }
  }
  if (!updateSuccessful) {
    if (DEBUG)     Log.d(TAG,"not reusing notification for key: " + key);
    final StatusBarIcon ic=new StatusBarIcon(notification.getPackageName(),notification.getUser(),n.icon,n.iconLevel,n.number,n.tickerText);
    entry.icon.setNotification(n);
    entry.icon.set(ic);
    inflateViews(entry,mStackScroller);
  }
  updateHeadsUp(key,entry,shouldInterrupt,alertAgain);
  mNotificationData.updateRanking(ranking);
  updateNotifications();
  updateNotificationVetoButton(entry.row,notification);
  boolean isForCurrentUser=isNotificationForCurrentProfiles(notification);
  if (DEBUG)   Log.d(TAG,"notification is " + (isForCurrentUser ? "" : "not ") + "for you");
  setAreThereNotifications();
}
