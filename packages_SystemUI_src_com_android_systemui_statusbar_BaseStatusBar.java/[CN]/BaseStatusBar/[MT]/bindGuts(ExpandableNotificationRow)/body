{
  row.inflateGuts();
  final StatusBarNotification sbn=row.getStatusBarNotification();
  PackageManager pmUser=getPackageManagerForUser(mContext,sbn.getUser().getIdentifier());
  row.setTag(sbn.getPackageName());
  final NotificationGuts guts=row.getGuts();
  guts.setClosedListener(this);
  final String pkg=sbn.getPackageName();
  String appname=pkg;
  Drawable pkgicon=null;
  int appUid=-1;
  try {
    final ApplicationInfo info=pmUser.getApplicationInfo(pkg,PackageManager.GET_UNINSTALLED_PACKAGES | PackageManager.GET_DISABLED_COMPONENTS);
    if (info != null) {
      appname=String.valueOf(pmUser.getApplicationLabel(info));
      pkgicon=pmUser.getApplicationIcon(info);
      appUid=info.uid;
    }
  }
 catch (  NameNotFoundException e) {
    pkgicon=pmUser.getDefaultActivityIcon();
  }
  ((ImageView)row.findViewById(R.id.app_icon)).setImageDrawable(pkgicon);
  ((TextView)row.findViewById(R.id.pkgname)).setText(appname);
  final View settingsButton=guts.findViewById(R.id.more_settings);
  if (appUid >= 0) {
    final int appUidF=appUid;
    settingsButton.setOnClickListener(new View.OnClickListener(){
      public void onClick(      View v){
        MetricsLogger.action(mContext,MetricsEvent.ACTION_NOTE_INFO);
        guts.resetFalsingCheck();
        startAppNotificationSettingsActivity(pkg,appUidF);
      }
    }
);
  }
 else {
    settingsButton.setVisibility(View.GONE);
  }
  guts.bindImportance(pmUser,sbn,row,mNotificationData.getImportance(sbn.getKey()));
  row.findViewById(R.id.done).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      if (guts.hasImportanceChanged() && isLockscreenPublicMode() && (mState == StatusBarState.KEYGUARD || mState == StatusBarState.SHADE_LOCKED)) {
        OnDismissAction dismissAction=new OnDismissAction(){
          @Override public boolean onDismiss(){
            saveImportanceCloseControls(sbn,row,guts,v);
            return true;
          }
        }
;
        onLockedNotificationImportanceChange(dismissAction);
      }
 else {
        saveImportanceCloseControls(sbn,row,guts,v);
      }
    }
  }
);
}
