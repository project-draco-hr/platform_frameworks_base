{
  int maxKeyguardNotifications=getMaxKeyguardNotifications();
  mKeyguardIconOverflowContainer.getIconsView().removeAllViews();
  int n=mNotificationData.size();
  int visibleNotifications=0;
  for (int i=n - 1; i >= 0; i--) {
    NotificationData.Entry entry=mNotificationData.get(i);
    if (mOnKeyguard) {
      entry.row.setExpansionDisabled(true);
    }
 else {
      entry.row.setExpansionDisabled(false);
      if (!entry.row.isUserLocked()) {
        boolean top=(i == n - 1);
        entry.row.setSystemExpanded(top);
      }
    }
    entry.row.setDimmed(mOnKeyguard);
    entry.row.setLocked(mOnKeyguard);
    boolean showOnKeyguard=shouldShowOnKeyguard(entry.notification);
    if (mOnKeyguard && (visibleNotifications >= maxKeyguardNotifications || !showOnKeyguard)) {
      entry.row.setVisibility(View.GONE);
      if (showOnKeyguard) {
        mKeyguardIconOverflowContainer.getIconsView().addNotification(entry);
      }
    }
 else {
      entry.row.setVisibility(View.VISIBLE);
      visibleNotifications++;
    }
  }
  if (mOnKeyguard && mKeyguardIconOverflowContainer.getIconsView().getChildCount() > 0) {
    mKeyguardIconOverflowContainer.setVisibility(View.VISIBLE);
  }
 else {
    mKeyguardIconOverflowContainer.setVisibility(View.GONE);
  }
}
