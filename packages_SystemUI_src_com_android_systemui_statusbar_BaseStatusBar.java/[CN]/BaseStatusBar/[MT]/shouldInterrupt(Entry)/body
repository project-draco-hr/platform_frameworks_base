{
  StatusBarNotification sbn=entry.notification;
  if (mNotificationData.shouldFilterOut(sbn)) {
    if (DEBUG) {
      Log.d(TAG,"Skipping HUN check for " + sbn.getKey() + " since it's filtered out.");
    }
    return false;
  }
  if (isSnoozedPackage(sbn)) {
    return false;
  }
  Notification notification=sbn.getNotification();
  boolean isNoisy=(notification.defaults & Notification.DEFAULT_SOUND) != 0 || (notification.defaults & Notification.DEFAULT_VIBRATE) != 0 || notification.sound != null || notification.vibrate != null;
  boolean isHighPriority=sbn.getScore() >= INTERRUPTION_THRESHOLD;
  boolean isFullscreen=notification.fullScreenIntent != null;
  boolean hasTicker=mHeadsUpTicker && !TextUtils.isEmpty(notification.tickerText);
  boolean isAllowed=notification.extras.getInt(Notification.EXTRA_AS_HEADS_UP,Notification.HEADS_UP_ALLOWED) != Notification.HEADS_UP_NEVER;
  boolean accessibilityForcesLaunch=isFullscreen && mAccessibilityManager.isTouchExplorationEnabled();
  boolean justLaunchedFullScreenIntent=entry.hasJustLaunchedFullScreenIntent();
  boolean interrupt=(isFullscreen || (isHighPriority && (isNoisy || hasTicker))) && isAllowed && !accessibilityForcesLaunch&& !justLaunchedFullScreenIntent&& mPowerManager.isScreenOn()&& (!mStatusBarKeyguardViewManager.isShowing() || mStatusBarKeyguardViewManager.isOccluded())&& !mStatusBarKeyguardViewManager.isInputRestricted();
  try {
    interrupt=interrupt && !mDreamManager.isDreaming();
  }
 catch (  RemoteException e) {
    Log.d(TAG,"failed to query dream manager",e);
  }
  if (DEBUG)   Log.d(TAG,"interrupt: " + interrupt);
  return interrupt;
}
