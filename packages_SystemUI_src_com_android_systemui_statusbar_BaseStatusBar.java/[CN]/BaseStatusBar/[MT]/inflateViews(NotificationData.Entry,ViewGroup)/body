{
  int minHeight=mContext.getResources().getDimensionPixelSize(R.dimen.notification_min_height);
  int maxHeight=mContext.getResources().getDimensionPixelSize(R.dimen.notification_max_height);
  StatusBarNotification sbn=entry.notification;
  RemoteViews oneU=sbn.notification.contentView;
  RemoteViews large=sbn.notification.bigContentView;
  if (oneU == null) {
    return false;
  }
  LayoutInflater inflater=(LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
  View row=inflater.inflate(R.layout.status_bar_notification_row,parent,false);
  row.setTag(sbn.pkg);
  ViewGroup.LayoutParams lp=row.getLayoutParams();
  Boolean expandable=Boolean.FALSE;
  if (large != null) {
    lp.height=ViewGroup.LayoutParams.WRAP_CONTENT;
    expandable=Boolean.TRUE;
  }
 else {
    lp.height=minHeight;
  }
  row.setLayoutParams(lp);
  row.setTag(R.id.expandable_tag,expandable);
  workAroundBadLayerDrawableOpacity(row);
  View vetoButton=updateNotificationVetoButton(row,sbn);
  vetoButton.setContentDescription(mContext.getString(R.string.accessibility_remove_notification));
  ViewGroup content=(ViewGroup)row.findViewById(R.id.content);
  ViewGroup adaptive=(ViewGroup)row.findViewById(R.id.adaptive);
  lp=content.getLayoutParams();
  if (large == null) {
    lp.height=minHeight;
  }
  content.setLayoutParams(lp);
  content.setDescendantFocusability(ViewGroup.FOCUS_BLOCK_DESCENDANTS);
  PendingIntent contentIntent=sbn.notification.contentIntent;
  if (contentIntent != null) {
    final View.OnClickListener listener=new NotificationClicker(contentIntent,sbn.pkg,sbn.tag,sbn.id);
    content.setOnClickListener(listener);
  }
 else {
    content.setOnClickListener(null);
  }
  View expandedOneU=null;
  View expandedLarge=null;
  Exception exception=null;
  try {
    expandedOneU=oneU.apply(mContext,adaptive);
    if (large != null) {
      expandedLarge=large.apply(mContext,adaptive);
    }
  }
 catch (  RuntimeException e) {
    exception=e;
  }
  if (expandedOneU == null && expandedLarge == null) {
    final String ident=sbn.pkg + "/0x" + Integer.toHexString(sbn.id);
    Slog.e(TAG,"couldn't inflate view for notification " + ident,exception);
    return false;
  }
 else {
    if (expandedOneU != null) {
      SizeAdaptiveLayout.LayoutParams params=new SizeAdaptiveLayout.LayoutParams(expandedOneU.getLayoutParams());
      params.minHeight=minHeight;
      params.maxHeight=minHeight;
      adaptive.addView(expandedOneU,params);
    }
    if (expandedLarge != null) {
      SizeAdaptiveLayout.LayoutParams params=new SizeAdaptiveLayout.LayoutParams(expandedLarge.getLayoutParams());
      params.minHeight=minHeight + 1;
      params.maxHeight=SizeAdaptiveLayout.LayoutParams.UNBOUNDED;
      adaptive.addView(expandedLarge,params);
    }
    row.setDrawingCacheEnabled(true);
  }
  applyLegacyRowBackground(sbn,content);
  entry.row=row;
  entry.content=content;
  entry.expanded=expandedOneU;
  entry.expandedLarge=expandedOneU;
  return true;
}
