{
  mWindowManager=(WindowManager)mContext.getSystemService(Context.WINDOW_SERVICE);
  mWindowManagerService=WindowManagerGlobal.getWindowManagerService();
  mDisplay=mWindowManager.getDefaultDisplay();
  mDevicePolicyManager=(DevicePolicyManager)mContext.getSystemService(Context.DEVICE_POLICY_SERVICE);
  mNotificationData=new NotificationData(this);
  mAccessibilityManager=(AccessibilityManager)mContext.getSystemService(Context.ACCESSIBILITY_SERVICE);
  mDreamManager=IDreamManager.Stub.asInterface(ServiceManager.checkService(DreamService.DREAM_SERVICE));
  mPowerManager=(PowerManager)mContext.getSystemService(Context.POWER_SERVICE);
  mContext.getContentResolver().registerContentObserver(Settings.Global.getUriFor(Settings.Global.DEVICE_PROVISIONED),true,mSettingsObserver);
  mContext.getContentResolver().registerContentObserver(Settings.Global.getUriFor(Settings.Global.ZEN_MODE),false,mSettingsObserver);
  mContext.getContentResolver().registerContentObserver(Settings.Secure.getUriFor(Settings.Secure.LOCK_SCREEN_SHOW_NOTIFICATIONS),false,mSettingsObserver,UserHandle.USER_ALL);
  mContext.getContentResolver().registerContentObserver(Settings.Secure.getUriFor(Settings.Secure.LOCK_SCREEN_ALLOW_REMOTE_INPUT),false,mSettingsObserver,UserHandle.USER_ALL);
  mContext.getContentResolver().registerContentObserver(Settings.Secure.getUriFor(Settings.Secure.LOCK_SCREEN_ALLOW_PRIVATE_NOTIFICATIONS),true,mLockscreenSettingsObserver,UserHandle.USER_ALL);
  mBarService=IStatusBarService.Stub.asInterface(ServiceManager.getService(Context.STATUS_BAR_SERVICE));
  mRecents=getComponent(Recents.class);
  final Configuration currentConfig=mContext.getResources().getConfiguration();
  mLocale=currentConfig.locale;
  mLayoutDirection=TextUtils.getLayoutDirectionFromLocale(mLocale);
  mFontScale=currentConfig.fontScale;
  mDensity=currentConfig.densityDpi;
  mUserManager=(UserManager)mContext.getSystemService(Context.USER_SERVICE);
  mCommandQueue=new CommandQueue(this);
  int[] switches=new int[9];
  ArrayList<IBinder> binders=new ArrayList<IBinder>();
  ArrayList<String> iconSlots=new ArrayList<>();
  ArrayList<StatusBarIcon> icons=new ArrayList<>();
  Rect fullscreenStackBounds=new Rect();
  Rect dockedStackBounds=new Rect();
  try {
    mBarService.registerStatusBar(mCommandQueue,iconSlots,icons,switches,binders,fullscreenStackBounds,dockedStackBounds);
  }
 catch (  RemoteException ex) {
  }
  createAndAddWindows();
  mSettingsObserver.onChange(false);
  disable(switches[0],switches[6],false);
  setSystemUiVisibility(switches[1],switches[7],switches[8],0xffffffff,fullscreenStackBounds,dockedStackBounds);
  topAppWindowChanged(switches[2] != 0);
  setImeWindowStatus(binders.get(0),switches[3],switches[4],switches[5] != 0);
  int N=iconSlots.size();
  int viewIndex=0;
  for (int i=0; i < N; i++) {
    setIcon(iconSlots.get(i),icons.get(i));
  }
  try {
    mNotificationListener.registerAsSystemService(mContext,new ComponentName(mContext.getPackageName(),getClass().getCanonicalName()),UserHandle.USER_ALL);
  }
 catch (  RemoteException e) {
    Log.e(TAG,"Unable to register notification listener",e);
  }
  if (DEBUG) {
    Log.d(TAG,String.format("init: icons=%d disabled=0x%08x lights=0x%08x menu=0x%08x imeButton=0x%08x",icons.size(),switches[0],switches[1],switches[2],switches[3]));
  }
  mCurrentUserId=ActivityManager.getCurrentUser();
  setHeadsUpUser(mCurrentUserId);
  IntentFilter filter=new IntentFilter();
  filter.addAction(Intent.ACTION_USER_SWITCHED);
  filter.addAction(Intent.ACTION_USER_ADDED);
  filter.addAction(Intent.ACTION_USER_PRESENT);
  filter.addAction(BANNER_ACTION_CANCEL);
  filter.addAction(BANNER_ACTION_SETUP);
  mContext.registerReceiver(mBroadcastReceiver,filter);
  IntentFilter allUsersFilter=new IntentFilter();
  allUsersFilter.addAction(DevicePolicyManager.ACTION_DEVICE_POLICY_MANAGER_STATE_CHANGED);
  mContext.registerReceiverAsUser(mAllUsersReceiver,UserHandle.ALL,allUsersFilter,null,null);
  updateCurrentProfilesCache();
}
