{
  final INotificationManager sINM=INotificationManager.Stub.asInterface(ServiceManager.getService(Context.NOTIFICATION_SERVICE));
  final Notification.Topic topic=sbn.getNotification().getTopic() == null ? new Notification.Topic(Notification.TOPIC_DEFAULT,mContext.getString(com.android.internal.R.string.default_notification_topic_label)) : sbn.getNotification().getTopic();
  ((TextView)row.findViewById(R.id.topic_details)).setText(topic.getLabel());
  final TextView topicSummary=((TextView)row.findViewById(R.id.summary));
  int importance=mNotificationData.getImportance(sbn.getKey());
  SeekBar seekBar=(SeekBar)row.findViewById(R.id.seekbar);
  seekBar.setMax(4);
  seekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener(){
    @Override public void onProgressChanged(    SeekBar seekBar,    int progress,    boolean fromUser){
      topicSummary.setText(getProgressSummary(progress));
      if (fromUser) {
        try {
          sINM.setTopicImportance(sbn.getPackageName(),sbn.getUid(),topic,progress);
        }
 catch (        RemoteException e) {
        }
      }
    }
    @Override public void onStartTrackingTouch(    SeekBar seekBar){
    }
    @Override public void onStopTrackingTouch(    SeekBar seekBar){
    }
    private String getProgressSummary(    int progress){
switch (progress) {
case NotificationListenerService.Ranking.IMPORTANCE_NONE:
        return mContext.getString(com.android.internal.R.string.notification_importance_blocked);
case NotificationListenerService.Ranking.IMPORTANCE_LOW:
      return mContext.getString(com.android.internal.R.string.notification_importance_low);
case NotificationListenerService.Ranking.IMPORTANCE_DEFAULT:
    return mContext.getString(com.android.internal.R.string.notification_importance_default);
case NotificationListenerService.Ranking.IMPORTANCE_HIGH:
  return mContext.getString(com.android.internal.R.string.notification_importance_high);
case NotificationListenerService.Ranking.IMPORTANCE_MAX:
return mContext.getString(com.android.internal.R.string.notification_importance_max);
default :
return "";
}
}
}
);
seekBar.setProgress(importance);
}
