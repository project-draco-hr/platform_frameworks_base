{
  if (!isDeviceProvisioned())   return;
  final boolean keyguardShowing=mStatusBarKeyguardViewManager.isShowing();
  final boolean afterKeyguardGone=intent.isActivity() && PreviewInflater.wouldLaunchResolverActivity(mContext,intent.getIntent(),mCurrentUserId);
  dismissKeyguardThenExecute(new OnDismissAction(){
    public boolean onDismiss(){
      new Thread(){
        @Override public void run(){
          try {
            if (keyguardShowing && !afterKeyguardGone) {
              ActivityManagerNative.getDefault().keyguardWaitingForActivityDrawn();
            }
            ActivityManagerNative.getDefault().resumeAppSwitches();
          }
 catch (          RemoteException e) {
          }
          try {
            intent.send();
          }
 catch (          PendingIntent.CanceledException e) {
            Log.w(TAG,"Sending intent failed: " + e);
          }
          if (intent.isActivity()) {
            overrideActivityPendingAppTransition(keyguardShowing && !afterKeyguardGone);
          }
        }
      }
.start();
      animateCollapsePanels(CommandQueue.FLAG_EXCLUDE_RECENTS_PANEL,true);
      visibilityChanged(false);
      return true;
    }
  }
,afterKeyguardGone);
}
