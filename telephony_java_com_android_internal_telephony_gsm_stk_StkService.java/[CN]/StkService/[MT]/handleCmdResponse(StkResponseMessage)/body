{
  if (!validateResponse(resMsg)) {
    return;
  }
  ResponseData resp=null;
  boolean helpRequired=false;
  CommandDetails cmdDet=resMsg.getCmdDetails();
switch (resMsg.resCode) {
case HELP_INFO_REQUIRED:
    helpRequired=true;
case OK:
case PRFRMD_WITH_PARTIAL_COMPREHENSION:
case PRFRMD_WITH_MISSING_INFO:
case PRFRMD_WITH_ADDITIONAL_EFS_READ:
case PRFRMD_ICON_NOT_DISPLAYED:
case PRFRMD_MODIFIED_BY_NAA:
case PRFRMD_LIMITED_SERVICE:
case PRFRMD_WITH_MODIFICATION:
case PRFRMD_NAA_NOT_ACTIVE:
case PRFRMD_TONE_NOT_PLAYED:
switch (AppInterface.CommandType.fromInt(cmdDet.typeOfCommand)) {
case SET_UP_MENU:
    helpRequired=resMsg.resCode == ResultCode.HELP_INFO_REQUIRED;
  sendMenuSelection(resMsg.usersMenuSelection,helpRequired);
return;
case SELECT_ITEM:
resp=new SelectItemResponseData(resMsg.usersMenuSelection);
break;
case GET_INPUT:
case GET_INKEY:
Input input=mCurrntCmd.geInput();
if (!input.yesNo) {
if (!helpRequired) {
resp=new GetInkeyInputResponseData(resMsg.usersInput,input.ucs2,input.packed);
}
}
 else {
resp=new GetInkeyInputResponseData(resMsg.usersYesNoSelection);
}
break;
case DISPLAY_TEXT:
case LAUNCH_BROWSER:
break;
case SET_UP_CALL:
mCmdIf.handleCallSetupRequestFromSim(resMsg.usersConfirm,null);
if (!resMsg.usersConfirm) {
resMsg.resCode=ResultCode.USER_NOT_ACCEPT;
}
}
break;
case NO_RESPONSE_FROM_USER:
case UICC_SESSION_TERM_BY_USER:
case BACKWARD_MOVE_BY_USER:
resp=null;
break;
default :
return;
}
sendTerminalResponse(cmdDet,resMsg.resCode,false,0,resp);
mCurrntCmd=null;
}
