{
  Parcel data=Parcel.obtain();
  data.writeInterfaceToken(IApplicationThread.descriptor);
  data.writeString(packageName);
  info.writeToParcel(data,0);
  data.writeTypedList(providers);
  if (testName == null) {
    data.writeInt(0);
  }
 else {
    data.writeInt(1);
    testName.writeToParcel(data,0);
  }
  if (profilerInfo != null) {
    data.writeInt(1);
    profilerInfo.writeToParcel(data,Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
  }
 else {
    data.writeInt(0);
  }
  data.writeBundle(testArgs);
  data.writeStrongInterface(testWatcher);
  data.writeStrongInterface(uiAutomationConnection);
  data.writeInt(debugMode);
  data.writeInt(enableBinderTracking ? 1 : 0);
  data.writeInt(openGlTrace ? 1 : 0);
  data.writeInt(restrictedBackupMode ? 1 : 0);
  data.writeInt(persistent ? 1 : 0);
  config.writeToParcel(data,0);
  compatInfo.writeToParcel(data,0);
  data.writeMap(services);
  data.writeBundle(coreSettings);
  mRemote.transact(BIND_APPLICATION_TRANSACTION,data,null,IBinder.FLAG_ONEWAY);
  data.recycle();
}
