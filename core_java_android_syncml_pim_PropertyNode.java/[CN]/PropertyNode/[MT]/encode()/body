{
  StringBuilder builder=new StringBuilder();
  if (propName.length() > 0) {
    builder.append("propName:[");
    builder.append(propName);
    builder.append("],");
  }
  int size=propGroupSet.size();
  if (size > 0) {
    Set<String> set=propGroupSet;
    builder.append("propGroup:[");
    int i=0;
    for (    String group : set) {
      builder.append(group);
      if (i < size - 1) {
        builder.append(",");
      }
      i++;
    }
    builder.append("],");
  }
  if (paramMap.size() > 0 || paramMap_TYPE.size() > 0) {
    ContentValues values=paramMap;
    builder.append("paramMap:[");
    size=paramMap.size();
    int i=0;
    for (    Entry<String,Object> entry : values.valueSet()) {
      builder.append(entry.getKey());
      builder.append("=");
      builder.append(entry.getValue().toString().replaceAll("\\\\","\\\\\\\\").replaceAll(",","\\\\,"));
      if (i < size - 1) {
        builder.append(",");
      }
      i++;
    }
    Set<String> set=paramMap_TYPE;
    size=paramMap_TYPE.size();
    if (i > 0 && size > 0) {
      builder.append(",");
    }
    i=0;
    for (    String type : set) {
      builder.append("TYPE=");
      builder.append(type.replaceAll("\\\\","\\\\\\\\").replaceAll(",","\\\\,"));
      if (i < size - 1) {
        builder.append(",");
      }
      i++;
    }
    builder.append("],");
  }
  size=propValue_vector.size();
  if (size > 0) {
    builder.append("propValue:[");
    List<String> list=propValue_vector;
    for (int i=0; i < size; i++) {
      builder.append(list.get(i).replaceAll("\\\\","\\\\\\\\").replaceAll(",","\\\\,"));
      if (i < size - 1) {
        builder.append(",");
      }
    }
    builder.append("],");
  }
  return builder.toString();
}
