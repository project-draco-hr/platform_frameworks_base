{
  if (!mHasChinaCollator || TextUtils.isEmpty(input)) {
    return null;
  }
  ArrayList<Token> tokens=new ArrayList<Token>();
  Token currentToken;
  final int inputLength=input.length();
  currentToken=getToken(input.charAt(0));
  for (int i=1; i < inputLength; i++) {
    final char character=input.charAt(i);
    Token token=getToken(character);
    if (token.type != currentToken.type) {
      currentToken.target=currentToken.target.trim();
      tokens.add(currentToken);
      currentToken=token;
    }
 else {
switch (token.type) {
case Token.ASCII:
case Token.UNKNOWN:
        currentToken.source+=token.source;
      currentToken.target+=token.target;
    break;
case Token.PINYIN:
  currentToken.source+=token.source;
currentToken.target+=" " + token.target;
break;
}
}
}
currentToken.target=currentToken.target.trim();
tokens.add(currentToken);
return tokens;
}
