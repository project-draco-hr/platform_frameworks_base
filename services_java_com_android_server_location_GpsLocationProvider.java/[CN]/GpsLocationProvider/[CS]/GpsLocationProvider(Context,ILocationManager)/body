{
  mContext=context;
  mNtpTime=NtpTrustedTime.getInstance(context);
  mLocationManager=locationManager;
  mNIHandler=new GpsNetInitiatedHandler(context);
  mLocation.setExtras(mLocationExtras);
  PowerManager powerManager=(PowerManager)mContext.getSystemService(Context.POWER_SERVICE);
  mWakeLock=powerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,WAKELOCK_KEY);
  mWakeLock.setReferenceCounted(false);
  mAlarmManager=(AlarmManager)mContext.getSystemService(Context.ALARM_SERVICE);
  mWakeupIntent=PendingIntent.getBroadcast(mContext,0,new Intent(ALARM_WAKEUP),0);
  mTimeoutIntent=PendingIntent.getBroadcast(mContext,0,new Intent(ALARM_TIMEOUT),0);
  IntentFilter intentFilter=new IntentFilter();
  intentFilter.addAction(Intents.DATA_SMS_RECEIVED_ACTION);
  intentFilter.addDataScheme("sms");
  intentFilter.addDataAuthority("localhost","7275");
  context.registerReceiver(mBroadcastReciever,intentFilter);
  intentFilter=new IntentFilter();
  intentFilter.addAction(Intents.WAP_PUSH_RECEIVED_ACTION);
  try {
    intentFilter.addDataType("application/vnd.omaloc-supl-init");
  }
 catch (  IntentFilter.MalformedMimeTypeException e) {
    Log.w(TAG,"Malformed SUPL init mime type");
  }
  context.registerReceiver(mBroadcastReciever,intentFilter);
  mConnMgr=(ConnectivityManager)context.getSystemService(Context.CONNECTIVITY_SERVICE);
  mBatteryStats=IBatteryStats.Stub.asInterface(ServiceManager.getService("batteryinfo"));
  mProperties=new Properties();
  try {
    File file=new File(PROPERTIES_FILE);
    FileInputStream stream=new FileInputStream(file);
    mProperties.load(stream);
    stream.close();
    mSuplServerHost=mProperties.getProperty("SUPL_HOST");
    String portString=mProperties.getProperty("SUPL_PORT");
    if (mSuplServerHost != null && portString != null) {
      try {
        mSuplServerPort=Integer.parseInt(portString);
      }
 catch (      NumberFormatException e) {
        Log.e(TAG,"unable to parse SUPL_PORT: " + portString);
      }
    }
    mC2KServerHost=mProperties.getProperty("C2K_HOST");
    portString=mProperties.getProperty("C2K_PORT");
    if (mC2KServerHost != null && portString != null) {
      try {
        mC2KServerPort=Integer.parseInt(portString);
      }
 catch (      NumberFormatException e) {
        Log.e(TAG,"unable to parse C2K_PORT: " + portString);
      }
    }
  }
 catch (  IOException e) {
    Log.w(TAG,"Could not open GPS configuration file " + PROPERTIES_FILE);
  }
  mThread=new GpsLocationProviderThread();
  mThread.start();
  while (true) {
    try {
      mInitializedLatch.await();
      break;
    }
 catch (    InterruptedException e) {
      Thread.currentThread().interrupt();
    }
  }
}
