{
  mContext=context;
  mNtpTime=NtpTrustedTime.getInstance(context);
  mILocationManager=ilocationManager;
  mNIHandler=new GpsNetInitiatedHandler(context);
  mLocation.setExtras(mLocationExtras);
  PowerManager powerManager=(PowerManager)mContext.getSystemService(Context.POWER_SERVICE);
  mWakeLock=powerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,WAKELOCK_KEY);
  mWakeLock.setReferenceCounted(true);
  mAlarmManager=(AlarmManager)mContext.getSystemService(Context.ALARM_SERVICE);
  mWakeupIntent=PendingIntent.getBroadcast(mContext,0,new Intent(ALARM_WAKEUP),0);
  mTimeoutIntent=PendingIntent.getBroadcast(mContext,0,new Intent(ALARM_TIMEOUT),0);
  mConnMgr=(ConnectivityManager)context.getSystemService(Context.CONNECTIVITY_SERVICE);
  mAppOpsService=IAppOpsService.Stub.asInterface(ServiceManager.getService(Context.APP_OPS_SERVICE));
  mBatteryStats=IBatteryStats.Stub.asInterface(ServiceManager.getService(BatteryStats.SERVICE_NAME));
  mProperties=new Properties();
  try {
    File file=new File(PROPERTIES_FILE);
    FileInputStream stream=new FileInputStream(file);
    mProperties.load(stream);
    stream.close();
    mSuplServerHost=mProperties.getProperty("SUPL_HOST");
    String portString=mProperties.getProperty("SUPL_PORT");
    if (mSuplServerHost != null && portString != null) {
      try {
        mSuplServerPort=Integer.parseInt(portString);
      }
 catch (      NumberFormatException e) {
        Log.e(TAG,"unable to parse SUPL_PORT: " + portString);
      }
    }
    mC2KServerHost=mProperties.getProperty("C2K_HOST");
    portString=mProperties.getProperty("C2K_PORT");
    if (mC2KServerHost != null && portString != null) {
      try {
        mC2KServerPort=Integer.parseInt(portString);
      }
 catch (      NumberFormatException e) {
        Log.e(TAG,"unable to parse C2K_PORT: " + portString);
      }
    }
  }
 catch (  IOException e) {
    Log.w(TAG,"Could not open GPS configuration file " + PROPERTIES_FILE);
  }
  mHandler=new ProviderHandler(looper);
  listenForBroadcasts();
  mHandler.post(new Runnable(){
    @Override public void run(){
      LocationManager locManager=(LocationManager)mContext.getSystemService(Context.LOCATION_SERVICE);
      locManager.requestLocationUpdates(LocationManager.PASSIVE_PROVIDER,0,0,new NetworkLocationListener(),mHandler.getLooper());
    }
  }
);
}
