{
switch (status) {
case GPS_REQUEST_AGPS_DATA_CONN:
    if (DEBUG)     Log.d(TAG,"GPS_REQUEST_AGPS_DATA_CONN");
  mAGpsDataConnectionState=AGPS_DATA_CONNECTION_OPENING;
int result=mConnMgr.startUsingNetworkFeature(ConnectivityManager.TYPE_MOBILE,Phone.FEATURE_ENABLE_SUPL);
if (result == Phone.APN_ALREADY_ACTIVE) {
if (mAGpsApn != null) {
  native_agps_data_conn_open(mAGpsApn);
  mAGpsDataConnectionState=AGPS_DATA_CONNECTION_OPEN;
}
 else {
  Log.e(TAG,"mAGpsApn not set when receiving Phone.APN_ALREADY_ACTIVE");
  mAGpsDataConnectionState=AGPS_DATA_CONNECTION_CLOSED;
  native_agps_data_conn_failed();
}
}
 else if (result == Phone.APN_REQUEST_STARTED) {
}
 else {
mAGpsDataConnectionState=AGPS_DATA_CONNECTION_CLOSED;
native_agps_data_conn_failed();
}
break;
case GPS_RELEASE_AGPS_DATA_CONN:
if (DEBUG) Log.d(TAG,"GPS_RELEASE_AGPS_DATA_CONN");
if (mAGpsDataConnectionState != AGPS_DATA_CONNECTION_CLOSED) {
mConnMgr.stopUsingNetworkFeature(ConnectivityManager.TYPE_MOBILE,Phone.FEATURE_ENABLE_SUPL);
native_agps_data_conn_closed();
mAGpsDataConnectionState=AGPS_DATA_CONNECTION_CLOSED;
}
break;
case GPS_AGPS_DATA_CONNECTED:
if (DEBUG) Log.d(TAG,"GPS_AGPS_DATA_CONNECTED");
break;
case GPS_AGPS_DATA_CONN_DONE:
if (DEBUG) Log.d(TAG,"GPS_AGPS_DATA_CONN_DONE");
break;
case GPS_AGPS_DATA_CONN_FAILED:
if (DEBUG) Log.d(TAG,"GPS_AGPS_DATA_CONN_FAILED");
break;
}
}
