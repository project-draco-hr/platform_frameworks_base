{
  int sz=data.length();
  int septetCount;
  if (maxSeptets == -1) {
    septetCount=countGsmSeptets(data,true);
  }
 else {
    septetCount=maxSeptets;
  }
  if (septetCount > 0xff) {
    throw new EncodeException("Payload cannot exceed " + Short.MAX_VALUE + " septets");
  }
  byte[] ret=new byte[1 + (((septetCount * 7) + 7) / 8)];
  int bitOffset=startingBitOffset;
  int septets=startingBitOffset / 7;
  for (int i=dataOffset; i < sz && septets < septetCount; i++, bitOffset+=7) {
    char c=data.charAt(i);
    int v=GsmAlphabet.charToGsm(c,throwException);
    if (v == GSM_EXTENDED_ESCAPE) {
      v=GsmAlphabet.charToGsmExtended(c);
      packSmsChar(ret,bitOffset,GSM_EXTENDED_ESCAPE);
      bitOffset+=7;
      septets++;
    }
    packSmsChar(ret,bitOffset,v);
    septets++;
  }
  ret[0]=(byte)septets;
  return ret;
}
